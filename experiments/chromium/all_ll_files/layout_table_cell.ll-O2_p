; ModuleID = '../../third_party/blink/renderer/core/layout/layout_table_cell.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_table_cell.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::LayoutTableCell" = type { %"class.blink::LayoutBlockFlow", %"class.blink::LayoutNGTableCellInterface", i32, %"class.std::__1::unique_ptr.1797", i32, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1756", %"class.std::__1::unique_ptr.1766" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1712, %"class.WTF::Vector.1713", %"class.std::__1::unique_ptr.1718", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1739, %"class.blink::Persistent.1740" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1869 }
%class.scoped_refptr.1869 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1870", %"class.WTF::Vector.630", %"class.WTF::Vector.1872", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1870" = type { %"class.base::RefCounted.1871" }
%"class.base::RefCounted.1871" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1872" = type { %"class.WTF::VectorBuffer.1873" }
%"class.WTF::VectorBuffer.1873" = type { %"class.WTF::VectorBufferBase.1874" }
%"class.WTF::VectorBufferBase.1874" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1875 }
%union.anon.1875 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1855" }
%"class.blink::Member.1855" = type { %"class.blink::MemberBase.1856" }
%"class.blink::MemberBase.1856" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1857" }
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1883 }
%class.scoped_refptr.1883 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1893" }
%"class.blink::Member.1893" = type { %"class.blink::MemberBase.1894" }
%"class.blink::MemberBase.1894" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1884", %"class.WTF::Vector.1884" }
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %class.scoped_refptr.1883*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1859" }
%"class.WTF::Vector.1859" = type { %"class.WTF::VectorBuffer.1860" }
%"class.WTF::VectorBuffer.1860" = type { %"class.WTF::VectorBufferBase.1861" }
%"class.WTF::VectorBufferBase.1861" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1864", %"class.absl::optional.1864", %"class.absl::optional.1864" }
%"class.absl::optional.1864" = type { %"class.absl::optional_internal::optional_data.1865" }
%"class.absl::optional_internal::optional_data.1865" = type { %"class.absl::optional_internal::optional_data_base.1866" }
%"class.absl::optional_internal::optional_data_base.1866" = type { %"class.absl::optional_internal::optional_data_dtor_base.1867" }
%"class.absl::optional_internal::optional_data_dtor_base.1867" = type { i8, %union.anon.1868 }
%union.anon.1868 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880", [32 x i8] }
%"class.WTF::VectorBufferBase.1880" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1623", %"class.blink::Persistent.1629", %"class.std::__1::unique_ptr.1670", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1686" }
%"class.std::__1::unique_ptr.1623" = type { %"class.std::__1::__compressed_pair.1624" }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.1625" }
%"struct.std::__1::__compressed_pair_elem.1625" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1629" = type { %"class.blink::PersistentBase.1630" }
%"class.blink::PersistentBase.1630" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1647", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1665" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1633", %"class.blink::Member.1635", %"class.blink::Member.1637", %"class.blink::Member.1639", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1641", %"class.blink::Member.1643", %"class.blink::Member.1643", i8, [7 x i8] }>
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1645", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1710", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1710" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1711", { i64, i64 } }
%"class.blink::WeakMember.1711" = type { %"class.blink::MemberBase.1644" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1645", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1650", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1655" }
%"class.WTF::HashMap.1650" = type { %"class.WTF::HashTable.1651" }
%"class.WTF::HashTable.1651" = type <{ %"struct.WTF::KeyValuePair.1654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1654" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1655" = type { %"class.WTF::VectorBuffer.1656" }
%"class.WTF::VectorBuffer.1656" = type { %"class.WTF::VectorBufferBase.1657" }
%"class.WTF::VectorBufferBase.1657" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1663" }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1663" }
%"class.absl::optional.1665" = type { %"class.absl::optional_internal::optional_data.1666" }
%"class.absl::optional_internal::optional_data.1666" = type { %"class.absl::optional_internal::optional_data_base.1667" }
%"class.absl::optional_internal::optional_data_base.1667" = type { %"class.absl::optional_internal::optional_data_dtor_base.1668" }
%"class.absl::optional_internal::optional_data_dtor_base.1668" = type { i8, %union.anon.1669 }
%union.anon.1669 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.1670" = type { %"class.std::__1::__compressed_pair.1671" }
%"class.std::__1::__compressed_pair.1671" = type { %"struct.std::__1::__compressed_pair_elem.1672" }
%"struct.std::__1::__compressed_pair_elem.1672" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1673", %"class.WTF::Vector.1673", %"class.WTF::HashMap.1678", %"class.WTF::Vector.1673", i8, [7 x i8] }>
%"class.WTF::HashMap.1678" = type { %"class.WTF::HashTable.1679" }
%"class.WTF::HashTable.1679" = type <{ %"struct.WTF::KeyValuePair.1682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1682" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1673" }
%"class.WTF::Vector.1673" = type { %"class.WTF::VectorBuffer.1674" }
%"class.WTF::VectorBuffer.1674" = type { %"class.WTF::VectorBufferBase.1675" }
%"class.WTF::VectorBufferBase.1675" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1689", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1695", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1701", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1689" = type { %"class.std::__1::__compressed_pair.1690" }
%"class.std::__1::__compressed_pair.1690" = type { %"struct.std::__1::__compressed_pair_elem.1691" }
%"struct.std::__1::__compressed_pair_elem.1691" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1701" = type { %"class.blink::PersistentBase.1702" }
%"class.blink::PersistentBase.1702" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1712 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715", [8 x i8] }
%"class.WTF::VectorBufferBase.1715" = type { %class.scoped_refptr.1712*, i32, i32 }
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1721", %"class.absl::optional.1726", %"class.absl::optional.1731" }
%"class.absl::optional.1721" = type { %"class.absl::optional_internal::optional_data.1722" }
%"class.absl::optional_internal::optional_data.1722" = type { %"class.absl::optional_internal::optional_data_base.1723" }
%"class.absl::optional_internal::optional_data_base.1723" = type { %"class.absl::optional_internal::optional_data_dtor_base.1724" }
%"class.absl::optional_internal::optional_data_dtor_base.1724" = type { i8, %union.anon.1725 }
%union.anon.1725 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1726" = type { %"class.absl::optional_internal::optional_data.1727" }
%"class.absl::optional_internal::optional_data.1727" = type { %"class.absl::optional_internal::optional_data_base.1728" }
%"class.absl::optional_internal::optional_data_base.1728" = type { %"class.absl::optional_internal::optional_data_dtor_base.1729" }
%"class.absl::optional_internal::optional_data_dtor_base.1729" = type { i8, [3 x i8], %union.anon.1730 }
%union.anon.1730 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1731" = type { %"class.absl::optional_internal::optional_data.1732" }
%"class.absl::optional_internal::optional_data.1732" = type { %"class.absl::optional_internal::optional_data_base.1733" }
%"class.absl::optional_internal::optional_data_base.1733" = type { %"class.absl::optional_internal::optional_data_dtor_base.1734" }
%"class.absl::optional_internal::optional_data_dtor_base.1734" = type { i8, %union.anon.1735 }
%union.anon.1735 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1739 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1740" = type { %"class.blink::PersistentBase.1741" }
%"class.blink::PersistentBase.1741" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1744", %"struct.blink::PhysicalRect", %"class.blink::Member.1754" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.WTF::HashSet.1747"* }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1756" = type { %"class.blink::PersistentBase.1757" }
%"class.blink::PersistentBase.1757" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1760", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1760" = type { %"class.std::__1::__compressed_pair.1761" }
%"class.std::__1::__compressed_pair.1761" = type { %"struct.std::__1::__compressed_pair_elem.1762" }
%"struct.std::__1::__compressed_pair_elem.1762" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1769", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1769" = type { %"class.WTF::HashTable.1772", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1772" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1775", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1778, %"class.std::__1::unique_ptr.1779", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1778 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1803", i16, %class.scoped_refptr.1778 }
%"class.WTF::ThreadSafeRefCounted.1803" = type { %"class.base::RefCountedThreadSafe.1804" }
%"class.base::RefCountedThreadSafe.1804" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1779" = type { %"class.std::__1::__compressed_pair.1780" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.1781" }
%"struct.std::__1::__compressed_pair_elem.1781" = type { %"class.WTF::Vector.1782"* }
%"class.WTF::Vector.1782" = type { %"class.WTF::VectorBuffer.1783" }
%"class.WTF::VectorBuffer.1783" = type { %"class.WTF::VectorBufferBase.1784" }
%"class.WTF::VectorBufferBase.1784" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1793, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1793 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::CollapsedBorderValues"* }
%"class.blink::CollapsedBorderValues" = type { [4 x %"class.blink::CollapsedBorderValue"], %"class.blink::LayoutRect" }
%"class.blink::CollapsedBorderValue" = type { %"class.blink::Color", i32 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::HTMLTableCellElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::HTMLTablePartElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::LayoutTableSection" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableSectionInterface", %"class.WTF::Vector.1805", %"class.WTF::Vector.1820", %"class.WTF::Vector.1820", i8, [3 x i8], i32, i32, i8, [3 x i8], %"class.WTF::HashSet.1825", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::LayoutTableBoxComponent.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i32, %"class.blink::CullRect" }>
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.WTF::Vector.1805" = type { %"class.WTF::VectorBuffer.1806" }
%"class.WTF::VectorBuffer.1806" = type { %"class.WTF::VectorBufferBase.1807" }
%"class.WTF::VectorBufferBase.1807" = type { %"struct.blink::LayoutTableSection::TableGridRow"*, i32, i32 }
%"struct.blink::LayoutTableSection::TableGridRow" = type <{ %"class.WTF::Vector.1808", %"class.blink::LayoutTableRow"*, %"class.blink::LayoutUnit", %"class.blink::Length", [4 x i8] }>
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"class.blink::TableGridCell"*, i32, i32 }
%"class.blink::TableGridCell" = type <{ %"class.WTF::Vector.1811", i8, [7 x i8] }>
%"class.WTF::Vector.1811" = type { %"class.WTF::VectorBuffer.1812" }
%"class.WTF::VectorBuffer.1812" = type { %"class.WTF::VectorBufferBase.1813", [8 x i8] }
%"class.WTF::VectorBufferBase.1813" = type { %"class.blink::LayoutTableCell"**, i32, i32 }
%"class.blink::LayoutTableRow" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableRowInterface", i32, [4 x i8] }>
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.WTF::Vector.1820" = type { %"class.WTF::VectorBuffer.1821" }
%"class.WTF::VectorBuffer.1821" = type { %"class.WTF::VectorBufferBase.1822" }
%"class.WTF::VectorBufferBase.1822" = type { i32*, i32, i32 }
%"class.WTF::HashSet.1825" = type { %"class.WTF::HashTable.1826" }
%"class.WTF::HashTable.1826" = type <{ %"class.blink::LayoutTableCell"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutTable" = type { %"class.blink::LayoutBlock.base", %"class.blink::LayoutNGTableInterface", %"class.WTF::Vector.1829", %"class.WTF::Vector.1820", %"class.WTF::Vector.1834", %"class.WTF::Vector.1839", %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.std::__1::unique_ptr.1844", i16, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.WTF::Vector.1829" = type { %"class.WTF::VectorBuffer.1830" }
%"class.WTF::VectorBuffer.1830" = type { %"class.WTF::VectorBufferBase.1831" }
%"class.WTF::VectorBufferBase.1831" = type { %"struct.blink::LayoutTable::ColumnStruct"*, i32, i32 }
%"struct.blink::LayoutTable::ColumnStruct" = type { i32 }
%"class.WTF::Vector.1834" = type { %"class.WTF::VectorBuffer.1835" }
%"class.WTF::VectorBuffer.1835" = type { %"class.WTF::VectorBufferBase.1836" }
%"class.WTF::VectorBufferBase.1836" = type { %"class.blink::LayoutTableCaption"**, i32, i32 }
%"class.blink::LayoutTableCaption" = type opaque
%"class.WTF::Vector.1839" = type { %"class.WTF::VectorBuffer.1840" }
%"class.WTF::VectorBuffer.1840" = type { %"class.WTF::VectorBufferBase.1841" }
%"class.WTF::VectorBufferBase.1841" = type { %"class.blink::LayoutTableCol"**, i32, i32 }
%"class.blink::LayoutTableCol" = type { %"class.blink::LayoutTableBoxComponent.base", i32 }
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"class.blink::TableLayoutAlgorithm"* }
%"class.blink::TableLayoutAlgorithm" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%class.anon = type { %"class.blink::LayoutObject"*, i8** }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.1921" }
%"class.WTF::Vector.1921" = type { %"class.WTF::VectorBuffer.1922" }
%"class.WTF::VectorBuffer.1922" = type { %"class.WTF::VectorBufferBase.1923", [64 x i8] }
%"class.WTF::VectorBufferBase.1923" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"struct.blink::LayoutTable::ColAndColGroup" = type <{ %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"*, i8, i8, [6 x i8] }>
%"class.blink::LayoutAnalyzer::Scope" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::StyleDifference" = type { [3 x i8], i8 }
%"class.blink::PhysicalToLogical.1929" = type { %"class.blink::WritingDirectionMode", %"class.blink::BorderValue", %"class.blink::BorderValue", %"class.blink::BorderValue", %"class.blink::BorderValue" }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.blink::BorderValue" = type { %"class.blink::StyleColor", i32 }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::LayoutTableBoxComponent" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i32, %"class.blink::CullRect", [4 x i8] }>
%"struct.blink::PaintInfo" = type opaque
%"class.blink::TableCellPainter" = type { %"class.blink::LayoutTableCell"* }
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::TableCellPaintInvalidator" = type { %"class.blink::LayoutTableCell"*, %"struct.blink::PaintInvalidatorContext"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1643", i8, %"class.blink::Member.1851", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::HeapLinkedHashSet"* }
%"class.blink::HeapLinkedHashSet" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.WTF::Vector.1853" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.1689", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.WTF::Vector.1854" = type opaque
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"struct.blink::NGInlineNodeData" = type opaque
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1908" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1908" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1895", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.1895" = type { %"class.std::__1::__vector_base.1896" }
%"class.std::__1::__vector_base.1896" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1903" }
%"class.std::__1::__compressed_pair.1903" = type { %"struct.std::__1::__compressed_pair_elem.1904" }
%"struct.std::__1::__compressed_pair_elem.1904" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1897", i64, i64 }
%"class.std::__1::unique_ptr.1897" = type { %"class.std::__1::__compressed_pair.1898" }
%"class.std::__1::__compressed_pair.1898" = type { %"struct.std::__1::__compressed_pair_elem.1899" }
%"struct.std::__1::__compressed_pair_elem.1899" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZNK5blink15LayoutTableCell7ColSpanEv = comdat any

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv = comdat any

$_ZNK5blink15LayoutTableCell22IntrinsicPaddingBeforeEv = comdat any

$_ZNK5blink15LayoutTableCell21IntrinsicPaddingAfterEv = comdat any

$_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv = comdat any

$_ZNK5blink15LayoutTableCell8RowIndexEv = comdat any

$_ZNK5blink9LayoutBox20ContentLogicalHeightEv = comdat any

$_ZNK5blink15LayoutTableCell19AbsoluteColumnIndexEv = comdat any

$_ZNK5blink21CollapsedBorderValues9EndBorderEv = comdat any

$_ZNK5blink21CollapsedBorderValues11StartBorderEv = comdat any

$_ZNK5blink21CollapsedBorderValues11AfterBorderEv = comdat any

$_ZNK5blink21CollapsedBorderValues12BeforeBorderEv = comdat any

$_ZNK5blink15LayoutTableCell15ResolvedRowSpanEv = comdat any

$_ZNK5blink21CollapsedBorderValues14VisuallyEqualsERKS0_ = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZN5blink15LayoutTableCellD2Ev = comdat any

$_ZN5blink15LayoutTableCellD0Ev = comdat any

$_ZNK5blink15LayoutTableCell7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink15LayoutTableCell28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink15LayoutTableCell8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink15LayoutTableCell17LocationContainerEv = comdat any

$_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink15LayoutTableCell27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv = comdat any

$_ZNK5blink15LayoutTableCell17ToLayoutTableCellEv = comdat any

$_ZNK5blink15LayoutTableCell14ToLayoutObjectEv = comdat any

$_ZN5blink15LayoutTableCell21ToMutableLayoutObjectEv = comdat any

$_ZNK5blink15LayoutTableCell14TableInterfaceEv = comdat any

$_ZNK5blink15LayoutTableCell17NextCellInterfaceEv = comdat any

$_ZNK5blink15LayoutTableCell21PreviousCellInterfaceEv = comdat any

$_ZNK5blink15LayoutTableCell12RowInterfaceEv = comdat any

$_ZNK5blink15LayoutTableCell16SectionInterfaceEv = comdat any

$_ZThn8_N5blink15LayoutTableCellD1Ev = comdat any

$_ZThn8_N5blink15LayoutTableCellD0Ev = comdat any

$_ZThn280_NK5blink15LayoutTableCell17ToLayoutTableCellEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell14ToLayoutObjectEv = comdat any

$_ZThn280_N5blink15LayoutTableCell21ToMutableLayoutObjectEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell14TableInterfaceEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell22StyleOrColLogicalWidthEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell22IntrinsicPaddingBeforeEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell21IntrinsicPaddingAfterEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell8RowIndexEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell15ResolvedRowSpanEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell19AbsoluteColumnIndexEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell7ColSpanEv = comdat any

$_ZTchn280_h280_NK5blink15LayoutTableCell17NextCellInterfaceEv = comdat any

$_ZTchn280_h280_NK5blink15LayoutTableCell21PreviousCellInterfaceEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell12RowInterfaceEv = comdat any

$_ZThn280_NK5blink15LayoutTableCell16SectionInterfaceEv = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

@_ZTVN5blink15LayoutTableCellE = hidden unnamed_addr constant { [239 x i8*], [7 x i8*], [18 x i8*] } { [239 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZN5blink15LayoutTableCellD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZN5blink15LayoutTableCellD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZN5blink15LayoutTableCell12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1853"*, i32)* @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1854"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink15LayoutTableCell15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i8)* @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableCell"*, i32)* @_ZNK5blink15LayoutTableCell8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutTableCell14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZN5blink15LayoutTableCell21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink15LayoutTableCell27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i32, i1, i32, i32)* @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableCell"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink15LayoutTableCell33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1853"*, i32)* @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1853"*)* @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZN5blink15LayoutTableCell18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink15LayoutTableCell28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink15LayoutTableCell9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i32)* @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutObject"*)* @_ZNK5blink15LayoutTableCell32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i1)* @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*, i1, i1, i32)* @_ZN5blink15LayoutTableCell17ScrollbarsChangedEbbNS_11LayoutBlock22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*, i1)* @_ZN5blink15LayoutTableCell21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, i1)* @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE to i8*), i8* bitcast (%"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i1)* @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell7ColSpanEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell15ResolvedRowSpanEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZN5blink15LayoutTableCell23ColSpanOrRowSpanChangedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell19AbsoluteColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell8RowIndexEv to i8*), i8* bitcast (void (%"class.blink::Length"*, %"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell22IntrinsicPaddingBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell21IntrinsicPaddingAfterEv to i8*), i8* bitcast (%"class.blink::LayoutTableCell"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell17ToLayoutTableCellEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell14ToLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableCell"*)* @_ZN5blink15LayoutTableCell21ToMutableLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell14TableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutTableCell"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell17NextCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutTableCell"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell21PreviousCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell12RowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTableCell"*)* @_ZNK5blink15LayoutTableCell16SectionInterfaceEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZThn8_N5blink15LayoutTableCellD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZThn8_N5blink15LayoutTableCellD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)], [18 x i8*] [i8* inttoptr (i64 -280 to i8*), i8* null, i8* bitcast (%"class.blink::LayoutTableCell"* (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell17ToLayoutTableCellEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell14ToLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableCell"*)* @_ZThn280_N5blink15LayoutTableCell21ToMutableLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell14TableInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableCell"*)* @_ZThn280_N5blink15LayoutTableCell23ColSpanOrRowSpanChangedEv to i8*), i8* bitcast (void (%"class.blink::Length"*, %"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell22StyleOrColLogicalWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell22IntrinsicPaddingBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell21IntrinsicPaddingAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell15ResolvedRowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell19AbsoluteColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell7ColSpanEv to i8*), i8* bitcast (%"class.blink::LayoutTableCell"* (%"class.blink::LayoutTableCell"*)* @_ZTchn280_h280_NK5blink15LayoutTableCell17NextCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutTableCell"* (%"class.blink::LayoutTableCell"*)* @_ZTchn280_h280_NK5blink15LayoutTableCell21PreviousCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell12RowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTableCell"*)* @_ZThn280_NK5blink15LayoutTableCell16SectionInterfaceEv to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason13kTableChangedE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason17kAttributeChangedE = external constant [0 x i8], align 1
@_ZN5blink10html_names11kNowrapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26layout_invalidation_reason15kPaddingChangedE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason12kSizeChangedE = external constant [0 x i8], align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase38is_visibility_collapse_column_enabled_E = external local_unnamed_addr global i8, align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"LayoutTableCell\00", align 1
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1

@_ZN5blink15LayoutTableCellC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::LayoutTableCell"*, %"class.blink::Element"*), void (%"class.blink::LayoutTableCell"*, %"class.blink::Element"*)* @_ZN5blink15LayoutTableCellC2EPNS_7ElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCellC2EPNS_7ElementE(%"class.blink::LayoutTableCell"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"* %3, %"class.blink::ContainerNode"* %4) #12
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 1, i32 0
  %6 = bitcast %"class.blink::LayoutTableCell"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 201326592
  %10 = or i32 %9, 33554431
  store i32 %10, i32* %7, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::unique_ptr.1797"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink15LayoutTableCell24UpdateColAndRowSpanFlagsEv(%"class.blink::LayoutTableCell"* %0)
  ret void
}

declare void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"*, %"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell24UpdateColAndRowSpanFlagsEv(%"class.blink::LayoutTableCell"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %42

16:                                               ; preds = %11
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.318"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %35, label %28

28:                                               ; preds = %16
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %24, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %28, %16
  %36 = bitcast %"class.blink::Node"* %9 to %"class.blink::HTMLTableCellElement"*
  %37 = tail call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %36) #12
  %38 = icmp ne i32 %37, 1
  %39 = zext i1 %38 to i32
  %40 = shl nuw nsw i32 %39, 26
  %41 = load i96, i96* %3, align 4
  br label %42

42:                                               ; preds = %35, %28, %11, %1, %7
  %43 = phi i96 [ %4, %7 ], [ %4, %1 ], [ %41, %35 ], [ %4, %28 ], [ %4, %11 ]
  %44 = phi i32 [ 0, %7 ], [ 0, %1 ], [ %40, %35 ], [ 0, %28 ], [ 0, %11 ]
  %45 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, -67108865
  %48 = or i32 %47, %44
  store i32 %48, i32* %45, align 8
  %49 = and i96 %43, 16777216
  %50 = icmp eq i96 %49, 0
  br i1 %50, label %51, label %86

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %86, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %86

60:                                               ; preds = %55
  %61 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %62 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 2
  %65 = bitcast %"class.blink::Member.318"* %64 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %68, %70
  br i1 %71, label %79, label %72

72:                                               ; preds = %60
  %73 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %74 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %68, %77
  br i1 %78, label %79, label %86

79:                                               ; preds = %72, %60
  %80 = bitcast %"class.blink::Node"* %53 to %"class.blink::HTMLTableCellElement"*
  %81 = tail call i32 @_ZNK5blink20HTMLTableCellElement7rowSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %80) #12
  %82 = icmp ne i32 %81, 1
  %83 = zext i1 %82 to i32
  %84 = shl nuw nsw i32 %83, 27
  %85 = load i32, i32* %45, align 8
  br label %86

86:                                               ; preds = %79, %72, %55, %42, %51
  %87 = phi i32 [ %48, %51 ], [ %48, %42 ], [ %85, %79 ], [ %48, %72 ], [ %48, %55 ]
  %88 = phi i32 [ 0, %51 ], [ 0, %42 ], [ %84, %79 ], [ 0, %72 ], [ 0, %55 ]
  %89 = and i32 %87, -134217729
  %90 = or i32 %89, %88
  store i32 %90, i32* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell21WillBeRemovedFromTreeEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"* %2) #12
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 7
  %6 = bitcast %"class.blink::LayoutObject"** %5 to %"class.blink::LayoutTableSection"**
  %7 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %6, align 8
  tail call void @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"* %7) #12
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = bitcast %"class.blink::LayoutObject"** %11 to %"class.blink::LayoutTable"**
  %13 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %15 = bitcast %"class.blink::ComputedStyle"** %14 to %"class.blink::ComputedStyleBase"**
  %16 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %16, i64 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 81129638414606681695789005144064
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %22, label %40

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %24 = bitcast %"class.blink::LayoutObject"** %23 to %"class.blink::LayoutTableCell"**
  %25 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutTableCell"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null)
  %29 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %24, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %30, i32 1) #12
  br label %31

31:                                               ; preds = %22, %27
  %32 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %33 = bitcast %"class.blink::LayoutObject"** %32 to %"class.blink::LayoutTableCell"**
  %34 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutTableCell"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %37, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null)
  %38 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %33, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %39, i32 1) #12
  br label %40

40:                                               ; preds = %36, %31, %1
  ret void
}

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !2

23:                                               ; preds = %19
  %24 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #12
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %40

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %11
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.318"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %35, label %28

28:                                               ; preds = %16
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %24, %33
  br i1 %34, label %35, label %40

35:                                               ; preds = %28, %16
  %36 = bitcast %"class.blink::Node"* %9 to %"class.blink::HTMLTableCellElement"*
  %37 = tail call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %36) #12
  %38 = icmp ult i32 %37, 33554430
  %39 = select i1 %38, i32 %37, i32 33554430
  br label %40

40:                                               ; preds = %1, %11, %7, %28, %35
  %41 = phi i32 [ %39, %35 ], [ 1, %28 ], [ 1, %7 ], [ 1, %11 ], [ 1, %1 ]
  ret i32 %41
}

declare i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %40

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %11
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.318"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %35, label %28

28:                                               ; preds = %16
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %24, %33
  br i1 %34, label %35, label %40

35:                                               ; preds = %28, %16
  %36 = bitcast %"class.blink::Node"* %9 to %"class.blink::HTMLTableCellElement"*
  %37 = tail call i32 @_ZNK5blink20HTMLTableCellElement7rowSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %36) #12
  %38 = icmp ult i32 %37, 2147483646
  %39 = select i1 %38, i32 %37, i32 2147483646
  br label %40

40:                                               ; preds = %1, %11, %7, %28, %35
  %41 = phi i32 [ %39, %35 ], [ 1, %28 ], [ 1, %7 ], [ 1, %11 ], [ 1, %1 ]
  ret i32 %41
}

declare i32 @_ZNK5blink20HTMLTableCellElement7rowSpanEv(%"class.blink::HTMLTableCellElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell23ColSpanOrRowSpanChangedEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink15LayoutTableCell24UpdateColAndRowSpanFlagsEv(%"class.blink::LayoutTableCell"* %0)
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #12
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %2, i32 1) #12
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 7
  %8 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutTableSection"**
  %9 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutTableSection"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %6
  tail call void @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"* nonnull %9) #12
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 7
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = bitcast %"class.blink::LayoutObject"** %15 to %"class.blink::LayoutTable"**
  %17 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutTable"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %21 = bitcast %"class.blink::ComputedStyle"** %20 to %"class.blink::ComputedStyleBase"**
  %22 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %22, i64 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 81129638414606681695789005144064
  %27 = icmp eq i160 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = or i32 %30, -2147483648
  store i32 %31, i32* %29, align 8
  br label %32

32:                                               ; preds = %11, %6, %1, %19, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn280_N5blink15LayoutTableCell23ColSpanOrRowSpanChangedEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = bitcast %class.scoped_refptr* %2 to %"class.blink::LayoutTableCell"*
  tail call void @_ZN5blink15LayoutTableCell23ColSpanOrRowSpanChangedEv(%"class.blink::LayoutTableCell"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutTableCell23LogicalWidthFromColumnsEPNS_14LayoutTableColERKNS_6LengthE(%"class.blink::Length"* noalias sret, %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCol"*, %"class.blink::Length"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 67108864
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %49, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 16777216
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %49

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %49, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 48
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %49

24:                                               ; preds = %19
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  br i1 %35, label %43, label %36

36:                                               ; preds = %24
  %37 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %32, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %36, %24
  %44 = bitcast %"class.blink::Node"* %17 to %"class.blink::HTMLTableCellElement"*
  %45 = tail call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %44) #12
  %46 = icmp ult i32 %45, 33554430
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %129, label %49

49:                                               ; preds = %9, %19, %15, %36, %43, %4, %47
  %50 = phi i32 [ %45, %47 ], [ 1, %9 ], [ 1, %19 ], [ 1, %15 ], [ 1, %36 ], [ 33554430, %43 ], [ 1, %4 ]
  br label %54

51:                                               ; preds = %100
  %52 = add nuw nsw i32 %55, 1
  %53 = icmp eq i32 %55, %50
  br i1 %53, label %107, label %54

54:                                               ; preds = %49, %51
  %55 = phi i32 [ %52, %51 ], [ 1, %49 ]
  %56 = phi i32 [ %104, %51 ], [ 0, %49 ]
  %57 = phi %"class.blink::LayoutTableCol"* [ %105, %51 ], [ %2, %49 ]
  %58 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = and i160 %62, 15211807202738752817960438464512
  %64 = icmp eq i160 %63, 0
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 5, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 3
  %69 = select i1 %64, %"class.blink::Length"* %67, %"class.blink::Length"* %68
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 0, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 2
  br i1 %72, label %89, label %73

73:                                               ; preds = %54
  %74 = icmp ugt i32 %50, 1
  br i1 %74, label %75, label %82

75:                                               ; preds = %73
  %76 = bitcast %"class.blink::Length"* %3 to i64*
  %77 = bitcast %"class.blink::Length"* %0 to i64*
  %78 = load i64, i64* %76, align 4
  store i64 %78, i64* %77, align 4
  %79 = and i64 %78, 280375465082880
  %80 = icmp eq i64 %79, 8796093022208
  br i1 %80, label %81, label %135

81:                                               ; preds = %75
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #12
  br label %135

82:                                               ; preds = %73
  %83 = bitcast %"class.blink::Length"* %69 to i64*
  %84 = bitcast %"class.blink::Length"* %0 to i64*
  %85 = load i64, i64* %83, align 4
  store i64 %85, i64* %84, align 4
  %86 = and i64 %85, 280375465082880
  %87 = icmp eq i64 %86, 8796093022208
  br i1 %87, label %88, label %135

88:                                               ; preds = %82
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #12
  br label %135

89:                                               ; preds = %54
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 0, i32 3
  %91 = load i8, i8* %90, align 2, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.blink::Length"* %69 to float*
  %95 = load float, float* %94, align 4
  br label %100

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = sitofp i32 %98 to float
  br label %100

100:                                              ; preds = %93, %96
  %101 = phi float [ %95, %93 ], [ %99, %96 ]
  %102 = sitofp i32 %56 to float
  %103 = fadd float %101, %102
  %104 = fptosi float %103 to i32
  %105 = tail call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol10NextColumnEv(%"class.blink::LayoutTableCol"* %57) #12
  %106 = icmp eq %"class.blink::LayoutTableCol"* %105, null
  br i1 %106, label %107, label %51

107:                                              ; preds = %100, %51
  %108 = icmp sgt i32 %104, 0
  br i1 %108, label %109, label %129

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %110)
  %112 = icmp sgt i32 %111, 2147483583
  br i1 %112, label %120, label %113, !prof !4

113:                                              ; preds = %109
  %114 = icmp sgt i32 %111, -1
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = add nuw nsw i32 %111, 63
  %117 = sdiv i32 %116, 64
  br label %120

118:                                              ; preds = %113
  %119 = sdiv i32 %111, 64
  br label %120

120:                                              ; preds = %109, %115, %118
  %121 = phi i32 [ %117, %115 ], [ %119, %118 ], [ 33554431, %109 ]
  %122 = sub nsw i32 %104, %121
  %123 = icmp sgt i32 %122, 0
  %124 = select i1 %123, i32 %122, i32 0
  %125 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 %124, i32* %125, align 4, !alias.scope !5
  %126 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %126, align 4, !alias.scope !5
  %127 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %127, align 1, !alias.scope !5
  %128 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %128, align 2, !alias.scope !5
  br label %135

129:                                              ; preds = %47, %107
  %130 = phi i32 [ %104, %107 ], [ 0, %47 ]
  %131 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 %130, i32* %131, align 4, !alias.scope !8
  %132 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %132, align 4, !alias.scope !8
  %133 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %133, align 1, !alias.scope !8
  %134 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %134, align 2, !alias.scope !8
  br label %135

135:                                              ; preds = %75, %81, %82, %88, %129, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutTableCell7ColSpanEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 67108864
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %45, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %45, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 48
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %16
  %22 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %26 = bitcast %"class.blink::Member.318"* %25 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br i1 %32, label %40, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %29, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %33, %21
  %41 = bitcast %"class.blink::Node"* %14 to %"class.blink::HTMLTableCellElement"*
  %42 = tail call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %41) #12
  %43 = icmp ult i32 %42, 33554430
  %44 = select i1 %43, i32 %42, i32 33554430
  br label %45

45:                                               ; preds = %40, %33, %16, %12, %6, %1
  %46 = phi i32 [ 1, %1 ], [ %44, %40 ], [ 1, %33 ], [ 1, %12 ], [ 1, %16 ], [ 1, %6 ]
  ret i32 %46
}

declare %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol10NextColumnEv(%"class.blink::LayoutTableCol"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !11
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !11
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #12
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !14
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !14
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #12
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #12
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !4
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !17
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !17
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #12
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #12
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !4
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !20
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !20
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #12
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #12
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !4
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutTableCell22PreferredLogicalWidthsEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.blink::Length"*
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = bitcast %"class.blink::LayoutObject"** %8 to %"class.blink::LayoutTable"**
  %10 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %10, i64 0, i32 10
  %12 = load i16, i16* %11, align 8
  %13 = trunc i16 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %10) #12
  br label %16

16:                                               ; preds = %1, %15
  %17 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %17) #12
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = tail call i32 @_ZNK5blink9LayoutBox21OverrideLogicalHeightEv(%"class.blink::LayoutBox"* %17) #12
  %21 = icmp sgt i32 %20, -64
  br i1 %21, label %25, label %22

22:                                               ; preds = %19, %16
  %23 = bitcast %"class.blink::LayoutTableCell"* %0 to %"class.blink::LayoutBlock"*
  %24 = tail call i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"* %23) #12
  br label %28

25:                                               ; preds = %19
  tail call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %17, i32 0) #12
  %26 = bitcast %"class.blink::LayoutTableCell"* %0 to %"class.blink::LayoutBlock"*
  %27 = tail call i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"* %26) #12
  tail call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %17, i32 %20) #12
  br label %28

28:                                               ; preds = %22, %25
  %29 = phi i64 [ %24, %22 ], [ %27, %25 ]
  %30 = trunc i64 %29 to i32
  %31 = and i64 %29, -4294967296
  %32 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 16777216
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %37, label %152

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %152, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 73728
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %49, label %152

49:                                               ; preds = %41
  %50 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  store i64 -6148914691236517206, i64* %2, align 8
  call void @_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv(%"class.blink::Length"* nonnull sret %3, %"class.blink::LayoutTableCell"* %0)
  %53 = load i96, i96* %33, align 4
  %54 = and i96 %53, 16777216
  %55 = icmp eq i96 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = bitcast %"class.blink::Node"** %38 to %"class.blink::Element"**
  %58 = load %"class.blink::Element"*, %"class.blink::Element"** %57, align 8
  br label %59

59:                                               ; preds = %49, %56
  %60 = phi %"class.blink::Element"* [ %58, %56 ], [ null, %49 ]
  %61 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kNowrapAttrE, align 8
  %62 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %60, i64 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %62, align 8
  %64 = icmp eq %"class.blink::ElementData"* %63, null
  br i1 %64, label %115, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::ElementData"* %63 to %"class.blink::UniqueElementData"*
  %72 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 1, i32 1
  %73 = bitcast %"class.blink::Member.354"* %72 to %"class.blink::Attribute"**
  %74 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %71, i64 0, i32 2, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  br label %82

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 1
  %79 = bitcast %"class.blink::ElementData"* %78 to %"class.blink::Attribute"*
  %80 = lshr i32 %67, 1
  %81 = and i32 %80, 268435455
  br label %82

82:                                               ; preds = %77, %70
  %83 = phi %"class.blink::Attribute"* [ %79, %77 ], [ %74, %70 ]
  %84 = phi i32 [ %81, %77 ], [ %76, %70 ]
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %83, i64 %85
  %87 = icmp eq i32 %84, 0
  br i1 %87, label %115, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %61, i64 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %93

93:                                               ; preds = %108, %88
  %94 = phi %"class.blink::Attribute"* [ %83, %88 ], [ %109, %108 ]
  %95 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %95, align 8
  %97 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %96, %90
  br i1 %97, label %111, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %100, %101
  br i1 %102, label %103, label %108

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, %106
  br i1 %107, label %111, label %108

108:                                              ; preds = %103, %98
  %109 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %94, i64 1
  %110 = icmp eq %"class.blink::Attribute"* %109, %86
  br i1 %110, label %115, label %93

111:                                              ; preds = %103, %93
  %112 = icmp eq %"class.blink::Attribute"* %94, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %94, i64 0, i32 1
  br label %117

115:                                              ; preds = %108, %111, %82, %59
  %116 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %117

117:                                              ; preds = %113, %115
  %118 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %114, %113 ]
  %119 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %143, label %122

122:                                              ; preds = %117
  %123 = load i8, i8* %51, align 1
  %124 = icmp eq i8 %123, 2
  br i1 %124, label %125, label %146

125:                                              ; preds = %122
  %126 = load i8, i8* %52, align 2, !range !3
  %127 = icmp eq i8 %126, 0
  %128 = bitcast i64* %2 to float*
  %129 = load float, float* %128, align 8
  %130 = bitcast float %129 to i32
  %131 = sitofp i32 %130 to float
  %132 = select i1 %127, float %131, float %129
  %133 = fmul float %132, 6.400000e+01
  %134 = fcmp ult float %133, 0xC1E0000000000000
  %135 = fcmp ugt float %133, 0x41DFFFFFE0000000
  %136 = fcmp ogt float %133, 0xC1E0000000000000
  %137 = select i1 %136, float %133, float 0xC1E0000000000000
  %138 = fptosi float %137 to i32
  %139 = select i1 %134, i32 0, i32 2147483647
  %140 = select i1 %135, i32 %139, i32 %138
  %141 = icmp sgt i32 %140, %30
  %142 = select i1 %141, i32 %140, i32 %30
  br label %143

143:                                              ; preds = %117, %125
  %144 = phi i32 [ %30, %117 ], [ %142, %125 ]
  %145 = load i8, i8* %51, align 1
  br label %146

146:                                              ; preds = %143, %122
  %147 = phi i32 [ %144, %143 ], [ %30, %122 ]
  %148 = phi i8 [ %145, %143 ], [ %123, %122 ]
  %149 = icmp eq i8 %148, 8
  br i1 %149, label %150, label %151

150:                                              ; preds = %146
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #12
  br label %151

151:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  br label %152

152:                                              ; preds = %28, %37, %151, %41
  %153 = phi i32 [ %30, %28 ], [ %30, %37 ], [ %147, %151 ], [ %30, %41 ]
  %154 = zext i32 %153 to i64
  %155 = or i64 %31, %154
  ret i64 %155
}

declare zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox21OverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv(%"class.blink::Length"* noalias sret, %"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 3
  %15 = select i1 %10, %"class.blink::Length"* %13, %"class.blink::Length"* %14
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::Length"* %15 to i64*
  %21 = bitcast %"class.blink::Length"* %0 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  %23 = and i64 %22, 280375465082880
  %24 = icmp eq i64 %23, 8796093022208
  br i1 %24, label %25, label %61

25:                                               ; preds = %19
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #12
  br label %61

26:                                               ; preds = %2
  %27 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 7
  %33 = bitcast %"class.blink::LayoutObject"** %32 to %"class.blink::LayoutTable"**
  %34 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %34, i64 0, i32 10
  %36 = load i16, i16* %35, align 8, !noalias !23
  %37 = and i16 %36, 64
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #12, !alias.scope !23
  br label %48

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %3, %"class.blink::LayoutTable"* %34, i32 %43) #12
  %44 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 0
  %45 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %44, align 8
  %46 = icmp eq %"class.blink::LayoutTableCol"* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  br label %52

48:                                               ; preds = %39, %40
  %49 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 1
  %50 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %51 = icmp eq %"class.blink::LayoutTableCol"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %47, %48
  %53 = phi %"class.blink::LayoutTableCol"* [ %45, %47 ], [ %50, %48 ]
  call void @_ZNK5blink15LayoutTableCell23LogicalWidthFromColumnsEPNS_14LayoutTableColERKNS_6LengthE(%"class.blink::Length"* sret %0, %"class.blink::LayoutTableCell"* %1, %"class.blink::LayoutTableCol"* nonnull %53, %"class.blink::Length"* dereferenceable(8) %15)
  br label %61

54:                                               ; preds = %48
  %55 = bitcast %"class.blink::Length"* %15 to i64*
  %56 = bitcast %"class.blink::Length"* %0 to i64*
  %57 = load i64, i64* %55, align 4
  store i64 %57, i64* %56, align 4
  %58 = and i64 %57, 280375465082880
  %59 = icmp eq i64 %58, 8796093022208
  br i1 %59, label %60, label %61

60:                                               ; preds = %54
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #12
  br label %61

61:                                               ; preds = %60, %54, %25, %19, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell23ComputeIntrinsicPaddingEiiNS_14EVerticalAlignERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableCell"*, i32, i32, i32, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %11)
  %13 = sub nsw i32 %12, %8
  %14 = sub i32 %13, %10
  switch i32 %3, label %138 [
    i32 2, label %15
    i32 3, label %15
    i32 4, label %15
    i32 5, label %15
    i32 9, label %15
    i32 0, label %15
    i32 7, label %135
    i32 1, label %131
  ]

15:                                               ; preds = %5, %5, %5, %5, %5, %5
  %16 = tail call i32 @_ZNK5blink15LayoutTableCell20CellBaselinePositionEv(%"class.blink::LayoutTableCell"* %0)
  %17 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8, !noalias !26
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8, !noalias !26
  %23 = lshr i160 %22, 102
  %24 = trunc i160 %23 to i8
  %25 = and i8 %24, 3
  %26 = bitcast %"class.blink::LayoutTableCell"* %0 to i8*
  switch i8 %25, label %27 [
    i8 0, label %36
    i8 1, label %28
  ]

27:                                               ; preds = %15
  br label %28

28:                                               ; preds = %27, %15
  %29 = phi { i64, i64 } [ { i64 993, i64 0 }, %27 ], [ { i64 1001, i64 0 }, %15 ]
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  %32 = getelementptr inbounds i8, i8* %26, i64 %31
  %33 = bitcast i8* %32 to %"class.blink::LayoutBoxModelObject"*
  %34 = and i64 %30, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %28, %15
  %37 = phi %"class.blink::LayoutBoxModelObject"* [ %33, %28 ], [ %17, %15 ]
  %38 = phi i8* [ %32, %28 ], [ %26, %15 ]
  %39 = phi i64 [ %30, %28 ], [ 977, %15 ]
  %40 = bitcast i8* %38 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = add i64 %39, -1
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = bitcast i8* %43 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %45 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, align 8
  br label %48

46:                                               ; preds = %28
  %47 = inttoptr i64 %30 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %48

48:                                               ; preds = %36, %46
  %49 = phi %"class.blink::LayoutBoxModelObject"* [ %37, %36 ], [ %33, %46 ]
  %50 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %45, %36 ], [ %47, %46 ]
  %51 = tail call i32 %50(%"class.blink::LayoutBoxModelObject"* %49) #12
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8, !noalias !29
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8, !noalias !29
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %59 [
    i8 0, label %68
    i8 1, label %60
  ]

59:                                               ; preds = %48
  br label %60

60:                                               ; preds = %59, %48
  %61 = phi { i64, i64 } [ { i64 961, i64 0 }, %59 ], [ { i64 969, i64 0 }, %48 ]
  %62 = extractvalue { i64, i64 } %61, 0
  %63 = extractvalue { i64, i64 } %61, 1
  %64 = getelementptr inbounds i8, i8* %26, i64 %63
  %65 = bitcast i8* %64 to %"class.blink::LayoutBoxModelObject"*
  %66 = and i64 %62, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %60, %48
  %69 = phi %"class.blink::LayoutBoxModelObject"* [ %65, %60 ], [ %17, %48 ]
  %70 = phi i8* [ %64, %60 ], [ %26, %48 ]
  %71 = phi i64 [ %62, %60 ], [ 945, %48 ]
  %72 = bitcast i8* %70 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = add i64 %71, -1
  %75 = getelementptr i8, i8* %73, i64 %74
  %76 = bitcast i8* %75 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %77 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %76, align 8
  br label %80

78:                                               ; preds = %60
  %79 = inttoptr i64 %62 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %80

80:                                               ; preds = %68, %78
  %81 = phi %"class.blink::LayoutBoxModelObject"* [ %69, %68 ], [ %65, %78 ]
  %82 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %77, %68 ], [ %79, %78 ]
  %83 = tail call i32 %82(%"class.blink::LayoutBoxModelObject"* %81) #12
  %84 = icmp slt i32 %83, 0
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %83) #12
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !4
  %90 = icmp sgt i32 %16, %89
  br i1 %90, label %91, label %138

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 7
  %95 = bitcast %"class.blink::LayoutObject"** %94 to %"class.blink::LayoutTableSection"**
  %96 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 3
  %98 = bitcast %"class.blink::LayoutObject"* %97 to i32*
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 2147483647
  %101 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %96, i64 0, i32 3
  %102 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1805"* %101, i32 %100) #12
  %103 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %102, i64 0, i32 2, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %8, 33554431
  br i1 %105, label %111, label %106

106:                                              ; preds = %91
  %107 = icmp slt i32 %8, -33554432
  br i1 %107, label %113, label %108

108:                                              ; preds = %106
  %109 = shl i32 %8, 6
  %110 = icmp sgt i32 %109, -1
  br i1 %110, label %111, label %113

111:                                              ; preds = %91, %108
  %112 = phi i32 [ %109, %108 ], [ 2147483647, %91 ]
  br label %113

113:                                              ; preds = %106, %108, %111
  %114 = phi i32 [ %112, %111 ], [ %109, %108 ], [ -2147483648, %106 ]
  %115 = phi i32 [ -2147483648, %111 ], [ 2147483647, %108 ], [ 2147483647, %106 ]
  %116 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %16, i32 %114) #12
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !4
  %120 = icmp sgt i32 %119, -1
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %104, i32 %119) #12
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !4
  %126 = sdiv i32 %125, 64
  %127 = srem i32 %125, 64
  %128 = add nsw i32 %127, 32
  %129 = ashr i32 %128, 6
  %130 = add nsw i32 %129, %126
  br label %138

131:                                              ; preds = %5
  %132 = add nsw i32 %2, %1
  %133 = sub i32 %132, %14
  %134 = sdiv i32 %133, 2
  br label %138

135:                                              ; preds = %5
  %136 = add nsw i32 %2, %1
  %137 = sub i32 %136, %14
  br label %138

138:                                              ; preds = %80, %113, %5, %135, %131
  %139 = phi i32 [ 0, %5 ], [ %134, %131 ], [ %137, %135 ], [ %130, %113 ], [ 0, %80 ]
  %140 = sub nsw i32 %2, %14
  %141 = sub i32 %140, %139
  store i32 %139, i32* %7, align 8
  store i32 %141, i32* %9, align 4
  %142 = icmp eq i32 %139, %8
  %143 = icmp eq i32 %141, %10
  %144 = and i1 %142, %143
  br i1 %144, label %146, label %145

145:                                              ; preds = %138
  tail call void @_ZN5blink18SubtreeLayoutScope14SetNeedsLayoutEPNS_12LayoutObjectEPKc(%"class.blink::SubtreeLayoutScope"* %4, %"class.blink::LayoutObject"* %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason15kPaddingChangedE, i64 0, i64 0)) #12
  br label %146

146:                                              ; preds = %138, %145
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutTableCell22IntrinsicPaddingBeforeEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutTableCell21IntrinsicPaddingAfterEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %36

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = srem i32 %13, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #12
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %63

30:                                               ; preds = %9
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %63, !prof !32

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %63

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = srem i32 %40, 64
  %42 = icmp slt i32 %38, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %41, i32 %38) #12
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !4
  %48 = sdiv i32 %47, 64
  %49 = srem i32 %47, 64
  %50 = add nsw i32 %49, 32
  %51 = ashr i32 %50, 6
  %52 = add nsw i32 %41, 32
  %53 = ashr i32 %52, 6
  %54 = sub nsw i32 %48, %53
  %55 = add nsw i32 %51, %54
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %36
  %58 = add i32 %38, 4
  %59 = icmp ugt i32 %58, 8
  br i1 %59, label %60, label %63, !prof !32

60:                                               ; preds = %57
  %61 = icmp sgt i32 %38, 0
  %62 = select i1 %61, i32 1, i32 -1
  br label %63

63:                                               ; preds = %60, %57, %36, %33, %30, %9
  %64 = phi i32 [ %35, %33 ], [ %28, %9 ], [ 0, %30 ], [ %62, %60 ], [ %55, %36 ], [ 0, %57 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell20CellBaselinePositionEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::LayoutTableCell"* %0 to i32 (%"class.blink::LayoutBlockFlow"*)***
  %4 = load i32 (%"class.blink::LayoutBlockFlow"*)**, i32 (%"class.blink::LayoutBlockFlow"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::LayoutBlockFlow"*)*, i32 (%"class.blink::LayoutBlockFlow"*)** %4, i64 180
  %6 = load i32 (%"class.blink::LayoutBlockFlow"*)*, i32 (%"class.blink::LayoutBlockFlow"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::LayoutBlockFlow"* %2) #12
  %8 = icmp eq i32 %7, -64
  br i1 %8, label %9, label %91

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8, !noalias !33
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8, !noalias !33
  %16 = lshr i160 %15, 102
  %17 = trunc i160 %16 to i8
  %18 = and i8 %17, 3
  %19 = bitcast %"class.blink::LayoutTableCell"* %0 to i8*
  switch i8 %18, label %20 [
    i8 0, label %29
    i8 1, label %21
  ]

20:                                               ; preds = %9
  br label %21

21:                                               ; preds = %20, %9
  %22 = phi { i64, i64 } [ { i64 993, i64 0 }, %20 ], [ { i64 1001, i64 0 }, %9 ]
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = extractvalue { i64, i64 } %22, 1
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  %26 = bitcast i8* %25 to %"class.blink::LayoutBoxModelObject"*
  %27 = and i64 %23, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %21, %9
  %30 = phi %"class.blink::LayoutBoxModelObject"* [ %26, %21 ], [ %10, %9 ]
  %31 = phi i8* [ %25, %21 ], [ %19, %9 ]
  %32 = phi i64 [ %23, %21 ], [ 977, %9 ]
  %33 = bitcast i8* %31 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %32, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %38 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %37, align 8
  br label %41

39:                                               ; preds = %21
  %40 = inttoptr i64 %23 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %41

41:                                               ; preds = %29, %39
  %42 = phi %"class.blink::LayoutBoxModelObject"* [ %30, %29 ], [ %26, %39 ]
  %43 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %38, %29 ], [ %40, %39 ]
  %44 = tail call i32 %43(%"class.blink::LayoutBoxModelObject"* %42) #12
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8, !noalias !36
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8, !noalias !36
  %49 = lshr i160 %48, 102
  %50 = trunc i160 %49 to i8
  %51 = and i8 %50, 3
  switch i8 %51, label %52 [
    i8 0, label %61
    i8 1, label %53
  ]

52:                                               ; preds = %41
  br label %53

53:                                               ; preds = %52, %41
  %54 = phi { i64, i64 } [ { i64 961, i64 0 }, %52 ], [ { i64 969, i64 0 }, %41 ]
  %55 = extractvalue { i64, i64 } %54, 0
  %56 = extractvalue { i64, i64 } %54, 1
  %57 = getelementptr inbounds i8, i8* %19, i64 %56
  %58 = bitcast i8* %57 to %"class.blink::LayoutBoxModelObject"*
  %59 = and i64 %55, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %53, %41
  %62 = phi %"class.blink::LayoutBoxModelObject"* [ %58, %53 ], [ %10, %41 ]
  %63 = phi i8* [ %57, %53 ], [ %19, %41 ]
  %64 = phi i64 [ %55, %53 ], [ 945, %41 ]
  %65 = bitcast i8* %63 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = add i64 %64, -1
  %68 = getelementptr i8, i8* %66, i64 %67
  %69 = bitcast i8* %68 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %70 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %69, align 8
  br label %73

71:                                               ; preds = %53
  %72 = inttoptr i64 %55 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %73

73:                                               ; preds = %61, %71
  %74 = phi %"class.blink::LayoutBoxModelObject"* [ %62, %61 ], [ %58, %71 ]
  %75 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %70, %61 ], [ %72, %71 ]
  %76 = tail call i32 %75(%"class.blink::LayoutBoxModelObject"* %74) #12
  %77 = icmp slt i32 %76, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %76) #12
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !4
  %83 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %84 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %83)
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %84) #12
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !4
  br label %91

91:                                               ; preds = %1, %73
  %92 = phi i32 [ %90, %73 ], [ %7, %1 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutTableCell8RowIndexEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTableRow"**
  %4 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2147483647
  ret i32 %7
}

declare void @_ZN5blink18SubtreeLayoutScope14SetNeedsLayoutEPNS_12LayoutObjectEPKc(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell18UpdateLogicalWidthEv(%"class.blink::LayoutTableCell"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell19SetCellLogicalWidthEiRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableCell"*, i32, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 0
  %13 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %15 = select i1 %12, i32* %13, i32* %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %1, 33554431
  br i1 %17, label %22, label %18

18:                                               ; preds = %3
  %19 = icmp slt i32 %1, -33554432
  %20 = shl i32 %1, 6
  %21 = select i1 %19, i32 -2147483648, i32 %20
  br label %22

22:                                               ; preds = %3, %18
  %23 = phi i32 [ 2147483647, %3 ], [ %21, %18 ]
  %24 = icmp eq i32 %23, %16
  br i1 %24, label %50, label %25

25:                                               ; preds = %22
  tail call void @_ZN5blink18SubtreeLayoutScope14SetNeedsLayoutEPNS_12LayoutObjectEPKc(%"class.blink::SubtreeLayoutScope"* %2, %"class.blink::LayoutObject"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kSizeChangedE, i64 0, i64 0)) #12
  br i1 %17, label %30, label %26

26:                                               ; preds = %25
  %27 = icmp slt i32 %1, -33554432
  %28 = shl i32 %1, 6
  %29 = select i1 %27, i32 -2147483648, i32 %28
  br label %30

30:                                               ; preds = %26, %25
  %31 = phi i32 [ 2147483647, %25 ], [ %29, %26 ]
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = and i160 %35, 15211807202738752817960438464512
  %37 = icmp eq i160 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %30
  %39 = load i32, i32* %13, align 4
  %40 = icmp eq i32 %39, %31
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  store i32 %31, i32* %13, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %5) #12
  br label %46

42:                                               ; preds = %30
  %43 = load i32, i32* %14, align 4
  %44 = icmp eq i32 %43, %31
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  store i32 %31, i32* %14, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %5) #12
  br label %46

46:                                               ; preds = %38, %41, %42, %45
  %47 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = or i32 %48, 33554432
  store i32 %49, i32* %47, align 8
  br label %50

50:                                               ; preds = %22, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell12UpdateLayoutEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #12
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 33554432
  %10 = icmp ne i32 %9, 0
  %11 = bitcast %"class.blink::LayoutTableCell"* %0 to void (%"class.blink::LayoutBlockFlow"*, i1)***
  %12 = load void (%"class.blink::LayoutBlockFlow"*, i1)**, void (%"class.blink::LayoutBlockFlow"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*, i1)*, void (%"class.blink::LayoutBlockFlow"*, i1)** %12, i64 196
  %14 = load void (%"class.blink::LayoutBlockFlow"*, i1)*, void (%"class.blink::LayoutBlockFlow"*, i1)** %13, align 8
  call void %14(%"class.blink::LayoutBlockFlow"* %6, i1 zeroext %10) #12
  %15 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %15)
  %17 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0
  store i32 %16, i32* %17, align 8
  %18 = load i32, i32* %7, align 8
  %19 = and i32 %18, -33554433
  store i32 %19, i32* %7, align 8
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

declare void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #12
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 118
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #12
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #12
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 119
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #12
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #12
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #12
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #12
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #12
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 121
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #12
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #12
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell10PaddingTopEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %5 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %5, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %7, i64 0, i32 16
  %9 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %2, %"class.blink::Length"* dereferenceable(8) %8) #12
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !39
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8, !noalias !39
  %14 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8, !noalias !39
  %16 = and i160 %13, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  br i1 %17, label %18, label %36

18:                                               ; preds = %1
  %19 = icmp sgt i32 %15, 33554431
  br i1 %19, label %27, label %20

20:                                               ; preds = %18
  %21 = icmp slt i32 %15, -33554432
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = shl i32 %15, 6
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20, %22
  %26 = phi i32 [ %23, %22 ], [ -2147483648, %20 ]
  br label %27

27:                                               ; preds = %18, %22, %25
  %28 = phi i32 [ 2147483647, %18 ], [ %23, %22 ], [ %26, %25 ]
  %29 = phi i32 [ 2147483647, %18 ], [ 2147483647, %22 ], [ -2147483648, %25 ]
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %28) #12
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !4
  %34 = sdiv i32 %33, 64
  %35 = shl nsw i32 %34, 6
  br label %36

36:                                               ; preds = %1, %27
  %37 = phi i32 [ %35, %27 ], [ %9, %1 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell13PaddingBottomEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %5 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %5, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %7, i64 0, i32 13
  %9 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %2, %"class.blink::Length"* dereferenceable(8) %8) #12
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !42
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8, !noalias !42
  %14 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 4, !noalias !42
  %16 = and i160 %13, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  br i1 %17, label %18, label %36

18:                                               ; preds = %1
  %19 = icmp sgt i32 %15, 33554431
  br i1 %19, label %27, label %20

20:                                               ; preds = %18
  %21 = icmp slt i32 %15, -33554432
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = shl i32 %15, 6
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20, %22
  %26 = phi i32 [ %23, %22 ], [ -2147483648, %20 ]
  br label %27

27:                                               ; preds = %18, %22, %25
  %28 = phi i32 [ 2147483647, %18 ], [ %23, %22 ], [ %26, %25 ]
  %29 = phi i32 [ 2147483647, %18 ], [ 2147483647, %22 ], [ -2147483648, %25 ]
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %28) #12
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !4
  %34 = sdiv i32 %33, 64
  %35 = shl nsw i32 %34, 6
  br label %36

36:                                               ; preds = %1, %27
  %37 = phi i32 [ %35, %27 ], [ %9, %1 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell11PaddingLeftEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %11, i64 0, i32 14
  %13 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %6, %"class.blink::Length"* dereferenceable(8) %12) #12
  %14 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8, !noalias !45
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8, !noalias !45
  %22 = lshr i160 %21, 102
  %23 = trunc i160 %22 to i8
  %24 = and i8 %23, 3
  %25 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8, !noalias !45
  %27 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4, !noalias !45
  store i32 0, i32* %2, align 4, !alias.scope !45
  store i32 0, i32* %3, align 4, !alias.scope !45
  store i32 %26, i32* %4, align 4, !alias.scope !45
  store i32 %28, i32* %5, align 4, !alias.scope !45
  %29 = icmp eq i8 %24, 0
  %30 = and i160 %21, 41538374868278621028243970633760768
  %31 = icmp eq i160 %30, 0
  %32 = select i1 %31, i32* %2, i32* %3
  %33 = icmp eq i8 %24, 1
  %34 = select i1 %33, i32* %5, i32* %4
  %35 = select i1 %29, i32* %32, i32* %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 33554431
  br i1 %37, label %45, label %38

38:                                               ; preds = %1
  %39 = icmp slt i32 %36, -33554432
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = shl i32 %36, 6
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38, %40
  %44 = phi i32 [ %41, %40 ], [ -2147483648, %38 ]
  br label %45

45:                                               ; preds = %1, %40, %43
  %46 = phi i32 [ %44, %43 ], [ %41, %40 ], [ 2147483647, %1 ]
  %47 = phi i32 [ -2147483648, %43 ], [ 2147483647, %40 ], [ 2147483647, %1 ]
  %48 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %46) #12
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  %52 = and i160 %21, 15211807202738752817960438464512
  %53 = icmp eq i160 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %45
  %55 = sdiv i32 %51, 64
  %56 = shl nsw i32 %55, 6
  br label %57

57:                                               ; preds = %45, %54
  %58 = phi i32 [ %56, %54 ], [ %51, %45 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell12PaddingRightEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %11, i64 0, i32 15
  %13 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %6, %"class.blink::Length"* dereferenceable(8) %12) #12
  %14 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8, !noalias !48
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8, !noalias !48
  %22 = lshr i160 %21, 102
  %23 = trunc i160 %22 to i8
  %24 = and i8 %23, 3
  %25 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8, !noalias !48
  %27 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4, !noalias !48
  store i32 0, i32* %2, align 4, !alias.scope !48
  store i32 0, i32* %3, align 4, !alias.scope !48
  store i32 %26, i32* %4, align 4, !alias.scope !48
  store i32 %28, i32* %5, align 4, !alias.scope !48
  %29 = icmp eq i8 %24, 0
  %30 = and i160 %21, 41538374868278621028243970633760768
  %31 = icmp eq i160 %30, 0
  %32 = select i1 %31, i32* %3, i32* %2
  %33 = icmp eq i8 %24, 1
  %34 = select i1 %33, i32* %4, i32* %5
  %35 = select i1 %29, i32* %32, i32* %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 33554431
  br i1 %37, label %45, label %38

38:                                               ; preds = %1
  %39 = icmp slt i32 %36, -33554432
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = shl i32 %36, 6
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38, %40
  %44 = phi i32 [ %41, %40 ], [ -2147483648, %38 ]
  br label %45

45:                                               ; preds = %1, %40, %43
  %46 = phi i32 [ %44, %43 ], [ %41, %40 ], [ 2147483647, %1 ]
  %47 = phi i32 [ -2147483648, %43 ], [ 2147483647, %40 ], [ 2147483647, %1 ]
  %48 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %46) #12
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  %52 = and i160 %21, 15211807202738752817960438464512
  %53 = icmp eq i160 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %45
  %55 = sdiv i32 %51, 64
  %56 = shl nsw i32 %55, 6
  br label %57

57:                                               ; preds = %45, %54
  %58 = phi i32 [ %56, %54 ], [ %51, %45 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell37SetOverrideLogicalHeightFromRowHeightENS_10LayoutUnitE(%"class.blink::LayoutTableCell"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %5, i32 %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutTableCell27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutTableCell"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %2) #12
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %75, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::LayoutObject"* %10 to %"class.blink::LayoutBox"*
  %14 = bitcast %"class.blink::LayoutObject"* %10 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %15 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %15, i64 147
  %17 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %16, align 8
  %18 = tail call %"class.blink::LayoutBox"* %17(%"class.blink::LayoutBox"* nonnull %13) #12
  %19 = icmp eq %"class.blink::LayoutBox"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %18, i64 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 5070602400912917605986812821504
  br i1 %27, label %33, label %28, !prof !4

28:                                               ; preds = %20, %12
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 1, i32 1, i32 1
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = trunc i64 %31 to i32
  br label %58

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %18, i64 0, i32 2, i32 1
  %35 = bitcast %"class.blink::LayoutSize"* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 1, i32 4, i32 0, i64 4
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 4
  %41 = trunc i64 %40 to i32
  %42 = icmp sgt i32 %41, -1
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %37, i32 %41) #12
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !4
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 1, i32 1, i32 1
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 4
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, -1
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %51) #12
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !4
  br label %58

58:                                               ; preds = %28, %33
  %59 = phi i32 [ %32, %28 ], [ %57, %33 ]
  %60 = phi i64 [ %31, %28 ], [ %50, %33 ]
  %61 = lshr i64 %60, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp sgt i32 %59, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %6, i32 %59) #12
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !4
  %69 = icmp sgt i32 %62, -1
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %62) #12
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !4
  br label %75

75:                                               ; preds = %3, %58
  %76 = phi i32 [ %6, %3 ], [ %68, %58 ]
  %77 = phi i32 [ %8, %3 ], [ %74, %58 ]
  %78 = zext i32 %77 to i64
  %79 = shl nuw i64 %78, 32
  %80 = zext i32 %76 to i64
  %81 = or i64 %79, %80
  ret i64 %81
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell25SetIsSpanningCollapsedRowEb(%"class.blink::LayoutTableCell"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 28
  %6 = and i32 %5, 1
  %7 = zext i1 %1 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = shl nuw nsw i32 %7, 28
  %11 = and i32 %4, -268435457
  %12 = or i32 %11, %10
  store i32 %12, i32* %3, align 8
  %13 = bitcast %"class.blink::LayoutTableCell"* %0 to i8 (%"class.blink::LayoutTableCell"*)***
  %14 = load i8 (%"class.blink::LayoutTableCell"*)**, i8 (%"class.blink::LayoutTableCell"*)*** %13, align 8
  %15 = getelementptr inbounds i8 (%"class.blink::LayoutTableCell"*)*, i8 (%"class.blink::LayoutTableCell"*)** %14, i64 187
  %16 = load i8 (%"class.blink::LayoutTableCell"*)*, i8 (%"class.blink::LayoutTableCell"*)** %15, align 8
  %17 = tail call zeroext i8 %16(%"class.blink::LayoutTableCell"* %0) #12
  %18 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i8 %17, 3
  %22 = zext i8 %21 to i96
  %23 = shl nuw nsw i96 %22, 87
  %24 = and i96 %20, -464227514732017603087171585
  %25 = or i96 %23, %24
  store i96 %25, i96* %19, align 4
  br label %26

26:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell28SetIsSpanningCollapsedColumnEb(%"class.blink::LayoutTableCell"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 29
  %6 = and i32 %5, 1
  %7 = zext i1 %1 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = shl nuw nsw i32 %7, 29
  %11 = and i32 %4, -536870913
  %12 = or i32 %11, %10
  store i32 %12, i32* %3, align 8
  %13 = bitcast %"class.blink::LayoutTableCell"* %0 to i8 (%"class.blink::LayoutTableCell"*)***
  %14 = load i8 (%"class.blink::LayoutTableCell"*)**, i8 (%"class.blink::LayoutTableCell"*)*** %13, align 8
  %15 = getelementptr inbounds i8 (%"class.blink::LayoutTableCell"*)*, i8 (%"class.blink::LayoutTableCell"*)** %14, i64 187
  %16 = load i8 (%"class.blink::LayoutTableCell"*)*, i8 (%"class.blink::LayoutTableCell"*)** %15, align 8
  %17 = tail call zeroext i8 %16(%"class.blink::LayoutTableCell"* %0) #12
  %18 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i8 %17, 3
  %22 = zext i8 %21 to i96
  %23 = shl nuw nsw i96 %22, 87
  %24 = and i96 %20, -464227514732017603087171585
  %25 = or i96 %23, %24
  store i96 %25, i96* %19, align 4
  br label %26

26:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell21ComputeVisualOverflowEb(%"class.blink::LayoutTableCell"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow21ComputeVisualOverflowEb(%"class.blink::LayoutBlockFlow"* %3, i1 zeroext %1) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0)
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  %6 = icmp eq %"class.blink::CollapsedBorderValues"* %5, null
  br i1 %6, label %738, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = bitcast %"class.blink::LayoutObject"** %12 to %"class.blink::LayoutTable"**
  %14 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 41538374868278621028243970633760768
  %21 = icmp eq i160 %20, 0
  %22 = lshr i160 %19, 102
  %23 = trunc i160 %22 to i8
  %24 = and i8 %23, 3
  switch i8 %24, label %27 [
    i8 0, label %25
    i8 1, label %28
  ]

25:                                               ; preds = %7
  %26 = select i1 %21, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  br label %28

27:                                               ; preds = %7
  br label %28

28:                                               ; preds = %7, %27, %25
  %29 = phi { i64, i64 } [ %26, %25 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %27 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %7 ]
  %30 = extractvalue { i64, i64 } %29, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %31 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  %32 = icmp eq %"class.blink::CollapsedBorderValues"* %31, null
  br i1 %32, label %56, label %33

33:                                               ; preds = %28
  %34 = extractvalue { i64, i64 } %29, 1
  %35 = bitcast %"class.blink::CollapsedBorderValues"* %31 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = bitcast i8* %36 to %"class.blink::CollapsedBorderValues"*
  %38 = and i64 %30, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %33
  %41 = bitcast i8* %36 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = add i64 %30, -1
  %44 = getelementptr i8, i8* %42, i64 %43
  %45 = bitcast i8* %44 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %46 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %45, align 8
  br label %49

47:                                               ; preds = %33
  %48 = inttoptr i64 %30 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %46, %40 ], [ %48, %47 ]
  %51 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %50(%"class.blink::CollapsedBorderValues"* %37) #12
  %52 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = lshr i32 %53, 1
  %55 = and i32 %54, 16777215
  br label %56

56:                                               ; preds = %28, %49
  %57 = phi i32 [ %55, %49 ], [ 0, %28 ]
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8, !noalias !51
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 7
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8, !noalias !51
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 7
  %62 = bitcast %"class.blink::LayoutObject"** %61 to %"class.blink::LayoutTable"**
  %63 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %62, align 8, !noalias !51
  %64 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8, !noalias !51
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 9
  %67 = bitcast [20 x i8]* %66 to i160*
  %68 = load i160, i160* %67, align 8, !noalias !51
  %69 = lshr i160 %68, 102
  %70 = trunc i160 %69 to i8
  %71 = and i8 %70, 3
  switch i8 %71, label %76 [
    i8 0, label %72
    i8 1, label %77
  ]

72:                                               ; preds = %56
  %73 = and i160 %68, 41538374868278621028243970633760768
  %74 = icmp eq i160 %73, 0
  %75 = select i1 %74, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  br label %77

76:                                               ; preds = %56
  br label %77

77:                                               ; preds = %56, %76, %72
  %78 = phi { i64, i64 } [ %75, %72 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %76 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %56 ]
  %79 = extractvalue { i64, i64 } %78, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %80 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  %81 = icmp eq %"class.blink::CollapsedBorderValues"* %80, null
  br i1 %81, label %106, label %82

82:                                               ; preds = %77
  %83 = extractvalue { i64, i64 } %78, 1
  %84 = bitcast %"class.blink::CollapsedBorderValues"* %80 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  %86 = bitcast i8* %85 to %"class.blink::CollapsedBorderValues"*
  %87 = and i64 %79, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %82
  %90 = bitcast i8* %85 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = add i64 %79, -1
  %93 = getelementptr i8, i8* %91, i64 %92
  %94 = bitcast i8* %93 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %95 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %94, align 8
  br label %98

96:                                               ; preds = %82
  %97 = inttoptr i64 %79 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %95, %89 ], [ %97, %96 ]
  %100 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %99(%"class.blink::CollapsedBorderValues"* %86) #12
  %101 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %100, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 33554431
  %104 = add nuw nsw i32 %103, 1
  %105 = lshr i32 %104, 1
  br label %106

106:                                              ; preds = %77, %98
  %107 = phi i32 [ %105, %98 ], [ 0, %77 ]
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8, !noalias !54
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 7
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %109, align 8, !noalias !54
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 7
  %112 = bitcast %"class.blink::LayoutObject"** %111 to %"class.blink::LayoutTable"**
  %113 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %112, align 8, !noalias !54
  %114 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %114, align 8, !noalias !54
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %115, i64 0, i32 0, i32 9
  %117 = bitcast [20 x i8]* %116 to i160*
  %118 = load i160, i160* %117, align 8, !noalias !54
  %119 = and i160 %118, 15211807202738752817960438464512
  %120 = icmp eq i160 %119, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %106
  %122 = and i160 %118, 41538374868278621028243970633760768
  %123 = icmp eq i160 %122, 0
  %124 = select i1 %123, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  %125 = extractvalue { i64, i64 } %124, 0
  %126 = extractvalue { i64, i64 } %124, 1
  br label %127

127:                                              ; preds = %121, %106
  %128 = phi i64 [ %125, %121 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), %106 ]
  %129 = phi i64 [ %126, %121 ], [ 0, %106 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %130 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  %131 = icmp eq %"class.blink::CollapsedBorderValues"* %130, null
  br i1 %131, label %154, label %132

132:                                              ; preds = %127
  %133 = bitcast %"class.blink::CollapsedBorderValues"* %130 to i8*
  %134 = getelementptr inbounds i8, i8* %133, i64 %129
  %135 = bitcast i8* %134 to %"class.blink::CollapsedBorderValues"*
  %136 = and i64 %128, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %145, label %138

138:                                              ; preds = %132
  %139 = bitcast i8* %134 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = add i64 %128, -1
  %142 = getelementptr i8, i8* %140, i64 %141
  %143 = bitcast i8* %142 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %144 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %143, align 8
  br label %147

145:                                              ; preds = %132
  %146 = inttoptr i64 %128 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %144, %138 ], [ %146, %145 ]
  %149 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %148(%"class.blink::CollapsedBorderValues"* %135) #12
  %150 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %149, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = lshr i32 %151, 1
  %153 = and i32 %152, 16777215
  br label %154

154:                                              ; preds = %127, %147
  %155 = phi i32 [ %153, %147 ], [ 0, %127 ]
  %156 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8, !noalias !57
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 0, i32 7
  %158 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %157, align 8, !noalias !57
  %159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %158, i64 0, i32 7
  %160 = bitcast %"class.blink::LayoutObject"** %159 to %"class.blink::LayoutTable"**
  %161 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %160, align 8, !noalias !57
  %162 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %163 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %162, align 8, !noalias !57
  %164 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %163, i64 0, i32 0, i32 9
  %165 = bitcast [20 x i8]* %164 to i160*
  %166 = load i160, i160* %165, align 8, !noalias !57
  %167 = and i160 %166, 15211807202738752817960438464512
  %168 = icmp eq i160 %167, 0
  br i1 %168, label %175, label %169

169:                                              ; preds = %154
  %170 = and i160 %166, 41538374868278621028243970633760768
  %171 = icmp eq i160 %170, 0
  %172 = select i1 %171, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  %173 = extractvalue { i64, i64 } %172, 0
  %174 = extractvalue { i64, i64 } %172, 1
  br label %175

175:                                              ; preds = %169, %154
  %176 = phi i64 [ %173, %169 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), %154 ]
  %177 = phi i64 [ %174, %169 ], [ 0, %154 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %178 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  %179 = icmp eq %"class.blink::CollapsedBorderValues"* %178, null
  br i1 %179, label %203, label %180

180:                                              ; preds = %175
  %181 = bitcast %"class.blink::CollapsedBorderValues"* %178 to i8*
  %182 = getelementptr inbounds i8, i8* %181, i64 %177
  %183 = bitcast i8* %182 to %"class.blink::CollapsedBorderValues"*
  %184 = and i64 %176, 1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %193, label %186

186:                                              ; preds = %180
  %187 = bitcast i8* %182 to i8**
  %188 = load i8*, i8** %187, align 8
  %189 = add i64 %176, -1
  %190 = getelementptr i8, i8* %188, i64 %189
  %191 = bitcast i8* %190 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %192 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %191, align 8
  br label %195

193:                                              ; preds = %180
  %194 = inttoptr i64 %176 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %192, %186 ], [ %194, %193 ]
  %197 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %196(%"class.blink::CollapsedBorderValues"* %183) #12
  %198 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %197, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = and i32 %199, 33554431
  %201 = add nuw nsw i32 %200, 1
  %202 = lshr i32 %201, 1
  br label %203

203:                                              ; preds = %175, %195
  %204 = phi i32 [ %202, %195 ], [ 0, %175 ]
  %205 = icmp eq i32 %57, 0
  %206 = xor i1 %21, true
  %207 = or i1 %205, %206
  %208 = icmp eq i32 %107, 0
  %209 = or i1 %21, %208
  %210 = and i1 %207, %209
  br i1 %210, label %324, label %211

211:                                              ; preds = %203
  %212 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %213 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %212, i64 0, i32 7
  %214 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %214, i64 0, i32 7
  %216 = bitcast %"class.blink::LayoutObject"** %215 to %"class.blink::LayoutTable"**
  %217 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %216, align 8
  %218 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellPrecedingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %217, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %219 = icmp eq %"class.blink::LayoutTableCell"* %218, null
  br i1 %219, label %324, label %220

220:                                              ; preds = %211
  %221 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %222 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %221, align 8, !noalias !60
  %223 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %222, i64 0, i32 7
  %224 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %223, align 8, !noalias !60
  %225 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %224, i64 0, i32 7
  %226 = bitcast %"class.blink::LayoutObject"** %225 to %"class.blink::LayoutTable"**
  %227 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %226, align 8, !noalias !60
  %228 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %229 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %228, align 8, !noalias !60
  %230 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %229, i64 0, i32 0, i32 9
  %231 = bitcast [20 x i8]* %230 to i160*
  %232 = load i160, i160* %231, align 8, !noalias !60
  %233 = and i160 %232, 15211807202738752817960438464512
  %234 = icmp eq i160 %233, 0
  br i1 %234, label %241, label %235

235:                                              ; preds = %220
  %236 = and i160 %232, 41538374868278621028243970633760768
  %237 = icmp eq i160 %236, 0
  %238 = select i1 %237, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  %239 = extractvalue { i64, i64 } %238, 0
  %240 = extractvalue { i64, i64 } %238, 1
  br label %241

241:                                              ; preds = %235, %220
  %242 = phi i64 [ %239, %235 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), %220 ]
  %243 = phi i64 [ %240, %235 ], [ 0, %220 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %218) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %218) #12
  %244 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %245 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %244, align 8
  %246 = icmp eq %"class.blink::CollapsedBorderValues"* %245, null
  br i1 %246, label %269, label %247

247:                                              ; preds = %241
  %248 = bitcast %"class.blink::CollapsedBorderValues"* %245 to i8*
  %249 = getelementptr inbounds i8, i8* %248, i64 %243
  %250 = bitcast i8* %249 to %"class.blink::CollapsedBorderValues"*
  %251 = and i64 %242, 1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %260, label %253

253:                                              ; preds = %247
  %254 = bitcast i8* %249 to i8**
  %255 = load i8*, i8** %254, align 8
  %256 = add i64 %242, -1
  %257 = getelementptr i8, i8* %255, i64 %256
  %258 = bitcast i8* %257 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %259 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %258, align 8
  br label %262

260:                                              ; preds = %247
  %261 = inttoptr i64 %242 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %259, %253 ], [ %261, %260 ]
  %264 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %263(%"class.blink::CollapsedBorderValues"* %250) #12
  %265 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %264, i64 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = lshr i32 %266, 1
  %268 = and i32 %267, 16777215
  br label %269

269:                                              ; preds = %241, %262
  %270 = phi i32 [ %268, %262 ], [ 0, %241 ]
  %271 = icmp ult i32 %155, %270
  %272 = select i1 %271, i32 %270, i32 %155
  %273 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %221, align 8, !noalias !63
  %274 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %273, i64 0, i32 7
  %275 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %274, align 8, !noalias !63
  %276 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %275, i64 0, i32 7
  %277 = bitcast %"class.blink::LayoutObject"** %276 to %"class.blink::LayoutTable"**
  %278 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %277, align 8, !noalias !63
  %279 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %278, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %280 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %279, align 8, !noalias !63
  %281 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %280, i64 0, i32 0, i32 9
  %282 = bitcast [20 x i8]* %281 to i160*
  %283 = load i160, i160* %282, align 8, !noalias !63
  %284 = and i160 %283, 15211807202738752817960438464512
  %285 = icmp eq i160 %284, 0
  br i1 %285, label %292, label %286

286:                                              ; preds = %269
  %287 = and i160 %283, 41538374868278621028243970633760768
  %288 = icmp eq i160 %287, 0
  %289 = select i1 %288, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  %290 = extractvalue { i64, i64 } %289, 0
  %291 = extractvalue { i64, i64 } %289, 1
  br label %292

292:                                              ; preds = %286, %269
  %293 = phi i64 [ %290, %286 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), %269 ]
  %294 = phi i64 [ %291, %286 ], [ 0, %269 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %218) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %218) #12
  %295 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %244, align 8
  %296 = icmp eq %"class.blink::CollapsedBorderValues"* %295, null
  br i1 %296, label %320, label %297

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::CollapsedBorderValues"* %295 to i8*
  %299 = getelementptr inbounds i8, i8* %298, i64 %294
  %300 = bitcast i8* %299 to %"class.blink::CollapsedBorderValues"*
  %301 = and i64 %293, 1
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %310, label %303

303:                                              ; preds = %297
  %304 = bitcast i8* %299 to i8**
  %305 = load i8*, i8** %304, align 8
  %306 = add i64 %293, -1
  %307 = getelementptr i8, i8* %305, i64 %306
  %308 = bitcast i8* %307 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %309 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %308, align 8
  br label %312

310:                                              ; preds = %297
  %311 = inttoptr i64 %293 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %309, %303 ], [ %311, %310 ]
  %314 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %313(%"class.blink::CollapsedBorderValues"* %300) #12
  %315 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %314, i64 0, i32 1
  %316 = load i32, i32* %315, align 4
  %317 = and i32 %316, 33554431
  %318 = add nuw nsw i32 %317, 1
  %319 = lshr i32 %318, 1
  br label %320

320:                                              ; preds = %292, %312
  %321 = phi i32 [ %319, %312 ], [ 0, %292 ]
  %322 = icmp ult i32 %204, %321
  %323 = select i1 %322, i32 %321, i32 %204
  br label %324

324:                                              ; preds = %203, %320, %211
  %325 = phi i32 [ %204, %211 ], [ %323, %320 ], [ %204, %203 ]
  %326 = phi i32 [ %155, %211 ], [ %272, %320 ], [ %155, %203 ]
  %327 = or i1 %21, %205
  %328 = or i1 %208, %206
  %329 = and i1 %327, %328
  br i1 %329, label %443, label %330

330:                                              ; preds = %324
  %331 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %332 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %331, i64 0, i32 7
  %333 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %333, i64 0, i32 7
  %335 = bitcast %"class.blink::LayoutObject"** %334 to %"class.blink::LayoutTable"**
  %336 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %335, align 8
  %337 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellFollowingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %336, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %338 = icmp eq %"class.blink::LayoutTableCell"* %337, null
  br i1 %338, label %443, label %339

339:                                              ; preds = %330
  %340 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %341 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %340, align 8, !noalias !66
  %342 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %341, i64 0, i32 7
  %343 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %342, align 8, !noalias !66
  %344 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %343, i64 0, i32 7
  %345 = bitcast %"class.blink::LayoutObject"** %344 to %"class.blink::LayoutTable"**
  %346 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %345, align 8, !noalias !66
  %347 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %348 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %347, align 8, !noalias !66
  %349 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %348, i64 0, i32 0, i32 9
  %350 = bitcast [20 x i8]* %349 to i160*
  %351 = load i160, i160* %350, align 8, !noalias !66
  %352 = and i160 %351, 15211807202738752817960438464512
  %353 = icmp eq i160 %352, 0
  br i1 %353, label %360, label %354

354:                                              ; preds = %339
  %355 = and i160 %351, 41538374868278621028243970633760768
  %356 = icmp eq i160 %355, 0
  %357 = select i1 %356, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  %358 = extractvalue { i64, i64 } %357, 0
  %359 = extractvalue { i64, i64 } %357, 1
  br label %360

360:                                              ; preds = %354, %339
  %361 = phi i64 [ %358, %354 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), %339 ]
  %362 = phi i64 [ %359, %354 ], [ 0, %339 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %337) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %337) #12
  %363 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %337, i64 0, i32 3, i32 0, i32 0, i32 0
  %364 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %363, align 8
  %365 = icmp eq %"class.blink::CollapsedBorderValues"* %364, null
  br i1 %365, label %388, label %366

366:                                              ; preds = %360
  %367 = bitcast %"class.blink::CollapsedBorderValues"* %364 to i8*
  %368 = getelementptr inbounds i8, i8* %367, i64 %362
  %369 = bitcast i8* %368 to %"class.blink::CollapsedBorderValues"*
  %370 = and i64 %361, 1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %379, label %372

372:                                              ; preds = %366
  %373 = bitcast i8* %368 to i8**
  %374 = load i8*, i8** %373, align 8
  %375 = add i64 %361, -1
  %376 = getelementptr i8, i8* %374, i64 %375
  %377 = bitcast i8* %376 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %378 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %377, align 8
  br label %381

379:                                              ; preds = %366
  %380 = inttoptr i64 %361 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %381

381:                                              ; preds = %379, %372
  %382 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %378, %372 ], [ %380, %379 ]
  %383 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %382(%"class.blink::CollapsedBorderValues"* %369) #12
  %384 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %383, i64 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = lshr i32 %385, 1
  %387 = and i32 %386, 16777215
  br label %388

388:                                              ; preds = %360, %381
  %389 = phi i32 [ %387, %381 ], [ 0, %360 ]
  %390 = icmp ult i32 %326, %389
  %391 = select i1 %390, i32 %389, i32 %326
  %392 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %340, align 8, !noalias !69
  %393 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %392, i64 0, i32 7
  %394 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %393, align 8, !noalias !69
  %395 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %394, i64 0, i32 7
  %396 = bitcast %"class.blink::LayoutObject"** %395 to %"class.blink::LayoutTable"**
  %397 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %396, align 8, !noalias !69
  %398 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %399 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %398, align 8, !noalias !69
  %400 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %399, i64 0, i32 0, i32 9
  %401 = bitcast [20 x i8]* %400 to i160*
  %402 = load i160, i160* %401, align 8, !noalias !69
  %403 = and i160 %402, 15211807202738752817960438464512
  %404 = icmp eq i160 %403, 0
  br i1 %404, label %411, label %405

405:                                              ; preds = %388
  %406 = and i160 %402, 41538374868278621028243970633760768
  %407 = icmp eq i160 %406, 0
  %408 = select i1 %407, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  %409 = extractvalue { i64, i64 } %408, 0
  %410 = extractvalue { i64, i64 } %408, 1
  br label %411

411:                                              ; preds = %405, %388
  %412 = phi i64 [ %409, %405 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), %388 ]
  %413 = phi i64 [ %410, %405 ], [ 0, %388 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %337) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %337) #12
  %414 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %363, align 8
  %415 = icmp eq %"class.blink::CollapsedBorderValues"* %414, null
  br i1 %415, label %439, label %416

416:                                              ; preds = %411
  %417 = bitcast %"class.blink::CollapsedBorderValues"* %414 to i8*
  %418 = getelementptr inbounds i8, i8* %417, i64 %413
  %419 = bitcast i8* %418 to %"class.blink::CollapsedBorderValues"*
  %420 = and i64 %412, 1
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %429, label %422

422:                                              ; preds = %416
  %423 = bitcast i8* %418 to i8**
  %424 = load i8*, i8** %423, align 8
  %425 = add i64 %412, -1
  %426 = getelementptr i8, i8* %424, i64 %425
  %427 = bitcast i8* %426 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %428 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %427, align 8
  br label %431

429:                                              ; preds = %416
  %430 = inttoptr i64 %412 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %431

431:                                              ; preds = %429, %422
  %432 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %428, %422 ], [ %430, %429 ]
  %433 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %432(%"class.blink::CollapsedBorderValues"* %419) #12
  %434 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %433, i64 0, i32 1
  %435 = load i32, i32* %434, align 4
  %436 = and i32 %435, 33554431
  %437 = add nuw nsw i32 %436, 1
  %438 = lshr i32 %437, 1
  br label %439

439:                                              ; preds = %411, %431
  %440 = phi i32 [ %438, %431 ], [ 0, %411 ]
  %441 = icmp ult i32 %325, %440
  %442 = select i1 %441, i32 %440, i32 %325
  br label %443

443:                                              ; preds = %324, %439, %330
  %444 = phi i32 [ %325, %330 ], [ %442, %439 ], [ %325, %324 ]
  %445 = phi i32 [ %326, %330 ], [ %391, %439 ], [ %326, %324 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %562, label %447

447:                                              ; preds = %443
  %448 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %449 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %448, i64 0, i32 7
  %450 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %449, align 8
  %451 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %450, i64 0, i32 7
  %452 = bitcast %"class.blink::LayoutObject"** %451 to %"class.blink::LayoutTable"**
  %453 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %452, align 8
  %454 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellAboveERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %453, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %455 = icmp eq %"class.blink::LayoutTableCell"* %454, null
  br i1 %455, label %562, label %456

456:                                              ; preds = %447
  %457 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %454, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %458 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %457, align 8, !noalias !72
  %459 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %458, i64 0, i32 7
  %460 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %459, align 8, !noalias !72
  %461 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %460, i64 0, i32 7
  %462 = bitcast %"class.blink::LayoutObject"** %461 to %"class.blink::LayoutTable"**
  %463 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %462, align 8, !noalias !72
  %464 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %463, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %465 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %464, align 8, !noalias !72
  %466 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %465, i64 0, i32 0, i32 9
  %467 = bitcast [20 x i8]* %466 to i160*
  %468 = load i160, i160* %467, align 8, !noalias !72
  %469 = lshr i160 %468, 102
  %470 = trunc i160 %469 to i8
  %471 = and i8 %470, 3
  switch i8 %471, label %476 [
    i8 0, label %472
    i8 1, label %477
  ]

472:                                              ; preds = %456
  %473 = and i160 %468, 41538374868278621028243970633760768
  %474 = icmp eq i160 %473, 0
  %475 = select i1 %474, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  br label %477

476:                                              ; preds = %456
  br label %477

477:                                              ; preds = %456, %476, %472
  %478 = phi { i64, i64 } [ %475, %472 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %476 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %456 ]
  %479 = extractvalue { i64, i64 } %478, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %454) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %454) #12
  %480 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %454, i64 0, i32 3, i32 0, i32 0, i32 0
  %481 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %480, align 8
  %482 = icmp eq %"class.blink::CollapsedBorderValues"* %481, null
  br i1 %482, label %506, label %483

483:                                              ; preds = %477
  %484 = extractvalue { i64, i64 } %478, 1
  %485 = bitcast %"class.blink::CollapsedBorderValues"* %481 to i8*
  %486 = getelementptr inbounds i8, i8* %485, i64 %484
  %487 = bitcast i8* %486 to %"class.blink::CollapsedBorderValues"*
  %488 = and i64 %479, 1
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %497, label %490

490:                                              ; preds = %483
  %491 = bitcast i8* %486 to i8**
  %492 = load i8*, i8** %491, align 8
  %493 = add i64 %479, -1
  %494 = getelementptr i8, i8* %492, i64 %493
  %495 = bitcast i8* %494 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %496 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %495, align 8
  br label %499

497:                                              ; preds = %483
  %498 = inttoptr i64 %479 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %499

499:                                              ; preds = %497, %490
  %500 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %496, %490 ], [ %498, %497 ]
  %501 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %500(%"class.blink::CollapsedBorderValues"* %487) #12
  %502 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %501, i64 0, i32 1
  %503 = load i32, i32* %502, align 4
  %504 = lshr i32 %503, 1
  %505 = and i32 %504, 16777215
  br label %506

506:                                              ; preds = %477, %499
  %507 = phi i32 [ %505, %499 ], [ 0, %477 ]
  %508 = icmp ult i32 %57, %507
  %509 = select i1 %508, i32 %507, i32 %57
  %510 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %457, align 8, !noalias !75
  %511 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %510, i64 0, i32 7
  %512 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %511, align 8, !noalias !75
  %513 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %512, i64 0, i32 7
  %514 = bitcast %"class.blink::LayoutObject"** %513 to %"class.blink::LayoutTable"**
  %515 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %514, align 8, !noalias !75
  %516 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %515, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %517 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %516, align 8, !noalias !75
  %518 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %517, i64 0, i32 0, i32 9
  %519 = bitcast [20 x i8]* %518 to i160*
  %520 = load i160, i160* %519, align 8, !noalias !75
  %521 = lshr i160 %520, 102
  %522 = trunc i160 %521 to i8
  %523 = and i8 %522, 3
  switch i8 %523, label %528 [
    i8 0, label %524
    i8 1, label %529
  ]

524:                                              ; preds = %506
  %525 = and i160 %520, 41538374868278621028243970633760768
  %526 = icmp eq i160 %525, 0
  %527 = select i1 %526, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  br label %529

528:                                              ; preds = %506
  br label %529

529:                                              ; preds = %506, %528, %524
  %530 = phi { i64, i64 } [ %527, %524 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %528 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %506 ]
  %531 = extractvalue { i64, i64 } %530, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %454) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %454) #12
  %532 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %480, align 8
  %533 = icmp eq %"class.blink::CollapsedBorderValues"* %532, null
  br i1 %533, label %558, label %534

534:                                              ; preds = %529
  %535 = extractvalue { i64, i64 } %530, 1
  %536 = bitcast %"class.blink::CollapsedBorderValues"* %532 to i8*
  %537 = getelementptr inbounds i8, i8* %536, i64 %535
  %538 = bitcast i8* %537 to %"class.blink::CollapsedBorderValues"*
  %539 = and i64 %531, 1
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %548, label %541

541:                                              ; preds = %534
  %542 = bitcast i8* %537 to i8**
  %543 = load i8*, i8** %542, align 8
  %544 = add i64 %531, -1
  %545 = getelementptr i8, i8* %543, i64 %544
  %546 = bitcast i8* %545 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %547 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %546, align 8
  br label %550

548:                                              ; preds = %534
  %549 = inttoptr i64 %531 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %550

550:                                              ; preds = %548, %541
  %551 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %547, %541 ], [ %549, %548 ]
  %552 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %551(%"class.blink::CollapsedBorderValues"* %538) #12
  %553 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %552, i64 0, i32 1
  %554 = load i32, i32* %553, align 4
  %555 = and i32 %554, 33554431
  %556 = add nuw nsw i32 %555, 1
  %557 = lshr i32 %556, 1
  br label %558

558:                                              ; preds = %529, %550
  %559 = phi i32 [ %557, %550 ], [ 0, %529 ]
  %560 = icmp ult i32 %107, %559
  %561 = select i1 %560, i32 %559, i32 %107
  br label %562

562:                                              ; preds = %558, %447, %443
  %563 = phi i32 [ %107, %443 ], [ %107, %447 ], [ %561, %558 ]
  %564 = phi i32 [ %57, %443 ], [ %57, %447 ], [ %509, %558 ]
  %565 = icmp eq i32 %444, 0
  br i1 %565, label %681, label %566

566:                                              ; preds = %562
  %567 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %568 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %567, i64 0, i32 7
  %569 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %568, align 8
  %570 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %569, i64 0, i32 7
  %571 = bitcast %"class.blink::LayoutObject"** %570 to %"class.blink::LayoutTable"**
  %572 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %571, align 8
  %573 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellBelowERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %572, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %574 = icmp eq %"class.blink::LayoutTableCell"* %573, null
  br i1 %574, label %681, label %575

575:                                              ; preds = %566
  %576 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %577 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %576, align 8, !noalias !78
  %578 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %577, i64 0, i32 7
  %579 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %578, align 8, !noalias !78
  %580 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %579, i64 0, i32 7
  %581 = bitcast %"class.blink::LayoutObject"** %580 to %"class.blink::LayoutTable"**
  %582 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %581, align 8, !noalias !78
  %583 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %582, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %584 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %583, align 8, !noalias !78
  %585 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %584, i64 0, i32 0, i32 9
  %586 = bitcast [20 x i8]* %585 to i160*
  %587 = load i160, i160* %586, align 8, !noalias !78
  %588 = lshr i160 %587, 102
  %589 = trunc i160 %588 to i8
  %590 = and i8 %589, 3
  switch i8 %590, label %595 [
    i8 0, label %591
    i8 1, label %596
  ]

591:                                              ; preds = %575
  %592 = and i160 %587, 41538374868278621028243970633760768
  %593 = icmp eq i160 %592, 0
  %594 = select i1 %593, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  br label %596

595:                                              ; preds = %575
  br label %596

596:                                              ; preds = %575, %595, %591
  %597 = phi { i64, i64 } [ %594, %591 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %595 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %575 ]
  %598 = extractvalue { i64, i64 } %597, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %573) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %573) #12
  %599 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %573, i64 0, i32 3, i32 0, i32 0, i32 0
  %600 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %599, align 8
  %601 = icmp eq %"class.blink::CollapsedBorderValues"* %600, null
  br i1 %601, label %625, label %602

602:                                              ; preds = %596
  %603 = extractvalue { i64, i64 } %597, 1
  %604 = bitcast %"class.blink::CollapsedBorderValues"* %600 to i8*
  %605 = getelementptr inbounds i8, i8* %604, i64 %603
  %606 = bitcast i8* %605 to %"class.blink::CollapsedBorderValues"*
  %607 = and i64 %598, 1
  %608 = icmp eq i64 %607, 0
  br i1 %608, label %616, label %609

609:                                              ; preds = %602
  %610 = bitcast i8* %605 to i8**
  %611 = load i8*, i8** %610, align 8
  %612 = add i64 %598, -1
  %613 = getelementptr i8, i8* %611, i64 %612
  %614 = bitcast i8* %613 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %615 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %614, align 8
  br label %618

616:                                              ; preds = %602
  %617 = inttoptr i64 %598 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %618

618:                                              ; preds = %616, %609
  %619 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %615, %609 ], [ %617, %616 ]
  %620 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %619(%"class.blink::CollapsedBorderValues"* %606) #12
  %621 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %620, i64 0, i32 1
  %622 = load i32, i32* %621, align 4
  %623 = lshr i32 %622, 1
  %624 = and i32 %623, 16777215
  br label %625

625:                                              ; preds = %596, %618
  %626 = phi i32 [ %624, %618 ], [ 0, %596 ]
  %627 = icmp ult i32 %564, %626
  %628 = select i1 %627, i32 %626, i32 %564
  %629 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %576, align 8, !noalias !81
  %630 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %629, i64 0, i32 7
  %631 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %630, align 8, !noalias !81
  %632 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %631, i64 0, i32 7
  %633 = bitcast %"class.blink::LayoutObject"** %632 to %"class.blink::LayoutTable"**
  %634 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %633, align 8, !noalias !81
  %635 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %634, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %636 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %635, align 8, !noalias !81
  %637 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %636, i64 0, i32 0, i32 9
  %638 = bitcast [20 x i8]* %637 to i160*
  %639 = load i160, i160* %638, align 8, !noalias !81
  %640 = lshr i160 %639, 102
  %641 = trunc i160 %640 to i8
  %642 = and i8 %641, 3
  switch i8 %642, label %647 [
    i8 0, label %643
    i8 1, label %648
  ]

643:                                              ; preds = %625
  %644 = and i160 %639, 41538374868278621028243970633760768
  %645 = icmp eq i160 %644, 0
  %646 = select i1 %645, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  br label %648

647:                                              ; preds = %625
  br label %648

648:                                              ; preds = %625, %647, %643
  %649 = phi { i64, i64 } [ %646, %643 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %647 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %625 ]
  %650 = extractvalue { i64, i64 } %649, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %573) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %573) #12
  %651 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %599, align 8
  %652 = icmp eq %"class.blink::CollapsedBorderValues"* %651, null
  br i1 %652, label %677, label %653

653:                                              ; preds = %648
  %654 = extractvalue { i64, i64 } %649, 1
  %655 = bitcast %"class.blink::CollapsedBorderValues"* %651 to i8*
  %656 = getelementptr inbounds i8, i8* %655, i64 %654
  %657 = bitcast i8* %656 to %"class.blink::CollapsedBorderValues"*
  %658 = and i64 %650, 1
  %659 = icmp eq i64 %658, 0
  br i1 %659, label %667, label %660

660:                                              ; preds = %653
  %661 = bitcast i8* %656 to i8**
  %662 = load i8*, i8** %661, align 8
  %663 = add i64 %650, -1
  %664 = getelementptr i8, i8* %662, i64 %663
  %665 = bitcast i8* %664 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %666 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %665, align 8
  br label %669

667:                                              ; preds = %653
  %668 = inttoptr i64 %650 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %669

669:                                              ; preds = %667, %660
  %670 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %666, %660 ], [ %668, %667 ]
  %671 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %670(%"class.blink::CollapsedBorderValues"* %657) #12
  %672 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %671, i64 0, i32 1
  %673 = load i32, i32* %672, align 4
  %674 = and i32 %673, 33554431
  %675 = add nuw nsw i32 %674, 1
  %676 = lshr i32 %675, 1
  br label %677

677:                                              ; preds = %648, %669
  %678 = phi i32 [ %676, %669 ], [ 0, %648 ]
  %679 = icmp ult i32 %563, %678
  %680 = select i1 %679, i32 %678, i32 %563
  br label %681

681:                                              ; preds = %677, %566, %562
  %682 = phi i32 [ %563, %562 ], [ %563, %566 ], [ %680, %677 ]
  %683 = phi i32 [ %564, %562 ], [ %564, %566 ], [ %628, %677 ]
  %684 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %685 = bitcast %"class.blink::LayoutSize"* %684 to i64*
  %686 = load i64, i64* %685, align 4
  %687 = shl nsw i32 %445, 6
  %688 = icmp ugt i32 %682, 33554430
  %689 = shl i32 %682, 6
  %690 = select i1 %688, i32 2147483647, i32 %689
  %691 = shl i32 %444, 6
  %692 = icmp ugt i32 %683, 33554430
  %693 = shl nsw i32 %683, 6
  %694 = select i1 %692, i32 2147483647, i32 %693
  %695 = tail call i1 @llvm.is.constant.i32(i32 %694) #12
  %696 = sub nsw i32 0, %694
  %697 = icmp eq i32 %696, -2147483648
  %698 = and i1 %695, %697
  %699 = tail call i1 @llvm.is.constant.i32(i32 %687) #12
  %700 = sub nsw i32 0, %687
  %701 = icmp eq i32 %700, -2147483648
  %702 = and i1 %699, %701
  %703 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %694, i32 %690) #12
  %704 = extractvalue { i32, i1 } %703, 1
  %705 = extractvalue { i32, i1 } %703, 0
  %706 = select i1 %704, i32 2147483647, i32 %705, !prof !4
  %707 = add nsw i32 %687, %691
  %708 = trunc i64 %686 to i32
  %709 = icmp slt i32 %706, 0
  %710 = select i1 %709, i32 -2147483648, i32 2147483647
  %711 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %708, i32 %706) #12
  %712 = extractvalue { i32, i1 } %711, 1
  %713 = extractvalue { i32, i1 } %711, 0
  %714 = select i1 %712, i32 %710, i32 %713, !prof !4
  %715 = zext i32 %714 to i64
  %716 = lshr i64 %686, 32
  %717 = trunc i64 %716 to i32
  %718 = icmp slt i32 %707, 0
  %719 = select i1 %718, i32 -2147483648, i32 2147483647
  %720 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %717, i32 %707) #12
  %721 = extractvalue { i32, i1 } %720, 1
  %722 = extractvalue { i32, i1 } %720, 0
  %723 = select i1 %721, i32 %719, i32 %722, !prof !4
  %724 = zext i32 %723 to i64
  %725 = shl nuw i64 %724, 32
  %726 = or i64 %725, %715
  %727 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  %728 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %727, i64 0, i32 1
  %729 = bitcast %"class.blink::LayoutRect"* %728 to i64*
  %730 = zext i32 %700 to i64
  %731 = shl nuw i64 %730, 32
  %732 = select i1 %702, i64 9223372032559808512, i64 %731
  %733 = zext i32 %696 to i64
  %734 = select i1 %698, i64 2147483647, i64 %733
  %735 = or i64 %732, %734
  store i64 %735, i64* %729, align 4
  %736 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %727, i64 0, i32 1, i32 1
  %737 = bitcast %"class.blink::LayoutSize"* %736 to i64*
  store i64 %726, i64* %737, align 4
  br label %738

738:                                              ; preds = %2, %681
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow21ComputeVisualOverflowEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTable"**
  %8 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 81129638414606681695789005144064
  %16 = icmp eq i160 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %18, align 8
  %20 = icmp eq %"class.blink::CollapsedBorderValues"* %19, null
  br i1 %20, label %99, label %21

21:                                               ; preds = %17
  store %"class.blink::CollapsedBorderValues"* null, %"class.blink::CollapsedBorderValues"** %18, align 8
  %22 = bitcast %"class.blink::CollapsedBorderValues"* %19 to i8*
  tail call void @free(i8* %22) #12
  br label %103

23:                                               ; preds = %1
  tail call void @_ZN5blink11LayoutTable45InvalidateCollapsedBordersForAllCellsIfNeededEv(%"class.blink::LayoutTable"* %8) #12
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %26 = bitcast %"class.blink::LayoutObject"** %25 to %"class.blink::LayoutTableSection"**
  %27 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutTableSection"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %27, i64 0, i32 10
  %31 = load i8, i8* %30, align 4, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"* nonnull %27) #12
  br label %34

34:                                               ; preds = %33, %29, %23
  %35 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1073741824
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %194

39:                                               ; preds = %34
  %40 = or i32 %36, 1073741824
  store i32 %40, i32* %35, align 8
  %41 = tail call i64 @_ZNK5blink15LayoutTableCell27ComputeCollapsedStartBorderEv(%"class.blink::LayoutTableCell"* %0)
  %42 = tail call i64 @_ZNK5blink15LayoutTableCell25ComputeCollapsedEndBorderEv(%"class.blink::LayoutTableCell"* %0)
  %43 = tail call i64 @_ZNK5blink15LayoutTableCell28ComputeCollapsedBeforeBorderEv(%"class.blink::LayoutTableCell"* %0)
  %44 = tail call i64 @_ZNK5blink15LayoutTableCell27ComputeCollapsedAfterBorderEv(%"class.blink::LayoutTableCell"* %0)
  %45 = tail call noalias i8* @malloc(i64 48) #12
  %46 = bitcast i8* %45 to %"class.blink::CollapsedBorderValues"*
  %47 = bitcast i8* %45 to i64*
  %48 = getelementptr inbounds i8, i8* %45, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 16, i1 false) #12
  store i64 %41, i64* %47, align 4
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i64*
  store i64 %42, i64* %50, align 4
  %51 = getelementptr inbounds i8, i8* %45, i64 16
  %52 = bitcast i8* %51 to i64*
  store i64 %43, i64* %52, align 4
  %53 = getelementptr inbounds i8, i8* %45, i64 24
  %54 = bitcast i8* %53 to i64*
  store i64 %44, i64* %54, align 4
  %55 = ptrtoint i8* %45 to i64
  %56 = or i64 %41, %42
  %57 = or i64 %56, %43
  %58 = and i64 %57, 144115183780888576
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %39
  %61 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1797"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %62, align 8
  %64 = icmp eq %"class.blink::CollapsedBorderValues"* %63, null
  br i1 %64, label %65, label %82

65:                                               ; preds = %60
  %66 = bitcast %"class.std::__1::unique_ptr.1797"* %61 to i64*
  store i64 %55, i64* %66, align 8
  br label %103

67:                                               ; preds = %39
  %68 = and i64 %44, 144115183780888576
  %69 = icmp eq i64 %68, 0
  %70 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1797"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %71, align 8
  %73 = icmp ne %"class.blink::CollapsedBorderValues"* %72, null
  br i1 %69, label %74, label %79

74:                                               ; preds = %67
  br i1 %73, label %75, label %93

75:                                               ; preds = %74
  store %"class.blink::CollapsedBorderValues"* null, %"class.blink::CollapsedBorderValues"** %71, align 8
  %76 = bitcast %"class.blink::CollapsedBorderValues"* %72 to i8*
  tail call void @free(i8* %76) #12
  %77 = icmp eq i8* %45, null
  br i1 %77, label %103, label %78

78:                                               ; preds = %75
  tail call void @free(i8* nonnull %45) #12
  br label %103

79:                                               ; preds = %67
  br i1 %73, label %82, label %80

80:                                               ; preds = %79
  %81 = bitcast %"class.std::__1::unique_ptr.1797"* %70 to i64*
  store i64 %55, i64* %81, align 8
  br label %103

82:                                               ; preds = %60, %79
  %83 = phi %"class.std::__1::unique_ptr.1797"* [ %61, %60 ], [ %70, %79 ]
  %84 = phi %"class.blink::CollapsedBorderValues"** [ %62, %60 ], [ %71, %79 ]
  %85 = phi %"class.blink::CollapsedBorderValues"* [ %63, %60 ], [ %72, %79 ]
  %86 = tail call zeroext i1 @_ZNK5blink21CollapsedBorderValues14VisuallyEqualsERKS0_(%"class.blink::CollapsedBorderValues"* nonnull %85, %"class.blink::CollapsedBorderValues"* dereferenceable(48) %46)
  br i1 %86, label %96, label %87

87:                                               ; preds = %82
  %88 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %84, align 8
  %89 = icmp eq %"class.blink::CollapsedBorderValues"* %88, null
  %90 = bitcast %"class.std::__1::unique_ptr.1797"* %83 to i64*
  store i64 %55, i64* %90, align 8
  br i1 %89, label %103, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.blink::CollapsedBorderValues"* %88 to i8*
  tail call void @free(i8* %92) #12
  br label %103

93:                                               ; preds = %74
  %94 = icmp eq i8* %45, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %93
  tail call void @free(i8* nonnull %45) #12
  br label %99

96:                                               ; preds = %82
  %97 = icmp eq i8* %45, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %96
  tail call void @free(i8* nonnull %45) #12
  br label %99

99:                                               ; preds = %17, %98, %96, %95, %93
  %100 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %103, label %194

103:                                              ; preds = %80, %65, %87, %91, %78, %75, %21, %99
  %104 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 134217728
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %163, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %110 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %109 to i96*
  %111 = load i96, i96* %110, align 4
  %112 = and i96 %111, 16777216
  %113 = icmp eq i96 %112, 0
  br i1 %113, label %114, label %163

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %115, align 8
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %163, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 48
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %163

123:                                              ; preds = %118
  %124 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %125 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 1, i32 2
  %128 = bitcast %"class.blink::Member.318"* %127 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %131, %133
  br i1 %134, label %142, label %135

135:                                              ; preds = %123
  %136 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %137 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %131, %140
  br i1 %141, label %142, label %163

142:                                              ; preds = %135, %123
  %143 = bitcast %"class.blink::Node"* %116 to %"class.blink::HTMLTableCellElement"*
  %144 = tail call i32 @_ZNK5blink20HTMLTableCellElement7rowSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %143) #12
  %145 = icmp ult i32 %144, 2147483646
  br i1 %145, label %146, label %163

146:                                              ; preds = %142
  %147 = icmp eq i32 %144, 0
  br i1 %147, label %148, label %163

148:                                              ; preds = %146
  %149 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %150 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %149, i64 0, i32 7
  %151 = bitcast %"class.blink::LayoutObject"** %150 to %"class.blink::LayoutTableSection"**
  %152 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %152, i64 0, i32 3, i32 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %149, i64 3
  %156 = bitcast %"class.blink::LayoutObject"* %155 to i32*
  %157 = load i32, i32* %156, align 8
  %158 = and i32 %157, 2147483647
  %159 = sub i32 %154, %158
  %160 = icmp ult i32 %159, 2147483646
  br i1 %160, label %161, label %163

161:                                              ; preds = %148
  %162 = icmp eq i32 %159, 0
  br i1 %162, label %170, label %163

163:                                              ; preds = %108, %118, %114, %135, %142, %103, %148, %146, %161
  %164 = phi i32 [ %159, %161 ], [ %144, %146 ], [ 1, %108 ], [ 1, %118 ], [ 1, %114 ], [ 1, %135 ], [ 2147483646, %142 ], [ 1, %103 ], [ 2147483646, %148 ]
  %165 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTableRow"**
  %166 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %166, i64 0, i32 3
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 2147483647
  br label %173

170:                                              ; preds = %186, %161
  %171 = load i32, i32* %104, align 8
  %172 = and i32 %171, 2147483647
  store i32 %172, i32* %104, align 8
  br label %194

173:                                              ; preds = %163, %186
  %174 = phi %"class.blink::LayoutTableRow"* [ %188, %186 ], [ %166, %163 ]
  %175 = phi i32 [ %187, %186 ], [ %169, %163 ]
  %176 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %177 = bitcast %"class.blink::LayoutObject"** %176 to %"class.blink::LayoutTableSection"**
  %178 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %178, i64 0, i32 3
  %180 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1805"* %179, i32 %175) #12
  %181 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %180, i64 0, i32 1
  %182 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %181, align 8
  %183 = icmp eq %"class.blink::LayoutTableRow"* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %173
  %185 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %182, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %185, i8 zeroext 5) #12
  br label %186

186:                                              ; preds = %173, %184
  %187 = add nuw i32 %175, 1
  %188 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %165, align 8
  %189 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %188, i64 0, i32 3
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 2147483647
  %192 = add nuw i32 %191, %164
  %193 = icmp ult i32 %187, %192
  br i1 %193, label %173, label %170

194:                                              ; preds = %99, %34, %170
  ret void
}

declare %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellPrecedingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* dereferenceable(312)) local_unnamed_addr #1

declare %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellFollowingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* dereferenceable(312)) local_unnamed_addr #1

declare %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellAboveERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* dereferenceable(312)) local_unnamed_addr #1

declare %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellBelowERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* dereferenceable(312)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink15LayoutTableCell23ComputeOverflowClipAxesEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 805306368
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::LayoutTableCell"* %0 to %"class.blink::LayoutBlock"*
  %8 = tail call zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"* %7) #12
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i8 [ %8, %6 ], [ 3, %1 ]
  ret i8 %10
}

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell29UpdateStyleWritingModeFromRowEPKNS_12LayoutObjectE(%"class.blink::LayoutTableCell"*, %"class.blink::LayoutObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104) %5) #12
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %12, 15211807202738752817960438464512
  %17 = and i160 %15, -15211807202738752817960438464513
  %18 = or i160 %17, %16
  store i160 %18, i160* %14, align 8
  tail call void @_ZN5blink13ComputedStyle21UpdateFontOrientationEv(%"class.blink::ComputedStyle"* %6) #12
  %19 = icmp eq %"class.blink::ComputedStyle"* %6, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #12
  br label %22

22:                                               ; preds = %2, %20
  tail call void @_ZN5blink12LayoutObject34SetModifiedStyleOutsideStyleRecalcE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %3, %"class.blink::ComputedStyle"* %6, i32 0) #12
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = and i160 %26, 15211807202738752817960438464512
  %28 = icmp eq i160 %27, 0
  %29 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = zext i1 %28 to i96
  %32 = load i96, i96* %30, align 4
  %33 = shl nuw nsw i96 %31, 31
  %34 = and i96 %32, -2147483649
  %35 = or i96 %33, %34
  store i96 %35, i96* %30, align 4
  %36 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox31UnmarkOrthogonalWritingModeRootEv(%"class.blink::LayoutBox"* %36) #12
  %37 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %69, %22
  br i1 %19, label %43, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 1, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"* %42) #12
  br label %43

43:                                               ; preds = %40, %41
  ret void

44:                                               ; preds = %22, %69
  %45 = phi %"class.blink::LayoutObject"* [ %71, %69 ], [ %38, %22 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 67108864
  %50 = icmp eq i96 %49, 0
  %51 = bitcast %"class.blink::LayoutObject"* %45 to %"class.blink::LayoutBox"*
  %52 = select i1 %50, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %51
  br i1 %50, label %69, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %52, i64 0, i32 0, i32 0, i32 7
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %68, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %52, i64 0, i32 0, i32 0, i32 4
  %62 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %61 to i96*
  %63 = load i96, i96* %62, align 4
  %64 = xor i96 %63, %60
  %65 = trunc i96 %64 to i32
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %57
  tail call void @_ZN5blink9LayoutBox29MarkOrthogonalWritingModeRootEv(%"class.blink::LayoutBox"* nonnull %52) #12
  br label %69

68:                                               ; preds = %53, %57
  tail call void @_ZN5blink9LayoutBox31UnmarkOrthogonalWritingModeRootEv(%"class.blink::LayoutBox"* nonnull %52) #12
  br label %69

69:                                               ; preds = %44, %67, %68
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 9
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = icmp eq %"class.blink::LayoutObject"* %71, null
  br i1 %72, label %40, label %44
}

declare %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink13ComputedStyle21UpdateFontOrientationEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject34SetModifiedStyleOutsideStyleRecalcE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox31UnmarkOrthogonalWritingModeRootEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox29MarkOrthogonalWritingModeRootEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutTableCell"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to %"class.blink::StyleDifference"*
  store i32 %1, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %18 = bitcast %"class.blink::ComputedStyle"** %17 to %"class.blink::ComputedStyleBase"**
  %19 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %19, i64 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = xor i160 %22, %16
  %24 = and i160 %23, 15211807202738752817960438464512
  %25 = icmp eq i160 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %10
  tail call void @_ZN5blink15LayoutTableCell29UpdateStyleWritingModeFromRowEPKNS_12LayoutObjectE(%"class.blink::LayoutTableCell"* %0, %"class.blink::LayoutObject"* nonnull %8)
  br label %27

27:                                               ; preds = %10, %3, %26
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"* %28, i32 %1, %"class.blink::ComputedStyle"* %2) #12
  %29 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 2251799813685248
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = or i96 %31, 2251799813685248
  store i96 %35, i96* %30, align 4
  br label %36

36:                                               ; preds = %27, %34
  %37 = phi i96 [ %31, %27 ], [ %35, %34 ]
  %38 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutTableRow"**
  %39 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutTableRow"* %39, null
  %41 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %40, label %63, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %44 = bitcast %"class.blink::LayoutObject"** %43 to %"class.blink::LayoutTableSection"**
  %45 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %44, align 8
  %46 = icmp eq %"class.blink::LayoutTableSection"* %45, null
  br i1 %46, label %63, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %49 = bitcast %"class.blink::LayoutObject"** %48 to %"class.blink::LayoutTable"**
  %50 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %49, align 8
  %51 = icmp eq %"class.blink::LayoutTable"* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %54 = bitcast %"class.blink::ComputedStyle"** %53 to %"class.blink::ComputedStyleBase"**
  %55 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %55, i64 0, i32 9
  %57 = bitcast [20 x i8]* %56 to i160*
  %58 = load i160, i160* %57, align 8
  %59 = and i160 %58, 81129638414606681695789005144064
  %60 = icmp eq i160 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %52
  %62 = and i96 %37, -147573952589676412929
  store i96 %62, i96* %30, align 4
  br label %63

63:                                               ; preds = %47, %42, %36, %61, %52
  %64 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %64, label %214, label %65

65:                                               ; preds = %63
  %66 = icmp eq %"class.blink::LayoutTableRow"* %39, null
  br i1 %66, label %132, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %69 = bitcast %"class.blink::LayoutObject"** %68 to %"class.blink::LayoutTableSection"**
  %70 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutTableSection"* %70, null
  br i1 %71, label %132, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %74 = bitcast %"class.blink::ComputedStyle"** %73 to %"class.blink::ComputedStyleBase"**
  %75 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %77, i64 0, i32 3
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %80, i64 0, i32 3
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %77, i64 0, i32 3, i32 2
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %80, i64 0, i32 3, i32 2
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %83, %85
  br i1 %86, label %87, label %128

87:                                               ; preds = %72
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %77, i64 0, i32 3, i32 1
  %89 = load i8, i8* %88, align 4, !range !3
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %80, i64 0, i32 3, i32 1
  %91 = load i8, i8* %90, align 4, !range !3
  %92 = icmp eq i8 %89, %91
  br i1 %92, label %93, label %128

93:                                               ; preds = %87
  %94 = icmp eq i8 %83, 12
  br i1 %94, label %132, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %77, i64 0, i32 3, i32 3
  %97 = load i8, i8* %96, align 2, !range !3
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.blink::Length"* %78 to float*
  %101 = load float, float* %100, align 4
  br label %106

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %78, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = sitofp i32 %104 to float
  br label %106

106:                                              ; preds = %102, %99
  %107 = phi float [ %101, %99 ], [ %105, %102 ]
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %80, i64 0, i32 3, i32 3
  %109 = load i8, i8* %108, align 2, !range !3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %106
  %112 = bitcast %"class.blink::Length"* %81 to float*
  %113 = load float, float* %112, align 4
  br label %118

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %81, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = sitofp i32 %116 to float
  br label %118

118:                                              ; preds = %114, %111
  %119 = phi float [ %113, %111 ], [ %117, %114 ]
  %120 = fcmp oeq float %107, %119
  br i1 %120, label %132, label %121

121:                                              ; preds = %118
  %122 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %78, %"class.blink::Length"* dereferenceable(8) %81) #12
  br i1 %122, label %132, label %123

123:                                              ; preds = %121
  %124 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %125 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %124, i64 0, i32 7
  %126 = bitcast %"class.blink::LayoutObject"** %125 to %"class.blink::LayoutTableSection"**
  %127 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %126, align 8
  br label %128

128:                                              ; preds = %123, %72, %87
  %129 = phi %"class.blink::LayoutTableSection"* [ %127, %123 ], [ %70, %72 ], [ %70, %87 ]
  %130 = phi %"class.blink::LayoutObject"* [ %124, %123 ], [ %41, %72 ], [ %41, %87 ]
  %131 = bitcast %"class.blink::LayoutObject"* %130 to %"class.blink::LayoutTableRow"*
  tail call void @_ZN5blink18LayoutTableSection23RowLogicalHeightChangedEPNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"* %129, %"class.blink::LayoutTableRow"* %131) #12
  br label %132

132:                                              ; preds = %121, %93, %118, %67, %65, %128
  %133 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %139 = bitcast [20 x i8]* %138 to i160*
  %140 = load i160, i160* %139, align 8
  %141 = xor i160 %140, %137
  %142 = and i160 %141, 276701161105643274240
  %143 = icmp eq i160 %142, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %132
  %145 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  store i32 0, i32* %146, align 4
  br label %147

147:                                              ; preds = %132, %144
  %148 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %214, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %148, i64 0, i32 7
  %152 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %152, i64 0, i32 7
  %154 = bitcast %"class.blink::LayoutObject"** %153 to %"class.blink::LayoutTable"**
  %155 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %154, align 8
  %156 = icmp eq %"class.blink::LayoutTable"* %155, null
  br i1 %156, label %214, label %157

157:                                              ; preds = %150
  %158 = load i160, i160* %139, align 8
  %159 = load i160, i160* %136, align 8
  %160 = xor i160 %159, %158
  %161 = and i160 %160, 3802951800684688204490109616128
  %162 = icmp eq i160 %161, 0
  br i1 %162, label %176, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %165 = bitcast %"class.blink::ComputedStyle"** %164 to %"class.blink::ComputedStyleBase"**
  %166 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %166, i64 0, i32 9
  %168 = bitcast [20 x i8]* %167 to i160*
  %169 = load i160, i160* %168, align 8
  %170 = and i160 %169, 81129638414606681695789005144064
  %171 = icmp eq i160 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %163
  tail call void @_ZN5blink11LayoutTable26InvalidateCollapsedBordersEv(%"class.blink::LayoutTable"* nonnull %155) #12
  %173 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %174 = load i32, i32* %173, align 8
  %175 = or i32 %174, -2147483648
  store i32 %175, i32* %173, align 8
  br label %176

176:                                              ; preds = %157, %172, %163
  call void @_ZN5blink23LayoutTableBoxComponent39InvalidateCollapsedBordersOnStyleChangeERKNS_12LayoutObjectERNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88) %6, %"class.blink::LayoutTable"* nonnull dereferenceable(392) %155, %"class.blink::StyleDifference"* nonnull dereferenceable(4) %5, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #12
  %177 = call zeroext i1 @_ZN5blink23LayoutTableBoxComponent21DoCellsHaveDirtyWidthERKNS_12LayoutObjectERKNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88) %6, %"class.blink::LayoutTable"* nonnull dereferenceable(392) %155, %"class.blink::StyleDifference"* nonnull dereferenceable(4) %5, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #12
  br i1 %177, label %178, label %214

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %180 = bitcast %"class.blink::LayoutObject"** %179 to %"class.blink::LayoutTableCell"**
  %181 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %180, align 8
  %182 = icmp eq %"class.blink::LayoutTableCell"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %186 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %185 to i96*
  %187 = load i96, i96* %186, align 4
  %188 = and i96 %187, 8
  %189 = icmp eq i96 %188, 0
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %184, i32 1) #12
  %190 = load i96, i96* %186, align 4
  %191 = or i96 %190, 1180591620717411303432
  store i96 %191, i96* %186, align 4
  br i1 %189, label %192, label %193

192:                                              ; preds = %183
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %184, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #12
  br label %193

193:                                              ; preds = %183, %192
  %194 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %180, align 8
  %195 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %195, i32 0) #12
  br label %196

196:                                              ; preds = %178, %193
  %197 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %198 = bitcast %"class.blink::LayoutObject"** %197 to %"class.blink::LayoutTableCell"**
  %199 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %198, align 8
  %200 = icmp eq %"class.blink::LayoutTableCell"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %204 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %203 to i96*
  %205 = load i96, i96* %204, align 4
  %206 = and i96 %205, 8
  %207 = icmp eq i96 %206, 0
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %202, i32 1) #12
  %208 = load i96, i96* %204, align 4
  %209 = or i96 %208, 1180591620717411303432
  store i96 %209, i96* %204, align 4
  br i1 %207, label %210, label %211

210:                                              ; preds = %201
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %202, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #12
  br label %211

211:                                              ; preds = %201, %210
  %212 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %198, align 8
  %213 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %212, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %213, i32 0) #12
  br label %214

214:                                              ; preds = %150, %196, %211, %176, %147, %63
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection23RowLogicalHeightChangedEPNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableRow"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutTable26InvalidateCollapsedBordersEv(%"class.blink::LayoutTable"*) local_unnamed_addr #1

declare void @_ZN5blink23LayoutTableBoxComponent39InvalidateCollapsedBordersOnStyleChangeERKNS_12LayoutObjectERNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutTable"* dereferenceable(392), %"class.blink::StyleDifference"* dereferenceable(4), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink23LayoutTableBoxComponent21DoCellsHaveDirtyWidthERKNS_12LayoutObjectERKNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutTable"* dereferenceable(392), %"class.blink::StyleDifference"* dereferenceable(4), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutTableCell13IsInEndColumnEv(%"class.blink::LayoutTableCell"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTable"**
  %8 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 33554431
  %12 = and i32 %10, 67108864
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 16777216
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %20, label %53

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %53, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 48
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %53

29:                                               ; preds = %24
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 1, i32 2
  %34 = bitcast %"class.blink::Member.318"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %29
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %37, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %41, %29
  %49 = bitcast %"class.blink::Node"* %22 to %"class.blink::HTMLTableCellElement"*
  %50 = tail call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %49) #12
  %51 = icmp ult i32 %50, 33554430
  %52 = select i1 %51, i32 %50, i32 33554430
  br label %53

53:                                               ; preds = %1, %14, %20, %24, %41, %48
  %54 = phi i32 [ 1, %1 ], [ %52, %48 ], [ 1, %41 ], [ 1, %20 ], [ 1, %24 ], [ 1, %14 ]
  %55 = add nsw i32 %11, -1
  %56 = add nsw i32 %55, %54
  %57 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 11
  %58 = load i32, i32* %57, align 4
  %59 = icmp ugt i32 %58, %56
  br i1 %59, label %81, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 2, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 2
  %64 = icmp ult i32 %58, %62
  br i1 %64, label %65, label %81

65:                                               ; preds = %60, %74
  %66 = phi i32 [ %78, %74 ], [ %58, %60 ]
  %67 = phi i32 [ %79, %74 ], [ %58, %60 ]
  %68 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1829"* %63, i32 %67) #12
  %69 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %66, -1
  %72 = add i32 %71, %70
  %73 = icmp ult i32 %72, %56
  br i1 %73, label %74, label %81

74:                                               ; preds = %65
  %75 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1829"* %63, i32 %67) #12
  %76 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, %66
  %79 = add i32 %67, 1
  %80 = icmp eq i32 %79, %62
  br i1 %80, label %81, label %65

81:                                               ; preds = %65, %74, %53, %60
  %82 = phi i32 [ %56, %53 ], [ %58, %60 ], [ %67, %65 ], [ %62, %74 ]
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 7
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %85, i64 0, i32 7
  %87 = bitcast %"class.blink::LayoutObject"** %86 to %"class.blink::LayoutTable"**
  %88 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %88, i64 0, i32 2, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, -1
  %92 = icmp eq i32 %82, %91
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutTableCell19AbsoluteColumnIndexEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 33554431
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutTableCell27ComputeCollapsedStartBorderEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %3 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %4 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %5 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %6 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %7 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %8 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %9 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %10 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::CollapsedBorderValue"*
  %13 = alloca %"class.blink::BorderValue", align 8
  %14 = alloca %"class.blink::Color", align 4
  %15 = alloca %"class.blink::CollapsedBorderValue", align 4
  %16 = alloca %"class.blink::BorderValue", align 8
  %17 = alloca %"class.blink::Color", align 4
  %18 = alloca %"class.blink::CollapsedBorderValue", align 4
  %19 = alloca %"class.blink::BorderValue", align 8
  %20 = alloca %"class.blink::Color", align 4
  %21 = alloca %"class.blink::CollapsedBorderValue", align 4
  %22 = alloca %"class.blink::BorderValue", align 8
  %23 = alloca %"class.blink::Color", align 4
  %24 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %25 = alloca %"class.blink::CollapsedBorderValue", align 4
  %26 = alloca %"class.blink::BorderValue", align 8
  %27 = alloca %"class.blink::Color", align 4
  %28 = alloca %"class.blink::CollapsedBorderValue", align 4
  %29 = alloca %"class.blink::BorderValue", align 8
  %30 = alloca %"class.blink::Color", align 4
  %31 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %32 = alloca %"class.blink::CollapsedBorderValue", align 4
  %33 = alloca %"class.blink::BorderValue", align 8
  %34 = alloca %"class.blink::Color", align 4
  %35 = alloca %"class.blink::CollapsedBorderValue", align 4
  %36 = alloca %"class.blink::BorderValue", align 8
  %37 = alloca %"class.blink::Color", align 4
  %38 = alloca %"class.blink::CollapsedBorderValue", align 4
  %39 = alloca %"class.blink::BorderValue", align 8
  %40 = alloca %"class.blink::Color", align 4
  %41 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 7
  %46 = bitcast %"class.blink::LayoutObject"** %45 to %"class.blink::LayoutTable"**
  %47 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 33554431
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %83, label %52

52:                                               ; preds = %1
  %53 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellPrecedingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %47, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %54 = icmp eq %"class.blink::LayoutTableCell"* %53, null
  br i1 %54, label %83, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.blink::LayoutObject"** %41 to %"class.blink::LayoutTableRow"**
  %57 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %57, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %61 = bitcast %"class.blink::LayoutObject"** %60 to %"class.blink::LayoutTableRow"**
  %62 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = xor i32 %64, %59
  %66 = and i32 %65, 2147483647
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %83

68:                                               ; preds = %55
  %69 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %53, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 1073741824
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %68
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %53) #12
  %74 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %75 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %74, align 8
  %76 = icmp eq %"class.blink::CollapsedBorderValues"* %75, null
  br i1 %76, label %1450, label %77

77:                                               ; preds = %73
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %53) #12
  %78 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %74, align 8
  %79 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %78, i64 0, i32 0, i64 1
  %80 = bitcast %"class.blink::CollapsedBorderValue"* %79 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = and i64 %81, -4294967296
  br label %1450

83:                                               ; preds = %1, %52, %68, %55
  %84 = phi %"class.blink::LayoutTableCell"* [ %53, %68 ], [ %53, %55 ], [ null, %52 ], [ null, %1 ]
  %85 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink36GetCSSPropertyBorderInlineStartColorEv() #12
  %86 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %86, i64 0, i32 7
  %88 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %88, i64 0, i32 7
  %90 = bitcast %"class.blink::LayoutObject"** %89 to %"class.blink::LayoutTable"**
  %91 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %93 = bitcast %"class.blink::ComputedStyle"** %92 to %"class.blink::ComputedStyleBase"**
  %94 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %94, i64 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8
  %98 = lshr i160 %97, 115
  %99 = trunc i160 %98 to i8
  %100 = and i8 %99, 1
  %101 = lshr i160 %97, 102
  %102 = trunc i160 %101 to i8
  %103 = and i8 %102, 3
  %104 = bitcast %"class.blink::CSSProperty"* %85 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %105 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %104, align 8
  %106 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %105, i64 11
  %107 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %106, align 8
  %108 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %107(%"class.blink::CSSProperty"* %85, i8 zeroext %100, i8 zeroext %103) #12
  %109 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink34GetCSSPropertyBorderInlineEndColorEv() #12
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 7
  %112 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %112, i64 0, i32 7
  %114 = bitcast %"class.blink::LayoutObject"** %113 to %"class.blink::LayoutTable"**
  %115 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %117 = bitcast %"class.blink::ComputedStyle"** %116 to %"class.blink::ComputedStyleBase"**
  %118 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %118, i64 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = lshr i160 %121, 115
  %123 = trunc i160 %122 to i8
  %124 = and i8 %123, 1
  %125 = lshr i160 %121, 102
  %126 = trunc i160 %125 to i8
  %127 = and i8 %126, 3
  %128 = bitcast %"class.blink::CSSProperty"* %109 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %129 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %128, align 8
  %130 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %129, i64 11
  %131 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %130, align 8
  %132 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %131(%"class.blink::CSSProperty"* %109, i8 zeroext %124, i8 zeroext %127) #12
  %133 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #12
  %134 = bitcast i64* %11 to i32*
  store i32 -1431655766, i32* %134, align 8
  %135 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %12, i64 0, i32 1
  store i32 -1431655766, i32* %135, align 4
  %136 = bitcast %"class.blink::BorderValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %136) #12
  %137 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %138 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %137, align 8
  %139 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %140 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %139, i64 0, i32 7
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 0, i32 7
  %143 = bitcast %"class.blink::LayoutObject"** %142 to %"class.blink::LayoutTable"**
  %144 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %146 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %147) #12
  %148 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %146, i64 0, i32 0, i32 9
  %149 = bitcast [20 x i8]* %148 to i160*
  %150 = load i160, i160* %149, align 8, !noalias !84
  %151 = lshr i160 %150, 102
  %152 = trunc i160 %151 to i16
  %153 = and i16 %152, 3
  %154 = lshr i160 %150, 107
  %155 = trunc i160 %154 to i16
  %156 = and i16 %155, 256
  %157 = or i16 %156, %153
  %158 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %138, i64 0, i32 0, i32 7, i32 0, i32 0
  %159 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %158, align 8, !noalias !84
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 27
  %161 = load i16, i16* %160, align 8, !noalias !84
  %162 = lshr i16 %161, 12
  %163 = zext i16 %162 to i32
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 22
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 26, i32 0
  %166 = load i32, i32* %165, align 4, !noalias !84
  %167 = bitcast %"class.blink::StyleColor"* %164 to i64*
  %168 = load i64, i64* %167, align 4, !noalias !84
  %169 = shl nuw nsw i32 %163, 26
  %170 = icmp slt i32 %166, 67108863
  %171 = select i1 %170, i32 %166, i32 67108863
  %172 = and i32 %171, 67108863
  %173 = or i32 %172, %169
  %174 = lshr i16 %161, 8
  %175 = and i16 %174, 15
  %176 = zext i16 %175 to i32
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 21
  %178 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 25, i32 0
  %179 = load i32, i32* %178, align 4, !noalias !84
  %180 = bitcast %"class.blink::StyleColor"* %177 to i64*
  %181 = load i64, i64* %180, align 4, !noalias !84
  %182 = shl nuw nsw i32 %176, 26
  %183 = icmp slt i32 %179, 67108863
  %184 = select i1 %183, i32 %179, i32 67108863
  %185 = and i32 %184, 67108863
  %186 = or i32 %185, %182
  %187 = and i16 %161, 15
  %188 = zext i16 %187 to i32
  %189 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 19
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 23, i32 0
  %191 = load i32, i32* %190, align 4, !noalias !84
  %192 = bitcast %"class.blink::StyleColor"* %189 to i64*
  %193 = load i64, i64* %192, align 4, !noalias !84
  %194 = shl nuw nsw i32 %188, 26
  %195 = icmp slt i32 %191, 67108863
  %196 = select i1 %195, i32 %191, i32 67108863
  %197 = and i32 %196, 67108863
  %198 = or i32 %197, %194
  %199 = lshr i16 %161, 4
  %200 = and i16 %199, 15
  %201 = zext i16 %200 to i32
  %202 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 20
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %159, i64 0, i32 24, i32 0
  %204 = load i32, i32* %203, align 4, !noalias !84
  %205 = bitcast %"class.blink::StyleColor"* %202 to i64*
  %206 = load i64, i64* %205, align 4, !noalias !84
  %207 = shl nuw nsw i32 %201, 26
  %208 = icmp slt i32 %204, 67108863
  %209 = select i1 %208, i32 %204, i32 67108863
  %210 = and i32 %209, 67108863
  %211 = or i32 %210, %207
  %212 = bitcast %"class.blink::PhysicalToLogical.1929"* %10 to i16*
  store i16 %157, i16* %212, align 4, !alias.scope !84
  %213 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 1
  %214 = bitcast %"class.blink::BorderValue"* %213 to i64*
  store i64 %168, i64* %214, align 4, !alias.scope !84
  %215 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 1, i32 1
  store i32 %173, i32* %215, align 4, !alias.scope !84
  %216 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 2
  %217 = bitcast %"class.blink::BorderValue"* %216 to i64*
  store i64 %181, i64* %217, align 4, !alias.scope !84
  %218 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 2, i32 1
  store i32 %186, i32* %218, align 4, !alias.scope !84
  %219 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 3
  %220 = bitcast %"class.blink::BorderValue"* %219 to i64*
  store i64 %193, i64* %220, align 4, !alias.scope !84
  %221 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 3, i32 1
  store i32 %198, i32* %221, align 4, !alias.scope !84
  %222 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 4
  %223 = bitcast %"class.blink::BorderValue"* %222 to i64*
  store i64 %206, i64* %223, align 4, !alias.scope !84
  %224 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 4, i32 1
  store i32 %211, i32* %224, align 4, !alias.scope !84
  %225 = icmp eq i16 %153, 0
  %226 = icmp eq i16 %156, 0
  %227 = select i1 %226, %"class.blink::BorderValue"* %222, %"class.blink::BorderValue"* %216
  %228 = select i1 %226, %"class.blink::BorderValue"* %213, %"class.blink::BorderValue"* %219
  %229 = select i1 %225, %"class.blink::BorderValue"* %227, %"class.blink::BorderValue"* %228
  %230 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %229, i64 0, i32 1
  %231 = bitcast %"class.blink::BorderValue"* %229 to i64*
  %232 = load i32, i32* %230, align 4
  %233 = load i64, i64* %231, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %147) #12
  %234 = bitcast %"class.blink::BorderValue"* %13 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %13, i64 0, i32 1
  store i32 %232, i32* %235, align 8
  %236 = bitcast %"class.blink::Color"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %236) #12
  %237 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %137, align 8
  %238 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %237, %"class.blink::CSSProperty"* dereferenceable(24) %108) #12
  %239 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %14, i64 0, i32 0
  store i32 %238, i32* %239, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %12, %"class.blink::BorderValue"* nonnull dereferenceable(12) %13, %"class.blink::Color"* nonnull dereferenceable(4) %14, i32 6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %236) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %136) #12
  %240 = icmp ne %"class.blink::LayoutTableCell"* %84, null
  br i1 %240, label %241, label %386

241:                                              ; preds = %83
  %242 = bitcast %"class.blink::CollapsedBorderValue"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #12
  %243 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %15, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %243, align 4
  %244 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %15, i64 0, i32 1
  store i32 -1431655766, i32* %244, align 4
  %245 = bitcast %"class.blink::BorderValue"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %245) #12
  %246 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %247 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %249 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %249, i64 0, i32 7
  %251 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %250, align 8
  %252 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %251, i64 0, i32 7
  %253 = bitcast %"class.blink::LayoutObject"** %252 to %"class.blink::LayoutTable"**
  %254 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %256 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %257) #12
  %258 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %256, i64 0, i32 0, i32 9
  %259 = bitcast [20 x i8]* %258 to i160*
  %260 = load i160, i160* %259, align 8, !noalias !87
  %261 = lshr i160 %260, 102
  %262 = trunc i160 %261 to i16
  %263 = and i16 %262, 3
  %264 = lshr i160 %260, 107
  %265 = trunc i160 %264 to i16
  %266 = and i16 %265, 256
  %267 = or i16 %266, %263
  %268 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %247, i64 0, i32 0, i32 7, i32 0, i32 0
  %269 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %268, align 8, !noalias !87
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 27
  %271 = load i16, i16* %270, align 8, !noalias !87
  %272 = lshr i16 %271, 12
  %273 = zext i16 %272 to i32
  %274 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 22
  %275 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 26, i32 0
  %276 = load i32, i32* %275, align 4, !noalias !87
  %277 = bitcast %"class.blink::StyleColor"* %274 to i64*
  %278 = load i64, i64* %277, align 4, !noalias !87
  %279 = shl nuw nsw i32 %273, 26
  %280 = icmp slt i32 %276, 67108863
  %281 = select i1 %280, i32 %276, i32 67108863
  %282 = and i32 %281, 67108863
  %283 = or i32 %282, %279
  %284 = lshr i16 %271, 8
  %285 = and i16 %284, 15
  %286 = zext i16 %285 to i32
  %287 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 21
  %288 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 25, i32 0
  %289 = load i32, i32* %288, align 4, !noalias !87
  %290 = bitcast %"class.blink::StyleColor"* %287 to i64*
  %291 = load i64, i64* %290, align 4, !noalias !87
  %292 = shl nuw nsw i32 %286, 26
  %293 = icmp slt i32 %289, 67108863
  %294 = select i1 %293, i32 %289, i32 67108863
  %295 = and i32 %294, 67108863
  %296 = or i32 %295, %292
  %297 = and i16 %271, 15
  %298 = zext i16 %297 to i32
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 19
  %300 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 23, i32 0
  %301 = load i32, i32* %300, align 4, !noalias !87
  %302 = bitcast %"class.blink::StyleColor"* %299 to i64*
  %303 = load i64, i64* %302, align 4, !noalias !87
  %304 = shl nuw nsw i32 %298, 26
  %305 = icmp slt i32 %301, 67108863
  %306 = select i1 %305, i32 %301, i32 67108863
  %307 = and i32 %306, 67108863
  %308 = or i32 %307, %304
  %309 = lshr i16 %271, 4
  %310 = and i16 %309, 15
  %311 = zext i16 %310 to i32
  %312 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 20
  %313 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %269, i64 0, i32 24, i32 0
  %314 = load i32, i32* %313, align 4, !noalias !87
  %315 = bitcast %"class.blink::StyleColor"* %312 to i64*
  %316 = load i64, i64* %315, align 4, !noalias !87
  %317 = shl nuw nsw i32 %311, 26
  %318 = icmp slt i32 %314, 67108863
  %319 = select i1 %318, i32 %314, i32 67108863
  %320 = and i32 %319, 67108863
  %321 = or i32 %320, %317
  %322 = bitcast %"class.blink::PhysicalToLogical.1929"* %9 to i16*
  store i16 %267, i16* %322, align 4, !alias.scope !87
  %323 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 1
  %324 = bitcast %"class.blink::BorderValue"* %323 to i64*
  store i64 %278, i64* %324, align 4, !alias.scope !87
  %325 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 1, i32 1
  store i32 %283, i32* %325, align 4, !alias.scope !87
  %326 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 2
  %327 = bitcast %"class.blink::BorderValue"* %326 to i64*
  store i64 %291, i64* %327, align 4, !alias.scope !87
  %328 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 2, i32 1
  store i32 %296, i32* %328, align 4, !alias.scope !87
  %329 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 3
  %330 = bitcast %"class.blink::BorderValue"* %329 to i64*
  store i64 %303, i64* %330, align 4, !alias.scope !87
  %331 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 3, i32 1
  store i32 %308, i32* %331, align 4, !alias.scope !87
  %332 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 4
  %333 = bitcast %"class.blink::BorderValue"* %332 to i64*
  store i64 %316, i64* %333, align 4, !alias.scope !87
  %334 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 4, i32 1
  store i32 %321, i32* %334, align 4, !alias.scope !87
  %335 = icmp eq i16 %263, 0
  %336 = icmp eq i16 %266, 0
  %337 = select i1 %336, %"class.blink::BorderValue"* %326, %"class.blink::BorderValue"* %332
  %338 = select i1 %336, %"class.blink::BorderValue"* %329, %"class.blink::BorderValue"* %323
  %339 = select i1 %335, %"class.blink::BorderValue"* %337, %"class.blink::BorderValue"* %338
  %340 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %339, i64 0, i32 1
  %341 = bitcast %"class.blink::BorderValue"* %339 to i64*
  %342 = load i32, i32* %340, align 4
  %343 = load i64, i64* %341, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %257) #12
  %344 = bitcast %"class.blink::BorderValue"* %16 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %16, i64 0, i32 1
  store i32 %342, i32* %345, align 8
  %346 = bitcast %"class.blink::Color"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %346) #12
  %347 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %246, align 8
  %348 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %347, %"class.blink::CSSProperty"* dereferenceable(24) %132) #12
  %349 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %17, i64 0, i32 0
  store i32 %348, i32* %349, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %15, %"class.blink::BorderValue"* nonnull dereferenceable(12) %16, %"class.blink::Color"* nonnull dereferenceable(4) %17, i32 6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %346) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %245) #12
  %350 = load i32, i32* %135, align 4
  %351 = icmp ugt i32 %350, 536870911
  br i1 %351, label %352, label %379

352:                                              ; preds = %241
  %353 = load i32, i32* %244, align 4
  %354 = icmp ugt i32 %353, 536870911
  br i1 %354, label %355, label %378

355:                                              ; preds = %352
  %356 = lshr i32 %353, 25
  %357 = and i32 %356, 15
  %358 = icmp eq i32 %357, 1
  br i1 %358, label %379, label %359

359:                                              ; preds = %355
  %360 = lshr i32 %350, 25
  %361 = and i32 %360, 15
  switch i32 %361, label %362 [
    i32 1, label %378
    i32 0, label %379
  ]

362:                                              ; preds = %359
  %363 = icmp eq i32 %357, 0
  br i1 %363, label %378, label %364

364:                                              ; preds = %362
  %365 = and i32 %353, 33554431
  %366 = and i32 %350, 33554431
  %367 = icmp eq i32 %365, %366
  br i1 %367, label %370, label %368

368:                                              ; preds = %364
  %369 = icmp ult i32 %365, %366
  br i1 %369, label %378, label %379

370:                                              ; preds = %364
  %371 = icmp eq i32 %357, %361
  br i1 %371, label %374, label %372

372:                                              ; preds = %370
  %373 = icmp ult i32 %357, %361
  br i1 %373, label %378, label %379

374:                                              ; preds = %370
  %375 = lshr i32 %353, 29
  %376 = lshr i32 %350, 29
  %377 = icmp ult i32 %375, %376
  br i1 %377, label %378, label %379

378:                                              ; preds = %374, %372, %368, %362, %359, %352
  br label %379

379:                                              ; preds = %241, %355, %359, %368, %372, %374, %378
  %380 = phi %"class.blink::CollapsedBorderValue"* [ %12, %378 ], [ %15, %374 ], [ %15, %368 ], [ %15, %372 ], [ %15, %241 ], [ %15, %355 ], [ %15, %359 ]
  %381 = bitcast %"class.blink::CollapsedBorderValue"* %380 to i64*
  %382 = load i64, i64* %381, align 4
  store i64 %382, i64* %11, align 8
  %383 = lshr i64 %382, 32
  %384 = trunc i64 %383 to i32
  %385 = icmp ugt i32 %384, 536870911
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #12
  br i1 %385, label %386, label %1447

386:                                              ; preds = %379, %83
  br i1 %51, label %387, label %684

387:                                              ; preds = %386
  %388 = bitcast %"class.blink::CollapsedBorderValue"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #12
  %389 = bitcast %"class.blink::BorderValue"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %389) #12
  %390 = bitcast %"class.blink::LayoutObject"** %41 to %"class.blink::LayoutTableBoxComponent"**
  %391 = load %"class.blink::LayoutTableBoxComponent"*, %"class.blink::LayoutTableBoxComponent"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::LayoutTableBoxComponent", %"class.blink::LayoutTableBoxComponent"* %391, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %393 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %392, align 8
  %394 = bitcast %"class.blink::LayoutTableBoxComponent"* %391 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %395 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %394, align 8
  %396 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %395, i64 195
  %397 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %396, align 8
  %398 = call %"class.blink::LayoutTable"* %397(%"class.blink::LayoutTableBoxComponent"* %391) #12
  %399 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %398, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %400 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %399, align 8
  %401 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %401) #12
  %402 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %400, i64 0, i32 0, i32 9
  %403 = bitcast [20 x i8]* %402 to i160*
  %404 = load i160, i160* %403, align 8, !noalias !90
  %405 = lshr i160 %404, 102
  %406 = trunc i160 %405 to i16
  %407 = and i16 %406, 3
  %408 = lshr i160 %404, 107
  %409 = trunc i160 %408 to i16
  %410 = and i16 %409, 256
  %411 = or i16 %410, %407
  %412 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %393, i64 0, i32 0, i32 7, i32 0, i32 0
  %413 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %412, align 8, !noalias !90
  %414 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 27
  %415 = load i16, i16* %414, align 8, !noalias !90
  %416 = lshr i16 %415, 12
  %417 = zext i16 %416 to i32
  %418 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 22
  %419 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 26, i32 0
  %420 = load i32, i32* %419, align 4, !noalias !90
  %421 = bitcast %"class.blink::StyleColor"* %418 to i64*
  %422 = load i64, i64* %421, align 4, !noalias !90
  %423 = shl nuw nsw i32 %417, 26
  %424 = icmp slt i32 %420, 67108863
  %425 = select i1 %424, i32 %420, i32 67108863
  %426 = and i32 %425, 67108863
  %427 = or i32 %426, %423
  %428 = lshr i16 %415, 8
  %429 = and i16 %428, 15
  %430 = zext i16 %429 to i32
  %431 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 21
  %432 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 25, i32 0
  %433 = load i32, i32* %432, align 4, !noalias !90
  %434 = bitcast %"class.blink::StyleColor"* %431 to i64*
  %435 = load i64, i64* %434, align 4, !noalias !90
  %436 = shl nuw nsw i32 %430, 26
  %437 = icmp slt i32 %433, 67108863
  %438 = select i1 %437, i32 %433, i32 67108863
  %439 = and i32 %438, 67108863
  %440 = or i32 %439, %436
  %441 = and i16 %415, 15
  %442 = zext i16 %441 to i32
  %443 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 19
  %444 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 23, i32 0
  %445 = load i32, i32* %444, align 4, !noalias !90
  %446 = bitcast %"class.blink::StyleColor"* %443 to i64*
  %447 = load i64, i64* %446, align 4, !noalias !90
  %448 = shl nuw nsw i32 %442, 26
  %449 = icmp slt i32 %445, 67108863
  %450 = select i1 %449, i32 %445, i32 67108863
  %451 = and i32 %450, 67108863
  %452 = or i32 %451, %448
  %453 = lshr i16 %415, 4
  %454 = and i16 %453, 15
  %455 = zext i16 %454 to i32
  %456 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 20
  %457 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %413, i64 0, i32 24, i32 0
  %458 = load i32, i32* %457, align 4, !noalias !90
  %459 = bitcast %"class.blink::StyleColor"* %456 to i64*
  %460 = load i64, i64* %459, align 4, !noalias !90
  %461 = shl nuw nsw i32 %455, 26
  %462 = icmp slt i32 %458, 67108863
  %463 = select i1 %462, i32 %458, i32 67108863
  %464 = and i32 %463, 67108863
  %465 = or i32 %464, %461
  %466 = bitcast %"class.blink::PhysicalToLogical.1929"* %8 to i16*
  store i16 %411, i16* %466, align 4, !alias.scope !90
  %467 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 1
  %468 = bitcast %"class.blink::BorderValue"* %467 to i64*
  store i64 %422, i64* %468, align 4, !alias.scope !90
  %469 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 1, i32 1
  store i32 %427, i32* %469, align 4, !alias.scope !90
  %470 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 2
  %471 = bitcast %"class.blink::BorderValue"* %470 to i64*
  store i64 %435, i64* %471, align 4, !alias.scope !90
  %472 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 2, i32 1
  store i32 %440, i32* %472, align 4, !alias.scope !90
  %473 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 3
  %474 = bitcast %"class.blink::BorderValue"* %473 to i64*
  store i64 %447, i64* %474, align 4, !alias.scope !90
  %475 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 3, i32 1
  store i32 %452, i32* %475, align 4, !alias.scope !90
  %476 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 4
  %477 = bitcast %"class.blink::BorderValue"* %476 to i64*
  store i64 %460, i64* %477, align 4, !alias.scope !90
  %478 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 4, i32 1
  store i32 %465, i32* %478, align 4, !alias.scope !90
  %479 = icmp eq i16 %407, 0
  %480 = icmp eq i16 %410, 0
  %481 = select i1 %480, %"class.blink::BorderValue"* %476, %"class.blink::BorderValue"* %470
  %482 = select i1 %480, %"class.blink::BorderValue"* %467, %"class.blink::BorderValue"* %473
  %483 = select i1 %479, %"class.blink::BorderValue"* %481, %"class.blink::BorderValue"* %482
  %484 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %483, i64 0, i32 1
  %485 = bitcast %"class.blink::BorderValue"* %483 to i64*
  %486 = load i32, i32* %484, align 4
  %487 = load i64, i64* %485, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %401) #12
  %488 = bitcast %"class.blink::BorderValue"* %19 to i64*
  store i64 %487, i64* %488, align 8
  %489 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %19, i64 0, i32 1
  store i32 %486, i32* %489, align 8
  %490 = bitcast %"class.blink::Color"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %490) #12
  %491 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %492 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %491, i64 0, i32 5, i32 0
  %493 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %492, align 8
  %494 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %493, %"class.blink::CSSProperty"* dereferenceable(24) %108) #12
  %495 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %20, i64 0, i32 0
  store i32 %494, i32* %495, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %18, %"class.blink::BorderValue"* nonnull dereferenceable(12) %19, %"class.blink::Color"* nonnull dereferenceable(4) %20, i32 5) #12
  %496 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %18, i64 0, i32 1
  %497 = load i32, i32* %496, align 4
  %498 = icmp ugt i32 %497, 536870911
  br i1 %498, label %499, label %526

499:                                              ; preds = %387
  %500 = load i32, i32* %135, align 4
  %501 = icmp ugt i32 %500, 536870911
  br i1 %501, label %502, label %525

502:                                              ; preds = %499
  %503 = lshr i32 %500, 25
  %504 = and i32 %503, 15
  %505 = icmp eq i32 %504, 1
  br i1 %505, label %526, label %506

506:                                              ; preds = %502
  %507 = lshr i32 %497, 25
  %508 = and i32 %507, 15
  switch i32 %508, label %509 [
    i32 1, label %525
    i32 0, label %526
  ]

509:                                              ; preds = %506
  %510 = icmp eq i32 %504, 0
  br i1 %510, label %525, label %511

511:                                              ; preds = %509
  %512 = and i32 %500, 33554431
  %513 = and i32 %497, 33554431
  %514 = icmp eq i32 %512, %513
  br i1 %514, label %517, label %515

515:                                              ; preds = %511
  %516 = icmp ult i32 %512, %513
  br i1 %516, label %525, label %526

517:                                              ; preds = %511
  %518 = icmp eq i32 %504, %508
  br i1 %518, label %521, label %519

519:                                              ; preds = %517
  %520 = icmp ult i32 %504, %508
  br i1 %520, label %525, label %526

521:                                              ; preds = %517
  %522 = lshr i32 %500, 29
  %523 = lshr i32 %497, 29
  %524 = icmp ult i32 %522, %523
  br i1 %524, label %525, label %526

525:                                              ; preds = %521, %519, %515, %509, %506, %499
  br label %526

526:                                              ; preds = %387, %502, %506, %515, %519, %521, %525
  %527 = phi %"class.blink::CollapsedBorderValue"* [ %18, %525 ], [ %12, %521 ], [ %12, %515 ], [ %12, %519 ], [ %12, %387 ], [ %12, %502 ], [ %12, %506 ]
  %528 = bitcast %"class.blink::CollapsedBorderValue"* %527 to i64*
  %529 = load i64, i64* %528, align 4
  store i64 %529, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %490) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %389) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #12
  %530 = lshr i64 %529, 32
  %531 = trunc i64 %530 to i32
  %532 = icmp ugt i32 %531, 536870911
  br i1 %532, label %533, label %1447

533:                                              ; preds = %526
  %534 = bitcast %"class.blink::CollapsedBorderValue"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %534) #12
  %535 = bitcast %"class.blink::BorderValue"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %535) #12
  %536 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %537 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %536, i64 0, i32 7
  %538 = bitcast %"class.blink::LayoutObject"** %537 to %"class.blink::LayoutTableBoxComponent"**
  %539 = load %"class.blink::LayoutTableBoxComponent"*, %"class.blink::LayoutTableBoxComponent"** %538, align 8
  %540 = getelementptr inbounds %"class.blink::LayoutTableBoxComponent", %"class.blink::LayoutTableBoxComponent"* %539, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %541 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %540, align 8
  %542 = bitcast %"class.blink::LayoutTableBoxComponent"* %539 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %543 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %542, align 8
  %544 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %543, i64 195
  %545 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %544, align 8
  %546 = call %"class.blink::LayoutTable"* %545(%"class.blink::LayoutTableBoxComponent"* %539) #12
  %547 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %546, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %548 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %547, align 8
  %549 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %549) #12
  %550 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %548, i64 0, i32 0, i32 9
  %551 = bitcast [20 x i8]* %550 to i160*
  %552 = load i160, i160* %551, align 8, !noalias !93
  %553 = lshr i160 %552, 102
  %554 = trunc i160 %553 to i16
  %555 = and i16 %554, 3
  %556 = lshr i160 %552, 107
  %557 = trunc i160 %556 to i16
  %558 = and i16 %557, 256
  %559 = or i16 %558, %555
  %560 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %541, i64 0, i32 0, i32 7, i32 0, i32 0
  %561 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %560, align 8, !noalias !93
  %562 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 27
  %563 = load i16, i16* %562, align 8, !noalias !93
  %564 = lshr i16 %563, 12
  %565 = zext i16 %564 to i32
  %566 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 22
  %567 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 26, i32 0
  %568 = load i32, i32* %567, align 4, !noalias !93
  %569 = bitcast %"class.blink::StyleColor"* %566 to i64*
  %570 = load i64, i64* %569, align 4, !noalias !93
  %571 = shl nuw nsw i32 %565, 26
  %572 = icmp slt i32 %568, 67108863
  %573 = select i1 %572, i32 %568, i32 67108863
  %574 = and i32 %573, 67108863
  %575 = or i32 %574, %571
  %576 = lshr i16 %563, 8
  %577 = and i16 %576, 15
  %578 = zext i16 %577 to i32
  %579 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 21
  %580 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 25, i32 0
  %581 = load i32, i32* %580, align 4, !noalias !93
  %582 = bitcast %"class.blink::StyleColor"* %579 to i64*
  %583 = load i64, i64* %582, align 4, !noalias !93
  %584 = shl nuw nsw i32 %578, 26
  %585 = icmp slt i32 %581, 67108863
  %586 = select i1 %585, i32 %581, i32 67108863
  %587 = and i32 %586, 67108863
  %588 = or i32 %587, %584
  %589 = and i16 %563, 15
  %590 = zext i16 %589 to i32
  %591 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 19
  %592 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 23, i32 0
  %593 = load i32, i32* %592, align 4, !noalias !93
  %594 = bitcast %"class.blink::StyleColor"* %591 to i64*
  %595 = load i64, i64* %594, align 4, !noalias !93
  %596 = shl nuw nsw i32 %590, 26
  %597 = icmp slt i32 %593, 67108863
  %598 = select i1 %597, i32 %593, i32 67108863
  %599 = and i32 %598, 67108863
  %600 = or i32 %599, %596
  %601 = lshr i16 %563, 4
  %602 = and i16 %601, 15
  %603 = zext i16 %602 to i32
  %604 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 20
  %605 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 24, i32 0
  %606 = load i32, i32* %605, align 4, !noalias !93
  %607 = bitcast %"class.blink::StyleColor"* %604 to i64*
  %608 = load i64, i64* %607, align 4, !noalias !93
  %609 = shl nuw nsw i32 %603, 26
  %610 = icmp slt i32 %606, 67108863
  %611 = select i1 %610, i32 %606, i32 67108863
  %612 = and i32 %611, 67108863
  %613 = or i32 %612, %609
  %614 = bitcast %"class.blink::PhysicalToLogical.1929"* %7 to i16*
  store i16 %559, i16* %614, align 4, !alias.scope !93
  %615 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 1
  %616 = bitcast %"class.blink::BorderValue"* %615 to i64*
  store i64 %570, i64* %616, align 4, !alias.scope !93
  %617 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 1, i32 1
  store i32 %575, i32* %617, align 4, !alias.scope !93
  %618 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 2
  %619 = bitcast %"class.blink::BorderValue"* %618 to i64*
  store i64 %583, i64* %619, align 4, !alias.scope !93
  %620 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 2, i32 1
  store i32 %588, i32* %620, align 4, !alias.scope !93
  %621 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 3
  %622 = bitcast %"class.blink::BorderValue"* %621 to i64*
  store i64 %595, i64* %622, align 4, !alias.scope !93
  %623 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 3, i32 1
  store i32 %600, i32* %623, align 4, !alias.scope !93
  %624 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 4
  %625 = bitcast %"class.blink::BorderValue"* %624 to i64*
  store i64 %608, i64* %625, align 4, !alias.scope !93
  %626 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 4, i32 1
  store i32 %613, i32* %626, align 4, !alias.scope !93
  %627 = icmp eq i16 %555, 0
  %628 = icmp eq i16 %558, 0
  %629 = select i1 %628, %"class.blink::BorderValue"* %624, %"class.blink::BorderValue"* %618
  %630 = select i1 %628, %"class.blink::BorderValue"* %615, %"class.blink::BorderValue"* %621
  %631 = select i1 %627, %"class.blink::BorderValue"* %629, %"class.blink::BorderValue"* %630
  %632 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %631, i64 0, i32 1
  %633 = bitcast %"class.blink::BorderValue"* %631 to i64*
  %634 = load i32, i32* %632, align 4
  %635 = load i64, i64* %633, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %549) #12
  %636 = bitcast %"class.blink::BorderValue"* %22 to i64*
  store i64 %635, i64* %636, align 8
  %637 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %22, i64 0, i32 1
  store i32 %634, i32* %637, align 8
  %638 = bitcast %"class.blink::Color"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %638) #12
  %639 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %640 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %639, i64 0, i32 7
  %641 = bitcast %"class.blink::LayoutObject"** %640 to %"class.blink::LayoutTableSection"**
  %642 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %641, align 8
  %643 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %642, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %644 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %643, align 8
  %645 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %644, %"class.blink::CSSProperty"* dereferenceable(24) %108) #12
  %646 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %23, i64 0, i32 0
  store i32 %645, i32* %646, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %21, %"class.blink::BorderValue"* nonnull dereferenceable(12) %22, %"class.blink::Color"* nonnull dereferenceable(4) %23, i32 4) #12
  %647 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %21, i64 0, i32 1
  %648 = load i32, i32* %647, align 4
  %649 = icmp ugt i32 %648, 536870911
  br i1 %649, label %650, label %677

650:                                              ; preds = %533
  %651 = load i32, i32* %135, align 4
  %652 = icmp ugt i32 %651, 536870911
  br i1 %652, label %653, label %676

653:                                              ; preds = %650
  %654 = lshr i32 %651, 25
  %655 = and i32 %654, 15
  %656 = icmp eq i32 %655, 1
  br i1 %656, label %677, label %657

657:                                              ; preds = %653
  %658 = lshr i32 %648, 25
  %659 = and i32 %658, 15
  switch i32 %659, label %660 [
    i32 1, label %676
    i32 0, label %677
  ]

660:                                              ; preds = %657
  %661 = icmp eq i32 %655, 0
  br i1 %661, label %676, label %662

662:                                              ; preds = %660
  %663 = and i32 %651, 33554431
  %664 = and i32 %648, 33554431
  %665 = icmp eq i32 %663, %664
  br i1 %665, label %668, label %666

666:                                              ; preds = %662
  %667 = icmp ult i32 %663, %664
  br i1 %667, label %676, label %677

668:                                              ; preds = %662
  %669 = icmp eq i32 %655, %659
  br i1 %669, label %672, label %670

670:                                              ; preds = %668
  %671 = icmp ult i32 %655, %659
  br i1 %671, label %676, label %677

672:                                              ; preds = %668
  %673 = lshr i32 %651, 29
  %674 = lshr i32 %648, 29
  %675 = icmp ult i32 %673, %674
  br i1 %675, label %676, label %677

676:                                              ; preds = %672, %670, %666, %660, %657, %650
  br label %677

677:                                              ; preds = %533, %653, %657, %666, %670, %672, %676
  %678 = phi %"class.blink::CollapsedBorderValue"* [ %21, %676 ], [ %12, %672 ], [ %12, %666 ], [ %12, %670 ], [ %12, %533 ], [ %12, %653 ], [ %12, %657 ]
  %679 = bitcast %"class.blink::CollapsedBorderValue"* %678 to i64*
  %680 = load i64, i64* %679, align 4
  store i64 %680, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %638) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %535) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #12
  %681 = lshr i64 %680, 32
  %682 = trunc i64 %681 to i32
  %683 = icmp ugt i32 %682, 536870911
  br i1 %683, label %684, label %1447

684:                                              ; preds = %677, %386
  %685 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %685) #12
  %686 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 0
  %687 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 1
  %688 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 3
  %689 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %47, i64 0, i32 10
  %690 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %690, i8 -86, i64 24, i1 false)
  %691 = load i16, i16* %689, align 8, !noalias !96
  %692 = and i16 %691, 64
  %693 = icmp eq i16 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %684
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %685, i8 0, i64 24, i1 false) #12, !alias.scope !96
  br label %850

695:                                              ; preds = %684
  %696 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 2
  %697 = load i32, i32* %48, align 8
  %698 = and i32 %697, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %24, %"class.blink::LayoutTable"* %47, i32 %698) #12
  %699 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %687, align 8
  %700 = load i8, i8* %696, align 8
  %701 = icmp eq %"class.blink::LayoutTableCol"* %699, null
  %702 = icmp eq i8 %700, 0
  %703 = or i1 %701, %702
  br i1 %703, label %850, label %704

704:                                              ; preds = %695
  %705 = bitcast %"class.blink::LayoutTableCol"* %699 to %"class.blink::LayoutTableBoxComponent"*
  %706 = bitcast %"class.blink::CollapsedBorderValue"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %706) #12
  %707 = bitcast %"class.blink::BorderValue"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %707) #12
  %708 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %699, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %709 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %708, align 8
  %710 = bitcast %"class.blink::LayoutTableCol"* %699 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %711 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %710, align 8
  %712 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %711, i64 195
  %713 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %712, align 8
  %714 = call %"class.blink::LayoutTable"* %713(%"class.blink::LayoutTableBoxComponent"* %705) #12
  %715 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %714, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %716 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %715, align 8
  %717 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %717) #12
  %718 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %716, i64 0, i32 0, i32 9
  %719 = bitcast [20 x i8]* %718 to i160*
  %720 = load i160, i160* %719, align 8, !noalias !99
  %721 = lshr i160 %720, 102
  %722 = trunc i160 %721 to i16
  %723 = and i16 %722, 3
  %724 = lshr i160 %720, 107
  %725 = trunc i160 %724 to i16
  %726 = and i16 %725, 256
  %727 = or i16 %726, %723
  %728 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %709, i64 0, i32 0, i32 7, i32 0, i32 0
  %729 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %728, align 8, !noalias !99
  %730 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 27
  %731 = load i16, i16* %730, align 8, !noalias !99
  %732 = lshr i16 %731, 12
  %733 = zext i16 %732 to i32
  %734 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 22
  %735 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 26, i32 0
  %736 = load i32, i32* %735, align 4, !noalias !99
  %737 = bitcast %"class.blink::StyleColor"* %734 to i64*
  %738 = load i64, i64* %737, align 4, !noalias !99
  %739 = shl nuw nsw i32 %733, 26
  %740 = icmp slt i32 %736, 67108863
  %741 = select i1 %740, i32 %736, i32 67108863
  %742 = and i32 %741, 67108863
  %743 = or i32 %742, %739
  %744 = lshr i16 %731, 8
  %745 = and i16 %744, 15
  %746 = zext i16 %745 to i32
  %747 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 21
  %748 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 25, i32 0
  %749 = load i32, i32* %748, align 4, !noalias !99
  %750 = bitcast %"class.blink::StyleColor"* %747 to i64*
  %751 = load i64, i64* %750, align 4, !noalias !99
  %752 = shl nuw nsw i32 %746, 26
  %753 = icmp slt i32 %749, 67108863
  %754 = select i1 %753, i32 %749, i32 67108863
  %755 = and i32 %754, 67108863
  %756 = or i32 %755, %752
  %757 = and i16 %731, 15
  %758 = zext i16 %757 to i32
  %759 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 19
  %760 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 23, i32 0
  %761 = load i32, i32* %760, align 4, !noalias !99
  %762 = bitcast %"class.blink::StyleColor"* %759 to i64*
  %763 = load i64, i64* %762, align 4, !noalias !99
  %764 = shl nuw nsw i32 %758, 26
  %765 = icmp slt i32 %761, 67108863
  %766 = select i1 %765, i32 %761, i32 67108863
  %767 = and i32 %766, 67108863
  %768 = or i32 %767, %764
  %769 = lshr i16 %731, 4
  %770 = and i16 %769, 15
  %771 = zext i16 %770 to i32
  %772 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 20
  %773 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %729, i64 0, i32 24, i32 0
  %774 = load i32, i32* %773, align 4, !noalias !99
  %775 = bitcast %"class.blink::StyleColor"* %772 to i64*
  %776 = load i64, i64* %775, align 4, !noalias !99
  %777 = shl nuw nsw i32 %771, 26
  %778 = icmp slt i32 %774, 67108863
  %779 = select i1 %778, i32 %774, i32 67108863
  %780 = and i32 %779, 67108863
  %781 = or i32 %780, %777
  %782 = bitcast %"class.blink::PhysicalToLogical.1929"* %6 to i16*
  store i16 %727, i16* %782, align 4, !alias.scope !99
  %783 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 1
  %784 = bitcast %"class.blink::BorderValue"* %783 to i64*
  store i64 %738, i64* %784, align 4, !alias.scope !99
  %785 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 1, i32 1
  store i32 %743, i32* %785, align 4, !alias.scope !99
  %786 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 2
  %787 = bitcast %"class.blink::BorderValue"* %786 to i64*
  store i64 %751, i64* %787, align 4, !alias.scope !99
  %788 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 2, i32 1
  store i32 %756, i32* %788, align 4, !alias.scope !99
  %789 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 3
  %790 = bitcast %"class.blink::BorderValue"* %789 to i64*
  store i64 %763, i64* %790, align 4, !alias.scope !99
  %791 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 3, i32 1
  store i32 %768, i32* %791, align 4, !alias.scope !99
  %792 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 4
  %793 = bitcast %"class.blink::BorderValue"* %792 to i64*
  store i64 %776, i64* %793, align 4, !alias.scope !99
  %794 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 4, i32 1
  store i32 %781, i32* %794, align 4, !alias.scope !99
  %795 = icmp eq i16 %723, 0
  %796 = icmp eq i16 %726, 0
  %797 = select i1 %796, %"class.blink::BorderValue"* %792, %"class.blink::BorderValue"* %786
  %798 = select i1 %796, %"class.blink::BorderValue"* %783, %"class.blink::BorderValue"* %789
  %799 = select i1 %795, %"class.blink::BorderValue"* %797, %"class.blink::BorderValue"* %798
  %800 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %799, i64 0, i32 1
  %801 = bitcast %"class.blink::BorderValue"* %799 to i64*
  %802 = load i32, i32* %800, align 4
  %803 = load i64, i64* %801, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %717) #12
  %804 = bitcast %"class.blink::BorderValue"* %26 to i64*
  store i64 %803, i64* %804, align 8
  %805 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %26, i64 0, i32 1
  store i32 %802, i32* %805, align 8
  %806 = bitcast %"class.blink::Color"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %806) #12
  %807 = bitcast %"class.blink::LayoutTableCol"** %687 to %"class.blink::LayoutObject"**
  %808 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %807, align 8
  %809 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %808, i64 0, i32 5, i32 0
  %810 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %809, align 8
  %811 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %810, %"class.blink::CSSProperty"* dereferenceable(24) %108) #12
  %812 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %27, i64 0, i32 0
  store i32 %811, i32* %812, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %25, %"class.blink::BorderValue"* nonnull dereferenceable(12) %26, %"class.blink::Color"* nonnull dereferenceable(4) %27, i32 2) #12
  %813 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %25, i64 0, i32 1
  %814 = load i32, i32* %813, align 4
  %815 = icmp ugt i32 %814, 536870911
  br i1 %815, label %816, label %843

816:                                              ; preds = %704
  %817 = load i32, i32* %135, align 4
  %818 = icmp ugt i32 %817, 536870911
  br i1 %818, label %819, label %842

819:                                              ; preds = %816
  %820 = lshr i32 %817, 25
  %821 = and i32 %820, 15
  %822 = icmp eq i32 %821, 1
  br i1 %822, label %843, label %823

823:                                              ; preds = %819
  %824 = lshr i32 %814, 25
  %825 = and i32 %824, 15
  switch i32 %825, label %826 [
    i32 1, label %842
    i32 0, label %843
  ]

826:                                              ; preds = %823
  %827 = icmp eq i32 %821, 0
  br i1 %827, label %842, label %828

828:                                              ; preds = %826
  %829 = and i32 %817, 33554431
  %830 = and i32 %814, 33554431
  %831 = icmp eq i32 %829, %830
  br i1 %831, label %834, label %832

832:                                              ; preds = %828
  %833 = icmp ult i32 %829, %830
  br i1 %833, label %842, label %843

834:                                              ; preds = %828
  %835 = icmp eq i32 %821, %825
  br i1 %835, label %838, label %836

836:                                              ; preds = %834
  %837 = icmp ult i32 %821, %825
  br i1 %837, label %842, label %843

838:                                              ; preds = %834
  %839 = lshr i32 %817, 29
  %840 = lshr i32 %814, 29
  %841 = icmp ult i32 %839, %840
  br i1 %841, label %842, label %843

842:                                              ; preds = %838, %836, %832, %826, %823, %816
  br label %843

843:                                              ; preds = %704, %819, %823, %832, %836, %838, %842
  %844 = phi %"class.blink::CollapsedBorderValue"* [ %25, %842 ], [ %12, %838 ], [ %12, %832 ], [ %12, %836 ], [ %12, %704 ], [ %12, %819 ], [ %12, %823 ]
  %845 = bitcast %"class.blink::CollapsedBorderValue"* %844 to i64*
  %846 = load i64, i64* %845, align 4
  store i64 %846, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %806) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %707) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %706) #12
  %847 = lshr i64 %846, 32
  %848 = trunc i64 %847 to i32
  %849 = icmp ugt i32 %848, 536870911
  br i1 %849, label %850, label %1445

850:                                              ; preds = %694, %695, %843
  %851 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %686, align 8
  %852 = icmp eq %"class.blink::LayoutTableCol"* %851, null
  br i1 %852, label %999, label %853

853:                                              ; preds = %850
  %854 = bitcast %"class.blink::LayoutTableCol"* %851 to %"class.blink::LayoutTableBoxComponent"*
  %855 = bitcast %"class.blink::CollapsedBorderValue"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %855) #12
  %856 = bitcast %"class.blink::BorderValue"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %856) #12
  %857 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %851, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %858 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %857, align 8
  %859 = bitcast %"class.blink::LayoutTableCol"* %851 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %860 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %859, align 8
  %861 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %860, i64 195
  %862 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %861, align 8
  %863 = call %"class.blink::LayoutTable"* %862(%"class.blink::LayoutTableBoxComponent"* nonnull %854) #12
  %864 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %863, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %865 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %864, align 8
  %866 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %866) #12
  %867 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %865, i64 0, i32 0, i32 9
  %868 = bitcast [20 x i8]* %867 to i160*
  %869 = load i160, i160* %868, align 8, !noalias !102
  %870 = lshr i160 %869, 102
  %871 = trunc i160 %870 to i16
  %872 = and i16 %871, 3
  %873 = lshr i160 %869, 107
  %874 = trunc i160 %873 to i16
  %875 = and i16 %874, 256
  %876 = or i16 %875, %872
  %877 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %858, i64 0, i32 0, i32 7, i32 0, i32 0
  %878 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %877, align 8, !noalias !102
  %879 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 27
  %880 = load i16, i16* %879, align 8, !noalias !102
  %881 = lshr i16 %880, 12
  %882 = zext i16 %881 to i32
  %883 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 22
  %884 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 26, i32 0
  %885 = load i32, i32* %884, align 4, !noalias !102
  %886 = bitcast %"class.blink::StyleColor"* %883 to i64*
  %887 = load i64, i64* %886, align 4, !noalias !102
  %888 = shl nuw nsw i32 %882, 26
  %889 = icmp slt i32 %885, 67108863
  %890 = select i1 %889, i32 %885, i32 67108863
  %891 = and i32 %890, 67108863
  %892 = or i32 %891, %888
  %893 = lshr i16 %880, 8
  %894 = and i16 %893, 15
  %895 = zext i16 %894 to i32
  %896 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 21
  %897 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 25, i32 0
  %898 = load i32, i32* %897, align 4, !noalias !102
  %899 = bitcast %"class.blink::StyleColor"* %896 to i64*
  %900 = load i64, i64* %899, align 4, !noalias !102
  %901 = shl nuw nsw i32 %895, 26
  %902 = icmp slt i32 %898, 67108863
  %903 = select i1 %902, i32 %898, i32 67108863
  %904 = and i32 %903, 67108863
  %905 = or i32 %904, %901
  %906 = and i16 %880, 15
  %907 = zext i16 %906 to i32
  %908 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 19
  %909 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 23, i32 0
  %910 = load i32, i32* %909, align 4, !noalias !102
  %911 = bitcast %"class.blink::StyleColor"* %908 to i64*
  %912 = load i64, i64* %911, align 4, !noalias !102
  %913 = shl nuw nsw i32 %907, 26
  %914 = icmp slt i32 %910, 67108863
  %915 = select i1 %914, i32 %910, i32 67108863
  %916 = and i32 %915, 67108863
  %917 = or i32 %916, %913
  %918 = lshr i16 %880, 4
  %919 = and i16 %918, 15
  %920 = zext i16 %919 to i32
  %921 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 20
  %922 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %878, i64 0, i32 24, i32 0
  %923 = load i32, i32* %922, align 4, !noalias !102
  %924 = bitcast %"class.blink::StyleColor"* %921 to i64*
  %925 = load i64, i64* %924, align 4, !noalias !102
  %926 = shl nuw nsw i32 %920, 26
  %927 = icmp slt i32 %923, 67108863
  %928 = select i1 %927, i32 %923, i32 67108863
  %929 = and i32 %928, 67108863
  %930 = or i32 %929, %926
  %931 = bitcast %"class.blink::PhysicalToLogical.1929"* %5 to i16*
  store i16 %876, i16* %931, align 4, !alias.scope !102
  %932 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 1
  %933 = bitcast %"class.blink::BorderValue"* %932 to i64*
  store i64 %887, i64* %933, align 4, !alias.scope !102
  %934 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 1, i32 1
  store i32 %892, i32* %934, align 4, !alias.scope !102
  %935 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 2
  %936 = bitcast %"class.blink::BorderValue"* %935 to i64*
  store i64 %900, i64* %936, align 4, !alias.scope !102
  %937 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 2, i32 1
  store i32 %905, i32* %937, align 4, !alias.scope !102
  %938 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 3
  %939 = bitcast %"class.blink::BorderValue"* %938 to i64*
  store i64 %912, i64* %939, align 4, !alias.scope !102
  %940 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 3, i32 1
  store i32 %917, i32* %940, align 4, !alias.scope !102
  %941 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 4
  %942 = bitcast %"class.blink::BorderValue"* %941 to i64*
  store i64 %925, i64* %942, align 4, !alias.scope !102
  %943 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 4, i32 1
  store i32 %930, i32* %943, align 4, !alias.scope !102
  %944 = icmp eq i16 %872, 0
  %945 = icmp eq i16 %875, 0
  %946 = select i1 %945, %"class.blink::BorderValue"* %941, %"class.blink::BorderValue"* %935
  %947 = select i1 %945, %"class.blink::BorderValue"* %932, %"class.blink::BorderValue"* %938
  %948 = select i1 %944, %"class.blink::BorderValue"* %946, %"class.blink::BorderValue"* %947
  %949 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %948, i64 0, i32 1
  %950 = bitcast %"class.blink::BorderValue"* %948 to i64*
  %951 = load i32, i32* %949, align 4
  %952 = load i64, i64* %950, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %866) #12
  %953 = bitcast %"class.blink::BorderValue"* %29 to i64*
  store i64 %952, i64* %953, align 8
  %954 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %29, i64 0, i32 1
  store i32 %951, i32* %954, align 8
  %955 = bitcast %"class.blink::Color"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %955) #12
  %956 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to %"class.blink::LayoutObject"**
  %957 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %956, align 8
  %958 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %957, i64 0, i32 5, i32 0
  %959 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %958, align 8
  %960 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %959, %"class.blink::CSSProperty"* dereferenceable(24) %108) #12
  %961 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %30, i64 0, i32 0
  store i32 %960, i32* %961, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %28, %"class.blink::BorderValue"* nonnull dereferenceable(12) %29, %"class.blink::Color"* nonnull dereferenceable(4) %30, i32 3) #12
  %962 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %28, i64 0, i32 1
  %963 = load i32, i32* %962, align 4
  %964 = icmp ugt i32 %963, 536870911
  br i1 %964, label %965, label %992

965:                                              ; preds = %853
  %966 = load i32, i32* %135, align 4
  %967 = icmp ugt i32 %966, 536870911
  br i1 %967, label %968, label %991

968:                                              ; preds = %965
  %969 = lshr i32 %966, 25
  %970 = and i32 %969, 15
  %971 = icmp eq i32 %970, 1
  br i1 %971, label %992, label %972

972:                                              ; preds = %968
  %973 = lshr i32 %963, 25
  %974 = and i32 %973, 15
  switch i32 %974, label %975 [
    i32 1, label %991
    i32 0, label %992
  ]

975:                                              ; preds = %972
  %976 = icmp eq i32 %970, 0
  br i1 %976, label %991, label %977

977:                                              ; preds = %975
  %978 = and i32 %966, 33554431
  %979 = and i32 %963, 33554431
  %980 = icmp eq i32 %978, %979
  br i1 %980, label %983, label %981

981:                                              ; preds = %977
  %982 = icmp ult i32 %978, %979
  br i1 %982, label %991, label %992

983:                                              ; preds = %977
  %984 = icmp eq i32 %970, %974
  br i1 %984, label %987, label %985

985:                                              ; preds = %983
  %986 = icmp ult i32 %970, %974
  br i1 %986, label %991, label %992

987:                                              ; preds = %983
  %988 = lshr i32 %966, 29
  %989 = lshr i32 %963, 29
  %990 = icmp ult i32 %988, %989
  br i1 %990, label %991, label %992

991:                                              ; preds = %987, %985, %981, %975, %972, %965
  br label %992

992:                                              ; preds = %853, %968, %972, %981, %985, %987, %991
  %993 = phi %"class.blink::CollapsedBorderValue"* [ %28, %991 ], [ %12, %987 ], [ %12, %981 ], [ %12, %985 ], [ %12, %853 ], [ %12, %968 ], [ %12, %972 ]
  %994 = bitcast %"class.blink::CollapsedBorderValue"* %993 to i64*
  %995 = load i64, i64* %994, align 4
  store i64 %995, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %955) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %856) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %855) #12
  %996 = lshr i64 %995, 32
  %997 = trunc i64 %996 to i32
  %998 = icmp ugt i32 %997, 536870911
  br i1 %998, label %999, label %1445

999:                                              ; preds = %850, %992
  br i1 %240, label %1000, label %1311

1000:                                             ; preds = %999
  %1001 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1001) #12
  %1002 = load i16, i16* %689, align 8, !noalias !105
  %1003 = and i16 %1002, 64
  %1004 = icmp eq i16 %1003, 0
  br i1 %1004, label %1005, label %1006

1005:                                             ; preds = %1000
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1001, i8 0, i64 24, i1 false) #12, !alias.scope !105
  br label %1010

1006:                                             ; preds = %1000
  %1007 = load i32, i32* %48, align 8
  %1008 = and i32 %1007, 33554431
  %1009 = add nsw i32 %1008, -1
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %31, %"class.blink::LayoutTable"* %47, i32 %1009) #12
  br label %1010

1010:                                             ; preds = %1005, %1006
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %685, i8* nonnull align 8 %1001, i64 18, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1001) #12
  %1011 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %687, align 8
  %1012 = icmp eq %"class.blink::LayoutTableCol"* %1011, null
  %1013 = load i8, i8* %688, align 1
  %1014 = icmp eq i8 %1013, 0
  %1015 = or i1 %1012, %1014
  br i1 %1015, label %1162, label %1016

1016:                                             ; preds = %1010
  %1017 = bitcast %"class.blink::LayoutTableCol"* %1011 to %"class.blink::LayoutTableBoxComponent"*
  %1018 = bitcast %"class.blink::CollapsedBorderValue"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1018) #12
  %1019 = bitcast %"class.blink::BorderValue"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1019) #12
  %1020 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %1011, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1021 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1020, align 8
  %1022 = bitcast %"class.blink::LayoutTableCol"* %1011 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %1023 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %1022, align 8
  %1024 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1023, i64 195
  %1025 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1024, align 8
  %1026 = call %"class.blink::LayoutTable"* %1025(%"class.blink::LayoutTableBoxComponent"* %1017) #12
  %1027 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %1026, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1028 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1027, align 8
  %1029 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %1029) #12
  %1030 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1028, i64 0, i32 0, i32 9
  %1031 = bitcast [20 x i8]* %1030 to i160*
  %1032 = load i160, i160* %1031, align 8, !noalias !108
  %1033 = lshr i160 %1032, 102
  %1034 = trunc i160 %1033 to i16
  %1035 = and i16 %1034, 3
  %1036 = lshr i160 %1032, 107
  %1037 = trunc i160 %1036 to i16
  %1038 = and i16 %1037, 256
  %1039 = or i16 %1038, %1035
  %1040 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1021, i64 0, i32 0, i32 7, i32 0, i32 0
  %1041 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %1040, align 8, !noalias !108
  %1042 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 27
  %1043 = load i16, i16* %1042, align 8, !noalias !108
  %1044 = lshr i16 %1043, 12
  %1045 = zext i16 %1044 to i32
  %1046 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 22
  %1047 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 26, i32 0
  %1048 = load i32, i32* %1047, align 4, !noalias !108
  %1049 = bitcast %"class.blink::StyleColor"* %1046 to i64*
  %1050 = load i64, i64* %1049, align 4, !noalias !108
  %1051 = shl nuw nsw i32 %1045, 26
  %1052 = icmp slt i32 %1048, 67108863
  %1053 = select i1 %1052, i32 %1048, i32 67108863
  %1054 = and i32 %1053, 67108863
  %1055 = or i32 %1054, %1051
  %1056 = lshr i16 %1043, 8
  %1057 = and i16 %1056, 15
  %1058 = zext i16 %1057 to i32
  %1059 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 21
  %1060 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 25, i32 0
  %1061 = load i32, i32* %1060, align 4, !noalias !108
  %1062 = bitcast %"class.blink::StyleColor"* %1059 to i64*
  %1063 = load i64, i64* %1062, align 4, !noalias !108
  %1064 = shl nuw nsw i32 %1058, 26
  %1065 = icmp slt i32 %1061, 67108863
  %1066 = select i1 %1065, i32 %1061, i32 67108863
  %1067 = and i32 %1066, 67108863
  %1068 = or i32 %1067, %1064
  %1069 = and i16 %1043, 15
  %1070 = zext i16 %1069 to i32
  %1071 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 19
  %1072 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 23, i32 0
  %1073 = load i32, i32* %1072, align 4, !noalias !108
  %1074 = bitcast %"class.blink::StyleColor"* %1071 to i64*
  %1075 = load i64, i64* %1074, align 4, !noalias !108
  %1076 = shl nuw nsw i32 %1070, 26
  %1077 = icmp slt i32 %1073, 67108863
  %1078 = select i1 %1077, i32 %1073, i32 67108863
  %1079 = and i32 %1078, 67108863
  %1080 = or i32 %1079, %1076
  %1081 = lshr i16 %1043, 4
  %1082 = and i16 %1081, 15
  %1083 = zext i16 %1082 to i32
  %1084 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 20
  %1085 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1041, i64 0, i32 24, i32 0
  %1086 = load i32, i32* %1085, align 4, !noalias !108
  %1087 = bitcast %"class.blink::StyleColor"* %1084 to i64*
  %1088 = load i64, i64* %1087, align 4, !noalias !108
  %1089 = shl nuw nsw i32 %1083, 26
  %1090 = icmp slt i32 %1086, 67108863
  %1091 = select i1 %1090, i32 %1086, i32 67108863
  %1092 = and i32 %1091, 67108863
  %1093 = or i32 %1092, %1089
  %1094 = bitcast %"class.blink::PhysicalToLogical.1929"* %4 to i16*
  store i16 %1039, i16* %1094, align 4, !alias.scope !108
  %1095 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 1
  %1096 = bitcast %"class.blink::BorderValue"* %1095 to i64*
  store i64 %1050, i64* %1096, align 4, !alias.scope !108
  %1097 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 1, i32 1
  store i32 %1055, i32* %1097, align 4, !alias.scope !108
  %1098 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 2
  %1099 = bitcast %"class.blink::BorderValue"* %1098 to i64*
  store i64 %1063, i64* %1099, align 4, !alias.scope !108
  %1100 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 2, i32 1
  store i32 %1068, i32* %1100, align 4, !alias.scope !108
  %1101 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 3
  %1102 = bitcast %"class.blink::BorderValue"* %1101 to i64*
  store i64 %1075, i64* %1102, align 4, !alias.scope !108
  %1103 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 3, i32 1
  store i32 %1080, i32* %1103, align 4, !alias.scope !108
  %1104 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 4
  %1105 = bitcast %"class.blink::BorderValue"* %1104 to i64*
  store i64 %1088, i64* %1105, align 4, !alias.scope !108
  %1106 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 4, i32 1
  store i32 %1093, i32* %1106, align 4, !alias.scope !108
  %1107 = icmp eq i16 %1035, 0
  %1108 = icmp eq i16 %1038, 0
  %1109 = select i1 %1108, %"class.blink::BorderValue"* %1098, %"class.blink::BorderValue"* %1104
  %1110 = select i1 %1108, %"class.blink::BorderValue"* %1101, %"class.blink::BorderValue"* %1095
  %1111 = select i1 %1107, %"class.blink::BorderValue"* %1109, %"class.blink::BorderValue"* %1110
  %1112 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %1111, i64 0, i32 1
  %1113 = bitcast %"class.blink::BorderValue"* %1111 to i64*
  %1114 = load i32, i32* %1112, align 4
  %1115 = load i64, i64* %1113, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %1029) #12
  %1116 = bitcast %"class.blink::BorderValue"* %33 to i64*
  store i64 %1115, i64* %1116, align 8
  %1117 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %33, i64 0, i32 1
  store i32 %1114, i32* %1117, align 8
  %1118 = bitcast %"class.blink::Color"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1118) #12
  %1119 = bitcast %"class.blink::LayoutTableCol"** %687 to %"class.blink::LayoutObject"**
  %1120 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1119, align 8
  %1121 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1120, i64 0, i32 5, i32 0
  %1122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1121, align 8
  %1123 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1122, %"class.blink::CSSProperty"* dereferenceable(24) %132) #12
  %1124 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %34, i64 0, i32 0
  store i32 %1123, i32* %1124, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %32, %"class.blink::BorderValue"* nonnull dereferenceable(12) %33, %"class.blink::Color"* nonnull dereferenceable(4) %34, i32 2) #12
  %1125 = load i32, i32* %135, align 4
  %1126 = icmp ugt i32 %1125, 536870911
  br i1 %1126, label %1127, label %1155

1127:                                             ; preds = %1016
  %1128 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %32, i64 0, i32 1
  %1129 = load i32, i32* %1128, align 4
  %1130 = icmp ugt i32 %1129, 536870911
  br i1 %1130, label %1131, label %1154

1131:                                             ; preds = %1127
  %1132 = lshr i32 %1129, 25
  %1133 = and i32 %1132, 15
  %1134 = icmp eq i32 %1133, 1
  br i1 %1134, label %1155, label %1135

1135:                                             ; preds = %1131
  %1136 = lshr i32 %1125, 25
  %1137 = and i32 %1136, 15
  switch i32 %1137, label %1138 [
    i32 1, label %1154
    i32 0, label %1155
  ]

1138:                                             ; preds = %1135
  %1139 = icmp eq i32 %1133, 0
  br i1 %1139, label %1154, label %1140

1140:                                             ; preds = %1138
  %1141 = and i32 %1129, 33554431
  %1142 = and i32 %1125, 33554431
  %1143 = icmp eq i32 %1141, %1142
  br i1 %1143, label %1146, label %1144

1144:                                             ; preds = %1140
  %1145 = icmp ult i32 %1141, %1142
  br i1 %1145, label %1154, label %1155

1146:                                             ; preds = %1140
  %1147 = icmp eq i32 %1133, %1137
  br i1 %1147, label %1150, label %1148

1148:                                             ; preds = %1146
  %1149 = icmp ult i32 %1133, %1137
  br i1 %1149, label %1154, label %1155

1150:                                             ; preds = %1146
  %1151 = lshr i32 %1129, 29
  %1152 = lshr i32 %1125, 29
  %1153 = icmp ult i32 %1151, %1152
  br i1 %1153, label %1154, label %1155

1154:                                             ; preds = %1150, %1148, %1144, %1138, %1135, %1127
  br label %1155

1155:                                             ; preds = %1016, %1131, %1135, %1144, %1148, %1150, %1154
  %1156 = phi %"class.blink::CollapsedBorderValue"* [ %12, %1154 ], [ %32, %1150 ], [ %32, %1144 ], [ %32, %1148 ], [ %32, %1016 ], [ %32, %1131 ], [ %32, %1135 ]
  %1157 = bitcast %"class.blink::CollapsedBorderValue"* %1156 to i64*
  %1158 = load i64, i64* %1157, align 4
  store i64 %1158, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1118) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1019) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1018) #12
  %1159 = lshr i64 %1158, 32
  %1160 = trunc i64 %1159 to i32
  %1161 = icmp ugt i32 %1160, 536870911
  br i1 %1161, label %1162, label %1445

1162:                                             ; preds = %1010, %1155
  %1163 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %686, align 8
  %1164 = icmp eq %"class.blink::LayoutTableCol"* %1163, null
  br i1 %1164, label %1311, label %1165

1165:                                             ; preds = %1162
  %1166 = bitcast %"class.blink::LayoutTableCol"* %1163 to %"class.blink::LayoutTableBoxComponent"*
  %1167 = bitcast %"class.blink::CollapsedBorderValue"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1167) #12
  %1168 = bitcast %"class.blink::BorderValue"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1168) #12
  %1169 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %1163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1170 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1169, align 8
  %1171 = bitcast %"class.blink::LayoutTableCol"* %1163 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %1172 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %1171, align 8
  %1173 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1172, i64 195
  %1174 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1173, align 8
  %1175 = call %"class.blink::LayoutTable"* %1174(%"class.blink::LayoutTableBoxComponent"* nonnull %1166) #12
  %1176 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %1175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1177 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1176, align 8
  %1178 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %1178) #12
  %1179 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1177, i64 0, i32 0, i32 9
  %1180 = bitcast [20 x i8]* %1179 to i160*
  %1181 = load i160, i160* %1180, align 8, !noalias !111
  %1182 = lshr i160 %1181, 102
  %1183 = trunc i160 %1182 to i16
  %1184 = and i16 %1183, 3
  %1185 = lshr i160 %1181, 107
  %1186 = trunc i160 %1185 to i16
  %1187 = and i16 %1186, 256
  %1188 = or i16 %1187, %1184
  %1189 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1170, i64 0, i32 0, i32 7, i32 0, i32 0
  %1190 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %1189, align 8, !noalias !111
  %1191 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 27
  %1192 = load i16, i16* %1191, align 8, !noalias !111
  %1193 = lshr i16 %1192, 12
  %1194 = zext i16 %1193 to i32
  %1195 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 22
  %1196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 26, i32 0
  %1197 = load i32, i32* %1196, align 4, !noalias !111
  %1198 = bitcast %"class.blink::StyleColor"* %1195 to i64*
  %1199 = load i64, i64* %1198, align 4, !noalias !111
  %1200 = shl nuw nsw i32 %1194, 26
  %1201 = icmp slt i32 %1197, 67108863
  %1202 = select i1 %1201, i32 %1197, i32 67108863
  %1203 = and i32 %1202, 67108863
  %1204 = or i32 %1203, %1200
  %1205 = lshr i16 %1192, 8
  %1206 = and i16 %1205, 15
  %1207 = zext i16 %1206 to i32
  %1208 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 21
  %1209 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 25, i32 0
  %1210 = load i32, i32* %1209, align 4, !noalias !111
  %1211 = bitcast %"class.blink::StyleColor"* %1208 to i64*
  %1212 = load i64, i64* %1211, align 4, !noalias !111
  %1213 = shl nuw nsw i32 %1207, 26
  %1214 = icmp slt i32 %1210, 67108863
  %1215 = select i1 %1214, i32 %1210, i32 67108863
  %1216 = and i32 %1215, 67108863
  %1217 = or i32 %1216, %1213
  %1218 = and i16 %1192, 15
  %1219 = zext i16 %1218 to i32
  %1220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 19
  %1221 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 23, i32 0
  %1222 = load i32, i32* %1221, align 4, !noalias !111
  %1223 = bitcast %"class.blink::StyleColor"* %1220 to i64*
  %1224 = load i64, i64* %1223, align 4, !noalias !111
  %1225 = shl nuw nsw i32 %1219, 26
  %1226 = icmp slt i32 %1222, 67108863
  %1227 = select i1 %1226, i32 %1222, i32 67108863
  %1228 = and i32 %1227, 67108863
  %1229 = or i32 %1228, %1225
  %1230 = lshr i16 %1192, 4
  %1231 = and i16 %1230, 15
  %1232 = zext i16 %1231 to i32
  %1233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 20
  %1234 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1190, i64 0, i32 24, i32 0
  %1235 = load i32, i32* %1234, align 4, !noalias !111
  %1236 = bitcast %"class.blink::StyleColor"* %1233 to i64*
  %1237 = load i64, i64* %1236, align 4, !noalias !111
  %1238 = shl nuw nsw i32 %1232, 26
  %1239 = icmp slt i32 %1235, 67108863
  %1240 = select i1 %1239, i32 %1235, i32 67108863
  %1241 = and i32 %1240, 67108863
  %1242 = or i32 %1241, %1238
  %1243 = bitcast %"class.blink::PhysicalToLogical.1929"* %3 to i16*
  store i16 %1188, i16* %1243, align 4, !alias.scope !111
  %1244 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 1
  %1245 = bitcast %"class.blink::BorderValue"* %1244 to i64*
  store i64 %1199, i64* %1245, align 4, !alias.scope !111
  %1246 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 1, i32 1
  store i32 %1204, i32* %1246, align 4, !alias.scope !111
  %1247 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 2
  %1248 = bitcast %"class.blink::BorderValue"* %1247 to i64*
  store i64 %1212, i64* %1248, align 4, !alias.scope !111
  %1249 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 2, i32 1
  store i32 %1217, i32* %1249, align 4, !alias.scope !111
  %1250 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 3
  %1251 = bitcast %"class.blink::BorderValue"* %1250 to i64*
  store i64 %1224, i64* %1251, align 4, !alias.scope !111
  %1252 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 3, i32 1
  store i32 %1229, i32* %1252, align 4, !alias.scope !111
  %1253 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 4
  %1254 = bitcast %"class.blink::BorderValue"* %1253 to i64*
  store i64 %1237, i64* %1254, align 4, !alias.scope !111
  %1255 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 4, i32 1
  store i32 %1242, i32* %1255, align 4, !alias.scope !111
  %1256 = icmp eq i16 %1184, 0
  %1257 = icmp eq i16 %1187, 0
  %1258 = select i1 %1257, %"class.blink::BorderValue"* %1247, %"class.blink::BorderValue"* %1253
  %1259 = select i1 %1257, %"class.blink::BorderValue"* %1250, %"class.blink::BorderValue"* %1244
  %1260 = select i1 %1256, %"class.blink::BorderValue"* %1258, %"class.blink::BorderValue"* %1259
  %1261 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %1260, i64 0, i32 1
  %1262 = bitcast %"class.blink::BorderValue"* %1260 to i64*
  %1263 = load i32, i32* %1261, align 4
  %1264 = load i64, i64* %1262, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %1178) #12
  %1265 = bitcast %"class.blink::BorderValue"* %36 to i64*
  store i64 %1264, i64* %1265, align 8
  %1266 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %36, i64 0, i32 1
  store i32 %1263, i32* %1266, align 8
  %1267 = bitcast %"class.blink::Color"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1267) #12
  %1268 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to %"class.blink::LayoutObject"**
  %1269 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1268, align 8
  %1270 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1269, i64 0, i32 5, i32 0
  %1271 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1270, align 8
  %1272 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1271, %"class.blink::CSSProperty"* dereferenceable(24) %132) #12
  %1273 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %37, i64 0, i32 0
  store i32 %1272, i32* %1273, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %35, %"class.blink::BorderValue"* nonnull dereferenceable(12) %36, %"class.blink::Color"* nonnull dereferenceable(4) %37, i32 3) #12
  %1274 = load i32, i32* %135, align 4
  %1275 = icmp ugt i32 %1274, 536870911
  br i1 %1275, label %1276, label %1304

1276:                                             ; preds = %1165
  %1277 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %35, i64 0, i32 1
  %1278 = load i32, i32* %1277, align 4
  %1279 = icmp ugt i32 %1278, 536870911
  br i1 %1279, label %1280, label %1303

1280:                                             ; preds = %1276
  %1281 = lshr i32 %1278, 25
  %1282 = and i32 %1281, 15
  %1283 = icmp eq i32 %1282, 1
  br i1 %1283, label %1304, label %1284

1284:                                             ; preds = %1280
  %1285 = lshr i32 %1274, 25
  %1286 = and i32 %1285, 15
  switch i32 %1286, label %1287 [
    i32 1, label %1303
    i32 0, label %1304
  ]

1287:                                             ; preds = %1284
  %1288 = icmp eq i32 %1282, 0
  br i1 %1288, label %1303, label %1289

1289:                                             ; preds = %1287
  %1290 = and i32 %1278, 33554431
  %1291 = and i32 %1274, 33554431
  %1292 = icmp eq i32 %1290, %1291
  br i1 %1292, label %1295, label %1293

1293:                                             ; preds = %1289
  %1294 = icmp ult i32 %1290, %1291
  br i1 %1294, label %1303, label %1304

1295:                                             ; preds = %1289
  %1296 = icmp eq i32 %1282, %1286
  br i1 %1296, label %1299, label %1297

1297:                                             ; preds = %1295
  %1298 = icmp ult i32 %1282, %1286
  br i1 %1298, label %1303, label %1304

1299:                                             ; preds = %1295
  %1300 = lshr i32 %1278, 29
  %1301 = lshr i32 %1274, 29
  %1302 = icmp ult i32 %1300, %1301
  br i1 %1302, label %1303, label %1304

1303:                                             ; preds = %1299, %1297, %1293, %1287, %1284, %1276
  br label %1304

1304:                                             ; preds = %1165, %1280, %1284, %1293, %1297, %1299, %1303
  %1305 = phi %"class.blink::CollapsedBorderValue"* [ %12, %1303 ], [ %35, %1299 ], [ %35, %1293 ], [ %35, %1297 ], [ %35, %1165 ], [ %35, %1280 ], [ %35, %1284 ]
  %1306 = bitcast %"class.blink::CollapsedBorderValue"* %1305 to i64*
  %1307 = load i64, i64* %1306, align 4
  store i64 %1307, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1267) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1168) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1167) #12
  %1308 = lshr i64 %1307, 32
  %1309 = trunc i64 %1308 to i32
  %1310 = icmp ugt i32 %1309, 536870911
  br i1 %1310, label %1311, label %1445

1311:                                             ; preds = %1162, %1304, %999
  br i1 %51, label %1314, label %1312

1312:                                             ; preds = %1311
  %1313 = load i64, i64* %11, align 8
  br label %1445

1314:                                             ; preds = %1311
  %1315 = bitcast %"class.blink::CollapsedBorderValue"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1315) #12
  %1316 = bitcast %"class.blink::BorderValue"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1316) #12
  %1317 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1318 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1317, align 8
  %1319 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %1319) #12
  %1320 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1318, i64 0, i32 0, i32 9
  %1321 = bitcast [20 x i8]* %1320 to i160*
  %1322 = load i160, i160* %1321, align 8, !noalias !114
  %1323 = lshr i160 %1322, 102
  %1324 = trunc i160 %1323 to i16
  %1325 = and i16 %1324, 3
  %1326 = lshr i160 %1322, 107
  %1327 = trunc i160 %1326 to i16
  %1328 = and i16 %1327, 256
  %1329 = or i16 %1328, %1325
  %1330 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1318, i64 0, i32 0, i32 7, i32 0, i32 0
  %1331 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %1330, align 8, !noalias !114
  %1332 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 27
  %1333 = load i16, i16* %1332, align 8, !noalias !114
  %1334 = lshr i16 %1333, 12
  %1335 = zext i16 %1334 to i32
  %1336 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 22
  %1337 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 26, i32 0
  %1338 = load i32, i32* %1337, align 4, !noalias !114
  %1339 = bitcast %"class.blink::StyleColor"* %1336 to i64*
  %1340 = load i64, i64* %1339, align 4, !noalias !114
  %1341 = shl nuw nsw i32 %1335, 26
  %1342 = icmp slt i32 %1338, 67108863
  %1343 = select i1 %1342, i32 %1338, i32 67108863
  %1344 = and i32 %1343, 67108863
  %1345 = or i32 %1344, %1341
  %1346 = lshr i16 %1333, 8
  %1347 = and i16 %1346, 15
  %1348 = zext i16 %1347 to i32
  %1349 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 21
  %1350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 25, i32 0
  %1351 = load i32, i32* %1350, align 4, !noalias !114
  %1352 = bitcast %"class.blink::StyleColor"* %1349 to i64*
  %1353 = load i64, i64* %1352, align 4, !noalias !114
  %1354 = shl nuw nsw i32 %1348, 26
  %1355 = icmp slt i32 %1351, 67108863
  %1356 = select i1 %1355, i32 %1351, i32 67108863
  %1357 = and i32 %1356, 67108863
  %1358 = or i32 %1357, %1354
  %1359 = and i16 %1333, 15
  %1360 = zext i16 %1359 to i32
  %1361 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 19
  %1362 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 23, i32 0
  %1363 = load i32, i32* %1362, align 4, !noalias !114
  %1364 = bitcast %"class.blink::StyleColor"* %1361 to i64*
  %1365 = load i64, i64* %1364, align 4, !noalias !114
  %1366 = shl nuw nsw i32 %1360, 26
  %1367 = icmp slt i32 %1363, 67108863
  %1368 = select i1 %1367, i32 %1363, i32 67108863
  %1369 = and i32 %1368, 67108863
  %1370 = or i32 %1369, %1366
  %1371 = lshr i16 %1333, 4
  %1372 = and i16 %1371, 15
  %1373 = zext i16 %1372 to i32
  %1374 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 20
  %1375 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1331, i64 0, i32 24, i32 0
  %1376 = load i32, i32* %1375, align 4, !noalias !114
  %1377 = bitcast %"class.blink::StyleColor"* %1374 to i64*
  %1378 = load i64, i64* %1377, align 4, !noalias !114
  %1379 = shl nuw nsw i32 %1373, 26
  %1380 = icmp slt i32 %1376, 67108863
  %1381 = select i1 %1380, i32 %1376, i32 67108863
  %1382 = and i32 %1381, 67108863
  %1383 = or i32 %1382, %1379
  %1384 = bitcast %"class.blink::PhysicalToLogical.1929"* %2 to i16*
  store i16 %1329, i16* %1384, align 4, !alias.scope !114
  %1385 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 1
  %1386 = bitcast %"class.blink::BorderValue"* %1385 to i64*
  store i64 %1340, i64* %1386, align 4, !alias.scope !114
  %1387 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 1, i32 1
  store i32 %1345, i32* %1387, align 4, !alias.scope !114
  %1388 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 2
  %1389 = bitcast %"class.blink::BorderValue"* %1388 to i64*
  store i64 %1353, i64* %1389, align 4, !alias.scope !114
  %1390 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 2, i32 1
  store i32 %1358, i32* %1390, align 4, !alias.scope !114
  %1391 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 3
  %1392 = bitcast %"class.blink::BorderValue"* %1391 to i64*
  store i64 %1365, i64* %1392, align 4, !alias.scope !114
  %1393 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 3, i32 1
  store i32 %1370, i32* %1393, align 4, !alias.scope !114
  %1394 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 4
  %1395 = bitcast %"class.blink::BorderValue"* %1394 to i64*
  store i64 %1378, i64* %1395, align 4, !alias.scope !114
  %1396 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 4, i32 1
  store i32 %1383, i32* %1396, align 4, !alias.scope !114
  %1397 = icmp eq i16 %1325, 0
  %1398 = icmp eq i16 %1328, 0
  %1399 = select i1 %1398, %"class.blink::BorderValue"* %1394, %"class.blink::BorderValue"* %1388
  %1400 = select i1 %1398, %"class.blink::BorderValue"* %1385, %"class.blink::BorderValue"* %1391
  %1401 = select i1 %1397, %"class.blink::BorderValue"* %1399, %"class.blink::BorderValue"* %1400
  %1402 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %1401, i64 0, i32 1
  %1403 = bitcast %"class.blink::BorderValue"* %1401 to i64*
  %1404 = load i32, i32* %1402, align 4
  %1405 = load i64, i64* %1403, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %1319) #12
  %1406 = bitcast %"class.blink::BorderValue"* %39 to i64*
  store i64 %1405, i64* %1406, align 8
  %1407 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %39, i64 0, i32 1
  store i32 %1404, i32* %1407, align 8
  %1408 = bitcast %"class.blink::Color"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1408) #12
  %1409 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1318, %"class.blink::CSSProperty"* dereferenceable(24) %108) #12
  %1410 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %40, i64 0, i32 0
  store i32 %1409, i32* %1410, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %38, %"class.blink::BorderValue"* nonnull dereferenceable(12) %39, %"class.blink::Color"* nonnull dereferenceable(4) %40, i32 1) #12
  %1411 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %38, i64 0, i32 1
  %1412 = load i32, i32* %1411, align 4
  %1413 = icmp ugt i32 %1412, 536870911
  br i1 %1413, label %1414, label %1441

1414:                                             ; preds = %1314
  %1415 = load i32, i32* %135, align 4
  %1416 = icmp ugt i32 %1415, 536870911
  br i1 %1416, label %1417, label %1440

1417:                                             ; preds = %1414
  %1418 = lshr i32 %1415, 25
  %1419 = and i32 %1418, 15
  %1420 = icmp eq i32 %1419, 1
  br i1 %1420, label %1441, label %1421

1421:                                             ; preds = %1417
  %1422 = lshr i32 %1412, 25
  %1423 = and i32 %1422, 15
  switch i32 %1423, label %1424 [
    i32 1, label %1440
    i32 0, label %1441
  ]

1424:                                             ; preds = %1421
  %1425 = icmp eq i32 %1419, 0
  br i1 %1425, label %1440, label %1426

1426:                                             ; preds = %1424
  %1427 = and i32 %1415, 33554431
  %1428 = and i32 %1412, 33554431
  %1429 = icmp eq i32 %1427, %1428
  br i1 %1429, label %1432, label %1430

1430:                                             ; preds = %1426
  %1431 = icmp ult i32 %1427, %1428
  br i1 %1431, label %1440, label %1441

1432:                                             ; preds = %1426
  %1433 = icmp eq i32 %1419, %1423
  br i1 %1433, label %1436, label %1434

1434:                                             ; preds = %1432
  %1435 = icmp ult i32 %1419, %1423
  br i1 %1435, label %1440, label %1441

1436:                                             ; preds = %1432
  %1437 = lshr i32 %1415, 29
  %1438 = lshr i32 %1412, 29
  %1439 = icmp ult i32 %1437, %1438
  br i1 %1439, label %1440, label %1441

1440:                                             ; preds = %1436, %1434, %1430, %1424, %1421, %1414
  br label %1441

1441:                                             ; preds = %1314, %1417, %1421, %1430, %1434, %1436, %1440
  %1442 = phi %"class.blink::CollapsedBorderValue"* [ %38, %1440 ], [ %12, %1436 ], [ %12, %1430 ], [ %12, %1434 ], [ %12, %1314 ], [ %12, %1417 ], [ %12, %1421 ]
  %1443 = bitcast %"class.blink::CollapsedBorderValue"* %1442 to i64*
  %1444 = load i64, i64* %1443, align 4
  store i64 %1444, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1408) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1316) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1315) #12
  br label %1445

1445:                                             ; preds = %1441, %1312, %1304, %1155, %992, %843
  %1446 = phi i64 [ %846, %843 ], [ %995, %992 ], [ %1158, %1155 ], [ %1307, %1304 ], [ %1313, %1312 ], [ %1444, %1441 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %685) #12
  br label %1447

1447:                                             ; preds = %677, %526, %379, %1445
  %1448 = phi i64 [ %1446, %1445 ], [ %382, %379 ], [ %529, %526 ], [ %680, %677 ]
  %1449 = and i64 %1448, -4294967296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #12
  br label %1450

1450:                                             ; preds = %73, %77, %1447
  %1451 = phi i64 [ %1449, %1447 ], [ %82, %77 ], [ 0, %73 ]
  %1452 = phi i64 [ %1448, %1447 ], [ %81, %77 ], [ 0, %73 ]
  %1453 = and i64 %1452, 4294967295
  %1454 = or i64 %1453, %1451
  ret i64 %1454
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CollapsedBorderValue"* @_ZNK5blink21CollapsedBorderValues9EndBorderEv(%"class.blink::CollapsedBorderValues"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 1
  ret %"class.blink::CollapsedBorderValue"* %2
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink36GetCSSPropertyBorderInlineStartColorEv() local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink34GetCSSPropertyBorderInlineEndColorEv() local_unnamed_addr #1

declare void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"*, %"class.blink::BorderValue"* dereferenceable(12), %"class.blink::Color"* dereferenceable(4), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutTableCell25ComputeCollapsedEndBorderEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %3 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %4 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %5 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %6 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %7 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %8 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %9 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %10 = alloca %"class.blink::PhysicalToLogical.1929", align 4
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::CollapsedBorderValue"*
  %13 = alloca %"class.blink::BorderValue", align 8
  %14 = alloca %"class.blink::Color", align 4
  %15 = alloca %"class.blink::CollapsedBorderValue", align 4
  %16 = alloca %"class.blink::BorderValue", align 8
  %17 = alloca %"class.blink::Color", align 4
  %18 = alloca %"class.blink::CollapsedBorderValue", align 4
  %19 = alloca %"class.blink::BorderValue", align 8
  %20 = alloca %"class.blink::Color", align 4
  %21 = alloca %"class.blink::CollapsedBorderValue", align 4
  %22 = alloca %"class.blink::BorderValue", align 8
  %23 = alloca %"class.blink::Color", align 4
  %24 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %25 = alloca %"class.blink::CollapsedBorderValue", align 4
  %26 = alloca %"class.blink::BorderValue", align 8
  %27 = alloca %"class.blink::Color", align 4
  %28 = alloca %"class.blink::CollapsedBorderValue", align 4
  %29 = alloca %"class.blink::BorderValue", align 8
  %30 = alloca %"class.blink::Color", align 4
  %31 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %32 = alloca %"class.blink::CollapsedBorderValue", align 4
  %33 = alloca %"class.blink::BorderValue", align 8
  %34 = alloca %"class.blink::Color", align 4
  %35 = alloca %"class.blink::CollapsedBorderValue", align 4
  %36 = alloca %"class.blink::BorderValue", align 8
  %37 = alloca %"class.blink::Color", align 4
  %38 = alloca %"class.blink::CollapsedBorderValue", align 4
  %39 = alloca %"class.blink::BorderValue", align 8
  %40 = alloca %"class.blink::Color", align 4
  %41 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 7
  %46 = bitcast %"class.blink::LayoutObject"** %45 to %"class.blink::LayoutTable"**
  %47 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %46, align 8
  %48 = tail call zeroext i1 @_ZNK5blink15LayoutTableCell13IsInEndColumnEv(%"class.blink::LayoutTableCell"* %0)
  br i1 %48, label %79, label %49

49:                                               ; preds = %1
  %50 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellFollowingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %47, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %51 = icmp eq %"class.blink::LayoutTableCell"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::LayoutObject"** %41 to %"class.blink::LayoutTableRow"**
  %54 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %54, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %58 = bitcast %"class.blink::LayoutObject"** %57 to %"class.blink::LayoutTableRow"**
  %59 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = xor i32 %61, %56
  %63 = and i32 %62, 2147483647
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %52
  %66 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %50, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 1073741824
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %65
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %50) #12
  %71 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %71, align 8
  %73 = icmp eq %"class.blink::CollapsedBorderValues"* %72, null
  br i1 %73, label %1531, label %74

74:                                               ; preds = %70
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %50) #12
  %75 = bitcast %"class.blink::CollapsedBorderValues"** %71 to i64**
  %76 = load i64*, i64** %75, align 8
  %77 = load i64, i64* %76, align 4
  %78 = and i64 %77, -4294967296
  br label %1531

79:                                               ; preds = %1, %49, %65, %52
  %80 = phi i1 [ false, %65 ], [ false, %52 ], [ true, %49 ], [ true, %1 ]
  %81 = phi %"class.blink::LayoutTableCell"* [ %50, %65 ], [ %50, %52 ], [ null, %49 ], [ null, %1 ]
  %82 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink36GetCSSPropertyBorderInlineStartColorEv() #12
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 7
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %85, i64 0, i32 7
  %87 = bitcast %"class.blink::LayoutObject"** %86 to %"class.blink::LayoutTable"**
  %88 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %90 = bitcast %"class.blink::ComputedStyle"** %89 to %"class.blink::ComputedStyleBase"**
  %91 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %91, i64 0, i32 9
  %93 = bitcast [20 x i8]* %92 to i160*
  %94 = load i160, i160* %93, align 8
  %95 = lshr i160 %94, 115
  %96 = trunc i160 %95 to i8
  %97 = and i8 %96, 1
  %98 = lshr i160 %94, 102
  %99 = trunc i160 %98 to i8
  %100 = and i8 %99, 3
  %101 = bitcast %"class.blink::CSSProperty"* %82 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %102 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %101, align 8
  %103 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %102, i64 11
  %104 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %103, align 8
  %105 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %104(%"class.blink::CSSProperty"* %82, i8 zeroext %97, i8 zeroext %100) #12
  %106 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink34GetCSSPropertyBorderInlineEndColorEv() #12
  %107 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %107, i64 0, i32 7
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 7
  %111 = bitcast %"class.blink::LayoutObject"** %110 to %"class.blink::LayoutTable"**
  %112 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %114 = bitcast %"class.blink::ComputedStyle"** %113 to %"class.blink::ComputedStyleBase"**
  %115 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %115, i64 0, i32 9
  %117 = bitcast [20 x i8]* %116 to i160*
  %118 = load i160, i160* %117, align 8
  %119 = lshr i160 %118, 115
  %120 = trunc i160 %119 to i8
  %121 = and i8 %120, 1
  %122 = lshr i160 %118, 102
  %123 = trunc i160 %122 to i8
  %124 = and i8 %123, 3
  %125 = bitcast %"class.blink::CSSProperty"* %106 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %126 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %125, align 8
  %127 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %126, i64 11
  %128 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %127, align 8
  %129 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %128(%"class.blink::CSSProperty"* %106, i8 zeroext %121, i8 zeroext %124) #12
  %130 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #12
  %131 = bitcast i64* %11 to i32*
  store i32 -1431655766, i32* %131, align 8
  %132 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %12, i64 0, i32 1
  store i32 -1431655766, i32* %132, align 4
  %133 = bitcast %"class.blink::BorderValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %133) #12
  %134 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %135 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %134, align 8
  %136 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %137 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %136, i64 0, i32 7
  %138 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %138, i64 0, i32 7
  %140 = bitcast %"class.blink::LayoutObject"** %139 to %"class.blink::LayoutTable"**
  %141 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %143 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %144) #12
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %143, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8, !noalias !117
  %148 = lshr i160 %147, 102
  %149 = trunc i160 %148 to i16
  %150 = and i16 %149, 3
  %151 = lshr i160 %147, 107
  %152 = trunc i160 %151 to i16
  %153 = and i16 %152, 256
  %154 = or i16 %153, %150
  %155 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %135, i64 0, i32 0, i32 7, i32 0, i32 0
  %156 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %155, align 8, !noalias !117
  %157 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 27
  %158 = load i16, i16* %157, align 8, !noalias !117
  %159 = lshr i16 %158, 12
  %160 = zext i16 %159 to i32
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 22
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 26, i32 0
  %163 = load i32, i32* %162, align 4, !noalias !117
  %164 = bitcast %"class.blink::StyleColor"* %161 to i64*
  %165 = load i64, i64* %164, align 4, !noalias !117
  %166 = shl nuw nsw i32 %160, 26
  %167 = icmp slt i32 %163, 67108863
  %168 = select i1 %167, i32 %163, i32 67108863
  %169 = and i32 %168, 67108863
  %170 = or i32 %169, %166
  %171 = lshr i16 %158, 8
  %172 = and i16 %171, 15
  %173 = zext i16 %172 to i32
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 21
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 25, i32 0
  %176 = load i32, i32* %175, align 4, !noalias !117
  %177 = bitcast %"class.blink::StyleColor"* %174 to i64*
  %178 = load i64, i64* %177, align 4, !noalias !117
  %179 = shl nuw nsw i32 %173, 26
  %180 = icmp slt i32 %176, 67108863
  %181 = select i1 %180, i32 %176, i32 67108863
  %182 = and i32 %181, 67108863
  %183 = or i32 %182, %179
  %184 = and i16 %158, 15
  %185 = zext i16 %184 to i32
  %186 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 19
  %187 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 23, i32 0
  %188 = load i32, i32* %187, align 4, !noalias !117
  %189 = bitcast %"class.blink::StyleColor"* %186 to i64*
  %190 = load i64, i64* %189, align 4, !noalias !117
  %191 = shl nuw nsw i32 %185, 26
  %192 = icmp slt i32 %188, 67108863
  %193 = select i1 %192, i32 %188, i32 67108863
  %194 = and i32 %193, 67108863
  %195 = or i32 %194, %191
  %196 = lshr i16 %158, 4
  %197 = and i16 %196, 15
  %198 = zext i16 %197 to i32
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 20
  %200 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %156, i64 0, i32 24, i32 0
  %201 = load i32, i32* %200, align 4, !noalias !117
  %202 = bitcast %"class.blink::StyleColor"* %199 to i64*
  %203 = load i64, i64* %202, align 4, !noalias !117
  %204 = shl nuw nsw i32 %198, 26
  %205 = icmp slt i32 %201, 67108863
  %206 = select i1 %205, i32 %201, i32 67108863
  %207 = and i32 %206, 67108863
  %208 = or i32 %207, %204
  %209 = bitcast %"class.blink::PhysicalToLogical.1929"* %10 to i16*
  store i16 %154, i16* %209, align 4, !alias.scope !117
  %210 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 1
  %211 = bitcast %"class.blink::BorderValue"* %210 to i64*
  store i64 %165, i64* %211, align 4, !alias.scope !117
  %212 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 1, i32 1
  store i32 %170, i32* %212, align 4, !alias.scope !117
  %213 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 2
  %214 = bitcast %"class.blink::BorderValue"* %213 to i64*
  store i64 %178, i64* %214, align 4, !alias.scope !117
  %215 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 2, i32 1
  store i32 %183, i32* %215, align 4, !alias.scope !117
  %216 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 3
  %217 = bitcast %"class.blink::BorderValue"* %216 to i64*
  store i64 %190, i64* %217, align 4, !alias.scope !117
  %218 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 3, i32 1
  store i32 %195, i32* %218, align 4, !alias.scope !117
  %219 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 4
  %220 = bitcast %"class.blink::BorderValue"* %219 to i64*
  store i64 %203, i64* %220, align 4, !alias.scope !117
  %221 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %10, i64 0, i32 4, i32 1
  store i32 %208, i32* %221, align 4, !alias.scope !117
  %222 = icmp eq i16 %150, 0
  %223 = icmp eq i16 %153, 0
  %224 = select i1 %223, %"class.blink::BorderValue"* %213, %"class.blink::BorderValue"* %219
  %225 = select i1 %223, %"class.blink::BorderValue"* %216, %"class.blink::BorderValue"* %210
  %226 = select i1 %222, %"class.blink::BorderValue"* %224, %"class.blink::BorderValue"* %225
  %227 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %226, i64 0, i32 1
  %228 = bitcast %"class.blink::BorderValue"* %226 to i64*
  %229 = load i32, i32* %227, align 4
  %230 = load i64, i64* %228, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %144) #12
  %231 = bitcast %"class.blink::BorderValue"* %13 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %13, i64 0, i32 1
  store i32 %229, i32* %232, align 8
  %233 = bitcast %"class.blink::Color"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233) #12
  %234 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %134, align 8
  %235 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %234, %"class.blink::CSSProperty"* dereferenceable(24) %129) #12
  %236 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %14, i64 0, i32 0
  store i32 %235, i32* %236, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %12, %"class.blink::BorderValue"* nonnull dereferenceable(12) %13, %"class.blink::Color"* nonnull dereferenceable(4) %14, i32 6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %133) #12
  br i1 %80, label %382, label %237

237:                                              ; preds = %79
  %238 = bitcast %"class.blink::CollapsedBorderValue"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #12
  %239 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %15, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %239, align 4
  %240 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %15, i64 0, i32 1
  store i32 -1431655766, i32* %240, align 4
  %241 = bitcast %"class.blink::BorderValue"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %241) #12
  %242 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %243 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %245 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %244, align 8
  %246 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %245, i64 0, i32 7
  %247 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %247, i64 0, i32 7
  %249 = bitcast %"class.blink::LayoutObject"** %248 to %"class.blink::LayoutTable"**
  %250 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %250, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %252 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %253) #12
  %254 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %252, i64 0, i32 0, i32 9
  %255 = bitcast [20 x i8]* %254 to i160*
  %256 = load i160, i160* %255, align 8, !noalias !120
  %257 = lshr i160 %256, 102
  %258 = trunc i160 %257 to i16
  %259 = and i16 %258, 3
  %260 = lshr i160 %256, 107
  %261 = trunc i160 %260 to i16
  %262 = and i16 %261, 256
  %263 = or i16 %262, %259
  %264 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %243, i64 0, i32 0, i32 7, i32 0, i32 0
  %265 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %264, align 8, !noalias !120
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 27
  %267 = load i16, i16* %266, align 8, !noalias !120
  %268 = lshr i16 %267, 12
  %269 = zext i16 %268 to i32
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 22
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 26, i32 0
  %272 = load i32, i32* %271, align 4, !noalias !120
  %273 = bitcast %"class.blink::StyleColor"* %270 to i64*
  %274 = load i64, i64* %273, align 4, !noalias !120
  %275 = shl nuw nsw i32 %269, 26
  %276 = icmp slt i32 %272, 67108863
  %277 = select i1 %276, i32 %272, i32 67108863
  %278 = and i32 %277, 67108863
  %279 = or i32 %278, %275
  %280 = lshr i16 %267, 8
  %281 = and i16 %280, 15
  %282 = zext i16 %281 to i32
  %283 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 21
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 25, i32 0
  %285 = load i32, i32* %284, align 4, !noalias !120
  %286 = bitcast %"class.blink::StyleColor"* %283 to i64*
  %287 = load i64, i64* %286, align 4, !noalias !120
  %288 = shl nuw nsw i32 %282, 26
  %289 = icmp slt i32 %285, 67108863
  %290 = select i1 %289, i32 %285, i32 67108863
  %291 = and i32 %290, 67108863
  %292 = or i32 %291, %288
  %293 = and i16 %267, 15
  %294 = zext i16 %293 to i32
  %295 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 19
  %296 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 23, i32 0
  %297 = load i32, i32* %296, align 4, !noalias !120
  %298 = bitcast %"class.blink::StyleColor"* %295 to i64*
  %299 = load i64, i64* %298, align 4, !noalias !120
  %300 = shl nuw nsw i32 %294, 26
  %301 = icmp slt i32 %297, 67108863
  %302 = select i1 %301, i32 %297, i32 67108863
  %303 = and i32 %302, 67108863
  %304 = or i32 %303, %300
  %305 = lshr i16 %267, 4
  %306 = and i16 %305, 15
  %307 = zext i16 %306 to i32
  %308 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 20
  %309 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 24, i32 0
  %310 = load i32, i32* %309, align 4, !noalias !120
  %311 = bitcast %"class.blink::StyleColor"* %308 to i64*
  %312 = load i64, i64* %311, align 4, !noalias !120
  %313 = shl nuw nsw i32 %307, 26
  %314 = icmp slt i32 %310, 67108863
  %315 = select i1 %314, i32 %310, i32 67108863
  %316 = and i32 %315, 67108863
  %317 = or i32 %316, %313
  %318 = bitcast %"class.blink::PhysicalToLogical.1929"* %9 to i16*
  store i16 %263, i16* %318, align 4, !alias.scope !120
  %319 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 1
  %320 = bitcast %"class.blink::BorderValue"* %319 to i64*
  store i64 %274, i64* %320, align 4, !alias.scope !120
  %321 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 1, i32 1
  store i32 %279, i32* %321, align 4, !alias.scope !120
  %322 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 2
  %323 = bitcast %"class.blink::BorderValue"* %322 to i64*
  store i64 %287, i64* %323, align 4, !alias.scope !120
  %324 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 2, i32 1
  store i32 %292, i32* %324, align 4, !alias.scope !120
  %325 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 3
  %326 = bitcast %"class.blink::BorderValue"* %325 to i64*
  store i64 %299, i64* %326, align 4, !alias.scope !120
  %327 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 3, i32 1
  store i32 %304, i32* %327, align 4, !alias.scope !120
  %328 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 4
  %329 = bitcast %"class.blink::BorderValue"* %328 to i64*
  store i64 %312, i64* %329, align 4, !alias.scope !120
  %330 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %9, i64 0, i32 4, i32 1
  store i32 %317, i32* %330, align 4, !alias.scope !120
  %331 = icmp eq i16 %259, 0
  %332 = icmp eq i16 %262, 0
  %333 = select i1 %332, %"class.blink::BorderValue"* %328, %"class.blink::BorderValue"* %322
  %334 = select i1 %332, %"class.blink::BorderValue"* %319, %"class.blink::BorderValue"* %325
  %335 = select i1 %331, %"class.blink::BorderValue"* %333, %"class.blink::BorderValue"* %334
  %336 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %335, i64 0, i32 1
  %337 = bitcast %"class.blink::BorderValue"* %335 to i64*
  %338 = load i32, i32* %336, align 4
  %339 = load i64, i64* %337, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %253) #12
  %340 = bitcast %"class.blink::BorderValue"* %16 to i64*
  store i64 %339, i64* %340, align 8
  %341 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %16, i64 0, i32 1
  store i32 %338, i32* %341, align 8
  %342 = bitcast %"class.blink::Color"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %342) #12
  %343 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %242, align 8
  %344 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %343, %"class.blink::CSSProperty"* dereferenceable(24) %105) #12
  %345 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %17, i64 0, i32 0
  store i32 %344, i32* %345, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %15, %"class.blink::BorderValue"* nonnull dereferenceable(12) %16, %"class.blink::Color"* nonnull dereferenceable(4) %17, i32 6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %342) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %241) #12
  %346 = load i32, i32* %240, align 4
  %347 = icmp ugt i32 %346, 536870911
  br i1 %347, label %348, label %375

348:                                              ; preds = %237
  %349 = load i32, i32* %132, align 4
  %350 = icmp ugt i32 %349, 536870911
  br i1 %350, label %351, label %374

351:                                              ; preds = %348
  %352 = lshr i32 %349, 25
  %353 = and i32 %352, 15
  %354 = icmp eq i32 %353, 1
  br i1 %354, label %375, label %355

355:                                              ; preds = %351
  %356 = lshr i32 %346, 25
  %357 = and i32 %356, 15
  switch i32 %357, label %358 [
    i32 1, label %374
    i32 0, label %375
  ]

358:                                              ; preds = %355
  %359 = icmp eq i32 %353, 0
  br i1 %359, label %374, label %360

360:                                              ; preds = %358
  %361 = and i32 %349, 33554431
  %362 = and i32 %346, 33554431
  %363 = icmp eq i32 %361, %362
  br i1 %363, label %366, label %364

364:                                              ; preds = %360
  %365 = icmp ult i32 %361, %362
  br i1 %365, label %374, label %375

366:                                              ; preds = %360
  %367 = icmp eq i32 %353, %357
  br i1 %367, label %370, label %368

368:                                              ; preds = %366
  %369 = icmp ult i32 %353, %357
  br i1 %369, label %374, label %375

370:                                              ; preds = %366
  %371 = lshr i32 %349, 29
  %372 = lshr i32 %346, 29
  %373 = icmp ult i32 %371, %372
  br i1 %373, label %374, label %375

374:                                              ; preds = %370, %368, %364, %358, %355, %348
  br label %375

375:                                              ; preds = %237, %351, %355, %364, %368, %370, %374
  %376 = phi %"class.blink::CollapsedBorderValue"* [ %15, %374 ], [ %12, %370 ], [ %12, %364 ], [ %12, %368 ], [ %12, %237 ], [ %12, %351 ], [ %12, %355 ]
  %377 = bitcast %"class.blink::CollapsedBorderValue"* %376 to i64*
  %378 = load i64, i64* %377, align 4
  store i64 %378, i64* %11, align 8
  %379 = lshr i64 %378, 32
  %380 = trunc i64 %379 to i32
  %381 = icmp ugt i32 %380, 536870911
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #12
  br i1 %381, label %382, label %1528

382:                                              ; preds = %375, %79
  br i1 %48, label %383, label %680

383:                                              ; preds = %382
  %384 = bitcast %"class.blink::CollapsedBorderValue"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #12
  %385 = bitcast %"class.blink::BorderValue"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %385) #12
  %386 = bitcast %"class.blink::LayoutObject"** %41 to %"class.blink::LayoutTableBoxComponent"**
  %387 = load %"class.blink::LayoutTableBoxComponent"*, %"class.blink::LayoutTableBoxComponent"** %386, align 8
  %388 = getelementptr inbounds %"class.blink::LayoutTableBoxComponent", %"class.blink::LayoutTableBoxComponent"* %387, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %389 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %388, align 8
  %390 = bitcast %"class.blink::LayoutTableBoxComponent"* %387 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %391 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %390, align 8
  %392 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %391, i64 195
  %393 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %392, align 8
  %394 = call %"class.blink::LayoutTable"* %393(%"class.blink::LayoutTableBoxComponent"* %387) #12
  %395 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %396 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %395, align 8
  %397 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %397) #12
  %398 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %396, i64 0, i32 0, i32 9
  %399 = bitcast [20 x i8]* %398 to i160*
  %400 = load i160, i160* %399, align 8, !noalias !123
  %401 = lshr i160 %400, 102
  %402 = trunc i160 %401 to i16
  %403 = and i16 %402, 3
  %404 = lshr i160 %400, 107
  %405 = trunc i160 %404 to i16
  %406 = and i16 %405, 256
  %407 = or i16 %406, %403
  %408 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %389, i64 0, i32 0, i32 7, i32 0, i32 0
  %409 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %408, align 8, !noalias !123
  %410 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 27
  %411 = load i16, i16* %410, align 8, !noalias !123
  %412 = lshr i16 %411, 12
  %413 = zext i16 %412 to i32
  %414 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 22
  %415 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 26, i32 0
  %416 = load i32, i32* %415, align 4, !noalias !123
  %417 = bitcast %"class.blink::StyleColor"* %414 to i64*
  %418 = load i64, i64* %417, align 4, !noalias !123
  %419 = shl nuw nsw i32 %413, 26
  %420 = icmp slt i32 %416, 67108863
  %421 = select i1 %420, i32 %416, i32 67108863
  %422 = and i32 %421, 67108863
  %423 = or i32 %422, %419
  %424 = lshr i16 %411, 8
  %425 = and i16 %424, 15
  %426 = zext i16 %425 to i32
  %427 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 21
  %428 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 25, i32 0
  %429 = load i32, i32* %428, align 4, !noalias !123
  %430 = bitcast %"class.blink::StyleColor"* %427 to i64*
  %431 = load i64, i64* %430, align 4, !noalias !123
  %432 = shl nuw nsw i32 %426, 26
  %433 = icmp slt i32 %429, 67108863
  %434 = select i1 %433, i32 %429, i32 67108863
  %435 = and i32 %434, 67108863
  %436 = or i32 %435, %432
  %437 = and i16 %411, 15
  %438 = zext i16 %437 to i32
  %439 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 19
  %440 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 23, i32 0
  %441 = load i32, i32* %440, align 4, !noalias !123
  %442 = bitcast %"class.blink::StyleColor"* %439 to i64*
  %443 = load i64, i64* %442, align 4, !noalias !123
  %444 = shl nuw nsw i32 %438, 26
  %445 = icmp slt i32 %441, 67108863
  %446 = select i1 %445, i32 %441, i32 67108863
  %447 = and i32 %446, 67108863
  %448 = or i32 %447, %444
  %449 = lshr i16 %411, 4
  %450 = and i16 %449, 15
  %451 = zext i16 %450 to i32
  %452 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 20
  %453 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %409, i64 0, i32 24, i32 0
  %454 = load i32, i32* %453, align 4, !noalias !123
  %455 = bitcast %"class.blink::StyleColor"* %452 to i64*
  %456 = load i64, i64* %455, align 4, !noalias !123
  %457 = shl nuw nsw i32 %451, 26
  %458 = icmp slt i32 %454, 67108863
  %459 = select i1 %458, i32 %454, i32 67108863
  %460 = and i32 %459, 67108863
  %461 = or i32 %460, %457
  %462 = bitcast %"class.blink::PhysicalToLogical.1929"* %8 to i16*
  store i16 %407, i16* %462, align 4, !alias.scope !123
  %463 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 1
  %464 = bitcast %"class.blink::BorderValue"* %463 to i64*
  store i64 %418, i64* %464, align 4, !alias.scope !123
  %465 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 1, i32 1
  store i32 %423, i32* %465, align 4, !alias.scope !123
  %466 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 2
  %467 = bitcast %"class.blink::BorderValue"* %466 to i64*
  store i64 %431, i64* %467, align 4, !alias.scope !123
  %468 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 2, i32 1
  store i32 %436, i32* %468, align 4, !alias.scope !123
  %469 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 3
  %470 = bitcast %"class.blink::BorderValue"* %469 to i64*
  store i64 %443, i64* %470, align 4, !alias.scope !123
  %471 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 3, i32 1
  store i32 %448, i32* %471, align 4, !alias.scope !123
  %472 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 4
  %473 = bitcast %"class.blink::BorderValue"* %472 to i64*
  store i64 %456, i64* %473, align 4, !alias.scope !123
  %474 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %8, i64 0, i32 4, i32 1
  store i32 %461, i32* %474, align 4, !alias.scope !123
  %475 = icmp eq i16 %403, 0
  %476 = icmp eq i16 %406, 0
  %477 = select i1 %476, %"class.blink::BorderValue"* %466, %"class.blink::BorderValue"* %472
  %478 = select i1 %476, %"class.blink::BorderValue"* %469, %"class.blink::BorderValue"* %463
  %479 = select i1 %475, %"class.blink::BorderValue"* %477, %"class.blink::BorderValue"* %478
  %480 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %479, i64 0, i32 1
  %481 = bitcast %"class.blink::BorderValue"* %479 to i64*
  %482 = load i32, i32* %480, align 4
  %483 = load i64, i64* %481, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %397) #12
  %484 = bitcast %"class.blink::BorderValue"* %19 to i64*
  store i64 %483, i64* %484, align 8
  %485 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %19, i64 0, i32 1
  store i32 %482, i32* %485, align 8
  %486 = bitcast %"class.blink::Color"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %486) #12
  %487 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %488 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %487, i64 0, i32 5, i32 0
  %489 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %488, align 8
  %490 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %489, %"class.blink::CSSProperty"* dereferenceable(24) %129) #12
  %491 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %20, i64 0, i32 0
  store i32 %490, i32* %491, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %18, %"class.blink::BorderValue"* nonnull dereferenceable(12) %19, %"class.blink::Color"* nonnull dereferenceable(4) %20, i32 5) #12
  %492 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %18, i64 0, i32 1
  %493 = load i32, i32* %492, align 4
  %494 = icmp ugt i32 %493, 536870911
  br i1 %494, label %495, label %522

495:                                              ; preds = %383
  %496 = load i32, i32* %132, align 4
  %497 = icmp ugt i32 %496, 536870911
  br i1 %497, label %498, label %521

498:                                              ; preds = %495
  %499 = lshr i32 %496, 25
  %500 = and i32 %499, 15
  %501 = icmp eq i32 %500, 1
  br i1 %501, label %522, label %502

502:                                              ; preds = %498
  %503 = lshr i32 %493, 25
  %504 = and i32 %503, 15
  switch i32 %504, label %505 [
    i32 1, label %521
    i32 0, label %522
  ]

505:                                              ; preds = %502
  %506 = icmp eq i32 %500, 0
  br i1 %506, label %521, label %507

507:                                              ; preds = %505
  %508 = and i32 %496, 33554431
  %509 = and i32 %493, 33554431
  %510 = icmp eq i32 %508, %509
  br i1 %510, label %513, label %511

511:                                              ; preds = %507
  %512 = icmp ult i32 %508, %509
  br i1 %512, label %521, label %522

513:                                              ; preds = %507
  %514 = icmp eq i32 %500, %504
  br i1 %514, label %517, label %515

515:                                              ; preds = %513
  %516 = icmp ult i32 %500, %504
  br i1 %516, label %521, label %522

517:                                              ; preds = %513
  %518 = lshr i32 %496, 29
  %519 = lshr i32 %493, 29
  %520 = icmp ult i32 %518, %519
  br i1 %520, label %521, label %522

521:                                              ; preds = %517, %515, %511, %505, %502, %495
  br label %522

522:                                              ; preds = %383, %498, %502, %511, %515, %517, %521
  %523 = phi %"class.blink::CollapsedBorderValue"* [ %18, %521 ], [ %12, %517 ], [ %12, %511 ], [ %12, %515 ], [ %12, %383 ], [ %12, %498 ], [ %12, %502 ]
  %524 = bitcast %"class.blink::CollapsedBorderValue"* %523 to i64*
  %525 = load i64, i64* %524, align 4
  store i64 %525, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %486) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %385) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #12
  %526 = lshr i64 %525, 32
  %527 = trunc i64 %526 to i32
  %528 = icmp ugt i32 %527, 536870911
  br i1 %528, label %529, label %1528

529:                                              ; preds = %522
  %530 = bitcast %"class.blink::CollapsedBorderValue"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %530) #12
  %531 = bitcast %"class.blink::BorderValue"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %531) #12
  %532 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %533 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %532, i64 0, i32 7
  %534 = bitcast %"class.blink::LayoutObject"** %533 to %"class.blink::LayoutTableBoxComponent"**
  %535 = load %"class.blink::LayoutTableBoxComponent"*, %"class.blink::LayoutTableBoxComponent"** %534, align 8
  %536 = getelementptr inbounds %"class.blink::LayoutTableBoxComponent", %"class.blink::LayoutTableBoxComponent"* %535, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %537 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %536, align 8
  %538 = bitcast %"class.blink::LayoutTableBoxComponent"* %535 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %539 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %538, align 8
  %540 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %539, i64 195
  %541 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %540, align 8
  %542 = call %"class.blink::LayoutTable"* %541(%"class.blink::LayoutTableBoxComponent"* %535) #12
  %543 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %542, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %544 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %543, align 8
  %545 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %545) #12
  %546 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %544, i64 0, i32 0, i32 9
  %547 = bitcast [20 x i8]* %546 to i160*
  %548 = load i160, i160* %547, align 8, !noalias !126
  %549 = lshr i160 %548, 102
  %550 = trunc i160 %549 to i16
  %551 = and i16 %550, 3
  %552 = lshr i160 %548, 107
  %553 = trunc i160 %552 to i16
  %554 = and i16 %553, 256
  %555 = or i16 %554, %551
  %556 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %537, i64 0, i32 0, i32 7, i32 0, i32 0
  %557 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %556, align 8, !noalias !126
  %558 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 27
  %559 = load i16, i16* %558, align 8, !noalias !126
  %560 = lshr i16 %559, 12
  %561 = zext i16 %560 to i32
  %562 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 22
  %563 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 26, i32 0
  %564 = load i32, i32* %563, align 4, !noalias !126
  %565 = bitcast %"class.blink::StyleColor"* %562 to i64*
  %566 = load i64, i64* %565, align 4, !noalias !126
  %567 = shl nuw nsw i32 %561, 26
  %568 = icmp slt i32 %564, 67108863
  %569 = select i1 %568, i32 %564, i32 67108863
  %570 = and i32 %569, 67108863
  %571 = or i32 %570, %567
  %572 = lshr i16 %559, 8
  %573 = and i16 %572, 15
  %574 = zext i16 %573 to i32
  %575 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 21
  %576 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 25, i32 0
  %577 = load i32, i32* %576, align 4, !noalias !126
  %578 = bitcast %"class.blink::StyleColor"* %575 to i64*
  %579 = load i64, i64* %578, align 4, !noalias !126
  %580 = shl nuw nsw i32 %574, 26
  %581 = icmp slt i32 %577, 67108863
  %582 = select i1 %581, i32 %577, i32 67108863
  %583 = and i32 %582, 67108863
  %584 = or i32 %583, %580
  %585 = and i16 %559, 15
  %586 = zext i16 %585 to i32
  %587 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 19
  %588 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 23, i32 0
  %589 = load i32, i32* %588, align 4, !noalias !126
  %590 = bitcast %"class.blink::StyleColor"* %587 to i64*
  %591 = load i64, i64* %590, align 4, !noalias !126
  %592 = shl nuw nsw i32 %586, 26
  %593 = icmp slt i32 %589, 67108863
  %594 = select i1 %593, i32 %589, i32 67108863
  %595 = and i32 %594, 67108863
  %596 = or i32 %595, %592
  %597 = lshr i16 %559, 4
  %598 = and i16 %597, 15
  %599 = zext i16 %598 to i32
  %600 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 20
  %601 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %557, i64 0, i32 24, i32 0
  %602 = load i32, i32* %601, align 4, !noalias !126
  %603 = bitcast %"class.blink::StyleColor"* %600 to i64*
  %604 = load i64, i64* %603, align 4, !noalias !126
  %605 = shl nuw nsw i32 %599, 26
  %606 = icmp slt i32 %602, 67108863
  %607 = select i1 %606, i32 %602, i32 67108863
  %608 = and i32 %607, 67108863
  %609 = or i32 %608, %605
  %610 = bitcast %"class.blink::PhysicalToLogical.1929"* %7 to i16*
  store i16 %555, i16* %610, align 4, !alias.scope !126
  %611 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 1
  %612 = bitcast %"class.blink::BorderValue"* %611 to i64*
  store i64 %566, i64* %612, align 4, !alias.scope !126
  %613 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 1, i32 1
  store i32 %571, i32* %613, align 4, !alias.scope !126
  %614 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 2
  %615 = bitcast %"class.blink::BorderValue"* %614 to i64*
  store i64 %579, i64* %615, align 4, !alias.scope !126
  %616 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 2, i32 1
  store i32 %584, i32* %616, align 4, !alias.scope !126
  %617 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 3
  %618 = bitcast %"class.blink::BorderValue"* %617 to i64*
  store i64 %591, i64* %618, align 4, !alias.scope !126
  %619 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 3, i32 1
  store i32 %596, i32* %619, align 4, !alias.scope !126
  %620 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 4
  %621 = bitcast %"class.blink::BorderValue"* %620 to i64*
  store i64 %604, i64* %621, align 4, !alias.scope !126
  %622 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %7, i64 0, i32 4, i32 1
  store i32 %609, i32* %622, align 4, !alias.scope !126
  %623 = icmp eq i16 %551, 0
  %624 = icmp eq i16 %554, 0
  %625 = select i1 %624, %"class.blink::BorderValue"* %614, %"class.blink::BorderValue"* %620
  %626 = select i1 %624, %"class.blink::BorderValue"* %617, %"class.blink::BorderValue"* %611
  %627 = select i1 %623, %"class.blink::BorderValue"* %625, %"class.blink::BorderValue"* %626
  %628 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %627, i64 0, i32 1
  %629 = bitcast %"class.blink::BorderValue"* %627 to i64*
  %630 = load i32, i32* %628, align 4
  %631 = load i64, i64* %629, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %545) #12
  %632 = bitcast %"class.blink::BorderValue"* %22 to i64*
  store i64 %631, i64* %632, align 8
  %633 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %22, i64 0, i32 1
  store i32 %630, i32* %633, align 8
  %634 = bitcast %"class.blink::Color"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %634) #12
  %635 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %636 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %635, i64 0, i32 7
  %637 = bitcast %"class.blink::LayoutObject"** %636 to %"class.blink::LayoutTableSection"**
  %638 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %637, align 8
  %639 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %638, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %640 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %639, align 8
  %641 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %640, %"class.blink::CSSProperty"* dereferenceable(24) %129) #12
  %642 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %23, i64 0, i32 0
  store i32 %641, i32* %642, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %21, %"class.blink::BorderValue"* nonnull dereferenceable(12) %22, %"class.blink::Color"* nonnull dereferenceable(4) %23, i32 4) #12
  %643 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %21, i64 0, i32 1
  %644 = load i32, i32* %643, align 4
  %645 = icmp ugt i32 %644, 536870911
  br i1 %645, label %646, label %673

646:                                              ; preds = %529
  %647 = load i32, i32* %132, align 4
  %648 = icmp ugt i32 %647, 536870911
  br i1 %648, label %649, label %672

649:                                              ; preds = %646
  %650 = lshr i32 %647, 25
  %651 = and i32 %650, 15
  %652 = icmp eq i32 %651, 1
  br i1 %652, label %673, label %653

653:                                              ; preds = %649
  %654 = lshr i32 %644, 25
  %655 = and i32 %654, 15
  switch i32 %655, label %656 [
    i32 1, label %672
    i32 0, label %673
  ]

656:                                              ; preds = %653
  %657 = icmp eq i32 %651, 0
  br i1 %657, label %672, label %658

658:                                              ; preds = %656
  %659 = and i32 %647, 33554431
  %660 = and i32 %644, 33554431
  %661 = icmp eq i32 %659, %660
  br i1 %661, label %664, label %662

662:                                              ; preds = %658
  %663 = icmp ult i32 %659, %660
  br i1 %663, label %672, label %673

664:                                              ; preds = %658
  %665 = icmp eq i32 %651, %655
  br i1 %665, label %668, label %666

666:                                              ; preds = %664
  %667 = icmp ult i32 %651, %655
  br i1 %667, label %672, label %673

668:                                              ; preds = %664
  %669 = lshr i32 %647, 29
  %670 = lshr i32 %644, 29
  %671 = icmp ult i32 %669, %670
  br i1 %671, label %672, label %673

672:                                              ; preds = %668, %666, %662, %656, %653, %646
  br label %673

673:                                              ; preds = %529, %649, %653, %662, %666, %668, %672
  %674 = phi %"class.blink::CollapsedBorderValue"* [ %21, %672 ], [ %12, %668 ], [ %12, %662 ], [ %12, %666 ], [ %12, %529 ], [ %12, %649 ], [ %12, %653 ]
  %675 = bitcast %"class.blink::CollapsedBorderValue"* %674 to i64*
  %676 = load i64, i64* %675, align 4
  store i64 %676, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %634) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %531) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %530) #12
  %677 = lshr i64 %676, 32
  %678 = trunc i64 %677 to i32
  %679 = icmp ugt i32 %678, 536870911
  br i1 %679, label %680, label %1528

680:                                              ; preds = %673, %382
  %681 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %681) #12
  %682 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 0
  %683 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 1
  %684 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 2
  %685 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %24, i64 0, i32 3
  %686 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %687 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %687, i8 -86, i64 24, i1 false)
  %688 = load i32, i32* %686, align 8
  %689 = and i32 %688, 33554431
  %690 = and i32 %688, 67108864
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %731, label %692

692:                                              ; preds = %680
  %693 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %694 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %693 to i96*
  %695 = load i96, i96* %694, align 4
  %696 = and i96 %695, 16777216
  %697 = icmp eq i96 %696, 0
  br i1 %697, label %698, label %731

698:                                              ; preds = %692
  %699 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %700 = load %"class.blink::Node"*, %"class.blink::Node"** %699, align 8
  %701 = icmp eq %"class.blink::Node"* %700, null
  br i1 %701, label %731, label %702

702:                                              ; preds = %698
  %703 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %700, i64 0, i32 1
  %704 = load i32, i32* %703, align 8
  %705 = and i32 %704, 48
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %731

707:                                              ; preds = %702
  %708 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %709 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %708, i64 0, i32 0, i32 0, i32 0
  %710 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %709, align 8
  %711 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %700, i64 1, i32 2
  %712 = bitcast %"class.blink::Member.318"* %711 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %713 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %712, align 8
  %714 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %713, i64 0, i32 3, i32 0, i32 0, i32 0
  %715 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %714, align 8
  %716 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %710, i64 0, i32 3, i32 0, i32 0, i32 0
  %717 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %716, align 8
  %718 = icmp eq %"class.WTF::StringImpl"* %715, %717
  br i1 %718, label %726, label %719

719:                                              ; preds = %707
  %720 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %721 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %720, i64 0, i32 0, i32 0, i32 0
  %722 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %721, align 8
  %723 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %722, i64 0, i32 3, i32 0, i32 0, i32 0
  %724 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %723, align 8
  %725 = icmp eq %"class.WTF::StringImpl"* %715, %724
  br i1 %725, label %726, label %731

726:                                              ; preds = %719, %707
  %727 = bitcast %"class.blink::Node"* %700 to %"class.blink::HTMLTableCellElement"*
  %728 = call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %727) #12
  %729 = icmp ult i32 %728, 33554430
  %730 = select i1 %729, i32 %728, i32 33554430
  br label %731

731:                                              ; preds = %680, %692, %698, %702, %719, %726
  %732 = phi i32 [ 1, %680 ], [ %730, %726 ], [ 1, %719 ], [ 1, %698 ], [ 1, %702 ], [ 1, %692 ]
  %733 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %47, i64 0, i32 10
  %734 = load i16, i16* %733, align 8, !noalias !129
  %735 = and i16 %734, 64
  %736 = icmp eq i16 %735, 0
  br i1 %736, label %737, label %738

737:                                              ; preds = %731
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %681, i8 0, i64 24, i1 false) #12, !alias.scope !129
  br label %892

738:                                              ; preds = %731
  %739 = add nsw i32 %689, -1
  %740 = add nsw i32 %739, %732
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %24, %"class.blink::LayoutTable"* %47, i32 %740) #12
  %741 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %683, align 8
  %742 = load i8, i8* %685, align 1
  %743 = icmp eq %"class.blink::LayoutTableCol"* %741, null
  %744 = icmp eq i8 %742, 0
  %745 = or i1 %743, %744
  br i1 %745, label %892, label %746

746:                                              ; preds = %738
  %747 = bitcast %"class.blink::LayoutTableCol"* %741 to %"class.blink::LayoutTableBoxComponent"*
  %748 = bitcast %"class.blink::CollapsedBorderValue"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %748) #12
  %749 = bitcast %"class.blink::BorderValue"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %749) #12
  %750 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %741, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %751 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %750, align 8
  %752 = bitcast %"class.blink::LayoutTableCol"* %741 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %753 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %752, align 8
  %754 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %753, i64 195
  %755 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %754, align 8
  %756 = call %"class.blink::LayoutTable"* %755(%"class.blink::LayoutTableBoxComponent"* %747) #12
  %757 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %756, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %758 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %757, align 8
  %759 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %759) #12
  %760 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %758, i64 0, i32 0, i32 9
  %761 = bitcast [20 x i8]* %760 to i160*
  %762 = load i160, i160* %761, align 8, !noalias !132
  %763 = lshr i160 %762, 102
  %764 = trunc i160 %763 to i16
  %765 = and i16 %764, 3
  %766 = lshr i160 %762, 107
  %767 = trunc i160 %766 to i16
  %768 = and i16 %767, 256
  %769 = or i16 %768, %765
  %770 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %751, i64 0, i32 0, i32 7, i32 0, i32 0
  %771 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %770, align 8, !noalias !132
  %772 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 27
  %773 = load i16, i16* %772, align 8, !noalias !132
  %774 = lshr i16 %773, 12
  %775 = zext i16 %774 to i32
  %776 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 22
  %777 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 26, i32 0
  %778 = load i32, i32* %777, align 4, !noalias !132
  %779 = bitcast %"class.blink::StyleColor"* %776 to i64*
  %780 = load i64, i64* %779, align 4, !noalias !132
  %781 = shl nuw nsw i32 %775, 26
  %782 = icmp slt i32 %778, 67108863
  %783 = select i1 %782, i32 %778, i32 67108863
  %784 = and i32 %783, 67108863
  %785 = or i32 %784, %781
  %786 = lshr i16 %773, 8
  %787 = and i16 %786, 15
  %788 = zext i16 %787 to i32
  %789 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 21
  %790 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 25, i32 0
  %791 = load i32, i32* %790, align 4, !noalias !132
  %792 = bitcast %"class.blink::StyleColor"* %789 to i64*
  %793 = load i64, i64* %792, align 4, !noalias !132
  %794 = shl nuw nsw i32 %788, 26
  %795 = icmp slt i32 %791, 67108863
  %796 = select i1 %795, i32 %791, i32 67108863
  %797 = and i32 %796, 67108863
  %798 = or i32 %797, %794
  %799 = and i16 %773, 15
  %800 = zext i16 %799 to i32
  %801 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 19
  %802 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 23, i32 0
  %803 = load i32, i32* %802, align 4, !noalias !132
  %804 = bitcast %"class.blink::StyleColor"* %801 to i64*
  %805 = load i64, i64* %804, align 4, !noalias !132
  %806 = shl nuw nsw i32 %800, 26
  %807 = icmp slt i32 %803, 67108863
  %808 = select i1 %807, i32 %803, i32 67108863
  %809 = and i32 %808, 67108863
  %810 = or i32 %809, %806
  %811 = lshr i16 %773, 4
  %812 = and i16 %811, 15
  %813 = zext i16 %812 to i32
  %814 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 20
  %815 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %771, i64 0, i32 24, i32 0
  %816 = load i32, i32* %815, align 4, !noalias !132
  %817 = bitcast %"class.blink::StyleColor"* %814 to i64*
  %818 = load i64, i64* %817, align 4, !noalias !132
  %819 = shl nuw nsw i32 %813, 26
  %820 = icmp slt i32 %816, 67108863
  %821 = select i1 %820, i32 %816, i32 67108863
  %822 = and i32 %821, 67108863
  %823 = or i32 %822, %819
  %824 = bitcast %"class.blink::PhysicalToLogical.1929"* %6 to i16*
  store i16 %769, i16* %824, align 4, !alias.scope !132
  %825 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 1
  %826 = bitcast %"class.blink::BorderValue"* %825 to i64*
  store i64 %780, i64* %826, align 4, !alias.scope !132
  %827 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 1, i32 1
  store i32 %785, i32* %827, align 4, !alias.scope !132
  %828 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 2
  %829 = bitcast %"class.blink::BorderValue"* %828 to i64*
  store i64 %793, i64* %829, align 4, !alias.scope !132
  %830 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 2, i32 1
  store i32 %798, i32* %830, align 4, !alias.scope !132
  %831 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 3
  %832 = bitcast %"class.blink::BorderValue"* %831 to i64*
  store i64 %805, i64* %832, align 4, !alias.scope !132
  %833 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 3, i32 1
  store i32 %810, i32* %833, align 4, !alias.scope !132
  %834 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 4
  %835 = bitcast %"class.blink::BorderValue"* %834 to i64*
  store i64 %818, i64* %835, align 4, !alias.scope !132
  %836 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %6, i64 0, i32 4, i32 1
  store i32 %823, i32* %836, align 4, !alias.scope !132
  %837 = icmp eq i16 %765, 0
  %838 = icmp eq i16 %768, 0
  %839 = select i1 %838, %"class.blink::BorderValue"* %828, %"class.blink::BorderValue"* %834
  %840 = select i1 %838, %"class.blink::BorderValue"* %831, %"class.blink::BorderValue"* %825
  %841 = select i1 %837, %"class.blink::BorderValue"* %839, %"class.blink::BorderValue"* %840
  %842 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %841, i64 0, i32 1
  %843 = bitcast %"class.blink::BorderValue"* %841 to i64*
  %844 = load i32, i32* %842, align 4
  %845 = load i64, i64* %843, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %759) #12
  %846 = bitcast %"class.blink::BorderValue"* %26 to i64*
  store i64 %845, i64* %846, align 8
  %847 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %26, i64 0, i32 1
  store i32 %844, i32* %847, align 8
  %848 = bitcast %"class.blink::Color"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %848) #12
  %849 = bitcast %"class.blink::LayoutTableCol"** %683 to %"class.blink::LayoutObject"**
  %850 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %849, align 8
  %851 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %850, i64 0, i32 5, i32 0
  %852 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %851, align 8
  %853 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %852, %"class.blink::CSSProperty"* dereferenceable(24) %129) #12
  %854 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %27, i64 0, i32 0
  store i32 %853, i32* %854, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %25, %"class.blink::BorderValue"* nonnull dereferenceable(12) %26, %"class.blink::Color"* nonnull dereferenceable(4) %27, i32 2) #12
  %855 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %25, i64 0, i32 1
  %856 = load i32, i32* %855, align 4
  %857 = icmp ugt i32 %856, 536870911
  br i1 %857, label %858, label %885

858:                                              ; preds = %746
  %859 = load i32, i32* %132, align 4
  %860 = icmp ugt i32 %859, 536870911
  br i1 %860, label %861, label %884

861:                                              ; preds = %858
  %862 = lshr i32 %859, 25
  %863 = and i32 %862, 15
  %864 = icmp eq i32 %863, 1
  br i1 %864, label %885, label %865

865:                                              ; preds = %861
  %866 = lshr i32 %856, 25
  %867 = and i32 %866, 15
  switch i32 %867, label %868 [
    i32 1, label %884
    i32 0, label %885
  ]

868:                                              ; preds = %865
  %869 = icmp eq i32 %863, 0
  br i1 %869, label %884, label %870

870:                                              ; preds = %868
  %871 = and i32 %859, 33554431
  %872 = and i32 %856, 33554431
  %873 = icmp eq i32 %871, %872
  br i1 %873, label %876, label %874

874:                                              ; preds = %870
  %875 = icmp ult i32 %871, %872
  br i1 %875, label %884, label %885

876:                                              ; preds = %870
  %877 = icmp eq i32 %863, %867
  br i1 %877, label %880, label %878

878:                                              ; preds = %876
  %879 = icmp ult i32 %863, %867
  br i1 %879, label %884, label %885

880:                                              ; preds = %876
  %881 = lshr i32 %859, 29
  %882 = lshr i32 %856, 29
  %883 = icmp ult i32 %881, %882
  br i1 %883, label %884, label %885

884:                                              ; preds = %880, %878, %874, %868, %865, %858
  br label %885

885:                                              ; preds = %746, %861, %865, %874, %878, %880, %884
  %886 = phi %"class.blink::CollapsedBorderValue"* [ %25, %884 ], [ %12, %880 ], [ %12, %874 ], [ %12, %878 ], [ %12, %746 ], [ %12, %861 ], [ %12, %865 ]
  %887 = bitcast %"class.blink::CollapsedBorderValue"* %886 to i64*
  %888 = load i64, i64* %887, align 4
  store i64 %888, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %848) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %749) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %748) #12
  %889 = lshr i64 %888, 32
  %890 = trunc i64 %889 to i32
  %891 = icmp ugt i32 %890, 536870911
  br i1 %891, label %892, label %1526

892:                                              ; preds = %737, %738, %885
  %893 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %682, align 8
  %894 = icmp eq %"class.blink::LayoutTableCol"* %893, null
  br i1 %894, label %1041, label %895

895:                                              ; preds = %892
  %896 = bitcast %"class.blink::LayoutTableCol"* %893 to %"class.blink::LayoutTableBoxComponent"*
  %897 = bitcast %"class.blink::CollapsedBorderValue"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %897) #12
  %898 = bitcast %"class.blink::BorderValue"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %898) #12
  %899 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %893, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %900 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %899, align 8
  %901 = bitcast %"class.blink::LayoutTableCol"* %893 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %902 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %901, align 8
  %903 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %902, i64 195
  %904 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %903, align 8
  %905 = call %"class.blink::LayoutTable"* %904(%"class.blink::LayoutTableBoxComponent"* nonnull %896) #12
  %906 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %905, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %907 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %906, align 8
  %908 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %908) #12
  %909 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %907, i64 0, i32 0, i32 9
  %910 = bitcast [20 x i8]* %909 to i160*
  %911 = load i160, i160* %910, align 8, !noalias !135
  %912 = lshr i160 %911, 102
  %913 = trunc i160 %912 to i16
  %914 = and i16 %913, 3
  %915 = lshr i160 %911, 107
  %916 = trunc i160 %915 to i16
  %917 = and i16 %916, 256
  %918 = or i16 %917, %914
  %919 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %900, i64 0, i32 0, i32 7, i32 0, i32 0
  %920 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %919, align 8, !noalias !135
  %921 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 27
  %922 = load i16, i16* %921, align 8, !noalias !135
  %923 = lshr i16 %922, 12
  %924 = zext i16 %923 to i32
  %925 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 22
  %926 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 26, i32 0
  %927 = load i32, i32* %926, align 4, !noalias !135
  %928 = bitcast %"class.blink::StyleColor"* %925 to i64*
  %929 = load i64, i64* %928, align 4, !noalias !135
  %930 = shl nuw nsw i32 %924, 26
  %931 = icmp slt i32 %927, 67108863
  %932 = select i1 %931, i32 %927, i32 67108863
  %933 = and i32 %932, 67108863
  %934 = or i32 %933, %930
  %935 = lshr i16 %922, 8
  %936 = and i16 %935, 15
  %937 = zext i16 %936 to i32
  %938 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 21
  %939 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 25, i32 0
  %940 = load i32, i32* %939, align 4, !noalias !135
  %941 = bitcast %"class.blink::StyleColor"* %938 to i64*
  %942 = load i64, i64* %941, align 4, !noalias !135
  %943 = shl nuw nsw i32 %937, 26
  %944 = icmp slt i32 %940, 67108863
  %945 = select i1 %944, i32 %940, i32 67108863
  %946 = and i32 %945, 67108863
  %947 = or i32 %946, %943
  %948 = and i16 %922, 15
  %949 = zext i16 %948 to i32
  %950 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 19
  %951 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 23, i32 0
  %952 = load i32, i32* %951, align 4, !noalias !135
  %953 = bitcast %"class.blink::StyleColor"* %950 to i64*
  %954 = load i64, i64* %953, align 4, !noalias !135
  %955 = shl nuw nsw i32 %949, 26
  %956 = icmp slt i32 %952, 67108863
  %957 = select i1 %956, i32 %952, i32 67108863
  %958 = and i32 %957, 67108863
  %959 = or i32 %958, %955
  %960 = lshr i16 %922, 4
  %961 = and i16 %960, 15
  %962 = zext i16 %961 to i32
  %963 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 20
  %964 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %920, i64 0, i32 24, i32 0
  %965 = load i32, i32* %964, align 4, !noalias !135
  %966 = bitcast %"class.blink::StyleColor"* %963 to i64*
  %967 = load i64, i64* %966, align 4, !noalias !135
  %968 = shl nuw nsw i32 %962, 26
  %969 = icmp slt i32 %965, 67108863
  %970 = select i1 %969, i32 %965, i32 67108863
  %971 = and i32 %970, 67108863
  %972 = or i32 %971, %968
  %973 = bitcast %"class.blink::PhysicalToLogical.1929"* %5 to i16*
  store i16 %918, i16* %973, align 4, !alias.scope !135
  %974 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 1
  %975 = bitcast %"class.blink::BorderValue"* %974 to i64*
  store i64 %929, i64* %975, align 4, !alias.scope !135
  %976 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 1, i32 1
  store i32 %934, i32* %976, align 4, !alias.scope !135
  %977 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 2
  %978 = bitcast %"class.blink::BorderValue"* %977 to i64*
  store i64 %942, i64* %978, align 4, !alias.scope !135
  %979 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 2, i32 1
  store i32 %947, i32* %979, align 4, !alias.scope !135
  %980 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 3
  %981 = bitcast %"class.blink::BorderValue"* %980 to i64*
  store i64 %954, i64* %981, align 4, !alias.scope !135
  %982 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 3, i32 1
  store i32 %959, i32* %982, align 4, !alias.scope !135
  %983 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 4
  %984 = bitcast %"class.blink::BorderValue"* %983 to i64*
  store i64 %967, i64* %984, align 4, !alias.scope !135
  %985 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %5, i64 0, i32 4, i32 1
  store i32 %972, i32* %985, align 4, !alias.scope !135
  %986 = icmp eq i16 %914, 0
  %987 = icmp eq i16 %917, 0
  %988 = select i1 %987, %"class.blink::BorderValue"* %977, %"class.blink::BorderValue"* %983
  %989 = select i1 %987, %"class.blink::BorderValue"* %980, %"class.blink::BorderValue"* %974
  %990 = select i1 %986, %"class.blink::BorderValue"* %988, %"class.blink::BorderValue"* %989
  %991 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %990, i64 0, i32 1
  %992 = bitcast %"class.blink::BorderValue"* %990 to i64*
  %993 = load i32, i32* %991, align 4
  %994 = load i64, i64* %992, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %908) #12
  %995 = bitcast %"class.blink::BorderValue"* %29 to i64*
  store i64 %994, i64* %995, align 8
  %996 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %29, i64 0, i32 1
  store i32 %993, i32* %996, align 8
  %997 = bitcast %"class.blink::Color"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %997) #12
  %998 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to %"class.blink::LayoutObject"**
  %999 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %998, align 8
  %1000 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %999, i64 0, i32 5, i32 0
  %1001 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1000, align 8
  %1002 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1001, %"class.blink::CSSProperty"* dereferenceable(24) %129) #12
  %1003 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %30, i64 0, i32 0
  store i32 %1002, i32* %1003, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %28, %"class.blink::BorderValue"* nonnull dereferenceable(12) %29, %"class.blink::Color"* nonnull dereferenceable(4) %30, i32 3) #12
  %1004 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %28, i64 0, i32 1
  %1005 = load i32, i32* %1004, align 4
  %1006 = icmp ugt i32 %1005, 536870911
  br i1 %1006, label %1007, label %1034

1007:                                             ; preds = %895
  %1008 = load i32, i32* %132, align 4
  %1009 = icmp ugt i32 %1008, 536870911
  br i1 %1009, label %1010, label %1033

1010:                                             ; preds = %1007
  %1011 = lshr i32 %1008, 25
  %1012 = and i32 %1011, 15
  %1013 = icmp eq i32 %1012, 1
  br i1 %1013, label %1034, label %1014

1014:                                             ; preds = %1010
  %1015 = lshr i32 %1005, 25
  %1016 = and i32 %1015, 15
  switch i32 %1016, label %1017 [
    i32 1, label %1033
    i32 0, label %1034
  ]

1017:                                             ; preds = %1014
  %1018 = icmp eq i32 %1012, 0
  br i1 %1018, label %1033, label %1019

1019:                                             ; preds = %1017
  %1020 = and i32 %1008, 33554431
  %1021 = and i32 %1005, 33554431
  %1022 = icmp eq i32 %1020, %1021
  br i1 %1022, label %1025, label %1023

1023:                                             ; preds = %1019
  %1024 = icmp ult i32 %1020, %1021
  br i1 %1024, label %1033, label %1034

1025:                                             ; preds = %1019
  %1026 = icmp eq i32 %1012, %1016
  br i1 %1026, label %1029, label %1027

1027:                                             ; preds = %1025
  %1028 = icmp ult i32 %1012, %1016
  br i1 %1028, label %1033, label %1034

1029:                                             ; preds = %1025
  %1030 = lshr i32 %1008, 29
  %1031 = lshr i32 %1005, 29
  %1032 = icmp ult i32 %1030, %1031
  br i1 %1032, label %1033, label %1034

1033:                                             ; preds = %1029, %1027, %1023, %1017, %1014, %1007
  br label %1034

1034:                                             ; preds = %895, %1010, %1014, %1023, %1027, %1029, %1033
  %1035 = phi %"class.blink::CollapsedBorderValue"* [ %28, %1033 ], [ %12, %1029 ], [ %12, %1023 ], [ %12, %1027 ], [ %12, %895 ], [ %12, %1010 ], [ %12, %1014 ]
  %1036 = bitcast %"class.blink::CollapsedBorderValue"* %1035 to i64*
  %1037 = load i64, i64* %1036, align 4
  store i64 %1037, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %997) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %898) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %897) #12
  %1038 = lshr i64 %1037, 32
  %1039 = trunc i64 %1038 to i32
  %1040 = icmp ugt i32 %1039, 536870911
  br i1 %1040, label %1041, label %1526

1041:                                             ; preds = %892, %1034
  br i1 %48, label %1395, label %1042

1042:                                             ; preds = %1041
  %1043 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1043) #12
  %1044 = load i32, i32* %686, align 8
  %1045 = and i32 %1044, 33554431
  %1046 = and i32 %1044, 67108864
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1087, label %1048

1048:                                             ; preds = %1042
  %1049 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %1050 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1049 to i96*
  %1051 = load i96, i96* %1050, align 4
  %1052 = and i96 %1051, 16777216
  %1053 = icmp eq i96 %1052, 0
  br i1 %1053, label %1054, label %1087

1054:                                             ; preds = %1048
  %1055 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %1056 = load %"class.blink::Node"*, %"class.blink::Node"** %1055, align 8
  %1057 = icmp eq %"class.blink::Node"* %1056, null
  br i1 %1057, label %1087, label %1058

1058:                                             ; preds = %1054
  %1059 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1056, i64 0, i32 1
  %1060 = load i32, i32* %1059, align 8
  %1061 = and i32 %1060, 48
  %1062 = icmp eq i32 %1061, 0
  br i1 %1062, label %1063, label %1087

1063:                                             ; preds = %1058
  %1064 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %1065 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1064, i64 0, i32 0, i32 0, i32 0
  %1066 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1065, align 8
  %1067 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1056, i64 1, i32 2
  %1068 = bitcast %"class.blink::Member.318"* %1067 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1069 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1068, align 8
  %1070 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1069, i64 0, i32 3, i32 0, i32 0, i32 0
  %1071 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1070, align 8
  %1072 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1066, i64 0, i32 3, i32 0, i32 0, i32 0
  %1073 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1072, align 8
  %1074 = icmp eq %"class.WTF::StringImpl"* %1071, %1073
  br i1 %1074, label %1082, label %1075

1075:                                             ; preds = %1063
  %1076 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %1077 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1076, i64 0, i32 0, i32 0, i32 0
  %1078 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1077, align 8
  %1079 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1078, i64 0, i32 3, i32 0, i32 0, i32 0
  %1080 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1081 = icmp eq %"class.WTF::StringImpl"* %1071, %1080
  br i1 %1081, label %1082, label %1087

1082:                                             ; preds = %1075, %1063
  %1083 = bitcast %"class.blink::Node"* %1056 to %"class.blink::HTMLTableCellElement"*
  %1084 = call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %1083) #12
  %1085 = icmp ult i32 %1084, 33554430
  %1086 = select i1 %1085, i32 %1084, i32 33554430
  br label %1087

1087:                                             ; preds = %1042, %1048, %1054, %1058, %1075, %1082
  %1088 = phi i32 [ 1, %1042 ], [ %1086, %1082 ], [ 1, %1075 ], [ 1, %1054 ], [ 1, %1058 ], [ 1, %1048 ]
  %1089 = load i16, i16* %733, align 8, !noalias !138
  %1090 = and i16 %1089, 64
  %1091 = icmp eq i16 %1090, 0
  br i1 %1091, label %1092, label %1093

1092:                                             ; preds = %1087
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1043, i8 0, i64 24, i1 false) #12, !alias.scope !138
  br label %1095

1093:                                             ; preds = %1087
  %1094 = add nuw nsw i32 %1088, %1045
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %31, %"class.blink::LayoutTable"* %47, i32 %1094) #12
  br label %1095

1095:                                             ; preds = %1092, %1093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %681, i8* nonnull align 8 %1043, i64 18, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1043) #12
  %1096 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %683, align 8
  %1097 = icmp eq %"class.blink::LayoutTableCol"* %1096, null
  %1098 = load i8, i8* %684, align 8
  %1099 = icmp eq i8 %1098, 0
  %1100 = or i1 %1097, %1099
  br i1 %1100, label %1247, label %1101

1101:                                             ; preds = %1095
  %1102 = bitcast %"class.blink::LayoutTableCol"* %1096 to %"class.blink::LayoutTableBoxComponent"*
  %1103 = bitcast %"class.blink::CollapsedBorderValue"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1103) #12
  %1104 = bitcast %"class.blink::BorderValue"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1104) #12
  %1105 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %1096, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1105, align 8
  %1107 = bitcast %"class.blink::LayoutTableCol"* %1096 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %1108 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %1107, align 8
  %1109 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1108, i64 195
  %1110 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1109, align 8
  %1111 = call %"class.blink::LayoutTable"* %1110(%"class.blink::LayoutTableBoxComponent"* %1102) #12
  %1112 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %1111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1112, align 8
  %1114 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %1114) #12
  %1115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1113, i64 0, i32 0, i32 9
  %1116 = bitcast [20 x i8]* %1115 to i160*
  %1117 = load i160, i160* %1116, align 8, !noalias !141
  %1118 = lshr i160 %1117, 102
  %1119 = trunc i160 %1118 to i16
  %1120 = and i16 %1119, 3
  %1121 = lshr i160 %1117, 107
  %1122 = trunc i160 %1121 to i16
  %1123 = and i16 %1122, 256
  %1124 = or i16 %1123, %1120
  %1125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1106, i64 0, i32 0, i32 7, i32 0, i32 0
  %1126 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %1125, align 8, !noalias !141
  %1127 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 27
  %1128 = load i16, i16* %1127, align 8, !noalias !141
  %1129 = lshr i16 %1128, 12
  %1130 = zext i16 %1129 to i32
  %1131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 22
  %1132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 26, i32 0
  %1133 = load i32, i32* %1132, align 4, !noalias !141
  %1134 = bitcast %"class.blink::StyleColor"* %1131 to i64*
  %1135 = load i64, i64* %1134, align 4, !noalias !141
  %1136 = shl nuw nsw i32 %1130, 26
  %1137 = icmp slt i32 %1133, 67108863
  %1138 = select i1 %1137, i32 %1133, i32 67108863
  %1139 = and i32 %1138, 67108863
  %1140 = or i32 %1139, %1136
  %1141 = lshr i16 %1128, 8
  %1142 = and i16 %1141, 15
  %1143 = zext i16 %1142 to i32
  %1144 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 21
  %1145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 25, i32 0
  %1146 = load i32, i32* %1145, align 4, !noalias !141
  %1147 = bitcast %"class.blink::StyleColor"* %1144 to i64*
  %1148 = load i64, i64* %1147, align 4, !noalias !141
  %1149 = shl nuw nsw i32 %1143, 26
  %1150 = icmp slt i32 %1146, 67108863
  %1151 = select i1 %1150, i32 %1146, i32 67108863
  %1152 = and i32 %1151, 67108863
  %1153 = or i32 %1152, %1149
  %1154 = and i16 %1128, 15
  %1155 = zext i16 %1154 to i32
  %1156 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 19
  %1157 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 23, i32 0
  %1158 = load i32, i32* %1157, align 4, !noalias !141
  %1159 = bitcast %"class.blink::StyleColor"* %1156 to i64*
  %1160 = load i64, i64* %1159, align 4, !noalias !141
  %1161 = shl nuw nsw i32 %1155, 26
  %1162 = icmp slt i32 %1158, 67108863
  %1163 = select i1 %1162, i32 %1158, i32 67108863
  %1164 = and i32 %1163, 67108863
  %1165 = or i32 %1164, %1161
  %1166 = lshr i16 %1128, 4
  %1167 = and i16 %1166, 15
  %1168 = zext i16 %1167 to i32
  %1169 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 20
  %1170 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1126, i64 0, i32 24, i32 0
  %1171 = load i32, i32* %1170, align 4, !noalias !141
  %1172 = bitcast %"class.blink::StyleColor"* %1169 to i64*
  %1173 = load i64, i64* %1172, align 4, !noalias !141
  %1174 = shl nuw nsw i32 %1168, 26
  %1175 = icmp slt i32 %1171, 67108863
  %1176 = select i1 %1175, i32 %1171, i32 67108863
  %1177 = and i32 %1176, 67108863
  %1178 = or i32 %1177, %1174
  %1179 = bitcast %"class.blink::PhysicalToLogical.1929"* %4 to i16*
  store i16 %1124, i16* %1179, align 4, !alias.scope !141
  %1180 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 1
  %1181 = bitcast %"class.blink::BorderValue"* %1180 to i64*
  store i64 %1135, i64* %1181, align 4, !alias.scope !141
  %1182 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 1, i32 1
  store i32 %1140, i32* %1182, align 4, !alias.scope !141
  %1183 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 2
  %1184 = bitcast %"class.blink::BorderValue"* %1183 to i64*
  store i64 %1148, i64* %1184, align 4, !alias.scope !141
  %1185 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 2, i32 1
  store i32 %1153, i32* %1185, align 4, !alias.scope !141
  %1186 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 3
  %1187 = bitcast %"class.blink::BorderValue"* %1186 to i64*
  store i64 %1160, i64* %1187, align 4, !alias.scope !141
  %1188 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 3, i32 1
  store i32 %1165, i32* %1188, align 4, !alias.scope !141
  %1189 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 4
  %1190 = bitcast %"class.blink::BorderValue"* %1189 to i64*
  store i64 %1173, i64* %1190, align 4, !alias.scope !141
  %1191 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %4, i64 0, i32 4, i32 1
  store i32 %1178, i32* %1191, align 4, !alias.scope !141
  %1192 = icmp eq i16 %1120, 0
  %1193 = icmp eq i16 %1123, 0
  %1194 = select i1 %1193, %"class.blink::BorderValue"* %1189, %"class.blink::BorderValue"* %1183
  %1195 = select i1 %1193, %"class.blink::BorderValue"* %1180, %"class.blink::BorderValue"* %1186
  %1196 = select i1 %1192, %"class.blink::BorderValue"* %1194, %"class.blink::BorderValue"* %1195
  %1197 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %1196, i64 0, i32 1
  %1198 = bitcast %"class.blink::BorderValue"* %1196 to i64*
  %1199 = load i32, i32* %1197, align 4
  %1200 = load i64, i64* %1198, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %1114) #12
  %1201 = bitcast %"class.blink::BorderValue"* %33 to i64*
  store i64 %1200, i64* %1201, align 8
  %1202 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %33, i64 0, i32 1
  store i32 %1199, i32* %1202, align 8
  %1203 = bitcast %"class.blink::Color"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1203) #12
  %1204 = bitcast %"class.blink::LayoutTableCol"** %683 to %"class.blink::LayoutObject"**
  %1205 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1204, align 8
  %1206 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1205, i64 0, i32 5, i32 0
  %1207 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1206, align 8
  %1208 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1207, %"class.blink::CSSProperty"* dereferenceable(24) %105) #12
  %1209 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %34, i64 0, i32 0
  store i32 %1208, i32* %1209, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %32, %"class.blink::BorderValue"* nonnull dereferenceable(12) %33, %"class.blink::Color"* nonnull dereferenceable(4) %34, i32 2) #12
  %1210 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %32, i64 0, i32 1
  %1211 = load i32, i32* %1210, align 4
  %1212 = icmp ugt i32 %1211, 536870911
  br i1 %1212, label %1213, label %1240

1213:                                             ; preds = %1101
  %1214 = load i32, i32* %132, align 4
  %1215 = icmp ugt i32 %1214, 536870911
  br i1 %1215, label %1216, label %1239

1216:                                             ; preds = %1213
  %1217 = lshr i32 %1214, 25
  %1218 = and i32 %1217, 15
  %1219 = icmp eq i32 %1218, 1
  br i1 %1219, label %1240, label %1220

1220:                                             ; preds = %1216
  %1221 = lshr i32 %1211, 25
  %1222 = and i32 %1221, 15
  switch i32 %1222, label %1223 [
    i32 1, label %1239
    i32 0, label %1240
  ]

1223:                                             ; preds = %1220
  %1224 = icmp eq i32 %1218, 0
  br i1 %1224, label %1239, label %1225

1225:                                             ; preds = %1223
  %1226 = and i32 %1214, 33554431
  %1227 = and i32 %1211, 33554431
  %1228 = icmp eq i32 %1226, %1227
  br i1 %1228, label %1231, label %1229

1229:                                             ; preds = %1225
  %1230 = icmp ult i32 %1226, %1227
  br i1 %1230, label %1239, label %1240

1231:                                             ; preds = %1225
  %1232 = icmp eq i32 %1218, %1222
  br i1 %1232, label %1235, label %1233

1233:                                             ; preds = %1231
  %1234 = icmp ult i32 %1218, %1222
  br i1 %1234, label %1239, label %1240

1235:                                             ; preds = %1231
  %1236 = lshr i32 %1214, 29
  %1237 = lshr i32 %1211, 29
  %1238 = icmp ult i32 %1236, %1237
  br i1 %1238, label %1239, label %1240

1239:                                             ; preds = %1235, %1233, %1229, %1223, %1220, %1213
  br label %1240

1240:                                             ; preds = %1101, %1216, %1220, %1229, %1233, %1235, %1239
  %1241 = phi %"class.blink::CollapsedBorderValue"* [ %32, %1239 ], [ %12, %1235 ], [ %12, %1229 ], [ %12, %1233 ], [ %12, %1101 ], [ %12, %1216 ], [ %12, %1220 ]
  %1242 = bitcast %"class.blink::CollapsedBorderValue"* %1241 to i64*
  %1243 = load i64, i64* %1242, align 4
  store i64 %1243, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1203) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1104) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1103) #12
  %1244 = lshr i64 %1243, 32
  %1245 = trunc i64 %1244 to i32
  %1246 = icmp ugt i32 %1245, 536870911
  br i1 %1246, label %1247, label %1526

1247:                                             ; preds = %1095, %1240
  %1248 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %682, align 8
  %1249 = icmp eq %"class.blink::LayoutTableCol"* %1248, null
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1247
  %1251 = load i64, i64* %11, align 8
  br label %1526

1252:                                             ; preds = %1247
  %1253 = bitcast %"class.blink::LayoutTableCol"* %1248 to %"class.blink::LayoutTableBoxComponent"*
  %1254 = bitcast %"class.blink::CollapsedBorderValue"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1254) #12
  %1255 = bitcast %"class.blink::BorderValue"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1255) #12
  %1256 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %1248, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1257 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1256, align 8
  %1258 = bitcast %"class.blink::LayoutTableCol"* %1248 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %1259 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %1258, align 8
  %1260 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1259, i64 195
  %1261 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %1260, align 8
  %1262 = call %"class.blink::LayoutTable"* %1261(%"class.blink::LayoutTableBoxComponent"* nonnull %1253) #12
  %1263 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %1262, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1264 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1263, align 8
  %1265 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %1265) #12
  %1266 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1264, i64 0, i32 0, i32 9
  %1267 = bitcast [20 x i8]* %1266 to i160*
  %1268 = load i160, i160* %1267, align 8, !noalias !144
  %1269 = lshr i160 %1268, 102
  %1270 = trunc i160 %1269 to i16
  %1271 = and i16 %1270, 3
  %1272 = lshr i160 %1268, 107
  %1273 = trunc i160 %1272 to i16
  %1274 = and i16 %1273, 256
  %1275 = or i16 %1274, %1271
  %1276 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1257, i64 0, i32 0, i32 7, i32 0, i32 0
  %1277 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %1276, align 8, !noalias !144
  %1278 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 27
  %1279 = load i16, i16* %1278, align 8, !noalias !144
  %1280 = lshr i16 %1279, 12
  %1281 = zext i16 %1280 to i32
  %1282 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 22
  %1283 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 26, i32 0
  %1284 = load i32, i32* %1283, align 4, !noalias !144
  %1285 = bitcast %"class.blink::StyleColor"* %1282 to i64*
  %1286 = load i64, i64* %1285, align 4, !noalias !144
  %1287 = shl nuw nsw i32 %1281, 26
  %1288 = icmp slt i32 %1284, 67108863
  %1289 = select i1 %1288, i32 %1284, i32 67108863
  %1290 = and i32 %1289, 67108863
  %1291 = or i32 %1290, %1287
  %1292 = lshr i16 %1279, 8
  %1293 = and i16 %1292, 15
  %1294 = zext i16 %1293 to i32
  %1295 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 21
  %1296 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 25, i32 0
  %1297 = load i32, i32* %1296, align 4, !noalias !144
  %1298 = bitcast %"class.blink::StyleColor"* %1295 to i64*
  %1299 = load i64, i64* %1298, align 4, !noalias !144
  %1300 = shl nuw nsw i32 %1294, 26
  %1301 = icmp slt i32 %1297, 67108863
  %1302 = select i1 %1301, i32 %1297, i32 67108863
  %1303 = and i32 %1302, 67108863
  %1304 = or i32 %1303, %1300
  %1305 = and i16 %1279, 15
  %1306 = zext i16 %1305 to i32
  %1307 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 19
  %1308 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 23, i32 0
  %1309 = load i32, i32* %1308, align 4, !noalias !144
  %1310 = bitcast %"class.blink::StyleColor"* %1307 to i64*
  %1311 = load i64, i64* %1310, align 4, !noalias !144
  %1312 = shl nuw nsw i32 %1306, 26
  %1313 = icmp slt i32 %1309, 67108863
  %1314 = select i1 %1313, i32 %1309, i32 67108863
  %1315 = and i32 %1314, 67108863
  %1316 = or i32 %1315, %1312
  %1317 = lshr i16 %1279, 4
  %1318 = and i16 %1317, 15
  %1319 = zext i16 %1318 to i32
  %1320 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 20
  %1321 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1277, i64 0, i32 24, i32 0
  %1322 = load i32, i32* %1321, align 4, !noalias !144
  %1323 = bitcast %"class.blink::StyleColor"* %1320 to i64*
  %1324 = load i64, i64* %1323, align 4, !noalias !144
  %1325 = shl nuw nsw i32 %1319, 26
  %1326 = icmp slt i32 %1322, 67108863
  %1327 = select i1 %1326, i32 %1322, i32 67108863
  %1328 = and i32 %1327, 67108863
  %1329 = or i32 %1328, %1325
  %1330 = bitcast %"class.blink::PhysicalToLogical.1929"* %3 to i16*
  store i16 %1275, i16* %1330, align 4, !alias.scope !144
  %1331 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 1
  %1332 = bitcast %"class.blink::BorderValue"* %1331 to i64*
  store i64 %1286, i64* %1332, align 4, !alias.scope !144
  %1333 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 1, i32 1
  store i32 %1291, i32* %1333, align 4, !alias.scope !144
  %1334 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 2
  %1335 = bitcast %"class.blink::BorderValue"* %1334 to i64*
  store i64 %1299, i64* %1335, align 4, !alias.scope !144
  %1336 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 2, i32 1
  store i32 %1304, i32* %1336, align 4, !alias.scope !144
  %1337 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 3
  %1338 = bitcast %"class.blink::BorderValue"* %1337 to i64*
  store i64 %1311, i64* %1338, align 4, !alias.scope !144
  %1339 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 3, i32 1
  store i32 %1316, i32* %1339, align 4, !alias.scope !144
  %1340 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 4
  %1341 = bitcast %"class.blink::BorderValue"* %1340 to i64*
  store i64 %1324, i64* %1341, align 4, !alias.scope !144
  %1342 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %3, i64 0, i32 4, i32 1
  store i32 %1329, i32* %1342, align 4, !alias.scope !144
  %1343 = icmp eq i16 %1271, 0
  %1344 = icmp eq i16 %1274, 0
  %1345 = select i1 %1344, %"class.blink::BorderValue"* %1340, %"class.blink::BorderValue"* %1334
  %1346 = select i1 %1344, %"class.blink::BorderValue"* %1331, %"class.blink::BorderValue"* %1337
  %1347 = select i1 %1343, %"class.blink::BorderValue"* %1345, %"class.blink::BorderValue"* %1346
  %1348 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %1347, i64 0, i32 1
  %1349 = bitcast %"class.blink::BorderValue"* %1347 to i64*
  %1350 = load i32, i32* %1348, align 4
  %1351 = load i64, i64* %1349, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %1265) #12
  %1352 = bitcast %"class.blink::BorderValue"* %36 to i64*
  store i64 %1351, i64* %1352, align 8
  %1353 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %36, i64 0, i32 1
  store i32 %1350, i32* %1353, align 8
  %1354 = bitcast %"class.blink::Color"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1354) #12
  %1355 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %24 to %"class.blink::LayoutObject"**
  %1356 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1355, align 8
  %1357 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1356, i64 0, i32 5, i32 0
  %1358 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1357, align 8
  %1359 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1358, %"class.blink::CSSProperty"* dereferenceable(24) %105) #12
  %1360 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %37, i64 0, i32 0
  store i32 %1359, i32* %1360, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %35, %"class.blink::BorderValue"* nonnull dereferenceable(12) %36, %"class.blink::Color"* nonnull dereferenceable(4) %37, i32 3) #12
  %1361 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %35, i64 0, i32 1
  %1362 = load i32, i32* %1361, align 4
  %1363 = icmp ugt i32 %1362, 536870911
  br i1 %1363, label %1364, label %1391

1364:                                             ; preds = %1252
  %1365 = load i32, i32* %132, align 4
  %1366 = icmp ugt i32 %1365, 536870911
  br i1 %1366, label %1367, label %1390

1367:                                             ; preds = %1364
  %1368 = lshr i32 %1365, 25
  %1369 = and i32 %1368, 15
  %1370 = icmp eq i32 %1369, 1
  br i1 %1370, label %1391, label %1371

1371:                                             ; preds = %1367
  %1372 = lshr i32 %1362, 25
  %1373 = and i32 %1372, 15
  switch i32 %1373, label %1374 [
    i32 1, label %1390
    i32 0, label %1391
  ]

1374:                                             ; preds = %1371
  %1375 = icmp eq i32 %1369, 0
  br i1 %1375, label %1390, label %1376

1376:                                             ; preds = %1374
  %1377 = and i32 %1365, 33554431
  %1378 = and i32 %1362, 33554431
  %1379 = icmp eq i32 %1377, %1378
  br i1 %1379, label %1382, label %1380

1380:                                             ; preds = %1376
  %1381 = icmp ult i32 %1377, %1378
  br i1 %1381, label %1390, label %1391

1382:                                             ; preds = %1376
  %1383 = icmp eq i32 %1369, %1373
  br i1 %1383, label %1386, label %1384

1384:                                             ; preds = %1382
  %1385 = icmp ult i32 %1369, %1373
  br i1 %1385, label %1390, label %1391

1386:                                             ; preds = %1382
  %1387 = lshr i32 %1365, 29
  %1388 = lshr i32 %1362, 29
  %1389 = icmp ult i32 %1387, %1388
  br i1 %1389, label %1390, label %1391

1390:                                             ; preds = %1386, %1384, %1380, %1374, %1371, %1364
  br label %1391

1391:                                             ; preds = %1252, %1367, %1371, %1380, %1384, %1386, %1390
  %1392 = phi %"class.blink::CollapsedBorderValue"* [ %35, %1390 ], [ %12, %1386 ], [ %12, %1380 ], [ %12, %1384 ], [ %12, %1252 ], [ %12, %1367 ], [ %12, %1371 ]
  %1393 = bitcast %"class.blink::CollapsedBorderValue"* %1392 to i64*
  %1394 = load i64, i64* %1393, align 4
  store i64 %1394, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1354) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1255) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1254) #12
  br label %1526

1395:                                             ; preds = %1041
  %1396 = bitcast %"class.blink::CollapsedBorderValue"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1396) #12
  %1397 = bitcast %"class.blink::BorderValue"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1397) #12
  %1398 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1399 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1398, align 8
  %1400 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %1400) #12
  %1401 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1399, i64 0, i32 0, i32 9
  %1402 = bitcast [20 x i8]* %1401 to i160*
  %1403 = load i160, i160* %1402, align 8, !noalias !147
  %1404 = lshr i160 %1403, 102
  %1405 = trunc i160 %1404 to i16
  %1406 = and i16 %1405, 3
  %1407 = lshr i160 %1403, 107
  %1408 = trunc i160 %1407 to i16
  %1409 = and i16 %1408, 256
  %1410 = or i16 %1409, %1406
  %1411 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1399, i64 0, i32 0, i32 7, i32 0, i32 0
  %1412 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %1411, align 8, !noalias !147
  %1413 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 27
  %1414 = load i16, i16* %1413, align 8, !noalias !147
  %1415 = lshr i16 %1414, 12
  %1416 = zext i16 %1415 to i32
  %1417 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 22
  %1418 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 26, i32 0
  %1419 = load i32, i32* %1418, align 4, !noalias !147
  %1420 = bitcast %"class.blink::StyleColor"* %1417 to i64*
  %1421 = load i64, i64* %1420, align 4, !noalias !147
  %1422 = shl nuw nsw i32 %1416, 26
  %1423 = icmp slt i32 %1419, 67108863
  %1424 = select i1 %1423, i32 %1419, i32 67108863
  %1425 = and i32 %1424, 67108863
  %1426 = or i32 %1425, %1422
  %1427 = lshr i16 %1414, 8
  %1428 = and i16 %1427, 15
  %1429 = zext i16 %1428 to i32
  %1430 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 21
  %1431 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 25, i32 0
  %1432 = load i32, i32* %1431, align 4, !noalias !147
  %1433 = bitcast %"class.blink::StyleColor"* %1430 to i64*
  %1434 = load i64, i64* %1433, align 4, !noalias !147
  %1435 = shl nuw nsw i32 %1429, 26
  %1436 = icmp slt i32 %1432, 67108863
  %1437 = select i1 %1436, i32 %1432, i32 67108863
  %1438 = and i32 %1437, 67108863
  %1439 = or i32 %1438, %1435
  %1440 = and i16 %1414, 15
  %1441 = zext i16 %1440 to i32
  %1442 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 19
  %1443 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 23, i32 0
  %1444 = load i32, i32* %1443, align 4, !noalias !147
  %1445 = bitcast %"class.blink::StyleColor"* %1442 to i64*
  %1446 = load i64, i64* %1445, align 4, !noalias !147
  %1447 = shl nuw nsw i32 %1441, 26
  %1448 = icmp slt i32 %1444, 67108863
  %1449 = select i1 %1448, i32 %1444, i32 67108863
  %1450 = and i32 %1449, 67108863
  %1451 = or i32 %1450, %1447
  %1452 = lshr i16 %1414, 4
  %1453 = and i16 %1452, 15
  %1454 = zext i16 %1453 to i32
  %1455 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 20
  %1456 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1412, i64 0, i32 24, i32 0
  %1457 = load i32, i32* %1456, align 4, !noalias !147
  %1458 = bitcast %"class.blink::StyleColor"* %1455 to i64*
  %1459 = load i64, i64* %1458, align 4, !noalias !147
  %1460 = shl nuw nsw i32 %1454, 26
  %1461 = icmp slt i32 %1457, 67108863
  %1462 = select i1 %1461, i32 %1457, i32 67108863
  %1463 = and i32 %1462, 67108863
  %1464 = or i32 %1463, %1460
  %1465 = bitcast %"class.blink::PhysicalToLogical.1929"* %2 to i16*
  store i16 %1410, i16* %1465, align 4, !alias.scope !147
  %1466 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 1
  %1467 = bitcast %"class.blink::BorderValue"* %1466 to i64*
  store i64 %1421, i64* %1467, align 4, !alias.scope !147
  %1468 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 1, i32 1
  store i32 %1426, i32* %1468, align 4, !alias.scope !147
  %1469 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 2
  %1470 = bitcast %"class.blink::BorderValue"* %1469 to i64*
  store i64 %1434, i64* %1470, align 4, !alias.scope !147
  %1471 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 2, i32 1
  store i32 %1439, i32* %1471, align 4, !alias.scope !147
  %1472 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 3
  %1473 = bitcast %"class.blink::BorderValue"* %1472 to i64*
  store i64 %1446, i64* %1473, align 4, !alias.scope !147
  %1474 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 3, i32 1
  store i32 %1451, i32* %1474, align 4, !alias.scope !147
  %1475 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 4
  %1476 = bitcast %"class.blink::BorderValue"* %1475 to i64*
  store i64 %1459, i64* %1476, align 4, !alias.scope !147
  %1477 = getelementptr inbounds %"class.blink::PhysicalToLogical.1929", %"class.blink::PhysicalToLogical.1929"* %2, i64 0, i32 4, i32 1
  store i32 %1464, i32* %1477, align 4, !alias.scope !147
  %1478 = icmp eq i16 %1406, 0
  %1479 = icmp eq i16 %1409, 0
  %1480 = select i1 %1479, %"class.blink::BorderValue"* %1469, %"class.blink::BorderValue"* %1475
  %1481 = select i1 %1479, %"class.blink::BorderValue"* %1472, %"class.blink::BorderValue"* %1466
  %1482 = select i1 %1478, %"class.blink::BorderValue"* %1480, %"class.blink::BorderValue"* %1481
  %1483 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %1482, i64 0, i32 1
  %1484 = bitcast %"class.blink::BorderValue"* %1482 to i64*
  %1485 = load i32, i32* %1483, align 4
  %1486 = load i64, i64* %1484, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %1400) #12
  %1487 = bitcast %"class.blink::BorderValue"* %39 to i64*
  store i64 %1486, i64* %1487, align 8
  %1488 = getelementptr inbounds %"class.blink::BorderValue", %"class.blink::BorderValue"* %39, i64 0, i32 1
  store i32 %1485, i32* %1488, align 8
  %1489 = bitcast %"class.blink::Color"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1489) #12
  %1490 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1399, %"class.blink::CSSProperty"* dereferenceable(24) %129) #12
  %1491 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %40, i64 0, i32 0
  store i32 %1490, i32* %1491, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ERKNS_11BorderValueERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %38, %"class.blink::BorderValue"* nonnull dereferenceable(12) %39, %"class.blink::Color"* nonnull dereferenceable(4) %40, i32 1) #12
  %1492 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %38, i64 0, i32 1
  %1493 = load i32, i32* %1492, align 4
  %1494 = icmp ugt i32 %1493, 536870911
  br i1 %1494, label %1495, label %1522

1495:                                             ; preds = %1395
  %1496 = load i32, i32* %132, align 4
  %1497 = icmp ugt i32 %1496, 536870911
  br i1 %1497, label %1498, label %1521

1498:                                             ; preds = %1495
  %1499 = lshr i32 %1496, 25
  %1500 = and i32 %1499, 15
  %1501 = icmp eq i32 %1500, 1
  br i1 %1501, label %1522, label %1502

1502:                                             ; preds = %1498
  %1503 = lshr i32 %1493, 25
  %1504 = and i32 %1503, 15
  switch i32 %1504, label %1505 [
    i32 1, label %1521
    i32 0, label %1522
  ]

1505:                                             ; preds = %1502
  %1506 = icmp eq i32 %1500, 0
  br i1 %1506, label %1521, label %1507

1507:                                             ; preds = %1505
  %1508 = and i32 %1496, 33554431
  %1509 = and i32 %1493, 33554431
  %1510 = icmp eq i32 %1508, %1509
  br i1 %1510, label %1513, label %1511

1511:                                             ; preds = %1507
  %1512 = icmp ult i32 %1508, %1509
  br i1 %1512, label %1521, label %1522

1513:                                             ; preds = %1507
  %1514 = icmp eq i32 %1500, %1504
  br i1 %1514, label %1517, label %1515

1515:                                             ; preds = %1513
  %1516 = icmp ult i32 %1500, %1504
  br i1 %1516, label %1521, label %1522

1517:                                             ; preds = %1513
  %1518 = lshr i32 %1496, 29
  %1519 = lshr i32 %1493, 29
  %1520 = icmp ult i32 %1518, %1519
  br i1 %1520, label %1521, label %1522

1521:                                             ; preds = %1517, %1515, %1511, %1505, %1502, %1495
  br label %1522

1522:                                             ; preds = %1395, %1498, %1502, %1511, %1515, %1517, %1521
  %1523 = phi %"class.blink::CollapsedBorderValue"* [ %38, %1521 ], [ %12, %1517 ], [ %12, %1511 ], [ %12, %1515 ], [ %12, %1395 ], [ %12, %1498 ], [ %12, %1502 ]
  %1524 = bitcast %"class.blink::CollapsedBorderValue"* %1523 to i64*
  %1525 = load i64, i64* %1524, align 4
  store i64 %1525, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1489) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1397) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1396) #12
  br label %1526

1526:                                             ; preds = %1522, %1391, %1250, %1240, %1034, %885
  %1527 = phi i64 [ %888, %885 ], [ %1037, %1034 ], [ %1243, %1240 ], [ %1251, %1250 ], [ %1394, %1391 ], [ %1525, %1522 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %681) #12
  br label %1528

1528:                                             ; preds = %673, %522, %375, %1526
  %1529 = phi i64 [ %1527, %1526 ], [ %378, %375 ], [ %525, %522 ], [ %676, %673 ]
  %1530 = and i64 %1529, -4294967296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #12
  br label %1531

1531:                                             ; preds = %70, %74, %1528
  %1532 = phi i64 [ %1530, %1528 ], [ %78, %74 ], [ 0, %70 ]
  %1533 = phi i64 [ %1529, %1528 ], [ %77, %74 ], [ 0, %70 ]
  %1534 = and i64 %1533, 4294967295
  %1535 = or i64 %1534, %1532
  ret i64 %1535
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CollapsedBorderValue"* @_ZNK5blink21CollapsedBorderValues11StartBorderEv(%"class.blink::CollapsedBorderValues"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 0
  ret %"class.blink::CollapsedBorderValue"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutTableCell28ComputeCollapsedBeforeBorderEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i64, align 8
  %57 = bitcast i64* %56 to %"class.blink::CollapsedBorderValue"*
  %58 = alloca %"class.blink::Color", align 4
  %59 = alloca %"class.blink::CollapsedBorderValue", align 4
  %60 = alloca %"class.blink::Color", align 4
  %61 = alloca %"class.blink::CollapsedBorderValue", align 4
  %62 = alloca %"class.blink::Color", align 4
  %63 = alloca %"class.blink::CollapsedBorderValue", align 4
  %64 = alloca %"class.blink::Color", align 4
  %65 = alloca %"class.blink::CollapsedBorderValue", align 4
  %66 = alloca %"class.blink::Color", align 4
  %67 = alloca %"class.blink::CollapsedBorderValue", align 4
  %68 = alloca %"class.blink::Color", align 4
  %69 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %70 = alloca %"class.blink::CollapsedBorderValue", align 4
  %71 = alloca %"class.blink::Color", align 4
  %72 = alloca %"class.blink::CollapsedBorderValue", align 4
  %73 = alloca %"class.blink::Color", align 4
  %74 = alloca %"class.blink::CollapsedBorderValue", align 4
  %75 = alloca %"class.blink::Color", align 4
  %76 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 7
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 7
  %81 = bitcast %"class.blink::LayoutObject"** %80 to %"class.blink::LayoutTable"**
  %82 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %81, align 8
  %83 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellAboveERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %82, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %84 = icmp eq %"class.blink::LayoutTableCell"* %83, null
  br i1 %84, label %106, label %85

85:                                               ; preds = %1
  %86 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = xor i32 %89, %87
  %91 = and i32 %90, 33554431
  %92 = icmp ne i32 %91, 0
  %93 = and i32 %89, 1073741824
  %94 = icmp eq i32 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %106, label %96

96:                                               ; preds = %85
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %83) #12
  %97 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %97, align 8
  %99 = icmp eq %"class.blink::CollapsedBorderValues"* %98, null
  br i1 %99, label %1047, label %100

100:                                              ; preds = %96
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %83) #12
  %101 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %97, align 8
  %102 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %101, i64 0, i32 0, i64 3
  %103 = bitcast %"class.blink::CollapsedBorderValue"* %102 to i64*
  %104 = load i64, i64* %103, align 4
  %105 = and i64 %104, -4294967296
  br label %1047

106:                                              ; preds = %85, %1
  %107 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink35GetCSSPropertyBorderBlockStartColorEv() #12
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 7
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 7
  %112 = bitcast %"class.blink::LayoutObject"** %111 to %"class.blink::LayoutTable"**
  %113 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %115 = bitcast %"class.blink::ComputedStyle"** %114 to %"class.blink::ComputedStyleBase"**
  %116 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %116, i64 0, i32 9
  %118 = bitcast [20 x i8]* %117 to i160*
  %119 = load i160, i160* %118, align 8
  %120 = lshr i160 %119, 115
  %121 = trunc i160 %120 to i8
  %122 = and i8 %121, 1
  %123 = lshr i160 %119, 102
  %124 = trunc i160 %123 to i8
  %125 = and i8 %124, 3
  %126 = bitcast %"class.blink::CSSProperty"* %107 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %127 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %126, align 8
  %128 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %127, i64 11
  %129 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %128, align 8
  %130 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %129(%"class.blink::CSSProperty"* %107, i8 zeroext %122, i8 zeroext %125) #12
  %131 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink33GetCSSPropertyBorderBlockEndColorEv() #12
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 7
  %134 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %134, i64 0, i32 7
  %136 = bitcast %"class.blink::LayoutObject"** %135 to %"class.blink::LayoutTable"**
  %137 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %139 = bitcast %"class.blink::ComputedStyle"** %138 to %"class.blink::ComputedStyleBase"**
  %140 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %140, i64 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8
  %144 = lshr i160 %143, 115
  %145 = trunc i160 %144 to i8
  %146 = and i8 %145, 1
  %147 = lshr i160 %143, 102
  %148 = trunc i160 %147 to i8
  %149 = and i8 %148, 3
  %150 = bitcast %"class.blink::CSSProperty"* %131 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %151 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %150, align 8
  %152 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %151, i64 11
  %153 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %152, align 8
  %154 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %153(%"class.blink::CSSProperty"* %131, i8 zeroext %146, i8 zeroext %149) #12
  %155 = bitcast i64* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #12
  %156 = bitcast i64* %56 to i32*
  store i32 -1431655766, i32* %156, align 8
  %157 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %57, i64 0, i32 1
  store i32 -1431655766, i32* %157, align 4
  %158 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %159 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %158, align 8
  %160 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160)
  %161 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161)
  %162 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162)
  %163 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %159, i64 0, i32 0, i32 9
  %164 = bitcast [20 x i8]* %163 to i160*
  %165 = load i160, i160* %164, align 8, !noalias !150
  %166 = lshr i160 %165, 102
  %167 = trunc i160 %166 to i8
  %168 = and i8 %167, 3
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %159, i64 0, i32 0, i32 7, i32 0, i32 0
  %170 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %169, align 8, !noalias !150
  %171 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 27
  %172 = load i16, i16* %171, align 8, !noalias !150
  %173 = lshr i16 %172, 12
  %174 = zext i16 %173 to i32
  %175 = lshr i16 %172, 8
  %176 = and i16 %175, 15
  %177 = zext i16 %176 to i32
  %178 = lshr i16 %172, 4
  %179 = and i16 %178, 15
  %180 = zext i16 %179 to i32
  store i32 %174, i32* %53, align 4, !alias.scope !150
  store i32 %177, i32* %54, align 4, !alias.scope !150
  store i32 %180, i32* %55, align 4, !alias.scope !150
  %181 = icmp eq i8 %168, 0
  %182 = icmp eq i8 %168, 1
  %183 = select i1 %182, i32* %54, i32* %55
  %184 = select i1 %181, i32* %53, i32* %183
  %185 = load i32, i32* %184, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162)
  %186 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186)
  %187 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187)
  %188 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188)
  %189 = icmp ult i16 %172, 8192
  br i1 %189, label %193, label %190

190:                                              ; preds = %106
  %191 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 26, i32 0
  %192 = load i32, i32* %191, align 4, !noalias !153
  br label %193

193:                                              ; preds = %190, %106
  %194 = phi i32 [ %192, %190 ], [ 0, %106 ]
  %195 = and i16 %172, 3584
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 25, i32 0
  %199 = load i32, i32* %198, align 4, !noalias !153
  br label %200

200:                                              ; preds = %197, %193
  %201 = phi i32 [ %199, %197 ], [ 0, %193 ]
  %202 = and i16 %172, 224
  %203 = icmp eq i16 %202, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 24, i32 0
  %206 = load i32, i32* %205, align 4, !noalias !153
  br label %207

207:                                              ; preds = %200, %204
  %208 = phi i32 [ %206, %204 ], [ 0, %200 ]
  store i32 %194, i32* %50, align 4, !alias.scope !153
  store i32 %201, i32* %51, align 4, !alias.scope !153
  store i32 %208, i32* %52, align 4, !alias.scope !153
  %209 = select i1 %182, i32* %51, i32* %52
  %210 = select i1 %181, i32* %50, i32* %209
  %211 = load i32, i32* %210, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188)
  %212 = bitcast %"class.blink::Color"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %212) #12
  %213 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %159, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %214 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %58, i64 0, i32 0
  store i32 %213, i32* %214, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %57, i32 %185, i32 %211, %"class.blink::Color"* nonnull dereferenceable(4) %58, i32 6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %212) #12
  %215 = icmp ne %"class.blink::LayoutTableCell"* %83, null
  br i1 %215, label %216, label %313

216:                                              ; preds = %207
  %217 = bitcast %"class.blink::CollapsedBorderValue"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #12
  %218 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %219 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %218, align 8
  %220 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220)
  %221 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221)
  %222 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222)
  %223 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %219, i64 0, i32 0, i32 9
  %224 = bitcast [20 x i8]* %223 to i160*
  %225 = load i160, i160* %224, align 8, !noalias !156
  %226 = lshr i160 %225, 102
  %227 = trunc i160 %226 to i8
  %228 = and i8 %227, 3
  %229 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %219, i64 0, i32 0, i32 7, i32 0, i32 0
  %230 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %229, align 8, !noalias !156
  %231 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %230, i64 0, i32 27
  %232 = load i16, i16* %231, align 8, !noalias !156
  %233 = lshr i16 %232, 8
  %234 = and i16 %233, 15
  %235 = zext i16 %234 to i32
  %236 = and i16 %232, 15
  %237 = zext i16 %236 to i32
  %238 = lshr i16 %232, 4
  %239 = and i16 %238, 15
  %240 = zext i16 %239 to i32
  store i32 %235, i32* %47, align 4, !alias.scope !156
  store i32 %237, i32* %48, align 4, !alias.scope !156
  store i32 %240, i32* %49, align 4, !alias.scope !156
  %241 = icmp eq i8 %228, 0
  %242 = icmp eq i8 %228, 1
  %243 = select i1 %242, i32* %49, i32* %47
  %244 = select i1 %241, i32* %48, i32* %243
  %245 = load i32, i32* %244, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222)
  %246 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246)
  %247 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247)
  %248 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248)
  %249 = and i16 %232, 3584
  %250 = icmp eq i16 %249, 0
  br i1 %250, label %254, label %251

251:                                              ; preds = %216
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %230, i64 0, i32 25, i32 0
  %253 = load i32, i32* %252, align 4, !noalias !159
  br label %254

254:                                              ; preds = %251, %216
  %255 = phi i32 [ %253, %251 ], [ 0, %216 ]
  %256 = and i16 %232, 14
  %257 = icmp eq i16 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %230, i64 0, i32 23, i32 0
  %260 = load i32, i32* %259, align 4, !noalias !159
  br label %261

261:                                              ; preds = %258, %254
  %262 = phi i32 [ %260, %258 ], [ 0, %254 ]
  %263 = and i16 %232, 224
  %264 = icmp eq i16 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %230, i64 0, i32 24, i32 0
  %267 = load i32, i32* %266, align 4, !noalias !159
  br label %268

268:                                              ; preds = %261, %265
  %269 = phi i32 [ %267, %265 ], [ 0, %261 ]
  store i32 %255, i32* %44, align 4, !alias.scope !159
  store i32 %262, i32* %45, align 4, !alias.scope !159
  store i32 %269, i32* %46, align 4, !alias.scope !159
  %270 = select i1 %242, i32* %46, i32* %44
  %271 = select i1 %241, i32* %45, i32* %270
  %272 = load i32, i32* %271, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248)
  %273 = bitcast %"class.blink::Color"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %273) #12
  %274 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %219, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %275 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %60, i64 0, i32 0
  store i32 %274, i32* %275, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %59, i32 %245, i32 %272, %"class.blink::Color"* nonnull dereferenceable(4) %60, i32 6) #12
  %276 = load i32, i32* %157, align 4
  %277 = icmp ugt i32 %276, 536870911
  br i1 %277, label %278, label %306

278:                                              ; preds = %268
  %279 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %59, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = icmp ugt i32 %280, 536870911
  br i1 %281, label %282, label %305

282:                                              ; preds = %278
  %283 = lshr i32 %280, 25
  %284 = and i32 %283, 15
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %306, label %286

286:                                              ; preds = %282
  %287 = lshr i32 %276, 25
  %288 = and i32 %287, 15
  switch i32 %288, label %289 [
    i32 1, label %305
    i32 0, label %306
  ]

289:                                              ; preds = %286
  %290 = icmp eq i32 %284, 0
  br i1 %290, label %305, label %291

291:                                              ; preds = %289
  %292 = and i32 %280, 33554431
  %293 = and i32 %276, 33554431
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = icmp ult i32 %292, %293
  br i1 %296, label %305, label %306

297:                                              ; preds = %291
  %298 = icmp eq i32 %284, %288
  br i1 %298, label %301, label %299

299:                                              ; preds = %297
  %300 = icmp ult i32 %284, %288
  br i1 %300, label %305, label %306

301:                                              ; preds = %297
  %302 = lshr i32 %280, 29
  %303 = lshr i32 %276, 29
  %304 = icmp ult i32 %302, %303
  br i1 %304, label %305, label %306

305:                                              ; preds = %301, %299, %295, %289, %286, %278
  br label %306

306:                                              ; preds = %268, %282, %286, %295, %299, %301, %305
  %307 = phi %"class.blink::CollapsedBorderValue"* [ %57, %305 ], [ %59, %301 ], [ %59, %295 ], [ %59, %299 ], [ %59, %268 ], [ %59, %282 ], [ %59, %286 ]
  %308 = bitcast %"class.blink::CollapsedBorderValue"* %307 to i64*
  %309 = load i64, i64* %308, align 4
  store i64 %309, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %273) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #12
  %310 = lshr i64 %309, 32
  %311 = trunc i64 %310 to i32
  %312 = icmp ugt i32 %311, 536870911
  br i1 %312, label %313, label %1044

313:                                              ; preds = %306, %207
  %314 = bitcast %"class.blink::CollapsedBorderValue"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #12
  %315 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %316 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %315, i64 0, i32 5, i32 0
  %317 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %316, align 8
  %318 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %318)
  %319 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %319)
  %320 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %320)
  %321 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %317, i64 0, i32 0, i32 9
  %322 = bitcast [20 x i8]* %321 to i160*
  %323 = load i160, i160* %322, align 8, !noalias !162
  %324 = lshr i160 %323, 102
  %325 = trunc i160 %324 to i8
  %326 = and i8 %325, 3
  %327 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %317, i64 0, i32 0, i32 7, i32 0, i32 0
  %328 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %327, align 8, !noalias !162
  %329 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 27
  %330 = load i16, i16* %329, align 8, !noalias !162
  %331 = lshr i16 %330, 12
  %332 = zext i16 %331 to i32
  %333 = lshr i16 %330, 8
  %334 = and i16 %333, 15
  %335 = zext i16 %334 to i32
  %336 = lshr i16 %330, 4
  %337 = and i16 %336, 15
  %338 = zext i16 %337 to i32
  store i32 %332, i32* %41, align 4, !alias.scope !162
  store i32 %335, i32* %42, align 4, !alias.scope !162
  store i32 %338, i32* %43, align 4, !alias.scope !162
  %339 = icmp eq i8 %326, 0
  %340 = icmp eq i8 %326, 1
  %341 = select i1 %340, i32* %42, i32* %43
  %342 = select i1 %339, i32* %41, i32* %341
  %343 = load i32, i32* %342, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %318)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %319)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %320)
  %344 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %344)
  %345 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %345)
  %346 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %346)
  %347 = icmp ult i16 %330, 8192
  br i1 %347, label %351, label %348

348:                                              ; preds = %313
  %349 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 26, i32 0
  %350 = load i32, i32* %349, align 4, !noalias !165
  br label %351

351:                                              ; preds = %348, %313
  %352 = phi i32 [ %350, %348 ], [ 0, %313 ]
  %353 = and i16 %330, 3584
  %354 = icmp eq i16 %353, 0
  br i1 %354, label %358, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 25, i32 0
  %357 = load i32, i32* %356, align 4, !noalias !165
  br label %358

358:                                              ; preds = %355, %351
  %359 = phi i32 [ %357, %355 ], [ 0, %351 ]
  %360 = and i16 %330, 224
  %361 = icmp eq i16 %360, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %358
  %363 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 24, i32 0
  %364 = load i32, i32* %363, align 4, !noalias !165
  br label %365

365:                                              ; preds = %358, %362
  %366 = phi i32 [ %364, %362 ], [ 0, %358 ]
  store i32 %352, i32* %38, align 4, !alias.scope !165
  store i32 %359, i32* %39, align 4, !alias.scope !165
  store i32 %366, i32* %40, align 4, !alias.scope !165
  %367 = select i1 %340, i32* %39, i32* %40
  %368 = select i1 %339, i32* %38, i32* %367
  %369 = load i32, i32* %368, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %345)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %346)
  %370 = bitcast %"class.blink::Color"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %370) #12
  %371 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %317, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %372 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %62, i64 0, i32 0
  store i32 %371, i32* %372, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %61, i32 %343, i32 %369, %"class.blink::Color"* nonnull dereferenceable(4) %62, i32 5) #12
  %373 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %61, i64 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = icmp ugt i32 %374, 536870911
  br i1 %375, label %376, label %403

376:                                              ; preds = %365
  %377 = load i32, i32* %157, align 4
  %378 = icmp ugt i32 %377, 536870911
  br i1 %378, label %379, label %402

379:                                              ; preds = %376
  %380 = lshr i32 %377, 25
  %381 = and i32 %380, 15
  %382 = icmp eq i32 %381, 1
  br i1 %382, label %403, label %383

383:                                              ; preds = %379
  %384 = lshr i32 %374, 25
  %385 = and i32 %384, 15
  switch i32 %385, label %386 [
    i32 1, label %402
    i32 0, label %403
  ]

386:                                              ; preds = %383
  %387 = icmp eq i32 %381, 0
  br i1 %387, label %402, label %388

388:                                              ; preds = %386
  %389 = and i32 %377, 33554431
  %390 = and i32 %374, 33554431
  %391 = icmp eq i32 %389, %390
  br i1 %391, label %394, label %392

392:                                              ; preds = %388
  %393 = icmp ult i32 %389, %390
  br i1 %393, label %402, label %403

394:                                              ; preds = %388
  %395 = icmp eq i32 %381, %385
  br i1 %395, label %398, label %396

396:                                              ; preds = %394
  %397 = icmp ult i32 %381, %385
  br i1 %397, label %402, label %403

398:                                              ; preds = %394
  %399 = lshr i32 %377, 29
  %400 = lshr i32 %374, 29
  %401 = icmp ult i32 %399, %400
  br i1 %401, label %402, label %403

402:                                              ; preds = %398, %396, %392, %386, %383, %376
  br label %403

403:                                              ; preds = %365, %379, %383, %392, %396, %398, %402
  %404 = phi %"class.blink::CollapsedBorderValue"* [ %61, %402 ], [ %57, %398 ], [ %57, %392 ], [ %57, %396 ], [ %57, %365 ], [ %57, %379 ], [ %57, %383 ]
  %405 = bitcast %"class.blink::CollapsedBorderValue"* %404 to i64*
  %406 = load i64, i64* %405, align 4
  store i64 %406, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %370) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #12
  %407 = lshr i64 %406, 32
  %408 = trunc i64 %407 to i32
  %409 = icmp ugt i32 %408, 536870911
  br i1 %409, label %410, label %1044

410:                                              ; preds = %403
  br i1 %215, label %411, label %530

411:                                              ; preds = %410
  %412 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %413 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %412, align 8
  %414 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %413, i64 0, i32 7
  %415 = bitcast %"class.blink::LayoutObject"** %414 to %"class.blink::LayoutTableSection"**
  %416 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %415, align 8
  %417 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %418 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %417, i64 0, i32 7
  %419 = bitcast %"class.blink::LayoutObject"** %418 to %"class.blink::LayoutTableSection"**
  %420 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %419, align 8
  %421 = icmp eq %"class.blink::LayoutTableSection"* %416, %420
  br i1 %421, label %422, label %425

422:                                              ; preds = %411
  %423 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %417, i64 0, i32 8
  %424 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %423, align 8
  br label %430

425:                                              ; preds = %411
  %426 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %416, i64 0, i32 0, i32 1, i32 1
  %427 = bitcast %"class.blink::LayoutObject"** %426 to %"class.blink::LayoutTableRow"**
  %428 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %427, align 8
  %429 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %428, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %430

430:                                              ; preds = %425, %422
  %431 = phi %"class.blink::LayoutObject"* [ %424, %422 ], [ %429, %425 ]
  %432 = icmp eq %"class.blink::LayoutObject"* %431, null
  br i1 %432, label %530, label %433

433:                                              ; preds = %430
  %434 = bitcast %"class.blink::CollapsedBorderValue"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %434) #12
  %435 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %431, i64 0, i32 5, i32 0
  %436 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %435, align 8
  %437 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %437)
  %438 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %438)
  %439 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %439)
  %440 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %436, i64 0, i32 0, i32 9
  %441 = bitcast [20 x i8]* %440 to i160*
  %442 = load i160, i160* %441, align 8, !noalias !168
  %443 = lshr i160 %442, 102
  %444 = trunc i160 %443 to i8
  %445 = and i8 %444, 3
  %446 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %436, i64 0, i32 0, i32 7, i32 0, i32 0
  %447 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %446, align 8, !noalias !168
  %448 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %447, i64 0, i32 27
  %449 = load i16, i16* %448, align 8, !noalias !168
  %450 = lshr i16 %449, 8
  %451 = and i16 %450, 15
  %452 = zext i16 %451 to i32
  %453 = and i16 %449, 15
  %454 = zext i16 %453 to i32
  %455 = lshr i16 %449, 4
  %456 = and i16 %455, 15
  %457 = zext i16 %456 to i32
  store i32 %452, i32* %35, align 4, !alias.scope !168
  store i32 %454, i32* %36, align 4, !alias.scope !168
  store i32 %457, i32* %37, align 4, !alias.scope !168
  %458 = icmp eq i8 %445, 0
  %459 = icmp eq i8 %445, 1
  %460 = select i1 %459, i32* %37, i32* %35
  %461 = select i1 %458, i32* %36, i32* %460
  %462 = load i32, i32* %461, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %437)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %438)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %439)
  %463 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %463)
  %464 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %464)
  %465 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %465)
  %466 = and i16 %449, 3584
  %467 = icmp eq i16 %466, 0
  br i1 %467, label %471, label %468

468:                                              ; preds = %433
  %469 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %447, i64 0, i32 25, i32 0
  %470 = load i32, i32* %469, align 4, !noalias !171
  br label %471

471:                                              ; preds = %468, %433
  %472 = phi i32 [ %470, %468 ], [ 0, %433 ]
  %473 = and i16 %449, 14
  %474 = icmp eq i16 %473, 0
  br i1 %474, label %478, label %475

475:                                              ; preds = %471
  %476 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %447, i64 0, i32 23, i32 0
  %477 = load i32, i32* %476, align 4, !noalias !171
  br label %478

478:                                              ; preds = %475, %471
  %479 = phi i32 [ %477, %475 ], [ 0, %471 ]
  %480 = and i16 %449, 224
  %481 = icmp eq i16 %480, 0
  br i1 %481, label %485, label %482

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %447, i64 0, i32 24, i32 0
  %484 = load i32, i32* %483, align 4, !noalias !171
  br label %485

485:                                              ; preds = %478, %482
  %486 = phi i32 [ %484, %482 ], [ 0, %478 ]
  store i32 %472, i32* %32, align 4, !alias.scope !171
  store i32 %479, i32* %33, align 4, !alias.scope !171
  store i32 %486, i32* %34, align 4, !alias.scope !171
  %487 = select i1 %459, i32* %34, i32* %32
  %488 = select i1 %458, i32* %33, i32* %487
  %489 = load i32, i32* %488, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %463)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %464)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %465)
  %490 = bitcast %"class.blink::Color"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %490) #12
  %491 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %436, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %492 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %64, i64 0, i32 0
  store i32 %491, i32* %492, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %63, i32 %462, i32 %489, %"class.blink::Color"* nonnull dereferenceable(4) %64, i32 5) #12
  %493 = load i32, i32* %157, align 4
  %494 = icmp ugt i32 %493, 536870911
  br i1 %494, label %495, label %523

495:                                              ; preds = %485
  %496 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %63, i64 0, i32 1
  %497 = load i32, i32* %496, align 4
  %498 = icmp ugt i32 %497, 536870911
  br i1 %498, label %499, label %522

499:                                              ; preds = %495
  %500 = lshr i32 %497, 25
  %501 = and i32 %500, 15
  %502 = icmp eq i32 %501, 1
  br i1 %502, label %523, label %503

503:                                              ; preds = %499
  %504 = lshr i32 %493, 25
  %505 = and i32 %504, 15
  switch i32 %505, label %506 [
    i32 1, label %522
    i32 0, label %523
  ]

506:                                              ; preds = %503
  %507 = icmp eq i32 %501, 0
  br i1 %507, label %522, label %508

508:                                              ; preds = %506
  %509 = and i32 %497, 33554431
  %510 = and i32 %493, 33554431
  %511 = icmp eq i32 %509, %510
  br i1 %511, label %514, label %512

512:                                              ; preds = %508
  %513 = icmp ult i32 %509, %510
  br i1 %513, label %522, label %523

514:                                              ; preds = %508
  %515 = icmp eq i32 %501, %505
  br i1 %515, label %518, label %516

516:                                              ; preds = %514
  %517 = icmp ult i32 %501, %505
  br i1 %517, label %522, label %523

518:                                              ; preds = %514
  %519 = lshr i32 %497, 29
  %520 = lshr i32 %493, 29
  %521 = icmp ult i32 %519, %520
  br i1 %521, label %522, label %523

522:                                              ; preds = %518, %516, %512, %506, %503, %495
  br label %523

523:                                              ; preds = %485, %499, %503, %512, %516, %518, %522
  %524 = phi %"class.blink::CollapsedBorderValue"* [ %57, %522 ], [ %63, %518 ], [ %63, %512 ], [ %63, %516 ], [ %63, %485 ], [ %63, %499 ], [ %63, %503 ]
  %525 = bitcast %"class.blink::CollapsedBorderValue"* %524 to i64*
  %526 = load i64, i64* %525, align 4
  store i64 %526, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %490) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #12
  %527 = lshr i64 %526, 32
  %528 = trunc i64 %527 to i32
  %529 = icmp ugt i32 %528, 536870911
  br i1 %529, label %530, label %1044

530:                                              ; preds = %430, %523, %410
  %531 = phi i64 [ %406, %430 ], [ %526, %523 ], [ %406, %410 ]
  %532 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %533 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %532, i64 0, i32 7
  %534 = bitcast %"class.blink::LayoutObject"** %533 to %"class.blink::LayoutTableSection"**
  %535 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %534, align 8
  %536 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %532, i64 3
  %537 = bitcast %"class.blink::LayoutObject"* %536 to i32*
  %538 = load i32, i32* %537, align 8
  %539 = and i32 %538, 2147483647
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %734

541:                                              ; preds = %530
  %542 = bitcast %"class.blink::CollapsedBorderValue"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %542) #12
  %543 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %535, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %544 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %543, align 8
  %545 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %545)
  %546 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %546)
  %547 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %547)
  %548 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %544, i64 0, i32 0, i32 9
  %549 = bitcast [20 x i8]* %548 to i160*
  %550 = load i160, i160* %549, align 8, !noalias !174
  %551 = lshr i160 %550, 102
  %552 = trunc i160 %551 to i8
  %553 = and i8 %552, 3
  %554 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %544, i64 0, i32 0, i32 7, i32 0, i32 0
  %555 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %554, align 8, !noalias !174
  %556 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %555, i64 0, i32 27
  %557 = load i16, i16* %556, align 8, !noalias !174
  %558 = lshr i16 %557, 12
  %559 = zext i16 %558 to i32
  %560 = lshr i16 %557, 8
  %561 = and i16 %560, 15
  %562 = zext i16 %561 to i32
  %563 = lshr i16 %557, 4
  %564 = and i16 %563, 15
  %565 = zext i16 %564 to i32
  store i32 %559, i32* %29, align 4, !alias.scope !174
  store i32 %562, i32* %30, align 4, !alias.scope !174
  store i32 %565, i32* %31, align 4, !alias.scope !174
  %566 = icmp eq i8 %553, 0
  %567 = icmp eq i8 %553, 1
  %568 = select i1 %567, i32* %30, i32* %31
  %569 = select i1 %566, i32* %29, i32* %568
  %570 = load i32, i32* %569, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %545)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %546)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %547)
  %571 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %571)
  %572 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %572)
  %573 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %573)
  %574 = icmp ult i16 %557, 8192
  br i1 %574, label %578, label %575

575:                                              ; preds = %541
  %576 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %555, i64 0, i32 26, i32 0
  %577 = load i32, i32* %576, align 4, !noalias !177
  br label %578

578:                                              ; preds = %575, %541
  %579 = phi i32 [ %577, %575 ], [ 0, %541 ]
  %580 = and i16 %557, 3584
  %581 = icmp eq i16 %580, 0
  br i1 %581, label %585, label %582

582:                                              ; preds = %578
  %583 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %555, i64 0, i32 25, i32 0
  %584 = load i32, i32* %583, align 4, !noalias !177
  br label %585

585:                                              ; preds = %582, %578
  %586 = phi i32 [ %584, %582 ], [ 0, %578 ]
  %587 = and i16 %557, 224
  %588 = icmp eq i16 %587, 0
  br i1 %588, label %592, label %589

589:                                              ; preds = %585
  %590 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %555, i64 0, i32 24, i32 0
  %591 = load i32, i32* %590, align 4, !noalias !177
  br label %592

592:                                              ; preds = %585, %589
  %593 = phi i32 [ %591, %589 ], [ 0, %585 ]
  store i32 %579, i32* %26, align 4, !alias.scope !177
  store i32 %586, i32* %27, align 4, !alias.scope !177
  store i32 %593, i32* %28, align 4, !alias.scope !177
  %594 = select i1 %567, i32* %27, i32* %28
  %595 = select i1 %566, i32* %26, i32* %594
  %596 = load i32, i32* %595, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %571)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %572)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %573)
  %597 = bitcast %"class.blink::Color"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %597) #12
  %598 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %544, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %599 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %66, i64 0, i32 0
  store i32 %598, i32* %599, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %65, i32 %570, i32 %596, %"class.blink::Color"* nonnull dereferenceable(4) %66, i32 4) #12
  %600 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %65, i64 0, i32 1
  %601 = load i32, i32* %600, align 4
  %602 = icmp ugt i32 %601, 536870911
  br i1 %602, label %603, label %630

603:                                              ; preds = %592
  %604 = load i32, i32* %157, align 4
  %605 = icmp ugt i32 %604, 536870911
  br i1 %605, label %606, label %629

606:                                              ; preds = %603
  %607 = lshr i32 %604, 25
  %608 = and i32 %607, 15
  %609 = icmp eq i32 %608, 1
  br i1 %609, label %630, label %610

610:                                              ; preds = %606
  %611 = lshr i32 %601, 25
  %612 = and i32 %611, 15
  switch i32 %612, label %613 [
    i32 1, label %629
    i32 0, label %630
  ]

613:                                              ; preds = %610
  %614 = icmp eq i32 %608, 0
  br i1 %614, label %629, label %615

615:                                              ; preds = %613
  %616 = and i32 %604, 33554431
  %617 = and i32 %601, 33554431
  %618 = icmp eq i32 %616, %617
  br i1 %618, label %621, label %619

619:                                              ; preds = %615
  %620 = icmp ult i32 %616, %617
  br i1 %620, label %629, label %630

621:                                              ; preds = %615
  %622 = icmp eq i32 %608, %612
  br i1 %622, label %625, label %623

623:                                              ; preds = %621
  %624 = icmp ult i32 %608, %612
  br i1 %624, label %629, label %630

625:                                              ; preds = %621
  %626 = lshr i32 %604, 29
  %627 = lshr i32 %601, 29
  %628 = icmp ult i32 %626, %627
  br i1 %628, label %629, label %630

629:                                              ; preds = %625, %623, %619, %613, %610, %603
  br label %630

630:                                              ; preds = %592, %606, %610, %619, %623, %625, %629
  %631 = phi %"class.blink::CollapsedBorderValue"* [ %65, %629 ], [ %57, %625 ], [ %57, %619 ], [ %57, %623 ], [ %57, %592 ], [ %57, %606 ], [ %57, %610 ]
  %632 = bitcast %"class.blink::CollapsedBorderValue"* %631 to i64*
  %633 = load i64, i64* %632, align 4
  store i64 %633, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %597) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %542) #12
  %634 = lshr i64 %633, 32
  %635 = trunc i64 %634 to i32
  %636 = icmp ugt i32 %635, 536870911
  br i1 %636, label %637, label %1044

637:                                              ; preds = %630
  %638 = call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable12SectionAboveEPKNS_18LayoutTableSectionENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"* %82, %"class.blink::LayoutTableSection"* %535, i32 1) #12
  %639 = icmp eq %"class.blink::LayoutTableSection"* %638, null
  br i1 %639, label %736, label %640

640:                                              ; preds = %637
  %641 = bitcast %"class.blink::CollapsedBorderValue"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %641) #12
  %642 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %638, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %643 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %642, align 8
  %644 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %644)
  %645 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %645)
  %646 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %646)
  %647 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %643, i64 0, i32 0, i32 9
  %648 = bitcast [20 x i8]* %647 to i160*
  %649 = load i160, i160* %648, align 8, !noalias !180
  %650 = lshr i160 %649, 102
  %651 = trunc i160 %650 to i8
  %652 = and i8 %651, 3
  %653 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %643, i64 0, i32 0, i32 7, i32 0, i32 0
  %654 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %653, align 8, !noalias !180
  %655 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %654, i64 0, i32 27
  %656 = load i16, i16* %655, align 8, !noalias !180
  %657 = lshr i16 %656, 8
  %658 = and i16 %657, 15
  %659 = zext i16 %658 to i32
  %660 = and i16 %656, 15
  %661 = zext i16 %660 to i32
  %662 = lshr i16 %656, 4
  %663 = and i16 %662, 15
  %664 = zext i16 %663 to i32
  store i32 %659, i32* %23, align 4, !alias.scope !180
  store i32 %661, i32* %24, align 4, !alias.scope !180
  store i32 %664, i32* %25, align 4, !alias.scope !180
  %665 = icmp eq i8 %652, 0
  %666 = icmp eq i8 %652, 1
  %667 = select i1 %666, i32* %25, i32* %23
  %668 = select i1 %665, i32* %24, i32* %667
  %669 = load i32, i32* %668, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %644)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %645)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %646)
  %670 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %670)
  %671 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %671)
  %672 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %672)
  %673 = and i16 %656, 3584
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %678, label %675

675:                                              ; preds = %640
  %676 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %654, i64 0, i32 25, i32 0
  %677 = load i32, i32* %676, align 4, !noalias !183
  br label %678

678:                                              ; preds = %675, %640
  %679 = phi i32 [ %677, %675 ], [ 0, %640 ]
  %680 = and i16 %656, 14
  %681 = icmp eq i16 %680, 0
  br i1 %681, label %685, label %682

682:                                              ; preds = %678
  %683 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %654, i64 0, i32 23, i32 0
  %684 = load i32, i32* %683, align 4, !noalias !183
  br label %685

685:                                              ; preds = %682, %678
  %686 = phi i32 [ %684, %682 ], [ 0, %678 ]
  %687 = and i16 %656, 224
  %688 = icmp eq i16 %687, 0
  br i1 %688, label %692, label %689

689:                                              ; preds = %685
  %690 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %654, i64 0, i32 24, i32 0
  %691 = load i32, i32* %690, align 4, !noalias !183
  br label %692

692:                                              ; preds = %685, %689
  %693 = phi i32 [ %691, %689 ], [ 0, %685 ]
  store i32 %679, i32* %20, align 4, !alias.scope !183
  store i32 %686, i32* %21, align 4, !alias.scope !183
  store i32 %693, i32* %22, align 4, !alias.scope !183
  %694 = select i1 %666, i32* %22, i32* %20
  %695 = select i1 %665, i32* %21, i32* %694
  %696 = load i32, i32* %695, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %670)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %671)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %672)
  %697 = bitcast %"class.blink::Color"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %697) #12
  %698 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %643, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %699 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %68, i64 0, i32 0
  store i32 %698, i32* %699, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %67, i32 %669, i32 %696, %"class.blink::Color"* nonnull dereferenceable(4) %68, i32 4) #12
  %700 = load i32, i32* %157, align 4
  %701 = icmp ugt i32 %700, 536870911
  br i1 %701, label %702, label %730

702:                                              ; preds = %692
  %703 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %67, i64 0, i32 1
  %704 = load i32, i32* %703, align 4
  %705 = icmp ugt i32 %704, 536870911
  br i1 %705, label %706, label %729

706:                                              ; preds = %702
  %707 = lshr i32 %704, 25
  %708 = and i32 %707, 15
  %709 = icmp eq i32 %708, 1
  br i1 %709, label %730, label %710

710:                                              ; preds = %706
  %711 = lshr i32 %700, 25
  %712 = and i32 %711, 15
  switch i32 %712, label %713 [
    i32 1, label %729
    i32 0, label %730
  ]

713:                                              ; preds = %710
  %714 = icmp eq i32 %708, 0
  br i1 %714, label %729, label %715

715:                                              ; preds = %713
  %716 = and i32 %704, 33554431
  %717 = and i32 %700, 33554431
  %718 = icmp eq i32 %716, %717
  br i1 %718, label %721, label %719

719:                                              ; preds = %715
  %720 = icmp ult i32 %716, %717
  br i1 %720, label %729, label %730

721:                                              ; preds = %715
  %722 = icmp eq i32 %708, %712
  br i1 %722, label %725, label %723

723:                                              ; preds = %721
  %724 = icmp ult i32 %708, %712
  br i1 %724, label %729, label %730

725:                                              ; preds = %721
  %726 = lshr i32 %704, 29
  %727 = lshr i32 %700, 29
  %728 = icmp ult i32 %726, %727
  br i1 %728, label %729, label %730

729:                                              ; preds = %725, %723, %719, %713, %710, %702
  br label %730

730:                                              ; preds = %692, %706, %710, %719, %723, %725, %729
  %731 = phi %"class.blink::CollapsedBorderValue"* [ %57, %729 ], [ %67, %725 ], [ %67, %719 ], [ %67, %723 ], [ %67, %692 ], [ %67, %706 ], [ %67, %710 ]
  %732 = bitcast %"class.blink::CollapsedBorderValue"* %731 to i64*
  %733 = load i64, i64* %732, align 4
  store i64 %733, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %697) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %641) #12
  br label %1044

734:                                              ; preds = %530
  %735 = icmp eq %"class.blink::LayoutTableSection"* %535, null
  br i1 %735, label %736, label %1044

736:                                              ; preds = %637, %734
  %737 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %737) #12
  %738 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %82, i64 0, i32 10
  %739 = load i16, i16* %738, align 8, !noalias !186
  %740 = and i16 %739, 64
  %741 = icmp eq i16 %740, 0
  br i1 %741, label %742, label %743

742:                                              ; preds = %736
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %737, i8 0, i64 24, i1 false) #12, !alias.scope !186
  br label %751

743:                                              ; preds = %736
  %744 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %745 = load i32, i32* %744, align 8
  %746 = and i32 %745, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %69, %"class.blink::LayoutTable"* %82, i32 %746) #12
  %747 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %69, i64 0, i32 0
  %748 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %747, align 8
  %749 = icmp eq %"class.blink::LayoutTableCol"* %748, null
  br i1 %749, label %751, label %750

750:                                              ; preds = %743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %737) #12
  br label %755

751:                                              ; preds = %742, %743
  %752 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %69, i64 0, i32 1
  %753 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %752, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %737) #12
  %754 = icmp eq %"class.blink::LayoutTableCol"* %753, null
  br i1 %754, label %951, label %755

755:                                              ; preds = %750, %751
  %756 = phi %"class.blink::LayoutTableCol"* [ %748, %750 ], [ %753, %751 ]
  %757 = bitcast %"class.blink::CollapsedBorderValue"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %757) #12
  %758 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %756, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %759 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %758, align 8
  %760 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %760)
  %761 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %761)
  %762 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %762)
  %763 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %759, i64 0, i32 0, i32 9
  %764 = bitcast [20 x i8]* %763 to i160*
  %765 = load i160, i160* %764, align 8, !noalias !189
  %766 = lshr i160 %765, 102
  %767 = trunc i160 %766 to i8
  %768 = and i8 %767, 3
  %769 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %759, i64 0, i32 0, i32 7, i32 0, i32 0
  %770 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %769, align 8, !noalias !189
  %771 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %770, i64 0, i32 27
  %772 = load i16, i16* %771, align 8, !noalias !189
  %773 = lshr i16 %772, 12
  %774 = zext i16 %773 to i32
  %775 = lshr i16 %772, 8
  %776 = and i16 %775, 15
  %777 = zext i16 %776 to i32
  %778 = lshr i16 %772, 4
  %779 = and i16 %778, 15
  %780 = zext i16 %779 to i32
  store i32 %774, i32* %17, align 4, !alias.scope !189
  store i32 %777, i32* %18, align 4, !alias.scope !189
  store i32 %780, i32* %19, align 4, !alias.scope !189
  %781 = icmp eq i8 %768, 0
  %782 = icmp eq i8 %768, 1
  %783 = select i1 %782, i32* %18, i32* %19
  %784 = select i1 %781, i32* %17, i32* %783
  %785 = load i32, i32* %784, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %760)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %761)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %762)
  %786 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %786)
  %787 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %787)
  %788 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %788)
  %789 = icmp ult i16 %772, 8192
  br i1 %789, label %793, label %790

790:                                              ; preds = %755
  %791 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %770, i64 0, i32 26, i32 0
  %792 = load i32, i32* %791, align 4, !noalias !192
  br label %793

793:                                              ; preds = %790, %755
  %794 = phi i32 [ %792, %790 ], [ 0, %755 ]
  %795 = and i16 %772, 3584
  %796 = icmp eq i16 %795, 0
  br i1 %796, label %800, label %797

797:                                              ; preds = %793
  %798 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %770, i64 0, i32 25, i32 0
  %799 = load i32, i32* %798, align 4, !noalias !192
  br label %800

800:                                              ; preds = %797, %793
  %801 = phi i32 [ %799, %797 ], [ 0, %793 ]
  %802 = and i16 %772, 224
  %803 = icmp eq i16 %802, 0
  br i1 %803, label %807, label %804

804:                                              ; preds = %800
  %805 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %770, i64 0, i32 24, i32 0
  %806 = load i32, i32* %805, align 4, !noalias !192
  br label %807

807:                                              ; preds = %800, %804
  %808 = phi i32 [ %806, %804 ], [ 0, %800 ]
  store i32 %794, i32* %14, align 4, !alias.scope !192
  store i32 %801, i32* %15, align 4, !alias.scope !192
  store i32 %808, i32* %16, align 4, !alias.scope !192
  %809 = select i1 %782, i32* %15, i32* %16
  %810 = select i1 %781, i32* %14, i32* %809
  %811 = load i32, i32* %810, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %786)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %787)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %788)
  %812 = bitcast %"class.blink::Color"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %812) #12
  %813 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %759, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %814 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %71, i64 0, i32 0
  store i32 %813, i32* %814, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %70, i32 %785, i32 %811, %"class.blink::Color"* nonnull dereferenceable(4) %71, i32 3) #12
  %815 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %70, i64 0, i32 1
  %816 = load i32, i32* %815, align 4
  %817 = icmp ugt i32 %816, 536870911
  br i1 %817, label %818, label %845

818:                                              ; preds = %807
  %819 = load i32, i32* %157, align 4
  %820 = icmp ugt i32 %819, 536870911
  br i1 %820, label %821, label %844

821:                                              ; preds = %818
  %822 = lshr i32 %819, 25
  %823 = and i32 %822, 15
  %824 = icmp eq i32 %823, 1
  br i1 %824, label %845, label %825

825:                                              ; preds = %821
  %826 = lshr i32 %816, 25
  %827 = and i32 %826, 15
  switch i32 %827, label %828 [
    i32 1, label %844
    i32 0, label %845
  ]

828:                                              ; preds = %825
  %829 = icmp eq i32 %823, 0
  br i1 %829, label %844, label %830

830:                                              ; preds = %828
  %831 = and i32 %819, 33554431
  %832 = and i32 %816, 33554431
  %833 = icmp eq i32 %831, %832
  br i1 %833, label %836, label %834

834:                                              ; preds = %830
  %835 = icmp ult i32 %831, %832
  br i1 %835, label %844, label %845

836:                                              ; preds = %830
  %837 = icmp eq i32 %823, %827
  br i1 %837, label %840, label %838

838:                                              ; preds = %836
  %839 = icmp ult i32 %823, %827
  br i1 %839, label %844, label %845

840:                                              ; preds = %836
  %841 = lshr i32 %819, 29
  %842 = lshr i32 %816, 29
  %843 = icmp ult i32 %841, %842
  br i1 %843, label %844, label %845

844:                                              ; preds = %840, %838, %834, %828, %825, %818
  br label %845

845:                                              ; preds = %807, %821, %825, %834, %838, %840, %844
  %846 = phi %"class.blink::CollapsedBorderValue"* [ %70, %844 ], [ %57, %840 ], [ %57, %834 ], [ %57, %838 ], [ %57, %807 ], [ %57, %821 ], [ %57, %825 ]
  %847 = bitcast %"class.blink::CollapsedBorderValue"* %846 to i64*
  %848 = load i64, i64* %847, align 4
  store i64 %848, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %812) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %757) #12
  %849 = lshr i64 %848, 32
  %850 = trunc i64 %849 to i32
  %851 = icmp ugt i32 %850, 536870911
  br i1 %851, label %852, label %1044

852:                                              ; preds = %845
  %853 = call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"* nonnull %756) #12
  %854 = icmp eq %"class.blink::LayoutTableCol"* %853, null
  br i1 %854, label %951, label %855

855:                                              ; preds = %852
  %856 = bitcast %"class.blink::CollapsedBorderValue"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %856) #12
  %857 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %853, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %858 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %857, align 8
  %859 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %859)
  %860 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %860)
  %861 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %861)
  %862 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %858, i64 0, i32 0, i32 9
  %863 = bitcast [20 x i8]* %862 to i160*
  %864 = load i160, i160* %863, align 8, !noalias !195
  %865 = lshr i160 %864, 102
  %866 = trunc i160 %865 to i8
  %867 = and i8 %866, 3
  %868 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %858, i64 0, i32 0, i32 7, i32 0, i32 0
  %869 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %868, align 8, !noalias !195
  %870 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %869, i64 0, i32 27
  %871 = load i16, i16* %870, align 8, !noalias !195
  %872 = lshr i16 %871, 12
  %873 = zext i16 %872 to i32
  %874 = lshr i16 %871, 8
  %875 = and i16 %874, 15
  %876 = zext i16 %875 to i32
  %877 = lshr i16 %871, 4
  %878 = and i16 %877, 15
  %879 = zext i16 %878 to i32
  store i32 %873, i32* %11, align 4, !alias.scope !195
  store i32 %876, i32* %12, align 4, !alias.scope !195
  store i32 %879, i32* %13, align 4, !alias.scope !195
  %880 = icmp eq i8 %867, 0
  %881 = icmp eq i8 %867, 1
  %882 = select i1 %881, i32* %12, i32* %13
  %883 = select i1 %880, i32* %11, i32* %882
  %884 = load i32, i32* %883, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %859)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %860)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %861)
  %885 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %885)
  %886 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %886)
  %887 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %887)
  %888 = icmp ult i16 %871, 8192
  br i1 %888, label %892, label %889

889:                                              ; preds = %855
  %890 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %869, i64 0, i32 26, i32 0
  %891 = load i32, i32* %890, align 4, !noalias !198
  br label %892

892:                                              ; preds = %889, %855
  %893 = phi i32 [ %891, %889 ], [ 0, %855 ]
  %894 = and i16 %871, 3584
  %895 = icmp eq i16 %894, 0
  br i1 %895, label %899, label %896

896:                                              ; preds = %892
  %897 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %869, i64 0, i32 25, i32 0
  %898 = load i32, i32* %897, align 4, !noalias !198
  br label %899

899:                                              ; preds = %896, %892
  %900 = phi i32 [ %898, %896 ], [ 0, %892 ]
  %901 = and i16 %871, 224
  %902 = icmp eq i16 %901, 0
  br i1 %902, label %906, label %903

903:                                              ; preds = %899
  %904 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %869, i64 0, i32 24, i32 0
  %905 = load i32, i32* %904, align 4, !noalias !198
  br label %906

906:                                              ; preds = %899, %903
  %907 = phi i32 [ %905, %903 ], [ 0, %899 ]
  store i32 %893, i32* %8, align 4, !alias.scope !198
  store i32 %900, i32* %9, align 4, !alias.scope !198
  store i32 %907, i32* %10, align 4, !alias.scope !198
  %908 = select i1 %881, i32* %9, i32* %10
  %909 = select i1 %880, i32* %8, i32* %908
  %910 = load i32, i32* %909, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %885)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %886)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %887)
  %911 = bitcast %"class.blink::Color"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %911) #12
  %912 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %858, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %913 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %73, i64 0, i32 0
  store i32 %912, i32* %913, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %72, i32 %884, i32 %910, %"class.blink::Color"* nonnull dereferenceable(4) %73, i32 2) #12
  %914 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %72, i64 0, i32 1
  %915 = load i32, i32* %914, align 4
  %916 = icmp ugt i32 %915, 536870911
  br i1 %916, label %917, label %944

917:                                              ; preds = %906
  %918 = load i32, i32* %157, align 4
  %919 = icmp ugt i32 %918, 536870911
  br i1 %919, label %920, label %943

920:                                              ; preds = %917
  %921 = lshr i32 %918, 25
  %922 = and i32 %921, 15
  %923 = icmp eq i32 %922, 1
  br i1 %923, label %944, label %924

924:                                              ; preds = %920
  %925 = lshr i32 %915, 25
  %926 = and i32 %925, 15
  switch i32 %926, label %927 [
    i32 1, label %943
    i32 0, label %944
  ]

927:                                              ; preds = %924
  %928 = icmp eq i32 %922, 0
  br i1 %928, label %943, label %929

929:                                              ; preds = %927
  %930 = and i32 %918, 33554431
  %931 = and i32 %915, 33554431
  %932 = icmp eq i32 %930, %931
  br i1 %932, label %935, label %933

933:                                              ; preds = %929
  %934 = icmp ult i32 %930, %931
  br i1 %934, label %943, label %944

935:                                              ; preds = %929
  %936 = icmp eq i32 %922, %926
  br i1 %936, label %939, label %937

937:                                              ; preds = %935
  %938 = icmp ult i32 %922, %926
  br i1 %938, label %943, label %944

939:                                              ; preds = %935
  %940 = lshr i32 %918, 29
  %941 = lshr i32 %915, 29
  %942 = icmp ult i32 %940, %941
  br i1 %942, label %943, label %944

943:                                              ; preds = %939, %937, %933, %927, %924, %917
  br label %944

944:                                              ; preds = %906, %920, %924, %933, %937, %939, %943
  %945 = phi %"class.blink::CollapsedBorderValue"* [ %72, %943 ], [ %57, %939 ], [ %57, %933 ], [ %57, %937 ], [ %57, %906 ], [ %57, %920 ], [ %57, %924 ]
  %946 = bitcast %"class.blink::CollapsedBorderValue"* %945 to i64*
  %947 = load i64, i64* %946, align 4
  store i64 %947, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %911) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %856) #12
  %948 = lshr i64 %947, 32
  %949 = trunc i64 %948 to i32
  %950 = icmp ugt i32 %949, 536870911
  br i1 %950, label %951, label %1044

951:                                              ; preds = %944, %852, %751
  %952 = bitcast %"class.blink::CollapsedBorderValue"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %952) #12
  %953 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %954 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %953, align 8
  %955 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %955)
  %956 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %956)
  %957 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %957)
  %958 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %954, i64 0, i32 0, i32 9
  %959 = bitcast [20 x i8]* %958 to i160*
  %960 = load i160, i160* %959, align 8, !noalias !201
  %961 = lshr i160 %960, 102
  %962 = trunc i160 %961 to i8
  %963 = and i8 %962, 3
  %964 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %954, i64 0, i32 0, i32 7, i32 0, i32 0
  %965 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %964, align 8, !noalias !201
  %966 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %965, i64 0, i32 27
  %967 = load i16, i16* %966, align 8, !noalias !201
  %968 = lshr i16 %967, 12
  %969 = zext i16 %968 to i32
  %970 = lshr i16 %967, 8
  %971 = and i16 %970, 15
  %972 = zext i16 %971 to i32
  %973 = lshr i16 %967, 4
  %974 = and i16 %973, 15
  %975 = zext i16 %974 to i32
  store i32 %969, i32* %5, align 4, !alias.scope !201
  store i32 %972, i32* %6, align 4, !alias.scope !201
  store i32 %975, i32* %7, align 4, !alias.scope !201
  %976 = icmp eq i8 %963, 0
  %977 = icmp eq i8 %963, 1
  %978 = select i1 %977, i32* %6, i32* %7
  %979 = select i1 %976, i32* %5, i32* %978
  %980 = load i32, i32* %979, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %955)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %956)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %957)
  %981 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %981)
  %982 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %982)
  %983 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %983)
  %984 = icmp ult i16 %967, 8192
  br i1 %984, label %988, label %985

985:                                              ; preds = %951
  %986 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %965, i64 0, i32 26, i32 0
  %987 = load i32, i32* %986, align 4, !noalias !204
  br label %988

988:                                              ; preds = %985, %951
  %989 = phi i32 [ %987, %985 ], [ 0, %951 ]
  %990 = and i16 %967, 3584
  %991 = icmp eq i16 %990, 0
  br i1 %991, label %995, label %992

992:                                              ; preds = %988
  %993 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %965, i64 0, i32 25, i32 0
  %994 = load i32, i32* %993, align 4, !noalias !204
  br label %995

995:                                              ; preds = %992, %988
  %996 = phi i32 [ %994, %992 ], [ 0, %988 ]
  %997 = and i16 %967, 224
  %998 = icmp eq i16 %997, 0
  br i1 %998, label %1002, label %999

999:                                              ; preds = %995
  %1000 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %965, i64 0, i32 24, i32 0
  %1001 = load i32, i32* %1000, align 4, !noalias !204
  br label %1002

1002:                                             ; preds = %995, %999
  %1003 = phi i32 [ %1001, %999 ], [ 0, %995 ]
  store i32 %989, i32* %2, align 4, !alias.scope !204
  store i32 %996, i32* %3, align 4, !alias.scope !204
  store i32 %1003, i32* %4, align 4, !alias.scope !204
  %1004 = select i1 %977, i32* %3, i32* %4
  %1005 = select i1 %976, i32* %2, i32* %1004
  %1006 = load i32, i32* %1005, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %981)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %982)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %983)
  %1007 = bitcast %"class.blink::Color"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1007) #12
  %1008 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %954, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %1009 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %75, i64 0, i32 0
  store i32 %1008, i32* %1009, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %74, i32 %980, i32 %1006, %"class.blink::Color"* nonnull dereferenceable(4) %75, i32 1) #12
  %1010 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %74, i64 0, i32 1
  %1011 = load i32, i32* %1010, align 4
  %1012 = icmp ugt i32 %1011, 536870911
  br i1 %1012, label %1013, label %1040

1013:                                             ; preds = %1002
  %1014 = load i32, i32* %157, align 4
  %1015 = icmp ugt i32 %1014, 536870911
  br i1 %1015, label %1016, label %1039

1016:                                             ; preds = %1013
  %1017 = lshr i32 %1014, 25
  %1018 = and i32 %1017, 15
  %1019 = icmp eq i32 %1018, 1
  br i1 %1019, label %1040, label %1020

1020:                                             ; preds = %1016
  %1021 = lshr i32 %1011, 25
  %1022 = and i32 %1021, 15
  switch i32 %1022, label %1023 [
    i32 1, label %1039
    i32 0, label %1040
  ]

1023:                                             ; preds = %1020
  %1024 = icmp eq i32 %1018, 0
  br i1 %1024, label %1039, label %1025

1025:                                             ; preds = %1023
  %1026 = and i32 %1014, 33554431
  %1027 = and i32 %1011, 33554431
  %1028 = icmp eq i32 %1026, %1027
  br i1 %1028, label %1031, label %1029

1029:                                             ; preds = %1025
  %1030 = icmp ult i32 %1026, %1027
  br i1 %1030, label %1039, label %1040

1031:                                             ; preds = %1025
  %1032 = icmp eq i32 %1018, %1022
  br i1 %1032, label %1035, label %1033

1033:                                             ; preds = %1031
  %1034 = icmp ult i32 %1018, %1022
  br i1 %1034, label %1039, label %1040

1035:                                             ; preds = %1031
  %1036 = lshr i32 %1014, 29
  %1037 = lshr i32 %1011, 29
  %1038 = icmp ult i32 %1036, %1037
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1035, %1033, %1029, %1023, %1020, %1013
  br label %1040

1040:                                             ; preds = %1002, %1016, %1020, %1029, %1033, %1035, %1039
  %1041 = phi %"class.blink::CollapsedBorderValue"* [ %74, %1039 ], [ %57, %1035 ], [ %57, %1029 ], [ %57, %1033 ], [ %57, %1002 ], [ %57, %1016 ], [ %57, %1020 ]
  %1042 = bitcast %"class.blink::CollapsedBorderValue"* %1041 to i64*
  %1043 = load i64, i64* %1042, align 4
  store i64 %1043, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1007) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %952) #12
  br label %1044

1044:                                             ; preds = %1040, %730, %734, %944, %845, %630, %523, %403, %306
  %1045 = phi i64 [ %309, %306 ], [ %406, %403 ], [ %526, %523 ], [ %633, %630 ], [ %848, %845 ], [ %947, %944 ], [ %733, %730 ], [ %1043, %1040 ], [ %531, %734 ]
  %1046 = and i64 %1045, -4294967296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #12
  br label %1047

1047:                                             ; preds = %96, %100, %1044
  %1048 = phi i64 [ %1046, %1044 ], [ %105, %100 ], [ 0, %96 ]
  %1049 = phi i64 [ %1045, %1044 ], [ %104, %100 ], [ 0, %96 ]
  %1050 = and i64 %1049, 4294967295
  %1051 = or i64 %1050, %1048
  ret i64 %1051
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CollapsedBorderValue"* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv(%"class.blink::CollapsedBorderValues"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 3
  ret %"class.blink::CollapsedBorderValue"* %2
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink35GetCSSPropertyBorderBlockStartColorEv() local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink33GetCSSPropertyBorderBlockEndColorEv() local_unnamed_addr #1

declare void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"*, i32, i32, %"class.blink::Color"* dereferenceable(4), i32) unnamed_addr #1

declare %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable12SectionAboveEPKNS_18LayoutTableSectionENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #1

declare %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutTableCell27ComputeCollapsedAfterBorderEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i64, align 8
  %57 = bitcast i64* %56 to %"class.blink::CollapsedBorderValue"*
  %58 = alloca %"class.blink::Color", align 4
  %59 = alloca %"class.blink::CollapsedBorderValue", align 4
  %60 = alloca %"class.blink::Color", align 4
  %61 = alloca %"class.blink::CollapsedBorderValue", align 4
  %62 = alloca %"class.blink::Color", align 4
  %63 = alloca %"class.blink::CollapsedBorderValue", align 4
  %64 = alloca %"class.blink::Color", align 4
  %65 = alloca %"class.blink::CollapsedBorderValue", align 4
  %66 = alloca %"class.blink::Color", align 4
  %67 = alloca %"class.blink::CollapsedBorderValue", align 4
  %68 = alloca %"class.blink::Color", align 4
  %69 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %70 = alloca %"class.blink::CollapsedBorderValue", align 4
  %71 = alloca %"class.blink::Color", align 4
  %72 = alloca %"class.blink::CollapsedBorderValue", align 4
  %73 = alloca %"class.blink::Color", align 4
  %74 = alloca %"class.blink::CollapsedBorderValue", align 4
  %75 = alloca %"class.blink::Color", align 4
  %76 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 7
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 7
  %81 = bitcast %"class.blink::LayoutObject"** %80 to %"class.blink::LayoutTable"**
  %82 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %81, align 8
  %83 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellBelowERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %82, %"class.blink::LayoutTableCell"* dereferenceable(312) %0) #12
  %84 = icmp eq %"class.blink::LayoutTableCell"* %83, null
  br i1 %84, label %106, label %85

85:                                               ; preds = %1
  %86 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = xor i32 %89, %87
  %91 = and i32 %90, 33554431
  %92 = icmp ne i32 %91, 0
  %93 = and i32 %89, 1073741824
  %94 = icmp eq i32 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %106, label %96

96:                                               ; preds = %85
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %83) #12
  %97 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %97, align 8
  %99 = icmp eq %"class.blink::CollapsedBorderValues"* %98, null
  br i1 %99, label %1095, label %100

100:                                              ; preds = %96
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %83) #12
  %101 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %97, align 8
  %102 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %101, i64 0, i32 0, i64 2
  %103 = bitcast %"class.blink::CollapsedBorderValue"* %102 to i64*
  %104 = load i64, i64* %103, align 4
  %105 = and i64 %104, -4294967296
  br label %1095

106:                                              ; preds = %85, %1
  %107 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink35GetCSSPropertyBorderBlockStartColorEv() #12
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 7
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 7
  %112 = bitcast %"class.blink::LayoutObject"** %111 to %"class.blink::LayoutTable"**
  %113 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %115 = bitcast %"class.blink::ComputedStyle"** %114 to %"class.blink::ComputedStyleBase"**
  %116 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %116, i64 0, i32 9
  %118 = bitcast [20 x i8]* %117 to i160*
  %119 = load i160, i160* %118, align 8
  %120 = lshr i160 %119, 115
  %121 = trunc i160 %120 to i8
  %122 = and i8 %121, 1
  %123 = lshr i160 %119, 102
  %124 = trunc i160 %123 to i8
  %125 = and i8 %124, 3
  %126 = bitcast %"class.blink::CSSProperty"* %107 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %127 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %126, align 8
  %128 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %127, i64 11
  %129 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %128, align 8
  %130 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %129(%"class.blink::CSSProperty"* %107, i8 zeroext %122, i8 zeroext %125) #12
  %131 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink33GetCSSPropertyBorderBlockEndColorEv() #12
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 7
  %134 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %134, i64 0, i32 7
  %136 = bitcast %"class.blink::LayoutObject"** %135 to %"class.blink::LayoutTable"**
  %137 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %139 = bitcast %"class.blink::ComputedStyle"** %138 to %"class.blink::ComputedStyleBase"**
  %140 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %140, i64 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8
  %144 = lshr i160 %143, 115
  %145 = trunc i160 %144 to i8
  %146 = and i8 %145, 1
  %147 = lshr i160 %143, 102
  %148 = trunc i160 %147 to i8
  %149 = and i8 %148, 3
  %150 = bitcast %"class.blink::CSSProperty"* %131 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %151 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %150, align 8
  %152 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %151, i64 11
  %153 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %152, align 8
  %154 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %153(%"class.blink::CSSProperty"* %131, i8 zeroext %146, i8 zeroext %149) #12
  %155 = bitcast i64* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #12
  %156 = bitcast i64* %56 to i32*
  store i32 -1431655766, i32* %156, align 8
  %157 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %57, i64 0, i32 1
  store i32 -1431655766, i32* %157, align 4
  %158 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %159 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %158, align 8
  %160 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160)
  %161 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161)
  %162 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162)
  %163 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %159, i64 0, i32 0, i32 9
  %164 = bitcast [20 x i8]* %163 to i160*
  %165 = load i160, i160* %164, align 8, !noalias !207
  %166 = lshr i160 %165, 102
  %167 = trunc i160 %166 to i8
  %168 = and i8 %167, 3
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %159, i64 0, i32 0, i32 7, i32 0, i32 0
  %170 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %169, align 8, !noalias !207
  %171 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 27
  %172 = load i16, i16* %171, align 8, !noalias !207
  %173 = lshr i16 %172, 8
  %174 = and i16 %173, 15
  %175 = zext i16 %174 to i32
  %176 = and i16 %172, 15
  %177 = zext i16 %176 to i32
  %178 = lshr i16 %172, 4
  %179 = and i16 %178, 15
  %180 = zext i16 %179 to i32
  store i32 %175, i32* %53, align 4, !alias.scope !207
  store i32 %177, i32* %54, align 4, !alias.scope !207
  store i32 %180, i32* %55, align 4, !alias.scope !207
  %181 = icmp eq i8 %168, 0
  %182 = icmp eq i8 %168, 1
  %183 = select i1 %182, i32* %55, i32* %53
  %184 = select i1 %181, i32* %54, i32* %183
  %185 = load i32, i32* %184, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162)
  %186 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186)
  %187 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187)
  %188 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188)
  %189 = and i16 %172, 3584
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %106
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 25, i32 0
  %193 = load i32, i32* %192, align 4, !noalias !210
  br label %194

194:                                              ; preds = %191, %106
  %195 = phi i32 [ %193, %191 ], [ 0, %106 ]
  %196 = and i16 %172, 14
  %197 = icmp eq i16 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 23, i32 0
  %200 = load i32, i32* %199, align 4, !noalias !210
  br label %201

201:                                              ; preds = %198, %194
  %202 = phi i32 [ %200, %198 ], [ 0, %194 ]
  %203 = and i16 %172, 224
  %204 = icmp eq i16 %203, 0
  br i1 %204, label %208, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %170, i64 0, i32 24, i32 0
  %207 = load i32, i32* %206, align 4, !noalias !210
  br label %208

208:                                              ; preds = %201, %205
  %209 = phi i32 [ %207, %205 ], [ 0, %201 ]
  store i32 %195, i32* %50, align 4, !alias.scope !210
  store i32 %202, i32* %51, align 4, !alias.scope !210
  store i32 %209, i32* %52, align 4, !alias.scope !210
  %210 = select i1 %182, i32* %52, i32* %50
  %211 = select i1 %181, i32* %51, i32* %210
  %212 = load i32, i32* %211, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188)
  %213 = bitcast %"class.blink::Color"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %213) #12
  %214 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %159, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %215 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %58, i64 0, i32 0
  store i32 %214, i32* %215, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %57, i32 %185, i32 %212, %"class.blink::Color"* nonnull dereferenceable(4) %58, i32 6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %213) #12
  %216 = icmp ne %"class.blink::LayoutTableCell"* %83, null
  br i1 %216, label %217, label %313

217:                                              ; preds = %208
  %218 = bitcast %"class.blink::CollapsedBorderValue"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #12
  %219 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %220 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %219, align 8
  %221 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221)
  %222 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222)
  %223 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223)
  %224 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %220, i64 0, i32 0, i32 9
  %225 = bitcast [20 x i8]* %224 to i160*
  %226 = load i160, i160* %225, align 8, !noalias !213
  %227 = lshr i160 %226, 102
  %228 = trunc i160 %227 to i8
  %229 = and i8 %228, 3
  %230 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %220, i64 0, i32 0, i32 7, i32 0, i32 0
  %231 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %230, align 8, !noalias !213
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 27
  %233 = load i16, i16* %232, align 8, !noalias !213
  %234 = lshr i16 %233, 12
  %235 = zext i16 %234 to i32
  %236 = lshr i16 %233, 8
  %237 = and i16 %236, 15
  %238 = zext i16 %237 to i32
  %239 = lshr i16 %233, 4
  %240 = and i16 %239, 15
  %241 = zext i16 %240 to i32
  store i32 %235, i32* %47, align 4, !alias.scope !213
  store i32 %238, i32* %48, align 4, !alias.scope !213
  store i32 %241, i32* %49, align 4, !alias.scope !213
  %242 = icmp eq i8 %229, 0
  %243 = icmp eq i8 %229, 1
  %244 = select i1 %243, i32* %48, i32* %49
  %245 = select i1 %242, i32* %47, i32* %244
  %246 = load i32, i32* %245, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223)
  %247 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247)
  %248 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248)
  %249 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %249)
  %250 = icmp ult i16 %233, 8192
  br i1 %250, label %254, label %251

251:                                              ; preds = %217
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 26, i32 0
  %253 = load i32, i32* %252, align 4, !noalias !216
  br label %254

254:                                              ; preds = %251, %217
  %255 = phi i32 [ %253, %251 ], [ 0, %217 ]
  %256 = and i16 %233, 3584
  %257 = icmp eq i16 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 25, i32 0
  %260 = load i32, i32* %259, align 4, !noalias !216
  br label %261

261:                                              ; preds = %258, %254
  %262 = phi i32 [ %260, %258 ], [ 0, %254 ]
  %263 = and i16 %233, 224
  %264 = icmp eq i16 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 24, i32 0
  %267 = load i32, i32* %266, align 4, !noalias !216
  br label %268

268:                                              ; preds = %261, %265
  %269 = phi i32 [ %267, %265 ], [ 0, %261 ]
  store i32 %255, i32* %44, align 4, !alias.scope !216
  store i32 %262, i32* %45, align 4, !alias.scope !216
  store i32 %269, i32* %46, align 4, !alias.scope !216
  %270 = select i1 %243, i32* %45, i32* %46
  %271 = select i1 %242, i32* %44, i32* %270
  %272 = load i32, i32* %271, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %249)
  %273 = bitcast %"class.blink::Color"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %273) #12
  %274 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %220, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %275 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %60, i64 0, i32 0
  store i32 %274, i32* %275, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %59, i32 %246, i32 %272, %"class.blink::Color"* nonnull dereferenceable(4) %60, i32 6) #12
  %276 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %59, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = icmp ugt i32 %277, 536870911
  br i1 %278, label %279, label %306

279:                                              ; preds = %268
  %280 = load i32, i32* %157, align 4
  %281 = icmp ugt i32 %280, 536870911
  br i1 %281, label %282, label %305

282:                                              ; preds = %279
  %283 = lshr i32 %280, 25
  %284 = and i32 %283, 15
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %306, label %286

286:                                              ; preds = %282
  %287 = lshr i32 %277, 25
  %288 = and i32 %287, 15
  switch i32 %288, label %289 [
    i32 1, label %305
    i32 0, label %306
  ]

289:                                              ; preds = %286
  %290 = icmp eq i32 %284, 0
  br i1 %290, label %305, label %291

291:                                              ; preds = %289
  %292 = and i32 %280, 33554431
  %293 = and i32 %277, 33554431
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = icmp ult i32 %292, %293
  br i1 %296, label %305, label %306

297:                                              ; preds = %291
  %298 = icmp eq i32 %284, %288
  br i1 %298, label %301, label %299

299:                                              ; preds = %297
  %300 = icmp ult i32 %284, %288
  br i1 %300, label %305, label %306

301:                                              ; preds = %297
  %302 = lshr i32 %280, 29
  %303 = lshr i32 %277, 29
  %304 = icmp ult i32 %302, %303
  br i1 %304, label %305, label %306

305:                                              ; preds = %301, %299, %295, %289, %286, %279
  br label %306

306:                                              ; preds = %268, %282, %286, %295, %299, %301, %305
  %307 = phi %"class.blink::CollapsedBorderValue"* [ %59, %305 ], [ %57, %301 ], [ %57, %295 ], [ %57, %299 ], [ %57, %268 ], [ %57, %282 ], [ %57, %286 ]
  %308 = bitcast %"class.blink::CollapsedBorderValue"* %307 to i64*
  %309 = load i64, i64* %308, align 4
  store i64 %309, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %273) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #12
  %310 = lshr i64 %309, 32
  %311 = trunc i64 %310 to i32
  %312 = icmp ugt i32 %311, 536870911
  br i1 %312, label %313, label %1092

313:                                              ; preds = %306, %208
  %314 = bitcast %"class.blink::CollapsedBorderValue"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #12
  %315 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %316 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %315, i64 0, i32 5, i32 0
  %317 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %316, align 8
  %318 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %318)
  %319 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %319)
  %320 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %320)
  %321 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %317, i64 0, i32 0, i32 9
  %322 = bitcast [20 x i8]* %321 to i160*
  %323 = load i160, i160* %322, align 8, !noalias !219
  %324 = lshr i160 %323, 102
  %325 = trunc i160 %324 to i8
  %326 = and i8 %325, 3
  %327 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %317, i64 0, i32 0, i32 7, i32 0, i32 0
  %328 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %327, align 8, !noalias !219
  %329 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 27
  %330 = load i16, i16* %329, align 8, !noalias !219
  %331 = lshr i16 %330, 8
  %332 = and i16 %331, 15
  %333 = zext i16 %332 to i32
  %334 = and i16 %330, 15
  %335 = zext i16 %334 to i32
  %336 = lshr i16 %330, 4
  %337 = and i16 %336, 15
  %338 = zext i16 %337 to i32
  store i32 %333, i32* %41, align 4, !alias.scope !219
  store i32 %335, i32* %42, align 4, !alias.scope !219
  store i32 %338, i32* %43, align 4, !alias.scope !219
  %339 = icmp eq i8 %326, 0
  %340 = icmp eq i8 %326, 1
  %341 = select i1 %340, i32* %43, i32* %41
  %342 = select i1 %339, i32* %42, i32* %341
  %343 = load i32, i32* %342, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %318)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %319)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %320)
  %344 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %344)
  %345 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %345)
  %346 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %346)
  %347 = and i16 %330, 3584
  %348 = icmp eq i16 %347, 0
  br i1 %348, label %352, label %349

349:                                              ; preds = %313
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 25, i32 0
  %351 = load i32, i32* %350, align 4, !noalias !222
  br label %352

352:                                              ; preds = %349, %313
  %353 = phi i32 [ %351, %349 ], [ 0, %313 ]
  %354 = and i16 %330, 14
  %355 = icmp eq i16 %354, 0
  br i1 %355, label %359, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 23, i32 0
  %358 = load i32, i32* %357, align 4, !noalias !222
  br label %359

359:                                              ; preds = %356, %352
  %360 = phi i32 [ %358, %356 ], [ 0, %352 ]
  %361 = and i16 %330, 224
  %362 = icmp eq i16 %361, 0
  br i1 %362, label %366, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 24, i32 0
  %365 = load i32, i32* %364, align 4, !noalias !222
  br label %366

366:                                              ; preds = %359, %363
  %367 = phi i32 [ %365, %363 ], [ 0, %359 ]
  store i32 %353, i32* %38, align 4, !alias.scope !222
  store i32 %360, i32* %39, align 4, !alias.scope !222
  store i32 %367, i32* %40, align 4, !alias.scope !222
  %368 = select i1 %340, i32* %40, i32* %38
  %369 = select i1 %339, i32* %39, i32* %368
  %370 = load i32, i32* %369, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %345)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %346)
  %371 = bitcast %"class.blink::Color"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %371) #12
  %372 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %317, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %373 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %62, i64 0, i32 0
  store i32 %372, i32* %373, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %61, i32 %343, i32 %370, %"class.blink::Color"* nonnull dereferenceable(4) %62, i32 5) #12
  %374 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %61, i64 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = icmp ugt i32 %375, 536870911
  br i1 %376, label %377, label %404

377:                                              ; preds = %366
  %378 = load i32, i32* %157, align 4
  %379 = icmp ugt i32 %378, 536870911
  br i1 %379, label %380, label %403

380:                                              ; preds = %377
  %381 = lshr i32 %378, 25
  %382 = and i32 %381, 15
  %383 = icmp eq i32 %382, 1
  br i1 %383, label %404, label %384

384:                                              ; preds = %380
  %385 = lshr i32 %375, 25
  %386 = and i32 %385, 15
  switch i32 %386, label %387 [
    i32 1, label %403
    i32 0, label %404
  ]

387:                                              ; preds = %384
  %388 = icmp eq i32 %382, 0
  br i1 %388, label %403, label %389

389:                                              ; preds = %387
  %390 = and i32 %378, 33554431
  %391 = and i32 %375, 33554431
  %392 = icmp eq i32 %390, %391
  br i1 %392, label %395, label %393

393:                                              ; preds = %389
  %394 = icmp ult i32 %390, %391
  br i1 %394, label %403, label %404

395:                                              ; preds = %389
  %396 = icmp eq i32 %382, %386
  br i1 %396, label %399, label %397

397:                                              ; preds = %395
  %398 = icmp ult i32 %382, %386
  br i1 %398, label %403, label %404

399:                                              ; preds = %395
  %400 = lshr i32 %378, 29
  %401 = lshr i32 %375, 29
  %402 = icmp ult i32 %400, %401
  br i1 %402, label %403, label %404

403:                                              ; preds = %399, %397, %393, %387, %384, %377
  br label %404

404:                                              ; preds = %366, %380, %384, %393, %397, %399, %403
  %405 = phi %"class.blink::CollapsedBorderValue"* [ %61, %403 ], [ %57, %399 ], [ %57, %393 ], [ %57, %397 ], [ %57, %366 ], [ %57, %380 ], [ %57, %384 ]
  %406 = bitcast %"class.blink::CollapsedBorderValue"* %405 to i64*
  %407 = load i64, i64* %406, align 4
  store i64 %407, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %371) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #12
  %408 = lshr i64 %407, 32
  %409 = trunc i64 %408 to i32
  %410 = icmp ugt i32 %409, 536870911
  br i1 %410, label %411, label %1092

411:                                              ; preds = %404
  br i1 %216, label %412, label %510

412:                                              ; preds = %411
  %413 = bitcast %"class.blink::CollapsedBorderValue"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %413) #12
  %414 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %415 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %414, align 8
  %416 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %415, i64 0, i32 5, i32 0
  %417 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %416, align 8
  %418 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %418)
  %419 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %419)
  %420 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %420)
  %421 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %417, i64 0, i32 0, i32 9
  %422 = bitcast [20 x i8]* %421 to i160*
  %423 = load i160, i160* %422, align 8, !noalias !225
  %424 = lshr i160 %423, 102
  %425 = trunc i160 %424 to i8
  %426 = and i8 %425, 3
  %427 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %417, i64 0, i32 0, i32 7, i32 0, i32 0
  %428 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %427, align 8, !noalias !225
  %429 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %428, i64 0, i32 27
  %430 = load i16, i16* %429, align 8, !noalias !225
  %431 = lshr i16 %430, 12
  %432 = zext i16 %431 to i32
  %433 = lshr i16 %430, 8
  %434 = and i16 %433, 15
  %435 = zext i16 %434 to i32
  %436 = lshr i16 %430, 4
  %437 = and i16 %436, 15
  %438 = zext i16 %437 to i32
  store i32 %432, i32* %35, align 4, !alias.scope !225
  store i32 %435, i32* %36, align 4, !alias.scope !225
  store i32 %438, i32* %37, align 4, !alias.scope !225
  %439 = icmp eq i8 %426, 0
  %440 = icmp eq i8 %426, 1
  %441 = select i1 %440, i32* %36, i32* %37
  %442 = select i1 %439, i32* %35, i32* %441
  %443 = load i32, i32* %442, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %418)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %419)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %420)
  %444 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %444)
  %445 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %445)
  %446 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %446)
  %447 = icmp ult i16 %430, 8192
  br i1 %447, label %451, label %448

448:                                              ; preds = %412
  %449 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %428, i64 0, i32 26, i32 0
  %450 = load i32, i32* %449, align 4, !noalias !228
  br label %451

451:                                              ; preds = %448, %412
  %452 = phi i32 [ %450, %448 ], [ 0, %412 ]
  %453 = and i16 %430, 3584
  %454 = icmp eq i16 %453, 0
  br i1 %454, label %458, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %428, i64 0, i32 25, i32 0
  %457 = load i32, i32* %456, align 4, !noalias !228
  br label %458

458:                                              ; preds = %455, %451
  %459 = phi i32 [ %457, %455 ], [ 0, %451 ]
  %460 = and i16 %430, 224
  %461 = icmp eq i16 %460, 0
  br i1 %461, label %465, label %462

462:                                              ; preds = %458
  %463 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %428, i64 0, i32 24, i32 0
  %464 = load i32, i32* %463, align 4, !noalias !228
  br label %465

465:                                              ; preds = %458, %462
  %466 = phi i32 [ %464, %462 ], [ 0, %458 ]
  store i32 %452, i32* %32, align 4, !alias.scope !228
  store i32 %459, i32* %33, align 4, !alias.scope !228
  store i32 %466, i32* %34, align 4, !alias.scope !228
  %467 = select i1 %440, i32* %33, i32* %34
  %468 = select i1 %439, i32* %32, i32* %467
  %469 = load i32, i32* %468, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %444)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %445)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %446)
  %470 = bitcast %"class.blink::Color"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %470) #12
  %471 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %417, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %472 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %64, i64 0, i32 0
  store i32 %471, i32* %472, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %63, i32 %443, i32 %469, %"class.blink::Color"* nonnull dereferenceable(4) %64, i32 5) #12
  %473 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %63, i64 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = icmp ugt i32 %474, 536870911
  br i1 %475, label %476, label %503

476:                                              ; preds = %465
  %477 = load i32, i32* %157, align 4
  %478 = icmp ugt i32 %477, 536870911
  br i1 %478, label %479, label %502

479:                                              ; preds = %476
  %480 = lshr i32 %477, 25
  %481 = and i32 %480, 15
  %482 = icmp eq i32 %481, 1
  br i1 %482, label %503, label %483

483:                                              ; preds = %479
  %484 = lshr i32 %474, 25
  %485 = and i32 %484, 15
  switch i32 %485, label %486 [
    i32 1, label %502
    i32 0, label %503
  ]

486:                                              ; preds = %483
  %487 = icmp eq i32 %481, 0
  br i1 %487, label %502, label %488

488:                                              ; preds = %486
  %489 = and i32 %477, 33554431
  %490 = and i32 %474, 33554431
  %491 = icmp eq i32 %489, %490
  br i1 %491, label %494, label %492

492:                                              ; preds = %488
  %493 = icmp ult i32 %489, %490
  br i1 %493, label %502, label %503

494:                                              ; preds = %488
  %495 = icmp eq i32 %481, %485
  br i1 %495, label %498, label %496

496:                                              ; preds = %494
  %497 = icmp ult i32 %481, %485
  br i1 %497, label %502, label %503

498:                                              ; preds = %494
  %499 = lshr i32 %477, 29
  %500 = lshr i32 %474, 29
  %501 = icmp ult i32 %499, %500
  br i1 %501, label %502, label %503

502:                                              ; preds = %498, %496, %492, %486, %483, %476
  br label %503

503:                                              ; preds = %465, %479, %483, %492, %496, %498, %502
  %504 = phi %"class.blink::CollapsedBorderValue"* [ %63, %502 ], [ %57, %498 ], [ %57, %492 ], [ %57, %496 ], [ %57, %465 ], [ %57, %479 ], [ %57, %483 ]
  %505 = bitcast %"class.blink::CollapsedBorderValue"* %504 to i64*
  %506 = load i64, i64* %505, align 4
  store i64 %506, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %470) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413) #12
  %507 = lshr i64 %506, 32
  %508 = trunc i64 %507 to i32
  %509 = icmp ugt i32 %508, 536870911
  br i1 %509, label %510, label %1092

510:                                              ; preds = %503, %411
  %511 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %512 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %511, i64 0, i32 7
  %513 = bitcast %"class.blink::LayoutObject"** %512 to %"class.blink::LayoutTableSection"**
  %514 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %513, align 8
  %515 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %511, i64 3
  %516 = bitcast %"class.blink::LayoutObject"* %515 to i32*
  %517 = load i32, i32* %516, align 8
  %518 = and i32 %517, 2147483647
  %519 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %520 = load i32, i32* %519, align 8
  %521 = and i32 %520, 134217728
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %579, label %523

523:                                              ; preds = %510
  %524 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %525 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %524 to i96*
  %526 = load i96, i96* %525, align 4
  %527 = and i96 %526, 16777216
  %528 = icmp eq i96 %527, 0
  br i1 %528, label %529, label %579

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %531 = load %"class.blink::Node"*, %"class.blink::Node"** %530, align 8
  %532 = icmp eq %"class.blink::Node"* %531, null
  br i1 %532, label %579, label %533

533:                                              ; preds = %529
  %534 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %531, i64 0, i32 1
  %535 = load i32, i32* %534, align 8
  %536 = and i32 %535, 48
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %579

538:                                              ; preds = %533
  %539 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %540 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %539, i64 0, i32 0, i32 0, i32 0
  %541 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %540, align 8
  %542 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %531, i64 1, i32 2
  %543 = bitcast %"class.blink::Member.318"* %542 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %544 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %543, align 8
  %545 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %544, i64 0, i32 3, i32 0, i32 0, i32 0
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %547 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %548 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %547, align 8
  %549 = icmp eq %"class.WTF::StringImpl"* %546, %548
  br i1 %549, label %557, label %550

550:                                              ; preds = %538
  %551 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %552 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %551, i64 0, i32 0, i32 0, i32 0
  %553 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %552, align 8
  %554 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %553, i64 0, i32 3, i32 0, i32 0, i32 0
  %555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %554, align 8
  %556 = icmp eq %"class.WTF::StringImpl"* %546, %555
  br i1 %556, label %557, label %579

557:                                              ; preds = %550, %538
  %558 = bitcast %"class.blink::Node"* %531 to %"class.blink::HTMLTableCellElement"*
  %559 = call i32 @_ZNK5blink20HTMLTableCellElement7rowSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %558) #12
  %560 = icmp ult i32 %559, 2147483646
  br i1 %560, label %561, label %579

561:                                              ; preds = %557
  %562 = icmp eq i32 %559, 0
  br i1 %562, label %563, label %575

563:                                              ; preds = %561
  %564 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %565 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %564, i64 0, i32 7
  %566 = bitcast %"class.blink::LayoutObject"** %565 to %"class.blink::LayoutTableSection"**
  %567 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %566, align 8
  %568 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %567, i64 0, i32 3, i32 0, i32 0, i32 2
  %569 = load i32, i32* %568, align 4
  %570 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %564, i64 3
  %571 = bitcast %"class.blink::LayoutObject"* %570 to i32*
  %572 = load i32, i32* %571, align 8
  %573 = and i32 %572, 2147483647
  %574 = sub i32 %569, %573
  br label %575

575:                                              ; preds = %563, %561
  %576 = phi i32 [ %574, %563 ], [ %559, %561 ]
  %577 = icmp ult i32 %576, 2147483646
  %578 = select i1 %577, i32 %576, i32 2147483646
  br label %579

579:                                              ; preds = %510, %523, %529, %533, %550, %557, %575
  %580 = phi i32 [ %578, %575 ], [ 1, %510 ], [ 2147483646, %557 ], [ 1, %550 ], [ 1, %529 ], [ 1, %533 ], [ 1, %523 ]
  %581 = add nuw i32 %580, %518
  %582 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %514, i64 0, i32 3, i32 0, i32 0, i32 2
  %583 = load i32, i32* %582, align 4
  %584 = icmp ult i32 %581, %583
  br i1 %584, label %778, label %585

585:                                              ; preds = %579
  %586 = bitcast %"class.blink::CollapsedBorderValue"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %586) #12
  %587 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %514, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %588 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %587, align 8
  %589 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %589)
  %590 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %590)
  %591 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %591)
  %592 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %588, i64 0, i32 0, i32 9
  %593 = bitcast [20 x i8]* %592 to i160*
  %594 = load i160, i160* %593, align 8, !noalias !231
  %595 = lshr i160 %594, 102
  %596 = trunc i160 %595 to i8
  %597 = and i8 %596, 3
  %598 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %588, i64 0, i32 0, i32 7, i32 0, i32 0
  %599 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %598, align 8, !noalias !231
  %600 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %599, i64 0, i32 27
  %601 = load i16, i16* %600, align 8, !noalias !231
  %602 = lshr i16 %601, 8
  %603 = and i16 %602, 15
  %604 = zext i16 %603 to i32
  %605 = and i16 %601, 15
  %606 = zext i16 %605 to i32
  %607 = lshr i16 %601, 4
  %608 = and i16 %607, 15
  %609 = zext i16 %608 to i32
  store i32 %604, i32* %29, align 4, !alias.scope !231
  store i32 %606, i32* %30, align 4, !alias.scope !231
  store i32 %609, i32* %31, align 4, !alias.scope !231
  %610 = icmp eq i8 %597, 0
  %611 = icmp eq i8 %597, 1
  %612 = select i1 %611, i32* %31, i32* %29
  %613 = select i1 %610, i32* %30, i32* %612
  %614 = load i32, i32* %613, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %589)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %590)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %591)
  %615 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %615)
  %616 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %616)
  %617 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %617)
  %618 = and i16 %601, 3584
  %619 = icmp eq i16 %618, 0
  br i1 %619, label %623, label %620

620:                                              ; preds = %585
  %621 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %599, i64 0, i32 25, i32 0
  %622 = load i32, i32* %621, align 4, !noalias !234
  br label %623

623:                                              ; preds = %620, %585
  %624 = phi i32 [ %622, %620 ], [ 0, %585 ]
  %625 = and i16 %601, 14
  %626 = icmp eq i16 %625, 0
  br i1 %626, label %630, label %627

627:                                              ; preds = %623
  %628 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %599, i64 0, i32 23, i32 0
  %629 = load i32, i32* %628, align 4, !noalias !234
  br label %630

630:                                              ; preds = %627, %623
  %631 = phi i32 [ %629, %627 ], [ 0, %623 ]
  %632 = and i16 %601, 224
  %633 = icmp eq i16 %632, 0
  br i1 %633, label %637, label %634

634:                                              ; preds = %630
  %635 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %599, i64 0, i32 24, i32 0
  %636 = load i32, i32* %635, align 4, !noalias !234
  br label %637

637:                                              ; preds = %630, %634
  %638 = phi i32 [ %636, %634 ], [ 0, %630 ]
  store i32 %624, i32* %26, align 4, !alias.scope !234
  store i32 %631, i32* %27, align 4, !alias.scope !234
  store i32 %638, i32* %28, align 4, !alias.scope !234
  %639 = select i1 %611, i32* %28, i32* %26
  %640 = select i1 %610, i32* %27, i32* %639
  %641 = load i32, i32* %640, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %615)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %616)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %617)
  %642 = bitcast %"class.blink::Color"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %642) #12
  %643 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %588, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %644 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %66, i64 0, i32 0
  store i32 %643, i32* %644, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %65, i32 %614, i32 %641, %"class.blink::Color"* nonnull dereferenceable(4) %66, i32 4) #12
  %645 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %65, i64 0, i32 1
  %646 = load i32, i32* %645, align 4
  %647 = icmp ugt i32 %646, 536870911
  br i1 %647, label %648, label %675

648:                                              ; preds = %637
  %649 = load i32, i32* %157, align 4
  %650 = icmp ugt i32 %649, 536870911
  br i1 %650, label %651, label %674

651:                                              ; preds = %648
  %652 = lshr i32 %649, 25
  %653 = and i32 %652, 15
  %654 = icmp eq i32 %653, 1
  br i1 %654, label %675, label %655

655:                                              ; preds = %651
  %656 = lshr i32 %646, 25
  %657 = and i32 %656, 15
  switch i32 %657, label %658 [
    i32 1, label %674
    i32 0, label %675
  ]

658:                                              ; preds = %655
  %659 = icmp eq i32 %653, 0
  br i1 %659, label %674, label %660

660:                                              ; preds = %658
  %661 = and i32 %649, 33554431
  %662 = and i32 %646, 33554431
  %663 = icmp eq i32 %661, %662
  br i1 %663, label %666, label %664

664:                                              ; preds = %660
  %665 = icmp ult i32 %661, %662
  br i1 %665, label %674, label %675

666:                                              ; preds = %660
  %667 = icmp eq i32 %653, %657
  br i1 %667, label %670, label %668

668:                                              ; preds = %666
  %669 = icmp ult i32 %653, %657
  br i1 %669, label %674, label %675

670:                                              ; preds = %666
  %671 = lshr i32 %649, 29
  %672 = lshr i32 %646, 29
  %673 = icmp ult i32 %671, %672
  br i1 %673, label %674, label %675

674:                                              ; preds = %670, %668, %664, %658, %655, %648
  br label %675

675:                                              ; preds = %637, %651, %655, %664, %668, %670, %674
  %676 = phi %"class.blink::CollapsedBorderValue"* [ %65, %674 ], [ %57, %670 ], [ %57, %664 ], [ %57, %668 ], [ %57, %637 ], [ %57, %651 ], [ %57, %655 ]
  %677 = bitcast %"class.blink::CollapsedBorderValue"* %676 to i64*
  %678 = load i64, i64* %677, align 4
  store i64 %678, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %642) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %586) #12
  %679 = lshr i64 %678, 32
  %680 = trunc i64 %679 to i32
  %681 = icmp ugt i32 %680, 536870911
  br i1 %681, label %682, label %1092

682:                                              ; preds = %675
  %683 = call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable12SectionBelowEPKNS_18LayoutTableSectionENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"* %82, %"class.blink::LayoutTableSection"* %514, i32 1) #12
  %684 = icmp eq %"class.blink::LayoutTableSection"* %683, null
  br i1 %684, label %782, label %685

685:                                              ; preds = %682
  %686 = bitcast %"class.blink::CollapsedBorderValue"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %686) #12
  %687 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %683, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %688 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %687, align 8
  %689 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %689)
  %690 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %690)
  %691 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %691)
  %692 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %688, i64 0, i32 0, i32 9
  %693 = bitcast [20 x i8]* %692 to i160*
  %694 = load i160, i160* %693, align 8, !noalias !237
  %695 = lshr i160 %694, 102
  %696 = trunc i160 %695 to i8
  %697 = and i8 %696, 3
  %698 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %688, i64 0, i32 0, i32 7, i32 0, i32 0
  %699 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %698, align 8, !noalias !237
  %700 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %699, i64 0, i32 27
  %701 = load i16, i16* %700, align 8, !noalias !237
  %702 = lshr i16 %701, 12
  %703 = zext i16 %702 to i32
  %704 = lshr i16 %701, 8
  %705 = and i16 %704, 15
  %706 = zext i16 %705 to i32
  %707 = lshr i16 %701, 4
  %708 = and i16 %707, 15
  %709 = zext i16 %708 to i32
  store i32 %703, i32* %23, align 4, !alias.scope !237
  store i32 %706, i32* %24, align 4, !alias.scope !237
  store i32 %709, i32* %25, align 4, !alias.scope !237
  %710 = icmp eq i8 %697, 0
  %711 = icmp eq i8 %697, 1
  %712 = select i1 %711, i32* %24, i32* %25
  %713 = select i1 %710, i32* %23, i32* %712
  %714 = load i32, i32* %713, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %689)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %690)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %691)
  %715 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %715)
  %716 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %716)
  %717 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %717)
  %718 = icmp ult i16 %701, 8192
  br i1 %718, label %722, label %719

719:                                              ; preds = %685
  %720 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %699, i64 0, i32 26, i32 0
  %721 = load i32, i32* %720, align 4, !noalias !240
  br label %722

722:                                              ; preds = %719, %685
  %723 = phi i32 [ %721, %719 ], [ 0, %685 ]
  %724 = and i16 %701, 3584
  %725 = icmp eq i16 %724, 0
  br i1 %725, label %729, label %726

726:                                              ; preds = %722
  %727 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %699, i64 0, i32 25, i32 0
  %728 = load i32, i32* %727, align 4, !noalias !240
  br label %729

729:                                              ; preds = %726, %722
  %730 = phi i32 [ %728, %726 ], [ 0, %722 ]
  %731 = and i16 %701, 224
  %732 = icmp eq i16 %731, 0
  br i1 %732, label %736, label %733

733:                                              ; preds = %729
  %734 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %699, i64 0, i32 24, i32 0
  %735 = load i32, i32* %734, align 4, !noalias !240
  br label %736

736:                                              ; preds = %729, %733
  %737 = phi i32 [ %735, %733 ], [ 0, %729 ]
  store i32 %723, i32* %20, align 4, !alias.scope !240
  store i32 %730, i32* %21, align 4, !alias.scope !240
  store i32 %737, i32* %22, align 4, !alias.scope !240
  %738 = select i1 %711, i32* %21, i32* %22
  %739 = select i1 %710, i32* %20, i32* %738
  %740 = load i32, i32* %739, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %715)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %716)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %717)
  %741 = bitcast %"class.blink::Color"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %741) #12
  %742 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %688, %"class.blink::CSSProperty"* dereferenceable(24) %130) #12
  %743 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %68, i64 0, i32 0
  store i32 %742, i32* %743, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %67, i32 %714, i32 %740, %"class.blink::Color"* nonnull dereferenceable(4) %68, i32 4) #12
  %744 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %67, i64 0, i32 1
  %745 = load i32, i32* %744, align 4
  %746 = icmp ugt i32 %745, 536870911
  br i1 %746, label %747, label %774

747:                                              ; preds = %736
  %748 = load i32, i32* %157, align 4
  %749 = icmp ugt i32 %748, 536870911
  br i1 %749, label %750, label %773

750:                                              ; preds = %747
  %751 = lshr i32 %748, 25
  %752 = and i32 %751, 15
  %753 = icmp eq i32 %752, 1
  br i1 %753, label %774, label %754

754:                                              ; preds = %750
  %755 = lshr i32 %745, 25
  %756 = and i32 %755, 15
  switch i32 %756, label %757 [
    i32 1, label %773
    i32 0, label %774
  ]

757:                                              ; preds = %754
  %758 = icmp eq i32 %752, 0
  br i1 %758, label %773, label %759

759:                                              ; preds = %757
  %760 = and i32 %748, 33554431
  %761 = and i32 %745, 33554431
  %762 = icmp eq i32 %760, %761
  br i1 %762, label %765, label %763

763:                                              ; preds = %759
  %764 = icmp ult i32 %760, %761
  br i1 %764, label %773, label %774

765:                                              ; preds = %759
  %766 = icmp eq i32 %752, %756
  br i1 %766, label %769, label %767

767:                                              ; preds = %765
  %768 = icmp ult i32 %752, %756
  br i1 %768, label %773, label %774

769:                                              ; preds = %765
  %770 = lshr i32 %748, 29
  %771 = lshr i32 %745, 29
  %772 = icmp ult i32 %770, %771
  br i1 %772, label %773, label %774

773:                                              ; preds = %769, %767, %763, %757, %754, %747
  br label %774

774:                                              ; preds = %736, %750, %754, %763, %767, %769, %773
  %775 = phi %"class.blink::CollapsedBorderValue"* [ %67, %773 ], [ %57, %769 ], [ %57, %763 ], [ %57, %767 ], [ %57, %736 ], [ %57, %750 ], [ %57, %754 ]
  %776 = bitcast %"class.blink::CollapsedBorderValue"* %775 to i64*
  %777 = load i64, i64* %776, align 4
  store i64 %777, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %741) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %686) #12
  br label %1092

778:                                              ; preds = %579
  %779 = icmp eq %"class.blink::LayoutTableSection"* %514, null
  br i1 %779, label %782, label %780

780:                                              ; preds = %778
  %781 = load i64, i64* %56, align 8
  br label %1092

782:                                              ; preds = %682, %778
  %783 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %783) #12
  %784 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %82, i64 0, i32 10
  %785 = load i16, i16* %784, align 8, !noalias !243
  %786 = and i16 %785, 64
  %787 = icmp eq i16 %786, 0
  br i1 %787, label %788, label %789

788:                                              ; preds = %782
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %783, i8 0, i64 24, i1 false) #12, !alias.scope !243
  br label %796

789:                                              ; preds = %782
  %790 = load i32, i32* %519, align 8
  %791 = and i32 %790, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %69, %"class.blink::LayoutTable"* %82, i32 %791) #12
  %792 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %69, i64 0, i32 0
  %793 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %792, align 8
  %794 = icmp eq %"class.blink::LayoutTableCol"* %793, null
  br i1 %794, label %796, label %795

795:                                              ; preds = %789
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %783) #12
  br label %800

796:                                              ; preds = %788, %789
  %797 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %69, i64 0, i32 1
  %798 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %797, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %783) #12
  %799 = icmp eq %"class.blink::LayoutTableCol"* %798, null
  br i1 %799, label %998, label %800

800:                                              ; preds = %795, %796
  %801 = phi %"class.blink::LayoutTableCol"* [ %793, %795 ], [ %798, %796 ]
  %802 = bitcast %"class.blink::CollapsedBorderValue"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %802) #12
  %803 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %801, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %804 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %803, align 8
  %805 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %805)
  %806 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %806)
  %807 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %807)
  %808 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %804, i64 0, i32 0, i32 9
  %809 = bitcast [20 x i8]* %808 to i160*
  %810 = load i160, i160* %809, align 8, !noalias !246
  %811 = lshr i160 %810, 102
  %812 = trunc i160 %811 to i8
  %813 = and i8 %812, 3
  %814 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %804, i64 0, i32 0, i32 7, i32 0, i32 0
  %815 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %814, align 8, !noalias !246
  %816 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %815, i64 0, i32 27
  %817 = load i16, i16* %816, align 8, !noalias !246
  %818 = lshr i16 %817, 8
  %819 = and i16 %818, 15
  %820 = zext i16 %819 to i32
  %821 = and i16 %817, 15
  %822 = zext i16 %821 to i32
  %823 = lshr i16 %817, 4
  %824 = and i16 %823, 15
  %825 = zext i16 %824 to i32
  store i32 %820, i32* %17, align 4, !alias.scope !246
  store i32 %822, i32* %18, align 4, !alias.scope !246
  store i32 %825, i32* %19, align 4, !alias.scope !246
  %826 = icmp eq i8 %813, 0
  %827 = icmp eq i8 %813, 1
  %828 = select i1 %827, i32* %19, i32* %17
  %829 = select i1 %826, i32* %18, i32* %828
  %830 = load i32, i32* %829, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %805)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %806)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %807)
  %831 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %831)
  %832 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %832)
  %833 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %833)
  %834 = and i16 %817, 3584
  %835 = icmp eq i16 %834, 0
  br i1 %835, label %839, label %836

836:                                              ; preds = %800
  %837 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %815, i64 0, i32 25, i32 0
  %838 = load i32, i32* %837, align 4, !noalias !249
  br label %839

839:                                              ; preds = %836, %800
  %840 = phi i32 [ %838, %836 ], [ 0, %800 ]
  %841 = and i16 %817, 14
  %842 = icmp eq i16 %841, 0
  br i1 %842, label %846, label %843

843:                                              ; preds = %839
  %844 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %815, i64 0, i32 23, i32 0
  %845 = load i32, i32* %844, align 4, !noalias !249
  br label %846

846:                                              ; preds = %843, %839
  %847 = phi i32 [ %845, %843 ], [ 0, %839 ]
  %848 = and i16 %817, 224
  %849 = icmp eq i16 %848, 0
  br i1 %849, label %853, label %850

850:                                              ; preds = %846
  %851 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %815, i64 0, i32 24, i32 0
  %852 = load i32, i32* %851, align 4, !noalias !249
  br label %853

853:                                              ; preds = %846, %850
  %854 = phi i32 [ %852, %850 ], [ 0, %846 ]
  store i32 %840, i32* %14, align 4, !alias.scope !249
  store i32 %847, i32* %15, align 4, !alias.scope !249
  store i32 %854, i32* %16, align 4, !alias.scope !249
  %855 = select i1 %827, i32* %16, i32* %14
  %856 = select i1 %826, i32* %15, i32* %855
  %857 = load i32, i32* %856, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %831)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %832)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %833)
  %858 = bitcast %"class.blink::Color"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %858) #12
  %859 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %804, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %860 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %71, i64 0, i32 0
  store i32 %859, i32* %860, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %70, i32 %830, i32 %857, %"class.blink::Color"* nonnull dereferenceable(4) %71, i32 3) #12
  %861 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %70, i64 0, i32 1
  %862 = load i32, i32* %861, align 4
  %863 = icmp ugt i32 %862, 536870911
  br i1 %863, label %864, label %891

864:                                              ; preds = %853
  %865 = load i32, i32* %157, align 4
  %866 = icmp ugt i32 %865, 536870911
  br i1 %866, label %867, label %890

867:                                              ; preds = %864
  %868 = lshr i32 %865, 25
  %869 = and i32 %868, 15
  %870 = icmp eq i32 %869, 1
  br i1 %870, label %891, label %871

871:                                              ; preds = %867
  %872 = lshr i32 %862, 25
  %873 = and i32 %872, 15
  switch i32 %873, label %874 [
    i32 1, label %890
    i32 0, label %891
  ]

874:                                              ; preds = %871
  %875 = icmp eq i32 %869, 0
  br i1 %875, label %890, label %876

876:                                              ; preds = %874
  %877 = and i32 %865, 33554431
  %878 = and i32 %862, 33554431
  %879 = icmp eq i32 %877, %878
  br i1 %879, label %882, label %880

880:                                              ; preds = %876
  %881 = icmp ult i32 %877, %878
  br i1 %881, label %890, label %891

882:                                              ; preds = %876
  %883 = icmp eq i32 %869, %873
  br i1 %883, label %886, label %884

884:                                              ; preds = %882
  %885 = icmp ult i32 %869, %873
  br i1 %885, label %890, label %891

886:                                              ; preds = %882
  %887 = lshr i32 %865, 29
  %888 = lshr i32 %862, 29
  %889 = icmp ult i32 %887, %888
  br i1 %889, label %890, label %891

890:                                              ; preds = %886, %884, %880, %874, %871, %864
  br label %891

891:                                              ; preds = %853, %867, %871, %880, %884, %886, %890
  %892 = phi %"class.blink::CollapsedBorderValue"* [ %70, %890 ], [ %57, %886 ], [ %57, %880 ], [ %57, %884 ], [ %57, %853 ], [ %57, %867 ], [ %57, %871 ]
  %893 = bitcast %"class.blink::CollapsedBorderValue"* %892 to i64*
  %894 = load i64, i64* %893, align 4
  store i64 %894, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %858) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %802) #12
  %895 = lshr i64 %894, 32
  %896 = trunc i64 %895 to i32
  %897 = icmp ugt i32 %896, 536870911
  br i1 %897, label %898, label %1092

898:                                              ; preds = %891
  %899 = call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"* nonnull %801) #12
  %900 = icmp eq %"class.blink::LayoutTableCol"* %899, null
  br i1 %900, label %998, label %901

901:                                              ; preds = %898
  %902 = bitcast %"class.blink::CollapsedBorderValue"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %902) #12
  %903 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %899, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %904 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %903, align 8
  %905 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %905)
  %906 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %906)
  %907 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %907)
  %908 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %904, i64 0, i32 0, i32 9
  %909 = bitcast [20 x i8]* %908 to i160*
  %910 = load i160, i160* %909, align 8, !noalias !252
  %911 = lshr i160 %910, 102
  %912 = trunc i160 %911 to i8
  %913 = and i8 %912, 3
  %914 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %904, i64 0, i32 0, i32 7, i32 0, i32 0
  %915 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %914, align 8, !noalias !252
  %916 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %915, i64 0, i32 27
  %917 = load i16, i16* %916, align 8, !noalias !252
  %918 = lshr i16 %917, 8
  %919 = and i16 %918, 15
  %920 = zext i16 %919 to i32
  %921 = and i16 %917, 15
  %922 = zext i16 %921 to i32
  %923 = lshr i16 %917, 4
  %924 = and i16 %923, 15
  %925 = zext i16 %924 to i32
  store i32 %920, i32* %11, align 4, !alias.scope !252
  store i32 %922, i32* %12, align 4, !alias.scope !252
  store i32 %925, i32* %13, align 4, !alias.scope !252
  %926 = icmp eq i8 %913, 0
  %927 = icmp eq i8 %913, 1
  %928 = select i1 %927, i32* %13, i32* %11
  %929 = select i1 %926, i32* %12, i32* %928
  %930 = load i32, i32* %929, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %905)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %906)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %907)
  %931 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %931)
  %932 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %932)
  %933 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %933)
  %934 = and i16 %917, 3584
  %935 = icmp eq i16 %934, 0
  br i1 %935, label %939, label %936

936:                                              ; preds = %901
  %937 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %915, i64 0, i32 25, i32 0
  %938 = load i32, i32* %937, align 4, !noalias !255
  br label %939

939:                                              ; preds = %936, %901
  %940 = phi i32 [ %938, %936 ], [ 0, %901 ]
  %941 = and i16 %917, 14
  %942 = icmp eq i16 %941, 0
  br i1 %942, label %946, label %943

943:                                              ; preds = %939
  %944 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %915, i64 0, i32 23, i32 0
  %945 = load i32, i32* %944, align 4, !noalias !255
  br label %946

946:                                              ; preds = %943, %939
  %947 = phi i32 [ %945, %943 ], [ 0, %939 ]
  %948 = and i16 %917, 224
  %949 = icmp eq i16 %948, 0
  br i1 %949, label %953, label %950

950:                                              ; preds = %946
  %951 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %915, i64 0, i32 24, i32 0
  %952 = load i32, i32* %951, align 4, !noalias !255
  br label %953

953:                                              ; preds = %946, %950
  %954 = phi i32 [ %952, %950 ], [ 0, %946 ]
  store i32 %940, i32* %8, align 4, !alias.scope !255
  store i32 %947, i32* %9, align 4, !alias.scope !255
  store i32 %954, i32* %10, align 4, !alias.scope !255
  %955 = select i1 %927, i32* %10, i32* %8
  %956 = select i1 %926, i32* %9, i32* %955
  %957 = load i32, i32* %956, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %931)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %932)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %933)
  %958 = bitcast %"class.blink::Color"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %958) #12
  %959 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %904, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %960 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %73, i64 0, i32 0
  store i32 %959, i32* %960, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %72, i32 %930, i32 %957, %"class.blink::Color"* nonnull dereferenceable(4) %73, i32 2) #12
  %961 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %72, i64 0, i32 1
  %962 = load i32, i32* %961, align 4
  %963 = icmp ugt i32 %962, 536870911
  br i1 %963, label %964, label %991

964:                                              ; preds = %953
  %965 = load i32, i32* %157, align 4
  %966 = icmp ugt i32 %965, 536870911
  br i1 %966, label %967, label %990

967:                                              ; preds = %964
  %968 = lshr i32 %965, 25
  %969 = and i32 %968, 15
  %970 = icmp eq i32 %969, 1
  br i1 %970, label %991, label %971

971:                                              ; preds = %967
  %972 = lshr i32 %962, 25
  %973 = and i32 %972, 15
  switch i32 %973, label %974 [
    i32 1, label %990
    i32 0, label %991
  ]

974:                                              ; preds = %971
  %975 = icmp eq i32 %969, 0
  br i1 %975, label %990, label %976

976:                                              ; preds = %974
  %977 = and i32 %965, 33554431
  %978 = and i32 %962, 33554431
  %979 = icmp eq i32 %977, %978
  br i1 %979, label %982, label %980

980:                                              ; preds = %976
  %981 = icmp ult i32 %977, %978
  br i1 %981, label %990, label %991

982:                                              ; preds = %976
  %983 = icmp eq i32 %969, %973
  br i1 %983, label %986, label %984

984:                                              ; preds = %982
  %985 = icmp ult i32 %969, %973
  br i1 %985, label %990, label %991

986:                                              ; preds = %982
  %987 = lshr i32 %965, 29
  %988 = lshr i32 %962, 29
  %989 = icmp ult i32 %987, %988
  br i1 %989, label %990, label %991

990:                                              ; preds = %986, %984, %980, %974, %971, %964
  br label %991

991:                                              ; preds = %953, %967, %971, %980, %984, %986, %990
  %992 = phi %"class.blink::CollapsedBorderValue"* [ %72, %990 ], [ %57, %986 ], [ %57, %980 ], [ %57, %984 ], [ %57, %953 ], [ %57, %967 ], [ %57, %971 ]
  %993 = bitcast %"class.blink::CollapsedBorderValue"* %992 to i64*
  %994 = load i64, i64* %993, align 4
  store i64 %994, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %958) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %902) #12
  %995 = lshr i64 %994, 32
  %996 = trunc i64 %995 to i32
  %997 = icmp ugt i32 %996, 536870911
  br i1 %997, label %998, label %1092

998:                                              ; preds = %991, %898, %796
  %999 = bitcast %"class.blink::CollapsedBorderValue"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %999) #12
  %1000 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1001 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1000, align 8
  %1002 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1002)
  %1003 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1003)
  %1004 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1004)
  %1005 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1001, i64 0, i32 0, i32 9
  %1006 = bitcast [20 x i8]* %1005 to i160*
  %1007 = load i160, i160* %1006, align 8, !noalias !258
  %1008 = lshr i160 %1007, 102
  %1009 = trunc i160 %1008 to i8
  %1010 = and i8 %1009, 3
  %1011 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1001, i64 0, i32 0, i32 7, i32 0, i32 0
  %1012 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %1011, align 8, !noalias !258
  %1013 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1012, i64 0, i32 27
  %1014 = load i16, i16* %1013, align 8, !noalias !258
  %1015 = lshr i16 %1014, 8
  %1016 = and i16 %1015, 15
  %1017 = zext i16 %1016 to i32
  %1018 = and i16 %1014, 15
  %1019 = zext i16 %1018 to i32
  %1020 = lshr i16 %1014, 4
  %1021 = and i16 %1020, 15
  %1022 = zext i16 %1021 to i32
  store i32 %1017, i32* %5, align 4, !alias.scope !258
  store i32 %1019, i32* %6, align 4, !alias.scope !258
  store i32 %1022, i32* %7, align 4, !alias.scope !258
  %1023 = icmp eq i8 %1010, 0
  %1024 = icmp eq i8 %1010, 1
  %1025 = select i1 %1024, i32* %7, i32* %5
  %1026 = select i1 %1023, i32* %6, i32* %1025
  %1027 = load i32, i32* %1026, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1002)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1003)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1004)
  %1028 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1028)
  %1029 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1029)
  %1030 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1030)
  %1031 = and i16 %1014, 3584
  %1032 = icmp eq i16 %1031, 0
  br i1 %1032, label %1036, label %1033

1033:                                             ; preds = %998
  %1034 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1012, i64 0, i32 25, i32 0
  %1035 = load i32, i32* %1034, align 4, !noalias !261
  br label %1036

1036:                                             ; preds = %1033, %998
  %1037 = phi i32 [ %1035, %1033 ], [ 0, %998 ]
  %1038 = and i16 %1014, 14
  %1039 = icmp eq i16 %1038, 0
  br i1 %1039, label %1043, label %1040

1040:                                             ; preds = %1036
  %1041 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1012, i64 0, i32 23, i32 0
  %1042 = load i32, i32* %1041, align 4, !noalias !261
  br label %1043

1043:                                             ; preds = %1040, %1036
  %1044 = phi i32 [ %1042, %1040 ], [ 0, %1036 ]
  %1045 = and i16 %1014, 224
  %1046 = icmp eq i16 %1045, 0
  br i1 %1046, label %1050, label %1047

1047:                                             ; preds = %1043
  %1048 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %1012, i64 0, i32 24, i32 0
  %1049 = load i32, i32* %1048, align 4, !noalias !261
  br label %1050

1050:                                             ; preds = %1043, %1047
  %1051 = phi i32 [ %1049, %1047 ], [ 0, %1043 ]
  store i32 %1037, i32* %2, align 4, !alias.scope !261
  store i32 %1044, i32* %3, align 4, !alias.scope !261
  store i32 %1051, i32* %4, align 4, !alias.scope !261
  %1052 = select i1 %1024, i32* %4, i32* %2
  %1053 = select i1 %1023, i32* %3, i32* %1052
  %1054 = load i32, i32* %1053, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1028)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1029)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1030)
  %1055 = bitcast %"class.blink::Color"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1055) #12
  %1056 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1001, %"class.blink::CSSProperty"* dereferenceable(24) %154) #12
  %1057 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %75, i64 0, i32 0
  store i32 %1056, i32* %1057, align 4
  call void @_ZN5blink20CollapsedBorderValueC1ENS_12EBorderStyleENS_10LayoutUnitERKNS_5ColorENS_17EBorderPrecedenceE(%"class.blink::CollapsedBorderValue"* nonnull %74, i32 %1027, i32 %1054, %"class.blink::Color"* nonnull dereferenceable(4) %75, i32 1) #12
  %1058 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %74, i64 0, i32 1
  %1059 = load i32, i32* %1058, align 4
  %1060 = icmp ugt i32 %1059, 536870911
  br i1 %1060, label %1061, label %1088

1061:                                             ; preds = %1050
  %1062 = load i32, i32* %157, align 4
  %1063 = icmp ugt i32 %1062, 536870911
  br i1 %1063, label %1064, label %1087

1064:                                             ; preds = %1061
  %1065 = lshr i32 %1062, 25
  %1066 = and i32 %1065, 15
  %1067 = icmp eq i32 %1066, 1
  br i1 %1067, label %1088, label %1068

1068:                                             ; preds = %1064
  %1069 = lshr i32 %1059, 25
  %1070 = and i32 %1069, 15
  switch i32 %1070, label %1071 [
    i32 1, label %1087
    i32 0, label %1088
  ]

1071:                                             ; preds = %1068
  %1072 = icmp eq i32 %1066, 0
  br i1 %1072, label %1087, label %1073

1073:                                             ; preds = %1071
  %1074 = and i32 %1062, 33554431
  %1075 = and i32 %1059, 33554431
  %1076 = icmp eq i32 %1074, %1075
  br i1 %1076, label %1079, label %1077

1077:                                             ; preds = %1073
  %1078 = icmp ult i32 %1074, %1075
  br i1 %1078, label %1087, label %1088

1079:                                             ; preds = %1073
  %1080 = icmp eq i32 %1066, %1070
  br i1 %1080, label %1083, label %1081

1081:                                             ; preds = %1079
  %1082 = icmp ult i32 %1066, %1070
  br i1 %1082, label %1087, label %1088

1083:                                             ; preds = %1079
  %1084 = lshr i32 %1062, 29
  %1085 = lshr i32 %1059, 29
  %1086 = icmp ult i32 %1084, %1085
  br i1 %1086, label %1087, label %1088

1087:                                             ; preds = %1083, %1081, %1077, %1071, %1068, %1061
  br label %1088

1088:                                             ; preds = %1050, %1064, %1068, %1077, %1081, %1083, %1087
  %1089 = phi %"class.blink::CollapsedBorderValue"* [ %74, %1087 ], [ %57, %1083 ], [ %57, %1077 ], [ %57, %1081 ], [ %57, %1050 ], [ %57, %1064 ], [ %57, %1068 ]
  %1090 = bitcast %"class.blink::CollapsedBorderValue"* %1089 to i64*
  %1091 = load i64, i64* %1090, align 4
  store i64 %1091, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1055) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %999) #12
  br label %1092

1092:                                             ; preds = %1088, %774, %780, %991, %891, %675, %503, %404, %306
  %1093 = phi i64 [ %309, %306 ], [ %407, %404 ], [ %506, %503 ], [ %678, %675 ], [ %894, %891 ], [ %994, %991 ], [ %781, %780 ], [ %777, %774 ], [ %1091, %1088 ]
  %1094 = and i64 %1093, -4294967296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #12
  br label %1095

1095:                                             ; preds = %96, %100, %1092
  %1096 = phi i64 [ %1094, %1092 ], [ %105, %100 ], [ 0, %96 ]
  %1097 = phi i64 [ %1093, %1092 ], [ %104, %100 ], [ 0, %96 ]
  %1098 = and i64 %1097, 4294967295
  %1099 = or i64 %1098, %1096
  ret i64 %1099
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CollapsedBorderValue"* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv(%"class.blink::CollapsedBorderValues"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 2
  ret %"class.blink::CollapsedBorderValue"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutTableCell15ResolvedRowSpanEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 134217728
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %63

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %63, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 48
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  %22 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %26 = bitcast %"class.blink::Member.318"* %25 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br i1 %32, label %40, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %29, %38
  br i1 %39, label %40, label %63

40:                                               ; preds = %33, %21
  %41 = bitcast %"class.blink::Node"* %14 to %"class.blink::HTMLTableCellElement"*
  %42 = tail call i32 @_ZNK5blink20HTMLTableCellElement7rowSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %41) #12
  %43 = icmp ult i32 %42, 2147483646
  br i1 %43, label %44, label %63

44:                                               ; preds = %40
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %46, label %59

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 7
  %50 = bitcast %"class.blink::LayoutObject"** %49 to %"class.blink::LayoutTableSection"**
  %51 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %51, i64 0, i32 3, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 3
  %55 = bitcast %"class.blink::LayoutObject"* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 2147483647
  %58 = sub i32 %53, %57
  br label %59

59:                                               ; preds = %44, %46
  %60 = phi i32 [ %58, %46 ], [ %42, %44 ]
  %61 = icmp ult i32 %60, 2147483646
  %62 = select i1 %61, i32 %60, i32 2147483646
  ret i32 %62

63:                                               ; preds = %1, %40, %33, %12, %16, %6
  %64 = phi i32 [ 1, %1 ], [ 2147483646, %40 ], [ 1, %33 ], [ 1, %12 ], [ 1, %16 ], [ 1, %6 ]
  ret i32 %64
}

declare %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable12SectionBelowEPKNS_18LayoutTableSectionENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell10BorderLeftEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTable"**
  %8 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 81129638414606681695789005144064
  %16 = icmp eq i160 %15, 0
  br i1 %16, label %17, label %57

17:                                               ; preds = %1
  %18 = lshr i160 %14, 102
  %19 = trunc i160 %18 to i8
  %20 = and i8 %19, 3
  switch i8 %20, label %25 [
    i8 0, label %21
    i8 1, label %26
  ]

21:                                               ; preds = %17
  %22 = and i160 %14, 41538374868278621028243970633760768
  %23 = icmp eq i160 %22, 0
  %24 = select i1 %23, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  br label %26

25:                                               ; preds = %17
  br label %26

26:                                               ; preds = %17, %25, %21
  %27 = phi { i64, i64 } [ %24, %21 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %25 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %17 ]
  %28 = extractvalue { i64, i64 } %27, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %29 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %29, align 8
  %31 = icmp eq %"class.blink::CollapsedBorderValues"* %30, null
  br i1 %31, label %69, label %32

32:                                               ; preds = %26
  %33 = extractvalue { i64, i64 } %27, 1
  %34 = bitcast %"class.blink::CollapsedBorderValues"* %30 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = bitcast i8* %35 to %"class.blink::CollapsedBorderValues"*
  %37 = and i64 %28, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %32
  %40 = bitcast i8* %35 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = add i64 %28, -1
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = bitcast i8* %43 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %45 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %44, align 8
  br label %48

46:                                               ; preds = %32
  %47 = inttoptr i64 %28 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %45, %39 ], [ %47, %46 ]
  %50 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %49(%"class.blink::CollapsedBorderValues"* %36) #12
  %51 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 33554431
  %54 = add nuw nsw i32 %53, 1
  %55 = lshr i32 %54, 1
  %56 = shl nuw nsw i32 %55, 6
  br label %69

57:                                               ; preds = %1
  %58 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 7, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %61, i64 0, i32 27
  %63 = load i16, i16* %62, align 8
  %64 = and i16 %63, 224
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %61, i64 0, i32 24, i32 0
  %68 = load i32, i32* %67, align 4
  br label %69

69:                                               ; preds = %26, %48, %66, %57
  %70 = phi i32 [ %68, %66 ], [ 0, %57 ], [ %56, %48 ], [ 0, %26 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell11BorderRightEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTable"**
  %8 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 81129638414606681695789005144064
  %16 = icmp eq i160 %15, 0
  br i1 %16, label %17, label %55

17:                                               ; preds = %1
  %18 = lshr i160 %14, 102
  %19 = trunc i160 %18 to i8
  %20 = and i8 %19, 3
  switch i8 %20, label %25 [
    i8 0, label %21
    i8 1, label %26
  ]

21:                                               ; preds = %17
  %22 = and i160 %14, 41538374868278621028243970633760768
  %23 = icmp eq i160 %22, 0
  %24 = select i1 %23, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  br label %26

25:                                               ; preds = %17
  br label %26

26:                                               ; preds = %17, %25, %21
  %27 = phi { i64, i64 } [ %24, %21 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), i64 0 }, %25 ], [ { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), i64 0 }, %17 ]
  %28 = extractvalue { i64, i64 } %27, 0
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %29 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %29, align 8
  %31 = icmp eq %"class.blink::CollapsedBorderValues"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %26
  %33 = extractvalue { i64, i64 } %27, 1
  %34 = bitcast %"class.blink::CollapsedBorderValues"* %30 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = bitcast i8* %35 to %"class.blink::CollapsedBorderValues"*
  %37 = and i64 %28, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %32
  %40 = bitcast i8* %35 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = add i64 %28, -1
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = bitcast i8* %43 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %45 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %44, align 8
  br label %48

46:                                               ; preds = %32
  %47 = inttoptr i64 %28 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %45, %39 ], [ %47, %46 ]
  %50 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %49(%"class.blink::CollapsedBorderValues"* %36) #12
  %51 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = shl i32 %52, 5
  %54 = and i32 %53, 1073741760
  br label %67

55:                                               ; preds = %1
  %56 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 7, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %59, i64 0, i32 27
  %61 = load i16, i16* %60, align 8
  %62 = and i16 %61, 3584
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %59, i64 0, i32 25, i32 0
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %26, %48, %64, %55
  %68 = phi i32 [ %66, %64 ], [ 0, %55 ], [ %54, %48 ], [ 0, %26 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell9BorderTopEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTable"**
  %8 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 81129638414606681695789005144064
  %16 = icmp eq i160 %15, 0
  br i1 %16, label %17, label %56

17:                                               ; preds = %1
  %18 = and i160 %14, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = and i160 %14, 41538374868278621028243970633760768
  %22 = icmp eq i160 %21, 0
  %23 = select i1 %22, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }
  %24 = extractvalue { i64, i64 } %23, 0
  %25 = extractvalue { i64, i64 } %23, 1
  br label %26

26:                                               ; preds = %20, %17
  %27 = phi i64 [ %24, %20 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues12BeforeBorderEv to i64), %17 ]
  %28 = phi i64 [ %25, %20 ], [ 0, %17 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %29 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %29, align 8
  %31 = icmp eq %"class.blink::CollapsedBorderValues"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.blink::CollapsedBorderValues"* %30 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %28
  %35 = bitcast i8* %34 to %"class.blink::CollapsedBorderValues"*
  %36 = and i64 %27, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %32
  %39 = bitcast i8* %34 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = add i64 %27, -1
  %42 = getelementptr i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %44 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %43, align 8
  br label %47

45:                                               ; preds = %32
  %46 = inttoptr i64 %27 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %44, %38 ], [ %46, %45 ]
  %49 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %48(%"class.blink::CollapsedBorderValues"* %35) #12
  %50 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %49, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 33554431
  %53 = add nuw nsw i32 %52, 1
  %54 = lshr i32 %53, 1
  %55 = shl nuw nsw i32 %54, 6
  br label %67

56:                                               ; preds = %1
  %57 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 7, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 27
  %62 = load i16, i16* %61, align 8
  %63 = icmp ult i16 %62, 8192
  br i1 %63, label %67, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 26, i32 0
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %26, %47, %64, %56
  %68 = phi i32 [ %66, %64 ], [ 0, %56 ], [ %55, %47 ], [ 0, %26 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutTableCell12BorderBottomEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTable"**
  %8 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 81129638414606681695789005144064
  %16 = icmp eq i160 %15, 0
  br i1 %16, label %17, label %54

17:                                               ; preds = %1
  %18 = and i160 %14, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = and i160 %14, 41538374868278621028243970633760768
  %22 = icmp eq i160 %21, 0
  %23 = select i1 %22, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues9EndBorderEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11StartBorderEv to i64), i64 0 }
  %24 = extractvalue { i64, i64 } %23, 0
  %25 = extractvalue { i64, i64 } %23, 1
  br label %26

26:                                               ; preds = %20, %17
  %27 = phi i64 [ %24, %20 ], [ ptrtoint (%"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* @_ZNK5blink21CollapsedBorderValues11AfterBorderEv to i64), %17 ]
  %28 = phi i64 [ %25, %20 ], [ 0, %17 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* %0) #12
  %29 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %29, align 8
  %31 = icmp eq %"class.blink::CollapsedBorderValues"* %30, null
  br i1 %31, label %66, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.blink::CollapsedBorderValues"* %30 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %28
  %35 = bitcast i8* %34 to %"class.blink::CollapsedBorderValues"*
  %36 = and i64 %27, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %32
  %39 = bitcast i8* %34 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = add i64 %27, -1
  %42 = getelementptr i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)**
  %44 = load %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*, %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)** %43, align 8
  br label %47

45:                                               ; preds = %32
  %46 = inttoptr i64 %27 to %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)*
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi %"class.blink::CollapsedBorderValue"* (%"class.blink::CollapsedBorderValues"*)* [ %44, %38 ], [ %46, %45 ]
  %49 = tail call dereferenceable(8) %"class.blink::CollapsedBorderValue"* %48(%"class.blink::CollapsedBorderValues"* %35) #12
  %50 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %49, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = shl i32 %51, 5
  %53 = and i32 %52, 1073741760
  br label %66

54:                                               ; preds = %1
  %55 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %56 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 7, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 27
  %60 = load i16, i16* %59, align 8
  %61 = and i16 %60, 14
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 23, i32 0
  %65 = load i32, i32* %64, align 4
  br label %66

66:                                               ; preds = %26, %47, %63, %54
  %67 = phi i32 [ %65, %63 ], [ 0, %54 ], [ %53, %47 ], [ 0, %26 ]
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutTableCell22IsFirstColumnCollapsedEv(%"class.blink::LayoutTableCell"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_visibility_collapse_column_enabled_E, align 1, !range !3
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %18, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 33554431
  %8 = icmp eq i32 %7, 33554431
  br i1 %8, label %18, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = bitcast %"class.blink::LayoutObject"** %14 to %"class.blink::LayoutTable"**
  %16 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK5blink11LayoutTable25IsAbsoluteColumnCollapsedEj(%"class.blink::LayoutTable"* %16, i32 %7) #12
  br label %18

18:                                               ; preds = %4, %1, %9
  %19 = phi i1 [ %17, %9 ], [ false, %1 ], [ false, %4 ]
  ret i1 %19
}

declare zeroext i1 @_ZNK5blink11LayoutTable25IsAbsoluteColumnCollapsedEj(%"class.blink::LayoutTable"*, i32) local_unnamed_addr #1

declare void @_ZN5blink11LayoutTable45InvalidateCollapsedBordersForAllCellsIfNeededEv(%"class.blink::LayoutTable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21CollapsedBorderValues14VisuallyEqualsERKS0_(%"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 33554431
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %9, 16777215
  br i1 %10, label %11, label %14

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  br label %26

14:                                               ; preds = %7, %2
  %15 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 33554431
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %39, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, 16777215
  br i1 %22, label %23, label %39

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %23, %11
  %27 = phi i32 [ %21, %23 ], [ %13, %11 ]
  %28 = phi i32 [ %25, %23 ], [ %9, %11 ]
  %29 = icmp eq i32 %28, %27
  br i1 %29, label %30, label %156

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 33554431
  %34 = icmp eq i32 %5, %33
  br i1 %34, label %35, label %156

35:                                               ; preds = %30
  %36 = xor i32 %32, %4
  %37 = and i32 %36, 503316480
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %156

39:                                               ; preds = %14, %19, %35
  %40 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 1
  %41 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 1
  %42 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 33554431
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %40, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %48, 16777215
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %41, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  br label %65

53:                                               ; preds = %46, %39
  %54 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 33554431
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %41, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp ugt i32 %60, 16777215
  br i1 %61, label %62, label %78

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %40, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  br label %65

65:                                               ; preds = %62, %50
  %66 = phi i32 [ %60, %62 ], [ %52, %50 ]
  %67 = phi i32 [ %64, %62 ], [ %48, %50 ]
  %68 = icmp eq i32 %67, %66
  br i1 %68, label %69, label %156

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 33554431
  %73 = icmp eq i32 %44, %72
  br i1 %73, label %74, label %156

74:                                               ; preds = %69
  %75 = xor i32 %71, %43
  %76 = and i32 %75, 503316480
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %156

78:                                               ; preds = %53, %58, %74
  %79 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 2
  %80 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 2
  %81 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 2, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 33554431
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %79, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp ugt i32 %87, 16777215
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %80, i64 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  br label %104

92:                                               ; preds = %85, %78
  %93 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 2, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 33554431
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %117, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %80, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp ugt i32 %99, 16777215
  br i1 %100, label %101, label %117

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %79, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %89
  %105 = phi i32 [ %99, %101 ], [ %91, %89 ]
  %106 = phi i32 [ %103, %101 ], [ %87, %89 ]
  %107 = icmp eq i32 %106, %105
  br i1 %107, label %108, label %156

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 2, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, 33554431
  %112 = icmp eq i32 %83, %111
  br i1 %112, label %113, label %156

113:                                              ; preds = %108
  %114 = xor i32 %110, %82
  %115 = and i32 %114, 503316480
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %156

117:                                              ; preds = %92, %97, %113
  %118 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 3
  %119 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 3
  %120 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %0, i64 0, i32 0, i64 3, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 33554431
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %118, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp ugt i32 %126, 16777215
  br i1 %127, label %128, label %131

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %119, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  br label %143

131:                                              ; preds = %124, %117
  %132 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 3, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, 33554431
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %156, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %119, i64 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp ugt i32 %138, 16777215
  br i1 %139, label %140, label %156

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::CollapsedBorderValue", %"class.blink::CollapsedBorderValue"* %118, i64 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  br label %143

143:                                              ; preds = %140, %128
  %144 = phi i32 [ %138, %140 ], [ %130, %128 ]
  %145 = phi i32 [ %142, %140 ], [ %126, %128 ]
  %146 = icmp eq i32 %145, %144
  br i1 %146, label %147, label %156

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %1, i64 0, i32 0, i64 3, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 33554431
  %151 = icmp eq i32 %122, %150
  br i1 %151, label %152, label %156

152:                                              ; preds = %147
  %153 = xor i32 %149, %121
  %154 = and i32 %153, 503316480
  %155 = icmp eq i32 %154, 0
  br label %156

156:                                              ; preds = %104, %108, %65, %69, %26, %30, %152, %147, %143, %136, %131, %113, %74, %35
  %157 = phi i1 [ false, %113 ], [ false, %74 ], [ false, %35 ], [ true, %136 ], [ false, %147 ], [ false, %143 ], [ %155, %152 ], [ true, %131 ], [ false, %30 ], [ false, %26 ], [ false, %69 ], [ false, %65 ], [ false, %108 ], [ false, %104 ]
  ret i1 %157
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutTableCell28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutTableCell"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TableCellPainter", align 8
  %5 = bitcast %"class.blink::TableCellPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::TableCellPainter", %"class.blink::TableCellPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutTableCell"* %0, %"class.blink::LayoutTableCell"** %6, align 8
  call void @_ZN5blink16TableCellPainter28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TableCellPainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

declare void @_ZN5blink16TableCellPainter28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TableCellPainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutTableCell9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutTableCell"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TableCellPainter", align 8
  %5 = bitcast %"class.blink::TableCellPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::TableCellPainter", %"class.blink::TableCellPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutTableCell"* %0, %"class.blink::LayoutTableCell"** %6, align 8
  call void @_ZN5blink16TableCellPainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TableCellPainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

declare void @_ZN5blink16TableCellPainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TableCellPainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutTableCell17ScrollbarsChangedEbbNS_11LayoutBlock22ScrollbarChangeContextE(%"class.blink::LayoutTableCell"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::LayoutTableCell"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"* %6, i1 zeroext %1, i1 zeroext %2, i32 1) #12
  %7 = bitcast %"class.blink::LayoutTableCell"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 28
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* %5) #12
  %12 = icmp ne i32 %3, 1
  %13 = or i1 %12, %11
  br i1 %13, label %125, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %15)
  %17 = extractvalue { i64, i64 } %16, 1
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = icmp slt i32 %20, 0
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %20) #12
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !4
  %27 = sdiv i32 %26, 64
  %28 = add i32 %26, 63
  %29 = icmp ult i32 %28, 127
  br i1 %29, label %125, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = trunc i96 %33 to i32
  %35 = icmp slt i32 %34, 0
  %36 = xor i1 %35, true
  %37 = or i1 %36, %1
  %38 = or i1 %35, %2
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %125

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = and i160 %45, 276701161105643274240
  %47 = icmp eq i160 %46, 18446744073709551616
  br i1 %47, label %48, label %121

48:                                               ; preds = %40
  %49 = and i160 %45, 15211807202738752817960438464512
  %50 = icmp eq i160 %49, 0
  %51 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %52 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %53 = select i1 %50, i32* %51, i32* %52
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 33554431
  br i1 %57, label %63, label %58

58:                                               ; preds = %48
  %59 = icmp slt i32 %56, -33554432
  br i1 %59, label %65, label %60

60:                                               ; preds = %58
  %61 = shl i32 %56, 6
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %63, label %65

63:                                               ; preds = %48, %60
  %64 = phi i32 [ %61, %60 ], [ 2147483647, %48 ]
  br label %65

65:                                               ; preds = %58, %60, %63
  %66 = phi i32 [ %64, %63 ], [ %61, %60 ], [ -2147483648, %58 ]
  %67 = phi i32 [ -2147483648, %63 ], [ 2147483647, %60 ], [ 2147483647, %58 ]
  %68 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %54, i32 %66) #12
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !4
  %72 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, 33554431
  br i1 %74, label %80, label %75

75:                                               ; preds = %65
  %76 = icmp slt i32 %73, -33554432
  br i1 %76, label %82, label %77

77:                                               ; preds = %75
  %78 = shl i32 %73, 6
  %79 = icmp sgt i32 %78, -1
  br i1 %79, label %80, label %82

80:                                               ; preds = %65, %77
  %81 = phi i32 [ %78, %77 ], [ 2147483647, %65 ]
  br label %82

82:                                               ; preds = %75, %77, %80
  %83 = phi i32 [ %81, %80 ], [ %78, %77 ], [ -2147483648, %75 ]
  %84 = phi i32 [ -2147483648, %80 ], [ 2147483647, %77 ], [ 2147483647, %75 ]
  %85 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %71, i32 %83) #12
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !4
  %89 = shl nsw i32 %27, 6
  %90 = icmp sgt i32 %26, -64
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %54, i32 %89) #12
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !4
  %96 = icmp sgt i32 %88, -1
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %95, i32 %88) #12
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 %97, i32 %100, !prof !4
  %102 = sdiv i32 %101, 2
  %103 = sext i32 %102 to i64
  %104 = tail call i1 @llvm.is.constant.i64(i64 %103) #12
  br i1 %104, label %111, label %105

105:                                              ; preds = %82
  %106 = icmp slt i32 %101, -1
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = add nsw i64 %103, 2147483648
  %109 = icmp ult i64 %108, 4294967296
  %110 = select i1 %109, i32 %102, i32 %107, !prof !2
  br label %111

111:                                              ; preds = %82, %105
  %112 = phi i32 [ %110, %105 ], [ %102, %82 ]
  %113 = icmp sgt i32 %112, -1
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %112) #12
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !4
  %119 = sdiv i32 %112, 64
  store i32 %119, i32* %55, align 8
  %120 = sdiv i32 %118, 64
  store i32 %120, i32* %72, align 4
  br label %125

121:                                              ; preds = %40
  %122 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %123 = load i32, i32* %122, align 4
  %124 = sub nsw i32 %123, %27
  store i32 %124, i32* %122, align 4
  br label %125

125:                                              ; preds = %14, %30, %121, %111, %4
  ret void
}

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #12
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #12
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #12
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1) #12
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableCell"* @_ZN5blink15LayoutTableCell15CreateAnonymousEPNS_8DocumentE13scoped_refptrINS_13ComputedStyleEENS_12LegacyLayoutE(%"class.blink::Document"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 0, i32 0
  %5 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateTableCellERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %4, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #12
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %7, align 8
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %6, %"class.blink::ComputedStyle"* %1, i32 1) #12
  %8 = bitcast %"class.blink::LayoutBlockFlow"* %5 to %"class.blink::LayoutTableCell"*
  ret %"class.blink::LayoutTableCell"* %8
}

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateTableCellERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink15LayoutTableCell32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutTableCell"* nocapture readnone, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory34CreateAnonymousTableCellWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %1) #12
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0
  ret %"class.blink::LayoutBox"* %4
}

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory34CreateAnonymousTableCellWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutTableCell33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutTableCell"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 4294967296
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 7
  %14 = bitcast %"class.blink::LayoutObject"** %13 to %"class.blink::LayoutTable"**
  %15 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %18, i64 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = and i160 %21, 81129638414606681695789005144064
  %23 = icmp eq i160 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %2, %8
  %25 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = tail call zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"* %25, %"struct.blink::PhysicalRect"* dereferenceable(16) %1) #12
  br label %27

27:                                               ; preds = %8, %24
  %28 = phi i1 [ %26, %24 ], [ false, %8 ]
  ret i1 %28
}

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutTableCell14HasLineIfEmptyEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %9) #12
  br i1 %12, label %16, label %13

13:                                               ; preds = %1, %7, %11
  %14 = bitcast %"class.blink::LayoutTableCell"* %0 to %"class.blink::LayoutBlock"*
  %15 = tail call zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"* %14) #12
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi i1 [ %15, %13 ], [ true, %11 ]
  ret i1 %17
}

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutTableCell15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutTableCell"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TableCellPaintInvalidator", align 8
  %4 = bitcast %"class.blink::TableCellPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.blink::TableCellPaintInvalidator", %"class.blink::TableCellPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutTableCell"* %0, %"class.blink::LayoutTableCell"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::TableCellPaintInvalidator", %"class.blink::TableCellPaintInvalidator"* %3, i64 0, i32 1
  store %"struct.blink::PaintInvalidatorContext"* %1, %"struct.blink::PaintInvalidatorContext"** %6, align 8
  call void @_ZN5blink25TableCellPaintInvalidator15InvalidatePaintEv(%"class.blink::TableCellPaintInvalidator"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

declare void @_ZN5blink25TableCellPaintInvalidator15InvalidatePaintEv(%"class.blink::TableCellPaintInvalidator"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutTableCellD2Ev(%"class.blink::LayoutTableCell"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutTableCell"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  store %"class.blink::CollapsedBorderValues"* null, %"class.blink::CollapsedBorderValues"** %4, align 8
  %6 = icmp eq %"class.blink::CollapsedBorderValues"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::CollapsedBorderValues"* %5 to i8*
  tail call void @free(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %10) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutTableCellD0Ev(%"class.blink::LayoutTableCell"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutTableCell"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %4, align 8
  store %"class.blink::CollapsedBorderValues"* null, %"class.blink::CollapsedBorderValues"** %4, align 8
  %6 = icmp eq %"class.blink::CollapsedBorderValues"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::CollapsedBorderValues"* %5 to i8*
  tail call void @free(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %10) #12
  %11 = bitcast %"class.blink::LayoutTableCell"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %11) #12
  ret void
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink15LayoutTableCell7GetNameEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #12
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #12
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink15LayoutTableCell28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 1
  ret %"class.blink::LayoutNGTableCellInterface"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #12
  ret %"class.blink::LayoutBoxModelObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

declare %"class.blink::LayoutObject"* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1739* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  %6 = icmp eq i32 %2, 1
  tail call void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"* %5, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %6) #12
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1853"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1854"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutBlockFlow"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutTableCell8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutTableCell"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = or i32 %1, 1
  %4 = icmp eq i32 %3, 47
  ret i1 %4
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !4

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #12
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #12
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !4
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #12
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !32

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #12
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !4
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !32

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #12
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !4

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #12
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #12
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #12
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #12
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #12
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i32, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1853"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1853"*) unnamed_addr #1

declare i64 @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"* @_ZNK5blink15LayoutTableCell17LocationContainerEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutTableSection"**
  %6 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %6, i64 0, i32 0, i32 0
  ret %"class.blink::LayoutBox"* %7
}

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !264
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1033, i64 0 }, %19 ], [ { i64 1041, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1017, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #12
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !267
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1033, i64 0 }, %61 ], [ { i64 1041, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1017, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #12
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #12
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #12
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #12
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !4
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !270
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1041, i64 0 }, %19 ], [ { i64 1033, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1025, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #12
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 3, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !273
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1041, i64 0 }, %61 ], [ { i64 1033, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1025, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #12
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #12
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #12
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #12
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !4
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow10BreakAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #12
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #12
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #12
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #12
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #12
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlockFlow"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutTableCell27CreatesNewFormattingContextEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlockFlow"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"* @_ZNK5blink15LayoutTableCell17ToLayoutTableCellEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutTableCell"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink15LayoutTableCell14ToLayoutObjectEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZN5blink15LayoutTableCell21ToMutableLayoutObjectEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink15LayoutTableCell14TableInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTable"**
  %8 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutTable"* %8, null
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %8, i64 0, i32 1
  %11 = select i1 %9, %"class.blink::LayoutNGTableInterface"* null, %"class.blink::LayoutNGTableInterface"* %10
  ret %"class.blink::LayoutNGTableInterface"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"* @_ZNK5blink15LayoutTableCell17NextCellInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTableCell"**
  %4 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %3, align 8
  ret %"class.blink::LayoutTableCell"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"* @_ZNK5blink15LayoutTableCell21PreviousCellInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTableCell"**
  %4 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %3, align 8
  ret %"class.blink::LayoutTableCell"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink15LayoutTableCell12RowInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTableRow"**
  %4 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutTableRow"* %4, null
  %6 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %4, i64 0, i32 2
  %7 = select i1 %5, %"class.blink::LayoutNGTableRowInterface"* null, %"class.blink::LayoutNGTableRowInterface"* %6
  ret %"class.blink::LayoutNGTableRowInterface"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink15LayoutTableCell16SectionInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 7
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutTableSection"**
  %6 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTableSection"* %6, null
  %8 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %6, i64 0, i32 2
  %9 = select i1 %7, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %8
  ret %"class.blink::LayoutNGTableSectionInterface"* %9
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink15LayoutTableCellD1Ev(%"class.blink::LayoutTableCell"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 4
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 70
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 74
  %7 = bitcast i32* %6 to %"class.blink::CollapsedBorderValues"**
  %8 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %7, align 8
  store %"class.blink::CollapsedBorderValues"* null, %"class.blink::CollapsedBorderValues"** %7, align 8
  %9 = icmp eq %"class.blink::CollapsedBorderValues"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::CollapsedBorderValues"* %8 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i32* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %13) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink15LayoutTableCellD0Ev(%"class.blink::LayoutTableCell"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 4
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 70
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*], [18 x i8*] }, { [239 x i8*], [7 x i8*], [18 x i8*] }* @_ZTVN5blink15LayoutTableCellE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 74
  %7 = bitcast i32* %6 to %"class.blink::CollapsedBorderValues"**
  %8 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %7, align 8
  store %"class.blink::CollapsedBorderValues"* null, %"class.blink::CollapsedBorderValues"** %7, align 8
  %9 = icmp eq %"class.blink::CollapsedBorderValues"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::CollapsedBorderValues"* %8 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i32* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %13) #12
  %14 = bitcast i32* %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"* @_ZThn280_NK5blink15LayoutTableCell17ToLayoutTableCellEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = bitcast %class.scoped_refptr* %2 to %"class.blink::LayoutTableCell"*
  ret %"class.blink::LayoutTableCell"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZThn280_NK5blink15LayoutTableCell14ToLayoutObjectEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = bitcast %class.scoped_refptr* %2 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZThn280_N5blink15LayoutTableCell21ToMutableLayoutObjectEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = bitcast %class.scoped_refptr* %2 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZThn280_NK5blink15LayoutTableCell14TableInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 6
  %4 = bitcast %class.scoped_refptr* %3 to %"class.blink::LayoutObject"**
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = bitcast %"class.blink::LayoutObject"** %8 to %"class.blink::LayoutTable"**
  %10 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutTable"* %10, null
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %10, i64 0, i32 1
  %13 = select i1 %11, %"class.blink::LayoutNGTableInterface"* null, %"class.blink::LayoutNGTableInterface"* %12
  ret %"class.blink::LayoutNGTableInterface"* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn280_NK5blink15LayoutTableCell22StyleOrColLogicalWidthEv(%"class.blink::Length"* noalias sret, %"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %4 = bitcast %class.scoped_refptr* %3 to %"class.blink::LayoutTableCell"*
  tail call void @_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv(%"class.blink::Length"* sret %0, %"class.blink::LayoutTableCell"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn280_NK5blink15LayoutTableCell22IntrinsicPaddingBeforeEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 38
  %4 = bitcast %class.scoped_refptr* %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn280_NK5blink15LayoutTableCell21IntrinsicPaddingAfterEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = bitcast %class.scoped_refptr* %2 to %"class.blink::LayoutTableCell"*
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %3, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn280_NK5blink15LayoutTableCell8RowIndexEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 6
  %4 = bitcast %class.scoped_refptr* %3 to %"class.blink::LayoutTableRow"**
  %5 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 2147483647
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn280_NK5blink15LayoutTableCell15ResolvedRowSpanEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 36
  %4 = bitcast %class.scoped_refptr* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 134217728
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %68, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr* %2 to %"class.blink::LayoutTableCell"*
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 16777216
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %68

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 5
  %17 = bitcast %class.scoped_refptr* %16 to %"class.blink::Node"**
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %68, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %68

25:                                               ; preds = %20
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %44, label %37

37:                                               ; preds = %25
  %38 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %33, %42
  br i1 %43, label %44, label %68

44:                                               ; preds = %37, %25
  %45 = bitcast %"class.blink::Node"* %18 to %"class.blink::HTMLTableCellElement"*
  %46 = tail call i32 @_ZNK5blink20HTMLTableCellElement7rowSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %45) #12
  %47 = icmp ult i32 %46, 2147483646
  br i1 %47, label %48, label %68

48:                                               ; preds = %44
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %48
  %51 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 6
  %52 = bitcast %class.scoped_refptr* %51 to %"class.blink::LayoutObject"**
  %53 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 7
  %55 = bitcast %"class.blink::LayoutObject"** %54 to %"class.blink::LayoutTableSection"**
  %56 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %56, i64 0, i32 3, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 3
  %60 = bitcast %"class.blink::LayoutObject"* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 2147483647
  %63 = sub i32 %58, %62
  br label %64

64:                                               ; preds = %50, %48
  %65 = phi i32 [ %63, %50 ], [ %46, %48 ]
  %66 = icmp ult i32 %65, 2147483646
  %67 = select i1 %66, i32 %65, i32 2147483646
  br label %68

68:                                               ; preds = %1, %8, %15, %20, %37, %44, %64
  %69 = phi i32 [ %67, %64 ], [ 1, %1 ], [ 2147483646, %44 ], [ 1, %37 ], [ 1, %15 ], [ 1, %20 ], [ 1, %8 ]
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn280_NK5blink15LayoutTableCell19AbsoluteColumnIndexEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 36
  %4 = bitcast %class.scoped_refptr* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 33554431
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn280_NK5blink15LayoutTableCell7ColSpanEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 36
  %4 = bitcast %class.scoped_refptr* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 67108864
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %49, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr* %2 to %"class.blink::LayoutTableCell"*
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 16777216
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %49

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 5
  %17 = bitcast %class.scoped_refptr* %16 to %"class.blink::Node"**
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %49, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %20
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %44, label %37

37:                                               ; preds = %25
  %38 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %33, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %37, %25
  %45 = bitcast %"class.blink::Node"* %18 to %"class.blink::HTMLTableCellElement"*
  %46 = tail call i32 @_ZNK5blink20HTMLTableCellElement7colSpanEv(%"class.blink::HTMLTableCellElement"* nonnull %45) #12
  %47 = icmp ult i32 %46, 33554430
  %48 = select i1 %47, i32 %46, i32 33554430
  br label %49

49:                                               ; preds = %1, %8, %15, %20, %37, %44
  %50 = phi i32 [ 1, %1 ], [ %48, %44 ], [ 1, %37 ], [ 1, %15 ], [ 1, %20 ], [ 1, %8 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"* @_ZTchn280_h280_NK5blink15LayoutTableCell17NextCellInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 8
  %4 = bitcast %class.scoped_refptr* %3 to %"class.blink::LayoutTableCell"**
  %5 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableCell"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %5, i64 0, i32 1
  %8 = bitcast %"class.blink::LayoutNGTableCellInterface"* %7 to %"class.blink::LayoutTableCell"*
  %9 = select i1 %6, %"class.blink::LayoutTableCell"* null, %"class.blink::LayoutTableCell"* %8
  ret %"class.blink::LayoutTableCell"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"* @_ZTchn280_h280_NK5blink15LayoutTableCell21PreviousCellInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 7
  %4 = bitcast %class.scoped_refptr* %3 to %"class.blink::LayoutTableCell"**
  %5 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableCell"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %5, i64 0, i32 1
  %8 = bitcast %"class.blink::LayoutNGTableCellInterface"* %7 to %"class.blink::LayoutTableCell"*
  %9 = select i1 %6, %"class.blink::LayoutTableCell"* null, %"class.blink::LayoutTableCell"* %8
  ret %"class.blink::LayoutTableCell"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZThn280_NK5blink15LayoutTableCell12RowInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 6
  %4 = bitcast %class.scoped_refptr* %3 to %"class.blink::LayoutTableRow"**
  %5 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableRow"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %5, i64 0, i32 2
  %8 = select i1 %6, %"class.blink::LayoutNGTableRowInterface"* null, %"class.blink::LayoutNGTableRowInterface"* %7
  ret %"class.blink::LayoutNGTableRowInterface"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZThn280_NK5blink15LayoutTableCell16SectionInterfaceEv(%"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 6
  %4 = bitcast %class.scoped_refptr* %3 to %"class.blink::LayoutObject"**
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutTableSection"**
  %8 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutTableSection"* %8, null
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %8, i64 0, i32 2
  %11 = select i1 %9, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %10
  ret %"class.blink::LayoutNGTableSectionInterface"* %11
}

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = tail call i8* @_Znwm(i64 192) #13
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #12
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #12
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #12
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #12
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #12
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #12
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #12
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #12
  %40 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #12
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #12
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #12
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #12
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #12
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  ret i64 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !276

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !278

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !279

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #13
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #13, !noalias !280
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !280
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #13
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1805"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1805", %"class.WTF::Vector.1805"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1805", %"class.WTF::Vector.1805"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %24, i64 %25
  ret %"struct.blink::LayoutTableSection::TableGridRow"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1829"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1829", %"class.WTF::Vector.1829"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1829", %"class.WTF::Vector.1829"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %24, i64 %25
  ret %"struct.blink::LayoutTable::ColumnStruct"* %26
}

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* sret, %"class.blink::LayoutTable"*, i32) local_unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #5

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #12
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 -23
  %8 = icmp eq %"class.base::RefCounted.732"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 1
  %11 = bitcast %"class.base::RefCounted.732"* %10 to %"class.blink::StyleCachedData"**
  %12 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %11, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %11, align 8
  %13 = icmp eq %"class.blink::StyleCachedData"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %15, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %15, align 8
  %17 = icmp eq %"class.WTF::Vector.739"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22, !prof !4

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  br label %27

27:                                               ; preds = %22, %33
  %28 = phi %class.scoped_refptr* [ %34, %33 ], [ %24, %22 ]
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = icmp eq %"class.blink::ComputedStyle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %30) #12
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %26
  br i1 %35, label %36, label %27

36:                                               ; preds = %33
  store i32 0, i32* %19, align 4
  br label %37

37:                                               ; preds = %36, %18
  %38 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.scoped_refptr*, %class.scoped_refptr** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr*
  %42 = icmp eq %class.scoped_refptr* %39, %41
  br i1 %42, label %45, label %43, !prof !2

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1879"* %44, %class.scoped_refptr* %39) #12
  br label %45

45:                                               ; preds = %37, %43
  store %class.scoped_refptr* null, %class.scoped_refptr** %38, align 8
  %46 = bitcast %"class.WTF::Vector.739"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #12
  br label %47

47:                                               ; preds = %14, %45
  %48 = bitcast %"class.blink::StyleCachedData"* %12 to i8*
  tail call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %47, %9
  %50 = bitcast %"class.base::RefCounted.732"* %7 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* nonnull %50) #12
  %51 = bitcast %"class.base::RefCounted.732"* %7 to i8*
  tail call void @free(i8* %51) #12
  br label %52

52:                                               ; preds = %49, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #12
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #12
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #12
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #12
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #12
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #12
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #12
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #12
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #12
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #12
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #12
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #12
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #12
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #12
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #12
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #12
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #12
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #12
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #12
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #12
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #12
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #12
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #12
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #12
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #12
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #12
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #12
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #12
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #12
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #12
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #12
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #12
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #12
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3) #12
  %4 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 -23
  %9 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 1
  %10 = bitcast %"class.base::RefCounted.732"* %9 to %"class.blink::StyleCachedData"**
  %11 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %10, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %10, align 8
  %12 = icmp eq %"class.blink::StyleCachedData"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %14, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.739"* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21, !prof !4

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %32
  %27 = phi %class.scoped_refptr* [ %33, %32 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %29) #12
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %34 = icmp eq %class.scoped_refptr* %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %32
  store i32 0, i32* %18, align 4
  br label %36

36:                                               ; preds = %35, %17
  %37 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr*, %class.scoped_refptr** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %class.scoped_refptr*
  %41 = icmp eq %class.scoped_refptr* %38, %40
  br i1 %41, label %44, label %42, !prof !2

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1879"* %43, %class.scoped_refptr* %38) #12
  br label %44

44:                                               ; preds = %36, %42
  store %class.scoped_refptr* null, %class.scoped_refptr** %37, align 8
  %45 = bitcast %"class.WTF::Vector.739"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #12
  br label %46

46:                                               ; preds = %13, %44
  %47 = bitcast %"class.blink::StyleCachedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %46, %7
  %49 = bitcast %"class.base::RefCounted.732"* %8 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %49) #12
  %50 = bitcast %"class.base::RefCounted.732"* %8 to i8*
  tail call void @free(i8* %50) #12
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1879"*, %class.scoped_refptr*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #12
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !2

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #12
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #12
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #12
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #12
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !4

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #12
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !2

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !4

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #12
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #12
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #12
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #12
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #12
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #12
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #12
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #12
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #12
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #12
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #12
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #12
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !4

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #12
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #12
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #12
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #12
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #12
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #12
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #12
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #12
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #12
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #12
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #12
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #12
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #12
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #12
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #12
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #12
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #12
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #12
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #12
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #12
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #12
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #12
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #12
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !4

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #12
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #12
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #12
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #12
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !2

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !4

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #12
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #12
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #12
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #12
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !4

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #12
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #12
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !4

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !2

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #12
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #12
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !2

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !4

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #12
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #12
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #12
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #12
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #12
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #12
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #12
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #12
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #12
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #12
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #12
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #12
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #12
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !2

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !4

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #12
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #12
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #12
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !2

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !4

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #12
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #12
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #12
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #12
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #12
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #12
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !2

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #12
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #12
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #12
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #12
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #12
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #12
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #12
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #12
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #12
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #12
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !2

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !4

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #12
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #12
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #12
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #12
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !2

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !4

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #12
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #12
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #12
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #12
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #12
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !2

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !4

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #12
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !2

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !4

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #12
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #12
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !4

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #12
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #12
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !4

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #12
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !2

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !4

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #12
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #12
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !2

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !4

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #12
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #12
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #12
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #12
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !2

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !4

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !2

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #12
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !2

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !2

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !2

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !2

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !2

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !2

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !4

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #12
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #12
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !2

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !2

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !4

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #12
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #12
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !2

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !2

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !4

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #12
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #12
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !2

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !2

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !4

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #12
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #12
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !2

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !2

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !4

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #12
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #12
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !2

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !2

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !4

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #12
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #12
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !2

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !4

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !4

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #12
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #12
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #12
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #12
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #12
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #12
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #12
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !3
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #12
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #12
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !4

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #12
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #12
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !4

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #12
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #12
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #12
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #12
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #12
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #12
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #12
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #12
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #12
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #12
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #12
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #12
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #12
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #12
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #12
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #12
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #12
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #12
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #12
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #12
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #12
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #12
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #12
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !2

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !4

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #12
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #12
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #12
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #12
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !2

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !4

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #12
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #12
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #12
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #12
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !2

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !4

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #12
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #12
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #12
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #12
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !2

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !4

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #12
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #12
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #12
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !2

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !4

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #12
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #12
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !2

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !4

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #12
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #12
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #12
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !4

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #12
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #12
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !4

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !2

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #12
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #12
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #12
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !2

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !4

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #12
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #12
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #12
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #12
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #12
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #12
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !2

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !4

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #12
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #12
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #12
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #12
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #12
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #12
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #12
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #12
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !4

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #12
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #12
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #12
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind readnone }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink6Length5FixedIiEES0_T_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink6Length5FixedIiEES0_T_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!32 = !{!"branch_weights", i32 4001, i32 4000000}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!35 = distinct !{!35, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv: argument 0"}
!41 = distinct !{!41, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv: argument 0"}
!44 = distinct !{!44, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv: argument 0"}
!47 = distinct !{!47, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv: argument 0"}
!50 = distinct !{!50, !"_ZNK5blink15LayoutTableCell33LogicalIntrinsicPaddingToPhysicalEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!53 = distinct !{!53, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!59 = distinct !{!59, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!62 = distinct !{!62, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!68 = distinct !{!68, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!71 = distinct !{!71, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!74 = distinct !{!74, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!77 = distinct !{!77, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!80 = distinct !{!80, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv: argument 0"}
!83 = distinct !{!83, !"_ZNK5blink15LayoutTableCell36CollapsedBorderValuesMethodsPhysicalEv"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!86 = distinct !{!86, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!89 = distinct !{!89, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!92 = distinct !{!92, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!95 = distinct !{!95, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!98 = distinct !{!98, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!101 = distinct !{!101, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!104 = distinct !{!104, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!107 = distinct !{!107, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!110 = distinct !{!110, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!113 = distinct !{!113, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!116 = distinct !{!116, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!119 = distinct !{!119, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!122 = distinct !{!122, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!125 = distinct !{!125, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!128 = distinct !{!128, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!131 = distinct !{!131, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!134 = distinct !{!134, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!137 = distinct !{!137, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!140 = distinct !{!140, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!143 = distinct !{!143, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!146 = distinct !{!146, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_: argument 0"}
!149 = distinct !{!149, !"_ZNK5blink13ComputedStyle23PhysicalBorderToLogicalERKS0_"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!152 = distinct !{!152, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!155 = distinct !{!155, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!158 = distinct !{!158, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!161 = distinct !{!161, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!164 = distinct !{!164, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!167 = distinct !{!167, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!170 = distinct !{!170, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!173 = distinct !{!173, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!176 = distinct !{!176, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!179 = distinct !{!179, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!182 = distinct !{!182, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!185 = distinct !{!185, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!188 = distinct !{!188, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!189 = !{!190}
!190 = distinct !{!190, !191, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!191 = distinct !{!191, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!192 = !{!193}
!193 = distinct !{!193, !194, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!194 = distinct !{!194, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!197 = distinct !{!197, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!200 = distinct !{!200, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!201 = !{!202}
!202 = distinct !{!202, !203, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!203 = distinct !{!203, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!204 = !{!205}
!205 = distinct !{!205, !206, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!206 = distinct !{!206, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!209 = distinct !{!209, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!210 = !{!211}
!211 = distinct !{!211, !212, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!212 = distinct !{!212, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!215 = distinct !{!215, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!216 = !{!217}
!217 = distinct !{!217, !218, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!218 = distinct !{!218, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!221 = distinct !{!221, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!222 = !{!223}
!223 = distinct !{!223, !224, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!224 = distinct !{!224, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!227 = distinct !{!227, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!230 = distinct !{!230, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!231 = !{!232}
!232 = distinct !{!232, !233, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!233 = distinct !{!233, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!234 = !{!235}
!235 = distinct !{!235, !236, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!236 = distinct !{!236, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!237 = !{!238}
!238 = distinct !{!238, !239, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!239 = distinct !{!239, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!240 = !{!241}
!241 = distinct !{!241, !242, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!242 = distinct !{!242, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!243 = !{!244}
!244 = distinct !{!244, !245, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!245 = distinct !{!245, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!246 = !{!247}
!247 = distinct !{!247, !248, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!248 = distinct !{!248, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!249 = !{!250}
!250 = distinct !{!250, !251, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!251 = distinct !{!251, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!252 = !{!253}
!253 = distinct !{!253, !254, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!254 = distinct !{!254, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!255 = !{!256}
!256 = distinct !{!256, !257, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!257 = distinct !{!257, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!258 = !{!259}
!259 = distinct !{!259, !260, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv: argument 0"}
!260 = distinct !{!260, !"_ZNK5blink13ComputedStyle28PhysicalBorderStyleToLogicalEv"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!263 = distinct !{!263, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!266 = distinct !{!266, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!269 = distinct !{!269, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!272 = distinct !{!272, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!273 = !{!274}
!274 = distinct !{!274, !275, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!275 = distinct !{!275, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!276 = distinct !{!276, !277}
!277 = !{!"llvm.loop.unroll.disable"}
!278 = distinct !{!278, !277}
!279 = distinct !{!279, !277}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!282 = distinct !{!282, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
