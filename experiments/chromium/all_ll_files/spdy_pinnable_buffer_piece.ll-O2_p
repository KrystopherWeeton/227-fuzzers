; ModuleID = '../../net/third_party/quiche/src/spdy/core/spdy_pinnable_buffer_piece.cc'
source_filename = "../../net/third_party/quiche/src/spdy/core/spdy_pinnable_buffer_piece.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.spdy::SpdyPinnableBufferPiece" = type { i8*, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

@_ZN4spdy23SpdyPinnableBufferPieceC1Ev = hidden unnamed_addr alias void (%"struct.spdy::SpdyPinnableBufferPiece"*), void (%"struct.spdy::SpdyPinnableBufferPiece"*)* @_ZN4spdy23SpdyPinnableBufferPieceC2Ev
@_ZN4spdy23SpdyPinnableBufferPieceD1Ev = hidden unnamed_addr alias void (%"struct.spdy::SpdyPinnableBufferPiece"*), void (%"struct.spdy::SpdyPinnableBufferPiece"*)* @_ZN4spdy23SpdyPinnableBufferPieceD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4spdy23SpdyPinnableBufferPieceC2Ev(%"struct.spdy::SpdyPinnableBufferPiece"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.spdy::SpdyPinnableBufferPiece"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy23SpdyPinnableBufferPieceD2Ev(%"struct.spdy::SpdyPinnableBufferPiece"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  store i8* null, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #6
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy23SpdyPinnableBufferPiece3PinEv(%"struct.spdy::SpdyPinnableBufferPiece"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = tail call i8* @_Znam(i64 %11) #6
  store i8* %14, i8** %2, align 8
  %15 = ptrtoint i8* %14 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* nonnull align 1 %7, i64 %11, i1 false) #7
  %16 = bitcast %"struct.spdy::SpdyPinnableBufferPiece"* %0 to i64*
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %1, %9, %5, %13
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4spdy23SpdyPinnableBufferPiece4SwapEPS0_(%"struct.spdy::SpdyPinnableBufferPiece"* nocapture, %"struct.spdy::SpdyPinnableBufferPiece"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 %4, i64* %5, align 8
  %7 = bitcast %"struct.spdy::SpdyPinnableBufferPiece"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"struct.spdy::SpdyPinnableBufferPiece"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  store i64 %8, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.spdy::SpdyPinnableBufferPiece", %"struct.spdy::SpdyPinnableBufferPiece"* %1, i64 0, i32 2
  %13 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
