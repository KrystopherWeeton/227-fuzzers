; ModuleID = '../../third_party/webrtc/call/flexfec_receive_stream.cc'
source_filename = "../../third_party/webrtc/call/flexfec_receive_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::FlexfecReceiveStream::Config" = type { i32, i32, %"class.std::__1::vector", i32, i32, %"class.webrtc::Transport"*, i8, %"class.std::__1::vector.1" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.webrtc::RtpExtension"*, %"struct.webrtc::RtpExtension"*, %"class.std::__1::__compressed_pair.8" }
%"struct.webrtc::RtpExtension" = type <{ %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.webrtc::RtpExtension"* }
%"class.webrtc::Transport" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN6webrtc20FlexfecReceiveStream6ConfigC1EPNS_9TransportE = hidden unnamed_addr alias void (%"struct.webrtc::FlexfecReceiveStream::Config"*, %"class.webrtc::Transport"*), void (%"struct.webrtc::FlexfecReceiveStream::Config"*, %"class.webrtc::Transport"*)* @_ZN6webrtc20FlexfecReceiveStream6ConfigC2EPNS_9TransportE
@_ZN6webrtc20FlexfecReceiveStream6ConfigC1ERKS1_ = hidden unnamed_addr alias void (%"struct.webrtc::FlexfecReceiveStream::Config"*, %"struct.webrtc::FlexfecReceiveStream::Config"*), void (%"struct.webrtc::FlexfecReceiveStream::Config"*, %"struct.webrtc::FlexfecReceiveStream::Config"*)* @_ZN6webrtc20FlexfecReceiveStream6ConfigC2ERKS1_
@_ZN6webrtc20FlexfecReceiveStream6ConfigD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::FlexfecReceiveStream::Config"*), void (%"struct.webrtc::FlexfecReceiveStream::Config"*)* @_ZN6webrtc20FlexfecReceiveStream6ConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20FlexfecReceiveStream6ConfigC2EPNS_9TransportE(%"struct.webrtc::FlexfecReceiveStream::Config"* nocapture, %"class.webrtc::Transport"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 0
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 32, i1 false)
  store i32 1, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 5
  store %"class.webrtc::Transport"* %1, %"class.webrtc::Transport"** %7, align 8
  %8 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 6
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 7
  %10 = bitcast %"class.std::__1::vector.1"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20FlexfecReceiveStream6ConfigC2ERKS1_(%"struct.webrtc::FlexfecReceiveStream::Config"*, %"struct.webrtc::FlexfecReceiveStream::Config"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.webrtc::FlexfecReceiveStream::Config"* %1 to i64*
  %4 = bitcast %"struct.webrtc::FlexfecReceiveStream::Config"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #7
  %9 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %15, 4611686018427387903
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #8
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #9
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast i32** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds i32, i32* %23, i64 %15
  %28 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i32* %27, i32** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = load i64, i64* %10, align 8
  %32 = bitcast i32** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = ptrtoint i32* %30 to i64
  %35 = sub i64 %31, %34
  %36 = icmp sgt i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %21
  %38 = lshr exact i64 %35, 2
  %39 = bitcast i32* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %39, i64 %35, i1 false) #7
  %40 = getelementptr inbounds i32, i32* %23, i64 %38
  %41 = ptrtoint i32* %40 to i64
  br label %42

42:                                               ; preds = %37, %21
  %43 = phi i64 [ %41, %37 ], [ %33, %21 ]
  store i64 %43, i64* %32, align 8
  br label %44

44:                                               ; preds = %2, %42
  %45 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 3
  %46 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %1, i64 0, i32 3
  %47 = bitcast i32* %45 to i8*
  %48 = bitcast i32* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 17, i1 false)
  %49 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 7
  %50 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %1, i64 0, i32 7
  %51 = bitcast %"class.std::__1::vector.1"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #7
  %52 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %1, i64 0, i32 7, i32 0, i32 1
  %53 = bitcast %"struct.webrtc::RtpExtension"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.1"* %50 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 5
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %106, label %60

60:                                               ; preds = %44
  %61 = icmp ugt i64 %58, 576460752303423487
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.1"* %49 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #8
  unreachable

64:                                               ; preds = %60
  %65 = tail call i8* @_Znwm(i64 %57) #9
  %66 = bitcast i8* %65 to %"struct.webrtc::RtpExtension"*
  %67 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 7, i32 0, i32 1
  %68 = bitcast %"struct.webrtc::RtpExtension"** %67 to i8**
  store i8* %65, i8** %68, align 8
  %69 = bitcast %"class.std::__1::vector.1"* %49 to i8**
  store i8* %65, i8** %69, align 8
  %70 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %66, i64 %58
  %71 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"struct.webrtc::RtpExtension"* %70, %"struct.webrtc::RtpExtension"** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %50, i64 0, i32 0, i32 0
  %73 = load %"struct.webrtc::RtpExtension"*, %"struct.webrtc::RtpExtension"** %72, align 8
  %74 = load %"struct.webrtc::RtpExtension"*, %"struct.webrtc::RtpExtension"** %52, align 8
  %75 = bitcast %"struct.webrtc::RtpExtension"** %67 to i64*
  %76 = ptrtoint i8* %65 to i64
  %77 = icmp eq %"struct.webrtc::RtpExtension"* %73, %74
  br i1 %77, label %104, label %78

78:                                               ; preds = %64, %94
  %79 = phi %"struct.webrtc::RtpExtension"* [ %100, %94 ], [ %66, %64 ]
  %80 = phi %"struct.webrtc::RtpExtension"* [ %99, %94 ], [ %73, %64 ]
  %81 = bitcast %"struct.webrtc::RtpExtension"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %78
  %86 = bitcast %"struct.webrtc::RtpExtension"* %79 to i8*
  %87 = bitcast %"struct.webrtc::RtpExtension"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #7
  br label %94

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %79, i64 0, i32 0
  %90 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %89, i8* %91, i64 %93) #7
  br label %94

94:                                               ; preds = %88, %85
  %95 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %79, i64 0, i32 1
  %96 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %80, i64 0, i32 1
  %97 = bitcast i32* %95 to i8*
  %98 = bitcast i32* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 5, i1 false) #7
  %99 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %80, i64 1
  %100 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %79, i64 1
  %101 = icmp eq %"struct.webrtc::RtpExtension"* %99, %74
  br i1 %101, label %102, label %78

102:                                              ; preds = %94
  %103 = ptrtoint %"struct.webrtc::RtpExtension"* %100 to i64
  br label %104

104:                                              ; preds = %102, %64
  %105 = phi i64 [ %76, %64 ], [ %103, %102 ]
  store i64 %105, i64* %75, align 8
  br label %106

106:                                              ; preds = %44, %104
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20FlexfecReceiveStream6ConfigD2Ev(%"struct.webrtc::FlexfecReceiveStream::Config"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.webrtc::RtpExtension"*, %"struct.webrtc::RtpExtension"** %3, align 8
  %5 = icmp eq %"struct.webrtc::RtpExtension"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.webrtc::RtpExtension"* %4 to i8*
  %8 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = load %"struct.webrtc::RtpExtension"*, %"struct.webrtc::RtpExtension"** %8, align 8
  %10 = icmp eq %"struct.webrtc::RtpExtension"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.webrtc::RtpExtension"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.webrtc::RtpExtension", %"struct.webrtc::RtpExtension"* %12, i64 -1
  tail call void @_ZN6webrtc12RtpExtensionD1Ev(%"struct.webrtc::RtpExtension"* %13) #7
  %14 = icmp eq %"struct.webrtc::RtpExtension"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.1"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.webrtc::RtpExtension"* %4, %"struct.webrtc::RtpExtension"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint i32* %22 to i64
  %26 = getelementptr inbounds %"struct.webrtc::FlexfecReceiveStream::Config", %"struct.webrtc::FlexfecReceiveStream::Config"* %0, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast i32** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast i32* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc12RtpExtensionD1Ev(%"struct.webrtc::RtpExtension"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
