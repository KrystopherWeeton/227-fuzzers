; ModuleID = '../../chrome/browser/extensions/external_loader.cc'
source_filename = "../../chrome/browser/extensions/external_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ExternalLoader" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.extensions::ExternalProviderImpl"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.extensions::ExternalProviderImpl" = type <{ %"class.extensions::ExternalProviderInterface", i32, i32, %"class.extensions::ExternalProviderInterface::VisitorInterface"*, %"class.std::__1::unique_ptr", i8, [7 x i8], %class.scoped_refptr, %class.Profile*, i32, i8, i8, i8, i8 }>
%"class.extensions::ExternalProviderInterface" = type { i32 (...)** }
%"class.extensions::ExternalProviderInterface::VisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr = type { %"class.extensions::ExternalLoader"* }
%class.Profile = type opaque
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }

@_ZTVN10extensions14ExternalLoaderE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::FilePath"*, %"class.extensions::ExternalLoader"*)* @_ZN10extensions14ExternalLoader18GetBaseCrxFilePathEv to i8*), i8* bitcast (void (%"class.extensions::ExternalLoader"*)* @_ZN10extensions14ExternalLoaderD2Ev to i8*), i8* bitcast (void (%"class.extensions::ExternalLoader"*)* @_ZN10extensions14ExternalLoaderD0Ev to i8*), i8* bitcast (void (%"class.extensions::ExternalLoader"*, %"class.base::DictionaryValue"*)* @_ZN10extensions14ExternalLoader12LoadFinishedENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.extensions::ExternalLoader"*, %"class.base::DictionaryValue"*)* @_ZN10extensions14ExternalLoader9OnUpdatedENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEE to i8*)] }, align 8

@_ZN10extensions14ExternalLoaderD1Ev = hidden unnamed_addr alias void (%"class.extensions::ExternalLoader"*), void (%"class.extensions::ExternalLoader"*)* @_ZN10extensions14ExternalLoaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions14ExternalLoaderC2Ev(%"class.extensions::ExternalLoader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExternalLoader", %"class.extensions::ExternalLoader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.extensions::ExternalLoader", %"class.extensions::ExternalLoader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions14ExternalLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::ExternalLoader", %"class.extensions::ExternalLoader"* %0, i64 0, i32 2
  store %"class.extensions::ExternalProviderImpl"* null, %"class.extensions::ExternalProviderImpl"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions14ExternalLoader4InitEPNS_20ExternalProviderImplE(%"class.extensions::ExternalLoader"* nocapture, %"class.extensions::ExternalProviderImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ExternalLoader", %"class.extensions::ExternalLoader"* %0, i64 0, i32 2
  store %"class.extensions::ExternalProviderImpl"* %1, %"class.extensions::ExternalProviderImpl"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ExternalLoader18GetBaseCrxFilePathEv(%"class.base::FilePath"* noalias sret, %"class.extensions::ExternalLoader"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %0) #8
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions14ExternalLoader13OwnerShutdownEv(%"class.extensions::ExternalLoader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExternalLoader", %"class.extensions::ExternalLoader"* %0, i64 0, i32 2
  store %"class.extensions::ExternalProviderImpl"* null, %"class.extensions::ExternalProviderImpl"** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions14ExternalLoaderD2Ev(%"class.extensions::ExternalLoader"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10extensions14ExternalLoaderD0Ev(%"class.extensions::ExternalLoader"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ExternalLoader12LoadFinishedENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEE(%"class.extensions::ExternalLoader"* nocapture readonly, %"class.base::DictionaryValue"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ExternalLoader", %"class.extensions::ExternalLoader"* %0, i64 0, i32 2
  %4 = load %"class.extensions::ExternalProviderImpl"*, %"class.extensions::ExternalProviderImpl"** %3, align 8
  %5 = icmp eq %"class.extensions::ExternalProviderImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.extensions::ExternalProviderImpl"* %4 to void (%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*)***
  %8 = load void (%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*)**, void (%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*)*, void (%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*)** %8, i64 7
  %10 = load void (%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*)*, void (%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*)** %9, align 8
  tail call void %10(%"class.extensions::ExternalProviderImpl"* nonnull %4, %"class.base::DictionaryValue"* %1) #8
  br label %16

11:                                               ; preds = %2
  %12 = icmp eq %"class.base::DictionaryValue"* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %1, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %14) #8
  %15 = bitcast %"class.base::DictionaryValue"* %1 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %6, %11, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ExternalLoader9OnUpdatedENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEE(%"class.extensions::ExternalLoader"* nocapture readonly, %"class.base::DictionaryValue"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ExternalLoader", %"class.extensions::ExternalLoader"* %0, i64 0, i32 2
  %4 = load %"class.extensions::ExternalProviderImpl"*, %"class.extensions::ExternalProviderImpl"** %3, align 8
  %5 = icmp eq %"class.extensions::ExternalProviderImpl"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN10extensions20ExternalProviderImpl11UpdatePrefsENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEE(%"class.extensions::ExternalProviderImpl"* nonnull %4, %"class.base::DictionaryValue"* %1) #8
  br label %12

7:                                                ; preds = %2
  %8 = icmp eq %"class.base::DictionaryValue"* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %1, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %10) #8
  %11 = bitcast %"class.base::DictionaryValue"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %6, %7, %9
  ret void
}

declare void @_ZN10extensions20ExternalProviderImpl11UpdatePrefsENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEE(%"class.extensions::ExternalProviderImpl"*, %"class.base::DictionaryValue"*) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
