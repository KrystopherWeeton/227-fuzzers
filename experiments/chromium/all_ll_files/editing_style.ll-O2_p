; ModuleID = '../../third_party/blink/renderer/core/editing/editing_style.cc'
source_filename = "../../third_party/blink/renderer/core/editing/editing_style.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::CSSIdentifierValue> >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::CSSIdentifierValue> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::StaticSingleton.2639" = type { %"class.WTF::StaticSingleton<WTF::Vector<const blink::CSSProperty *, 0, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<const blink::CSSProperty *, 0, WTF::PartitionAllocator> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::StaticSingleton.2672" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::HeapVector<blink::Member<blink::HTMLElementEquivalent>, 0> > >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::HeapVector<blink::Member<blink::HTMLElementEquivalent>, 0> > >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.698", i32, [4 x i8], %"class.std::__1::unique_ptr.836", %"class.std::__1::unique_ptr.836", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.847", %"class.std::__1::unique_ptr.853", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.865", %"class.std::__1::unique_ptr.871", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.202", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.713", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::unique_ptr.731", %"class.std::__1::unique_ptr.742", %"class.std::__1::unique_ptr.749", %"class.std::__1::unique_ptr.749", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.763", %"class.std::__1::unique_ptr.770", %"class.std::__1::unique_ptr.770", %"class.std::__1::unique_ptr.777", %"class.std::__1::unique_ptr.784", %"class.std::__1::unique_ptr.791", %"class.std::__1::unique_ptr.816", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.734" = type { %"struct.std::__1::__atomic_base.735" }
%"struct.std::__1::__atomic_base.735" = type { %"struct.std::__1::__atomic_base.736" }
%"struct.std::__1::__atomic_base.736" = type { %"struct.std::__1::__cxx_atomic_impl.737" }
%"struct.std::__1::__cxx_atomic_impl.737" = type { %"struct.std::__1::__cxx_atomic_base_impl.738" }
%"struct.std::__1::__cxx_atomic_base_impl.738" = type { i64 }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::Worklist.745"* }
%"class.blink::Worklist.745" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.blink::Worklist.752"* }
%"class.blink::Worklist.752" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::Worklist.759"* }
%"class.blink::Worklist.759" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.blink::Worklist.766"* }
%"class.blink::Worklist.766" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.blink::Worklist.773"* }
%"class.blink::Worklist.773" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.blink::Worklist.780"* }
%"class.blink::Worklist.780" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.blink::Worklist.787"* }
%"class.blink::Worklist.787" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.734" }
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.794", %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.807", %"class.std::__1::__compressed_pair.809", [4 x i8] }>
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796", %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { i64 }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { float }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.819", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.828" }
%"class.WTF::Vector.828" = type { %"class.WTF::VectorBuffer.829" }
%"class.WTF::VectorBuffer.829" = type { %"class.WTF::VectorBufferBase.830" }
%"class.WTF::VectorBufferBase.830" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.844" }
%"class.WTF::VectorBuffer.844" = type { %"class.WTF::VectorBufferBase.845" }
%"class.WTF::VectorBufferBase.845" = type { %"struct.std::__1::pair.846"*, i32, i32 }
%"struct.std::__1::pair.846" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.859" }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.745"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.752"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.759"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.766"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.773"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1720", i64 }
%"class.std::__1::vector.1720" = type { %"class.std::__1::__vector_base.1721" }
%"class.std::__1::__vector_base.1721" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1722" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1722" = type { %"struct.std::__1::__compressed_pair_elem.1723" }
%"struct.std::__1::__compressed_pair_elem.1723" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.877 }
%class.scoped_refptr.877 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__cxx_atomic_impl.204" }
%"struct.std::__1::__cxx_atomic_impl.204" = type { %"struct.std::__1::__cxx_atomic_base_impl.205" }
%"struct.std::__1::__cxx_atomic_base_impl.205" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.125" }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i32 }
%"class.WTF::StaticSingleton.2705" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::HeapVector<blink::Member<blink::HTMLAttributeEquivalent>, 0> > >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::HeapVector<blink::Member<blink::HTMLAttributeEquivalent>, 0> > >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::Vector.2507" = type { %"class.WTF::VectorBuffer.2508" }
%"class.WTF::VectorBuffer.2508" = type { %"class.WTF::VectorBufferBase.2509" }
%"class.WTF::VectorBufferBase.2509" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.WTF::StaticSingleton.2818" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"class.blink::HTMLElementEquivalent" = type { i32 (...)**, i32, %"class.blink::Member", %"class.blink::HTMLQualifiedName"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSIdentifierValue"* }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HTMLTextDecorationEquivalent" = type { %"class.blink::HTMLElementEquivalent" }
%"class.blink::HTMLAttributeEquivalent" = type { %"class.blink::HTMLElementEquivalent", %"class.blink::QualifiedName"* }
%"class.blink::HTMLFontSizeEquivalent" = type { %"class.blink::HTMLAttributeEquivalent" }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.1824", %"class.blink::Member.6", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.1826", %"class.blink::HeapVector.1828", i8, [7 x i8] }>
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.1824" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2244" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember.2244" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.341", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.412", i32, i8, [3 x i8], %"class.blink::HeapVector.414", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.433", %"class.blink::Member.492", %"class.blink::Member.494", i8, [7 x i8] }>
%"class.blink::Supplementable.341" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.342" }
%"class.blink::HeapHashMap.342" = type { %"class.WTF::HashMap.345" }
%"class.WTF::HashMap.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"struct.WTF::KeyValuePair.348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.348" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.356" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.349" }
%"class.blink::HeapHashSet.349" = type { %"class.WTF::HashSet.352" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::WeakMember.355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.355" = type opaque
%"class.blink::Supplementable.356" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.357" }
%"class.blink::HeapHashMap.357" = type { %"class.WTF::HashMap.360" }
%"class.WTF::HashMap.360" = type { %"class.WTF::HashTable.361" }
%"class.WTF::HashTable.361" = type <{ %"struct.WTF::KeyValuePair.363"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.363" = type { i8*, %"class.blink::Member.2543" }
%"class.blink::Member.2543" = type { %"class.blink::MemberBase.2544" }
%"class.blink::MemberBase.2544" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2545" }
%"class.blink::Member.2545" = type { %"class.blink::MemberBase.2546" }
%"class.blink::MemberBase.2546" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.364, %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400", %"class.blink::Member.406", i32, [4 x i8], %"class.WTF::HashSet.408", i32, i32 }
%class.scoped_refptr.364 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.365", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.367", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.372 }
%"class.WTF::RefCounted.365" = type { %"class.base::RefCounted.366" }
%"class.base::RefCounted.366" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.367" = type { %"class.absl::optional_internal::optional_data.368" }
%"class.absl::optional_internal::optional_data.368" = type { %"class.absl::optional_internal::optional_data_base.369" }
%"class.absl::optional_internal::optional_data_base.369" = type { %"class.absl::optional_internal::optional_data_dtor_base.370" }
%"class.absl::optional_internal::optional_data_dtor_base.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.372 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.376", %"class.std::__1::map.387", %"class.std::__1::map.396"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.367" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.376" = type { %"class.std::__1::__tree.377" }
%"class.std::__1::__tree.377" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::map.387" = type { %"class.std::__1::__tree.388" }
%"class.std::__1::__tree.388" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::map.396" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.WTF::HashSet.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.414" = type { %"class.WTF::Vector.417" }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.blink::Member.420"*, i32, i32 }
%"class.blink::Member.420" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.426", i32, i32 }
%"class.blink::HeapHashMap.426" = type { %"class.WTF::HashMap.429" }
%"class.WTF::HashMap.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.436" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.439" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.mojo::StructPtr.442"*, i32, i32 }
%"class.mojo::StructPtr.442" = type { %"class.std::__1::unique_ptr.443" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.446", %"class.WTF::HashMap.453", %"class.WTF::HashMap.458", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.463", i32, %"class.mojo::StructPtr.468", %"class.WTF::Vector.463" }
%"class.mojo::StructPtr.446" = type { %"class.std::__1::unique_ptr.447" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.453" = type { %"class.WTF::HashTable.454" }
%"class.WTF::HashTable.454" = type <{ %"struct.WTF::KeyValuePair.457"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.457" = type opaque
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.462" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.468" = type { %"class.std::__1::unique_ptr.469" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.463", i8, i8, [6 x i8] }>
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.483" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.283", i32 }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.286", %"class.base::OnceCallback.287", %"class.absl::optional.288", %"class.absl::optional.293", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.300", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.308", %"class.std::__1::map.319", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.328", i8, %class.scoped_refptr.167, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.329" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.286" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.124 }
%class.scoped_refptr.124 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.125" }
%"class.base::OnceCallback.287" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, %union.anon.292 }
%union.anon.292 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.293" = type { %"class.absl::optional_internal::optional_data.294" }
%"class.absl::optional_internal::optional_data.294" = type { %"class.absl::optional_internal::optional_data_base.295" }
%"class.absl::optional_internal::optional_data_base.295" = type { %"class.absl::optional_internal::optional_data_dtor_base.296" }
%"class.absl::optional_internal::optional_data_dtor_base.296" = type { i8, %union.anon.297 }
%union.anon.297 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.167, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.298" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.298" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.185", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.185" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.186" }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2498", [4 x i8], %"class.base::RepeatingCallback.286", %class.scoped_refptr.167, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2498" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.299 }
%class.scoped_refptr.299 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.303", %class.scoped_refptr.304 }
%"class.base::RepeatingCallback.303" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.304 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166", [4 x i8] }>
%"class.base::RefCountedThreadSafe.166" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.308" = type { %"class.std::__1::__tree.309" }
%"class.std::__1::__tree.309" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::map.319" = type { %"class.std::__1::__tree.320" }
%"class.std::__1::__tree.320" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.328" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.167 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.168" }>
%"class.base::RefCountedThreadSafe.168" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::HeapVector.1828" = type { %"class.WTF::Vector.1831" }
%"class.WTF::Vector.1831" = type { %"class.WTF::VectorBuffer.1832" }
%"class.WTF::VectorBuffer.1832" = type { %"class.WTF::VectorBufferBase.1833", [96 x i8] }
%"class.WTF::VectorBufferBase.1833" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1834" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.1834" = type { %"class.blink::MemberBase.1835" }
%"class.blink::MemberBase.1835" = type { %"class.blink::CSSValue"* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.10" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.27", %"class.blink::Member.29", %"class.blink::Member.8", %"class.blink::Member.31", %"class.blink::Member.31", %"class.blink::Member.50", %"class.blink::Member.52", %"class.blink::Member.54", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.59", %"class.blink::HeapVector.61" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.121", %"class.WTF::Vector.121", i8, i32, %"class.blink::Member.132", %"class.blink::Member.406", %"class.blink::Member.1443", %"class.blink::Member.1445", %"class.blink::Member.1447", %"class.blink::Member.1449", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1457", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.67", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1468", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.42", %"class.blink::Member.1418", %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::UserActionElementSet", %"class.blink::Member.1499", double, double, i64, i64, %"class.blink::HeapHashSet.1501", %"class.blink::HeapHashSet.1508", i16, i8, %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.blink::Member.1519", %"class.blink::Member.1521", %"class.blink::TextLinkColors", %"class.blink::Member.1523", i8, [7 x i8], %"class.blink::HeapHashMap.1525", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.42", %"class.WTF::Vector.1532", %"class.blink::Member.1537", %"class.blink::Member.1539", i8, %"class.blink::Member.42", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1541", %"class.blink::HeapVector.1543", %"class.std::__1::unique_ptr.1551", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1557", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1570", %"class.WTF::Vector.1572", i8, i8, %"class.std::__1::unique_ptr.1577", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1583", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1591", i8, i32, %"class.blink::Member.1593", %"class.blink::Member.1595", %"class.blink::Member.1597", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1599", %"class.WTF::HashMap.1601", %"class.blink::Member.1606", %"class.blink::Member.1608", %"class.blink::Member.1610", %"class.blink::Member.1612", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1614", i8, i32, %"class.blink::Member.1621", %"class.blink::Member.1623", i32, %"class.blink::Member.1625", %"class.blink::Member.1627", %"class.blink::Member.1629", %"class.std::__1::unique_ptr.1631", i64, %"class.std::__1::unique_ptr.1637", i32, i32, %"class.blink::Member.1648", %"class.blink::Member.1650", %"class.blink::Member.1652", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1654", %"class.WTF::Vector.1429", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1656", %"class.blink::Member.1663", %"class.std::__1::unique_ptr.1665", %"class.blink::Member.1671", i8, i8, %"class.WTF::String", %"class.blink::Member.1673", i8, [7 x i8], %"class.blink::HeapHashMap.1675", %"class.blink::HeapObserverSet.1682", %"class.blink::Member.1690", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1692", i32, i8, i8, %"class.blink::WeakMember.1694", %"class.blink::Member.1695" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.114" }
%"class.blink::HeapHashMap.114" = type { %"class.WTF::HashMap.117" }
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.496", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.504", %"class.blink::Member.29", %"class.blink::Member.506", i8, %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", %"class.blink::Member.522", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.463", %"class.blink::Member.524", %class.scoped_refptr.526, %"class.blink::HeapHashSet.588", %"class.blink::Member.595", %"class.blink::HeapHashMap.608", %"class.std::__1::unique_ptr.615", %"class.blink::Member.627", %"class.blink::Member.1422", %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.WTF::Vector.1429", %"class.util::TokenType", %"class.WTF::HashSet.1434", %"class.WTF::Deque.1438" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.154", %"class.blink::Member.156", %"class.blink::Member.158", %"class.blink::Member.160", i8, %"class.WTF::Vector.162" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.147" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.136" }
%"class.blink::HeapVector.136" = type { %"class.WTF::Vector.139" }
%"class.WTF::Vector.139" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141", [32 x i8] }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.142" }
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::HeapVector.144"* }
%"class.blink::HeapVector.144" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.WTF::Vector.150"* }
%"class.WTF::Vector.150" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1731", %"class.blink::Member.1733", %"class.blink::Member.1735", i8, i32, i8, i32, %"class.blink::Member.1737", %"class.blink::Member.156", %"class.blink::FrameLifecycle", %"class.blink::Member.154", %"class.blink::Member.154", %"class.blink::Member.154", %"class.blink::Member.154", %"class.blink::Member.154", %"class.blink::Member.154", %"class.blink::Member.633", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1748", i8, %"class.base::UnguessableToken", %"class.absl::optional.1750", %"class.absl::optional.1755", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.154", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1767", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1775", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1783", %"class.blink::FrameLoader", %"class.blink::Member.1804", %"class.blink::Member.42", %"class.blink::Member.1806", %"class.blink::Member.1838", %"class.blink::Member.1854", %"class.blink::Member.1856", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1858", %class.scoped_refptr.2078, %"class.blink::Member.2079", %"class.blink::Member.2081", %"class.blink::Member.2083", %"class.blink::Member.2085", %"class.blink::Member.2087", %"class.blink::Member.2091", %"class.blink::Member.2093", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2095", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2098", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2119", %"class.std::__1::unique_ptr.2120", %"class.absl::optional.1755", i32, [4 x i8], %"class.std::__1::unique_ptr.2126", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2134", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2139", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2144", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2147", %"class.blink::Member.2149", %"class.blink::Member.2151", %"class.blink::Member.2153", %"class.mojo::StructPtr.2156", %"class.blink::Member.2165", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2167", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1767" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1768" }
%"class.blink::HeapHashMap.1768" = type { %"class.WTF::HashMap.1771" }
%"class.WTF::HashMap.1771" = type { %"class.WTF::HashTable.1772" }
%"class.WTF::HashTable.1772" = type <{ %"struct.WTF::KeyValuePair.1774"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1774" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.618", %"class.base::WeakPtrFactory.623" }
%"class.WTF::HashMap.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type opaque
%"class.base::WeakPtrFactory.623" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1781" }
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.631" }
%"class.blink::WeakMember.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.286", %"class.base::RepeatingCallback.2579", i64, %"class.std::__1::map.2580", i8*, i64, %"class.base::WeakPtrFactory.2589" }
%"class.base::RepeatingCallback.2579" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2580" = type { %"class.std::__1::__tree.2581" }
%"class.std::__1::__tree.2581" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2582", %"class.std::__1::__compressed_pair.2586" }
%"class.std::__1::__compressed_pair.2582" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.2586" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.base::WeakPtrFactory.2589" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1783" = type { %"class.WTF::HashSet.1786" }
%"class.WTF::HashSet.1786" = type { %"class.WTF::HashTable.1787" }
%"class.WTF::HashTable.1787" = type <{ %"class.blink::WeakMember.1789"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1789" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.633", %"class.blink::Member.1790", %"class.blink::Member.1792", %"class.std::__1::unique_ptr.1794", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1800" }
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.2 }
%"class.WTF::HashSet.1800" = type { %"class.WTF::HashTable.1801" }
%"class.WTF::HashTable.1801" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2270", %"class.blink::Member.633", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2275", i8, i32, %"class.blink::Color", %"class.absl::optional.2277", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2282", %"class.blink::Member.2284", %"class.blink::Member.2284", %"class.std::__1::unique_ptr.2287", i32, [4 x i8], %"class.WTF::HashSet.2290", %"class.blink::Member.2297", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2299", %"class.blink::HeapHashSet.2306", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2314", i8, %"class.blink::Member.2320", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2332", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2346", i8, %"class.std::__1::unique_ptr.2352", %"class.std::__1::unique_ptr.2433", %"class.WTF::Vector.2439", i32, %class.scoped_refptr.2444, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2445", %"class.blink::Member.2447", %"class.blink::Member.2449", %"class.blink::HeapHashSet.2451", %"class.blink::HeapHashSet.2458", %"class.std::__1::unique_ptr.2465", %"class.std::__1::unique_ptr.2472", %"class.WTF::Vector.121" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2270" = type { %"class.WTF::HashTable.2271" }
%"class.WTF::HashTable.2271" = type <{ %class.scoped_refptr.2274*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2274 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2275" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2276", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1489, %"class.base::WeakPtrFactory.1490" }
%class.scoped_refptr.1489 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1490" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2276" = type { %"class.blink::MemberBase.1805" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2277" = type { %"class.absl::optional_internal::optional_data.2278" }
%"class.absl::optional_internal::optional_data.2278" = type { %"class.absl::optional_internal::optional_data_base.2279" }
%"class.absl::optional_internal::optional_data_base.2279" = type { %"class.absl::optional_internal::optional_data_dtor_base.2280" }
%"class.absl::optional_internal::optional_data_dtor_base.2280" = type { i8, %union.anon.2281 }
%union.anon.2281 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2282" = type { %"class.blink::MemberBase.2283" }
%"class.blink::MemberBase.2283" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2284" = type { %"class.blink::MemberBase.2285" }
%"class.blink::MemberBase.2285" = type { %"class.blink::HeapHashSet.2286"* }
%"class.blink::HeapHashSet.2286" = type opaque
%"class.std::__1::unique_ptr.2287" = type { %"class.std::__1::__compressed_pair.2288" }
%"class.std::__1::__compressed_pair.2288" = type { %"struct.std::__1::__compressed_pair_elem.2289" }
%"struct.std::__1::__compressed_pair_elem.2289" = type { %"class.WTF::HashSet.2290"* }
%"class.WTF::HashSet.2290" = type { %"class.WTF::HashTable.2291" }
%"class.WTF::HashTable.2291" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.637, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.637 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1245", %"class.std::__1::unique_ptr.1247" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.880", %"class.blink::DataRef.961", %"class.blink::DataRef.965", %"class.blink::DataRef.1161", %"class.blink::DataRef.1228", %"class.blink::DataRef.1232", %"class.blink::DataRef.1236", %"class.blink::DataRef.1240", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.638 }
%class.scoped_refptr.638 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.639", %"class.blink::DataRef.641", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.639" = type { %"class.base::RefCounted.640" }
%"class.base::RefCounted.640" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.641" = type { %class.scoped_refptr.642 }
%class.scoped_refptr.642 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.643", %"class.blink::Font" }
%"class.WTF::RefCounted.643" = type { %"class.base::RefCounted.644" }
%"class.base::RefCounted.644" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.671 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.646, %class.scoped_refptr.654, %class.scoped_refptr.664, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.670 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.645 }
%class.scoped_refptr.645 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1727", [4 x i8] }>
%"class.WTF::RefCounted.1727" = type { %"class.base::RefCounted.1728" }
%"class.base::RefCounted.1728" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.646 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.652", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.647" }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.652" = type { %"class.base::RefCounted.653" }
%"class.base::RefCounted.653" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.654 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.655", %"class.WTF::RefCounted.662", [4 x i8] }>
%"class.blink::FontSettings.655" = type { %"class.WTF::Vector.656" }
%"class.WTF::Vector.656" = type { %"class.WTF::VectorBuffer.657" }
%"class.WTF::VectorBuffer.657" = type { %"class.WTF::VectorBufferBase.658" }
%"class.WTF::VectorBufferBase.658" = type { %"class.blink::FontTagValuePair.659"*, i32, i32 }
%"class.blink::FontTagValuePair.659" = type { i32, float }
%"class.WTF::RefCounted.662" = type { %"class.base::RefCounted.663" }
%"class.base::RefCounted.663" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.664 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.665", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.667, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.667 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.668", [4 x i8] }>
%"class.WTF::RefCounted.668" = type { %"class.base::RefCounted.669" }
%"class.base::RefCounted.669" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.670 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.671 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.672", %"class.WTF::Vector.674", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.878" }
%"class.WTF::RefCounted.672" = type { %"class.base::RefCounted.673" }
%"class.base::RefCounted.673" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.674" = type { %"class.WTF::VectorBuffer.675" }
%"class.WTF::VectorBuffer.675" = type { %"class.WTF::VectorBufferBase.676", [8 x i8] }
%"class.WTF::VectorBufferBase.676" = type { %class.scoped_refptr.677*, i32, i32 }
%class.scoped_refptr.677 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.678", [4 x i8] }>
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.688", %class.scoped_refptr.695, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.678" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.682", %"class.absl::optional.682", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.682" = type { %"class.absl::optional_internal::optional_data.683" }
%"class.absl::optional_internal::optional_data.683" = type { %"class.absl::optional_internal::optional_data_base.684" }
%"class.absl::optional_internal::optional_data_base.684" = type { %"class.absl::optional_internal::optional_data_dtor_base.685" }
%"class.absl::optional_internal::optional_data_dtor_base.685" = type { i8, %union.anon.686 }
%union.anon.686 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.687, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.125" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.125" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.186" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.687 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.691, %class.scoped_refptr.691 }
%class.scoped_refptr.691 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.695 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.696", [4 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.878" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.879, i8, i8, i8, i8 }>
%union.anon.879 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.880" = type { %class.scoped_refptr.881 }
%class.scoped_refptr.881 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.882", [4 x i8], %"class.blink::DataRef.884", %"class.blink::DataRef.926", %"class.WTF::Vector.930", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.934, %class.scoped_refptr.943, %"class.blink::Persistent.951", %"class.blink::Persistent.953", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.882" = type { %"class.base::RefCounted.883" }
%"class.base::RefCounted.883" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.884" = type { %class.scoped_refptr.885 }
%class.scoped_refptr.885 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.886", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.888, %class.scoped_refptr.896, %"class.blink::Persistent.913", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.886" = type { %"class.base::RefCounted.887" }
%"class.base::RefCounted.887" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.888 = type { %"class.base::RefCountedData.889"* }
%"class.base::RefCountedData.889" = type { %"class.base::RefCountedThreadSafe.890", %"class.WTF::Vector.891" }
%"class.base::RefCountedThreadSafe.890" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.891" = type { %"class.WTF::VectorBuffer.892" }
%"class.WTF::VectorBuffer.892" = type { %"class.WTF::VectorBufferBase.893" }
%"class.WTF::VectorBufferBase.893" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.896 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.899", %"class.blink::Persistent" }
%"class.WTF::HashMap.899" = type { %"class.WTF::HashTable.900" }
%"class.WTF::HashTable.900" = type <{ %"struct.WTF::KeyValuePair.903"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.903" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2557 }
%class.scoped_refptr.2557 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2558", %"class.WTF::Vector.463", %"class.WTF::Vector.2560", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2558" = type { %"class.base::RefCounted.2559" }
%"class.base::RefCounted.2559" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2560" = type { %"class.WTF::VectorBuffer.2561" }
%"class.WTF::VectorBuffer.2561" = type { %"class.WTF::VectorBufferBase.2562" }
%"class.WTF::VectorBufferBase.2562" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2563 }
%union.anon.2563 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.904" }
%"class.blink::PersistentBase.904" = type { %"class.blink::HeapHashMap.905"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::HeapHashMap.905" = type { %"class.WTF::HashMap.908" }
%"class.WTF::HashMap.908" = type { %"class.WTF::HashTable.909" }
%"class.WTF::HashTable.909" = type <{ %"struct.WTF::KeyValuePair.911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.911" = type opaque
%"class.blink::PersistentNodePtr.912" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.913" = type { %"class.blink::PersistentBase.914" }
%"class.blink::PersistentBase.914" = type { %"class.blink::HeapVector.915"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::HeapVector.915" = type { %"class.WTF::Vector.918" }
%"class.WTF::Vector.918" = type { %"class.WTF::VectorBuffer.919" }
%"class.WTF::VectorBuffer.919" = type { %"class.WTF::VectorBufferBase.920" }
%"class.WTF::VectorBufferBase.920" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.921", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.926" = type { %class.scoped_refptr.927 }
%class.scoped_refptr.927 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.928", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.928" = type { %"class.base::RefCounted.929" }
%"class.base::RefCounted.929" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.930" = type { %"class.WTF::VectorBuffer.931" }
%"class.WTF::VectorBuffer.931" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.934 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.935", %"class.WTF::Vector.937" }
%"class.WTF::RefCounted.935" = type { %"class.base::RefCounted.936" }
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.937" = type { %"class.WTF::VectorBuffer.938" }
%"class.WTF::VectorBuffer.938" = type { %"class.WTF::VectorBufferBase.939" }
%"class.WTF::VectorBufferBase.939" = type { %"struct.std::__1::pair.940"*, i32, i32 }
%"struct.std::__1::pair.940" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.943 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.944", [4 x i8], %"class.WTF::Vector.946" }
%"class.WTF::RefCounted.944" = type { %"class.base::RefCounted.945" }
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.946" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.948", [28 x i8] }>
%"class.WTF::VectorBufferBase.948" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.951" = type { %"class.blink::PersistentBase.952" }
%"class.blink::PersistentBase.952" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::Persistent.953" = type { %"class.blink::PersistentBase.954" }
%"class.blink::PersistentBase.954" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.957", %"class.blink::Member.959" }
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.961" = type { %class.scoped_refptr.962 }
%class.scoped_refptr.962 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.963", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.963" = type { %"class.base::RefCounted.964" }
%"class.base::RefCounted.964" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.965" = type { %class.scoped_refptr.966 }
%class.scoped_refptr.966 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.967", [4 x i8], %"class.blink::DataRef.969", %"class.blink::DataRef.1035", %"class.blink::TransformOperations", %class.scoped_refptr.943, %"class.blink::Persistent.1155", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.967" = type { %"class.base::RefCounted.968" }
%"class.base::RefCounted.968" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.969" = type { %class.scoped_refptr.970 }
%class.scoped_refptr.970 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.971", [4 x i8], %"class.blink::DataRef.973", %"class.blink::Persistent.1011", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.971" = type { %"class.base::RefCounted.972" }
%"class.base::RefCounted.972" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.973" = type { %class.scoped_refptr.974 }
%class.scoped_refptr.974 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.975", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.993, %class.scoped_refptr.996, %class.scoped_refptr.999, %class.scoped_refptr.1002, %class.scoped_refptr.1003, %class.scoped_refptr.1004, %"class.blink::Persistent.1011", %"class.blink::Persistent.1026", %"class.absl::optional.1030", %"class.absl::optional.1030", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.975" = type { %"class.base::RefCounted.976" }
%"class.base::RefCounted.976" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.977", %"class.std::__1::unique_ptr.982" }
%"class.WTF::Vector.977" = type { %"class.WTF::VectorBuffer.978" }
%"class.WTF::VectorBuffer.978" = type { %"class.WTF::VectorBufferBase.979" }
%"class.WTF::VectorBufferBase.979" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.985", %"class.WTF::Vector.977", i32, i32 }
%"class.WTF::Vector.985" = type { %"class.WTF::VectorBuffer.986" }
%"class.WTF::VectorBuffer.986" = type { %"class.WTF::VectorBufferBase.987" }
%"class.WTF::VectorBufferBase.987" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.993 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.994", [4 x i8] }>
%"class.WTF::RefCounted.994" = type { %"class.base::RefCounted.995" }
%"class.base::RefCounted.995" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.996 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.997", [4 x i8] }>
%"class.WTF::RefCounted.997" = type { %"class.base::RefCounted.998" }
%"class.base::RefCounted.998" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.999 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1000" }>
%"class.WTF::RefCounted.1000" = type { %"class.base::RefCounted.1001" }
%"class.base::RefCounted.1001" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1002 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1003 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1004 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1005", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1005" = type { %"class.base::RefCounted.1006" }
%"class.base::RefCounted.1006" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1007" }
%"class.blink::DataRef.1007" = type { %class.scoped_refptr.1008 }
%class.scoped_refptr.1008 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.951", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1009" }
%"class.WTF::RefCounted.1009" = type { %"class.base::RefCounted.1010" }
%"class.base::RefCounted.1010" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1026" = type { %"class.blink::PersistentBase.1027" }
%"class.blink::PersistentBase.1027" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.996, %"class.blink::Member.921", i32, [4 x i8] }>
%"class.absl::optional.1030" = type { %"class.absl::optional_internal::optional_data.1031" }
%"class.absl::optional_internal::optional_data.1031" = type { %"class.absl::optional_internal::optional_data_base.1032" }
%"class.absl::optional_internal::optional_data_base.1032" = type { %"class.absl::optional_internal::optional_data_dtor_base.1033" }
%"class.absl::optional_internal::optional_data_dtor_base.1033" = type { i8, [3 x i8], %union.anon.1034 }
%union.anon.1034 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1011" = type { %"class.blink::PersistentBase.1012" }
%"class.blink::PersistentBase.1012" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1015" }
%"class.blink::HeapVector.1015" = type { %"class.WTF::Vector.1018" }
%"class.WTF::Vector.1018" = type { %"class.WTF::VectorBuffer.1019" }
%"class.WTF::VectorBuffer.1019" = type { %"class.WTF::VectorBufferBase.1020" }
%"class.WTF::VectorBufferBase.1020" = type { %"class.blink::Member.1021"*, i32, i32 }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1035" = type { %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1037", %"class.blink::DataRef.1039", %"class.blink::DataRef.1043", %"class.blink::DataRef.1052", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1071", %"class.std::__1::unique_ptr.1082", %"class.std::__1::unique_ptr.1121", %"class.std::__1::unique_ptr.1132", %"class.std::__1::unique_ptr.1143", %"class.WTF::Vector.463", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1039" = type { %class.scoped_refptr.1040 }
%class.scoped_refptr.1040 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1041", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1041" = type { %"class.base::RefCounted.1042" }
%"class.base::RefCounted.1042" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1043" = type { %class.scoped_refptr.1044 }
%class.scoped_refptr.1044 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1045", [4 x i8], %"class.WTF::Vector.1047", i8, [7 x i8] }>
%"class.WTF::RefCounted.1045" = type { %"class.base::RefCounted.1046" }
%"class.base::RefCounted.1046" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1047" = type { %"class.WTF::VectorBuffer.1048" }
%"class.WTF::VectorBuffer.1048" = type { %"class.WTF::VectorBufferBase.1049" }
%"class.WTF::VectorBufferBase.1049" = type { i32*, i32, i32 }
%"class.blink::DataRef.1052" = type { %class.scoped_refptr.1053 }
%class.scoped_refptr.1053 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1054", [4 x i8], %"class.WTF::HashMap.1056", %"class.WTF::HashMap.1056", %"class.WTF::HashMap.1056", %"class.WTF::HashMap.1056", %"class.WTF::HashMap.1056", %"class.WTF::HashMap.1056", %"class.WTF::HashMap.1061", %"class.WTF::HashMap.1061", %"class.WTF::HashMap.1061", %"class.WTF::HashMap.1061", %"class.WTF::HashMap.1066", %"class.WTF::Vector.977", %"class.WTF::Vector.977", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1054" = type { %"class.base::RefCounted.1055" }
%"class.base::RefCounted.1055" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"struct.WTF::KeyValuePair.1060"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1060" = type { %"class.WTF::String", %"class.WTF::Vector.2547" }
%"class.WTF::Vector.2547" = type { %"class.WTF::VectorBuffer.2548" }
%"class.WTF::VectorBuffer.2548" = type { %"class.WTF::VectorBufferBase.2549" }
%"class.WTF::VectorBufferBase.2549" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1065"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1065" = type { i64, %"class.WTF::Vector.463" }
%"class.WTF::HashMap.1066" = type { %"class.WTF::HashTable.1067" }
%"class.WTF::HashTable.1067" = type <{ %"struct.WTF::KeyValuePair.1070"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1070" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1071" = type { %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1074" }
%"class.WTF::HashMap.1074" = type { %"class.WTF::HashTable.1075" }
%"class.WTF::HashTable.1075" = type <{ %"struct.WTF::KeyValuePair.1078"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1078" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2552", %"class.absl::optional.2552", %"class.absl::optional.2552" }
%"class.absl::optional.2552" = type { %"class.absl::optional_internal::optional_data.2553" }
%"class.absl::optional_internal::optional_data.2553" = type { %"class.absl::optional_internal::optional_data_base.2554" }
%"class.absl::optional_internal::optional_data_base.2554" = type { %"class.absl::optional_internal::optional_data_dtor_base.2555" }
%"class.absl::optional_internal::optional_data_dtor_base.2555" = type { i8, %union.anon.2556 }
%union.anon.2556 = type { i32 }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.930", %"class.WTF::Vector.1098", %"class.WTF::Vector.1085", %"class.WTF::Vector.1103", %"class.WTF::Vector.1108", %"class.WTF::Vector.1113" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1085", %"class.WTF::Vector.1085", %"class.WTF::Vector.1090" }
%"class.WTF::Vector.1090" = type { %"class.WTF::VectorBuffer.1091" }
%"class.WTF::VectorBuffer.1091" = type { %"class.WTF::VectorBufferBase.1092" }
%"class.WTF::VectorBufferBase.1092" = type { %class.scoped_refptr.1093*, i32, i32 }
%class.scoped_refptr.1093 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1094", i32 }
%"class.WTF::ThreadSafeRefCounted.1094" = type { %"class.base::RefCountedThreadSafe.1095" }
%"class.base::RefCountedThreadSafe.1095" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1085" = type { %"class.WTF::VectorBuffer.1086" }
%"class.WTF::VectorBuffer.1086" = type { %"class.WTF::VectorBufferBase.1087" }
%"class.WTF::VectorBufferBase.1087" = type { double*, i32, i32 }
%"class.WTF::Vector.1103" = type { %"class.WTF::VectorBuffer.1104" }
%"class.WTF::VectorBuffer.1104" = type { %"class.WTF::VectorBufferBase.1105" }
%"class.WTF::VectorBufferBase.1105" = type { i32*, i32, i32 }
%"class.WTF::Vector.1108" = type { %"class.WTF::VectorBuffer.1109" }
%"class.WTF::VectorBuffer.1109" = type { %"class.WTF::VectorBufferBase.1110" }
%"class.WTF::VectorBufferBase.1110" = type { i32*, i32, i32 }
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1124" }
%"class.WTF::Vector.1124" = type { %"class.WTF::VectorBuffer.1125" }
%"class.WTF::VectorBuffer.1125" = type { %"class.WTF::VectorBufferBase.1126" }
%"class.WTF::VectorBufferBase.1126" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1135" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"class.blink::Persistent.951"*, i32, i32 }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.951", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1149" }
%"class.WTF::Vector.1149" = type { %"class.WTF::VectorBuffer.1150" }
%"class.WTF::VectorBuffer.1150" = type { %"class.WTF::VectorBufferBase.1151" }
%"class.WTF::VectorBufferBase.1151" = type { %class.scoped_refptr.1152*, i32, i32 }
%class.scoped_refptr.1152 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1000", [4 x i8] }>
%"class.blink::Persistent.1155" = type { %"class.blink::PersistentBase.1156" }
%"class.blink::PersistentBase.1156" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1159" }
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1161" = type { %class.scoped_refptr.1162 }
%class.scoped_refptr.1162 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1163", [4 x i8], %"class.blink::DataRef.1165", %"class.blink::DataRef.1169", %"class.blink::DataRef.1190", %"class.blink::DataRef.1208", %"class.blink::DataRef.1220", %"class.blink::DataRef.1224", %class.scoped_refptr.1194, i32, [4 x i8] }>
%"class.WTF::RefCounted.1163" = type { %"class.base::RefCounted.1164" }
%"class.base::RefCounted.1164" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1165" = type { %class.scoped_refptr.1166 }
%class.scoped_refptr.1166 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1167", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1167" = type { %"class.base::RefCounted.1168" }
%"class.base::RefCounted.1168" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1169" = type { %class.scoped_refptr.1170 }
%class.scoped_refptr.1170 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1171", %class.scoped_refptr.1173, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1171" = type { %"class.base::RefCounted.1172" }
%"class.base::RefCounted.1172" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1173 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1180", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.997" }>
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1183, i32, %"struct.std::__1::atomic.186", %"struct.std::__1::atomic.186", i8, i8 }>
%class.sk_sp.1183 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1184, %class.SkTDArray.1185, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.125" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1184 = type { i8*, i32, i32 }
%class.SkTDArray.1185 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1186 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.125", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1186 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.202", [3 x i8] }
%"class.blink::DataRef.1190" = type { %class.scoped_refptr.1191 }
%class.scoped_refptr.1191 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1192", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1192" = type { %"class.base::RefCounted.1193" }
%"class.base::RefCounted.1193" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1194, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1208" = type { %class.scoped_refptr.1209 }
%class.scoped_refptr.1209 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1210", [4 x i8], %class.scoped_refptr.1212, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1210" = type { %"class.base::RefCounted.1211" }
%"class.base::RefCounted.1211" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1212 = type { %"class.base::RefCountedData.1213"* }
%"class.base::RefCountedData.1213" = type { %"class.base::RefCountedThreadSafe.1214", %"class.WTF::Vector.1215" }
%"class.base::RefCountedThreadSafe.1214" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1220" = type { %class.scoped_refptr.1221 }
%class.scoped_refptr.1221 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1222", %class.scoped_refptr.1194, %class.scoped_refptr.1194, %class.scoped_refptr.1194 }
%"class.WTF::RefCounted.1222" = type { %"class.base::RefCounted.1223" }
%"class.base::RefCounted.1223" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1224" = type { %class.scoped_refptr.1225 }
%class.scoped_refptr.1225 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1226", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1226" = type { %"class.base::RefCounted.1227" }
%"class.base::RefCounted.1227" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1194 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1195", %"class.blink::Persistent.1197", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1195" = type { %"class.base::RefCounted.1196" }
%"class.base::RefCounted.1196" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1197" = type { %"class.blink::PersistentBase.1198" }
%"class.blink::PersistentBase.1198" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.42", %"class.blink::HeapHashMap.1201" }
%"class.blink::HeapHashMap.1201" = type { %"class.WTF::HashMap.1204" }
%"class.WTF::HashMap.1204" = type { %"class.WTF::HashTable.1205" }
%"class.WTF::HashTable.1205" = type <{ %"struct.WTF::KeyValuePair.1207"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1207" = type opaque
%"class.blink::DataRef.1228" = type { %class.scoped_refptr.1229 }
%class.scoped_refptr.1229 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1230", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1230" = type { %"class.base::RefCounted.1231" }
%"class.base::RefCounted.1231" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1232" = type { %class.scoped_refptr.1233 }
%class.scoped_refptr.1233 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1234", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1234" = type { %"class.base::RefCounted.1235" }
%"class.base::RefCounted.1235" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1236" = type { %class.scoped_refptr.1237 }
%class.scoped_refptr.1237 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1238", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1238" = type { %"class.base::RefCounted.1239" }
%"class.base::RefCounted.1239" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1240" = type { %class.scoped_refptr.1241 }
%class.scoped_refptr.1241 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1242", %class.scoped_refptr.1244 }
%"class.WTF::RefCounted.1242" = type { %"class.base::RefCounted.1243" }
%"class.base::RefCounted.1243" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1244 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1718", %"class.blink::StyleVariables", %class.scoped_refptr.1244 }
%"class.WTF::RefCounted.1718" = type { %"class.base::RefCounted.1719" }
%"class.base::RefCounted.1719" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1245" = type { %"class.base::RefCounted.1246" }
%"class.base::RefCounted.1246" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1250" }
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.WTF::Vector.1253"* }
%"class.WTF::Vector.1253" = type { %"class.WTF::VectorBuffer.2567" }
%"class.WTF::VectorBuffer.2567" = type { %"class.WTF::VectorBufferBase.2568", [32 x i8] }
%"class.WTF::VectorBufferBase.2568" = type { %class.scoped_refptr.637*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1261" }
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1264", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1270", %"class.std::__1::unique_ptr.1391", i8, %"class.absl::optional.1397", %class.scoped_refptr.1373, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1402" }
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1270" = type { %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1273, %class.scoped_refptr.1273, %class.scoped_refptr.1273, %class.scoped_refptr.1273, %class.scoped_refptr.1273, %class.scoped_refptr.1273, %class.scoped_refptr.1308, %class.scoped_refptr.1322, %class.scoped_refptr.1323, %class.scoped_refptr.1323, %class.scoped_refptr.1323, %class.scoped_refptr.1323, %class.scoped_refptr.1323, %class.scoped_refptr.1323, %class.scoped_refptr.1363, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1387 }
%class.scoped_refptr.1273 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1290" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1274", i8, i8, %class.scoped_refptr.1276, i32, i32 }
%"class.WTF::RefCounted.1274" = type { %"class.base::RefCounted.1275" }
%"class.base::RefCounted.1275" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1276 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1283, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1284", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1277" }
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1283 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1309", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1309" = type { %"class.WTF::RefCounted.1310", i8, i8, %class.scoped_refptr.1283, i32, i32 }
%"class.WTF::RefCounted.1310" = type { %"class.base::RefCounted.1311" }
%"class.base::RefCounted.1311" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1312" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1312" = type { %"class.absl::optional_internal::optional_data.1313" }
%"class.absl::optional_internal::optional_data.1313" = type { %"class.absl::optional_internal::optional_data_base.1314" }
%"class.absl::optional_internal::optional_data_base.1314" = type { %"class.absl::optional_internal::optional_data_dtor_base.1315" }
%"class.absl::optional_internal::optional_data_dtor_base.1315" = type { i8, %union.anon.1316 }
%union.anon.1316 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1317" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1284" = type { %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1293", %"class.std::__1::unique_ptr.1299", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1299" = type { %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1308 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1322 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1323 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1324" }
%"class.blink::PaintPropertyNode.1324" = type { %"class.WTF::RefCounted.1325", i8, i8, %class.scoped_refptr.1327, i32, i32 }
%"class.WTF::RefCounted.1325" = type { %"class.base::RefCounted.1326" }
%"class.base::RefCounted.1326" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1327 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1276, %class.scoped_refptr.1328, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1350", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1328 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1365" }
%"class.blink::PaintPropertyNode.1365" = type { %"class.WTF::RefCounted.1366", i8, i8, %class.scoped_refptr.1328, i32, i32 }
%"class.WTF::RefCounted.1366" = type { %"class.base::RefCounted.1367" }
%"class.base::RefCounted.1367" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1329" }
%"class.std::__1::vector.1329" = type { %"class.std::__1::__vector_base.1330" }
%"class.std::__1::__vector_base.1330" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1345" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1331, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1338", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1331 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1332, i32, %"class.absl::optional.1333", i8, i32 }
%class.sk_sp.1332 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1333" = type { %"class.absl::optional_internal::optional_data.1334" }
%"class.absl::optional_internal::optional_data.1334" = type { %"class.absl::optional_internal::optional_data_base.1335" }
%"class.absl::optional_internal::optional_data_base.1335" = type { %"class.absl::optional_internal::optional_data_dtor_base.1336" }
%"class.absl::optional_internal::optional_data_dtor_base.1336" = type { i8, %union.anon.1337 }
%union.anon.1337 = type { %struct.SkRect }
%"class.std::__1::vector.1338" = type { %"class.std::__1::__vector_base.1339" }
%"class.std::__1::__vector_base.1339" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1356" }
%"class.std::__1::vector.1356" = type { %"class.std::__1::__vector_base.1357" }
%"class.std::__1::__vector_base.1357" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { i32* }
%class.scoped_refptr.1363 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1364 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1376" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1276, %"class.absl::optional.1368", %class.scoped_refptr.1373, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1368" = type { %"class.absl::optional_internal::optional_data.1369" }
%"class.absl::optional_internal::optional_data.1369" = type { %"class.absl::optional_internal::optional_data_base.1370" }
%"class.absl::optional_internal::optional_data_base.1370" = type { %"class.absl::optional_internal::optional_data_dtor_base.1371" }
%"class.absl::optional_internal::optional_data_dtor_base.1371" = type { i8, [3 x i8], %union.anon.1372 }
%union.anon.1372 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1379", i32, [4 x i8] }>
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381" }
%"class.WTF::VectorBufferBase.1381" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1387 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1276, %class.scoped_refptr.1328, %class.scoped_refptr.1327 }
%"class.absl::optional.1397" = type { %"class.absl::optional_internal::optional_data.1398" }
%"class.absl::optional_internal::optional_data.1398" = type { %"class.absl::optional_internal::optional_data_base.1399" }
%"class.absl::optional_internal::optional_data_base.1399" = type { %"class.absl::optional_internal::optional_data_dtor_base.1400" }
%"class.absl::optional_internal::optional_data_dtor_base.1400" = type { i8, %union.anon.1401 }
%union.anon.1401 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1373 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1374", [4 x i8] }
%"class.WTF::RefCounted.1374" = type { %"class.base::RefCounted.1375" }
%"class.base::RefCounted.1375" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1402" = type { %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2297" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2299" = type { %"class.WTF::HashSet.2302" }
%"class.WTF::HashSet.2302" = type { %"class.WTF::HashTable.2303" }
%"class.WTF::HashTable.2303" = type <{ %"class.blink::Member.2305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2305" = type opaque
%"class.blink::HeapHashSet.2306" = type { %"class.WTF::HashSet.2309" }
%"class.WTF::HashSet.2309" = type { %"class.WTF::HashTable.2310" }
%"class.WTF::HashTable.2310" = type <{ %"class.blink::Member.2312"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2312" = type { %"class.blink::MemberBase.2313" }
%"class.blink::MemberBase.2313" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2485", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2496", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.42" }
%"class.blink::Member.2485" = type { %"class.blink::MemberBase.2486" }
%"class.blink::MemberBase.2486" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2487", %"class.blink::Member.2488", %"class.blink::Member.2490", %"class.blink::Member.2492", %"class.blink::Member.2494", %"class.WTF::Vector.121", i16, %class.scoped_refptr.1489 }
%"class.blink::ThreadState::PrefinalizerRegistration.2487" = type { i8 }
%"class.blink::Member.2488" = type { %"class.blink::MemberBase.2489" }
%"class.blink::MemberBase.2489" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2490" = type { %"class.blink::MemberBase.2491" }
%"class.blink::MemberBase.2491" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2492" = type { %"class.blink::MemberBase.2493" }
%"class.blink::MemberBase.2493" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2494" = type { %"class.blink::MemberBase.2495" }
%"class.blink::MemberBase.2495" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2496" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2497", { i64, i64 } }
%"class.blink::WeakMember.2497" = type { %"class.blink::MemberBase.2313" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2314" = type { %"class.std::__1::__compressed_pair.2315" }
%"class.std::__1::__compressed_pair.2315" = type { %"struct.std::__1::__compressed_pair_elem.2316" }
%"struct.std::__1::__compressed_pair_elem.2316" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2324", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2324" = type { %"class.WTF::HashTable.2325" }
%"class.WTF::HashTable.2325" = type <{ %"struct.WTF::KeyValuePair.2327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2327" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2328", i32, i32 }
%"class.WTF::Vector.2328" = type { %"class.WTF::VectorBuffer.2329" }
%"class.WTF::VectorBuffer.2329" = type { %"class.WTF::VectorBufferBase.2330" }
%"class.WTF::VectorBufferBase.2330" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2332" = type { %"class.WTF::LinkedHashSet.2335" }
%"class.WTF::LinkedHashSet.2335" = type { %"class.WTF::HashMap.2336", %"class.WTF::VectorBackedLinkedList.2340" }
%"class.WTF::HashMap.2336" = type { %"class.WTF::HashTable.2337" }
%"class.WTF::HashTable.2337" = type <{ %"struct.WTF::KeyValuePair.2339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2339" = type opaque
%"class.WTF::VectorBackedLinkedList.2340" = type { %"class.WTF::Vector.2341", i32, i32 }
%"class.WTF::Vector.2341" = type { %"class.WTF::VectorBuffer.2342" }
%"class.WTF::VectorBuffer.2342" = type { %"class.WTF::VectorBufferBase.2343" }
%"class.WTF::VectorBufferBase.2343" = type { %"class.WTF::VectorBackedLinkedListNode.2344"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2344" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2346" = type { %"class.std::__1::__compressed_pair.2347" }
%"class.std::__1::__compressed_pair.2347" = type { %"struct.std::__1::__compressed_pair_elem.2348" }
%"struct.std::__1::__compressed_pair_elem.2348" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2352" = type { %"class.std::__1::__compressed_pair.2353" }
%"class.std::__1::__compressed_pair.2353" = type { %"struct.std::__1::__compressed_pair_elem.2354" }
%"struct.std::__1::__compressed_pair_elem.2354" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2355, %class.scoped_refptr.2355, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2410", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2415", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2355 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2356", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2363" }
%"class.WTF::RefCounted.2356" = type { %"class.base::RefCounted.2357" }
%"class.base::RefCounted.2357" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2358", i32, [4 x i8] }>
%"class.WTF::Vector.2358" = type { %"class.WTF::VectorBuffer.2359" }
%"class.WTF::VectorBuffer.2359" = type { %"class.WTF::VectorBufferBase.2360" }
%"class.WTF::VectorBufferBase.2360" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2363" = type { %"class.WTF::VectorBuffer.2364" }
%"class.WTF::VectorBuffer.2364" = type { %"class.WTF::VectorBufferBase.2365" }
%"class.WTF::VectorBufferBase.2365" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2366", %"class.std::__1::unique_ptr.2382", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2366" = type { %"class.std::__1::__compressed_pair.2367" }
%"class.std::__1::__compressed_pair.2367" = type { %"struct.std::__1::__compressed_pair_elem.2368" }
%"struct.std::__1::__compressed_pair_elem.2368" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2369", %"class.WTF::Vector.2374", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2369" = type { %"class.WTF::VectorBuffer.2370" }
%"class.WTF::VectorBuffer.2370" = type { %"class.WTF::VectorBufferBase.2371" }
%"class.WTF::VectorBufferBase.2371" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2374" = type { %"class.WTF::VectorBuffer.2375" }
%"class.WTF::VectorBuffer.2375" = type { %"class.WTF::VectorBufferBase.2376" }
%"class.WTF::VectorBufferBase.2376" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2382" = type { %"class.std::__1::__compressed_pair.2383" }
%"class.std::__1::__compressed_pair.2383" = type { %"struct.std::__1::__compressed_pair_elem.2384" }
%"struct.std::__1::__compressed_pair_elem.2384" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2385", %"class.absl::optional.2385" }
%"class.absl::optional.2385" = type { %"class.absl::optional_internal::optional_data.2386" }
%"class.absl::optional_internal::optional_data.2386" = type { %"class.absl::optional_internal::optional_data_base.2387" }
%"class.absl::optional_internal::optional_data_base.2387" = type { %"class.absl::optional_internal::optional_data_dtor_base.2388" }
%"class.absl::optional_internal::optional_data_dtor_base.2388" = type { i8, [3 x i8], %union.anon.2389 }
%union.anon.2389 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2363"*, %"class.absl::optional.2395", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2395" = type { %"class.absl::optional_internal::optional_data.2396" }
%"class.absl::optional_internal::optional_data.2396" = type { %"class.absl::optional_internal::optional_data_base.2397" }
%"class.absl::optional_internal::optional_data_base.2397" = type { %"class.absl::optional_internal::optional_data_dtor_base.2398" }
%"class.absl::optional_internal::optional_data_dtor_base.2398" = type { i8, %union.anon.2399 }
%union.anon.2399 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2400", %"class.WTF::Vector.2405" }
%"class.WTF::Vector.2400" = type { %"class.WTF::VectorBuffer.2401" }
%"class.WTF::VectorBuffer.2401" = type { %"class.WTF::VectorBufferBase.2402", [128 x i8] }
%"class.WTF::VectorBufferBase.2402" = type { i32*, i32, i32 }
%"class.WTF::Vector.2405" = type { %"class.WTF::VectorBuffer.2406" }
%"class.WTF::VectorBuffer.2406" = type { %"class.WTF::VectorBufferBase.2407", [128 x i8] }
%"class.WTF::VectorBufferBase.2407" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2410" = type { %"class.WTF::VectorBuffer.2411" }
%"class.WTF::VectorBuffer.2411" = type { %"class.WTF::VectorBufferBase.2412" }
%"class.WTF::VectorBufferBase.2412" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2415" = type { %"class.WTF::HashTable.2416" }
%"class.WTF::HashTable.2416" = type <{ %"struct.WTF::KeyValuePair.2419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2419" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2420", %"class.WTF::Vector.2425" }
%"class.WTF::HashMap.2420" = type { %"class.WTF::HashTable.2421" }
%"class.WTF::HashTable.2421" = type <{ %"struct.WTF::KeyValuePair.2424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2424" = type opaque
%"class.WTF::Vector.2425" = type { %"class.WTF::VectorBuffer.2426" }
%"class.WTF::VectorBuffer.2426" = type { %"class.WTF::VectorBufferBase.2427" }
%"class.WTF::VectorBufferBase.2427" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2433" = type { %"class.std::__1::__compressed_pair.2434" }
%"class.std::__1::__compressed_pair.2434" = type { %"struct.std::__1::__compressed_pair_elem.2435" }
%"struct.std::__1::__compressed_pair_elem.2435" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2439" = type { %"class.WTF::VectorBuffer.2440" }
%"class.WTF::VectorBuffer.2440" = type { %"class.WTF::VectorBufferBase.2441" }
%"class.WTF::VectorBufferBase.2441" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2444 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2447" = type { %"class.blink::MemberBase.2448" }
%"class.blink::MemberBase.2448" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2449" = type { %"class.blink::MemberBase.2450" }
%"class.blink::MemberBase.2450" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2451" = type { %"class.WTF::HashSet.2454" }
%"class.WTF::HashSet.2454" = type { %"class.WTF::HashTable.2455" }
%"class.WTF::HashTable.2455" = type <{ %"class.blink::WeakMember.2457"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2457" = type opaque
%"class.blink::HeapHashSet.2458" = type { %"class.WTF::HashSet.2461" }
%"class.WTF::HashSet.2461" = type { %"class.WTF::HashTable.2462" }
%"class.WTF::HashTable.2462" = type <{ %"class.blink::WeakMember.2464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2464" = type opaque
%"class.std::__1::unique_ptr.2465" = type { %"class.std::__1::__compressed_pair.2466" }
%"class.std::__1::__compressed_pair.2466" = type { %"struct.std::__1::__compressed_pair_elem.2467" }
%"struct.std::__1::__compressed_pair_elem.2467" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2468" }
%"class.base::time_internal::TimeBase.2468" = type { i64 }
%"class.std::__1::unique_ptr.2472" = type { %"class.std::__1::__compressed_pair.2473" }
%"class.std::__1::__compressed_pair.2473" = type { %"struct.std::__1::__compressed_pair_elem.2474" }
%"struct.std::__1::__compressed_pair_elem.2474" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2475", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2475" = type { %"class.absl::optional_internal::optional_data.2476" }
%"class.absl::optional_internal::optional_data.2476" = type { %"class.absl::optional_internal::optional_data_base.2477" }
%"class.absl::optional_internal::optional_data_base.2477" = type { %"class.absl::optional_internal::optional_data_dtor_base.2478" }
%"class.absl::optional_internal::optional_data_dtor_base.2478" = type { i8, %union.anon.2479 }
%union.anon.2479 = type { %"class.base::Time" }
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.633", %"class.blink::Member.1810", %"class.blink::Member.1812", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.1814", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.1820", i8, [7 x i8] }>
%"class.blink::Member.1810" = type { %"class.blink::MemberBase.1811" }
%"class.blink::MemberBase.1811" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::CompositeEditCommand" = type { %"class.blink::EditCommand.base", %"class.blink::HeapVector.2247", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::Member.2256" }
%"class.blink::EditCommand.base" = type <{ i32 (...)**, %"class.blink::Member.29", %"class.blink::Member.1810", i8 }>
%"class.blink::HeapVector.2247" = type { %"class.WTF::Vector.2250" }
%"class.WTF::Vector.2250" = type { %"class.WTF::VectorBuffer.2251" }
%"class.WTF::VectorBuffer.2251" = type { %"class.WTF::VectorBufferBase.2252" }
%"class.WTF::VectorBufferBase.2252" = type { %"class.blink::Member.2253"*, i32, i32 }
%"class.blink::Member.2253" = type { %"class.blink::MemberBase.2254" }
%"class.blink::MemberBase.2254" = type { %"class.blink::EditCommand"* }
%"class.blink::EditCommand" = type <{ i32 (...)**, %"class.blink::Member.29", %"class.blink::Member.1810", i8, [7 x i8] }>
%"class.blink::SelectionForUndoStep" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, %"class.blink::Member.42" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.6", i32, i32 }
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::UndoStep"* }
%"class.blink::UndoStep" = type <{ %"class.blink::Member.29", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::HeapVector.2260", i64, i8, [7 x i8] }>
%"class.blink::HeapVector.2260" = type { %"class.WTF::Vector.2263" }
%"class.WTF::Vector.2263" = type { %"class.WTF::VectorBuffer.2264" }
%"class.WTF::VectorBuffer.2264" = type { %"class.WTF::VectorBufferBase.2265" }
%"class.WTF::VectorBufferBase.2265" = type { %"class.blink::Member.2266"*, i32, i32 }
%"class.blink::Member.2266" = type opaque
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.1814" = type { %"class.std::__1::__compressed_pair.1815" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.1816" }
%"struct.std::__1::__compressed_pair_elem.1816" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::Member.1820" = type { %"class.blink::MemberBase.1821" }
%"class.blink::MemberBase.1821" = type { %"class.blink::EditingStyle"* }
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.633", %"class.blink::Member.1842", %"class.blink::Member.1844", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1846", %"class.blink::Member.1852" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1491" }
%"class.blink::WeakMember.1491" = type { %"class.blink::MemberBase.30" }
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1844" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1846" = type { %"class.std::__1::__compressed_pair.1847" }
%"class.std::__1::__compressed_pair.1847" = type { %"struct.std::__1::__compressed_pair_elem.1848" }
%"struct.std::__1::__compressed_pair_elem.1848" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1854" = type { %"class.blink::MemberBase.1855" }
%"class.blink::MemberBase.1855" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1856" = type { %"class.blink::MemberBase.1857" }
%"class.blink::MemberBase.1857" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1858" = type { %"class.blink::MemberBase.1859" }
%"class.blink::MemberBase.1859" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1869", %"class.blink::HeapListHashSet.1880", %"class.blink::HeapListHashSet.1891", %"class.blink::HeapListHashSet.1902", %"class.blink::HeapListHashSet.1913", %"class.blink::HeapListHashSet.1924", %"class.blink::HeapListHashSet.1935", %"class.blink::HeapListHashSet.1946", %"class.blink::HeapListHashSet.1957", %"class.blink::HeapListHashSet.1968", %"class.blink::HeapListHashSet.1979", %"class.blink::HeapListHashSet.1990", %"class.blink::HeapListHashSet.2001", %"class.blink::HeapListHashSet.2012", %"class.blink::HeapListHashSet.2023", %"class.blink::HeapListHashSet.2034", %"class.blink::HeapListHashSet.2045", %"class.blink::HeapListHashSet.2056", %"class.blink::HeapListHashSet.2067" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1865", %"class.blink::Member.1867", %"class.blink::Member.1867", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1865" = type <{ %"class.blink::Member.1867"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2081", %"class.blink::Member.1867", %"class.blink::Member.1867" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1869" = type { %"class.WTF::ListHashSet.base.1879", [7 x i8] }
%"class.WTF::ListHashSet.base.1879" = type <{ %"class.WTF::HashTable.1874", %"class.blink::Member.1876", %"class.blink::Member.1876", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1874" = type <{ %"class.blink::Member.1876"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::HeapListHashSetNode.1878"* }
%"class.blink::HeapListHashSetNode.1878" = type { %"class.blink::Member.2240", %"class.blink::Member.1876", %"class.blink::Member.1876" }
%"class.blink::Member.2240" = type { %"class.blink::MemberBase.2241" }
%"class.blink::MemberBase.2241" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1880" = type { %"class.WTF::ListHashSet.base.1890", [7 x i8] }
%"class.WTF::ListHashSet.base.1890" = type <{ %"class.WTF::HashTable.1885", %"class.blink::Member.1887", %"class.blink::Member.1887", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1885" = type <{ %"class.blink::Member.1887"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1887" = type { %"class.blink::MemberBase.1888" }
%"class.blink::MemberBase.1888" = type { %"class.blink::HeapListHashSetNode.1889"* }
%"class.blink::HeapListHashSetNode.1889" = type { %"class.blink::Member.2236", %"class.blink::Member.1887", %"class.blink::Member.1887" }
%"class.blink::Member.2236" = type { %"class.blink::MemberBase.2237" }
%"class.blink::MemberBase.2237" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1891" = type { %"class.WTF::ListHashSet.base.1901", [7 x i8] }
%"class.WTF::ListHashSet.base.1901" = type <{ %"class.WTF::HashTable.1896", %"class.blink::Member.1898", %"class.blink::Member.1898", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1896" = type <{ %"class.blink::Member.1898"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::HeapListHashSetNode.1900"* }
%"class.blink::HeapListHashSetNode.1900" = type { %"class.blink::Member.2232", %"class.blink::Member.1898", %"class.blink::Member.1898" }
%"class.blink::Member.2232" = type { %"class.blink::MemberBase.2233" }
%"class.blink::MemberBase.2233" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1902" = type { %"class.WTF::ListHashSet.base.1912", [7 x i8] }
%"class.WTF::ListHashSet.base.1912" = type <{ %"class.WTF::HashTable.1907", %"class.blink::Member.1909", %"class.blink::Member.1909", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1907" = type <{ %"class.blink::Member.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::HeapListHashSetNode.1911"* }
%"class.blink::HeapListHashSetNode.1911" = type { %"class.blink::Member.2228", %"class.blink::Member.1909", %"class.blink::Member.1909" }
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1913" = type { %"class.WTF::ListHashSet.base.1923", [7 x i8] }
%"class.WTF::ListHashSet.base.1923" = type <{ %"class.WTF::HashTable.1918", %"class.blink::Member.1920", %"class.blink::Member.1920", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1918" = type <{ %"class.blink::Member.1920"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::HeapListHashSetNode.1922"* }
%"class.blink::HeapListHashSetNode.1922" = type { %"class.blink::Member.2224", %"class.blink::Member.1920", %"class.blink::Member.1920" }
%"class.blink::Member.2224" = type { %"class.blink::MemberBase.2225" }
%"class.blink::MemberBase.2225" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1924" = type { %"class.WTF::ListHashSet.base.1934", [7 x i8] }
%"class.WTF::ListHashSet.base.1934" = type <{ %"class.WTF::HashTable.1929", %"class.blink::Member.1931", %"class.blink::Member.1931", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1929" = type <{ %"class.blink::Member.1931"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1931" = type { %"class.blink::MemberBase.1932" }
%"class.blink::MemberBase.1932" = type { %"class.blink::HeapListHashSetNode.1933"* }
%"class.blink::HeapListHashSetNode.1933" = type { %"class.blink::Member.2220", %"class.blink::Member.1931", %"class.blink::Member.1931" }
%"class.blink::Member.2220" = type { %"class.blink::MemberBase.2221" }
%"class.blink::MemberBase.2221" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1935" = type { %"class.WTF::ListHashSet.base.1945", [7 x i8] }
%"class.WTF::ListHashSet.base.1945" = type <{ %"class.WTF::HashTable.1940", %"class.blink::Member.1942", %"class.blink::Member.1942", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1940" = type <{ %"class.blink::Member.1942"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::HeapListHashSetNode.1944"* }
%"class.blink::HeapListHashSetNode.1944" = type { %"class.blink::Member.2216", %"class.blink::Member.1942", %"class.blink::Member.1942" }
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1946" = type { %"class.WTF::ListHashSet.base.1956", [7 x i8] }
%"class.WTF::ListHashSet.base.1956" = type <{ %"class.WTF::HashTable.1951", %"class.blink::Member.1953", %"class.blink::Member.1953", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1951" = type <{ %"class.blink::Member.1953"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1953" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::HeapListHashSetNode.1955"* }
%"class.blink::HeapListHashSetNode.1955" = type { %"class.blink::Member.2212", %"class.blink::Member.1953", %"class.blink::Member.1953" }
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1957" = type { %"class.WTF::ListHashSet.base.1967", [7 x i8] }
%"class.WTF::ListHashSet.base.1967" = type <{ %"class.WTF::HashTable.1962", %"class.blink::Member.1964", %"class.blink::Member.1964", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1962" = type <{ %"class.blink::Member.1964"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1964" = type { %"class.blink::MemberBase.1965" }
%"class.blink::MemberBase.1965" = type { %"class.blink::HeapListHashSetNode.1966"* }
%"class.blink::HeapListHashSetNode.1966" = type { %"class.blink::Member.2208", %"class.blink::Member.1964", %"class.blink::Member.1964" }
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1968" = type { %"class.WTF::ListHashSet.base.1978", [7 x i8] }
%"class.WTF::ListHashSet.base.1978" = type <{ %"class.WTF::HashTable.1973", %"class.blink::Member.1975", %"class.blink::Member.1975", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1973" = type <{ %"class.blink::Member.1975"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1975" = type { %"class.blink::MemberBase.1976" }
%"class.blink::MemberBase.1976" = type { %"class.blink::HeapListHashSetNode.1977"* }
%"class.blink::HeapListHashSetNode.1977" = type { %"class.blink::Member.2085", %"class.blink::Member.1975", %"class.blink::Member.1975" }
%"class.blink::HeapListHashSet.1979" = type { %"class.WTF::ListHashSet.base.1989", [7 x i8] }
%"class.WTF::ListHashSet.base.1989" = type <{ %"class.WTF::HashTable.1984", %"class.blink::Member.1986", %"class.blink::Member.1986", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1984" = type <{ %"class.blink::Member.1986"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1986" = type { %"class.blink::MemberBase.1987" }
%"class.blink::MemberBase.1987" = type { %"class.blink::HeapListHashSetNode.1988"* }
%"class.blink::HeapListHashSetNode.1988" = type { %"class.blink::Member.2202", %"class.blink::Member.1986", %"class.blink::Member.1986" }
%"class.blink::Member.2202" = type { %"class.blink::MemberBase.2203" }
%"class.blink::MemberBase.2203" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1990" = type { %"class.WTF::ListHashSet.base.2000", [7 x i8] }
%"class.WTF::ListHashSet.base.2000" = type <{ %"class.WTF::HashTable.1995", %"class.blink::Member.1997", %"class.blink::Member.1997", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1995" = type <{ %"class.blink::Member.1997"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::HeapListHashSetNode.1999"* }
%"class.blink::HeapListHashSetNode.1999" = type { %"class.blink::Member.2198", %"class.blink::Member.1997", %"class.blink::Member.1997" }
%"class.blink::Member.2198" = type { %"class.blink::MemberBase.2199" }
%"class.blink::MemberBase.2199" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2001" = type { %"class.WTF::ListHashSet.base.2011", [7 x i8] }
%"class.WTF::ListHashSet.base.2011" = type <{ %"class.WTF::HashTable.2006", %"class.blink::Member.2008", %"class.blink::Member.2008", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2006" = type <{ %"class.blink::Member.2008"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2008" = type { %"class.blink::MemberBase.2009" }
%"class.blink::MemberBase.2009" = type { %"class.blink::HeapListHashSetNode.2010"* }
%"class.blink::HeapListHashSetNode.2010" = type { %"class.blink::Member.2194", %"class.blink::Member.2008", %"class.blink::Member.2008" }
%"class.blink::Member.2194" = type { %"class.blink::MemberBase.2195" }
%"class.blink::MemberBase.2195" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2012" = type { %"class.WTF::ListHashSet.base.2022", [7 x i8] }
%"class.WTF::ListHashSet.base.2022" = type <{ %"class.WTF::HashTable.2017", %"class.blink::Member.2019", %"class.blink::Member.2019", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2017" = type <{ %"class.blink::Member.2019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2019" = type { %"class.blink::MemberBase.2020" }
%"class.blink::MemberBase.2020" = type { %"class.blink::HeapListHashSetNode.2021"* }
%"class.blink::HeapListHashSetNode.2021" = type { %"class.blink::Member.2190", %"class.blink::Member.2019", %"class.blink::Member.2019" }
%"class.blink::Member.2190" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2023" = type { %"class.WTF::ListHashSet.base.2033", [7 x i8] }
%"class.WTF::ListHashSet.base.2033" = type <{ %"class.WTF::HashTable.2028", %"class.blink::Member.2030", %"class.blink::Member.2030", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2028" = type <{ %"class.blink::Member.2030"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::HeapListHashSetNode.2032"* }
%"class.blink::HeapListHashSetNode.2032" = type { %"class.blink::Member.2186", %"class.blink::Member.2030", %"class.blink::Member.2030" }
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2034" = type { %"class.WTF::ListHashSet.base.2044", [7 x i8] }
%"class.WTF::ListHashSet.base.2044" = type <{ %"class.WTF::HashTable.2039", %"class.blink::Member.2041", %"class.blink::Member.2041", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2039" = type <{ %"class.blink::Member.2041"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::HeapListHashSetNode.2043"* }
%"class.blink::HeapListHashSetNode.2043" = type { %"class.blink::Member.2182", %"class.blink::Member.2041", %"class.blink::Member.2041" }
%"class.blink::Member.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2045" = type { %"class.WTF::ListHashSet.base.2055", [7 x i8] }
%"class.WTF::ListHashSet.base.2055" = type <{ %"class.WTF::HashTable.2050", %"class.blink::Member.2052", %"class.blink::Member.2052", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2050" = type <{ %"class.blink::Member.2052"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::HeapListHashSetNode.2054"* }
%"class.blink::HeapListHashSetNode.2054" = type { %"class.blink::Member.2178", %"class.blink::Member.2052", %"class.blink::Member.2052" }
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2056" = type { %"class.WTF::ListHashSet.base.2066", [7 x i8] }
%"class.WTF::ListHashSet.base.2066" = type <{ %"class.WTF::HashTable.2061", %"class.blink::Member.2063", %"class.blink::Member.2063", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2061" = type <{ %"class.blink::Member.2063"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2063" = type { %"class.blink::MemberBase.2064" }
%"class.blink::MemberBase.2064" = type { %"class.blink::HeapListHashSetNode.2065"* }
%"class.blink::HeapListHashSetNode.2065" = type { %"class.blink::Member.2087", %"class.blink::Member.2063", %"class.blink::Member.2063" }
%"class.blink::HeapListHashSet.2067" = type { %"class.WTF::ListHashSet.base.2077", [7 x i8] }
%"class.WTF::ListHashSet.base.2077" = type <{ %"class.WTF::HashTable.2072", %"class.blink::Member.2074", %"class.blink::Member.2074", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2072" = type <{ %"class.blink::Member.2074"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::HeapListHashSetNode.2076"* }
%"class.blink::HeapListHashSetNode.2076" = type { %"class.blink::Member.2079", %"class.blink::Member.2074", %"class.blink::Member.2074" }
%class.scoped_refptr.2078 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2079" = type { %"class.blink::MemberBase.2080" }
%"class.blink::MemberBase.2080" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2087" = type { %"class.blink::MemberBase.2088" }
%"class.blink::MemberBase.2088" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2095" = type { %"class.blink::Member.2096" }
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2592" }
%"class.mojo::Remote.2592" = type { %"class.mojo::internal::InterfacePtrState.2593" }
%"class.mojo::internal::InterfacePtrState.2593" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2594" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.165, %"class.std::__1::unique_ptr.283", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.167, i32 }>
%class.scoped_refptr.165 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.167, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.245", %"class.absl::optional.250", %"class.absl::optional.206", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.274", i8, [7 x i8], %class.scoped_refptr.167, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.167, %"class.std::__1::unique_ptr.191", %"class.absl::optional", %"struct.std::__1::atomic.202", i8, i8, i8, i8, i32, i32, %"class.absl::optional.206", %"class.std::__1::unique_ptr.211", i8, i64, %class.scoped_refptr.241, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.244" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.167, i8, %"class.mojo::ScopedHandleBase.194", %class.scoped_refptr.195, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.196" }
%"class.mojo::ScopedHandleBase.194" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.195 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.200 }
%union.anon.200 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.201", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.201" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.214", i8, i64, %class.scoped_refptr.215, %class.scoped_refptr.237 }
%"class.base::RepeatingCallback.214" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.215 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.216", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.226", i8, [7 x i8] }>
%"class.base::RefCounted.216" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::map.226" = type { %"class.std::__1::__tree.227" }
%"class.std::__1::__tree.227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%class.scoped_refptr.237 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.241 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.244" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.245" = type { %"class.absl::optional_internal::optional_data.246" }
%"class.absl::optional_internal::optional_data.246" = type { %"class.absl::optional_internal::optional_data_base.247" }
%"class.absl::optional_internal::optional_data_base.247" = type { %"class.absl::optional_internal::optional_data_dtor_base.248" }
%"class.absl::optional_internal::optional_data_dtor_base.248" = type { i8, %union.anon.249 }
%union.anon.249 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.250" = type { %"class.absl::optional_internal::optional_data.251" }
%"class.absl::optional_internal::optional_data.251" = type { %"class.absl::optional_internal::optional_data_base.252" }
%"class.absl::optional_internal::optional_data_base.252" = type { %"class.absl::optional_internal::optional_data_dtor_base.253" }
%"class.absl::optional_internal::optional_data_dtor_base.253" = type { i8, [7 x i8], %union.anon.254 }
%union.anon.254 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.206" = type { %"class.absl::optional_internal::optional_data.207" }
%"class.absl::optional_internal::optional_data.207" = type { %"class.absl::optional_internal::optional_data_base.208" }
%"class.absl::optional_internal::optional_data_base.208" = type { %"class.absl::optional_internal::optional_data_dtor_base.209" }
%"class.absl::optional_internal::optional_data_dtor_base.209" = type { i8, %union.anon.210 }
%union.anon.210 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.259 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.259 = type { %"class.std::__1::map.262" }
%"class.std::__1::map.262" = type { %"class.std::__1::__tree.263" }
%"class.std::__1::__tree.263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.273"*, i64 }
%"class.std::__1::unique_ptr.273" = type opaque
%"class.std::__1::map.274" = type { %"class.std::__1::__tree.275" }
%"class.std::__1::__tree.275" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2594" = type { %"class.std::__1::__compressed_pair.2595" }
%"class.std::__1::__compressed_pair.2595" = type { %"struct.std::__1::__compressed_pair_elem.2596" }
%"struct.std::__1::__compressed_pair_elem.2596" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2098" = type { %"class.std::__1::__compressed_pair.2099" }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2101, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2101 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2102", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2102" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2103" }
%"class.std::__1::vector.2103" = type { %"class.std::__1::__vector_base.2104" }
%"class.std::__1::__vector_base.2104" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2105" }
%"class.std::__1::__compressed_pair.2105" = type { %"struct.std::__1::__compressed_pair_elem.2106" }
%"struct.std::__1::__compressed_pair_elem.2106" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2110, i8, [7 x i8] }>
%class.scoped_refptr.2110 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2111", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2112" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2112" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2119" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2120" = type { %"class.std::__1::__compressed_pair.2121" }
%"class.std::__1::__compressed_pair.2121" = type { %"struct.std::__1::__compressed_pair_elem.2122" }
%"struct.std::__1::__compressed_pair_elem.2122" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2126" = type { %"class.std::__1::__compressed_pair.2127" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.2128" }
%"struct.std::__1::__compressed_pair_elem.2128" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2132" }
%"class.blink::Member.2132" = type { %"class.blink::MemberBase.2133" }
%"class.blink::MemberBase.2133" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2602" }
%"class.mojo::AssociatedRemote.2602" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2603" }
%"class.mojo::internal::AssociatedInterfacePtrState.2603" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2604" }
%"class.std::__1::unique_ptr.2604" = type { %"class.std::__1::__compressed_pair.2605" }
%"class.std::__1::__compressed_pair.2605" = type { %"struct.std::__1::__compressed_pair_elem.2606" }
%"struct.std::__1::__compressed_pair_elem.2606" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2134" = type { %"class.blink::Member.2135" }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2612" }
%"class.mojo::AssociatedRemote.2612" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2613" }
%"class.mojo::internal::AssociatedInterfacePtrState.2613" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2614" }
%"class.std::__1::unique_ptr.2614" = type { %"class.std::__1::__compressed_pair.2615" }
%"class.std::__1::__compressed_pair.2615" = type { %"struct.std::__1::__compressed_pair_elem.2616" }
%"struct.std::__1::__compressed_pair_elem.2616" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2137" }
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2622", %"class.blink::Member.633", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2622" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2623" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.283" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2623" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2139" = type { %"class.blink::Member.2140" }
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2626", %"class.blink::Member.633", %"class.mojo::AssociatedReceiver.2627" }
%"class.blink::ThreadState::PrefinalizerRegistration.2626" = type { i8 }
%"class.mojo::AssociatedReceiver.2627" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2628" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2628" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2142" }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2631", %"class.blink::Member.633", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2631" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.165, %"class.std::__1::unique_ptr.283", %"class.base::WeakPtrFactory.2632" }
%"class.base::WeakPtrFactory.2632" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2144" = type { %"class.blink::Member.2145" }
%"class.blink::Member.2145" = type { %"class.blink::MemberBase.2146" }
%"class.blink::MemberBase.2146" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2635", %"class.blink::Member.633", %"class.mojo::AssociatedReceiver.2636" }
%"class.blink::ThreadState::PrefinalizerRegistration.2635" = type { i8 }
%"class.mojo::AssociatedReceiver.2636" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2637" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2637" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2149" = type { %"class.blink::MemberBase.2150" }
%"class.blink::MemberBase.2150" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2153" = type { %"class.blink::MemberBase.2154" }
%"class.blink::MemberBase.2154" = type { %"class.blink::HeapHashMap.2155"* }
%"class.blink::HeapHashMap.2155" = type opaque
%"class.mojo::StructPtr.2156" = type { %"class.std::__1::unique_ptr.2157" }
%"class.std::__1::unique_ptr.2157" = type { %"class.std::__1::__compressed_pair.2158" }
%"class.std::__1::__compressed_pair.2158" = type { %"struct.std::__1::__compressed_pair_elem.2159" }
%"struct.std::__1::__compressed_pair_elem.2159" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2160", %"class.mojo::InlinedStructPtr.2161" }
%"class.mojo::InlinedStructPtr.2160" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2161" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2167" = type { %"class.absl::optional_internal::optional_data.2168" }
%"class.absl::optional_internal::optional_data.2168" = type { %"class.absl::optional_internal::optional_data_base.2169" }
%"class.absl::optional_internal::optional_data_base.2169" = type { %"class.absl::optional_internal::optional_data_dtor_base.2170" }
%"class.absl::optional_internal::optional_data_dtor_base.2170" = type { i8, %union.anon.2171 }
%union.anon.2171 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.154", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1739" }
%"class.base::internal::flat_tree.1739" = type { %"class.std::__1::vector.1740" }
%"class.std::__1::vector.1740" = type { %"class.std::__1::__vector_base.1741" }
%"class.std::__1::__vector_base.1741" = type { %"struct.std::__1::pair.1742"*, %"struct.std::__1::pair.1742"*, %"class.std::__1::__compressed_pair.1743" }
%"struct.std::__1::pair.1742" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { %"struct.std::__1::pair.1742"* }
%"class.blink::Member.1748" = type { %"class.blink::MemberBase.1749" }
%"class.blink::MemberBase.1749" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1750" = type { %"class.absl::optional_internal::optional_data.1751" }
%"class.absl::optional_internal::optional_data.1751" = type { %"class.absl::optional_internal::optional_data_base.1752" }
%"class.absl::optional_internal::optional_data_base.1752" = type { %"class.absl::optional_internal::optional_data_dtor_base.1753" }
%"class.absl::optional_internal::optional_data_dtor_base.1753" = type { i8, %union.anon.1754 }
%union.anon.1754 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1755" = type { %"class.absl::optional_internal::optional_data.1756" }
%"class.absl::optional_internal::optional_data.1756" = type { %"class.absl::optional_internal::optional_data_base.1757" }
%"class.absl::optional_internal::optional_data_base.1757" = type { %"class.absl::optional_internal::optional_data_dtor_base.1758" }
%"class.absl::optional_internal::optional_data_dtor_base.1758" = type { i8, %union.anon.1759 }
%union.anon.1759 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1760" }
%"class.blink::HeapHashSet.1760" = type { %"class.WTF::HashSet.1763" }
%"class.WTF::HashSet.1763" = type { %"class.WTF::HashTable.1764" }
%"class.WTF::HashTable.1764" = type <{ %"class.blink::WeakMember.1766"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1766" = type opaque
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.162" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.333" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.341", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.412", i32, i8, [3 x i8], %"class.blink::HeapVector.414", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.433", %"class.blink::Member.492", %"class.blink::Member.494", i8 }>
%"class.blink::Supplementable.496" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.497" }
%"class.blink::HeapHashMap.497" = type { %"class.WTF::HashMap.500" }
%"class.WTF::HashMap.500" = type { %"class.WTF::HashTable.501" }
%"class.WTF::HashTable.501" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.526 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.528", i64, %"class.WTF::Vector.532", %"class.WTF::Vector.537", %"class.WTF::Vector.543", %"class.WTF::Vector.561", %class.scoped_refptr.364, %"class.WTF::HashMap.567", %"class.WTF::Vector.572", %"class.WTF::Vector.532", %"class.WTF::Vector.578", %"class.WTF::HashMap.583", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.527" }
%"class.base::RefCountedThreadSafe.527" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { i8* }
%"class.WTF::Vector.537" = type { %"class.WTF::VectorBuffer.538" }
%"class.WTF::VectorBuffer.538" = type { %"class.WTF::VectorBufferBase.539", [8 x i8] }
%"class.WTF::VectorBufferBase.539" = type { %class.scoped_refptr.540*, i32, i32 }
%class.scoped_refptr.540 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.547", %"class.std::__1::unique_ptr.553" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.546 }
%class.scoped_refptr.546 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563" }
%"class.WTF::VectorBufferBase.563" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.564", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.564" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"struct.WTF::KeyValuePair.571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.571" = type opaque
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %"class.mojo::ScopedHandleBase.575"*, i32, i32 }
%"class.mojo::ScopedHandleBase.575" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534", [16 x i8] }
%"class.WTF::VectorBufferBase.534" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580" }
%"class.WTF::VectorBufferBase.580" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.587" = type { i8**, %"class.std::__1::unique_ptr.2571" }
%"class.std::__1::unique_ptr.2571" = type { %"class.std::__1::__compressed_pair.2572" }
%"class.std::__1::__compressed_pair.2572" = type { %"struct.std::__1::__compressed_pair_elem.2573" }
%"struct.std::__1::__compressed_pair_elem.2573" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.588" = type { %"class.WTF::HashSet.591" }
%"class.WTF::HashSet.591" = type { %"class.WTF::HashTable.592" }
%"class.WTF::HashTable.592" = type <{ %"class.blink::WeakMember.594"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.594" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.602", %"class.blink::Member.602", %"class.blink::Member.604", %"class.blink::Member.606", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.597" }
%"class.absl::optional.597" = type { %"class.absl::optional_internal::optional_data.598" }
%"class.absl::optional_internal::optional_data.598" = type { %"class.absl::optional_internal::optional_data_base.599" }
%"class.absl::optional_internal::optional_data_base.599" = type { %"class.absl::optional_internal::optional_data_dtor_base.600" }
%"class.absl::optional_internal::optional_data_dtor_base.600" = type { i8, %union.anon.601 }
%union.anon.601 = type { i64 }
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::Event"* }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.608" = type { %"class.WTF::HashMap.611" }
%"class.WTF::HashMap.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"struct.WTF::KeyValuePair.614"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.614" = type opaque
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.633", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1418", %"class.blink::Member.1420", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.635", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1411", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1411" = type { %"class.WTF::HashMap.1414" }
%"class.WTF::HashMap.1414" = type { %"class.WTF::HashTable.1415" }
%"class.WTF::HashTable.1415" = type <{ %"struct.WTF::KeyValuePair.1417"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1417" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.132", %"class.blink::Member.1714", %"class.blink::Member.1716" }
%"class.blink::Member.1714" = type { %"class.blink::MemberBase.1715" }
%"class.blink::MemberBase.1715" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1716" = type { %"class.blink::MemberBase.1717" }
%"class.blink::MemberBase.1717" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.132", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1710" }
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::HeapHashMap.1428"* }
%"class.blink::HeapHashMap.1428" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1438" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1441" }
%"class.WTF::VectorBuffer.1441" = type { %"class.WTF::VectorBufferBase.1442" }
%"class.WTF::VectorBufferBase.1442" = type { i64*, i32, i32 }
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1451" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1451" = type { %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.blink::KURL"* }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.69", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.71, %"class.WTF::Vector.85", %"class.WTF::Vector.85", %"class.blink::Member.6", %"class.blink::Member.90", %"class.blink::HeapHashSet", %"class.blink::Member.29", %"class.WTF::HashSet.98", %"class.WTF::TextPosition", %"class.blink::Member.102", %"class.blink::HeapVector.104", %"class.blink::Member.111" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.71 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.72", %"class.WTF::Vector.74" }
%"class.WTF::RefCounted.72" = type { %"class.base::RefCounted.73" }
%"class.base::RefCounted.73" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.74" = type { %"class.WTF::VectorBuffer.75" }
%"class.WTF::VectorBuffer.75" = type { %"class.WTF::VectorBufferBase.76" }
%"class.WTF::VectorBufferBase.76" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.77", %"class.WTF::String" }
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.WTF::VectorBufferBase.79" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.92" }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.96" }
%"class.WTF::HashTable.96" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.9" }
%"class.WTF::HashSet.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.71, %"class.blink::Member.67", %"class.blink::Member.90" }
%"class.blink::HeapVector.104" = type { %"class.WTF::Vector.107" }
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.blink::Member.90"*, i32, i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1467 }
%class.scoped_refptr.1467 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1468" = type { %"class.WTF::VectorBuffer.1469" }
%"class.WTF::VectorBuffer.1469" = type { %"class.WTF::VectorBufferBase.1470" }
%"class.WTF::VectorBufferBase.1470" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1471 }
%class.scoped_refptr.1471 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1472", i32, i32, %"class.blink::Persistent.1474" }
%"class.WTF::RefCounted.1472" = type { %"class.base::RefCounted.1473" }
%"class.base::RefCounted.1473" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1474" = type { %"class.blink::PersistentBase.1475" }
%"class.blink::PersistentBase.1475" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1478" }
%"class.blink::HeapHashMap.1478" = type { %"class.WTF::HashMap.1481" }
%"class.WTF::HashMap.1481" = type { %"class.WTF::HashTable.1482" }
%"class.WTF::HashTable.1482" = type <{ %"struct.WTF::KeyValuePair.1484"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1484" = type { %"class.blink::WeakMember.1485", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.29", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.6", %"class.blink::Member.6", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1492" }
%"class.blink::HeapHashMap.1492" = type { %"class.WTF::HashMap.1495" }
%"class.WTF::HashMap.1495" = type { %"class.WTF::HashTable.1496" }
%"class.WTF::HashTable.1496" = type <{ %"struct.WTF::KeyValuePair.1498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1498" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1501" = type { %"class.WTF::HashSet.1504" }
%"class.WTF::HashSet.1504" = type { %"class.WTF::HashTable.1505" }
%"class.WTF::HashTable.1505" = type <{ %"class.blink::WeakMember.1507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1507" = type opaque
%"class.blink::HeapHashSet.1508" = type { %"class.WTF::HashSet.1511" }
%"class.WTF::HashSet.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"class.blink::WeakMember.1514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1514" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.8", %"class.blink::HeapVector.61" }
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1525" = type { %"class.WTF::HashMap.1528" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1531"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1531" = type opaque
%"class.WTF::Vector.1532" = type { %"class.WTF::VectorBuffer.1533" }
%"class.WTF::VectorBuffer.1533" = type { %"class.WTF::VectorBufferBase.1534" }
%"class.WTF::VectorBufferBase.1534" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.14" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.18", %"class.blink::Member.20", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.18" = type { %"class.WTF::SingleThreadedBitField.19" }
%"class.WTF::SingleThreadedBitField.19" = type { i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.25", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1543" = type { %"class.WTF::Vector.1546" }
%"class.WTF::Vector.1546" = type { %"class.WTF::VectorBuffer.1547" }
%"class.WTF::VectorBuffer.1547" = type { %"class.WTF::VectorBufferBase.1548" }
%"class.WTF::VectorBufferBase.1548" = type { %"class.blink::Member.1549"*, i32, i32 }
%"class.blink::Member.1549" = type opaque
%"class.std::__1::unique_ptr.1551" = type { %"class.std::__1::__compressed_pair.1552" }
%"class.std::__1::__compressed_pair.1552" = type { %"struct.std::__1::__compressed_pair_elem.1553" }
%"struct.std::__1::__compressed_pair_elem.1553" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1557" = type { %"class.WTF::HashSet.1560" }
%"class.WTF::HashSet.1560" = type { %"class.WTF::HashTable.1561" }
%"class.WTF::HashTable.1561" = type <{ %"class.blink::WeakMember.1563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1563" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1564", i32, [4 x i8] }>
%"class.WTF::Vector.1564" = type { %"class.WTF::VectorBuffer.1565" }
%"class.WTF::VectorBuffer.1565" = type { %"class.WTF::VectorBufferBase.1566" }
%"class.WTF::VectorBufferBase.1566" = type { %"struct.std::__1::pair.1567"*, i32, i32 }
%"struct.std::__1::pair.1567" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1572" = type { %"class.WTF::VectorBuffer.1573" }
%"class.WTF::VectorBuffer.1573" = type { %"class.WTF::VectorBufferBase.1574" }
%"class.WTF::VectorBufferBase.1574" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1577" = type { %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.1579" }
%"struct.std::__1::__compressed_pair_elem.1579" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.46" }
%"class.WTF::Vector.46" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48" }
%"class.WTF::VectorBufferBase.48" = type { %"class.blink::Member.42"*, i32, i32 }
%"class.blink::HeapVector.1583" = type { %"class.WTF::Vector.1586" }
%"class.WTF::Vector.1586" = type { %"class.WTF::VectorBuffer.1587" }
%"class.WTF::VectorBuffer.1587" = type { %"class.WTF::VectorBufferBase.1588" }
%"class.WTF::VectorBufferBase.1588" = type { %"class.blink::Member.1589"*, i32, i32 }
%"class.blink::Member.1589" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.29" }
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1601" = type { %"class.WTF::HashTable.1602" }
%"class.WTF::HashTable.1602" = type <{ %"struct.WTF::KeyValuePair.1605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1605" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1491", { i64, i64 } }
%"class.blink::HeapHashSet.1614" = type { %"class.WTF::HashSet.1617" }
%"class.WTF::HashSet.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"class.blink::Member.1620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1620" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", i32, [4 x i8], %"class.WTF::HashMap.1640", %"class.WTF::HashMap.1640", %"class.WTF::HashMap.1640", %"class.WTF::HashMap.1640", %"class.WTF::HashMap.1640", %"class.WTF::HashMap.1640", %"class.WTF::HashMap.1640", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1640" = type { %"class.WTF::HashTable.1641" }
%"class.WTF::HashTable.1641" = type <{ %"struct.WTF::KeyValuePair.1644"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1644" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1656" = type { %"class.WTF::HashMap.1659" }
%"class.WTF::HashMap.1659" = type { %"class.WTF::HashTable.1660" }
%"class.WTF::HashTable.1660" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1665" = type { %"class.std::__1::__compressed_pair.1666" }
%"class.std::__1::__compressed_pair.1666" = type { %"struct.std::__1::__compressed_pair_elem.1667" }
%"struct.std::__1::__compressed_pair_elem.1667" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1675" = type { %"class.WTF::HashMap.1678" }
%"class.WTF::HashMap.1678" = type { %"class.WTF::HashTable.1679" }
%"class.WTF::HashTable.1679" = type <{ %"struct.WTF::KeyValuePair.1681"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1681" = type opaque
%"class.blink::HeapObserverSet.1682" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1683" }
%"class.blink::HeapHashSet.1683" = type { %"class.WTF::HashSet.1686" }
%"class.WTF::HashSet.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ %"class.blink::WeakMember.1689"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1689" = type opaque
%"class.blink::Member.1690" = type { %"class.blink::MemberBase.1691" }
%"class.blink::MemberBase.1691" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.29", %"class.blink::HeapHashSet.1699", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1706", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1699" = type { %"class.WTF::HashSet.1702" }
%"class.WTF::HashSet.1702" = type { %"class.WTF::HashTable.1703" }
%"class.WTF::HashTable.1703" = type <{ %"class.blink::Member.1705"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1705" = type opaque
%"class.blink::HeapTaskRunnerTimer.1706" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1707", { i64, i64 } }
%"class.blink::WeakMember.1707" = type { %"class.blink::MemberBase.1693" }
%"class.blink::WeakMember.1694" = type { %"class.blink::MemberBase.7" }
%"class.blink::Member.1695" = type { %"class.blink::MemberBase.1696" }
%"class.blink::MemberBase.1696" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.38" }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.42", i32, %"class.blink::HeapVector" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.56" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::HeapHashMap.58"* }
%"class.blink::HeapHashMap.58" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.61" = type { %"class.WTF::Vector.64" }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::Member.67"*, i32, i32 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::StyleChange" = type { %"class.WTF::String", i8, i8, i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.2499" }
%"class.blink::HeapVector.2499" = type { %"class.WTF::Vector.2502" }
%"class.WTF::Vector.2502" = type { %"class.WTF::VectorBuffer.2503" }
%"class.WTF::VectorBuffer.2503" = type { %"class.WTF::VectorBufferBase.2504", [32 x i8] }
%"class.WTF::VectorBufferBase.2504" = type { %"class.blink::Member.1834"*, i32, i32 }
%"class.blink::HTMLSpanElement" = type { %"class.blink::HTMLElement" }
%"class.blink::CSSComputedStyleDeclaration" = type <{ %"class.blink::CSSStyleDeclaration", %"class.blink::Member.6", i8, [7 x i8], %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2644", %"class.blink::Member.2646", %"class.blink::Member.2648", %"class.blink::Member.2667", %"class.blink::Member.2669" }
%"class.blink::Member.2644" = type { %"class.blink::MemberBase.2645" }
%"class.blink::MemberBase.2645" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.637 }
%"class.blink::Member.2646" = type { %"class.blink::MemberBase.2647" }
%"class.blink::MemberBase.2647" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2648" = type { %"class.blink::MemberBase.2649" }
%"class.blink::MemberBase.2649" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2652", %"class.blink::HeapHashSet.2661" }
%"class.blink::HeapVector.2652" = type { %"class.WTF::Vector.2655" }
%"class.WTF::Vector.2655" = type { %"class.WTF::VectorBuffer.2656" }
%"class.WTF::VectorBuffer.2656" = type { %"class.WTF::VectorBufferBase.2657" }
%"class.WTF::VectorBufferBase.2657" = type { %"class.blink::Member.2658"*, i32, i32 }
%"class.blink::Member.2658" = type { %"class.blink::MemberBase.2659" }
%"class.blink::MemberBase.2659" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2661" = type { %"class.WTF::HashSet.2664" }
%"class.WTF::HashSet.2664" = type { %"class.WTF::HashTable.2665" }
%"class.WTF::HashTable.2665" = type <{ %"class.blink::Member.2658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2667" = type { %"class.blink::MemberBase.2668" }
%"class.blink::MemberBase.2668" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2669" = type { %"class.blink::MemberBase.2670" }
%"class.blink::MemberBase.2670" = type { %"class.blink::HeapHashSet.2671"* }
%"class.blink::HeapHashSet.2671" = type opaque
%"class.blink::HeapVector.2512" = type { %"class.WTF::Vector.2515" }
%"class.WTF::Vector.2515" = type { %"class.WTF::VectorBuffer.2516" }
%"class.WTF::VectorBuffer.2516" = type { %"class.WTF::VectorBufferBase.2517" }
%"class.WTF::VectorBufferBase.2517" = type { %"class.blink::Member.2518"*, i32, i32 }
%"class.blink::Member.2518" = type { %"class.blink::MemberBase.2519" }
%"class.blink::MemberBase.2519" = type { %"class.blink::HTMLElementEquivalent"* }
%"class.blink::PersistentBase.2678" = type { %"class.blink::HeapVector.2512"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::HeapVector.2521" = type { %"class.WTF::Vector.2524" }
%"class.WTF::Vector.2524" = type { %"class.WTF::VectorBuffer.2525" }
%"class.WTF::VectorBuffer.2525" = type { %"class.WTF::VectorBufferBase.2526" }
%"class.WTF::VectorBufferBase.2526" = type { %"class.blink::Member.2527"*, i32, i32 }
%"class.blink::Member.2527" = type { %"class.blink::MemberBase.2528" }
%"class.blink::MemberBase.2528" = type { %"class.blink::HTMLAttributeEquivalent"* }
%"class.blink::PersistentBase.2711" = type { %"class.blink::HeapVector.2521"*, %"class.blink::PersistentNodePtr.912" }
%"class.WTF::Vector.2530" = type { %"class.WTF::VectorBuffer.2531" }
%"class.WTF::VectorBuffer.2531" = type { %"class.WTF::VectorBufferBase.2532" }
%"class.WTF::VectorBufferBase.2532" = type { %"class.blink::QualifiedName"*, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.20", %"class.WTF::Vector.2724" }
%"class.WTF::Vector.2724" = type { %"class.WTF::VectorBuffer.2725" }
%"class.WTF::VectorBuffer.2725" = type { %"class.WTF::VectorBufferBase.2726", [64 x i8] }
%"class.WTF::VectorBufferBase.2726" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::PersistentBase.2538" = type { %"class.blink::CSSIdentifierValue"*, %"class.blink::PersistentNodePtr.912" }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.29", %class.scoped_refptr.637, %"class.blink::SelectorFilter", %"class.blink::Member.2812", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.2787" }
%"class.blink::HeapHashMap.2787" = type { %"class.WTF::HashMap.2790" }
%"class.WTF::HashMap.2790" = type { %"class.WTF::HashTable.2791" }
%"class.WTF::HashTable.2791" = type <{ %"struct.WTF::KeyValuePair.2793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2793" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.2794", %"class.std::__1::unique_ptr.2806" }
%"class.blink::HeapVector.2794" = type { %"class.WTF::Vector.2797" }
%"class.WTF::Vector.2797" = type { %"class.WTF::VectorBuffer.2798" }
%"class.WTF::VectorBuffer.2798" = type { %"class.WTF::VectorBufferBase.2799" }
%"class.WTF::VectorBufferBase.2799" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.42", %"class.WTF::Vector.2800" }
%"class.WTF::Vector.2800" = type { %"class.WTF::VectorBuffer.2801" }
%"class.WTF::VectorBuffer.2801" = type { %"class.WTF::VectorBufferBase.2802", [16 x i8] }
%"class.WTF::VectorBufferBase.2802" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.2806" = type { %"class.std::__1::__compressed_pair.2807" }
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.2808" }
%"struct.std::__1::__compressed_pair_elem.2808" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.2812" = type { %"class.blink::MemberBase.2813" }
%"class.blink::MemberBase.2813" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapVector.2753" = type { %"class.WTF::Vector.2756" }
%"class.WTF::Vector.2756" = type { %"class.WTF::VectorBuffer.2757" }
%"class.WTF::VectorBuffer.2757" = type { %"class.WTF::VectorBufferBase.2758" }
%"class.WTF::VectorBufferBase.2758" = type { %"class.blink::Member.2759"*, i32, i32 }
%"class.blink::Member.2759" = type { %"class.blink::MemberBase.2760" }
%"class.blink::MemberBase.2760" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.20", %"class.blink::Member.2780" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.2780" = type { %"class.blink::MemberBase.2781" }
%"class.blink::MemberBase.2781" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.2716" = type { i8 }
%"class.blink::HeapVectorBacking.2749" = type { i8 }

$_ZNK5blink21HTMLElementEquivalent7MatchesEPKNS_7ElementE = comdat any

$_ZNK5blink21HTMLElementEquivalent12HasAttributeEv = comdat any

$_ZNK5blink21HTMLElementEquivalent21PropertyExistsInStyleEPKNS_19CSSPropertyValueSetE = comdat any

$_ZNK5blink21HTMLElementEquivalent5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink28HTMLTextDecorationEquivalent5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink23HTMLAttributeEquivalent7MatchesEPKNS_7ElementE = comdat any

$_ZNK5blink23HTMLAttributeEquivalent12HasAttributeEv = comdat any

$_ZNK5blink23HTMLAttributeEquivalent5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink22HTMLFontSizeEquivalent5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21HTMLElementEquivalentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21HTMLElementEquivalentEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm = comdat any

$_ZN5blink9NameTraitINS_21HTMLElementEquivalentEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23HTMLAttributeEquivalentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23HTMLAttributeEquivalentEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_22HTMLFontSizeEquivalentEEEvOT_ = comdat any

$_ZN3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18CSSIdentifierValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_18CSSIdentifierValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_9StyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11CSSPropertyEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm = comdat any

$_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink13QualifiedNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13QualifiedNameEEEmm = comdat any

$_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21HTMLElementEquivalentEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21HTMLElementEquivalentEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink21HTMLElementEquivalentE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)* @_ZNK5blink21HTMLElementEquivalent7MatchesEPKNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*)* @_ZNK5blink21HTMLElementEquivalent12HasAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink21HTMLElementEquivalent21PropertyExistsInStyleEPKNS_19CSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink21HTMLElementEquivalent21ValueIsPresentInStyleEPNS_11HTMLElementEPNS_19CSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)* @_ZNK5blink21HTMLElementEquivalent10AddToStyleEPNS_7ElementEPNS_12EditingStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)* @_ZNK5blink21HTMLElementEquivalent5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink28HTMLTextDecorationEquivalentE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)* @_ZNK5blink21HTMLElementEquivalent7MatchesEPKNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*)* @_ZNK5blink21HTMLElementEquivalent12HasAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextDecorationEquivalent"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink28HTMLTextDecorationEquivalent21PropertyExistsInStyleEPKNS_19CSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextDecorationEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink28HTMLTextDecorationEquivalent21ValueIsPresentInStyleEPNS_11HTMLElementEPNS_19CSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)* @_ZNK5blink21HTMLElementEquivalent10AddToStyleEPNS_7ElementEPNS_12EditingStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLTextDecorationEquivalent"*, %"class.blink::Visitor"*)* @_ZNK5blink28HTMLTextDecorationEquivalent5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink23HTMLAttributeEquivalentE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)* @_ZNK5blink23HTMLAttributeEquivalent7MatchesEPKNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAttributeEquivalent"*)* @_ZNK5blink23HTMLAttributeEquivalent12HasAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink21HTMLElementEquivalent21PropertyExistsInStyleEPKNS_19CSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink23HTMLAttributeEquivalent21ValueIsPresentInStyleEPNS_11HTMLElementEPNS_19CSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)* @_ZNK5blink23HTMLAttributeEquivalent10AddToStyleEPNS_7ElementEPNS_12EditingStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)* @_ZNK5blink23HTMLAttributeEquivalent5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)* @_ZNK5blink23HTMLAttributeEquivalent24AttributeValueAsCSSValueEPNS_7ElementE to i8*)] }, align 8
@_ZN5blink10html_names8kFontTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kSizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink22HTMLFontSizeEquivalentE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)* @_ZNK5blink23HTMLAttributeEquivalent7MatchesEPKNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAttributeEquivalent"*)* @_ZNK5blink23HTMLAttributeEquivalent12HasAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink21HTMLElementEquivalent21PropertyExistsInStyleEPKNS_19CSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)* @_ZNK5blink23HTMLAttributeEquivalent21ValueIsPresentInStyleEPNS_11HTMLElementEPNS_19CSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)* @_ZNK5blink23HTMLAttributeEquivalent10AddToStyleEPNS_7ElementEPNS_12EditingStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLFontSizeEquivalent"*, %"class.blink::Visitor"*)* @_ZNK5blink22HTMLFontSizeEquivalent5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::HTMLFontSizeEquivalent"*, %"class.blink::Element"*)* @_ZNK5blink22HTMLFontSizeEquivalent24AttributeValueAsCSSValueEPNS_7ElementE to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties = internal global [6 x %"class.blink::CSSProperty"*] zeroinitializer, align 16
@_ZGVZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties = internal global i64 0, align 8
@_ZN5blink10html_names8kDirAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline = internal global i64 0, align 8
@_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties = internal global %"class.WTF::StaticSingleton.2639" zeroinitializer, align 8
@_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties = internal global i64 0, align 8
@_ZN5blinkL22kStaticBlockPropertiesE = internal constant [22 x i32] [i32 103, i32 104, i32 105, i32 255, i32 497, i32 117, i32 119, i32 120, i32 121, i32 122, i32 517, i32 516, i32 518, i32 124, i32 502, i32 503, i32 504, i32 349, i32 350, i32 358, i32 359, i32 437], align 16
@_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents = internal global %"class.WTF::StaticSingleton.2672" zeroinitializer, align 8
@_ZGVZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents = internal global i64 0, align 8
@_ZN5blink10html_names5kBTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrongTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kSubTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kSupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kITagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kEmTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kUTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kSTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrikeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_21HTMLElementEquivalentEEELj0EEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::HTMLElementEquivalent>, 0>]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.5 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21HTMLElementEquivalentEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [183 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLElementEquivalent>, WTF::VectorTraits<blink::Member<blink::HTMLElementEquivalent> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21HTMLElementEquivalentEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLElementEquivalent]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21HTMLElementEquivalentEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21HTMLElementEquivalentEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21HTMLElementEquivalentEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21HTMLElementEquivalentEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents = internal global %"class.WTF::StaticSingleton.2705" zeroinitializer, align 8
@_ZGVZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents = internal global i64 0, align 8
@_ZN5blink10html_names10kColorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kFaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_23HTMLAttributeEquivalentEEELj0EEEEEPKcv = private unnamed_addr constant [115 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::HTMLAttributeEquivalent>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23HTMLAttributeEquivalentEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [187 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLAttributeEquivalent>, WTF::VectorTraits<blink::Member<blink::HTMLAttributeEquivalent> > >]\00", align 1
@_ZZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties = internal unnamed_addr global %"class.WTF::Vector.2507"* null, align 8
@_ZGVZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties = internal global i64 0, align 8
@_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties = internal global %"class.WTF::StaticSingleton.2639" zeroinitializer, align 8
@_ZGVZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties = internal global i64 0, align 8
@_ZN5blinkL24kStaticEditingPropertiesE = internal constant [23 x i32] [i32 52, i32 2, i32 4, i32 8, i32 11, i32 14, i32 12, i32 17, i32 207, i32 255, i32 349, i32 514, i32 354, i32 358, i32 363, i32 436, i32 437, i32 441, i32 423, i32 427, i32 429, i32 430, i32 108], align 16
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline = internal global i64 0, align 8
@_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through = internal global i64 0, align 8
@.str.14 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11CSSPropertyEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::CSSProperty *]\00", align 1
@_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal unnamed_addr global %"class.WTF::StaticSingleton.2818" zeroinitializer, align 2
@_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal global i64 0, align 8
@.str.16 = private unnamed_addr constant [63 x i8] c"../../third_party/blink/renderer/core/editing/editing_style.cc\00", align 1
@.str.17 = private unnamed_addr constant [47 x i8] c"To<CSSPrimitiveValue>(font_weight)->IsNumber()\00", align 1
@_ZN5blink10html_names8kSpanTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyValueSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties = internal global %"class.WTF::StaticSingleton.2639" zeroinitializer, align 8
@_ZGVZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12EditingStyleEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EditingStyle]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyID]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::QualifiedName]\00", align 1

@_ZN5blink21HTMLElementEquivalentC1ENS_13CSSPropertyIDE = hidden unnamed_addr alias void (%"class.blink::HTMLElementEquivalent"*, i32), void (%"class.blink::HTMLElementEquivalent"*, i32)* @_ZN5blink21HTMLElementEquivalentC2ENS_13CSSPropertyIDE
@_ZN5blink21HTMLElementEquivalentC1ENS_13CSSPropertyIDERKNS_17HTMLQualifiedNameE = hidden unnamed_addr alias void (%"class.blink::HTMLElementEquivalent"*, i32, %"class.blink::HTMLQualifiedName"*), void (%"class.blink::HTMLElementEquivalent"*, i32, %"class.blink::HTMLQualifiedName"*)* @_ZN5blink21HTMLElementEquivalentC2ENS_13CSSPropertyIDERKNS_17HTMLQualifiedNameE
@_ZN5blink21HTMLElementEquivalentC1ENS_13CSSPropertyIDENS_10CSSValueIDERKNS_17HTMLQualifiedNameE = hidden unnamed_addr alias void (%"class.blink::HTMLElementEquivalent"*, i32, i32, %"class.blink::HTMLQualifiedName"*), void (%"class.blink::HTMLElementEquivalent"*, i32, i32, %"class.blink::HTMLQualifiedName"*)* @_ZN5blink21HTMLElementEquivalentC2ENS_13CSSPropertyIDENS_10CSSValueIDERKNS_17HTMLQualifiedNameE
@_ZN5blink28HTMLTextDecorationEquivalentC1ENS_10CSSValueIDERKNS_17HTMLQualifiedNameE = hidden unnamed_addr alias void (%"class.blink::HTMLTextDecorationEquivalent"*, i32, %"class.blink::HTMLQualifiedName"*), void (%"class.blink::HTMLTextDecorationEquivalent"*, i32, %"class.blink::HTMLQualifiedName"*)* @_ZN5blink28HTMLTextDecorationEquivalentC2ENS_10CSSValueIDERKNS_17HTMLQualifiedNameE
@_ZN5blink23HTMLAttributeEquivalentC1ENS_13CSSPropertyIDERKNS_17HTMLQualifiedNameERKNS_13QualifiedNameE = hidden unnamed_addr alias void (%"class.blink::HTMLAttributeEquivalent"*, i32, %"class.blink::HTMLQualifiedName"*, %"class.blink::QualifiedName"*), void (%"class.blink::HTMLAttributeEquivalent"*, i32, %"class.blink::HTMLQualifiedName"*, %"class.blink::QualifiedName"*)* @_ZN5blink23HTMLAttributeEquivalentC2ENS_13CSSPropertyIDERKNS_17HTMLQualifiedNameERKNS_13QualifiedNameE
@_ZN5blink23HTMLAttributeEquivalentC1ENS_13CSSPropertyIDERKNS_13QualifiedNameE = hidden unnamed_addr alias void (%"class.blink::HTMLAttributeEquivalent"*, i32, %"class.blink::QualifiedName"*), void (%"class.blink::HTMLAttributeEquivalent"*, i32, %"class.blink::QualifiedName"*)* @_ZN5blink23HTMLAttributeEquivalentC2ENS_13CSSPropertyIDERKNS_13QualifiedNameE
@_ZN5blink22HTMLFontSizeEquivalentC1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLFontSizeEquivalent"*), void (%"class.blink::HTMLFontSizeEquivalent"*)* @_ZN5blink22HTMLFontSizeEquivalentC2Ev
@_ZN5blink12EditingStyleC1EPNS_13ContainerNodeENS0_19PropertiesToIncludeE = hidden unnamed_addr alias void (%"class.blink::EditingStyle"*, %"class.blink::ContainerNode"*, i32), void (%"class.blink::EditingStyle"*, %"class.blink::ContainerNode"*, i32)* @_ZN5blink12EditingStyleC2EPNS_13ContainerNodeENS0_19PropertiesToIncludeE
@_ZN5blink12EditingStyleC1ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS0_19PropertiesToIncludeE = hidden unnamed_addr alias void (%"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"*, i32), void (%"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"*, i32)* @_ZN5blink12EditingStyleC2ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS0_19PropertiesToIncludeE
@_ZN5blink12EditingStyleC1EPKNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::EditingStyle"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::EditingStyle"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink12EditingStyleC2EPKNS_19CSSPropertyValueSetE
@_ZN5blink12EditingStyleC1ENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeE = hidden unnamed_addr alias void (%"class.blink::EditingStyle"*, i32, %"class.WTF::String"*, i32), void (%"class.blink::EditingStyle"*, i32, %"class.WTF::String"*, i32)* @_ZN5blink12EditingStyleC2ENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeE
@_ZN5blink11StyleChangeC1EPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE = hidden unnamed_addr alias void (%"class.blink::StyleChange"*, %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"*), void (%"class.blink::StyleChange"*, %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"*)* @_ZN5blink11StyleChangeC2EPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21HTMLElementEquivalentC2ENS_13CSSPropertyIDE(%"class.blink::HTMLElementEquivalent"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.blink::CSSIdentifierValue"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21HTMLElementEquivalentC2ENS_13CSSPropertyIDERKNS_17HTMLQualifiedNameE(%"class.blink::HTMLElementEquivalent"* nocapture, i32, %"class.blink::HTMLQualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSIdentifierValue"* null, %"class.blink::CSSIdentifierValue"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 3
  store %"class.blink::HTMLQualifiedName"* %2, %"class.blink::HTMLQualifiedName"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLElementEquivalentC2ENS_13CSSPropertyIDENS_10CSSValueIDERKNS_17HTMLQualifiedNameE(%"class.blink::HTMLElementEquivalent"* nocapture, i32, i32, %"class.blink::HTMLQualifiedName"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %2) #12
  %8 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSIdentifierValue"* %7, %"class.blink::CSSIdentifierValue"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 3
  store %"class.blink::HTMLQualifiedName"* %3, %"class.blink::HTMLQualifiedName"** %9, align 8
  ret void
}

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21HTMLElementEquivalent21ValueIsPresentInStyleEPNS_11HTMLElementEPNS_19CSSPropertyValueSetE(%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 %5) #12
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0
  %8 = bitcast %"class.blink::HTMLElementEquivalent"* %0 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)***
  %9 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*** %8, align 8
  %10 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::HTMLElementEquivalent"* %0, %"class.blink::Element"* %7) #12
  %12 = xor i1 %11, true
  %13 = icmp eq %"class.blink::CSSValue"* %6, null
  %14 = or i1 %13, %12
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %6, i64 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %6, i64 1, i32 1
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %22, %26
  br label %28

28:                                               ; preds = %15, %3, %19
  %29 = phi i1 [ false, %3 ], [ %27, %19 ], [ false, %15 ]
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21HTMLElementEquivalent10AddToStyleEPNS_7ElementEPNS_12EditingStyleE(%"class.blink::HTMLElementEquivalent"* nocapture readonly, %"class.blink::Element"*, %"class.blink::EditingStyle"* nocapture) unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %9, i64 0, i32 0
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %10) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %15 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %15, i64 10
  %17 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %16, align 8
  %18 = tail call %"class.blink::ExecutionContext"* %17(%"class.blink::Node"* %13) #12
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %18, i64 0, i32 6, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %21, align 8
  %23 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %22, null
  br i1 %23, label %24, label %38

24:                                               ; preds = %3
  %25 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %26 = bitcast i8* %25 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %26, i8 zeroext 1) #12
  %27 = getelementptr inbounds i8, i8* %25, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = ptrtoint i8* %25 to i64
  %32 = bitcast %"class.blink::EditingStyle"* %2 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %24
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #12
  %37 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %21, align 8
  br label %38

38:                                               ; preds = %3, %24, %35
  %39 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %22, %3 ], [ %37, %35 ], [ %26, %24 ]
  %40 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %39, i32 %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext false, i32 %20, %"class.blink::StyleSheetContents"* null) #12
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #12
  br label %56

56:                                               ; preds = %38, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeE(%"class.blink::EditingStyle"* nocapture, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  %8 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %7, null
  br i1 %8, label %9, label %24

9:                                                ; preds = %5
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %11 = bitcast i8* %10 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %11, i8 zeroext 1) #12
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = ptrtoint i8* %10 to i64
  %17 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast i8* %10 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %19, label %24, label %21

21:                                               ; preds = %9
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #12
  %23 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  br label %24

24:                                               ; preds = %5, %21, %9
  %25 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %7, %5 ], [ %23, %21 ], [ %20, %9 ]
  %26 = tail call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %25, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext %3, i32 %4, %"class.blink::StyleSheetContents"* null) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28HTMLTextDecorationEquivalentC2ENS_10CSSValueIDERKNS_17HTMLQualifiedNameE(%"class.blink::HTMLTextDecorationEquivalent"* nocapture, i32, %"class.blink::HTMLQualifiedName"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLTextDecorationEquivalent", %"class.blink::HTMLTextDecorationEquivalent"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTextDecorationEquivalent", %"class.blink::HTMLTextDecorationEquivalent"* %0, i64 0, i32 0, i32 1
  store i32 354, i32* %5, align 8
  %6 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %1) #12
  %7 = getelementptr inbounds %"class.blink::HTMLTextDecorationEquivalent", %"class.blink::HTMLTextDecorationEquivalent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSIdentifierValue"* %6, %"class.blink::CSSIdentifierValue"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLTextDecorationEquivalent", %"class.blink::HTMLTextDecorationEquivalent"* %0, i64 0, i32 0, i32 3
  store %"class.blink::HTMLQualifiedName"* %2, %"class.blink::HTMLQualifiedName"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink28HTMLTextDecorationEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink28HTMLTextDecorationEquivalent21PropertyExistsInStyleEPKNS_19CSSPropertyValueSetE(%"class.blink::HTMLTextDecorationEquivalent"* nocapture readnone, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #1 align 2 {
  %3 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %1, i32 423) #12
  %4 = icmp eq %"class.blink::CSSValue"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %1, i32 354) #12
  %7 = icmp ne %"class.blink::CSSValue"* %6, null
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i1 [ true, %2 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink28HTMLTextDecorationEquivalent21ValueIsPresentInStyleEPNS_11HTMLElementEPNS_19CSSPropertyValueSetE(%"class.blink::HTMLTextDecorationEquivalent"* nocapture readonly, %"class.blink::HTMLElement"* readonly, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #1 align 2 {
  %4 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 423) #12
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 354) #12
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi %"class.blink::CSSValue"* [ %4, %3 ], [ %7, %6 ]
  %10 = getelementptr inbounds %"class.blink::HTMLTextDecorationEquivalent", %"class.blink::HTMLTextDecorationEquivalent"* %0, i64 0, i32 0, i32 3
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** %10, align 8
  %12 = icmp eq %"class.blink::HTMLQualifiedName"* %11, null
  br i1 %12, label %34, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = icmp eq %"class.blink::HTMLElement"* %1, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 48
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %46

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.6"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp ne %"class.WTF::StringImpl"* %28, %30
  %32 = icmp eq %"class.blink::CSSValue"* %9, null
  %33 = or i1 %32, %31
  br i1 %33, label %46, label %36

34:                                               ; preds = %8
  %35 = icmp eq %"class.blink::CSSValue"* %9, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %21, %34
  %37 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %9, i64 0, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = icmp ult i8 %38, 52
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::CSSValue"* %9 to %"class.blink::CSSValueList"*
  %42 = getelementptr inbounds %"class.blink::HTMLTextDecorationEquivalent", %"class.blink::HTMLTextDecorationEquivalent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %43, i64 0, i32 0
  %45 = tail call zeroext i1 @_ZNK5blink12CSSValueList8HasValueERKNS_8CSSValueE(%"class.blink::CSSValueList"* nonnull %41, %"class.blink::CSSValue"* dereferenceable(3) %44) #12
  br label %46

46:                                               ; preds = %36, %21, %34, %13, %16, %40
  %47 = phi i1 [ false, %21 ], [ %45, %40 ], [ false, %16 ], [ false, %13 ], [ false, %36 ], [ false, %34 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLElementEquivalent7MatchesEPKNS_7ElementE(%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 3
  %4 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLQualifiedName"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::Element"* %1, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.6"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br label %25

25:                                               ; preds = %14, %9, %6, %2
  %26 = phi i1 [ true, %2 ], [ %24, %14 ], [ false, %9 ], [ false, %6 ]
  ret i1 %26
}

declare zeroext i1 @_ZNK5blink12CSSValueList8HasValueERKNS_8CSSValueE(%"class.blink::CSSValueList"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink23HTMLAttributeEquivalentC2ENS_13CSSPropertyIDERKNS_17HTMLQualifiedNameERKNS_13QualifiedNameE(%"class.blink::HTMLAttributeEquivalent"* nocapture, i32, %"class.blink::HTMLQualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSIdentifierValue"* null, %"class.blink::CSSIdentifierValue"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 3
  store %"class.blink::HTMLQualifiedName"* %2, %"class.blink::HTMLQualifiedName"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23HTMLAttributeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 1
  store %"class.blink::QualifiedName"* %3, %"class.blink::QualifiedName"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23HTMLAttributeEquivalentC2ENS_13CSSPropertyIDERKNS_13QualifiedNameE(%"class.blink::HTMLAttributeEquivalent"* nocapture, i32, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.blink::CSSIdentifierValue"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23HTMLAttributeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 1
  store %"class.blink::QualifiedName"* %2, %"class.blink::QualifiedName"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23HTMLAttributeEquivalent21ValueIsPresentInStyleEPNS_11HTMLElementEPNS_19CSSPropertyValueSetE(%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0
  %5 = bitcast %"class.blink::HTMLAttributeEquivalent"* %0 to %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)***
  %6 = load %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)**, %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*, %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)** %6, i64 6
  %8 = load %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*, %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)** %7, align 8
  %9 = tail call %"class.blink::CSSValue"* %8(%"class.blink::HTMLAttributeEquivalent"* %0, %"class.blink::Element"* %4) #12
  %10 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 %11) #12
  %13 = icmp eq %"class.blink::CSSValue"* %9, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %3
  %15 = icmp ne %"class.blink::CSSValue"* %9, null
  %16 = icmp ne %"class.blink::CSSValue"* %12, null
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %9, %"class.blink::CSSValue"* nonnull dereferenceable(3) %12) #12
  br label %20

20:                                               ; preds = %3, %14, %18
  %21 = phi i1 [ %19, %18 ], [ true, %3 ], [ false, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23HTMLAttributeEquivalent10AddToStyleEPNS_7ElementEPNS_12EditingStyleE(%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"* nocapture) unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.blink::HTMLAttributeEquivalent"* %0 to %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)***
  %6 = load %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)**, %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*, %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)** %6, i64 6
  %8 = load %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*, %"class.blink::CSSValue"* (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)** %7, align 8
  %9 = tail call %"class.blink::CSSValue"* %8(%"class.blink::HTMLAttributeEquivalent"* %0, %"class.blink::Element"* %1) #12
  %10 = icmp eq %"class.blink::CSSValue"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %9) #12
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %18 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %19 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %19, i64 10
  %21 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %20, align 8
  %22 = tail call %"class.blink::ExecutionContext"* %21(%"class.blink::Node"* %17) #12
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %22, i64 0, i32 6, i32 11
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %2, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %25, align 8
  %27 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %26, null
  br i1 %27, label %28, label %42

28:                                               ; preds = %11
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %30 = bitcast i8* %29 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %30, i8 zeroext 1) #12
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = ptrtoint i8* %29 to i64
  %36 = bitcast %"class.blink::EditingStyle"* %2 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %28
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #12
  %41 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %25, align 8
  br label %42

42:                                               ; preds = %11, %28, %39
  %43 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %26, %11 ], [ %41, %39 ], [ %30, %28 ]
  %44 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %43, i32 %13, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext false, i32 %24, %"class.blink::StyleSheetContents"* null) #12
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #12
  br label %60

60:                                               ; preds = %42, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %61

61:                                               ; preds = %3, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink23HTMLAttributeEquivalent24AttributeValueAsCSSValueEPNS_7ElementE(%"class.blink::HTMLAttributeEquivalent"* nocapture readonly, %"class.blink::Element"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 1
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %4) #12
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %11 = bitcast i8* %10 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %11, i8 zeroext 1) #12
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %21 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %21, i64 10
  %23 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %22, align 8
  %24 = tail call %"class.blink::ExecutionContext"* %23(%"class.blink::Node"* %19) #12
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 0, i32 6, i32 11
  %26 = load i32, i32* %25, align 8
  %27 = tail call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %11, i32 %17, %"class.WTF::String"* dereferenceable(8) %18, i1 zeroext false, i32 %26, %"class.blink::StyleSheetContents"* null) #12
  %28 = bitcast i8* %10 to %"class.blink::CSSPropertyValueSet"*
  %29 = load i32, i32* %16, align 8
  %30 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %28, i32 %29) #12
  br label %31

31:                                               ; preds = %2, %9
  %32 = phi %"class.blink::CSSValue"* [ %30, %9 ], [ null, %2 ]
  ret %"class.blink::CSSValue"* %32
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22HTMLFontSizeEquivalentC2Ev(%"class.blink::HTMLFontSizeEquivalent"* nocapture) unnamed_addr #0 align 2 {
  %2 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE to i64*), align 8
  %3 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE to i64*), align 8
  %4 = getelementptr inbounds %"class.blink::HTMLFontSizeEquivalent", %"class.blink::HTMLFontSizeEquivalent"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLFontSizeEquivalent", %"class.blink::HTMLFontSizeEquivalent"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLFontSizeEquivalent", %"class.blink::HTMLFontSizeEquivalent"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSIdentifierValue"* null, %"class.blink::CSSIdentifierValue"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLFontSizeEquivalent", %"class.blink::HTMLFontSizeEquivalent"* %0, i64 0, i32 0, i32 0, i32 3
  %8 = bitcast %"class.blink::HTMLQualifiedName"** %7 to i64*
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLFontSizeEquivalent", %"class.blink::HTMLFontSizeEquivalent"* %0, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::QualifiedName"** %9 to i64*
  store i64 %3, i64* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink22HTMLFontSizeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink22HTMLFontSizeEquivalent24AttributeValueAsCSSValueEPNS_7ElementE(%"class.blink::HTMLFontSizeEquivalent"* nocapture readonly, %"class.blink::Element"*) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::HTMLFontSizeEquivalent", %"class.blink::HTMLFontSizeEquivalent"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %5) #12
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  store i32 -1431655766, i32* %3, align 4
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0
  %13 = call zeroext i1 @_ZN5blink15HTMLFontElement26CssValueFromFontSizeNumberERKN3WTF6StringERNS_10CSSValueIDE(%"class.WTF::String"* dereferenceable(8) %12, i32* nonnull dereferenceable(4) %3) #12
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = load i32, i32* %3, align 4
  %16 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %15) #12
  %17 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %16, i64 0, i32 0
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi %"class.blink::CSSValue"* [ %17, %14 ], [ null, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  br label %20

20:                                               ; preds = %2, %18
  %21 = phi %"class.blink::CSSValue"* [ %19, %18 ], [ null, %2 ]
  ret %"class.blink::CSSValue"* %21
}

declare zeroext i1 @_ZN5blink15HTMLFontElement26CssValueFromFontSizeNumberERKN3WTF6StringERNS_10CSSValueIDE(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyleC2EPNS_13ContainerNodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* nocapture, %"class.blink::ContainerNode"*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 5
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %7 = bitcast %"class.blink::EditingStyle"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 17, i1 false)
  tail call void @_ZN5blink12EditingStyle4InitEPNS_4NodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %0, %"class.blink::Node"* %6, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle4InitEPNS_4NodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* nocapture, %"class.blink::Node"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = tail call zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"* %1) #12
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = tail call %"class.blink::HTMLSpanElement"* @_ZN5blink14TabSpanElementEPKNS_4NodeE(%"class.blink::Node"* %1) #12
  %12 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %15

13:                                               ; preds = %3
  %14 = tail call zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* %1) #12
  br i1 %14, label %15, label %19

15:                                               ; preds = %13, %10
  %16 = phi %"class.blink::Node"* [ %12, %10 ], [ %1, %13 ]
  %17 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %16) #12
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0
  br label %19

19:                                               ; preds = %15, %13
  %20 = phi %"class.blink::Node"* [ %1, %13 ], [ %18, %15 ]
  %21 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 1
  %22 = ptrtoint %"class.blink::Node"* %20 to i64
  %23 = bitcast %"class.blink::Member.6"* %21 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.blink::Node"* %20 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #12
  br label %29

29:                                               ; preds = %19, %26
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %31 = bitcast i8* %30 to %"class.blink::CSSComputedStyleDeclaration"*
  %32 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %31, %"class.blink::Node"* %20, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %5) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %49

49:                                               ; preds = %29, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %50 = getelementptr inbounds i8, i8* %30, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  %54 = icmp eq i32 %2, 0
  %55 = icmp ne i8* %30, null
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %49
  %58 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration14CopyPropertiesEv(%"class.blink::CSSComputedStyleDeclaration"* nonnull %31) #12
  br label %71

59:                                               ; preds = %49
  %60 = icmp eq %"class.blink::Node"* %20, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %59
  %62 = bitcast %"class.blink::Node"* %20 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %63 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %63, i64 10
  %65 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %64, align 8
  %66 = call %"class.blink::ExecutionContext"* %65(%"class.blink::Node"* nonnull %20) #12
  br label %67

67:                                               ; preds = %59, %61
  %68 = phi %"class.blink::ExecutionContext"* [ %66, %61 ], [ null, %59 ]
  %69 = call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %68) #12
  %70 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSComputedStyleDeclaration"* %31, %"class.WTF::Vector.2507"* dereferenceable(16) %69) #12
  br label %71

71:                                               ; preds = %67, %57
  %72 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %58, %57 ], [ %70, %67 ]
  %73 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %72 to i64
  %74 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %72 to i8*
  %79 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #12
  br label %80

80:                                               ; preds = %71, %77
  %81 = icmp eq i32 %2, 2
  br i1 %81, label %82, label %148

82:                                               ; preds = %80
  %83 = call %"class.blink::CSSValue"* @_ZN5blink21EditingStyleUtilities28BackgroundColorValueInEffectEPNS_4NodeE(%"class.blink::Node"* %20) #12
  %84 = icmp eq %"class.blink::CSSValue"* %83, null
  br i1 %84, label %115, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %86, align 8
  %88 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %83) #12
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  %91 = bitcast %"class.blink::Node"* %20 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %92 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %92, i64 10
  %94 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %93, align 8
  %95 = call %"class.blink::ExecutionContext"* %94(%"class.blink::Node"* %20) #12
  %96 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %95, i64 0, i32 6, i32 11
  %97 = load i32, i32* %96, align 8
  %98 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %87, i32 52, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 %97, %"class.blink::StyleSheetContents"* null) #12
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %85
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #12
  br label %114

114:                                              ; preds = %85, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  br label %115

115:                                              ; preds = %82, %114
  %116 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %31, i32 423) #12
  %117 = icmp eq %"class.blink::CSSValue"* %116, null
  br i1 %117, label %148, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %119, align 8
  %121 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #12
  %122 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %116) #12
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = bitcast %"class.blink::Node"* %20 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %125 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %125, i64 10
  %127 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %126, align 8
  %128 = call %"class.blink::ExecutionContext"* %127(%"class.blink::Node"* %20) #12
  %129 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %128, i64 0, i32 6, i32 11
  %130 = load i32, i32* %129, align 8
  %131 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %120, i32 514, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 %130, %"class.blink::StyleSheetContents"* null) #12
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #12
  br label %147

147:                                              ; preds = %118, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #12
  br label %148

148:                                              ; preds = %147, %115, %80
  %149 = icmp eq %"class.blink::Node"* %20, null
  br i1 %149, label %274, label %150

150:                                              ; preds = %148
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %152 = bitcast %"class.blink::Node"* %20 to %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)***
  %153 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %152, align 8
  %154 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %153, i64 71
  %155 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %154, align 8
  %156 = call %"class.blink::ComputedStyle"* %155(%"class.blink::Node"* nonnull %20, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %151) #12
  %157 = icmp eq %"class.blink::ComputedStyle"* %156, null
  br i1 %157, label %274, label %158

158:                                              ; preds = %150
  %159 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %152, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %159, i64 71
  %161 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %160, align 8
  %162 = call %"class.blink::ComputedStyle"* %161(%"class.blink::Node"* nonnull %20, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %151) #12
  %163 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %162, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %164, i64 0, i32 1, i32 0, i32 0
  %166 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %166, i64 0, i32 1, i32 0, i32 5
  %168 = load float, float* %167, align 4
  %169 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %166, i64 0, i32 1, i32 0, i32 4
  %170 = load float, float* %169, align 8
  %171 = fcmp une float %168, %170
  br i1 %171, label %172, label %205

172:                                              ; preds = %158
  %173 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %173, align 8
  %175 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #12
  %176 = fpext float %170 to double
  %177 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %176, i32 5) #12
  %178 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %177, i64 0, i32 0, i32 0
  %179 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %178) #12
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %180, align 8
  %181 = bitcast %"class.blink::Node"* %20 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %182 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %182, i64 10
  %184 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %183, align 8
  %185 = call %"class.blink::ExecutionContext"* %184(%"class.blink::Node"* nonnull %20) #12
  %186 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %185, i64 0, i32 6, i32 11
  %187 = load i32, i32* %186, align 8
  %188 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %174, i32 8, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 %187, %"class.blink::StyleSheetContents"* null) #12
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %172
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #12
  br label %204

204:                                              ; preds = %172, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #12
  br label %205

205:                                              ; preds = %204, %158
  %206 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %162, i64 0, i32 0, i32 1, i32 0, i32 0
  %207 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %207, i64 0, i32 18, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 147
  br i1 %210, label %211, label %216

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %212, align 8
  %214 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %213, i32 427, %"class.WTF::String"* null) #12
  %215 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %206, align 8
  br label %216

216:                                              ; preds = %211, %205
  %217 = phi %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* [ %215, %211 ], [ %207, %205 ]
  %218 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %217, i64 0, i32 19, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 147
  br i1 %220, label %221, label %226

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %222, align 8
  %224 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %223, i32 429, %"class.WTF::String"* null) #12
  %225 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %206, align 8
  br label %226

226:                                              ; preds = %221, %216
  %227 = phi %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* [ %225, %221 ], [ %217, %216 ]
  %228 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %227, i64 0, i32 20, i32 0, i32 1
  %229 = load i32, i32* %228, align 4
  switch i32 %229, label %234 [
    i32 405, label %230
    i32 147, label %230
  ]

230:                                              ; preds = %226, %226
  %231 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %231, align 8
  %233 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %232, i32 108, %"class.WTF::String"* null) #12
  br label %234

234:                                              ; preds = %226, %230
  %235 = bitcast %"class.blink::Node"* %20 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %236 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %235, align 8
  %237 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %236, i64 10
  %238 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %237, align 8
  %239 = call %"class.blink::ExecutionContext"* %238(%"class.blink::Node"* nonnull %20) #12
  %240 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %163, align 8
  %241 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %240, i64 0, i32 1, i32 0, i32 0
  %242 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %241, align 8
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %242, i64 0, i32 1, i32 0, i32 12, i32 0
  %244 = bitcast %"struct.blink::FontDescription::BitFields"* %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, 31457280
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %274, label %248

248:                                              ; preds = %234
  %249 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %239, i64 0, i32 6, i32 11
  %250 = load i32, i32* %249, align 8
  %251 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %252 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %251, align 8
  %253 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #12
  %254 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration36GetFontSizeCSSValuePreferringKeywordEv(%"class.blink::CSSComputedStyleDeclaration"* %31) #12
  %255 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %254) #12
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %256, align 8
  %257 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %252, i32 8, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext false, i32 %250, %"class.blink::StyleSheetContents"* null) #12
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %248
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #12
  br label %273

273:                                              ; preds = %272, %269, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #12
  br label %274

274:                                              ; preds = %273, %234, %150, %148
  %275 = call zeroext i1 @_ZNK5blink27CSSComputedStyleDeclaration15IsMonospaceFontEv(%"class.blink::CSSComputedStyleDeclaration"* %31) #12
  %276 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 2
  %277 = zext i1 %275 to i8
  store i8 %277, i8* %276, align 8
  call void @_ZN5blink12EditingStyle20ExtractFontSizeDeltaEv(%"class.blink::EditingStyle"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyleC2ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* nocapture, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16), i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 5
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::EditingStyle"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 17, i1 false)
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  tail call void @_ZN5blink12EditingStyle4InitEPNS_4NodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %0, %"class.blink::Node"* %8, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyleC2EPKNS_19CSSPropertyValueSetE(%"class.blink::EditingStyle"* nocapture, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* nonnull %1) #12
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %5, %4 ], [ null, %2 ]
  %8 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::MutableCSSPropertyValueSet"* %7, %"class.blink::MutableCSSPropertyValueSet"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Node"* null, %"class.blink::Node"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 2
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 5
  store i8 0, i8* %12, align 8
  tail call void @_ZN5blink12EditingStyle20ExtractFontSizeDeltaEv(%"class.blink::EditingStyle"* %0)
  ret void
}

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle20ExtractFontSizeDeltaEv(%"class.blink::EditingStyle"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %2, align 8
  %4 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %3, i64 0, i32 0
  %7 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %6, i32 8) #12
  %8 = icmp eq %"class.blink::CSSValue"* %7, null
  %9 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %2, align 8
  br i1 %8, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %9, i32 178, %"class.WTF::String"* null) #12
  br label %35

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %9, i64 0, i32 0
  %14 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %13, i32 178) #12
  %15 = icmp eq %"class.blink::CSSValue"* %14, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %14, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp ugt i8 %18, 1
  %20 = bitcast %"class.blink::CSSValue"* %14 to %"class.blink::CSSPrimitiveValue"*
  br i1 %19, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"* nonnull %20) #12
  br i1 %22, label %23, label %35

23:                                               ; preds = %21
  %24 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %20) #12
  %25 = fcmp ult double %24, 0x47EFFFFFE0000000
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = fcmp ole double %24, 0xC7EFFFFFE0000000
  %28 = select i1 %27, double 0xC7EFFFFFE0000000, double %24
  %29 = fptrunc double %28 to float
  br label %30

30:                                               ; preds = %23, %26
  %31 = phi float [ %29, %26 ], [ 0x47EFFFFFE0000000, %23 ]
  %32 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float %31, float* %32, align 4
  %33 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %2, align 8
  %34 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %33, i32 178, %"class.WTF::String"* null) #12
  br label %35

35:                                               ; preds = %1, %16, %12, %30, %21, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyleC2ENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeE(%"class.blink::EditingStyle"* nocapture, i32, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 5
  store i8 0, i8* %10, align 8
  %11 = bitcast %"class.blink::EditingStyle"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 17, i1 false)
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %13 = bitcast i8* %12 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %13, i8 zeroext 1) #12
  %14 = getelementptr inbounds i8, i8* %12, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = ptrtoint i8* %12 to i64
  %19 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #12
  %25 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %23, align 8
  br label %26

26:                                               ; preds = %4, %22
  %27 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %25, %22 ], [ %13, %4 ]
  %28 = tail call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %27, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext false, i32 %3, %"class.blink::StyleSheetContents"* null) #12
  %29 = icmp eq i32 %1, 383
  br i1 %29, label %30, label %82

30:                                               ; preds = %26
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %37, i64* %38, align 8
  br label %47

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %47

47:                                               ; preds = %39, %35
  %48 = phi i64 [ %46, %39 ], [ %37, %35 ]
  %49 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %48, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %55, label %82, label %56

56:                                               ; preds = %47
  %57 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #12
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %63 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %62, i64* %63, align 8
  br label %72

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %70 = bitcast i8** %69 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %70, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %72

72:                                               ; preds = %64, %60
  %73 = phi i64 [ %71, %64 ], [ %62, %60 ]
  %74 = phi i32 [ %67, %64 ], [ 0, %60 ]
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %74, i32* %75, align 8
  %76 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %73, i64* %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 5, i32* %79, align 8
  %80 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #12
  %81 = zext i1 %80 to i8
  br label %82

82:                                               ; preds = %47, %72, %26
  %83 = phi i8 [ 0, %26 ], [ 1, %47 ], [ %81, %72 ]
  store i8 %83, i8* %10, align 8
  ret void
}

declare zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::HTMLSpanElement"* @_ZN5blink14TabSpanElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration14CopyPropertiesEv(%"class.blink::CSSComputedStyleDeclaration"*) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZN5blink21EditingStyleUtilities28BackgroundColorValueInEffectEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"*, i32) local_unnamed_addr #2

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle29RemoveInheritedColorsIfNeededEPKNS_13ComputedStyleE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %4, i64 0, i32 18, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 147
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %9, align 8
  %11 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %10, i32 427, %"class.WTF::String"* null) #12
  %12 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %3, align 8
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* [ %12, %8 ], [ %4, %2 ]
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %14, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 147
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %20, i32 429, %"class.WTF::String"* null) #12
  %22 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %3, align 8
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* [ %22, %18 ], [ %14, %13 ]
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %24, i64 0, i32 20, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %31 [
    i32 405, label %27
    i32 147, label %27
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %29, i32 108, %"class.WTF::String"* null) #12
  br label %31

31:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle34ReplaceFontSizeByKeywordIfPossibleEPKNS_13ComputedStyleENS_17SecureContextModeEPNS_27CSSComputedStyleDeclarationE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readonly, i32, %"class.blink::CSSComputedStyleDeclaration"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %9, i64 0, i32 1, i32 0, i32 12, i32 0
  %11 = bitcast %"struct.blink::FontDescription::BitFields"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 31457280
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %16, align 8
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = tail call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration36GetFontSizeCSSValuePreferringKeywordEv(%"class.blink::CSSComputedStyleDeclaration"* %3) #12
  %20 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %19) #12
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  %22 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %17, i32 8, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 %2, %"class.blink::StyleSheetContents"* null) #12
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #12
  br label %38

38:                                               ; preds = %15, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %39

39:                                               ; preds = %4, %38
  ret void
}

declare zeroext i1 @_ZNK5blink27CSSComputedStyleDeclaration15IsMonospaceFontEv(%"class.blink::CSSComputedStyleDeclaration"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12EditingStyle11GetPropertyENS_13CSSPropertyIDE(%"class.blink::EditingStyle"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %4, i64 0, i32 0
  %8 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %7, i32 %1) #12
  %9 = icmp eq %"class.blink::CSSValue"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 2
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 1, i32 1
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %2, %6, %10, %14
  %19 = phi i32 [ 0, %2 ], [ %17, %14 ], [ 0, %10 ], [ 0, %6 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18GetIdentifierValueEPNS_19CSSPropertyValueSetENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #1 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %0, i32 %1) #12
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 2
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 1, i32 1
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %7, %4, %11, %2
  %16 = phi i32 [ 0, %2 ], [ %14, %11 ], [ 0, %7 ], [ 0, %4 ]
  ret i32 %16
}

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration36GetFontSizeCSSValuePreferringKeywordEv(%"class.blink::CSSComputedStyleDeclaration"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %2, align 8
  %4 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %3, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %10, i64 7, i32 0
  %12 = load i32, i32* %11, align 4
  br label %15

13:                                               ; preds = %5
  %14 = and i32 %7, 268435455
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi i32 [ %14, %13 ], [ %12, %9 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %1, %15
  %19 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %20, 0.000000e+00
  br label %22

22:                                               ; preds = %18, %15
  %23 = phi i1 [ false, %15 ], [ %21, %18 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12EditingStyle16GetTextDirectionERN9mojo_base5mojom13TextDirectionE(%"class.blink::EditingStyle"* nocapture readonly, i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %4, i64 0, i32 0
  %8 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %7, i32 378) #12
  %9 = icmp eq %"class.blink::CSSValue"* %8, null
  br i1 %9, label %34, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 2
  br i1 %13, label %14, label %34

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 1, i32 1
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %34 [
    i32 473, label %18
    i32 470, label %18
    i32 466, label %18
    i32 56, label %33
  ]

18:                                               ; preds = %14, %14, %14
  %19 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %19, i64 0, i32 0
  %21 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %20, i32 3) #12
  %22 = icmp eq %"class.blink::CSSValue"* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %21, i64 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %27, label %34

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %21, i64 1, i32 1
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 443
  %32 = select i1 %31, i32 2, i32 1
  store i32 %32, i32* %1, align 4
  br label %34

33:                                               ; preds = %14
  store i32 0, i32* %1, align 4
  br label %34

34:                                               ; preds = %23, %10, %2, %14, %18, %6, %27, %33
  %35 = phi i1 [ false, %2 ], [ true, %33 ], [ true, %27 ], [ false, %10 ], [ false, %6 ], [ false, %23 ], [ false, %18 ], [ false, %14 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle17OverrideWithStyleEPKNS_19CSSPropertyValueSetE(%"class.blink::EditingStyle"* nocapture, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %1, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 7, i32 0
  %10 = load i32, i32* %9, align 4
  br label %13

11:                                               ; preds = %4
  %12 = and i32 %6, 268435455
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ %10, %8 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %37, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %17, align 8
  %19 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %18, null
  br i1 %19, label %20, label %35

20:                                               ; preds = %16
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %22 = bitcast i8* %21 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %22, i8 zeroext 1) #12
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = ptrtoint i8* %21 to i64
  %28 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  %31 = bitcast i8* %21 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %30, label %35, label %32

32:                                               ; preds = %20
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #12
  %34 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %17, align 8
  br label %35

35:                                               ; preds = %16, %32, %20
  %36 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %18, %16 ], [ %34, %32 ], [ %31, %20 ]
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %36, %"class.blink::CSSPropertyValueSet"* nonnull %1) #12
  tail call void @_ZN5blink12EditingStyle20ExtractFontSizeDeltaEv(%"class.blink::EditingStyle"* %0)
  br label %37

37:                                               ; preds = %2, %13, %35
  ret void
}

declare void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle5ClearEv(%"class.blink::EditingStyle"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 0, i64* %2 monotonic, align 8
  %3 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #12
  %3 = bitcast i8* %2 to %"class.blink::EditingStyle"*
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false) #12
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %8, align 8
  %10 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %9, i64 0, i32 0
  %13 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %12) #12
  %14 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %13 to i64
  %15 = bitcast i8* %2 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %13 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #12
  br label %21

21:                                               ; preds = %1, %18, %11
  %22 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = getelementptr inbounds i8, i8* %2, i64 16
  store i8 %23, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i8, i8* %2, i64 20
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 4
  ret %"class.blink::EditingStyle"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EditingStyle"* @_ZN5blink12EditingStyle31ExtractAndRemoveBlockPropertiesEPKNS_16ExecutionContextE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::ExecutionContext"*) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #12
  %4 = bitcast i8* %3 to %"class.blink::EditingStyle"*
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #12
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %9, align 8
  %11 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %10, i64 0, i32 0
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !3

16:                                               ; preds = %12
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties) #12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties) #12
  br label %20

20:                                               ; preds = %19, %16, %12
  %21 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZN5blink11CSSProperty39FilterWebExposedCSSPropertiesIntoVectorEPKNS_16ExecutionContextEPKNS_13CSSPropertyIDEmRN3WTF6VectorIPKS0_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %1, i32* getelementptr inbounds ([22 x i32], [22 x i32]* @_ZN5blinkL22kStaticBlockPropertiesE, i64 0, i64 0), i64 22, %"class.WTF::Vector.2507"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)) #12
  br label %24

24:                                               ; preds = %20, %23
  %25 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPropertyValueSet"* %13, %"class.WTF::Vector.2507"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)) #12
  %26 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %25 to i64
  %27 = bitcast i8* %3 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %25 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #12
  br label %33

33:                                               ; preds = %24, %30
  tail call void @_ZN5blink12EditingStyle21RemoveBlockPropertiesEPKNS_16ExecutionContextE(%"class.blink::EditingStyle"* %0, %"class.blink::ExecutionContext"* %1)
  br label %34

34:                                               ; preds = %2, %33
  ret %"class.blink::EditingStyle"* %4
}

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::Vector.2507"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle21RemoveBlockPropertiesEPKNS_16ExecutionContextE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::ExecutionContext"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !3

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties) #12
  br label %13

13:                                               ; preds = %12, %9, %6
  %14 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @_ZN5blink11CSSProperty39FilterWebExposedCSSPropertiesIntoVectorEPKNS_16ExecutionContextEPKNS_13CSSPropertyIDEmRN3WTF6VectorIPKS0_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %1, i32* getelementptr inbounds ([22 x i32], [22 x i32]* @_ZN5blinkL22kStaticBlockPropertiesE, i64 0, i64 0), i64 22, %"class.WTF::Vector.2507"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)) #12
  br label %17

17:                                               ; preds = %13, %16
  %18 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to %"class.blink::CSSProperty"***), align 8
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25, !prof !3

21:                                               ; preds = %17
  %22 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties) #12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties) #12
  br label %25

25:                                               ; preds = %24, %21, %17
  %26 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  tail call void @_ZN5blink11CSSProperty39FilterWebExposedCSSPropertiesIntoVectorEPKNS_16ExecutionContextEPKNS_13CSSPropertyIDEmRN3WTF6VectorIPKS0_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %1, i32* getelementptr inbounds ([22 x i32], [22 x i32]* @_ZN5blinkL22kStaticBlockPropertiesE, i64 0, i64 0), i64 22, %"class.WTF::Vector.2507"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)) #12
  %29 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL21BlockPropertiesVectorEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i32 [ %26, %25 ], [ %29, %28 ]
  %32 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* nonnull %4, %"class.blink::CSSProperty"** %18, i32 %31) #12
  br label %33

33:                                               ; preds = %2, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EditingStyle"* @_ZN5blink12EditingStyle29ExtractAndRemoveTextDirectionENS_17SecureContextModeE(%"class.blink::EditingStyle"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #12
  %5 = bitcast i8* %4 to %"class.blink::EditingStyle"*
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #12
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %11 = bitcast i8* %10 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %11, i8 zeroext 1) #12
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = ptrtoint i8* %10 to i64
  %17 = bitcast i8* %4 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = bitcast i8* %10 to %"class.blink::MutableCSSPropertyValueSet"*
  %22 = bitcast i8* %4 to %"class.blink::MutableCSSPropertyValueSet"**
  br label %27

23:                                               ; preds = %2
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #12
  %25 = bitcast i8* %4 to %"class.blink::MutableCSSPropertyValueSet"**
  %26 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %25, align 8
  br label %27

27:                                               ; preds = %20, %23
  %28 = phi %"class.blink::MutableCSSPropertyValueSet"** [ %22, %20 ], [ %25, %23 ]
  %29 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %21, %20 ], [ %26, %23 ]
  %30 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %31, i64 0, i32 0
  %33 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %32, i32 378) #12
  %34 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"* %29, i32 378, i32 470, i1 zeroext %33) #12
  %35 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %28, align 8
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  %37 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %30, align 8
  %38 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %37, i64 0, i32 0
  %39 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* %38, i32 3) #12
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  %41 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %30, align 8
  %42 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %41, i64 0, i32 0
  %43 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %42, i32 3) #12
  %44 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %35, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %3, i1 zeroext %43, i32 %1, %"class.blink::StyleSheetContents"* null) #12
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #12
  br label %60

60:                                               ; preds = %27, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  %61 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %30, align 8
  %62 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %61, i32 378, %"class.WTF::String"* null) #12
  %63 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %30, align 8
  %64 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %63, i32 3, %"class.WTF::String"* null) #12
  ret %"class.blink::EditingStyle"* %5
}

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSProperty"**, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle25RemoveStyleAddedByElementEPNS_7ElementE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq %"class.blink::Element"* %1, null
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %8 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %9 = icmp eq %"class.blink::ContainerNode"* %8, null
  br i1 %9, label %81, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  %13 = bitcast %"class.blink::ContainerNode"* %11 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %14 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %14, i64 10
  %16 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %15, align 8
  %17 = tail call %"class.blink::ExecutionContext"* %16(%"class.blink::Node"* %12) #12
  %18 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %20 = bitcast i8* %19 to %"class.blink::CSSComputedStyleDeclaration"*
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0
  %22 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %20, %"class.blink::Node"* %21, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %10, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %40 = getelementptr inbounds i8, i8* %19, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  %44 = call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %17) #12
  %45 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSComputedStyleDeclaration"* %20, %"class.WTF::Vector.2507"* dereferenceable(16) %44) #12
  %46 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %47 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %47, i64 10
  %49 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %48, align 8
  %50 = call %"class.blink::ExecutionContext"* %49(%"class.blink::Node"* %7) #12
  %51 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %52 = bitcast i8* %51 to %"class.blink::CSSComputedStyleDeclaration"*
  %53 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %52, %"class.blink::Node"* %7, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %39
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %39, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  %71 = getelementptr inbounds i8, i8* %51, i64 -4
  %72 = bitcast i8* %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = or i16 %73, 1
  store atomic i16 %74, i16* %72 release, align 2
  %75 = call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %50) #12
  %76 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSComputedStyleDeclaration"* %52, %"class.WTF::Vector.2507"* dereferenceable(16) %75) #12
  %77 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %45, i64 0, i32 0
  call void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %76, %"class.blink::CSSPropertyValueSet"* %77) #12
  %78 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %76, i64 0, i32 0
  call void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %79, %"class.blink::CSSPropertyValueSet"* %80) #12
  br label %81

81:                                               ; preds = %6, %2, %70
  ret void
}

declare void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle40RemoveStyleConflictingWithStyleOfElementEPNS_7ElementE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq %"class.blink::Element"* %1, null
  br i1 %5, label %119, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %8 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %9 = icmp eq %"class.blink::ContainerNode"* %8, null
  br i1 %9, label %119, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %11, align 8
  %13 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %12, null
  br i1 %13, label %119, label %14

14:                                               ; preds = %10
  %15 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0
  %17 = bitcast %"class.blink::ContainerNode"* %15 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %18 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %18, i64 10
  %20 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %19, align 8
  %21 = tail call %"class.blink::ExecutionContext"* %20(%"class.blink::Node"* %16) #12
  %22 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %24 = bitcast i8* %23 to %"class.blink::CSSComputedStyleDeclaration"*
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %22, i64 0, i32 0
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %24, %"class.blink::Node"* %25, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %14, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %44 = getelementptr inbounds i8, i8* %23, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  %48 = call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %21) #12
  %49 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSComputedStyleDeclaration"* %24, %"class.WTF::Vector.2507"* dereferenceable(16) %48) #12
  %50 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %51 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %51, i64 10
  %53 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %52, align 8
  %54 = call %"class.blink::ExecutionContext"* %53(%"class.blink::Node"* %7) #12
  %55 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %56 = bitcast i8* %55 to %"class.blink::CSSComputedStyleDeclaration"*
  %57 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %56, %"class.blink::Node"* %7, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %43
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %74

74:                                               ; preds = %43, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  %75 = getelementptr inbounds i8, i8* %55, i64 -4
  %76 = bitcast i8* %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = or i16 %77, 1
  store atomic i16 %78, i16* %76 release, align 2
  %79 = call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %54) #12
  %80 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSComputedStyleDeclaration"* %56, %"class.WTF::Vector.2507"* dereferenceable(16) %79) #12
  %81 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %49, i64 0, i32 0
  call void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %80, %"class.blink::CSSPropertyValueSet"* %81) #12
  %82 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %80, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %119, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %80, i64 0, i32 0
  %87 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %80, null
  %88 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %80, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %86, i64 4
  %90 = bitcast %"class.blink::CSSPropertyValueSet"* %89 to %"class.WTF::Vector.1831"*
  %91 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %86, i64 2
  %92 = bitcast %"class.blink::CSSPropertyValueSet"* %91 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %93 = zext i32 %83 to i64
  br label %94

94:                                               ; preds = %113, %85
  %95 = phi i64 [ 0, %85 ], [ %117, %113 ]
  %96 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %11, align 8
  br i1 %87, label %97, label %99

97:                                               ; preds = %94
  %98 = load i32, i32* %88, align 8
  br label %106

99:                                               ; preds = %94
  %100 = load i32, i32* %88, align 4
  %101 = icmp sgt i32 %100, -1
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = trunc i64 %95 to i32
  %104 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %90, i32 %103) #12
  %105 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %104, i64 0, i32 0
  br label %113

106:                                              ; preds = %99, %97
  %107 = phi i32 [ %98, %97 ], [ %100, %99 ]
  %108 = and i32 %107, 268435455
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %92, i64 %109
  %111 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %110 to %"struct.blink::CSSPropertyValueMetadata"*
  %112 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %111, i64 %95
  br label %113

113:                                              ; preds = %102, %106
  %114 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %112, %106 ], [ %105, %102 ]
  %115 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %114) #12
  %116 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %96, i32 %115, %"class.WTF::String"* null) #12
  %117 = add nuw nsw i64 %95, 1
  %118 = icmp eq i64 %117, %93
  br i1 %118, label %119, label %94

119:                                              ; preds = %113, %74, %10, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle32CollapseTextDecorationPropertiesENS_17SecureContextModeE(%"class.blink::EditingStyle"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %6 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %5, null
  br i1 %6, label %45, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %5, i64 0, i32 0
  %9 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %8, i32 423) #12
  %10 = icmp eq %"class.blink::CSSValue"* %9, null
  br i1 %10, label %45, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %9, i64 0, i32 2
  %13 = load i8, i8* %12, align 1
  %14 = icmp ugt i8 %13, 51
  %15 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  br i1 %14, label %16, label %40

16:                                               ; preds = %11
  %17 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %9) #12
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %21 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %20, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %21, i32 354) #12
  %23 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %15, i32 354, %"class.WTF::String"* nonnull dereferenceable(8) %3, i1 zeroext %22, i32 %1, %"class.blink::StyleSheetContents"* null) #12
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %16, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %42

40:                                               ; preds = %11
  %41 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %15, i32 354, %"class.WTF::String"* null) #12
  br label %42

42:                                               ; preds = %40, %39
  %43 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %44 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %43, i32 423, %"class.WTF::String"* null) #12
  br label %45

45:                                               ; preds = %2, %42, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12EditingStyle15TriStateOfStyleEPNS_16ExecutionContextEPS0_NS_17SecureContextModeE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::ExecutionContext"*, %"class.blink::EditingStyle"* readonly, i32) local_unnamed_addr #1 align 2 {
  %5 = icmp eq %"class.blink::EditingStyle"* %2, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %9 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %8, %"class.blink::ExecutionContext"* %1) #12
  %12 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %2, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = tail call i32 @_ZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSStyleDeclaration"* %11, %"class.blink::Node"* %13, i32 1, i32 %3)
  br label %15

15:                                               ; preds = %6, %4, %10
  %16 = phi i32 [ %14, %10 ], [ 0, %4 ], [ 0, %6 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::CSSStyleDeclaration"*, %"class.blink::Node"*, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %7, i64 0, i32 0
  %9 = tail call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL18GetPropertiesNotInEPNS_19CSSPropertyValueSetEPNS_4NodeEPNS_19CSSStyleDeclarationENS_17SecureContextModeE(%"class.blink::CSSPropertyValueSet"* %8, %"class.blink::Node"* %2, %"class.blink::CSSStyleDeclaration"* %1, i32 %4)
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %22, !prof !3

12:                                               ; preds = %5
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  %16 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyTextDecorationEv() #12
  store %"class.blink::CSSProperty"* %16, %"class.blink::CSSProperty"** getelementptr inbounds ([6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* @_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties, i64 0, i64 0), align 16
  %17 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink32GetCSSPropertyTextDecorationLineEv() #12
  store %"class.blink::CSSProperty"* %17, %"class.blink::CSSProperty"** getelementptr inbounds ([6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* @_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties, i64 0, i64 1), align 8
  %18 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink43GetCSSPropertyWebkitTextDecorationsInEffectEv() #12
  store %"class.blink::CSSProperty"* %18, %"class.blink::CSSProperty"** getelementptr inbounds ([6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* @_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties, i64 0, i64 2), align 16
  %19 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyFontStyleEv() #12
  store %"class.blink::CSSProperty"* %19, %"class.blink::CSSProperty"** getelementptr inbounds ([6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* @_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties, i64 0, i64 3), align 8
  %20 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink24GetCSSPropertyFontWeightEv() #12
  store %"class.blink::CSSProperty"* %20, %"class.blink::CSSProperty"** getelementptr inbounds ([6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* @_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties, i64 0, i64 4), align 16
  %21 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #12
  store %"class.blink::CSSProperty"* %21, %"class.blink::CSSProperty"** getelementptr inbounds ([6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* @_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties, i64 0, i64 5), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties) #12
  br label %22

22:                                               ; preds = %12, %15, %5
  %23 = icmp eq i32 %3, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %9, %"class.blink::CSSProperty"** getelementptr inbounds ([6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* @_ZZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeEE19kTextOnlyProperties, i64 0, i64 0), i32 6) #12
  br label %26

26:                                               ; preds = %24, %22
  %27 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %9, i64 0, i32 0
  %28 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %9, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = load i32, i32* null, align 536870912
  br label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %9, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, -1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %27, i64 7, i32 0
  %37 = load i32, i32* %36, align 4
  br label %41

38:                                               ; preds = %31, %29
  %39 = phi i32 [ %30, %29 ], [ %33, %31 ]
  %40 = and i32 %39, 268435455
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi i32 [ %40, %38 ], [ %37, %35 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  %48 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %47, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %46, %49
  %51 = select i1 %50, i32 0, i32 2
  br label %52

52:                                               ; preds = %44, %41
  %53 = phi i32 [ 1, %41 ], [ %51, %44 ]
  ret i32 %53
}

declare %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL18GetPropertiesNotInEPNS_19CSSPropertyValueSetEPNS_4NodeEPNS_19CSSStyleDeclarationENS_17SecureContextModeE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Node"*, %"class.blink::CSSStyleDeclaration"*, i32) unnamed_addr #1 {
  %5 = alloca %"class.blink::Color", align 4
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::Color", align 4
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::Color", align 4
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::Color", align 4
  %12 = alloca %"class.WTF::String", align 8
  %13 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %0) #12
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSStyleDeclarationE(%"class.blink::MutableCSSPropertyValueSet"* %13, %"class.blink::CSSStyleDeclaration"* %2) #12
  %14 = bitcast %"class.blink::CSSStyleDeclaration"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)***
  %15 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %15, i64 20
  %17 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %16, align 8
  %18 = tail call %"class.blink::CSSValue"* %17(%"class.blink::CSSStyleDeclaration"* %2, i32 423) #12
  tail call fastcc void @_ZN5blinkL19DiffTextDecorationsEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEPKNS_8CSSValueENS_17SecureContextModeE(%"class.blink::MutableCSSPropertyValueSet"* %13, i32 354, %"class.blink::CSSValue"* %18, i32 %3)
  tail call fastcc void @_ZN5blinkL19DiffTextDecorationsEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEPKNS_8CSSValueENS_17SecureContextModeE(%"class.blink::MutableCSSPropertyValueSet"* %13, i32 423, %"class.blink::CSSValue"* %18, i32 %3)
  %19 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %14, align 8
  %20 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %19, i64 20
  %21 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %20, align 8
  %22 = tail call %"class.blink::CSSValue"* %21(%"class.blink::CSSStyleDeclaration"* %2, i32 17) #12
  %23 = icmp eq %"class.blink::CSSValue"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %13, i64 0, i32 0
  %26 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %25, i32 17) #12
  %27 = icmp eq %"class.blink::CSSValue"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %26, i64 0, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = icmp ult i8 %30, 2
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = icmp eq i8 %30, 2
  br i1 %33, label %34, label %58

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %26, i64 1, i32 1
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = or i32 %37, 1
  %39 = icmp eq i32 %38, 59
  br i1 %39, label %58, label %40

40:                                               ; preds = %28, %34
  %41 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %22, i64 0, i32 2
  %42 = load i8, i8* %41, align 1
  %43 = icmp ult i8 %42, 2
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = icmp eq i8 %42, 2
  br i1 %45, label %46, label %58

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %22, i64 1, i32 1
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = or i32 %49, 1
  %51 = icmp eq i32 %50, 59
  br i1 %51, label %58, label %52

52:                                               ; preds = %40, %46
  %53 = tail call fastcc zeroext i1 @_ZN5blinkL16FontWeightIsBoldEPKNS_8CSSValueE(%"class.blink::CSSValue"* nonnull %26)
  %54 = tail call fastcc zeroext i1 @_ZN5blinkL16FontWeightIsBoldEPKNS_8CSSValueE(%"class.blink::CSSValue"* nonnull %22)
  %55 = xor i1 %53, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %13, i32 17, %"class.WTF::String"* null) #12
  br label %58

58:                                               ; preds = %44, %32, %56, %46, %34, %24, %52, %4
  %59 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %14, align 8
  %60 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %59, i64 20
  %61 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %60, align 8
  %62 = tail call %"class.blink::CSSValue"* %61(%"class.blink::CSSStyleDeclaration"* %2, i32 2) #12
  %63 = icmp eq %"class.blink::CSSValue"* %62, null
  br i1 %63, label %148, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %13, i64 0, i32 0
  %66 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %65, i32 2) #12
  %67 = icmp eq %"class.blink::CSSValue"* %66, null
  br i1 %67, label %102, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %66, i64 0, i32 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 3
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = icmp ult i8 %70, 3
  br i1 %73, label %78, label %102

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %66, i64 1, i32 1
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 4
  br label %102

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #12
  %80 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %9, i64 0, i32 0
  store i32 0, i32* %80, align 4
  %81 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  %82 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %66) #12
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  %84 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext false) #12
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #12
  br label %100

100:                                              ; preds = %99, %96, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  %101 = load i32, i32* %80, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #12
  br label %102

102:                                              ; preds = %64, %72, %74, %100
  %103 = phi i32 [ %77, %74 ], [ %101, %100 ], [ 0, %64 ], [ 0, %72 ]
  %104 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %14, align 8
  %105 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %104, i64 20
  %106 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %105, align 8
  %107 = call %"class.blink::CSSValue"* %106(%"class.blink::CSSStyleDeclaration"* %2, i32 2) #12
  %108 = icmp eq %"class.blink::CSSValue"* %107, null
  br i1 %108, label %143, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %107, i64 0, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 3
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = icmp ult i8 %111, 3
  br i1 %114, label %119, label %143

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %107, i64 1, i32 1
  %117 = bitcast i8* %116 to i32*
  %118 = load i32, i32* %117, align 4
  br label %143

119:                                              ; preds = %113
  %120 = bitcast %"class.blink::Color"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120) #12
  %121 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %7, i64 0, i32 0
  store i32 0, i32* %121, align 4
  %122 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  %123 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %107) #12
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false) #12
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #12
  br label %141

141:                                              ; preds = %140, %137, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  %142 = load i32, i32* %121, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120) #12
  br label %143

143:                                              ; preds = %102, %113, %115, %141
  %144 = phi i32 [ %118, %115 ], [ %142, %141 ], [ 0, %102 ], [ 0, %113 ]
  %145 = icmp eq i32 %103, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %13, i32 2, %"class.WTF::String"* null) #12
  br label %148

148:                                              ; preds = %58, %146, %143
  %149 = icmp eq %"class.blink::CSSStyleDeclaration"* %2, null
  br i1 %149, label %250, label %150

150:                                              ; preds = %148
  %151 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %14, align 8
  %152 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %151, i64 20
  %153 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %152, align 8
  %154 = call %"class.blink::CSSValue"* %153(%"class.blink::CSSStyleDeclaration"* nonnull %2, i32 349) #12
  %155 = icmp eq %"class.blink::CSSValue"* %154, null
  br i1 %155, label %250, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %154, i64 0, i32 2
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 2
  br i1 %159, label %160, label %250

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %154, i64 1, i32 1
  %162 = bitcast i8* %161 to i32*
  %163 = load i32, i32* %162, align 4
  switch i32 %163, label %250 [
    i32 310, label %168
    i32 314, label %168
    i32 311, label %164
    i32 306, label %165
    i32 312, label %165
    i32 307, label %166
    i32 313, label %166
    i32 506, label %167
    i32 507, label %167
  ]

164:                                              ; preds = %160
  br label %168

165:                                              ; preds = %160, %160
  br label %168

166:                                              ; preds = %160, %160
  br label %168

167:                                              ; preds = %160, %160
  br label %168

168:                                              ; preds = %167, %166, %165, %164, %160, %160
  %169 = phi i32 [ 310, %160 ], [ 310, %160 ], [ 311, %164 ], [ 306, %165 ], [ 307, %166 ], [ %163, %167 ]
  %170 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %13, null
  br i1 %170, label %250, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %13, i64 0, i32 0
  %173 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %172, i32 349) #12
  %174 = icmp eq %"class.blink::CSSValue"* %173, null
  br i1 %174, label %250, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %173, i64 0, i32 2
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 2
  br i1 %178, label %179, label %250

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %173, i64 1, i32 1
  %181 = bitcast i8* %180 to i32*
  %182 = load i32, i32* %181, align 4
  switch i32 %182, label %250 [
    i32 310, label %187
    i32 314, label %187
    i32 311, label %183
    i32 306, label %184
    i32 312, label %184
    i32 307, label %185
    i32 313, label %185
    i32 506, label %186
    i32 507, label %186
  ]

183:                                              ; preds = %179
  br label %187

184:                                              ; preds = %179, %179
  br label %187

185:                                              ; preds = %179, %179
  br label %187

186:                                              ; preds = %179, %179
  br label %187

187:                                              ; preds = %186, %185, %184, %183, %179, %179
  %188 = phi i32 [ 310, %179 ], [ 310, %179 ], [ 311, %183 ], [ 306, %184 ], [ 307, %185 ], [ %182, %186 ]
  %189 = icmp eq i32 %188, %169
  br i1 %189, label %248, label %190

190:                                              ; preds = %187
  %191 = or i32 %169, 1
  %192 = icmp eq i32 %191, 507
  br i1 %192, label %193, label %219

193:                                              ; preds = %190
  %194 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %195 = bitcast %"class.blink::Node"* %1 to %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)***
  %196 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %195, align 8
  %197 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %196, i64 71
  %198 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %197, align 8
  %199 = call %"class.blink::ComputedStyle"* %198(%"class.blink::Node"* %1, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %194) #12
  %200 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %199, i64 0, i32 0, i32 9
  %201 = bitcast [20 x i8]* %200 to i160*
  %202 = load i160, i160* %201, align 8
  %203 = lshr i160 %202, 115
  %204 = trunc i160 %203 to i8
  %205 = and i8 %204, 1
  switch i32 %169, label %209 [
    i32 310, label %216
    i32 314, label %216
    i32 311, label %206
    i32 306, label %207
    i32 312, label %207
    i32 307, label %208
    i32 313, label %208
    i32 506, label %210
    i32 507, label %213
  ]

206:                                              ; preds = %193
  br label %216

207:                                              ; preds = %193, %193
  br label %216

208:                                              ; preds = %193, %193
  br label %216

209:                                              ; preds = %193
  br label %216

210:                                              ; preds = %193
  %211 = icmp eq i8 %205, 0
  %212 = select i1 %211, i32 306, i32 307
  br label %216

213:                                              ; preds = %193
  %214 = icmp eq i8 %205, 0
  %215 = select i1 %214, i32 307, i32 306
  br label %216

216:                                              ; preds = %213, %210, %209, %208, %207, %206, %193, %193
  %217 = phi i32 [ %215, %213 ], [ %212, %210 ], [ 310, %193 ], [ 310, %193 ], [ 311, %206 ], [ 306, %207 ], [ 307, %208 ], [ 0, %209 ]
  %218 = icmp eq i32 %217, %188
  br i1 %218, label %248, label %250

219:                                              ; preds = %190
  %220 = or i32 %188, 1
  %221 = icmp eq i32 %220, 507
  br i1 %221, label %222, label %250

222:                                              ; preds = %219
  %223 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %224 = bitcast %"class.blink::Node"* %1 to %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)***
  %225 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %224, align 8
  %226 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %225, i64 71
  %227 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %226, align 8
  %228 = call %"class.blink::ComputedStyle"* %227(%"class.blink::Node"* %1, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %223) #12
  %229 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %228, i64 0, i32 0, i32 9
  %230 = bitcast [20 x i8]* %229 to i160*
  %231 = load i160, i160* %230, align 8
  %232 = lshr i160 %231, 115
  %233 = trunc i160 %232 to i8
  %234 = and i8 %233, 1
  switch i32 %188, label %238 [
    i32 310, label %245
    i32 314, label %245
    i32 311, label %235
    i32 306, label %236
    i32 312, label %236
    i32 307, label %237
    i32 313, label %237
    i32 506, label %239
    i32 507, label %242
  ]

235:                                              ; preds = %222
  br label %245

236:                                              ; preds = %222, %222
  br label %245

237:                                              ; preds = %222, %222
  br label %245

238:                                              ; preds = %222
  br label %245

239:                                              ; preds = %222
  %240 = icmp eq i8 %234, 0
  %241 = select i1 %240, i32 306, i32 307
  br label %245

242:                                              ; preds = %222
  %243 = icmp eq i8 %234, 0
  %244 = select i1 %243, i32 307, i32 306
  br label %245

245:                                              ; preds = %222, %222, %235, %236, %237, %238, %239, %242
  %246 = phi i32 [ %244, %242 ], [ %241, %239 ], [ 310, %222 ], [ 310, %222 ], [ 311, %235 ], [ 306, %236 ], [ 307, %237 ], [ 0, %238 ]
  %247 = icmp eq i32 %246, %169
  br i1 %247, label %248, label %250

248:                                              ; preds = %187, %216, %245
  %249 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %13, i32 349, %"class.WTF::String"* null) #12
  br label %250

250:                                              ; preds = %171, %175, %168, %150, %156, %148, %179, %160, %219, %216, %248, %245
  %251 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %14, align 8
  %252 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %251, i64 20
  %253 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %252, align 8
  %254 = call %"class.blink::CSSValue"* %253(%"class.blink::CSSStyleDeclaration"* %2, i32 52) #12
  %255 = icmp eq %"class.blink::CSSValue"* %254, null
  br i1 %255, label %340, label %256

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %13, i64 0, i32 0
  %258 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %257, i32 52) #12
  %259 = icmp eq %"class.blink::CSSValue"* %258, null
  br i1 %259, label %294, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %258, i64 0, i32 2
  %262 = load i8, i8* %261, align 1
  %263 = icmp eq i8 %262, 3
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = icmp ult i8 %262, 3
  br i1 %265, label %270, label %294

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %258, i64 1, i32 1
  %268 = bitcast i8* %267 to i32*
  %269 = load i32, i32* %268, align 4
  br label %294

270:                                              ; preds = %264
  %271 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %271) #12
  %272 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 0, i32* %272, align 4
  %273 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #12
  %274 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %258) #12
  %275 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %275, align 8
  %276 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false) #12
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %270
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #12
  br label %292

292:                                              ; preds = %291, %288, %270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #12
  %293 = load i32, i32* %272, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %271) #12
  br label %294

294:                                              ; preds = %256, %264, %266, %292
  %295 = phi i32 [ %269, %266 ], [ %293, %292 ], [ 0, %256 ], [ 0, %264 ]
  %296 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %14, align 8
  %297 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %296, i64 20
  %298 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %297, align 8
  %299 = call %"class.blink::CSSValue"* %298(%"class.blink::CSSStyleDeclaration"* %2, i32 52) #12
  %300 = icmp eq %"class.blink::CSSValue"* %299, null
  br i1 %300, label %335, label %301

301:                                              ; preds = %294
  %302 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %299, i64 0, i32 2
  %303 = load i8, i8* %302, align 1
  %304 = icmp eq i8 %303, 3
  br i1 %304, label %307, label %305

305:                                              ; preds = %301
  %306 = icmp ult i8 %303, 3
  br i1 %306, label %311, label %335

307:                                              ; preds = %301
  %308 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %299, i64 1, i32 1
  %309 = bitcast i8* %308 to i32*
  %310 = load i32, i32* %309, align 4
  br label %335

311:                                              ; preds = %305
  %312 = bitcast %"class.blink::Color"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %312) #12
  %313 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %11, i64 0, i32 0
  store i32 0, i32* %313, align 4
  %314 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #12
  %315 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %299) #12
  %316 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %316, align 8
  %317 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12, i1 zeroext false) #12
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %311
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #12
  br label %333

333:                                              ; preds = %332, %329, %311
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #12
  %334 = load i32, i32* %313, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %312) #12
  br label %335

335:                                              ; preds = %294, %305, %307, %333
  %336 = phi i32 [ %310, %307 ], [ %334, %333 ], [ 0, %294 ], [ 0, %305 ]
  %337 = icmp eq i32 %295, %336
  br i1 %337, label %338, label %340

338:                                              ; preds = %335
  %339 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %13, i32 52, %"class.WTF::String"* null) #12
  br label %340

340:                                              ; preds = %250, %338, %335
  ret %"class.blink::MutableCSSPropertyValueSet"* %13
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyTextDecorationEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink32GetCSSPropertyTextDecorationLineEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink43GetCSSPropertyWebkitTextDecorationsInEffectEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyFontStyleEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink24GetCSSPropertyFontWeightEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12EditingStyle15TriStateOfStyleERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_17SecureContextModeE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::VisibleSelectionTemplate"* dereferenceable(40), i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = tail call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNoneEv(%"class.blink::VisibleSelectionTemplate"* %1) #12
  br i1 %8, label %206, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::VisibleSelectionTemplate"* %1) #12
  br i1 %10, label %11, label %33

11:                                               ; preds = %9
  %12 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::VisibleSelectionTemplate"* %1) #12
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = bitcast %"class.blink::Node"* %14 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %16 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %16, i64 10
  %18 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %17, align 8
  %19 = call %"class.blink::ExecutionContext"* %18(%"class.blink::Node"* %14) #12
  %20 = call %"class.blink::EditingStyle"* @_ZN5blink21EditingStyleUtilities27CreateStyleAtSelectionStartERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEbPNS_26MutableCSSPropertyValueSetE(%"class.blink::VisibleSelectionTemplate"* dereferenceable(40) %1, i1 zeroext false, %"class.blink::MutableCSSPropertyValueSet"* null) #12
  %21 = icmp eq %"class.blink::EditingStyle"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %20, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %23, align 8
  %25 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %24, %"class.blink::ExecutionContext"* %19) #12
  %28 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %20, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = call i32 @_ZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSStyleDeclaration"* %27, %"class.blink::Node"* %29, i32 1, i32 %2) #12
  br label %31

31:                                               ; preds = %11, %22, %26
  %32 = phi i32 [ %30, %26 ], [ 0, %11 ], [ 0, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  br label %206

33:                                               ; preds = %9
  %34 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::VisibleSelectionTemplate"* %1) #12
  %35 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %206, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.WTF::String"* %4 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 5
  %42 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %44 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %38, %203
  %46 = phi i8 [ 1, %38 ], [ %185, %203 ]
  %47 = phi i32 [ 0, %38 ], [ %184, %203 ]
  %48 = phi %"class.blink::Node"* [ %36, %38 ], [ %204, %203 ]
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 6, i32 0, i32 0
  br i1 %52, label %58, label %54

54:                                               ; preds = %45
  %55 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRareData"**
  %56 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %56, i64 0, i32 1, i32 0, i32 0
  br label %60

58:                                               ; preds = %45
  %59 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRenderingData"**
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi %"class.blink::NodeRenderingData"** [ %57, %54 ], [ %59, %58 ]
  %62 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %62, i64 0, i32 1
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = icmp eq %"class.blink::LayoutObject"* %64, null
  br i1 %65, label %183, label %66

66:                                               ; preds = %60
  %67 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %48) #12
  br i1 %67, label %68, label %183

68:                                               ; preds = %66
  %69 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %70 = bitcast i8* %69 to %"class.blink::CSSComputedStyleDeclaration"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %70, %"class.blink::Node"* nonnull %48, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #12
  br label %86

86:                                               ; preds = %68, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  %87 = getelementptr inbounds i8, i8* %69, i64 -4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = or i16 %89, 1
  store atomic i16 %90, i16* %88 release, align 2
  %91 = icmp eq i8* %69, null
  br i1 %91, label %183, label %92

92:                                               ; preds = %86
  %93 = load i8, i8* %41, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  %95 = bitcast i8* %69 to %"class.blink::CSSStyleDeclaration"*
  br i1 %94, label %173, label %96

96:                                               ; preds = %92
  %97 = bitcast i8* %69 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)***
  %98 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %97, align 8
  %99 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %98, i64 20
  %100 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %99, align 8
  %101 = call %"class.blink::CSSValue"* %100(%"class.blink::CSSStyleDeclaration"* nonnull %95, i32 383) #12
  %102 = icmp eq %"class.blink::CSSValue"* %101, null
  br i1 %102, label %173, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %101, i64 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 2
  br i1 %106, label %107, label %173

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %101, i64 1, i32 1
  %109 = bitcast i8* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 296
  br i1 %111, label %112, label %173

112:                                              ; preds = %107
  %113 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %42, align 8
  %114 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %113, i64 0, i32 0
  %115 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %114, i32 383) #12
  %116 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %115, i64 1, i32 1
  %117 = bitcast i8* %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = call zeroext i1 @_ZN5blink21EditingStyleUtilities29HasAncestorVerticalAlignStyleERNS_4NodeENS_10CSSValueIDE(%"class.blink::Node"* nonnull dereferenceable(64) %48, i32 %118) #12
  br i1 %119, label %120, label %173

120:                                              ; preds = %112
  %121 = load i32, i32* %49, align 8
  %122 = and i32 %121, 12
  %123 = icmp eq i32 %122, 0
  %124 = and i32 %121, 1
  %125 = icmp eq i32 %124, 0
  br i1 %123, label %126, label %137

126:                                              ; preds = %120
  br i1 %125, label %133, label %127

127:                                              ; preds = %126
  %128 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRareData"**
  %129 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %129, i64 0, i32 1, i32 0, i32 0
  %131 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %131, i64 0, i32 2, i32 0
  br label %152

133:                                              ; preds = %126
  %134 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRenderingData"**
  %135 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %135, i64 0, i32 2, i32 0
  br label %152

137:                                              ; preds = %120
  br i1 %125, label %142, label %138

138:                                              ; preds = %137
  %139 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRareData"**
  %140 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %140, i64 0, i32 1, i32 0, i32 0
  br label %144

142:                                              ; preds = %137
  %143 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRenderingData"**
  br label %144

144:                                              ; preds = %142, %138
  %145 = phi %"class.blink::NodeRenderingData"** [ %141, %138 ], [ %143, %142 ]
  %146 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %146, i64 0, i32 1
  %148 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %148, i64 0, i32 5, i32 0
  br label %152

152:                                              ; preds = %150, %133, %127
  %153 = phi %"class.blink::ComputedStyle"** [ %132, %127 ], [ %136, %133 ], [ %151, %150 ]
  %154 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %153, align 8
  br label %155

155:                                              ; preds = %152, %144
  %156 = phi %"class.blink::ComputedStyle"* [ null, %144 ], [ %154, %152 ]
  %157 = load i32, i32* %117, align 4
  switch i32 %157, label %166 [
    i32 304, label %165
    i32 303, label %158
    i32 297, label %159
    i32 296, label %160
    i32 301, label %161
    i32 300, label %162
    i32 298, label %163
    i32 299, label %164
  ]

158:                                              ; preds = %155
  br label %166

159:                                              ; preds = %155
  br label %166

160:                                              ; preds = %155
  br label %166

161:                                              ; preds = %155
  br label %166

162:                                              ; preds = %155
  br label %166

163:                                              ; preds = %155
  br label %166

164:                                              ; preds = %155
  br label %166

165:                                              ; preds = %155
  br label %166

166:                                              ; preds = %155, %158, %159, %160, %161, %162, %163, %164, %165
  %167 = phi i160 [ 147573952589676412928, %165 ], [ 55340232221128654848, %164 ], [ 36893488147419103232, %163 ], [ 73786976294838206464, %162 ], [ 92233720368547758080, %161 ], [ 0, %160 ], [ 18446744073709551616, %159 ], [ 129127208515966861312, %158 ], [ 110680464442257309696, %155 ]
  %168 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %156, i64 0, i32 0, i32 9
  %169 = bitcast [20 x i8]* %168 to i160*
  %170 = load i160, i160* %169, align 8
  %171 = and i160 %170, -276701161105643274241
  %172 = or i160 %171, %167
  store i160 %172, i160* %169, align 8
  br label %173

173:                                              ; preds = %92, %96, %103, %112, %166, %107
  %174 = call i32 @_ZNK5blink12EditingStyle15TriStateOfStyleEPNS_19CSSStyleDeclarationEPNS_4NodeENS0_30ShouldIgnoreTextOnlyPropertiesENS_17SecureContextModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSStyleDeclaration"* nonnull %95, %"class.blink::Node"* nonnull %48, i32 1, i32 %2)
  %175 = and i8 %46, 1
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %183

177:                                              ; preds = %173
  %178 = icmp eq i32 %47, %174
  br i1 %178, label %183, label %179

179:                                              ; preds = %177
  %180 = load i32, i32* %49, align 8
  %181 = and i32 %180, 12
  %182 = icmp eq i32 %181, 4
  br i1 %182, label %206, label %183

183:                                              ; preds = %173, %177, %179, %86, %60, %66
  %184 = phi i32 [ %47, %66 ], [ %47, %60 ], [ %47, %86 ], [ %47, %179 ], [ %47, %177 ], [ %174, %173 ]
  %185 = phi i8 [ %46, %66 ], [ %46, %60 ], [ %46, %86 ], [ %46, %179 ], [ %46, %177 ], [ 0, %173 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::VisibleSelectionTemplate"* %1) #12
  %186 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %187 = icmp eq %"class.blink::Node"* %48, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12
  br i1 %187, label %206, label %188

188:                                              ; preds = %183
  %189 = load i32, i32* %49, align 8
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %197, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 1
  %194 = bitcast %"class.blink::Node"* %193 to %"class.blink::Node"**
  %195 = load %"class.blink::Node"*, %"class.blink::Node"** %194, align 8
  %196 = icmp eq %"class.blink::Node"* %195, null
  br i1 %196, label %197, label %203

197:                                              ; preds = %192, %188
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 5, i32 0, i32 0
  %199 = load %"class.blink::Node"*, %"class.blink::Node"** %198, align 8
  %200 = icmp eq %"class.blink::Node"* %199, null
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  %202 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %48) #12
  br label %203

203:                                              ; preds = %192, %197, %201
  %204 = phi %"class.blink::Node"* [ %202, %201 ], [ %199, %197 ], [ %195, %192 ]
  %205 = icmp eq %"class.blink::Node"* %204, null
  br i1 %205, label %206, label %45

206:                                              ; preds = %179, %183, %203, %33, %3, %31
  %207 = phi i32 [ %32, %31 ], [ 0, %3 ], [ 0, %33 ], [ 2, %179 ], [ %184, %183 ], [ %184, %203 ]
  ret i32 %207
}

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNoneEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare %"class.blink::EditingStyle"* @_ZN5blink21EditingStyleUtilities27CreateStyleAtSelectionStartERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEbPNS_26MutableCSSPropertyValueSetE(%"class.blink::VisibleSelectionTemplate"* dereferenceable(40), i1 zeroext, %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18GetIdentifierValueEPNS_19CSSStyleDeclarationENS_13CSSPropertyIDE(%"class.blink::CSSStyleDeclaration"*, i32) local_unnamed_addr #1 {
  %3 = icmp eq %"class.blink::CSSStyleDeclaration"* %0, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::CSSStyleDeclaration"* %0 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)***
  %6 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %6, i64 20
  %8 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleDeclaration"*, i32)** %7, align 8
  %9 = tail call %"class.blink::CSSValue"* %8(%"class.blink::CSSStyleDeclaration"* nonnull %0, i32 %1) #12
  %10 = icmp eq %"class.blink::CSSValue"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %9, i64 0, i32 2
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 2
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %9, i64 1, i32 1
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %11, %4, %15, %2
  %20 = phi i32 [ 0, %2 ], [ %18, %15 ], [ 0, %11 ], [ 0, %4 ]
  ret i32 %20
}

declare zeroext i1 @_ZN5blink21EditingStyleUtilities29HasAncestorVerticalAlignStyleERNS_4NodeENS_10CSSValueIDE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12EditingStyle33ConflictsWithInlineStyleOfElementEPNS_11HTMLElementEPS0_PN3WTF6VectorINS_13CSSPropertyIDELj0ENS4_18PartitionAllocatorEEE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::HTMLElement"*, %"class.blink::EditingStyle"*, %"class.WTF::Vector.1047"*) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %12, align 8
  %14 = icmp eq %"class.blink::ElementData"* %13, null
  br i1 %14, label %297, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %13, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %18, align 8
  %20 = icmp ne %"class.blink::MutableCSSPropertyValueSet"* %19, null
  %21 = icmp ne %"class.blink::CSSPropertyValueSet"* %17, null
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %297

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %291, label %27

27:                                               ; preds = %23
  %28 = bitcast i32* %5 to i8*
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = icmp eq %"class.WTF::Vector.1047"* %3, null
  %31 = bitcast i32* %6 to i8*
  %32 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %3, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %3, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast i32* %7 to i8*
  %36 = icmp eq %"class.blink::EditingStyle"* %2, null
  %37 = bitcast %"class.WTF::String"* %8 to i8*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %39 = bitcast %"class.blink::HTMLElement"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %40 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.blink::EditingStyle"* %2 to i64*
  %42 = bitcast i32* %9 to i8*
  %43 = bitcast %"class.WTF::String"* %10 to i8*
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %45 = bitcast %"class.WTF::String"* %11 to i8*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %47 = zext i32 %25 to i64
  br label %48

48:                                               ; preds = %288, %27
  %49 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %19, %27 ], [ %289, %288 ]
  %50 = phi i64 [ 0, %27 ], [ %286, %288 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #12
  store i32 -1431655766, i32* %5, align 4
  %51 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %49, i64 0, i32 0
  %52 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %49, null
  %53 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %49, i64 0, i32 0, i32 0
  br i1 %52, label %54, label %56

54:                                               ; preds = %48
  %55 = load i32, i32* %53, align 8
  br label %65

56:                                               ; preds = %48
  %57 = load i32, i32* %53, align 4
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %65, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %51, i64 4
  %61 = bitcast %"class.blink::CSSPropertyValueSet"* %60 to %"class.WTF::Vector.1831"*
  %62 = trunc i64 %50 to i32
  %63 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %61, i32 %62) #12
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %63, i64 0, i32 0
  br label %74

65:                                               ; preds = %56, %54
  %66 = phi i32 [ %55, %54 ], [ %57, %56 ]
  %67 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %51, i64 2
  %68 = bitcast %"class.blink::CSSPropertyValueSet"* %67 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %69 = and i32 %66, 268435455
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %68, i64 %70
  %72 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %71 to %"struct.blink::CSSPropertyValueMetadata"*
  %73 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %72, i64 %50
  br label %74

74:                                               ; preds = %59, %65
  %75 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %73, %65 ], [ %64, %59 ]
  %76 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %75) #12
  store i32 %76, i32* %5, align 4
  %77 = icmp eq i32 %76, 436
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = call zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* %29) #12
  br i1 %79, label %285, label %80

80:                                               ; preds = %78
  %81 = load i32, i32* %5, align 4
  br label %82

82:                                               ; preds = %80, %74
  %83 = phi i32 [ %81, %80 ], [ %76, %74 ]
  %84 = icmp eq i32 %83, 423
  br i1 %84, label %85, label %158

85:                                               ; preds = %82
  %86 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 354) #12
  %87 = icmp eq %"class.blink::CSSValue"* %86, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = load i32, i32* %5, align 4
  br label %158

90:                                               ; preds = %85
  br i1 %30, label %290, label %91

91:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #12
  store i32 514, i32* %6, align 4
  %92 = load i32, i32* %32, align 4
  %93 = load i32, i32* %33, align 8
  %94 = icmp eq i32 %92, %93
  br i1 %94, label %101, label %95, !prof !4

95:                                               ; preds = %91
  %96 = load i32*, i32** %34, align 8
  %97 = zext i32 %92 to i64
  %98 = getelementptr inbounds i32, i32* %96, i64 %97
  store i32 514, i32* %98, align 4
  %99 = load i32, i32* %32, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %32, align 4
  br label %103

101:                                              ; preds = %91
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1047"* nonnull %3, i32* nonnull dereferenceable(4) %6) #12
  %102 = load i32, i32* %32, align 4
  br label %103

103:                                              ; preds = %95, %101
  %104 = phi i32 [ %100, %95 ], [ %102, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #12
  store i32 354, i32* %7, align 4
  %105 = load i32, i32* %33, align 8
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %113, label %107, !prof !4

107:                                              ; preds = %103
  %108 = load i32*, i32** %34, align 8
  %109 = zext i32 %104 to i64
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  store i32 354, i32* %110, align 4
  %111 = load i32, i32* %32, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %32, align 4
  br label %114

113:                                              ; preds = %103
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1047"* nonnull %3, i32* nonnull dereferenceable(4) %7) #12
  br label %114

114:                                              ; preds = %107, %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #12
  br i1 %36, label %285, label %115

115:                                              ; preds = %114
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  %116 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 354) #12
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %38, align 8
  %117 = call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 354) #12
  %118 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %39, align 8
  %119 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %118, i64 10
  %120 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %119, align 8
  %121 = call %"class.blink::ExecutionContext"* %120(%"class.blink::Node"* %29) #12
  %122 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %121, i64 0, i32 6, i32 11
  %123 = load i32, i32* %122, align 8
  %124 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %40, align 8
  %125 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %124, null
  br i1 %125, label %126, label %139

126:                                              ; preds = %115
  %127 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %128 = bitcast i8* %127 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %128, i8 zeroext 1) #12
  %129 = getelementptr inbounds i8, i8* %127, i64 -4
  %130 = bitcast i8* %129 to i16*
  %131 = load atomic i16, i16* %130 monotonic, align 2
  %132 = or i16 %131, 1
  store atomic i16 %132, i16* %130 release, align 2
  %133 = ptrtoint i8* %127 to i64
  store atomic i64 %133, i64* %41 monotonic, align 8
  %134 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %126
  %137 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %127) #12
  %138 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %40, align 8
  br label %139

139:                                              ; preds = %115, %126, %136
  %140 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %124, %115 ], [ %138, %136 ], [ %128, %126 ]
  %141 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %140, i32 354, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext %117, i32 %123, %"class.blink::StyleSheetContents"* null) #12
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #12
  br label %157

157:                                              ; preds = %139, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %285

158:                                              ; preds = %88, %82
  %159 = phi i32 [ %89, %88 ], [ %83, %82 ]
  %160 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 %159) #12
  %161 = icmp eq %"class.blink::CSSValue"* %160, null
  br i1 %161, label %285, label %162

162:                                              ; preds = %158
  %163 = load i32, i32* %5, align 4
  %164 = icmp eq i32 %163, 378
  br i1 %164, label %165, label %226

165:                                              ; preds = %162
  %166 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 3) #12
  %167 = icmp eq %"class.blink::CSSValue"* %166, null
  br i1 %167, label %226, label %168

168:                                              ; preds = %165
  br i1 %30, label %290, label %169

169:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #12
  store i32 3, i32* %9, align 4
  %170 = load i32, i32* %32, align 4
  %171 = load i32, i32* %33, align 8
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %179, label %173, !prof !4

173:                                              ; preds = %169
  %174 = load i32*, i32** %34, align 8
  %175 = zext i32 %170 to i64
  %176 = getelementptr inbounds i32, i32* %174, i64 %175
  store i32 3, i32* %176, align 4
  %177 = load i32, i32* %32, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %32, align 4
  br label %180

179:                                              ; preds = %169
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1047"* nonnull %3, i32* nonnull dereferenceable(4) %9) #12
  br label %180

180:                                              ; preds = %173, %179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #12
  br i1 %36, label %227, label %181

181:                                              ; preds = %180
  %182 = load i32, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  %183 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 %182) #12
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %44, align 8
  %184 = load i32, i32* %5, align 4
  %185 = call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 %184) #12
  %186 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %39, align 8
  %187 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %186, i64 10
  %188 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %187, align 8
  %189 = call %"class.blink::ExecutionContext"* %188(%"class.blink::Node"* %29) #12
  %190 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %189, i64 0, i32 6, i32 11
  %191 = load i32, i32* %190, align 8
  %192 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %40, align 8
  %193 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %192, null
  br i1 %193, label %194, label %207

194:                                              ; preds = %181
  %195 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %196 = bitcast i8* %195 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %196, i8 zeroext 1) #12
  %197 = getelementptr inbounds i8, i8* %195, i64 -4
  %198 = bitcast i8* %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = or i16 %199, 1
  store atomic i16 %200, i16* %198 release, align 2
  %201 = ptrtoint i8* %195 to i64
  store atomic i64 %201, i64* %41 monotonic, align 8
  %202 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %194
  %205 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %195) #12
  %206 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %40, align 8
  br label %207

207:                                              ; preds = %181, %194, %204
  %208 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %192, %181 ], [ %206, %204 ], [ %196, %194 ]
  %209 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %208, i32 %182, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext %185, i32 %191, %"class.blink::StyleSheetContents"* null) #12
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #12
  br label %225

225:                                              ; preds = %207, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %227

226:                                              ; preds = %165, %162
  br i1 %30, label %290, label %227

227:                                              ; preds = %225, %180, %226
  %228 = load i32, i32* %32, align 4
  %229 = load i32, i32* %33, align 8
  %230 = icmp eq i32 %228, %229
  br i1 %230, label %238, label %231, !prof !4

231:                                              ; preds = %227
  %232 = load i32*, i32** %34, align 8
  %233 = zext i32 %228 to i64
  %234 = getelementptr inbounds i32, i32* %232, i64 %233
  %235 = load i32, i32* %5, align 4
  store i32 %235, i32* %234, align 4
  %236 = load i32, i32* %32, align 4
  %237 = add i32 %236, 1
  store i32 %237, i32* %32, align 4
  br label %239

238:                                              ; preds = %227
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1047"* nonnull %3, i32* nonnull dereferenceable(4) %5) #12
  br label %239

239:                                              ; preds = %231, %238
  br i1 %36, label %285, label %240

240:                                              ; preds = %239
  %241 = load i32, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  %242 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 %241) #12
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %46, align 8
  %243 = load i32, i32* %5, align 4
  %244 = call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* nonnull %17, i32 %243) #12
  %245 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %39, align 8
  %246 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %245, i64 10
  %247 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %246, align 8
  %248 = call %"class.blink::ExecutionContext"* %247(%"class.blink::Node"* %29) #12
  %249 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %248, i64 0, i32 6, i32 11
  %250 = load i32, i32* %249, align 8
  %251 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %40, align 8
  %252 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %251, null
  br i1 %252, label %253, label %266

253:                                              ; preds = %240
  %254 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %255 = bitcast i8* %254 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %255, i8 zeroext 1) #12
  %256 = getelementptr inbounds i8, i8* %254, i64 -4
  %257 = bitcast i8* %256 to i16*
  %258 = load atomic i16, i16* %257 monotonic, align 2
  %259 = or i16 %258, 1
  store atomic i16 %259, i16* %257 release, align 2
  %260 = ptrtoint i8* %254 to i64
  store atomic i64 %260, i64* %41 monotonic, align 8
  %261 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %253
  %264 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %254) #12
  %265 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %40, align 8
  br label %266

266:                                              ; preds = %240, %253, %263
  %267 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %251, %240 ], [ %265, %263 ], [ %255, %253 ]
  %268 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %267, i32 %241, %"class.WTF::String"* nonnull dereferenceable(8) %11, i1 zeroext %244, i32 %250, %"class.blink::StyleSheetContents"* null) #12
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #12
  br label %284

284:                                              ; preds = %266, %280, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  br label %285

285:                                              ; preds = %78, %114, %157, %158, %239, %284
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #12
  %286 = add nuw nsw i64 %50, 1
  %287 = icmp eq i64 %286, %47
  br i1 %287, label %291, label %288

288:                                              ; preds = %285
  %289 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %18, align 8
  br label %48

290:                                              ; preds = %90, %168, %226
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #12
  br label %297

291:                                              ; preds = %285, %23
  %292 = icmp eq %"class.WTF::Vector.1047"* %3, null
  br i1 %292, label %297, label %293

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %3, i64 0, i32 0, i32 0, i32 2
  %295 = load i32, i32* %294, align 4
  %296 = icmp ne i32 %295, 0
  br label %297

297:                                              ; preds = %4, %290, %291, %293, %15
  %298 = phi i1 [ false, %15 ], [ true, %290 ], [ false, %291 ], [ %296, %293 ], [ false, %4 ]
  ret i1 %298
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12EditingStyle35ConflictsWithImplicitStyleOfElementEPNS_11HTMLElementEPS0_NS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::HTMLElement"*, %"class.blink::EditingStyle"*, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %5, align 8
  %7 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %6, null
  br i1 %7, label %54, label %8

8:                                                ; preds = %4
  %9 = tail call fastcc dereferenceable(16) %"class.blink::HeapVector.2512"* @_ZN5blinkL22HtmlElementEquivalentsEv()
  %10 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %54, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %9, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0
  %16 = icmp eq i32 %3, 0
  br label %17

17:                                               ; preds = %13, %50
  %18 = phi i32 [ 0, %13 ], [ %51, %50 ]
  %19 = tail call dereferenceable(8) %"class.blink::Member.2518"* @_ZNK3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2515"* %14, i32 %18) #12
  %20 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElementEquivalent"** %20, align 8
  %22 = bitcast %"class.blink::HTMLElementEquivalent"* %21 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)***
  %23 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*** %22, align 8
  %24 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::HTMLElementEquivalent"* %21, %"class.blink::Element"* %15) #12
  br i1 %25, label %26, label %50

26:                                               ; preds = %17
  %27 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %5, align 8
  %28 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %27, i64 0, i32 0
  %29 = bitcast %"class.blink::HTMLElementEquivalent"* %21 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)***
  %30 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %30, i64 2
  %32 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::HTMLElementEquivalent"* %21, %"class.blink::CSSPropertyValueSet"* %28) #12
  br i1 %33, label %34, label %50

34:                                               ; preds = %26
  br i1 %16, label %43, label %35

35:                                               ; preds = %34
  %36 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %5, align 8
  %37 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %36, i64 0, i32 0
  %38 = bitcast %"class.blink::HTMLElementEquivalent"* %21 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)***
  %39 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)** %39, i64 3
  %41 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::HTMLElementEquivalent"* %21, %"class.blink::HTMLElement"* %1, %"class.blink::CSSPropertyValueSet"* %37) #12
  br i1 %42, label %50, label %43

43:                                               ; preds = %35, %34
  %44 = icmp eq %"class.blink::EditingStyle"* %2, null
  br i1 %44, label %54, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.blink::HTMLElementEquivalent"* %21 to void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)***
  %47 = load void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)**, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %47, i64 4
  %49 = load void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %48, align 8
  tail call void %49(%"class.blink::HTMLElementEquivalent"* %21, %"class.blink::Element"* %15, %"class.blink::EditingStyle"* nonnull %2) #12
  br label %54

50:                                               ; preds = %35, %26, %17
  %51 = add nuw i32 %18, 1
  %52 = load i32, i32* %10, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %17, label %54

54:                                               ; preds = %50, %8, %4, %45, %43
  %55 = phi i1 [ false, %4 ], [ true, %43 ], [ true, %45 ], [ false, %8 ], [ false, %50 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(16) %"class.blink::HeapVector.2512"* @_ZN5blinkL22HtmlElementEquivalentsEv() unnamed_addr #1 {
  %1 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %2 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %3 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %4 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %5 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %6 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %7 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %8 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %9 = alloca %"class.blink::HTMLElementEquivalent"*, align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %49, !prof !3

12:                                               ; preds = %0
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %12
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEEEPhm(i64 16) #12
  %17 = getelementptr inbounds i8, i8* %16, i64 -4
  %18 = bitcast i8* %17 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  store i8* %16, i8** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2672", %"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %21 = ptrtoint i8* %16 to i64
  switch i64 %21, label %22 [
    i64 0, label %48
    i64 -1, label %48
  ]

22:                                               ; preds = %15
  %23 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %24 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %23, i64 0, i32 1
  %25 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #12
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29, !prof !4

27:                                               ; preds = %22
  %28 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %24, i8* %28) #12
  br label %29

29:                                               ; preds = %27, %22
  %30 = phi i8* [ %28, %27 ], [ %25, %22 ]
  %31 = bitcast i8* %30 to %"class.blink::ThreadState"**
  %32 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  %37 = icmp eq %"class.blink::PersistentNode"* %36, null
  br i1 %37, label %38, label %41, !prof !4

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %34, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %39) #12
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi %"class.blink::PersistentNode"* [ %40, %38 ], [ %36, %29 ]
  %43 = bitcast %"class.blink::PersistentNode"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentRegion"* %34 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast %"class.blink::PersistentNode"* %42 to %"class.blink::PersistentBase.2678"**
  store %"class.blink::PersistentBase.2678"* bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::PersistentBase.2678"*), %"class.blink::PersistentBase.2678"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %42, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv, void (%"class.blink::Visitor"*, i8*)** %47, align 8
  store %"class.blink::PersistentNode"* %42, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2672", %"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %48

48:                                               ; preds = %15, %15, %41
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents) #12
  br label %49

49:                                               ; preds = %12, %48, %0
  %50 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %51 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %50, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %50, i64 0, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %405

55:                                               ; preds = %49
  %56 = bitcast %"class.blink::HTMLElementEquivalent"** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  %57 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kBTagE to i64*), align 8
  %58 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %59 = bitcast i8* %58 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  %61 = bitcast i8* %60 to i32*
  store i32 17, i32* %61, align 8
  %62 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 57) #12
  %63 = getelementptr inbounds i8, i8* %58, i64 16
  %64 = bitcast i8* %63 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %62, %"class.blink::CSSIdentifierValue"** %64, align 8
  %65 = getelementptr inbounds i8, i8* %58, i64 24
  %66 = bitcast i8* %65 to i64*
  store i64 %57, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %58, i64 -4
  %68 = bitcast i8* %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = or i16 %69, 1
  store atomic i16 %70, i16* %68 release, align 2
  %71 = bitcast %"class.blink::HTMLElementEquivalent"** %1 to i8**
  store i8* %58, i8** %71, align 8
  %72 = load i32, i32* %52, align 4
  %73 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %50, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %90, label %76, !prof !4

76:                                               ; preds = %55
  %77 = ptrtoint i8* %58 to i64
  %78 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %78, align 8
  %80 = zext i32 %72 to i64
  %81 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %79, i64 %80
  %82 = bitcast %"class.blink::Member.2518"* %81 to i64*
  store atomic i64 %77, i64* %82 monotonic, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %76
  %86 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #12
  br label %87

87:                                               ; preds = %85, %76
  %88 = load i32, i32* %52, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %52, align 4
  br label %91

90:                                               ; preds = %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %51, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %1) #12
  br label %91

91:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  %92 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %93 = bitcast %"class.blink::HTMLElementEquivalent"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  %94 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrongTagE to i64*), align 8
  %95 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %96 = bitcast i8* %95 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds i8, i8* %95, i64 8
  %98 = bitcast i8* %97 to i32*
  store i32 17, i32* %98, align 8
  %99 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 57) #12
  %100 = getelementptr inbounds i8, i8* %95, i64 16
  %101 = bitcast i8* %100 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %99, %"class.blink::CSSIdentifierValue"** %101, align 8
  %102 = getelementptr inbounds i8, i8* %95, i64 24
  %103 = bitcast i8* %102 to i64*
  store i64 %94, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %95, i64 -4
  %105 = bitcast i8* %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = or i16 %106, 1
  store atomic i16 %107, i16* %105 release, align 2
  %108 = bitcast %"class.blink::HTMLElementEquivalent"** %2 to i8**
  store i8* %95, i8** %108, align 8
  %109 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %92, i64 0, i32 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %92, i64 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %110, %112
  br i1 %113, label %128, label %114, !prof !4

114:                                              ; preds = %91
  %115 = ptrtoint i8* %95 to i64
  %116 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %116, align 8
  %118 = zext i32 %110 to i64
  %119 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %117, i64 %118
  %120 = bitcast %"class.blink::Member.2518"* %119 to i64*
  store atomic i64 %115, i64* %120 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %114
  %124 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #12
  br label %125

125:                                              ; preds = %123, %114
  %126 = load i32, i32* %109, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %109, align 4
  br label %130

128:                                              ; preds = %91
  %129 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %92, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %129, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %2) #12
  br label %130

130:                                              ; preds = %125, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  %131 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %132 = bitcast %"class.blink::HTMLElementEquivalent"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #12
  %133 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kSubTagE to i64*), align 8
  %134 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %135 = bitcast i8* %134 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %136 = getelementptr inbounds i8, i8* %134, i64 8
  %137 = bitcast i8* %136 to i32*
  store i32 383, i32* %137, align 8
  %138 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 298) #12
  %139 = getelementptr inbounds i8, i8* %134, i64 16
  %140 = bitcast i8* %139 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %138, %"class.blink::CSSIdentifierValue"** %140, align 8
  %141 = getelementptr inbounds i8, i8* %134, i64 24
  %142 = bitcast i8* %141 to i64*
  store i64 %133, i64* %142, align 8
  %143 = getelementptr inbounds i8, i8* %134, i64 -4
  %144 = bitcast i8* %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = or i16 %145, 1
  store atomic i16 %146, i16* %144 release, align 2
  %147 = bitcast %"class.blink::HTMLElementEquivalent"** %3 to i8**
  store i8* %134, i8** %147, align 8
  %148 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %131, i64 0, i32 0, i32 0, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %131, i64 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %149, %151
  br i1 %152, label %167, label %153, !prof !4

153:                                              ; preds = %130
  %154 = ptrtoint i8* %134 to i64
  %155 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %155, align 8
  %157 = zext i32 %149 to i64
  %158 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %156, i64 %157
  %159 = bitcast %"class.blink::Member.2518"* %158 to i64*
  store atomic i64 %154, i64* %159 monotonic, align 8
  %160 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %153
  %163 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %134) #12
  br label %164

164:                                              ; preds = %162, %153
  %165 = load i32, i32* %148, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %148, align 4
  br label %169

167:                                              ; preds = %130
  %168 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %131, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %168, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %3) #12
  br label %169

169:                                              ; preds = %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #12
  %170 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %171 = bitcast %"class.blink::HTMLElementEquivalent"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #12
  %172 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kSupTagE to i64*), align 8
  %173 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %174 = bitcast i8* %173 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %174, align 8
  %175 = getelementptr inbounds i8, i8* %173, i64 8
  %176 = bitcast i8* %175 to i32*
  store i32 383, i32* %176, align 8
  %177 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 299) #12
  %178 = getelementptr inbounds i8, i8* %173, i64 16
  %179 = bitcast i8* %178 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %177, %"class.blink::CSSIdentifierValue"** %179, align 8
  %180 = getelementptr inbounds i8, i8* %173, i64 24
  %181 = bitcast i8* %180 to i64*
  store i64 %172, i64* %181, align 8
  %182 = getelementptr inbounds i8, i8* %173, i64 -4
  %183 = bitcast i8* %182 to i16*
  %184 = load atomic i16, i16* %183 monotonic, align 2
  %185 = or i16 %184, 1
  store atomic i16 %185, i16* %183 release, align 2
  %186 = bitcast %"class.blink::HTMLElementEquivalent"** %4 to i8**
  store i8* %173, i8** %186, align 8
  %187 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %170, i64 0, i32 0, i32 0, i32 0, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %170, i64 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %206, label %192, !prof !4

192:                                              ; preds = %169
  %193 = ptrtoint i8* %173 to i64
  %194 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %170, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %194, align 8
  %196 = zext i32 %188 to i64
  %197 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %195, i64 %196
  %198 = bitcast %"class.blink::Member.2518"* %197 to i64*
  store atomic i64 %193, i64* %198 monotonic, align 8
  %199 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %203, label %201

201:                                              ; preds = %192
  %202 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %173) #12
  br label %203

203:                                              ; preds = %201, %192
  %204 = load i32, i32* %187, align 4
  %205 = add i32 %204, 1
  store i32 %205, i32* %187, align 4
  br label %208

206:                                              ; preds = %169
  %207 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %170, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %207, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %4) #12
  br label %208

208:                                              ; preds = %203, %206
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #12
  %209 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %210 = bitcast %"class.blink::HTMLElementEquivalent"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #12
  %211 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kITagE to i64*), align 8
  %212 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %213 = bitcast i8* %212 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %213, align 8
  %214 = getelementptr inbounds i8, i8* %212, i64 8
  %215 = bitcast i8* %214 to i32*
  store i32 11, i32* %215, align 8
  %216 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 22) #12
  %217 = getelementptr inbounds i8, i8* %212, i64 16
  %218 = bitcast i8* %217 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %216, %"class.blink::CSSIdentifierValue"** %218, align 8
  %219 = getelementptr inbounds i8, i8* %212, i64 24
  %220 = bitcast i8* %219 to i64*
  store i64 %211, i64* %220, align 8
  %221 = getelementptr inbounds i8, i8* %212, i64 -4
  %222 = bitcast i8* %221 to i16*
  %223 = load atomic i16, i16* %222 monotonic, align 2
  %224 = or i16 %223, 1
  store atomic i16 %224, i16* %222 release, align 2
  %225 = bitcast %"class.blink::HTMLElementEquivalent"** %5 to i8**
  store i8* %212, i8** %225, align 8
  %226 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %209, i64 0, i32 0, i32 0, i32 0, i32 2
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %209, i64 0, i32 0, i32 0, i32 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %227, %229
  br i1 %230, label %245, label %231, !prof !4

231:                                              ; preds = %208
  %232 = ptrtoint i8* %212 to i64
  %233 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %209, i64 0, i32 0, i32 0, i32 0, i32 0
  %234 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %233, align 8
  %235 = zext i32 %227 to i64
  %236 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %234, i64 %235
  %237 = bitcast %"class.blink::Member.2518"* %236 to i64*
  store atomic i64 %232, i64* %237 monotonic, align 8
  %238 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %231
  %241 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #12
  br label %242

242:                                              ; preds = %240, %231
  %243 = load i32, i32* %226, align 4
  %244 = add i32 %243, 1
  store i32 %244, i32* %226, align 4
  br label %247

245:                                              ; preds = %208
  %246 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %209, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %246, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %5) #12
  br label %247

247:                                              ; preds = %242, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #12
  %248 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %249 = bitcast %"class.blink::HTMLElementEquivalent"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #12
  %250 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kEmTagE to i64*), align 8
  %251 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %252 = bitcast i8* %251 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %252, align 8
  %253 = getelementptr inbounds i8, i8* %251, i64 8
  %254 = bitcast i8* %253 to i32*
  store i32 11, i32* %254, align 8
  %255 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 22) #12
  %256 = getelementptr inbounds i8, i8* %251, i64 16
  %257 = bitcast i8* %256 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %255, %"class.blink::CSSIdentifierValue"** %257, align 8
  %258 = getelementptr inbounds i8, i8* %251, i64 24
  %259 = bitcast i8* %258 to i64*
  store i64 %250, i64* %259, align 8
  %260 = getelementptr inbounds i8, i8* %251, i64 -4
  %261 = bitcast i8* %260 to i16*
  %262 = load atomic i16, i16* %261 monotonic, align 2
  %263 = or i16 %262, 1
  store atomic i16 %263, i16* %261 release, align 2
  %264 = bitcast %"class.blink::HTMLElementEquivalent"** %6 to i8**
  store i8* %251, i8** %264, align 8
  %265 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %248, i64 0, i32 0, i32 0, i32 0, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %248, i64 0, i32 0, i32 0, i32 0, i32 1
  %268 = load i32, i32* %267, align 8
  %269 = icmp eq i32 %266, %268
  br i1 %269, label %284, label %270, !prof !4

270:                                              ; preds = %247
  %271 = ptrtoint i8* %251 to i64
  %272 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %248, i64 0, i32 0, i32 0, i32 0, i32 0
  %273 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %272, align 8
  %274 = zext i32 %266 to i64
  %275 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %273, i64 %274
  %276 = bitcast %"class.blink::Member.2518"* %275 to i64*
  store atomic i64 %271, i64* %276 monotonic, align 8
  %277 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %281, label %279

279:                                              ; preds = %270
  %280 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %251) #12
  br label %281

281:                                              ; preds = %279, %270
  %282 = load i32, i32* %265, align 4
  %283 = add i32 %282, 1
  store i32 %283, i32* %265, align 4
  br label %286

284:                                              ; preds = %247
  %285 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %248, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %285, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %6) #12
  br label %286

286:                                              ; preds = %281, %284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #12
  %287 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %288 = bitcast %"class.blink::HTMLElementEquivalent"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #12
  %289 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kUTagE to i64*), align 8
  %290 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %291 = bitcast i8* %290 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8
  %292 = getelementptr inbounds i8, i8* %290, i64 8
  %293 = bitcast i8* %292 to i32*
  store i32 354, i32* %293, align 8
  %294 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 501) #12
  %295 = getelementptr inbounds i8, i8* %290, i64 16
  %296 = bitcast i8* %295 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %294, %"class.blink::CSSIdentifierValue"** %296, align 8
  %297 = getelementptr inbounds i8, i8* %290, i64 24
  %298 = bitcast i8* %297 to i64*
  store i64 %289, i64* %298, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink28HTMLTextDecorationEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8
  %299 = getelementptr inbounds i8, i8* %290, i64 -4
  %300 = bitcast i8* %299 to i16*
  %301 = load atomic i16, i16* %300 monotonic, align 2
  %302 = or i16 %301, 1
  store atomic i16 %302, i16* %300 release, align 2
  %303 = bitcast %"class.blink::HTMLElementEquivalent"** %7 to i8**
  store i8* %290, i8** %303, align 8
  %304 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %287, i64 0, i32 0, i32 0, i32 0, i32 2
  %305 = load i32, i32* %304, align 4
  %306 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %287, i64 0, i32 0, i32 0, i32 0, i32 1
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %305, %307
  br i1 %308, label %323, label %309, !prof !4

309:                                              ; preds = %286
  %310 = ptrtoint i8* %290 to i64
  %311 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %287, i64 0, i32 0, i32 0, i32 0, i32 0
  %312 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %311, align 8
  %313 = zext i32 %305 to i64
  %314 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %312, i64 %313
  %315 = bitcast %"class.blink::Member.2518"* %314 to i64*
  store atomic i64 %310, i64* %315 monotonic, align 8
  %316 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %320, label %318

318:                                              ; preds = %309
  %319 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %290) #12
  br label %320

320:                                              ; preds = %318, %309
  %321 = load i32, i32* %304, align 4
  %322 = add i32 %321, 1
  store i32 %322, i32* %304, align 4
  br label %325

323:                                              ; preds = %286
  %324 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %287, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %324, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %7) #12
  br label %325

325:                                              ; preds = %320, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #12
  %326 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %327 = bitcast %"class.blink::HTMLElementEquivalent"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #12
  %328 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kSTagE to i64*), align 8
  %329 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %330 = bitcast i8* %329 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %330, align 8
  %331 = getelementptr inbounds i8, i8* %329, i64 8
  %332 = bitcast i8* %331 to i32*
  store i32 354, i32* %332, align 8
  %333 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 482) #12
  %334 = getelementptr inbounds i8, i8* %329, i64 16
  %335 = bitcast i8* %334 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %333, %"class.blink::CSSIdentifierValue"** %335, align 8
  %336 = getelementptr inbounds i8, i8* %329, i64 24
  %337 = bitcast i8* %336 to i64*
  store i64 %328, i64* %337, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink28HTMLTextDecorationEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %330, align 8
  %338 = getelementptr inbounds i8, i8* %329, i64 -4
  %339 = bitcast i8* %338 to i16*
  %340 = load atomic i16, i16* %339 monotonic, align 2
  %341 = or i16 %340, 1
  store atomic i16 %341, i16* %339 release, align 2
  %342 = bitcast %"class.blink::HTMLElementEquivalent"** %8 to i8**
  store i8* %329, i8** %342, align 8
  %343 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %326, i64 0, i32 0, i32 0, i32 0, i32 2
  %344 = load i32, i32* %343, align 4
  %345 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %326, i64 0, i32 0, i32 0, i32 0, i32 1
  %346 = load i32, i32* %345, align 8
  %347 = icmp eq i32 %344, %346
  br i1 %347, label %362, label %348, !prof !4

348:                                              ; preds = %325
  %349 = ptrtoint i8* %329 to i64
  %350 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %326, i64 0, i32 0, i32 0, i32 0, i32 0
  %351 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %350, align 8
  %352 = zext i32 %344 to i64
  %353 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %351, i64 %352
  %354 = bitcast %"class.blink::Member.2518"* %353 to i64*
  store atomic i64 %349, i64* %354 monotonic, align 8
  %355 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %348
  %358 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %329) #12
  br label %359

359:                                              ; preds = %357, %348
  %360 = load i32, i32* %343, align 4
  %361 = add i32 %360, 1
  store i32 %361, i32* %343, align 4
  br label %364

362:                                              ; preds = %325
  %363 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %326, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %363, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %8) #12
  br label %364

364:                                              ; preds = %359, %362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #12
  %365 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  %366 = bitcast %"class.blink::HTMLElementEquivalent"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %366) #12
  %367 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrikeTagE to i64*), align 8
  %368 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 32) #12
  %369 = bitcast i8* %368 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLElementEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %369, align 8
  %370 = getelementptr inbounds i8, i8* %368, i64 8
  %371 = bitcast i8* %370 to i32*
  store i32 354, i32* %371, align 8
  %372 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 482) #12
  %373 = getelementptr inbounds i8, i8* %368, i64 16
  %374 = bitcast i8* %373 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* %372, %"class.blink::CSSIdentifierValue"** %374, align 8
  %375 = getelementptr inbounds i8, i8* %368, i64 24
  %376 = bitcast i8* %375 to i64*
  store i64 %367, i64* %376, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink28HTMLTextDecorationEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %369, align 8
  %377 = getelementptr inbounds i8, i8* %368, i64 -4
  %378 = bitcast i8* %377 to i16*
  %379 = load atomic i16, i16* %378 monotonic, align 2
  %380 = or i16 %379, 1
  store atomic i16 %380, i16* %378 release, align 2
  %381 = bitcast %"class.blink::HTMLElementEquivalent"** %9 to i8**
  store i8* %368, i8** %381, align 8
  %382 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %365, i64 0, i32 0, i32 0, i32 0, i32 2
  %383 = load i32, i32* %382, align 4
  %384 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %365, i64 0, i32 0, i32 0, i32 0, i32 1
  %385 = load i32, i32* %384, align 8
  %386 = icmp eq i32 %383, %385
  br i1 %386, label %401, label %387, !prof !4

387:                                              ; preds = %364
  %388 = ptrtoint i8* %368 to i64
  %389 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %365, i64 0, i32 0, i32 0, i32 0, i32 0
  %390 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %389, align 8
  %391 = zext i32 %383 to i64
  %392 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %390, i64 %391
  %393 = bitcast %"class.blink::Member.2518"* %392 to i64*
  store atomic i64 %388, i64* %393 monotonic, align 8
  %394 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %398, label %396

396:                                              ; preds = %387
  %397 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %368) #12
  br label %398

398:                                              ; preds = %396, %387
  %399 = load i32, i32* %382, align 4
  %400 = add i32 %399, 1
  store i32 %400, i32* %382, align 4
  br label %403

401:                                              ; preds = %364
  %402 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %365, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"* %402, %"class.blink::HTMLElementEquivalent"** nonnull dereferenceable(8) %9) #12
  br label %403

403:                                              ; preds = %398, %401
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %366) #12
  %404 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** bitcast (%"class.WTF::StaticSingleton.2672"* @_ZZN5blinkL22HtmlElementEquivalentsEvE26s_html_element_equivalents to %"class.blink::HeapVector.2512"**), align 8
  br label %405

405:                                              ; preds = %49, %403
  %406 = phi %"class.blink::HeapVector.2512"* [ %50, %49 ], [ %404, %403 ]
  ret %"class.blink::HeapVector.2512"* %406
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12EditingStyle38ConflictsWithImplicitStyleOfAttributesEPNS_11HTMLElementE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::HTMLElement"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = tail call fastcc dereferenceable(16) %"class.blink::HeapVector.2521"* @_ZN5blinkL24HtmlAttributeEquivalentsEv()
  %8 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %47, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0
  br label %17

17:                                               ; preds = %15, %44
  %18 = phi %"class.blink::Member.2527"* [ %9, %15 ], [ %45, %44 ]
  %19 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %19, align 8
  %21 = bitcast %"class.blink::HTMLAttributeEquivalent"* %20 to i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)***
  %22 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*** %21, align 8
  %23 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::HTMLAttributeEquivalent"* %20, %"class.blink::Element"* %16) #12
  br i1 %24, label %25, label %44

25:                                               ; preds = %17
  %26 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %19, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %26, i64 0, i32 0
  %28 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %29 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %28, i64 0, i32 0
  %30 = bitcast %"class.blink::HTMLAttributeEquivalent"* %26 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)***
  %31 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %31, i64 2
  %33 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::HTMLElementEquivalent"* %27, %"class.blink::CSSPropertyValueSet"* %29) #12
  br i1 %34, label %35, label %44

35:                                               ; preds = %25
  %36 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %19, align 8
  %37 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %37, i64 0, i32 0
  %39 = bitcast %"class.blink::HTMLAttributeEquivalent"* %36 to i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)***
  %40 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)** %40, i64 3
  %42 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::HTMLAttributeEquivalent"* %36, %"class.blink::HTMLElement"* %1, %"class.blink::CSSPropertyValueSet"* %38) #12
  br i1 %43, label %44, label %47

44:                                               ; preds = %17, %25, %35
  %45 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %18, i64 1
  %46 = icmp eq %"class.blink::Member.2527"* %45, %13
  br i1 %46, label %47, label %17

47:                                               ; preds = %44, %35, %6, %2
  %48 = phi i1 [ false, %2 ], [ false, %6 ], [ false, %44 ], [ true, %35 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(16) %"class.blink::HeapVector.2521"* @_ZN5blinkL24HtmlAttributeEquivalentsEv() unnamed_addr #1 {
  %1 = alloca %"class.blink::HTMLAttributeEquivalent"*, align 8
  %2 = alloca %"class.blink::HTMLAttributeEquivalent"*, align 8
  %3 = alloca %"class.blink::HTMLFontSizeEquivalent"*, align 8
  %4 = alloca %"class.blink::HTMLAttributeEquivalent"*, align 8
  %5 = alloca %"class.blink::HTMLAttributeEquivalent"*, align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %45, !prof !3

8:                                                ; preds = %0
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents) #12
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %45, label %11

11:                                               ; preds = %8
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEEEPhm(i64 16) #12
  %13 = getelementptr inbounds i8, i8* %12, i64 -4
  %14 = bitcast i8* %13 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  store i8* %12, i8** bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2705", %"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %17 = ptrtoint i8* %12 to i64
  switch i64 %17, label %18 [
    i64 0, label %44
    i64 -1, label %44
  ]

18:                                               ; preds = %11
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #12
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !4

23:                                               ; preds = %18
  %24 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #12
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %33 = icmp eq %"class.blink::PersistentNode"* %32, null
  br i1 %33, label %34, label %37, !prof !4

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %35) #12
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi %"class.blink::PersistentNode"* [ %36, %34 ], [ %32, %25 ]
  %39 = bitcast %"class.blink::PersistentNode"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::PersistentRegion"* %30 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.blink::PersistentNode"* %38 to %"class.blink::PersistentBase.2711"**
  store %"class.blink::PersistentBase.2711"* bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to %"class.blink::PersistentBase.2711"*), %"class.blink::PersistentBase.2711"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2705", %"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %44

44:                                               ; preds = %11, %11, %37
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents) #12
  br label %45

45:                                               ; preds = %8, %44, %0
  %46 = load %"class.blink::HeapVector.2521"*, %"class.blink::HeapVector.2521"** bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to %"class.blink::HeapVector.2521"**), align 8
  %47 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %46, i64 0, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %245

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::HTMLAttributeEquivalent"** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  %53 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE to i64*), align 8
  %54 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kColorAttrE to i64*), align 8
  %55 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 40) #12
  %56 = bitcast i8* %55 to i32 (...)***
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  %58 = bitcast i8* %57 to i32*
  store i32 2, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %55, i64 16
  %60 = bitcast i8* %59 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* null, %"class.blink::CSSIdentifierValue"** %60, align 8
  %61 = getelementptr inbounds i8, i8* %55, i64 24
  %62 = bitcast i8* %61 to i64*
  store i64 %53, i64* %62, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23HTMLAttributeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %63 = getelementptr inbounds i8, i8* %55, i64 32
  %64 = bitcast i8* %63 to i64*
  store i64 %54, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %55, i64 -4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = or i16 %67, 1
  store atomic i16 %68, i16* %66 release, align 2
  %69 = bitcast %"class.blink::HTMLAttributeEquivalent"** %1 to i8**
  store i8* %55, i8** %69, align 8
  %70 = load i32, i32* %48, align 4
  %71 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %46, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %88, label %74, !prof !4

74:                                               ; preds = %51
  %75 = ptrtoint i8* %55 to i64
  %76 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %77, i64 %78
  %80 = bitcast %"class.blink::Member.2527"* %79 to i64*
  store atomic i64 %75, i64* %80 monotonic, align 8
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %74
  %84 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #12
  br label %85

85:                                               ; preds = %83, %74
  %86 = load i32, i32* %48, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %48, align 4
  br label %89

88:                                               ; preds = %51
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2524"* %47, %"class.blink::HTMLAttributeEquivalent"** nonnull dereferenceable(8) %1) #12
  br label %89

89:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  %90 = load %"class.blink::HeapVector.2521"*, %"class.blink::HeapVector.2521"** bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to %"class.blink::HeapVector.2521"**), align 8
  %91 = bitcast %"class.blink::HTMLAttributeEquivalent"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  %92 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names9kFaceAttrE to i64*), align 8
  %93 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 40) #12
  %94 = bitcast i8* %93 to i32 (...)***
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to i32*
  store i32 4, i32* %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* null, %"class.blink::CSSIdentifierValue"** %98, align 8
  %99 = getelementptr inbounds i8, i8* %93, i64 24
  %100 = bitcast i8* %99 to i64*
  store i64 %53, i64* %100, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23HTMLAttributeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %101 = getelementptr inbounds i8, i8* %93, i64 32
  %102 = bitcast i8* %101 to i64*
  store i64 %92, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %93, i64 -4
  %104 = bitcast i8* %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = or i16 %105, 1
  store atomic i16 %106, i16* %104 release, align 2
  %107 = bitcast %"class.blink::HTMLAttributeEquivalent"** %2 to i8**
  store i8* %93, i8** %107, align 8
  %108 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %90, i64 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %90, i64 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %109, %111
  br i1 %112, label %127, label %113, !prof !4

113:                                              ; preds = %89
  %114 = ptrtoint i8* %93 to i64
  %115 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %115, align 8
  %117 = zext i32 %109 to i64
  %118 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %116, i64 %117
  %119 = bitcast %"class.blink::Member.2527"* %118 to i64*
  store atomic i64 %114, i64* %119 monotonic, align 8
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %113
  %123 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %93) #12
  br label %124

124:                                              ; preds = %122, %113
  %125 = load i32, i32* %108, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %108, align 4
  br label %129

127:                                              ; preds = %89
  %128 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %90, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2524"* %128, %"class.blink::HTMLAttributeEquivalent"** nonnull dereferenceable(8) %2) #12
  br label %129

129:                                              ; preds = %124, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  %130 = load %"class.blink::HeapVector.2521"*, %"class.blink::HeapVector.2521"** bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to %"class.blink::HeapVector.2521"**), align 8
  %131 = bitcast %"class.blink::HTMLFontSizeEquivalent"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #12
  %132 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 40) #12
  %133 = load i64, i64* bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE to i64*), align 8
  %134 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE to i64*), align 8
  %135 = bitcast i8* %132 to i32 (...)***
  %136 = getelementptr inbounds i8, i8* %132, i64 8
  %137 = bitcast i8* %136 to i32*
  store i32 8, i32* %137, align 8
  %138 = getelementptr inbounds i8, i8* %132, i64 16
  %139 = bitcast i8* %138 to %"class.blink::CSSIdentifierValue"**
  store %"class.blink::CSSIdentifierValue"* null, %"class.blink::CSSIdentifierValue"** %139, align 8
  %140 = getelementptr inbounds i8, i8* %132, i64 24
  %141 = bitcast i8* %140 to i64*
  store i64 %133, i64* %141, align 8
  %142 = getelementptr inbounds i8, i8* %132, i64 32
  %143 = bitcast i8* %142 to i64*
  store i64 %134, i64* %143, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink22HTMLFontSizeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %144 = getelementptr inbounds i8, i8* %132, i64 -4
  %145 = bitcast i8* %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = or i16 %146, 1
  store atomic i16 %147, i16* %145 release, align 2
  %148 = bitcast %"class.blink::HTMLFontSizeEquivalent"** %3 to i8**
  store i8* %132, i8** %148, align 8
  %149 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %130, i64 0, i32 0, i32 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %130, i64 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %150, %152
  br i1 %153, label %168, label %154, !prof !4

154:                                              ; preds = %129
  %155 = ptrtoint i8* %132 to i64
  %156 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %156, align 8
  %158 = zext i32 %150 to i64
  %159 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %157, i64 %158
  %160 = bitcast %"class.blink::Member.2527"* %159 to i64*
  store atomic i64 %155, i64* %160 monotonic, align 8
  %161 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %154
  %164 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %132) #12
  br label %165

165:                                              ; preds = %163, %154
  %166 = load i32, i32* %149, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %149, align 4
  br label %170

168:                                              ; preds = %129
  %169 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %130, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_22HTMLFontSizeEquivalentEEEvOT_(%"class.WTF::Vector.2524"* %169, %"class.blink::HTMLFontSizeEquivalent"** nonnull dereferenceable(8) %3) #12
  br label %170

170:                                              ; preds = %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #12
  %171 = load %"class.blink::HeapVector.2521"*, %"class.blink::HeapVector.2521"** bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to %"class.blink::HeapVector.2521"**), align 8
  %172 = bitcast %"class.blink::HTMLAttributeEquivalent"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #12
  %173 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE to i64*), align 8
  %174 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 40) #12
  %175 = bitcast i8* %174 to i32 (...)***
  %176 = getelementptr inbounds i8, i8* %174, i64 8
  %177 = bitcast i8* %176 to i32*
  store i32 3, i32* %177, align 8
  %178 = getelementptr inbounds i8, i8* %174, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23HTMLAttributeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  %179 = getelementptr inbounds i8, i8* %174, i64 32
  %180 = bitcast i8* %179 to i64*
  store i64 %173, i64* %180, align 8
  %181 = getelementptr inbounds i8, i8* %174, i64 -4
  %182 = bitcast i8* %181 to i16*
  %183 = load atomic i16, i16* %182 monotonic, align 2
  %184 = or i16 %183, 1
  store atomic i16 %184, i16* %182 release, align 2
  %185 = bitcast %"class.blink::HTMLAttributeEquivalent"** %4 to i8**
  store i8* %174, i8** %185, align 8
  %186 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %171, i64 0, i32 0, i32 0, i32 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %171, i64 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i32, i32* %188, align 8
  %190 = icmp eq i32 %187, %189
  br i1 %190, label %205, label %191, !prof !4

191:                                              ; preds = %170
  %192 = ptrtoint i8* %174 to i64
  %193 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %171, i64 0, i32 0, i32 0, i32 0, i32 0
  %194 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %193, align 8
  %195 = zext i32 %187 to i64
  %196 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %194, i64 %195
  %197 = bitcast %"class.blink::Member.2527"* %196 to i64*
  store atomic i64 %192, i64* %197 monotonic, align 8
  %198 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %191
  %201 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %174) #12
  br label %202

202:                                              ; preds = %200, %191
  %203 = load i32, i32* %186, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %186, align 4
  br label %207

205:                                              ; preds = %170
  %206 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %171, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2524"* %206, %"class.blink::HTMLAttributeEquivalent"** nonnull dereferenceable(8) %4) #12
  br label %207

207:                                              ; preds = %202, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #12
  %208 = load %"class.blink::HeapVector.2521"*, %"class.blink::HeapVector.2521"** bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to %"class.blink::HeapVector.2521"**), align 8
  %209 = bitcast %"class.blink::HTMLAttributeEquivalent"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #12
  %210 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64 40) #12
  %211 = bitcast i8* %210 to i32 (...)***
  %212 = getelementptr inbounds i8, i8* %210, i64 8
  %213 = bitcast i8* %212 to i32*
  store i32 378, i32* %213, align 8
  %214 = getelementptr inbounds i8, i8* %210, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %214, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23HTMLAttributeEquivalentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %211, align 8
  %215 = getelementptr inbounds i8, i8* %210, i64 32
  %216 = bitcast i8* %215 to i64*
  store i64 %173, i64* %216, align 8
  %217 = getelementptr inbounds i8, i8* %210, i64 -4
  %218 = bitcast i8* %217 to i16*
  %219 = load atomic i16, i16* %218 monotonic, align 2
  %220 = or i16 %219, 1
  store atomic i16 %220, i16* %218 release, align 2
  %221 = bitcast %"class.blink::HTMLAttributeEquivalent"** %5 to i8**
  store i8* %210, i8** %221, align 8
  %222 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %208, i64 0, i32 0, i32 0, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %208, i64 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i32, i32* %224, align 8
  %226 = icmp eq i32 %223, %225
  br i1 %226, label %241, label %227, !prof !4

227:                                              ; preds = %207
  %228 = ptrtoint i8* %210 to i64
  %229 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %208, i64 0, i32 0, i32 0, i32 0, i32 0
  %230 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %229, align 8
  %231 = zext i32 %223 to i64
  %232 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %230, i64 %231
  %233 = bitcast %"class.blink::Member.2527"* %232 to i64*
  store atomic i64 %228, i64* %233 monotonic, align 8
  %234 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %227
  %237 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %210) #12
  br label %238

238:                                              ; preds = %236, %227
  %239 = load i32, i32* %222, align 4
  %240 = add i32 %239, 1
  store i32 %240, i32* %222, align 4
  br label %243

241:                                              ; preds = %207
  %242 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %208, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2524"* %242, %"class.blink::HTMLAttributeEquivalent"** nonnull dereferenceable(8) %5) #12
  br label %243

243:                                              ; preds = %238, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #12
  %244 = load %"class.blink::HeapVector.2521"*, %"class.blink::HeapVector.2521"** bitcast (%"class.WTF::StaticSingleton.2705"* @_ZZN5blinkL24HtmlAttributeEquivalentsEvE28s_html_attribute_equivalents to %"class.blink::HeapVector.2521"**), align 8
  br label %245

245:                                              ; preds = %45, %243
  %246 = phi %"class.blink::HeapVector.2521"* [ %46, %45 ], [ %244, %243 ]
  ret %"class.blink::HeapVector.2521"* %246
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12EditingStyle43ExtractConflictingImplicitStyleOfAttributesEPNS_11HTMLElementENS0_30ShouldPreserveWritingDirectionEPS0_RN3WTF6VectorINS_13QualifiedNameELj0ENS5_18PartitionAllocatorEEENS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::HTMLElement"*, i32, %"class.blink::EditingStyle"*, %"class.WTF::Vector.2530"* dereferenceable(16), i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %9 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %8, null
  br i1 %9, label %102, label %10

10:                                               ; preds = %6
  %11 = tail call fastcc dereferenceable(16) %"class.blink::HeapVector.2521"* @_ZN5blinkL24HtmlAttributeEquivalentsEv()
  %12 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %10
  %20 = icmp eq i32 %2, 0
  %21 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %21, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0
  %24 = icmp eq i32 %5, 1
  %25 = icmp eq %"class.blink::EditingStyle"* %3, null
  %26 = getelementptr inbounds %"class.WTF::Vector.2530", %"class.WTF::Vector.2530"* %4, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.WTF::Vector.2530", %"class.WTF::Vector.2530"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::Vector.2530", %"class.WTF::Vector.2530"* %4, i64 0, i32 0, i32 0, i32 0
  br label %33

29:                                               ; preds = %98, %10
  %30 = phi i8 [ 0, %10 ], [ %99, %98 ]
  %31 = and i8 %30, 1
  %32 = icmp ne i8 %31, 0
  br label %102

33:                                               ; preds = %19, %98
  %34 = phi %"class.blink::Member.2527"* [ %13, %19 ], [ %100, %98 ]
  %35 = phi i8 [ 0, %19 ], [ %99, %98 ]
  %36 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %34, i64 0, i32 0, i32 0
  %37 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %36, align 8
  br i1 %20, label %38, label %45

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %37, i64 0, i32 1
  %40 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %43
  br i1 %44, label %98, label %45

45:                                               ; preds = %38, %33
  %46 = bitcast %"class.blink::HTMLAttributeEquivalent"* %37 to i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)***
  %47 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*** %46, align 8
  %48 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::HTMLAttributeEquivalent"* %37, %"class.blink::Element"* %23) #12
  br i1 %49, label %50, label %98

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %37, i64 0, i32 0
  %52 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %53 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %52, i64 0, i32 0
  %54 = bitcast %"class.blink::HTMLAttributeEquivalent"* %37 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)***
  %55 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %55, i64 2
  %57 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::HTMLElementEquivalent"* %51, %"class.blink::CSSPropertyValueSet"* %53) #12
  br i1 %58, label %59, label %98

59:                                               ; preds = %50
  br i1 %24, label %60, label %68

60:                                               ; preds = %59
  %61 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %62 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %61, i64 0, i32 0
  %63 = bitcast %"class.blink::HTMLAttributeEquivalent"* %37 to i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)***
  %64 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)** %64, i64 3
  %66 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLElement"*, %"class.blink::CSSPropertyValueSet"*)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::HTMLAttributeEquivalent"* %37, %"class.blink::HTMLElement"* %1, %"class.blink::CSSPropertyValueSet"* %62) #12
  br i1 %67, label %98, label %68

68:                                               ; preds = %60, %59
  br i1 %25, label %74, label %69

69:                                               ; preds = %68
  %70 = bitcast %"class.blink::HTMLAttributeEquivalent"* %37 to void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)***
  %71 = load void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)**, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %71, i64 4
  %73 = load void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %72, align 8
  tail call void %73(%"class.blink::HTMLAttributeEquivalent"* %37, %"class.blink::Element"* %23, %"class.blink::EditingStyle"* nonnull %3) #12
  br label %74

74:                                               ; preds = %68, %69
  %75 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %37, i64 0, i32 1
  %76 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %75, align 8
  %77 = load i32, i32* %26, align 4
  %78 = load i32, i32* %27, align 8
  %79 = icmp eq i32 %77, %78
  br i1 %79, label %97, label %80, !prof !4

80:                                               ; preds = %74
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %28, align 8
  %82 = zext i32 %77 to i64
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %76, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 %82, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %84, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %86 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %84, null
  br i1 %86, label %94, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 16777216
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %93) #12
  br label %94

94:                                               ; preds = %92, %87, %80
  %95 = load i32, i32* %26, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %26, align 4
  br label %98

97:                                               ; preds = %74
  tail call void @_ZN3WTF6VectorIN5blink13QualifiedNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.2530"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %76) #12
  br label %98

98:                                               ; preds = %97, %94, %45, %50, %60, %38
  %99 = phi i8 [ %35, %38 ], [ %35, %60 ], [ %35, %50 ], [ %35, %45 ], [ 1, %94 ], [ 1, %97 ]
  %100 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %34, i64 1
  %101 = icmp eq %"class.blink::Member.2527"* %100, %17
  br i1 %101, label %29, label %33

102:                                              ; preds = %6, %29
  %103 = phi i1 [ %32, %29 ], [ false, %6 ]
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12EditingStyle35StyleIsPresentInComputedStyleOfNodeEPNS_4NodeE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %6 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %5, null
  br i1 %6, label %59, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %5, i64 0, i32 0
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %10 = bitcast i8* %9 to %"class.blink::CSSComputedStyleDeclaration"*
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %10, %"class.blink::Node"* %1, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %28

28:                                               ; preds = %7, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %29 = getelementptr inbounds i8, i8* %9, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = bitcast i8* %9 to %"class.blink::CSSStyleDeclaration"*
  %34 = bitcast %"class.blink::Node"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %35 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %35, i64 10
  %37 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %36, align 8
  %38 = call %"class.blink::ExecutionContext"* %37(%"class.blink::Node"* %1) #12
  %39 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %38, i64 0, i32 6, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL18GetPropertiesNotInEPNS_19CSSPropertyValueSetEPNS_4NodeEPNS_19CSSStyleDeclarationENS_17SecureContextModeE(%"class.blink::CSSPropertyValueSet"* %8, %"class.blink::Node"* %1, %"class.blink::CSSStyleDeclaration"* %33, i32 %40)
  %42 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %41, i64 0, i32 0
  %43 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %41, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %28
  %45 = load i32, i32* null, align 536870912
  br label %53

46:                                               ; preds = %28
  %47 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %41, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %42, i64 7, i32 0
  %52 = load i32, i32* %51, align 4
  br label %56

53:                                               ; preds = %46, %44
  %54 = phi i32 [ %45, %44 ], [ %48, %46 ]
  %55 = and i32 %54, 268435455
  br label %56

56:                                               ; preds = %50, %53
  %57 = phi i32 [ %55, %53 ], [ %52, %50 ]
  %58 = icmp eq i32 %57, 0
  br label %59

59:                                               ; preds = %2, %56
  %60 = phi i1 [ true, %2 ], [ %58, %56 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12EditingStyle35ElementIsStyledSpanOrHTMLEquivalentEPKNS_11HTMLElementE(%"class.blink::HTMLElement"*) local_unnamed_addr #1 align 2 {
  %2 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %14 = bitcast %"class.blink::Member.6"* %13 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %42, label %21

21:                                               ; preds = %1, %5, %10
  %22 = tail call fastcc dereferenceable(16) %"class.blink::HeapVector.2512"* @_ZN5blinkL22HtmlElementEquivalentsEv()
  %23 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %22, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %22, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  br label %32

29:                                               ; preds = %32
  %30 = load i32, i32* %23, align 4
  %31 = icmp ult i32 %41, %30
  br i1 %31, label %32, label %42

32:                                               ; preds = %26, %29
  %33 = phi i32 [ 0, %26 ], [ %41, %29 ]
  %34 = tail call dereferenceable(8) %"class.blink::Member.2518"* @_ZNK3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2515"* %27, i32 %33) #12
  %35 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElementEquivalent"** %35, align 8
  %37 = bitcast %"class.blink::HTMLElementEquivalent"* %36 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)***
  %38 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*** %37, align 8
  %39 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::HTMLElementEquivalent"* %36, %"class.blink::Element"* %28) #12
  %41 = add nuw i32 %33, 1
  br i1 %40, label %42, label %29

42:                                               ; preds = %32, %29, %21, %10
  %43 = phi i8 [ 1, %10 ], [ 0, %21 ], [ 1, %32 ], [ 0, %29 ]
  %44 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %45, align 8
  %47 = icmp eq %"class.blink::ElementData"* %46, null
  br i1 %47, label %69, label %48

48:                                               ; preds = %42
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %44) #12
  %49 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %45, align 8
  %50 = icmp eq %"class.blink::ElementData"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load i32, i32* null, align 536870912
  br label %62

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %49, i64 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.blink::ElementData"* %49 to %"class.blink::UniqueElementData"*
  %60 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %59, i64 0, i32 2, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  br label %66

62:                                               ; preds = %53, %51
  %63 = phi i32 [ %52, %51 ], [ %55, %53 ]
  %64 = lshr i32 %63, 1
  %65 = and i32 %64, 268435455
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi i32 [ %65, %62 ], [ %61, %58 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %42, %66
  %70 = icmp ne i8 %43, 0
  br label %195

71:                                               ; preds = %66
  %72 = tail call fastcc dereferenceable(16) %"class.blink::HeapVector.2521"* @_ZN5blinkL24HtmlAttributeEquivalentsEv()
  %73 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %72, i64 0, i32 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %74, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %71
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  br label %88

83:                                               ; preds = %107, %71
  %84 = phi i32 [ 0, %71 ], [ %108, %107 ]
  %85 = icmp ne i8 %43, 0
  %86 = icmp ne i32 %84, 0
  %87 = or i1 %85, %86
  br i1 %87, label %111, label %195

88:                                               ; preds = %80, %107
  %89 = phi %"class.blink::Member.2527"* [ %74, %80 ], [ %109, %107 ]
  %90 = phi i32 [ 0, %80 ], [ %108, %107 ]
  %91 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %89, i64 0, i32 0, i32 0
  %92 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %91, align 8
  %93 = bitcast %"class.blink::HTMLAttributeEquivalent"* %92 to i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)***
  %94 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*** %93, align 8
  %95 = load i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*)** %94, align 8
  %96 = tail call zeroext i1 %95(%"class.blink::HTMLAttributeEquivalent"* %92, %"class.blink::Element"* %44) #12
  br i1 %96, label %97, label %107

97:                                               ; preds = %88
  %98 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %91, align 8
  %99 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %98, i64 0, i32 1
  %100 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %104 = icmp ne %"class.blink::QualifiedName::QualifiedNameImpl"* %102, %103
  %105 = zext i1 %104 to i32
  %106 = add i32 %90, %105
  br label %107

107:                                              ; preds = %97, %88
  %108 = phi i32 [ %90, %88 ], [ %106, %97 ]
  %109 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %89, i64 1
  %110 = icmp eq %"class.blink::Member.2527"* %109, %78
  br i1 %110, label %83, label %88

111:                                              ; preds = %83
  %112 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %113 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %44, %"class.blink::QualifiedName"* dereferenceable(8) %112) #12
  br i1 %113, label %114, label %192

114:                                              ; preds = %111
  %115 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %45, align 8
  %116 = icmp eq %"class.blink::ElementData"* %115, null
  br i1 %116, label %190, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %115, i64 0, i32 1, i32 0, i32 0
  %119 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %118, align 8
  %120 = icmp eq %"class.blink::CSSPropertyValueSet"* %119, null
  br i1 %120, label %190, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %119, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %123, -1
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %119, i64 7, i32 0
  %127 = load i32, i32* %126, align 4
  br label %130

128:                                              ; preds = %121
  %129 = and i32 %123, 268435455
  br label %130

130:                                              ; preds = %125, %128
  %131 = phi i32 [ %129, %128 ], [ %127, %125 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %190, label %133

133:                                              ; preds = %130
  %134 = bitcast %"class.blink::HTMLElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %135 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %119, i64 4
  %136 = bitcast %"class.blink::CSSPropertyValueSet"* %135 to %"class.WTF::Vector.1831"*
  %137 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %119, i64 2
  %138 = bitcast %"class.blink::CSSPropertyValueSet"* %137 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %139 = zext i32 %131 to i64
  br label %140

140:                                              ; preds = %187, %133
  %141 = phi i64 [ 0, %133 ], [ %188, %187 ]
  %142 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %134, align 8
  %143 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %142, i64 10
  %144 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %143, align 8
  %145 = tail call %"class.blink::ExecutionContext"* %144(%"class.blink::Node"* %3) #12
  %146 = load i32, i32* %122, align 4
  %147 = icmp sgt i32 %146, -1
  br i1 %147, label %152, label %148

148:                                              ; preds = %140
  %149 = trunc i64 %141 to i32
  %150 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %136, i32 %149) #12
  %151 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %150, i64 0, i32 0
  br label %158

152:                                              ; preds = %140
  %153 = and i32 %146, 268435455
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %138, i64 %154
  %156 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %155 to %"struct.blink::CSSPropertyValueMetadata"*
  %157 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %156, i64 %141
  br label %158

158:                                              ; preds = %148, %152
  %159 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %157, %152 ], [ %151, %148 ]
  %160 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %159) #12
  %161 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties to i8*) acquire, align 8
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %168, !prof !3

163:                                              ; preds = %158
  %164 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties) #12
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %163
  %167 = tail call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %145) #12
  store %"class.WTF::Vector.2507"* %167, %"class.WTF::Vector.2507"** @_ZZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties) #12
  br label %168

168:                                              ; preds = %166, %163, %158
  %169 = load %"class.WTF::Vector.2507"*, %"class.WTF::Vector.2507"** @_ZZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties, align 8
  %170 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %169, i64 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %195, label %178

173:                                              ; preds = %178
  %174 = load %"class.WTF::Vector.2507"*, %"class.WTF::Vector.2507"** @_ZZN5blinkL17IsEditingPropertyEPNS_16ExecutionContextENS_13CSSPropertyIDEE10properties, align 8
  %175 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %174, i64 0, i32 0, i32 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = icmp ult i32 %186, %176
  br i1 %177, label %178, label %195

178:                                              ; preds = %168, %173
  %179 = phi %"class.WTF::Vector.2507"* [ %174, %173 ], [ %169, %168 ]
  %180 = phi i32 [ %186, %173 ], [ 0, %168 ]
  %181 = tail call dereferenceable(8) %"class.blink::CSSProperty"** @_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2507"* %179, i32 %180) #12
  %182 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %182, i64 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, %160
  %186 = add nuw i32 %180, 1
  br i1 %185, label %187, label %173

187:                                              ; preds = %178
  %188 = add nuw nsw i64 %141, 1
  %189 = icmp eq i64 %188, %139
  br i1 %189, label %190, label %140

190:                                              ; preds = %187, %130, %114, %117
  %191 = add i32 %84, 1
  br label %192

192:                                              ; preds = %190, %111
  %193 = phi i32 [ %191, %190 ], [ %84, %111 ]
  %194 = icmp uge i32 %193, %67
  br label %195

195:                                              ; preds = %168, %173, %192, %83, %69
  %196 = phi i1 [ %70, %69 ], [ %194, %192 ], [ false, %83 ], [ false, %173 ], [ false, %168 ]
  ret i1 %196
}

declare zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle16PrepareToApplyAtERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS0_30ShouldPreserveWritingDirectionE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::Color", align 4
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::Color", align 4
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::Color", align 4
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::Color", align 4
  %11 = alloca %"class.WTF::String", align 8
  %12 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %14 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %13, null
  br i1 %14, label %339, label %15

15:                                               ; preds = %3
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #12
  %17 = bitcast i8* %16 to %"class.blink::EditingStyle"*
  %18 = getelementptr inbounds i8, i8* %16, i64 20
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 24
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 17, i1 false) #12
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  tail call void @_ZN5blink12EditingStyle4InitEPNS_4NodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %17, %"class.blink::Node"* %22, i32 2) #12
  %23 = getelementptr inbounds i8, i8* %16, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = bitcast i8* %16 to %"class.blink::MutableCSSPropertyValueSet"**
  %28 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %28, i64 0, i32 0
  %30 = icmp eq i32 %2, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %15
  %32 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %33 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %32, i64 0, i32 0
  %34 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %33, i32 378) #12
  %35 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %36 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %35, i64 0, i32 0
  %37 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %36, i32 3) #12
  br label %38

38:                                               ; preds = %31, %15
  %39 = phi %"class.blink::CSSValue"* [ %34, %31 ], [ null, %15 ]
  %40 = phi %"class.blink::CSSValue"* [ %37, %31 ], [ null, %15 ]
  %41 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %41, %"class.blink::CSSPropertyValueSet"* %29) #12
  %42 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %43 = getelementptr inbounds i8, i8* %16, i64 8
  %44 = bitcast i8* %43 to %"class.blink::Node"**
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %28, null
  br i1 %46, label %145, label %47

47:                                               ; preds = %38
  %48 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %29, i32 349) #12
  %49 = icmp eq %"class.blink::CSSValue"* %48, null
  br i1 %49, label %145, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %48, i64 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 2
  br i1 %53, label %54, label %145

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %48, i64 1, i32 1
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %145 [
    i32 310, label %62
    i32 314, label %62
    i32 311, label %58
    i32 306, label %59
    i32 312, label %59
    i32 307, label %60
    i32 313, label %60
    i32 506, label %61
    i32 507, label %61
  ]

58:                                               ; preds = %54
  br label %62

59:                                               ; preds = %54, %54
  br label %62

60:                                               ; preds = %54, %54
  br label %62

61:                                               ; preds = %54, %54
  br label %62

62:                                               ; preds = %61, %60, %59, %58, %54, %54
  %63 = phi i32 [ 310, %54 ], [ 310, %54 ], [ 311, %58 ], [ 306, %59 ], [ 307, %60 ], [ %57, %61 ]
  %64 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %42, null
  br i1 %64, label %145, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %42, i64 0, i32 0
  %67 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %66, i32 349) #12
  %68 = icmp eq %"class.blink::CSSValue"* %67, null
  br i1 %68, label %145, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %67, i64 0, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 2
  br i1 %72, label %73, label %145

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %67, i64 1, i32 1
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  switch i32 %76, label %145 [
    i32 310, label %81
    i32 314, label %81
    i32 311, label %77
    i32 306, label %78
    i32 312, label %78
    i32 307, label %79
    i32 313, label %79
    i32 506, label %80
    i32 507, label %80
  ]

77:                                               ; preds = %73
  br label %81

78:                                               ; preds = %73, %73
  br label %81

79:                                               ; preds = %73, %73
  br label %81

80:                                               ; preds = %73, %73
  br label %81

81:                                               ; preds = %80, %79, %78, %77, %73, %73
  %82 = phi i32 [ 310, %73 ], [ 310, %73 ], [ 311, %77 ], [ 306, %78 ], [ 307, %79 ], [ %76, %80 ]
  %83 = icmp eq i32 %82, %63
  br i1 %83, label %142, label %84

84:                                               ; preds = %81
  %85 = or i32 %63, 1
  %86 = icmp eq i32 %85, 507
  br i1 %86, label %87, label %113

87:                                               ; preds = %84
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %89 = bitcast %"class.blink::Node"* %45 to %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)***
  %90 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %90, i64 71
  %92 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %91, align 8
  %93 = tail call %"class.blink::ComputedStyle"* %92(%"class.blink::Node"* %45, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %88) #12
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 9
  %95 = bitcast [20 x i8]* %94 to i160*
  %96 = load i160, i160* %95, align 8
  %97 = lshr i160 %96, 115
  %98 = trunc i160 %97 to i8
  %99 = and i8 %98, 1
  switch i32 %63, label %103 [
    i32 310, label %110
    i32 314, label %110
    i32 311, label %100
    i32 306, label %101
    i32 312, label %101
    i32 307, label %102
    i32 313, label %102
    i32 506, label %104
    i32 507, label %107
  ]

100:                                              ; preds = %87
  br label %110

101:                                              ; preds = %87, %87
  br label %110

102:                                              ; preds = %87, %87
  br label %110

103:                                              ; preds = %87
  br label %110

104:                                              ; preds = %87
  %105 = icmp eq i8 %99, 0
  %106 = select i1 %105, i32 306, i32 307
  br label %110

107:                                              ; preds = %87
  %108 = icmp eq i8 %99, 0
  %109 = select i1 %108, i32 307, i32 306
  br label %110

110:                                              ; preds = %107, %104, %103, %102, %101, %100, %87, %87
  %111 = phi i32 [ %109, %107 ], [ %106, %104 ], [ 310, %87 ], [ 310, %87 ], [ 311, %100 ], [ 306, %101 ], [ 307, %102 ], [ 0, %103 ]
  %112 = icmp eq i32 %111, %82
  br i1 %112, label %142, label %145

113:                                              ; preds = %84
  %114 = or i32 %82, 1
  %115 = icmp eq i32 %114, 507
  br i1 %115, label %116, label %145

116:                                              ; preds = %113
  %117 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %118 = bitcast %"class.blink::Node"* %45 to %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)***
  %119 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %119, i64 71
  %121 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %120, align 8
  %122 = tail call %"class.blink::ComputedStyle"* %121(%"class.blink::Node"* %45, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %117) #12
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = lshr i160 %125, 115
  %127 = trunc i160 %126 to i8
  %128 = and i8 %127, 1
  switch i32 %82, label %132 [
    i32 310, label %139
    i32 314, label %139
    i32 311, label %129
    i32 306, label %130
    i32 312, label %130
    i32 307, label %131
    i32 313, label %131
    i32 506, label %133
    i32 507, label %136
  ]

129:                                              ; preds = %116
  br label %139

130:                                              ; preds = %116, %116
  br label %139

131:                                              ; preds = %116, %116
  br label %139

132:                                              ; preds = %116
  br label %139

133:                                              ; preds = %116
  %134 = icmp eq i8 %128, 0
  %135 = select i1 %134, i32 306, i32 307
  br label %139

136:                                              ; preds = %116
  %137 = icmp eq i8 %128, 0
  %138 = select i1 %137, i32 307, i32 306
  br label %139

139:                                              ; preds = %116, %116, %129, %130, %131, %132, %133, %136
  %140 = phi i32 [ %138, %136 ], [ %135, %133 ], [ 310, %116 ], [ 310, %116 ], [ 311, %129 ], [ 306, %130 ], [ 307, %131 ], [ 0, %132 ]
  %141 = icmp eq i32 %140, %63
  br i1 %141, label %142, label %145

142:                                              ; preds = %81, %110, %139
  %143 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %144 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %143, i32 349, %"class.WTF::String"* null) #12
  br label %145

145:                                              ; preds = %65, %69, %62, %47, %50, %38, %73, %54, %113, %110, %142, %139
  %146 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %147 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %146, i64 0, i32 0
  %148 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %147, i32 2) #12
  %149 = icmp eq %"class.blink::CSSValue"* %148, null
  br i1 %149, label %184, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %148, i64 0, i32 2
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 3
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = icmp ult i8 %152, 3
  br i1 %155, label %160, label %184

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %148, i64 1, i32 1
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 4
  br label %184

160:                                              ; preds = %154
  %161 = bitcast %"class.blink::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #12
  %162 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  store i32 0, i32* %162, align 4
  %163 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #12
  %164 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %148) #12
  %165 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %164, %"class.WTF::StringImpl"** %165, align 8
  %166 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false) #12
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #12
  br label %182

182:                                              ; preds = %181, %178, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #12
  %183 = load i32, i32* %162, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #12
  br label %184

184:                                              ; preds = %145, %154, %156, %182
  %185 = phi i32 [ %159, %156 ], [ %183, %182 ], [ 0, %145 ], [ 0, %154 ]
  %186 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %29, i32 2) #12
  %187 = icmp eq %"class.blink::CSSValue"* %186, null
  br i1 %187, label %222, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %186, i64 0, i32 2
  %190 = load i8, i8* %189, align 1
  %191 = icmp eq i8 %190, 3
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = icmp ult i8 %190, 3
  br i1 %193, label %198, label %222

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %186, i64 1, i32 1
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  br label %222

198:                                              ; preds = %192
  %199 = bitcast %"class.blink::Color"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #12
  %200 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %4, i64 0, i32 0
  store i32 0, i32* %200, align 4
  %201 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #12
  %202 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %186) #12
  %203 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %202, %"class.WTF::StringImpl"** %203, align 8
  %204 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false) #12
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #12
  br label %220

220:                                              ; preds = %219, %216, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #12
  %221 = load i32, i32* %200, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #12
  br label %222

222:                                              ; preds = %184, %192, %194, %220
  %223 = phi i32 [ %197, %194 ], [ %221, %220 ], [ 0, %184 ], [ 0, %192 ]
  %224 = icmp eq i32 %185, %223
  br i1 %224, label %225, label %228

225:                                              ; preds = %222
  %226 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %227 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %226, i32 2, %"class.WTF::String"* null) #12
  br label %228

228:                                              ; preds = %225, %222
  %229 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %230 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %229, i64 0, i32 0
  %231 = call zeroext i1 @_ZN5blink21EditingStyleUtilities29HasTransparentBackgroundColorEPNS_19CSSPropertyValueSetE(%"class.blink::CSSPropertyValueSet"* %230) #12
  br i1 %231, label %313, label %232

232:                                              ; preds = %228
  %233 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %234 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %233, i64 0, i32 0
  %235 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %234, i32 52) #12
  %236 = icmp eq %"class.blink::CSSValue"* %235, null
  br i1 %236, label %271, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %235, i64 0, i32 2
  %239 = load i8, i8* %238, align 1
  %240 = icmp eq i8 %239, 3
  br i1 %240, label %243, label %241

241:                                              ; preds = %237
  %242 = icmp ult i8 %239, 3
  br i1 %242, label %247, label %271

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %235, i64 1, i32 1
  %245 = bitcast i8* %244 to i32*
  %246 = load i32, i32* %245, align 4
  br label %271

247:                                              ; preds = %241
  %248 = bitcast %"class.blink::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #12
  %249 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %8, i64 0, i32 0
  store i32 0, i32* %249, align 4
  %250 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #12
  %251 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %235) #12
  %252 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %251, %"class.WTF::StringImpl"** %252, align 8
  %253 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false) #12
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %247
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #12
  br label %269

269:                                              ; preds = %268, %265, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #12
  %270 = load i32, i32* %249, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #12
  br label %271

271:                                              ; preds = %232, %241, %243, %269
  %272 = phi i32 [ %246, %243 ], [ %270, %269 ], [ 0, %232 ], [ 0, %241 ]
  %273 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #12
  %274 = call %"class.blink::CSSValue"* @_ZN5blink21EditingStyleUtilities28BackgroundColorValueInEffectEPNS_4NodeE(%"class.blink::Node"* %273) #12
  %275 = icmp eq %"class.blink::CSSValue"* %274, null
  br i1 %275, label %310, label %276

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %274, i64 0, i32 2
  %278 = load i8, i8* %277, align 1
  %279 = icmp eq i8 %278, 3
  br i1 %279, label %282, label %280

280:                                              ; preds = %276
  %281 = icmp ult i8 %278, 3
  br i1 %281, label %286, label %310

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %274, i64 1, i32 1
  %284 = bitcast i8* %283 to i32*
  %285 = load i32, i32* %284, align 4
  br label %310

286:                                              ; preds = %280
  %287 = bitcast %"class.blink::Color"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %287) #12
  %288 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %10, i64 0, i32 0
  store i32 0, i32* %288, align 4
  %289 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #12
  %290 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %274) #12
  %291 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %290, %"class.WTF::StringImpl"** %291, align 8
  %292 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11, i1 zeroext false) #12
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %286
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #12
  br label %308

308:                                              ; preds = %307, %304, %286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #12
  %309 = load i32, i32* %288, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %287) #12
  br label %310

310:                                              ; preds = %271, %280, %282, %308
  %311 = phi i32 [ %285, %282 ], [ %309, %308 ], [ 0, %271 ], [ 0, %280 ]
  %312 = icmp eq i32 %272, %311
  br i1 %312, label %313, label %316

313:                                              ; preds = %228, %310
  %314 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %315 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %314, i32 52, %"class.WTF::String"* null) #12
  br label %316

316:                                              ; preds = %313, %310
  %317 = icmp eq %"class.blink::CSSValue"* %39, null
  br i1 %317, label %339, label %318

318:                                              ; preds = %316
  %319 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %39, i64 0, i32 2
  %320 = load i8, i8* %319, align 1
  %321 = icmp eq i8 %320, 2
  br i1 %321, label %322, label %339

322:                                              ; preds = %318
  %323 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %324 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %39, i64 1, i32 1
  %325 = bitcast i8* %324 to i32*
  %326 = load i32, i32* %325, align 4
  %327 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"* %323, i32 378, i32 %326, i1 zeroext false) #12
  %328 = icmp eq %"class.blink::CSSValue"* %40, null
  br i1 %328, label %339, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %40, i64 0, i32 2
  %331 = load i8, i8* %330, align 1
  %332 = icmp eq i8 %331, 2
  br i1 %332, label %333, label %339

333:                                              ; preds = %329
  %334 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %335 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %40, i64 1, i32 1
  %336 = bitcast i8* %335 to i32*
  %337 = load i32, i32* %336, align 4
  %338 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"* %334, i32 3, i32 %337, i1 zeroext false) #12
  br label %339

339:                                              ; preds = %329, %318, %3, %322, %316, %333
  ret void
}

declare zeroext i1 @_ZN5blink21EditingStyleUtilities29HasTransparentBackgroundColorEPNS_19CSSPropertyValueSetE(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle16MergeTypingStyleEPNS_8DocumentE(%"class.blink::EditingStyle"*, %"class.blink::Document"*) local_unnamed_addr #1 align 2 {
  %3 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #12
  %4 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %3, i64 0, i32 13, i32 0, i32 0
  %5 = load %"class.blink::Editor"*, %"class.blink::Editor"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Editor", %"class.blink::Editor"* %5, i64 0, i32 12, i32 0, i32 0
  %7 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %6, align 8
  %8 = icmp eq %"class.blink::EditingStyle"* %7, null
  %9 = icmp eq %"class.blink::EditingStyle"* %7, %0
  %10 = or i1 %8, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %13, i64 0, i32 0
  tail call void @_ZN5blink12EditingStyle10MergeStyleEPKNS_19CSSPropertyValueSetENS0_23CSSPropertyOverrideModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSPropertyValueSet"* %14, i32 0)
  br label %15

15:                                               ; preds = %2, %11
  ret void
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle10MergeStyleEPKNS_19CSSPropertyValueSetENS0_23CSSPropertyOverrideModeE(%"class.blink::EditingStyle"* nocapture, %"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSPropertyValue", align 8
  %5 = icmp eq %"class.blink::CSSPropertyValueSet"* %1, null
  br i1 %5, label %415, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %9 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %8, null
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* nonnull %1) #12
  %12 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %11 to i64
  %13 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %415, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %11 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #12
  br label %415

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 7, i32 0
  %25 = load i32, i32* %24, align 4
  br label %28

26:                                               ; preds = %19
  %27 = and i32 %21, 268435455
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i32 [ %27, %26 ], [ %25, %23 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %415, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 4
  %33 = bitcast %"class.blink::CSSPropertyValueSet"* %32 to %"class.WTF::Vector.1831"*
  %34 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 2
  %35 = bitcast %"class.blink::CSSPropertyValueSet"* %34 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %36 = bitcast %"class.blink::CSSPropertyValueSet"* %34 to %"class.blink::Member.1834"*
  %37 = icmp ne i32 %2, 0
  %38 = icmp ne i32 %2, 1
  %39 = bitcast %"class.blink::CSSPropertyValue"* %4 to i8*
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.blink::CSSValue"** %42 to i64*
  %44 = zext i32 %29 to i64
  br label %45

45:                                               ; preds = %412, %31
  %46 = phi i32 [ %21, %31 ], [ %414, %412 ]
  %47 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %8, %31 ], [ %413, %412 ]
  %48 = phi i64 [ 0, %31 ], [ %410, %412 ]
  %49 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %47, i64 0, i32 0
  %50 = icmp sgt i32 %46, -1
  br i1 %50, label %55, label %51

51:                                               ; preds = %45
  %52 = trunc i64 %48 to i32
  %53 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %52) #12
  %54 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %53, i64 0, i32 0
  br label %61

55:                                               ; preds = %45
  %56 = and i32 %46, 268435455
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %35, i64 %57
  %59 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %58 to %"struct.blink::CSSPropertyValueMetadata"*
  %60 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %59, i64 %48
  br label %61

61:                                               ; preds = %55, %51
  %62 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %60, %55 ], [ %54, %51 ]
  %63 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %62) #12
  %64 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %49, i32 %63) #12
  %65 = load i32, i32* %20, align 4
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %67, label %75

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %36, i64 %48, i32 0, i32 0
  %69 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %69, i64 0, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp ugt i8 %71, 51
  %73 = bitcast %"class.blink::CSSValue"* %69 to %"class.blink::CSSValueList"*
  %74 = select i1 %72, %"class.blink::CSSValueList"* %73, %"class.blink::CSSValueList"* null
  br label %91

75:                                               ; preds = %61
  %76 = trunc i64 %48 to i32
  %77 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %76) #12
  %78 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %77, i64 0, i32 1, i32 0, i32 0
  %79 = load i32, i32* %20, align 4
  %80 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %78, align 8
  %81 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %80, i64 0, i32 2
  %82 = load i8, i8* %81, align 1
  %83 = icmp ugt i8 %82, 51
  %84 = bitcast %"class.blink::CSSValue"* %80 to %"class.blink::CSSValueList"*
  %85 = select i1 %83, %"class.blink::CSSValueList"* %84, %"class.blink::CSSValueList"* null
  %86 = icmp sgt i32 %79, -1
  br i1 %86, label %91, label %87

87:                                               ; preds = %75
  %88 = trunc i64 %48 to i32
  %89 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %88) #12
  %90 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %89, i64 0, i32 0
  br label %99

91:                                               ; preds = %67, %75
  %92 = phi %"class.blink::CSSValueList"* [ %74, %67 ], [ %85, %75 ]
  %93 = phi i32 [ %65, %67 ], [ %79, %75 ]
  %94 = and i32 %93, 268435455
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %35, i64 %95
  %97 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %96 to %"struct.blink::CSSPropertyValueMetadata"*
  %98 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %97, i64 %48
  br label %99

99:                                               ; preds = %87, %91
  %100 = phi %"class.blink::CSSValueList"* [ %92, %91 ], [ %85, %87 ]
  %101 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %98, %91 ], [ %90, %87 ]
  %102 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %101) #12
  %103 = icmp eq i32 %102, 354
  br i1 %103, label %121, label %104

104:                                              ; preds = %99
  %105 = load i32, i32* %20, align 4
  %106 = icmp sgt i32 %105, -1
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = trunc i64 %48 to i32
  %109 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %108) #12
  %110 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %109, i64 0, i32 0
  br label %117

111:                                              ; preds = %104
  %112 = and i32 %105, 268435455
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %35, i64 %113
  %115 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %114 to %"struct.blink::CSSPropertyValueMetadata"*
  %116 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %115, i64 %48
  br label %117

117:                                              ; preds = %107, %111
  %118 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %116, %111 ], [ %110, %107 ]
  %119 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %118) #12
  %120 = icmp eq i32 %119, 423
  br i1 %120, label %121, label %305

121:                                              ; preds = %117, %99
  %122 = icmp ne %"class.blink::CSSValueList"* %100, null
  %123 = icmp ne %"class.blink::CSSValue"* %64, null
  %124 = and i1 %123, %122
  br i1 %124, label %125, label %305

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 0, i32 2
  %127 = load i8, i8* %126, align 1
  %128 = icmp ult i8 %127, 52
  %129 = bitcast %"class.blink::CSSValue"* %64 to %"class.blink::CSSValueList"*
  br i1 %128, label %305, label %130

130:                                              ; preds = %125
  %131 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline to i8*) acquire, align 8
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %166, !prof !3

133:                                              ; preds = %130
  %134 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline) #12
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %166, label %136

136:                                              ; preds = %133
  %137 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 501) #12
  store %"class.blink::CSSIdentifierValue"* %137, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline to %"class.blink::CSSIdentifierValue"**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %138 = ptrtoint %"class.blink::CSSIdentifierValue"* %137 to i64
  switch i64 %138, label %139 [
    i64 0, label %165
    i64 -1, label %165
  ]

139:                                              ; preds = %136
  %140 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %141 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %140, i64 0, i32 1
  %142 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %141) #12
  %143 = icmp eq i8* %142, null
  br i1 %143, label %144, label %146, !prof !4

144:                                              ; preds = %139
  %145 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %141, i8* %145) #12
  br label %146

146:                                              ; preds = %144, %139
  %147 = phi i8* [ %145, %144 ], [ %142, %139 ]
  %148 = bitcast i8* %147 to %"class.blink::ThreadState"**
  %149 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %149, i64 0, i32 3, i32 0, i32 0, i32 0
  %151 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %152, align 8
  %154 = icmp eq %"class.blink::PersistentNode"* %153, null
  br i1 %154, label %155, label %158, !prof !4

155:                                              ; preds = %146
  %156 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %151, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %156) #12
  %157 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %152, align 8
  br label %158

158:                                              ; preds = %155, %146
  %159 = phi %"class.blink::PersistentNode"* [ %157, %155 ], [ %153, %146 ]
  %160 = bitcast %"class.blink::PersistentNode"* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.blink::PersistentRegion"* %151 to i64*
  store i64 %161, i64* %162, align 8
  %163 = bitcast %"class.blink::PersistentNode"* %159 to %"class.blink::PersistentBase.2538"**
  store %"class.blink::PersistentBase.2538"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline to %"class.blink::PersistentBase.2538"*), %"class.blink::PersistentBase.2538"** %163, align 8
  %164 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %159, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18CSSIdentifierValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %164, align 8
  store %"class.blink::PersistentNode"* %159, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %165

165:                                              ; preds = %158, %136, %136
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline) #12
  br label %166

166:                                              ; preds = %165, %133, %130
  %167 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through to i8*) acquire, align 8
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %202, !prof !3

169:                                              ; preds = %166
  %170 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through) #12
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %202, label %172

172:                                              ; preds = %169
  %173 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 482) #12
  store %"class.blink::CSSIdentifierValue"* %173, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through to %"class.blink::CSSIdentifierValue"**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %174 = ptrtoint %"class.blink::CSSIdentifierValue"* %173 to i64
  switch i64 %174, label %175 [
    i64 0, label %201
    i64 -1, label %201
  ]

175:                                              ; preds = %172
  %176 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %177 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %176, i64 0, i32 1
  %178 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %177) #12
  %179 = icmp eq i8* %178, null
  br i1 %179, label %180, label %182, !prof !4

180:                                              ; preds = %175
  %181 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %177, i8* %181) #12
  br label %182

182:                                              ; preds = %180, %175
  %183 = phi i8* [ %181, %180 ], [ %178, %175 ]
  %184 = bitcast i8* %183 to %"class.blink::ThreadState"**
  %185 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %187 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %188, align 8
  %190 = icmp eq %"class.blink::PersistentNode"* %189, null
  br i1 %190, label %191, label %194, !prof !4

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %187, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %192) #12
  %193 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %188, align 8
  br label %194

194:                                              ; preds = %191, %182
  %195 = phi %"class.blink::PersistentNode"* [ %193, %191 ], [ %189, %182 ]
  %196 = bitcast %"class.blink::PersistentNode"* %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.blink::PersistentRegion"* %187 to i64*
  store i64 %197, i64* %198, align 8
  %199 = bitcast %"class.blink::PersistentNode"* %195 to %"class.blink::PersistentBase.2538"**
  store %"class.blink::PersistentBase.2538"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through to %"class.blink::PersistentBase.2538"*), %"class.blink::PersistentBase.2538"** %199, align 8
  %200 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %195, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18CSSIdentifierValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %200, align 8
  store %"class.blink::PersistentNode"* %195, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %201

201:                                              ; preds = %194, %172, %172
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through) #12
  br label %202

202:                                              ; preds = %201, %169, %166
  %203 = call %"class.blink::CSSValueList"* @_ZNK5blink12CSSValueList4CopyEv(%"class.blink::CSSValueList"* nonnull %129) #12
  %204 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline to %"class.blink::CSSIdentifierValue"**), align 8
  %205 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %204, i64 0, i32 0
  %206 = call zeroext i1 @_ZNK5blink12CSSValueList8HasValueERKNS_8CSSValueE(%"class.blink::CSSValueList"* nonnull %100, %"class.blink::CSSValue"* dereferenceable(3) %205) #12
  br i1 %206, label %207, label %236

207:                                              ; preds = %202
  %208 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline to %"class.blink::CSSIdentifierValue"**), align 8
  %209 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %208, i64 0, i32 0
  %210 = call zeroext i1 @_ZNK5blink12CSSValueList8HasValueERKNS_8CSSValueE(%"class.blink::CSSValueList"* nonnull %129, %"class.blink::CSSValue"* dereferenceable(3) %209) #12
  br i1 %210, label %236, label %211

211:                                              ; preds = %207
  %212 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E11s_underline to %"class.blink::CSSIdentifierValue"**), align 8
  %213 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %203, i64 0, i32 1, i32 0
  %214 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %203, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %203, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %217 = load i32, i32* %216, align 8
  %218 = icmp eq i32 %215, %217
  br i1 %218, label %234, label %219, !prof !4

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %213, i64 0, i32 0, i32 0, i32 0
  %221 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %220, align 8
  %222 = zext i32 %215 to i64
  %223 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %221, i64 %222
  %224 = ptrtoint %"class.blink::CSSIdentifierValue"* %212 to i64
  %225 = bitcast %"class.blink::Member.1834"* %223 to i64*
  store atomic i64 %224, i64* %225 monotonic, align 8
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %219
  %229 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %212, i64 0, i32 0, i32 0
  %230 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %229) #12
  br label %231

231:                                              ; preds = %228, %219
  %232 = load i32, i32* %214, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %214, align 4
  br label %236

234:                                              ; preds = %211
  %235 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %212, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2502"* %213, %"class.blink::CSSValue"* dereferenceable(3) %235) #12
  br label %236

236:                                              ; preds = %234, %231, %207, %202
  %237 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through to %"class.blink::CSSIdentifierValue"**), align 8
  %238 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %237, i64 0, i32 0
  %239 = call zeroext i1 @_ZNK5blink12CSSValueList8HasValueERKNS_8CSSValueE(%"class.blink::CSSValueList"* nonnull %100, %"class.blink::CSSValue"* dereferenceable(3) %238) #12
  br i1 %239, label %240, label %269

240:                                              ; preds = %236
  %241 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through to %"class.blink::CSSIdentifierValue"**), align 8
  %242 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %241, i64 0, i32 0
  %243 = call zeroext i1 @_ZNK5blink12CSSValueList8HasValueERKNS_8CSSValueE(%"class.blink::CSSValueList"* nonnull %129, %"class.blink::CSSValue"* dereferenceable(3) %242) #12
  br i1 %243, label %269, label %244

244:                                              ; preds = %240
  %245 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL25MergeTextDecorationValuesERKNS_12CSSValueListES2_E14s_line_through to %"class.blink::CSSIdentifierValue"**), align 8
  %246 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %203, i64 0, i32 1, i32 0
  %247 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %203, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %203, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %250 = load i32, i32* %249, align 8
  %251 = icmp eq i32 %248, %250
  br i1 %251, label %267, label %252, !prof !4

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %246, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %253, align 8
  %255 = zext i32 %248 to i64
  %256 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %254, i64 %255
  %257 = ptrtoint %"class.blink::CSSIdentifierValue"* %245 to i64
  %258 = bitcast %"class.blink::Member.1834"* %256 to i64*
  store atomic i64 %257, i64* %258 monotonic, align 8
  %259 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %264, label %261

261:                                              ; preds = %252
  %262 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %245, i64 0, i32 0, i32 0
  %263 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %262) #12
  br label %264

264:                                              ; preds = %261, %252
  %265 = load i32, i32* %247, align 4
  %266 = add i32 %265, 1
  store i32 %266, i32* %247, align 4
  br label %269

267:                                              ; preds = %244
  %268 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %245, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2502"* %246, %"class.blink::CSSValue"* dereferenceable(3) %268) #12
  br label %269

269:                                              ; preds = %267, %264, %240, %236
  %270 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %271 = load i32, i32* %20, align 4
  %272 = icmp sgt i32 %271, -1
  br i1 %272, label %277, label %273

273:                                              ; preds = %269
  %274 = trunc i64 %48 to i32
  %275 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %274) #12
  %276 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %275, i64 0, i32 0
  br label %283

277:                                              ; preds = %269
  %278 = and i32 %271, 268435455
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %35, i64 %279
  %281 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %280 to %"struct.blink::CSSPropertyValueMetadata"*
  %282 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %281, i64 %48
  br label %283

283:                                              ; preds = %277, %273
  %284 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %282, %277 ], [ %276, %273 ]
  %285 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %284) #12
  %286 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %203, i64 0, i32 0
  %287 = load i32, i32* %20, align 4
  %288 = icmp sgt i32 %287, -1
  br i1 %288, label %293, label %289

289:                                              ; preds = %283
  %290 = trunc i64 %48 to i32
  %291 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %290) #12
  %292 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %291, i64 0, i32 0
  br label %299

293:                                              ; preds = %283
  %294 = and i32 %287, 268435455
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %35, i64 %295
  %297 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %296 to %"struct.blink::CSSPropertyValueMetadata"*
  %298 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %297, i64 %48
  br label %299

299:                                              ; preds = %289, %293
  %300 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %298, %293 ], [ %292, %289 ]
  %301 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %300, i64 0, i32 1
  %302 = load i16, i16* %301, align 8
  %303 = and i16 %302, 16384
  %304 = icmp ne i16 %303, 0
  call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %270, i32 %285, %"class.blink::CSSValue"* dereferenceable(3) %286, i1 zeroext %304) #12
  br label %409

305:                                              ; preds = %125, %121, %117
  %306 = phi %"class.blink::CSSValue"* [ %64, %121 ], [ %64, %117 ], [ null, %125 ]
  %307 = icmp ne %"class.blink::CSSValue"* %306, null
  %308 = or i1 %38, %307
  %309 = and i1 %37, %308
  br i1 %309, label %409, label %310

310:                                              ; preds = %305
  %311 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %312 = load i32, i32* %20, align 4
  %313 = icmp sgt i32 %312, -1
  br i1 %313, label %318, label %314

314:                                              ; preds = %310
  %315 = trunc i64 %48 to i32
  %316 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %315) #12
  %317 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %316, i64 0, i32 0
  br label %324

318:                                              ; preds = %310
  %319 = and i32 %312, 268435455
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %35, i64 %320
  %322 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %321 to %"struct.blink::CSSPropertyValueMetadata"*
  %323 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %322, i64 %48
  br label %324

324:                                              ; preds = %314, %318
  %325 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %323, %318 ], [ %317, %314 ]
  %326 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %325, i64 0, i32 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %328 = icmp eq %"class.WTF::StringImpl"* %327, null
  br i1 %328, label %346, label %329

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %346

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = zext i32 %336 to i33
  %338 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %337, i33 1) #12
  %339 = extractvalue { i33, i1 } %338, 1
  %340 = extractvalue { i33, i1 } %338, 0
  %341 = icmp slt i33 %340, 0
  %342 = or i1 %339, %341
  br i1 %342, label %343, label %344, !prof !4

343:                                              ; preds = %334
  call void @llvm.trap() #12
  unreachable

344:                                              ; preds = %334
  %345 = trunc i33 %340 to i32
  store i32 %345, i32* %335, align 4
  br label %346

346:                                              ; preds = %344, %329, %324
  %347 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %325, i64 0, i32 1
  %348 = load i16, i16* %347, align 8
  %349 = load i32, i32* %20, align 4
  %350 = icmp sgt i32 %349, -1
  br i1 %350, label %355, label %351

351:                                              ; preds = %346
  %352 = trunc i64 %48 to i32
  %353 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %33, i32 %352) #12
  %354 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %353, i64 0, i32 1, i32 0, i32 0
  br label %357

355:                                              ; preds = %346
  %356 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %36, i64 %48, i32 0, i32 0
  br label %357

357:                                              ; preds = %351, %355
  %358 = phi %"class.blink::CSSValue"** [ %356, %355 ], [ %354, %351 ]
  %359 = bitcast %"class.blink::CSSValue"** %358 to i64*
  %360 = load i64, i64* %359, align 8
  store %"class.WTF::StringImpl"* %327, %"class.WTF::StringImpl"** %40, align 8
  br i1 %328, label %378, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %379

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  %369 = zext i32 %368 to i33
  %370 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %369, i33 1) #12
  %371 = extractvalue { i33, i1 } %370, 1
  %372 = extractvalue { i33, i1 } %370, 0
  %373 = icmp slt i33 %372, 0
  %374 = or i1 %371, %373
  br i1 %374, label %375, label %376, !prof !4

375:                                              ; preds = %366
  call void @llvm.trap() #12
  unreachable

376:                                              ; preds = %366
  %377 = trunc i33 %372 to i32
  store i32 %377, i32* %367, align 4
  br label %379

378:                                              ; preds = %357
  store i16 %348, i16* %41, align 8
  store i64 %360, i64* %43, align 8
  br label %391

379:                                              ; preds = %376, %361
  store i16 %348, i16* %41, align 8
  store i64 %360, i64* %43, align 8
  %380 = load atomic i32, i32* %362 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  br i1 %382, label %385, label %387

385:                                              ; preds = %379
  %386 = add i32 %384, -1
  store i32 %386, i32* %383, align 4
  br label %387

387:                                              ; preds = %385, %379
  %388 = phi i32 [ %386, %385 ], [ %384, %379 ]
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %387
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %327) #12
  br label %391

391:                                              ; preds = %378, %387, %390
  %392 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"* %311, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %4, %"class.blink::CSSPropertyValue"* null) #12
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %393, null
  br i1 %394, label %408, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  br i1 %399, label %402, label %404

402:                                              ; preds = %395
  %403 = add i32 %401, -1
  store i32 %403, i32* %400, align 4
  br label %404

404:                                              ; preds = %402, %395
  %405 = phi i32 [ %403, %402 ], [ %401, %395 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %393) #12
  br label %408

408:                                              ; preds = %391, %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  br label %409

409:                                              ; preds = %305, %408, %299
  %410 = add nuw nsw i64 %48, 1
  %411 = icmp eq i64 %410, %44
  br i1 %411, label %415, label %412

412:                                              ; preds = %409
  %413 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %414 = load i32, i32* %20, align 4
  br label %45

415:                                              ; preds = %409, %28, %16, %10, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle25MergeInlineStyleOfElementEPNS_11HTMLElementENS0_23CSSPropertyOverrideModeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* nocapture, %"class.blink::HTMLElement"*, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %9, align 8
  %11 = icmp eq %"class.blink::CSSPropertyValueSet"* %10, null
  br i1 %11, label %48, label %12

12:                                               ; preds = %8
  switch i32 %3, label %48 [
    i32 0, label %13
    i32 1, label %14
    i32 2, label %31
  ]

13:                                               ; preds = %12
  tail call void @_ZN5blink12EditingStyle10MergeStyleEPKNS_19CSSPropertyValueSetENS0_23CSSPropertyOverrideModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSPropertyValueSet"* nonnull %10, i32 %2)
  br label %48

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::HTMLElement"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %17 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %17, i64 10
  %19 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %18, align 8
  %20 = tail call %"class.blink::ExecutionContext"* %19(%"class.blink::Node"* %15) #12
  %21 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %22 = icmp eq %"class.blink::ElementData"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %21, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %24, align 8
  br label %26

26:                                               ; preds = %14, %23
  %27 = phi %"class.blink::CSSPropertyValueSet"* [ %25, %23 ], [ null, %14 ]
  %28 = tail call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %20) #12
  %29 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPropertyValueSet"* %27, %"class.WTF::Vector.2507"* dereferenceable(16) %28) #12
  %30 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %29, i64 0, i32 0
  tail call void @_ZN5blink12EditingStyle10MergeStyleEPKNS_19CSSPropertyValueSetENS0_23CSSPropertyOverrideModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSPropertyValueSet"* %30, i32 %2)
  br label %48

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.blink::HTMLElement"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %34 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %34, i64 10
  %36 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %35, align 8
  %37 = tail call %"class.blink::ExecutionContext"* %36(%"class.blink::Node"* %32) #12
  %38 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %39 = icmp eq %"class.blink::ElementData"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %38, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %41, align 8
  br label %43

43:                                               ; preds = %31, %40
  %44 = phi %"class.blink::CSSPropertyValueSet"* [ %42, %40 ], [ null, %31 ]
  %45 = tail call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %37) #12
  %46 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPropertyValueSet"* %44, %"class.WTF::Vector.2507"* dereferenceable(16) %45) #12
  %47 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %46, i64 0, i32 0
  tail call void @_ZN5blink12EditingStyle10MergeStyleEPKNS_19CSSPropertyValueSetENS0_23CSSPropertyOverrideModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSPropertyValueSet"* %47, i32 %2)
  br label %48

48:                                               ; preds = %4, %8, %13, %26, %43, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle36MergeInlineAndImplicitStyleOfElementEPNS_7ElementENS0_23CSSPropertyOverrideModeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"*, %"class.blink::Element"*, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #12
  %6 = bitcast i8* %5 to %"class.blink::EditingStyle"*
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #12
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  tail call void @_ZN5blink12EditingStyle35MergeStyleFromRulesForSerializationEPNS_7ElementE(%"class.blink::EditingStyle"* %6, %"class.blink::Element"* %1)
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %15, align 8
  %17 = icmp eq %"class.blink::CSSPropertyValueSet"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast i8* %5 to %"class.blink::MutableCSSPropertyValueSet"**
  %20 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %19, align 8
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %20, %"class.blink::CSSPropertyValueSet"* nonnull %16) #12
  br label %21

21:                                               ; preds = %4, %14, %18
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %24 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %24, i64 10
  %26 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %25, align 8
  %27 = tail call %"class.blink::ExecutionContext"* %26(%"class.blink::Node"* %22) #12
  %28 = bitcast i8* %5 to %"class.blink::MutableCSSPropertyValueSet"**
  %29 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %29, i64 0, i32 0
  %31 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %29, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %21
  switch i32 %3, label %39 [
    i32 0, label %33
    i32 2, label %33
    i32 1, label %36
  ]

33:                                               ; preds = %32, %32
  %34 = tail call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %27) #12
  %35 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPropertyValueSet"* nonnull %30, %"class.WTF::Vector.2507"* dereferenceable(16) %34) #12
  br label %39

36:                                               ; preds = %32
  %37 = tail call fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %27) #12
  %38 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPropertyValueSet"* nonnull %30, %"class.WTF::Vector.2507"* dereferenceable(16) %37) #12
  br label %39

39:                                               ; preds = %21, %32, %33, %36
  %40 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %38, %36 ], [ %35, %33 ], [ null, %21 ], [ null, %32 ]
  %41 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %40 to i64
  %42 = bitcast i8* %5 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %40 to i8*
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #12
  %48 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %28, align 8
  br label %49

49:                                               ; preds = %39, %45
  %50 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %40, %39 ], [ %48, %45 ]
  %51 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %50, i64 0, i32 0
  tail call void @_ZN5blink12EditingStyle10MergeStyleEPKNS_19CSSPropertyValueSetENS0_23CSSPropertyOverrideModeE(%"class.blink::EditingStyle"* %0, %"class.blink::CSSPropertyValueSet"* %51, i32 %2)
  %52 = tail call fastcc dereferenceable(16) %"class.blink::HeapVector.2512"* @_ZN5blinkL22HtmlElementEquivalentsEv()
  %53 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::HeapVector.2512", %"class.blink::HeapVector.2512"* %52, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %54, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = icmp eq i32 %2, 0
  br label %77

63:                                               ; preds = %113, %49
  %64 = tail call fastcc dereferenceable(16) %"class.blink::HeapVector.2521"* @_ZN5blinkL24HtmlAttributeEquivalentsEv()
  %65 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::HeapVector.2521", %"class.blink::HeapVector.2521"* %64, i64 0, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %66, i64 %69
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %116, label %72

72:                                               ; preds = %63
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %73, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %76 = icmp eq i32 %2, 0
  br label %117

77:                                               ; preds = %60, %113
  %78 = phi %"class.blink::Member.2518"* [ %54, %60 ], [ %114, %113 ]
  %79 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElementEquivalent"** %79, align 8
  %81 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %61, align 8
  %82 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %81, i64 0, i32 0
  %83 = bitcast %"class.blink::HTMLElementEquivalent"* %80 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)***
  %84 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*** %83, align 8
  %85 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::HTMLElementEquivalent"* %80, %"class.blink::Element"* %1) #12
  br i1 %86, label %87, label %113

87:                                               ; preds = %77
  %88 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %89 = icmp eq %"class.blink::ElementData"* %88, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %88, i64 0, i32 1, i32 0, i32 0
  %92 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %91, align 8
  %93 = icmp eq %"class.blink::CSSPropertyValueSet"* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.blink::HTMLElementEquivalent"* %80 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)***
  %96 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*** %95, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %96, i64 2
  %98 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::HTMLElementEquivalent"* %80, %"class.blink::CSSPropertyValueSet"* nonnull %92) #12
  br i1 %99, label %113, label %100

100:                                              ; preds = %94, %90, %87
  br i1 %62, label %107, label %101

101:                                              ; preds = %100
  %102 = bitcast %"class.blink::HTMLElementEquivalent"* %80 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)***
  %103 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*** %102, align 8
  %104 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %103, i64 2
  %105 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %104, align 8
  %106 = tail call zeroext i1 %105(%"class.blink::HTMLElementEquivalent"* %80, %"class.blink::CSSPropertyValueSet"* %82) #12
  br i1 %106, label %113, label %107

107:                                              ; preds = %101, %100
  %108 = load %"class.blink::HTMLElementEquivalent"*, %"class.blink::HTMLElementEquivalent"** %79, align 8
  %109 = bitcast %"class.blink::HTMLElementEquivalent"* %108 to void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)***
  %110 = load void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)**, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %110, i64 4
  %112 = load void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %111, align 8
  tail call void %112(%"class.blink::HTMLElementEquivalent"* %108, %"class.blink::Element"* %1, %"class.blink::EditingStyle"* %0) #12
  br label %113

113:                                              ; preds = %101, %77, %94, %107
  %114 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %78, i64 1
  %115 = icmp eq %"class.blink::Member.2518"* %114, %58
  br i1 %115, label %63, label %77

116:                                              ; preds = %161, %63
  ret void

117:                                              ; preds = %72, %161
  %118 = phi %"class.blink::Member.2527"* [ %66, %72 ], [ %162, %161 ]
  %119 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %120, i64 0, i32 1
  %122 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  %125 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %126 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %124, %125
  br i1 %126, label %161, label %127

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %120, i64 0, i32 0
  %129 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %75, align 8
  %130 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %129, i64 0, i32 0
  %131 = bitcast %"class.blink::HTMLAttributeEquivalent"* %120 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)***
  %132 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*** %131, align 8
  %133 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Element"*)** %132, align 8
  %134 = tail call zeroext i1 %133(%"class.blink::HTMLElementEquivalent"* %128, %"class.blink::Element"* %1) #12
  br i1 %134, label %135, label %161

135:                                              ; preds = %127
  %136 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %137 = icmp eq %"class.blink::ElementData"* %136, null
  br i1 %137, label %148, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %136, i64 0, i32 1, i32 0, i32 0
  %140 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %139, align 8
  %141 = icmp eq %"class.blink::CSSPropertyValueSet"* %140, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %138
  %143 = bitcast %"class.blink::HTMLAttributeEquivalent"* %120 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)***
  %144 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %144, i64 2
  %146 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %145, align 8
  %147 = tail call zeroext i1 %146(%"class.blink::HTMLElementEquivalent"* %128, %"class.blink::CSSPropertyValueSet"* nonnull %140) #12
  br i1 %147, label %161, label %148

148:                                              ; preds = %142, %138, %135
  br i1 %76, label %155, label %149

149:                                              ; preds = %148
  %150 = bitcast %"class.blink::HTMLAttributeEquivalent"* %120 to i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)***
  %151 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)**, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %151, i64 2
  %153 = load i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)*, i1 (%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::HTMLElementEquivalent"* %128, %"class.blink::CSSPropertyValueSet"* %130) #12
  br i1 %154, label %161, label %155

155:                                              ; preds = %149, %148
  %156 = load %"class.blink::HTMLAttributeEquivalent"*, %"class.blink::HTMLAttributeEquivalent"** %119, align 8
  %157 = bitcast %"class.blink::HTMLAttributeEquivalent"* %156 to void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)***
  %158 = load void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)**, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %158, i64 4
  %160 = load void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)*, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*)** %159, align 8
  tail call void %160(%"class.blink::HTMLAttributeEquivalent"* %156, %"class.blink::Element"* %1, %"class.blink::EditingStyle"* %0) #12
  br label %161

161:                                              ; preds = %149, %127, %142, %155, %117
  %162 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %118, i64 1
  %163 = icmp eq %"class.blink::Member.2527"* %162, %70
  br i1 %163, label %116, label %117
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle35MergeStyleFromRulesForSerializationEPNS_7ElementE(%"class.blink::EditingStyle"* nocapture, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = alloca %"class.blink::CSSPropertyValue", align 8
  %6 = tail call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL31StyleFromMatchedRulesForElementEPNS_7ElementEj(%"class.blink::Element"* %1, i32 40) #12
  %7 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %9 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %8, i64 0, i32 0
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %6, %"class.blink::CSSPropertyValueSet"* %11) #12
  br label %12

12:                                               ; preds = %10, %2
  %13 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 2
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %15, align 4
  %16 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %6 to i64
  store atomic i64 %16, i64* %13 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %6 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #12
  br label %22

22:                                               ; preds = %12, %19
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %24 = bitcast i8* %23 to %"class.blink::CSSComputedStyleDeclaration"*
  %25 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %24, %"class.blink::Node"* %25, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %22, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %44 = getelementptr inbounds i8, i8* %23, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  %48 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %49 = bitcast i8* %48 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %49, i8 zeroext 1) #12
  %50 = getelementptr inbounds i8, i8* %48, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  %54 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %55 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %54, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %67, label %58

58:                                               ; preds = %43
  %59 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  %60 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = bitcast %"class.blink::CSSPropertyValue"* %5 to i8*
  %63 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 0
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 1, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = zext i32 %56 to i64
  br label %70

67:                                               ; preds = %164, %43
  %68 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %54, %43 ], [ %166, %164 ]
  %69 = bitcast i8* %48 to %"class.blink::CSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %68, %"class.blink::CSSPropertyValueSet"* %69) #12
  ret void

70:                                               ; preds = %164, %58
  %71 = phi i64 [ 0, %58 ], [ %165, %164 ]
  %72 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %54, %58 ], [ %166, %164 ]
  %73 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %72, i64 0, i32 0
  %74 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %72, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %72, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, -1
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %73, i64 4
  %81 = bitcast %"class.blink::CSSPropertyValueSet"* %80 to %"class.WTF::Vector.1831"*
  %82 = trunc i64 %71 to i32
  %83 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %81, i32 %82) #12
  %84 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %83, i64 0, i32 1, i32 0, i32 0
  br label %89

85:                                               ; preds = %75, %70
  %86 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %73, i64 2
  %87 = bitcast %"class.blink::CSSPropertyValueSet"* %86 to %"class.blink::Member.1834"*
  %88 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %87, i64 %71, i32 0, i32 0
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::CSSValue"** [ %88, %85 ], [ %84, %79 ]
  %91 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %91, i64 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp ugt i8 %93, 1
  %95 = icmp eq %"class.blink::CSSValue"* %91, null
  %96 = or i1 %95, %94
  br i1 %96, label %164, label %97

97:                                               ; preds = %89
  %98 = bitcast %"class.blink::CSSValue"* %91 to %"class.blink::CSSPrimitiveValue"*
  %99 = call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %98) #12
  br i1 %99, label %100, label %164

100:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 16, i1 false)
  %101 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %72, i64 0, i32 0, i32 0
  br i1 %74, label %102, label %104

102:                                              ; preds = %100
  %103 = load i32, i32* %101, align 8
  br label %113

104:                                              ; preds = %100
  %105 = load i32, i32* %101, align 4
  %106 = icmp sgt i32 %105, -1
  br i1 %106, label %113, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %73, i64 4
  %109 = bitcast %"class.blink::CSSPropertyValueSet"* %108 to %"class.WTF::Vector.1831"*
  %110 = trunc i64 %71 to i32
  %111 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %109, i32 %110) #12
  %112 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %111, i64 0, i32 0
  br label %122

113:                                              ; preds = %104, %102
  %114 = phi i32 [ %103, %102 ], [ %105, %104 ]
  %115 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %73, i64 2
  %116 = bitcast %"class.blink::CSSPropertyValueSet"* %115 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %117 = and i32 %114, 268435455
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %116, i64 %118
  %120 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %119 to %"struct.blink::CSSPropertyValueMetadata"*
  %121 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %120, i64 %71
  br label %122

122:                                              ; preds = %107, %113
  %123 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %121, %113 ], [ %112, %107 ]
  %124 = call { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"* %123) #12
  %125 = extractvalue { i32, %"class.WTF::StringImpl"* } %124, 0
  store i32 %125, i32* %60, align 8
  %126 = extractvalue { i32, %"class.WTF::StringImpl"* } %124, 1
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %61, align 8
  %127 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueERKNS_15CSSPropertyNameE(%"class.blink::CSSComputedStyleDeclaration"* %24, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4) #12
  %128 = icmp eq %"class.blink::CSSValue"* %127, null
  br i1 %128, label %147, label %129

129:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #12
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %63, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false) #12
  store %"class.blink::CSSValue"* %127, %"class.blink::CSSValue"** %64, align 8
  %130 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet20AddRespectingCascadeERKNS_16CSSPropertyValueE(%"class.blink::MutableCSSPropertyValueSet"* %49, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %5) #12
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #12
  br label %146

146:                                              ; preds = %129, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #12
  br label %147

147:                                              ; preds = %122, %146
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #12
  br label %163

163:                                              ; preds = %147, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #12
  br label %164

164:                                              ; preds = %97, %163, %89
  %165 = add nuw nsw i64 %71, 1
  %166 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %7, align 8
  %167 = icmp eq i64 %165, %66
  br i1 %167, label %67, label %70
}

declare void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"* dereferenceable(24), %"class.blink::CSSPropertyValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle19MergeStyleFromRulesEPNS_7ElementE(%"class.blink::EditingStyle"* nocapture, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = tail call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL31StyleFromMatchedRulesForElementEPNS_7ElementEj(%"class.blink::Element"* %1, i32 40)
  %4 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %6 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %5, i64 0, i32 0
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %3, %"class.blink::CSSPropertyValueSet"* %8) #12
  br label %9

9:                                                ; preds = %2, %7
  %10 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 2
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %12, align 4
  %13 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %3 to i64
  store atomic i64 %13, i64* %10 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %3 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #12
  br label %19

19:                                               ; preds = %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL31StyleFromMatchedRulesForElementEPNS_7ElementEj(%"class.blink::Element"*, i32) unnamed_addr #1 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %4 = bitcast i8* %3 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %4, i8 zeroext 1) #12
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %12) #12
  %14 = tail call %"class.blink::HeapVector.2753"* @_ZN5blink13StyleResolver20StyleRulesForElementEPNS_7ElementEj(%"class.blink::StyleResolver"* %13, %"class.blink::Element"* %0, i32 %1) #12
  %15 = icmp eq %"class.blink::HeapVector.2753"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::HeapVector.2753", %"class.blink::HeapVector.2753"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::HeapVector.2753", %"class.blink::HeapVector.2753"* %14, i64 0, i32 0
  br label %22

22:                                               ; preds = %20, %22
  %23 = phi i32 [ 0, %20 ], [ %28, %22 ]
  %24 = tail call dereferenceable(8) %"class.blink::Member.2759"* @_ZN3WTF6VectorIN5blink6MemberINS1_9StyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2756"* %21, i32 %23)
  %25 = getelementptr inbounds %"class.blink::Member.2759", %"class.blink::Member.2759"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %25, align 8
  %27 = tail call dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"* %26) #12
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %4, %"class.blink::CSSPropertyValueSet"* %27) #12
  %28 = add nuw i32 %23, 1
  %29 = load i32, i32* %17, align 4
  %30 = icmp ult i32 %28, %29
  br i1 %30, label %22, label %31

31:                                               ; preds = %22, %16, %2
  ret %"class.blink::MutableCSSPropertyValueSet"* %4
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueERKNS_15CSSPropertyNameE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet20AddRespectingCascadeERKNS_16CSSPropertyValueE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle30RemoveStyleFromRulesAndContextEPNS_7ElementEPNS_13ContainerNodeE(%"class.blink::EditingStyle"* nocapture, %"class.blink::Element"*, %"class.blink::ContainerNode"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %6 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %5, null
  br i1 %6, label %134, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %10, i64 10
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %11, align 8
  %13 = tail call %"class.blink::ExecutionContext"* %12(%"class.blink::Node"* %8) #12
  %14 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %13, i64 0, i32 6, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = tail call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL31StyleFromMatchedRulesForElementEPNS_7ElementEj(%"class.blink::Element"* %1, i32 46)
  %17 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %16, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %16, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %23, i64 7, i32 0
  %25 = load i32, i32* %24, align 4
  br label %28

26:                                               ; preds = %18
  %27 = and i32 %20, 268435455
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i32 [ %27, %26 ], [ %25, %22 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %28
  %32 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %33 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %32, i64 0, i32 0
  %34 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %9, align 8
  %35 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %34, i64 10
  %36 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %35, align 8
  %37 = tail call %"class.blink::ExecutionContext"* %36(%"class.blink::Node"* %8) #12
  %38 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %16, %"class.blink::ExecutionContext"* %37) #12
  %39 = tail call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL18GetPropertiesNotInEPNS_19CSSPropertyValueSetEPNS_4NodeEPNS_19CSSStyleDeclarationENS_17SecureContextModeE(%"class.blink::CSSPropertyValueSet"* %33, %"class.blink::Node"* %8, %"class.blink::CSSStyleDeclaration"* %38, i32 %15)
  %40 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %39 to i64
  %41 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %31
  %45 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %39 to i8*
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #12
  br label %47

47:                                               ; preds = %44, %31, %7, %28
  %48 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #12
  %49 = bitcast i8* %48 to %"class.blink::EditingStyle"*
  %50 = getelementptr inbounds i8, i8* %48, i64 20
  %51 = bitcast i8* %50 to float*
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds i8, i8* %48, i64 24
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 17, i1 false) #12
  tail call void @_ZN5blink12EditingStyle4InitEPNS_4NodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %49, %"class.blink::Node"* %53, i32 2) #12
  %54 = getelementptr inbounds i8, i8* %48, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = bitcast i8* %48 to %"class.blink::MutableCSSPropertyValueSet"**
  %59 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %58, align 8
  %60 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %59, null
  br i1 %60, label %87, label %61

61:                                               ; preds = %47
  %62 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %59, i64 0, i32 0
  %63 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %62, i32 52) #12
  %64 = icmp eq %"class.blink::CSSValue"* %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %61
  %66 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %58, align 8
  %67 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"* %66, i32 52, i32 105, i1 zeroext false) #12
  br label %68

68:                                               ; preds = %61, %65
  %69 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %58, align 8
  %70 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %16, i64 0, i32 0
  tail call fastcc void @_ZN5blinkL23RemovePropertiesInStyleEPNS_26MutableCSSPropertyValueSetEPNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %69, %"class.blink::CSSPropertyValueSet"* %70)
  %71 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %72 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %71, i64 0, i32 0
  %73 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %58, align 8
  %74 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %9, align 8
  %75 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %74, i64 10
  %76 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %75, align 8
  %77 = tail call %"class.blink::ExecutionContext"* %76(%"class.blink::Node"* %8) #12
  %78 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"* %73, %"class.blink::ExecutionContext"* %77) #12
  %79 = tail call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL18GetPropertiesNotInEPNS_19CSSPropertyValueSetEPNS_4NodeEPNS_19CSSStyleDeclarationENS_17SecureContextModeE(%"class.blink::CSSPropertyValueSet"* %72, %"class.blink::Node"* %8, %"class.blink::CSSStyleDeclaration"* %78, i32 %15)
  %80 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %79 to i64
  %81 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %68
  %85 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %79 to i8*
  %86 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #12
  br label %87

87:                                               ; preds = %47, %84, %68
  %88 = tail call zeroext i1 @_ZN5blink39IsStyleSpanOrSpanWithOnlyStyleAttributeEPKNS_7ElementE(%"class.blink::Element"* %1) #12
  br i1 %88, label %89, label %134

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %16, i64 0, i32 0
  %91 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %90, i32 137) #12
  %92 = icmp eq %"class.blink::CSSValue"* %91, null
  br i1 %92, label %93, label %112

93:                                               ; preds = %89
  %94 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %95 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %94, null
  br i1 %95, label %112, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %94, i64 0, i32 0
  %98 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %97, i32 137) #12
  %99 = icmp eq %"class.blink::CSSValue"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %98, i64 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 2
  br i1 %103, label %104, label %112

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %98, i64 1, i32 1
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 378
  br i1 %108, label %109, label %112

109:                                              ; preds = %104
  %110 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %111 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %110, i32 137, %"class.WTF::String"* null) #12
  br label %112

112:                                              ; preds = %96, %100, %93, %89, %109, %104
  %113 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %90, i32 151) #12
  %114 = icmp eq %"class.blink::CSSValue"* %113, null
  br i1 %114, label %115, label %134

115:                                              ; preds = %112
  %116 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %117 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %116, null
  br i1 %117, label %134, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %116, i64 0, i32 0
  %120 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %119, i32 151) #12
  %121 = icmp eq %"class.blink::CSSValue"* %120, null
  br i1 %121, label %134, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %120, i64 0, i32 2
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 2
  br i1 %125, label %126, label %134

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %120, i64 1, i32 1
  %128 = bitcast i8* %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 3
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %4, align 8
  %133 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %132, i32 151, %"class.WTF::String"* null) #12
  br label %134

134:                                              ; preds = %3, %118, %122, %115, %87, %131, %126, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL23RemovePropertiesInStyleEPNS_26MutableCSSPropertyValueSetEPNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #1 {
  %3 = alloca %"class.WTF::Vector.2507", align 8
  %4 = icmp eq %"class.blink::CSSPropertyValueSet"* %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = load i32, i32* null, align 536870912
  br label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 7, i32 0
  %13 = load i32, i32* %12, align 4
  br label %17

14:                                               ; preds = %7, %5
  %15 = phi i32 [ %6, %5 ], [ %9, %7 ]
  %16 = and i32 %15, 268435455
  br label %17

17:                                               ; preds = %11, %14
  %18 = phi i32 [ %16, %14 ], [ %13, %11 ]
  %19 = bitcast %"class.WTF::Vector.2507"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %3, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %3, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast %"class.WTF::Vector.2507"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  store %"class.blink::CSSProperty"** null, %"class.blink::CSSProperty"*** %20, align 8
  store i32 0, i32* %21, align 8
  %24 = icmp eq i32 %18, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %17
  store i32 %18, i32* %22, align 4
  br label %44

26:                                               ; preds = %17
  %27 = zext i32 %18 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11CSSPropertyEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11CSSPropertyEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2507"* %3 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %21, align 8
  %34 = shl nuw nsw i64 %27, 3
  store i32 %18, i32* %22, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 %34, i1 false) #12
  %35 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 4
  %37 = bitcast %"class.blink::CSSPropertyValueSet"* %36 to %"class.WTF::Vector.1831"*
  %38 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 2
  %39 = bitcast %"class.blink::CSSPropertyValueSet"* %38 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %40 = zext i32 %18 to i64
  br label %57

41:                                               ; preds = %76
  %42 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %20, align 8
  %43 = load i32, i32* %22, align 4
  br label %44

44:                                               ; preds = %25, %41
  %45 = phi i32 [ %43, %41 ], [ 0, %25 ]
  %46 = phi %"class.blink::CSSProperty"** [ %42, %41 ], [ null, %25 ]
  %47 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSProperty"** %46, i32 %45) #12
  %48 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %20, align 8
  %49 = icmp eq %"class.blink::CSSProperty"** %48, null
  %50 = bitcast %"class.blink::CSSProperty"** %48 to i8*
  br i1 %49, label %56, label %51, !prof !5

51:                                               ; preds = %44
  %52 = load i32, i32* %22, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !4

54:                                               ; preds = %51
  store i32 0, i32* %22, align 4
  br label %55

55:                                               ; preds = %54, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #12
  store %"class.blink::CSSProperty"** null, %"class.blink::CSSProperty"*** %20, align 8
  br label %56

56:                                               ; preds = %44, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  ret void

57:                                               ; preds = %76, %26
  %58 = phi i64 [ 0, %26 ], [ %82, %76 ]
  br i1 %4, label %59, label %61

59:                                               ; preds = %57
  %60 = load i32, i32* %35, align 8
  br label %68

61:                                               ; preds = %57
  %62 = load i32, i32* %35, align 4
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = trunc i64 %58 to i32
  %66 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"* %37, i32 %65) #12
  %67 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %66, i64 0, i32 0
  br label %76

68:                                               ; preds = %61, %59
  %69 = phi i32 [ %60, %59 ], [ %62, %61 ]
  %70 = and i32 %69, 268435455
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %39, i64 %71
  %73 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %72 to %"struct.blink::CSSPropertyValueMetadata"*
  %74 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %73, i64 %58
  %75 = trunc i64 %58 to i32
  br label %76

76:                                               ; preds = %64, %68
  %77 = phi i32 [ %65, %64 ], [ %75, %68 ]
  %78 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %67, %64 ], [ %74, %68 ]
  %79 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %78) #12
  %80 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %79) #12
  %81 = call dereferenceable(8) %"class.blink::CSSProperty"** @_ZN3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2507"* nonnull %3, i32 %77) #12
  store %"class.blink::CSSProperty"* %80, %"class.blink::CSSProperty"** %81, align 8
  %82 = add nuw nsw i64 %58, 1
  %83 = icmp eq i64 %82, %40
  br i1 %83, label %41, label %57
}

declare zeroext i1 @_ZN5blink39IsStyleSpanOrSpanWithOnlyStyleAttributeEPKNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle37RemovePropertiesInElementDefaultStyleEPNS_7ElementE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %11, i64 7, i32 0
  %13 = load i32, i32* %12, align 4
  br label %16

14:                                               ; preds = %6
  %15 = and i32 %8, 268435455
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi i32 [ %15, %14 ], [ %13, %10 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = tail call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL31StyleFromMatchedRulesForElementEPNS_7ElementEj(%"class.blink::Element"* %1, i32 6)
  %21 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %20, i64 0, i32 0
  %22 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  tail call fastcc void @_ZN5blinkL23RemovePropertiesInStyleEPNS_26MutableCSSPropertyValueSetEPNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %22, %"class.blink::CSSPropertyValueSet"* %21)
  br label %23

23:                                               ; preds = %2, %16, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12EditingStyle11ForceInlineEv(%"class.blink::EditingStyle"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %2, align 8
  %4 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %3, null
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #12
  %7 = bitcast i8* %6 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %7, i8 zeroext 1) #12
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  %16 = bitcast i8* %6 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %15, label %20, label %17

17:                                               ; preds = %5
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %6) #12
  %19 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %2, align 8
  br label %20

20:                                               ; preds = %1, %17, %5
  %21 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %3, %1 ], [ %19, %17 ], [ %16, %5 ]
  %22 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"* %21, i32 137, i32 378, i1 zeroext true) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12EditingStyle14LegacyFontSizeEPNS_8DocumentE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::Document"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %4, i64 0, i32 0
  %6 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %5, i32 8) #12
  %7 = icmp eq %"class.blink::CSSValue"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %6, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp ult i8 %10, 3
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = tail call fastcc i32 @_ZN5blinkL26LegacyFontSizeFromCSSValueEPNS_8DocumentEPKNS_8CSSValueEbNS_18LegacyFontSizeModeE(%"class.blink::Document"* %1, %"class.blink::CSSValue"* nonnull %6, i1 zeroext %15, i32 0)
  br label %17

17:                                               ; preds = %8, %2, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ], [ 0, %8 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blinkL26LegacyFontSizeFromCSSValueEPNS_8DocumentEPKNS_8CSSValueEbNS_18LegacyFontSizeModeE(%"class.blink::Document"*, %"class.blink::CSSValue"*, i1 zeroext, i32) unnamed_addr #1 {
  %5 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp ugt i8 %8, 1
  %10 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  br i1 %9, label %43, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"* nonnull %10) #12
  %13 = load i8, i8* %7, align 1
  br i1 %12, label %14, label %43

14:                                               ; preds = %11
  %15 = icmp eq i8 %13, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, 127
  %20 = zext i8 %19 to i32
  switch i32 %20, label %21 [
    i32 17, label %56
    i32 16, label %56
    i32 4, label %56
    i32 3, label %56
    i32 2, label %56
  ]

21:                                               ; preds = %16
  %22 = and i32 %20, 124
  %23 = icmp eq i32 %22, 12
  br i1 %23, label %56, label %24

24:                                               ; preds = %14, %21
  %25 = phi i32 [ %20, %21 ], [ 5, %14 ]
  %26 = tail call double @_ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE(i32 %25) #12
  %27 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %10) #12
  %28 = fmul double %26, %27
  %29 = fcmp ult double %28, 0x41DFFFFFFFC00000
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = fcmp ugt double %28, 0xC1E0000000000000
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = fptosi double %28 to i32
  br label %34

34:                                               ; preds = %24, %30, %32
  %35 = phi i32 [ %33, %32 ], [ 2147483647, %24 ], [ -2147483648, %30 ]
  %36 = tail call i32 @_ZN5blink17FontSizeFunctions14LegacyFontSizeEPKNS_8DocumentEib(%"class.blink::Document"* %0, i32 %35, i1 zeroext %2) #12
  %37 = icmp eq i32 %3, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = tail call float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"* %0, i32 %36, i1 zeroext %2) #12
  %40 = sitofp i32 %35 to float
  %41 = fcmp oeq float %39, %40
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  br label %56

43:                                               ; preds = %11, %6
  %44 = phi i8 [ %8, %6 ], [ %13, %11 ]
  %45 = icmp eq i8 %44, 2
  br i1 %45, label %46, label %56

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 78
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = add i32 %49, -69
  %53 = icmp ult i32 %52, 7
  %54 = add nsw i32 %49, -68
  %55 = select i1 %53, i32 %54, i32 0
  ret i32 %55

56:                                               ; preds = %21, %16, %16, %16, %16, %16, %43, %34, %38, %42, %4, %46
  %57 = phi i32 [ 7, %46 ], [ 0, %43 ], [ 0, %4 ], [ %36, %34 ], [ %36, %38 ], [ 0, %42 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %21 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12EditingStyle5TraceEPNS_7VisitorE(%"class.blink::EditingStyle"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::EditingStyle"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #12
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.6"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11StyleChangeC2EPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::StyleChange"* nocapture, %"class.blink::EditingStyle"* readonly, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.blink::StyleChange"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 14, i1 false)
  %12 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  br label %20

20:                                               ; preds = %3, %15
  %21 = phi %"class.blink::Document"* [ %19, %15 ], [ null, %3 ]
  %22 = icmp eq %"class.blink::EditingStyle"* %1, null
  br i1 %22, label %196, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %24, align 8
  %26 = icmp ne %"class.blink::MutableCSSPropertyValueSet"* %25, null
  %27 = icmp ne %"class.blink::Document"* %21, null
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %196

29:                                               ; preds = %23
  %30 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %21) #12
  %31 = icmp eq %"class.blink::LocalFrame"* %30, null
  br i1 %31, label %196, label %32

32:                                               ; preds = %29
  %33 = tail call %"class.blink::Element"* @_ZN5blink19AssociatedElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %2) #12
  %34 = icmp eq %"class.blink::Element"* %33, null
  br i1 %34, label %196, label %35

35:                                               ; preds = %32
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %37 = bitcast i8* %36 to %"class.blink::CSSComputedStyleDeclaration"*
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %33, i64 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %37, %"class.blink::Node"* %38, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #12
  br label %56

56:                                               ; preds = %35, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  %57 = getelementptr inbounds i8, i8* %36, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  %61 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %24, align 8
  %62 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %61, i64 0, i32 0
  %63 = bitcast i8* %36 to %"class.blink::CSSStyleDeclaration"*
  %64 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* nonnull %21) #12
  %65 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %64, i64 0, i32 6, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = call fastcc %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blinkL18GetPropertiesNotInEPNS_19CSSPropertyValueSetEPNS_4NodeEPNS_19CSSStyleDeclarationENS_17SecureContextModeE(%"class.blink::CSSPropertyValueSet"* %62, %"class.blink::Node"* %38, %"class.blink::CSSStyleDeclaration"* %63, i32 %66)
  %68 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* nonnull %21) #12
  %69 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %68, i64 0, i32 6, i32 11
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %67, i64 0, i32 0
  %72 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %71, i32 423) #12
  %73 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %71, i32 354) #12
  %74 = icmp eq %"class.blink::CSSValue"* %72, null
  br i1 %74, label %97, label %75

75:                                               ; preds = %56
  %76 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #12
  %77 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %72) #12
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %67, i32 354, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 %70, %"class.blink::StyleSheetContents"* null) #12
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %95

95:                                               ; preds = %94, %91, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #12
  %96 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %67, i32 423, %"class.WTF::String"* null) #12
  br label %99

97:                                               ; preds = %56
  %98 = icmp eq %"class.blink::CSSValue"* %73, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %97, %95
  %100 = phi %"class.blink::CSSValue"* [ %72, %95 ], [ %73, %97 ]
  %101 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %100, i64 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp ugt i8 %102, 51
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %67, i32 354, %"class.WTF::String"* null) #12
  br label %106

106:                                              ; preds = %97, %99, %104
  %107 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %21) #12
  %108 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %107, i64 0, i32 13, i32 0, i32 0
  %109 = load %"class.blink::Editor"*, %"class.blink::Editor"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::Editor", %"class.blink::Editor"* %109, i64 0, i32 5
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = call zeroext i1 @_ZNK5blink27CSSComputedStyleDeclaration15IsMonospaceFontEv(%"class.blink::CSSComputedStyleDeclaration"* %37) #12
  call void @_ZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEb(%"class.blink::StyleChange"* %0, %"class.blink::Document"* nonnull %21, %"class.blink::MutableCSSPropertyValueSet"* %67, i1 zeroext %114)
  br label %115

115:                                              ; preds = %106, %113
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %117 = call zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"* %116) #12
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %120 = call zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* %119) #12
  br i1 %120, label %121, label %123

121:                                              ; preds = %118, %115
  %122 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %67, i32 436, %"class.WTF::String"* null) #12
  br label %123

123:                                              ; preds = %121, %118
  %124 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %71, i32 378) #12
  %125 = icmp eq %"class.blink::CSSValue"* %124, null
  br i1 %125, label %157, label %126

126:                                              ; preds = %123
  %127 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %24, align 8
  %128 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %127, i64 0, i32 0
  %129 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %128, i32 3) #12
  %130 = icmp eq %"class.blink::CSSValue"* %129, null
  br i1 %130, label %131, label %157

131:                                              ; preds = %126
  %132 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #12
  %133 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %24, align 8
  %134 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %133, i64 0, i32 0
  %135 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* %134, i32 3) #12
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8
  %137 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* nonnull %21) #12
  %138 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %137, i64 0, i32 6, i32 11
  %139 = load i32, i32* %138, align 8
  %140 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %67, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 %139, %"class.blink::StyleSheetContents"* null) #12
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %131
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #12
  br label %156

156:                                              ; preds = %131, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #12
  br label %157

157:                                              ; preds = %126, %123, %156
  %158 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #12
  %159 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %71) #12
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %160, align 8
  %161 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %7) #12
  %162 = ptrtoint %"class.WTF::StringImpl"* %161 to i64
  %163 = bitcast %"class.blink::StyleChange"* %0 to i64*
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %162, i64* %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %157
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #12
  br label %179

179:                                              ; preds = %178, %175, %157
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #12
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #12
  br label %196

196:                                              ; preds = %195, %32, %23, %20, %29
  ret void
}

declare %"class.blink::Element"* @_ZN5blink19AssociatedElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEb(%"class.blink::StyleChange"* nocapture, %"class.blink::Document"*, %"class.blink::MutableCSSPropertyValueSet"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.blink::Color", align 4
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::Color", align 4
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %2, i64 0, i32 0
  %12 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %2, null
  br i1 %12, label %75, label %13

13:                                               ; preds = %4
  %14 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %11, i32 17) #12
  %15 = icmp eq %"class.blink::CSSValue"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %14, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp ugt i8 %18, 1
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::CSSValue"* %14 to %"class.blink::CSSPrimitiveValue"*
  %22 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %21) #12
  %23 = fcmp ult double %22, 0x47EFFFFFE0000000
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = fcmp ole double %22, 0xC7EFFFFFE0000000
  %26 = select i1 %25, double 0xC7EFFFFFE0000000, double %22
  %27 = fptrunc double %26 to float
  br label %28

28:                                               ; preds = %20, %24, %13, %16
  %29 = phi float [ 0x47EFFFFFE0000000, %20 ], [ %27, %24 ], [ 0.000000e+00, %16 ], [ 0.000000e+00, %13 ]
  %30 = phi i1 [ true, %20 ], [ true, %24 ], [ false, %16 ], [ false, %13 ]
  %31 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %11, i32 17) #12
  %32 = icmp eq %"class.blink::CSSValue"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %31, i64 0, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %28
  br i1 %30, label %44, label %59

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %31, i64 1, i32 1
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 57
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  br i1 %30, label %44, label %59

44:                                               ; preds = %37, %43
  %45 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51, !prof !3

47:                                               ; preds = %44
  %48 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton.2818"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #12
  br label %51

51:                                               ; preds = %44, %47, %50
  %52 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.2818"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %53 = sitofp i16 %52 to float
  %54 = fmul float %53, 2.500000e-01
  %55 = fcmp ult float %29, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %51, %38
  %57 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %2, i32 17, %"class.WTF::String"* null) #12
  %58 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 1
  store i8 1, i8* %58, align 8
  br label %59

59:                                               ; preds = %56, %51, %37, %43
  %60 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %11, i32 11) #12
  %61 = icmp eq %"class.blink::CSSValue"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %60, i64 0, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 2
  br i1 %65, label %66, label %75

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %60, i64 1, i32 1
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = or i32 %69, 1
  %71 = icmp eq i32 %70, 23
  br i1 %71, label %72, label %75

72:                                               ; preds = %66
  %73 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %2, i32 11, %"class.WTF::String"* null) #12
  %74 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 2
  store i8 1, i8* %74, align 1
  br label %75

75:                                               ; preds = %4, %59, %62, %66, %72
  %76 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %11, i32 354) #12
  %77 = icmp eq %"class.blink::CSSValue"* %76, null
  br i1 %77, label %200, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %76, i64 0, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp ult i8 %80, 52
  %82 = bitcast %"class.blink::CSSValue"* %76 to %"class.blink::CSSValueList"*
  br i1 %81, label %200, label %83

83:                                               ; preds = %78
  %84 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline to i8*) acquire, align 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %119, !prof !3

86:                                               ; preds = %83
  %87 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline) #12
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %119, label %89

89:                                               ; preds = %86
  %90 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 501) #12
  store %"class.blink::CSSIdentifierValue"* %90, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline to %"class.blink::CSSIdentifierValue"**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %91 = ptrtoint %"class.blink::CSSIdentifierValue"* %90 to i64
  switch i64 %91, label %92 [
    i64 0, label %118
    i64 -1, label %118
  ]

92:                                               ; preds = %89
  %93 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %94 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %93, i64 0, i32 1
  %95 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %94) #12
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %99, !prof !4

97:                                               ; preds = %92
  %98 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %94, i8* %98) #12
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i8* [ %98, %97 ], [ %95, %92 ]
  %101 = bitcast i8* %100 to %"class.blink::ThreadState"**
  %102 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  %107 = icmp eq %"class.blink::PersistentNode"* %106, null
  br i1 %107, label %108, label %111, !prof !4

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %109) #12
  %110 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  br label %111

111:                                              ; preds = %108, %99
  %112 = phi %"class.blink::PersistentNode"* [ %110, %108 ], [ %106, %99 ]
  %113 = bitcast %"class.blink::PersistentNode"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.blink::PersistentRegion"* %104 to i64*
  store i64 %114, i64* %115, align 8
  %116 = bitcast %"class.blink::PersistentNode"* %112 to %"class.blink::PersistentBase.2538"**
  store %"class.blink::PersistentBase.2538"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline to %"class.blink::PersistentBase.2538"*), %"class.blink::PersistentBase.2538"** %116, align 8
  %117 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %112, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18CSSIdentifierValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %117, align 8
  store %"class.blink::PersistentNode"* %112, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %118

118:                                              ; preds = %89, %89, %111
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline) #12
  br label %119

119:                                              ; preds = %86, %118, %83
  %120 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through to i8*) acquire, align 8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %155, !prof !3

122:                                              ; preds = %119
  %123 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through) #12
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %155, label %125

125:                                              ; preds = %122
  %126 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 482) #12
  store %"class.blink::CSSIdentifierValue"* %126, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through to %"class.blink::CSSIdentifierValue"**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %127 = ptrtoint %"class.blink::CSSIdentifierValue"* %126 to i64
  switch i64 %127, label %128 [
    i64 0, label %154
    i64 -1, label %154
  ]

128:                                              ; preds = %125
  %129 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %130 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %129, i64 0, i32 1
  %131 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %130) #12
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %135, !prof !4

133:                                              ; preds = %128
  %134 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %130, i8* %134) #12
  br label %135

135:                                              ; preds = %133, %128
  %136 = phi i8* [ %134, %133 ], [ %131, %128 ]
  %137 = bitcast i8* %136 to %"class.blink::ThreadState"**
  %138 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %141, align 8
  %143 = icmp eq %"class.blink::PersistentNode"* %142, null
  br i1 %143, label %144, label %147, !prof !4

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %140, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %145) #12
  %146 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %141, align 8
  br label %147

147:                                              ; preds = %144, %135
  %148 = phi %"class.blink::PersistentNode"* [ %146, %144 ], [ %142, %135 ]
  %149 = bitcast %"class.blink::PersistentNode"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentRegion"* %140 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"class.blink::PersistentNode"* %148 to %"class.blink::PersistentBase.2538"**
  store %"class.blink::PersistentBase.2538"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through to %"class.blink::PersistentBase.2538"*), %"class.blink::PersistentBase.2538"** %152, align 8
  %153 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %148, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18CSSIdentifierValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %153, align 8
  store %"class.blink::PersistentNode"* %148, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %154

154:                                              ; preds = %125, %125, %147
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through) #12
  br label %155

155:                                              ; preds = %122, %154, %119
  %156 = tail call %"class.blink::CSSValueList"* @_ZNK5blink12CSSValueList4CopyEv(%"class.blink::CSSValueList"* nonnull %82) #12
  %157 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE11s_underline to %"class.blink::CSSIdentifierValue"**), align 8
  %158 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %157, i64 0, i32 0
  %159 = tail call zeroext i1 @_ZN5blink12CSSValueList9RemoveAllERKNS_8CSSValueE(%"class.blink::CSSValueList"* %156, %"class.blink::CSSValue"* dereferenceable(3) %158) #12
  br i1 %159, label %160, label %162

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 3
  store i8 1, i8* %161, align 2
  br label %162

162:                                              ; preds = %160, %155
  %163 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11StyleChange17ExtractTextStylesEPNS_8DocumentEPNS_26MutableCSSPropertyValueSetEbE14s_line_through to %"class.blink::CSSIdentifierValue"**), align 8
  %164 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %163, i64 0, i32 0
  %165 = tail call zeroext i1 @_ZN5blink12CSSValueList9RemoveAllERKNS_8CSSValueE(%"class.blink::CSSValueList"* %156, %"class.blink::CSSValue"* dereferenceable(3) %164) #12
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 4
  store i8 1, i8* %167, align 1
  br label %168

168:                                              ; preds = %166, %162
  %169 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #12
  %170 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %156, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %198, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %169, i64 0, i32 6, i32 11
  %175 = load i32, i32* %174, align 8
  %176 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #12
  %177 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %156, i64 0, i32 0
  %178 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %177) #12
  %179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %179, align 8
  %180 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %11, i32 354) #12
  %181 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %2, i32 354, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext %180, i32 %175, %"class.blink::StyleSheetContents"* null) #12
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %173
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #12
  br label %197

197:                                              ; preds = %173, %193, %196
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #12
  br label %200

198:                                              ; preds = %168
  %199 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %2, i32 354, %"class.WTF::String"* null) #12
  br label %200

200:                                              ; preds = %78, %75, %198, %197
  br i1 %12, label %218, label %201

201:                                              ; preds = %200
  %202 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %11, i32 383) #12
  %203 = icmp eq %"class.blink::CSSValue"* %202, null
  br i1 %203, label %218, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %202, i64 0, i32 2
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %206, 2
  br i1 %207, label %208, label %218

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %202, i64 1, i32 1
  %210 = bitcast i8* %209 to i32*
  %211 = load i32, i32* %210, align 4
  switch i32 %211, label %218 [
    i32 298, label %212
    i32 299, label %215
  ]

212:                                              ; preds = %208
  %213 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %2, i32 383, %"class.WTF::String"* null) #12
  %214 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 5
  store i8 1, i8* %214, align 4
  br label %218

215:                                              ; preds = %208
  %216 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %2, i32 383, %"class.WTF::String"* null) #12
  %217 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 6
  store i8 1, i8* %217, align 1
  br label %218

218:                                              ; preds = %201, %204, %200, %208, %215, %212
  %219 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %11, i32 2) #12
  %220 = icmp eq %"class.blink::CSSValue"* %219, null
  br i1 %220, label %284, label %221

221:                                              ; preds = %218
  %222 = bitcast %"class.blink::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222) #12
  %223 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %11, i32 2) #12
  %224 = icmp eq %"class.blink::CSSValue"* %223, null
  br i1 %224, label %259, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %223, i64 0, i32 2
  %227 = load i8, i8* %226, align 1
  %228 = icmp eq i8 %227, 3
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = icmp ult i8 %227, 3
  br i1 %230, label %235, label %259

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %223, i64 1, i32 1
  %233 = bitcast i8* %232 to i32*
  %234 = load i32, i32* %233, align 4
  br label %259

235:                                              ; preds = %229
  %236 = bitcast %"class.blink::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %236) #12
  %237 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  store i32 0, i32* %237, align 4
  %238 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #12
  %239 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %223) #12
  %240 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %240, align 8
  %241 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false) #12
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %235
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #12
  br label %257

257:                                              ; preds = %256, %253, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #12
  %258 = load i32, i32* %237, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %236) #12
  br label %259

259:                                              ; preds = %221, %229, %231, %257
  %260 = phi i32 [ %234, %231 ], [ %258, %257 ], [ 0, %221 ], [ 0, %229 ]
  %261 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %9, i64 0, i32 0
  store i32 %260, i32* %261, align 4
  %262 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* nonnull %9) #12
  %263 = ptrtoint %"class.WTF::StringImpl"* %262 to i64
  %264 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 7
  %265 = bitcast %"class.WTF::String"* %264 to i64*
  %266 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %264, i64 0, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  store i64 %263, i64* %265, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %259
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #12
  br label %282

282:                                              ; preds = %281, %278, %259
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222) #12
  %283 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %2, i32 2, %"class.WTF::String"* null) #12
  br label %284

284:                                              ; preds = %218, %282
  %285 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* %11, i32 4) #12
  %286 = ptrtoint %"class.WTF::StringImpl"* %285 to i64
  %287 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 8
  %288 = bitcast %"class.WTF::String"* %287 to i64*
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %287, i64 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %286, i64* %288, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %284
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #12
  br label %305

305:                                              ; preds = %304, %301, %284
  %306 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #12
  %307 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %308 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %309, align 8
  %310 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %310, align 8
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %312, label %331, label %313

313:                                              ; preds = %305
  %314 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %311, i16 zeroext 34, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #12
  %315 = ptrtoint %"class.WTF::StringImpl"* %314 to i64
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %315, i64* %288, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %316, null
  br i1 %317, label %331, label %318

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %316) #12
  br label %331

331:                                              ; preds = %305, %313, %327, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #12
  %332 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %2, i32 4, %"class.WTF::String"* null) #12
  %333 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %11, i32 8) #12
  %334 = icmp eq %"class.blink::CSSValue"* %333, null
  br i1 %334, label %413, label %335

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %333, i64 0, i32 2
  %337 = load i8, i8* %336, align 1
  %338 = icmp ult i8 %337, 3
  br i1 %338, label %341, label %339

339:                                              ; preds = %335
  %340 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %2, i32 8, %"class.WTF::String"* null) #12
  br label %413

341:                                              ; preds = %335
  %342 = call fastcc i32 @_ZN5blinkL26LegacyFontSizeFromCSSValueEPNS_8DocumentEPKNS_8CSSValueEbNS_18LegacyFontSizeModeE(%"class.blink::Document"* %1, %"class.blink::CSSValue"* nonnull %333, i1 zeroext %3, i32 1)
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %413, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %345) #12
  %346 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  %347 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %348 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %349 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 13
  %350 = icmp slt i32 %342, 0
  %351 = sub i32 0, %342
  %352 = select i1 %350, i32 %351, i32 %342
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 -86, i64 32, i1 false) #12
  store i8* %346, i8** %347, align 8
  %353 = urem i32 %352, 10
  %354 = udiv i32 %352, 10
  %355 = trunc i32 %353 to i8
  %356 = or i8 %355, 48
  store i8 %356, i8* %346, align 4
  %357 = icmp ugt i32 %352, 9
  br i1 %357, label %358, label %380

358:                                              ; preds = %344
  %359 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  store i8* %359, i8** %347, align 8
  %360 = urem i32 %354, 10
  %361 = trunc i32 %360 to i8
  %362 = or i8 %361, 48
  store i8 %362, i8* %359, align 1
  %363 = icmp ugt i32 %352, 99
  br i1 %363, label %364, label %380

364:                                              ; preds = %358
  %365 = udiv i32 %352, 100
  %366 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %366, i8** %347, align 8
  %367 = urem i32 %365, 10
  %368 = trunc i32 %367 to i8
  %369 = or i8 %368, 48
  store i8 %369, i8* %366, align 2
  %370 = icmp ugt i32 %352, 999
  br i1 %370, label %371, label %380

371:                                              ; preds = %364, %371
  %372 = phi i32 [ %374, %371 ], [ %365, %364 ]
  %373 = load i8*, i8** %347, align 8
  %374 = udiv i32 %372, 10
  %375 = getelementptr inbounds i8, i8* %373, i64 -1
  store i8* %375, i8** %347, align 8
  %376 = urem i32 %374, 10
  %377 = trunc i32 %376 to i8
  %378 = or i8 %377, 48
  store i8 %378, i8* %375, align 1
  %379 = icmp ugt i32 %372, 99
  br i1 %379, label %371, label %380

380:                                              ; preds = %371, %364, %358, %344
  br i1 %350, label %381, label %384

381:                                              ; preds = %380
  %382 = load i8*, i8** %347, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 -1
  store i8* %383, i8** %347, align 8
  store i8 45, i8* %383, align 1
  br label %384

384:                                              ; preds = %380, %381
  %385 = bitcast i8** %347 to i64*
  %386 = load i64, i64* %385, align 8
  %387 = ptrtoint i8* %349 to i64
  %388 = sub i64 %387, %386
  %389 = trunc i64 %388 to i32
  store i32 %389, i32* %348, align 8
  %390 = inttoptr i64 %386 to i8*
  %391 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %390, i32 %389) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %345) #12
  %392 = ptrtoint %"class.WTF::StringImpl"* %391 to i64
  %393 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 9
  %394 = bitcast %"class.WTF::String"* %393 to i64*
  %395 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %393, i64 0, i32 0, i32 0
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %395, align 8
  store i64 %392, i64* %394, align 8
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %411, label %398

398:                                              ; preds = %384
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 0
  %404 = load i32, i32* %403, align 4
  br i1 %402, label %405, label %407

405:                                              ; preds = %398
  %406 = add i32 %404, -1
  store i32 %406, i32* %403, align 4
  br label %407

407:                                              ; preds = %405, %398
  %408 = phi i32 [ %406, %405 ], [ %404, %398 ]
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %396) #12
  br label %411

411:                                              ; preds = %410, %407, %384
  %412 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %2, i32 8, %"class.WTF::String"* null) #12
  br label %413

413:                                              ; preds = %411, %341, %331, %339
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

declare %"class.blink::CSSValueList"* @_ZNK5blink12CSSValueList4CopyEv(%"class.blink::CSSValueList"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12CSSValueList9RemoveAllERKNS_8CSSValueE(%"class.blink::CSSValueList"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12EditingStyle17SelectionHasStyleERKNS_10LocalFrameENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::LocalFrame"* dereferenceable(1176), i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %5 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #12
  %6 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %5, i64 0, i32 1, i32 6, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #12
  %9 = bitcast i8* %8 to %"class.blink::EditingStyle"*
  tail call void @_ZN5blink12EditingStyleC2ENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeE(%"class.blink::EditingStyle"* %9, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, i32 %7) #12
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = bitcast %"class.blink::VisibleSelectionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 14, i32 0, i32 0
  %16 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %15, align 8
  call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %4, %"class.blink::FrameSelection"* %16) #12
  %17 = call i32 @_ZNK5blink12EditingStyle15TriStateOfStyleERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_17SecureContextModeE(%"class.blink::EditingStyle"* %9, %"class.blink::VisibleSelectionTemplate"* nonnull dereferenceable(40) %4, i32 %7)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #12
  ret i32 %17
}

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLElementEquivalent12HasAttributeEv(%"class.blink::HTMLElementEquivalent"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLElementEquivalent21PropertyExistsInStyleEPKNS_19CSSPropertyValueSetE(%"class.blink::HTMLElementEquivalent"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %1, i32 %4) #12
  %6 = icmp ne %"class.blink::CSSValue"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21HTMLElementEquivalent5TraceEPNS_7VisitorE(%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementEquivalent", %"class.blink::HTMLElementEquivalent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSIdentifierValue"*
  %9 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18CSSIdentifierValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink28HTMLTextDecorationEquivalent5TraceEPNS_7VisitorE(%"class.blink::HTMLTextDecorationEquivalent"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextDecorationEquivalent", %"class.blink::HTMLTextDecorationEquivalent"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSIdentifierValue"*
  %9 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18CSSIdentifierValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23HTMLAttributeEquivalent7MatchesEPKNS_7ElementE(%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Element"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 3
  %4 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLQualifiedName"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::Element"* %1, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.6"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %2, %14
  %26 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 1
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %26, align 8
  %28 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %27) #12
  br label %29

29:                                               ; preds = %6, %9, %25, %14
  %30 = phi i1 [ false, %14 ], [ %28, %25 ], [ false, %9 ], [ false, %6 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23HTMLAttributeEquivalent12HasAttributeEv(%"class.blink::HTMLAttributeEquivalent"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink23HTMLAttributeEquivalent5TraceEPNS_7VisitorE(%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLAttributeEquivalent", %"class.blink::HTMLAttributeEquivalent"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSIdentifierValue"*
  %9 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18CSSIdentifierValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink22HTMLFontSizeEquivalent5TraceEPNS_7VisitorE(%"class.blink::HTMLFontSizeEquivalent"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFontSizeEquivalent", %"class.blink::HTMLFontSizeEquivalent"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSIdentifierValue"*
  %9 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18CSSIdentifierValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare void @_ZN5blink11CSSProperty39FilterWebExposedCSSPropertiesIntoVectorEPKNS_16ExecutionContextEPKNS_13CSSPropertyIDEmRN3WTF6VectorIPKS0_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"*, i32*, i64, %"class.WTF::Vector.2507"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_21HTMLElementEquivalentEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #12
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2518"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2518"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLElementEquivalentEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21HTMLElementEquivalentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLElementEquivalent"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLElementEquivalent"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLElementEquivalent"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapVector.2512"**
  %5 = load %"class.blink::HeapVector.2512"*, %"class.blink::HeapVector.2512"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::HeapVector.2512"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapVector.2512"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_21HTMLElementEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2515"*, %"class.blink::HTMLElementEquivalent"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2515"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLElementEquivalent"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2518"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2515"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2518"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21HTMLElementEquivalentEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2515"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2518"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2518"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2515"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2515"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2515"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2515"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21HTMLElementEquivalentEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.2518"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2518"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2515"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.2515"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.2515"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21HTMLElementEquivalentEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21HTMLElementEquivalentEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21HTMLElementEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLElementEquivalentEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21HTMLElementEquivalentEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21HTMLElementEquivalentEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21HTMLElementEquivalentEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21HTMLElementEquivalentEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21HTMLElementEquivalentEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_23HTMLAttributeEquivalentEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #12
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2527"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2527"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLAttributeEquivalentEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23HTMLAttributeEquivalentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLAttributeEquivalent"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLAttributeEquivalent"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLAttributeEquivalent"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapVector.2521"**
  %5 = load %"class.blink::HeapVector.2521"*, %"class.blink::HeapVector.2521"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::HeapVector.2521"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapVector.2521"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_23HTMLAttributeEquivalentEEELj0EEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2524"*, %"class.blink::HTMLAttributeEquivalent"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2524"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLAttributeEquivalent"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2527"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2524"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2527"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23HTMLAttributeEquivalentEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2716"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2716"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2524"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2716", %"class.blink::HeapVectorBacking.2716"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2527"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2527"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2524"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2524"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2524"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2524"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23HTMLAttributeEquivalentEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2716"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2716"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2716"* %17, null
  %23 = icmp ne %"class.blink::Member.2527"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2527"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2524"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2716", %"class.blink::HeapVectorBacking.2716"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.2524"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.2524"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2716", %"class.blink::HeapVectorBacking.2716"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23HTMLAttributeEquivalentEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2716"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2716"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2716"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23HTMLAttributeEquivalentEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23HTMLAttributeEquivalentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_22HTMLFontSizeEquivalentEEEvOT_(%"class.WTF::Vector.2524"*, %"class.blink::HTMLFontSizeEquivalent"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23HTMLAttributeEquivalentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2524"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.2524", %"class.WTF::Vector.2524"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2527"*, %"class.blink::Member.2527"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2527", %"class.blink::Member.2527"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLFontSizeEquivalent"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2527"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) unnamed_addr #1 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !3

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties) #12
  br label %11

11:                                               ; preds = %7, %10, %1
  %12 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %62

14:                                               ; preds = %11
  tail call void @_ZN5blink11CSSProperty39FilterWebExposedCSSPropertiesIntoVectorEPKNS_16ExecutionContextEPKNS_13CSSPropertyIDEmRN3WTF6VectorIPKS0_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %0, i32* getelementptr inbounds ([23 x i32], [23 x i32]* @_ZN5blinkL24kStaticEditingPropertiesE, i64 0, i64 0), i64 23, %"class.WTF::Vector.2507"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)) #12
  %15 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %62, label %17

17:                                               ; preds = %14, %58
  %18 = phi i32 [ %59, %58 ], [ 0, %14 ]
  %19 = tail call dereferenceable(8) %"class.blink::CSSProperty"** @_ZN3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2507"* bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*), i32 %18) #12
  %20 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 514
  br i1 %23, label %24, label %58

24:                                               ; preds = %17
  %25 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %28 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = icmp ugt i32 %27, %18
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  store i8* null, i8** %26, align 8
  br label %40

31:                                               ; preds = %24
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %33 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %27) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %32, i8* %33) #12
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  store i8* %35, i8** %26, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %3) #12
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %40

40:                                               ; preds = %37, %31, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %41 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.blink::CSSProperty"***), align 8
  %42 = zext i32 %18 to i64
  %43 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %41, i64 %42
  %44 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %43, i64 1
  %45 = icmp eq %"class.blink::CSSProperty"** %43, null
  br i1 %45, label %55, label %46, !prof !4

46:                                               ; preds = %40
  %47 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %41, i64 %48
  %50 = bitcast %"class.blink::CSSProperty"** %43 to i8*
  %51 = bitcast %"class.blink::CSSProperty"** %44 to i8*
  %52 = ptrtoint %"class.blink::CSSProperty"** %49 to i64
  %53 = ptrtoint %"class.blink::CSSProperty"** %44 to i64
  %54 = sub i64 %52, %53
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %51, i64 %54, i1 false) #12
  br label %55

55:                                               ; preds = %40, %46
  %56 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %57 = add i32 %56, -1
  store i32 %57, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  br label %62

58:                                               ; preds = %17
  %59 = add nuw i32 %18, 1
  %60 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %61 = icmp ult i32 %59, %60
  br i1 %61, label %17, label %62

62:                                               ; preds = %58, %14, %55, %11
  ret %"class.WTF::Vector.2507"* bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL20AllEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CSSProperty"** @_ZN3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2507"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %24, i64 %25
  ret %"class.blink::CSSProperty"** %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CSSProperty"** @_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2507"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2507", %"class.WTF::Vector.2507"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %24, i64 %25
  ret %"class.blink::CSSProperty"** %26
}

declare zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1831"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1831", %"class.WTF::Vector.1831"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1831", %"class.WTF::Vector.1831"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18CSSIdentifierValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CSSIdentifierValue"**
  %5 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::CSSIdentifierValue"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %5, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18CSSIdentifierValueEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18CSSIdentifierValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2502"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2502"* %0, i32 %5) #12
  %6 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member.1834"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #12
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2502"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2502"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2502"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1834"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2749"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2749"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.2502"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking.2749", %"class.blink::HeapVectorBacking.2749"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #12
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.2502"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.1834"*
  %33 = icmp eq %"class.blink::Member.1834"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #12
  %39 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %8, align 8
  %40 = icmp eq %"class.blink::Member.1834"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member.1834"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.1834"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #12
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #12
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !4

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #12
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #12
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #12
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2502"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2502"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %5, align 8
  %7 = icmp eq %"class.blink::Member.1834"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.1834"*
  %10 = icmp eq %"class.blink::Member.1834"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2502"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.2502"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.1834"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !4

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #12
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.1834"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.1834"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #12
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #12
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2503"* %20, %"class.blink::Member.1834"* %6) #12
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #12
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking.2749"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #12
  %48 = ptrtoint %"class.blink::HeapVectorBacking.2749"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking.2749"* %47, null
  %53 = icmp ne %"class.blink::Member.1834"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !5

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.1834"*
  %58 = icmp ne %"class.blink::Member.1834"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.1834"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking.2749", %"class.blink::HeapVectorBacking.2749"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #12
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking.2749"* %47 to %"class.blink::Member.1834"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.1834"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.1834"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #12
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.2502"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #12
  %87 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.1834"*
  %90 = icmp eq %"class.blink::Member.1834"* %87, %89
  br i1 %90, label %93, label %91, !prof !5

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2503"* %92, %"class.blink::Member.1834"* %87) #12
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.2502"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking.2749", %"class.blink::HeapVectorBacking.2749"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #12
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2749"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2749"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2749"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1834"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1834"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2503"*, %"class.blink::Member.1834"*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.blink::Member.1834"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::HeapVector.2753"* @_ZN5blink13StyleResolver20StyleRulesForElementEPNS_7ElementEj(%"class.blink::StyleResolver"*, %"class.blink::Element"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2759"* @_ZN3WTF6VectorIN5blink6MemberINS1_9StyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2756"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2759"*, %"class.blink::Member.2759"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2759", %"class.blink::Member.2759"* %24, i64 %25
  ret %"class.blink::Member.2759"* %26
}

declare dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"*) local_unnamed_addr #2

declare { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

declare void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i1 zeroext, i32, i1 zeroext, i1 zeroext) unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11CSSPropertyEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"*, i16 zeroext, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSStyleDeclarationE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSStyleDeclaration"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL19DiffTextDecorationsEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEPKNS_8CSSValueENS_17SecureContextModeE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"*, i32) unnamed_addr #1 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0
  %7 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %6, i32 %1) #12
  %8 = icmp eq %"class.blink::CSSValue"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %7, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp ugt i8 %11, 51
  %13 = bitcast %"class.blink::CSSValue"* %7 to %"class.blink::CSSValueList"*
  %14 = select i1 %12, %"class.blink::CSSValueList"* %13, %"class.blink::CSSValueList"* null
  br label %15

15:                                               ; preds = %4, %9
  %16 = phi %"class.blink::CSSValueList"* [ %14, %9 ], [ null, %4 ]
  %17 = icmp eq %"class.blink::CSSValue"* %2, null
  br i1 %17, label %71, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp ugt i8 %20, 51
  %22 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSValueList"*
  %23 = select i1 %21, %"class.blink::CSSValueList"* %22, %"class.blink::CSSValueList"* null
  %24 = icmp ne %"class.blink::CSSValueList"* %16, null
  %25 = and i1 %24, %21
  br i1 %25, label %26, label %71

26:                                               ; preds = %18
  %27 = tail call %"class.blink::CSSValueList"* @_ZNK5blink12CSSValueList4CopyEv(%"class.blink::CSSValueList"* nonnull %16) #12
  %28 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %23, i64 0, i32 1, i32 0
  br label %62

33:                                               ; preds = %62, %26
  %34 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %60, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %27, i64 0, i32 0
  %40 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %39) #12
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %6, i32 %1) #12
  %43 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %0, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %42, i32 %3, %"class.blink::StyleSheetContents"* null) #12
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #12
  br label %59

59:                                               ; preds = %37, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %71

60:                                               ; preds = %33
  %61 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %0, i32 %1, %"class.WTF::String"* null) #12
  br label %71

62:                                               ; preds = %31, %62
  %63 = phi i32 [ 0, %31 ], [ %68, %62 ]
  %64 = tail call dereferenceable(8) %"class.blink::Member.1834"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2502"* %32, i32 %63) #12
  %65 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %65, align 8
  %67 = tail call zeroext i1 @_ZN5blink12CSSValueList9RemoveAllERKNS_8CSSValueE(%"class.blink::CSSValueList"* %27, %"class.blink::CSSValue"* dereferenceable(3) %66) #12
  %68 = add nuw i32 %63, 1
  %69 = load i32, i32* %28, align 4
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %62, label %33

71:                                               ; preds = %15, %60, %59, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL16FontWeightIsBoldEPKNS_8CSSValueE(%"class.blink::CSSValue"*) unnamed_addr #1 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = icmp eq %"class.blink::CSSValue"* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %13 [
    i32 56, label %39
    i32 57, label %12
  ]

12:                                               ; preds = %8
  br label %39

13:                                               ; preds = %4, %1, %8
  %14 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPrimitiveValue"*
  %15 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* %14) #12
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.16, i64 0, i64 0), i32 1883, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17, i64 0, i64 0)) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %13, %16
  %20 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %14) #12
  %21 = fcmp ult double %20, 0x47EFFFFFE0000000
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = fcmp ole double %20, 0xC7EFFFFFE0000000
  %24 = select i1 %23, double 0xC7EFFFFFE0000000, double %20
  %25 = fptrunc double %24 to float
  br label %26

26:                                               ; preds = %19, %22
  %27 = phi float [ %25, %22 ], [ 0x47EFFFFFE0000000, %19 ]
  %28 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %34, !prof !3

30:                                               ; preds = %26
  %31 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #12
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton.2818"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #12
  br label %34

34:                                               ; preds = %26, %30, %33
  %35 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.2818"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %36 = sitofp i16 %35 to float
  %37 = fmul float %36, 2.500000e-01
  %38 = fcmp oge float %27, %37
  br label %39

39:                                               ; preds = %8, %12, %34
  %40 = phi i1 [ %38, %34 ], [ false, %8 ], [ true, %12 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1834"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2502"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2502", %"class.WTF::Vector.2502"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1834"*, %"class.blink::Member.1834"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1834", %"class.blink::Member.1834"* %24, i64 %25
  ret %"class.blink::Member.1834"* %26
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare double @_ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE(i32) local_unnamed_addr #2

declare i32 @_ZN5blink17FontSizeFunctions14LegacyFontSizeEPKNS_8DocumentEib(%"class.blink::Document"*, i32, i1 zeroext) local_unnamed_addr #2

declare float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

declare void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink27CSSComputedStyleDeclaration19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.WTF::Vector.2507"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(16) %"class.WTF::Vector.2507"* @_ZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) unnamed_addr #1 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !3

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties) #12
  br label %11

11:                                               ; preds = %7, %10, %1
  %12 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %69

14:                                               ; preds = %11
  tail call void @_ZN5blink11CSSProperty39FilterWebExposedCSSPropertiesIntoVectorEPKNS_16ExecutionContextEPKNS_13CSSPropertyIDEmRN3WTF6VectorIPKS0_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %0, i32* getelementptr inbounds ([23 x i32], [23 x i32]* @_ZN5blinkL24kStaticEditingPropertiesE, i64 0, i64 0), i64 23, %"class.WTF::Vector.2507"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)) #12
  %15 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %69, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %20 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %23

23:                                               ; preds = %17, %64
  %24 = phi i64 [ 0, %17 ], [ %65, %64 ]
  %25 = trunc i64 %24 to i32
  br label %26

26:                                               ; preds = %23, %59
  %27 = call dereferenceable(8) %"class.blink::CSSProperty"** @_ZN3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2507"* bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*), i32 %25) #12
  %28 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 64
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %64

33:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %34 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %35 = zext i32 %34 to i64
  %36 = icmp ult i64 %24, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  store i8* null, i8** %19, align 8
  br label %45

38:                                               ; preds = %33
  %39 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %25) #12
  %40 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %34) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %39, i8* %40) #12
  %41 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  store i8* %41, i8** %19, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %3) #12
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %45

45:                                               ; preds = %43, %38, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %46 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.blink::CSSProperty"***), align 8
  %47 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %46, i64 %24
  %48 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %47, i64 1
  %49 = icmp eq %"class.blink::CSSProperty"** %47, null
  br i1 %49, label %59, label %50, !prof !4

50:                                               ; preds = %45
  %51 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %46, i64 %52
  %54 = bitcast %"class.blink::CSSProperty"** %47 to i8*
  %55 = bitcast %"class.blink::CSSProperty"** %48 to i8*
  %56 = ptrtoint %"class.blink::CSSProperty"** %53 to i64
  %57 = ptrtoint %"class.blink::CSSProperty"** %48 to i64
  %58 = sub i64 %56, %57
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* nonnull align 8 %55, i64 %58, i1 false) #12
  br label %59

59:                                               ; preds = %45, %50
  %60 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %61 = add i32 %60, -1
  store i32 %61, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %24, %62
  br i1 %63, label %26, label %69

64:                                               ; preds = %26
  %65 = add nuw nsw i64 %24, 1
  %66 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2639", %"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %65, %67
  br i1 %68, label %23, label %69

69:                                               ; preds = %64, %59, %14, %11
  ret %"class.WTF::Vector.2507"* bitcast (%"class.WTF::StaticSingleton.2639"* @_ZZN5blinkL28InheritableEditingPropertiesEPKNS_16ExecutionContextEE12s_properties to %"class.WTF::Vector.2507"*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12EditingStyleEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #12
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1047"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1047"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1047"*, i32, i32*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ugt i32* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %5, i64 %10
  %12 = icmp ugt i32* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq i32* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1047"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load i32*, i32** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i32* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i32* %37 to i8*
  br i1 %40, label %42, label %49, !prof !5

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.1047"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.1047"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint i32* %2 to i64
  %55 = ptrtoint i32* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !5

68:                                               ; preds = %53
  %69 = icmp eq i32* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64 %70) #12
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv, i64 0, i64 0)) #12
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.1047"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load i32*, i32** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne i32* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast i32* %77 to i8*
  br i1 %80, label %82, label %88, !prof !5

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #12
  %86 = bitcast %"class.WTF::Vector.1047"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #12
  %90 = bitcast %"class.WTF::Vector.1047"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to i32*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi i32* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds i32, i32* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi i32* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret i32* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1047"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1047"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1047", %"class.WTF::Vector.1047"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2518"* @_ZNK3WTF6VectorIN5blink6MemberINS1_21HTMLElementEquivalentEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2515"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2515", %"class.WTF::Vector.2515"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2518"*, %"class.blink::Member.2518"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2518", %"class.blink::Member.2518"* %24, i64 %25
  ret %"class.blink::Member.2518"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13QualifiedNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.2530"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2530", %"class.WTF::Vector.2530"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2530", %"class.WTF::Vector.2530"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %6, align 8
  %8 = icmp ugt %"class.blink::QualifiedName"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 %10
  %12 = icmp ugt %"class.blink::QualifiedName"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2530", %"class.WTF::Vector.2530"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::QualifiedName"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13QualifiedNameEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2530"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::QualifiedName"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::QualifiedName"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::QualifiedName"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.2530"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.2530"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::QualifiedName"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::QualifiedName"* %1 to i64
  %56 = ptrtoint %"class.blink::QualifiedName"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2530", %"class.WTF::Vector.2530"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::QualifiedName"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13QualifiedNameEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2530"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::QualifiedName"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::QualifiedName"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.2530"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.2530"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::QualifiedName"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::QualifiedName"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::QualifiedName"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::QualifiedName"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %100, i64 %103, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %105, %"class.blink::QualifiedName::QualifiedNameImpl"** %106, align 8
  %107 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %105, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %105, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, 16777216
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %105, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %114) #12
  br label %115

115:                                              ; preds = %99, %108, %113
  %116 = load i32, i32* %3, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %3, align 4
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13QualifiedNameEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
