; ModuleID = 'gen/third_party/blink/public/mojom/choosers/popup_menu.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/choosers/popup_menu.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::PopupMenuClientAsyncWaiter" = type { %"class.blink::mojom::PopupMenuClient"* }
%"class.blink::mojom::PopupMenuClient" = type { i32 (...)** }
%"class.blink::mojom::PopupMenuClientInterceptorForTesting" = type { %"class.blink::mojom::PopupMenuClient" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }

$_ZN5blink5mojom15PopupMenuClientD2Ev = comdat any

$_ZN5blink5mojom36PopupMenuClientInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom36PopupMenuClientInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::PopupMenuClient"*)* @_ZN5blink5mojom15PopupMenuClientD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)* @_ZN5blink5mojom36PopupMenuClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*, %"class.std::__1::vector"*)* @_ZN5blink5mojom36PopupMenuClientInterceptorForTesting16DidAcceptIndicesERKNSt3__16vectorIiNS2_9allocatorIiEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)* @_ZN5blink5mojom36PopupMenuClientInterceptorForTesting9DidCancelEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom26PopupMenuClientAsyncWaiterC1EPNS0_15PopupMenuClientE = hidden unnamed_addr alias void (%"class.blink::mojom::PopupMenuClientAsyncWaiter"*, %"class.blink::mojom::PopupMenuClient"*), void (%"class.blink::mojom::PopupMenuClientAsyncWaiter"*, %"class.blink::mojom::PopupMenuClient"*)* @_ZN5blink5mojom26PopupMenuClientAsyncWaiterC2EPNS0_15PopupMenuClientE
@_ZN5blink5mojom26PopupMenuClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::PopupMenuClientAsyncWaiter"*), void (%"class.blink::mojom::PopupMenuClientAsyncWaiter"*)* @_ZN5blink5mojom26PopupMenuClientAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom36PopupMenuClientInterceptorForTesting16DidAcceptIndicesERKNSt3__16vectorIiNS2_9allocatorIiEEEE(%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::PopupMenuClientInterceptorForTesting"* %0 to %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)**, %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)*, %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)** %4, i64 4
  %6 = load %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)*, %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::PopupMenuClient"* %6(%"class.blink::mojom::PopupMenuClientInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.blink::mojom::PopupMenuClient"* %7 to void (%"class.blink::mojom::PopupMenuClient"*, %"class.std::__1::vector"*)***
  %9 = load void (%"class.blink::mojom::PopupMenuClient"*, %"class.std::__1::vector"*)**, void (%"class.blink::mojom::PopupMenuClient"*, %"class.std::__1::vector"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::PopupMenuClient"*, %"class.std::__1::vector"*)*, void (%"class.blink::mojom::PopupMenuClient"*, %"class.std::__1::vector"*)** %9, i64 2
  %11 = load void (%"class.blink::mojom::PopupMenuClient"*, %"class.std::__1::vector"*)*, void (%"class.blink::mojom::PopupMenuClient"*, %"class.std::__1::vector"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::PopupMenuClient"* %7, %"class.std::__1::vector"* dereferenceable(24) %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom36PopupMenuClientInterceptorForTesting9DidCancelEv(%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::PopupMenuClientInterceptorForTesting"* %0 to %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)**, %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)*, %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)** %3, i64 4
  %5 = load %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)*, %"class.blink::mojom::PopupMenuClient"* (%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::PopupMenuClient"* %5(%"class.blink::mojom::PopupMenuClientInterceptorForTesting"* %0) #5
  %7 = bitcast %"class.blink::mojom::PopupMenuClient"* %6 to void (%"class.blink::mojom::PopupMenuClient"*)***
  %8 = load void (%"class.blink::mojom::PopupMenuClient"*)**, void (%"class.blink::mojom::PopupMenuClient"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::PopupMenuClient"*)*, void (%"class.blink::mojom::PopupMenuClient"*)** %8, i64 3
  %10 = load void (%"class.blink::mojom::PopupMenuClient"*)*, void (%"class.blink::mojom::PopupMenuClient"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::PopupMenuClient"* %6) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom26PopupMenuClientAsyncWaiterC2EPNS0_15PopupMenuClientE(%"class.blink::mojom::PopupMenuClientAsyncWaiter"* nocapture, %"class.blink::mojom::PopupMenuClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::PopupMenuClientAsyncWaiter", %"class.blink::mojom::PopupMenuClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::PopupMenuClient"* %1, %"class.blink::mojom::PopupMenuClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom26PopupMenuClientAsyncWaiterD2Ev(%"class.blink::mojom::PopupMenuClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom15PopupMenuClientD2Ev(%"class.blink::mojom::PopupMenuClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom36PopupMenuClientInterceptorForTestingD0Ev(%"class.blink::mojom::PopupMenuClientInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
