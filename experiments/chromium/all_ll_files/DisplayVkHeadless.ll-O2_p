; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/headless/DisplayVkHeadless.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/headless/DisplayVkHeadless.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::DisplayVkHeadless" = type { %"class.rx::DisplayVk", %"class.std::__1::vector.45" }
%"class.rx::DisplayVk" = type { %"class.rx::DisplayImpl", %"class.rx::vk::Context", %"class.angle::ScratchBuffer", %"struct.rx::vk::Error" }
%"class.rx::DisplayImpl" = type { %"class.rx::EGLImplFactory", %"class.angle::Subject", %"struct.egl::DisplayState"*, i8, %"struct.egl::DisplayExtensions", i8, %"struct.egl::Caps", %"class.egl::BlobCache"* }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Caps" = type { i8, i8 }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.23" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.41", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { float }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.153", %"class.angle::PackedEnumMap.160", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase", i8, %"class.std::__1::mutex", %"class.std::__1::vector.163", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.178", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.222", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.440", i32, %"class.std::__1::shared_ptr" }
%"class.egl::Display" = type { %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"struct.egl::DisplayState", %"class.rx::DisplayImpl"*, %"class.angle::ObserverBinding", %"class.egl::AttributeMap", %"class.egl::ConfigSet", %"class.std::__1::set.63", %"class.std::__1::set.73", %"class.std::__1::set.83", %"class.std::__1::set.93", i8, i8, %"struct.egl::Caps", %"struct.egl::DisplayExtensions", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.egl::Device"*, %"class.egl::Surface"*, i32, %"class.angle::LoggingAnnotator", %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.egl::BlobCache", %"class.gl::MemoryProgramCache", i64, i64, %"struct.angle::FrontendFeatures", %"class.std::__1::vector.114", %"class.std::__1::mutex", %"class.std::__1::vector.121", %"class.std::__1::vector.121", %"class.std::__1::mutex", %"class.std::__1::mutex" }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::DisplayState" = type { i8*, %"class.std::__1::set", %"class.std::__1::vector", %"class.std::__1::vector", i8, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::basic_string"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.egl::AttributeMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::ConfigSet" = type { %"class.std::__1::map.52" }
%"class.std::__1::map.52" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.63" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.73" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.83" = type { %"class.std::__1::__tree.84" }
%"class.std::__1::__tree.84" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::Device" = type opaque
%"class.egl::Surface" = type opaque
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.gl::TextureManager" = type opaque
%"class.gl::SemaphoreManager" = type opaque
%"class.gl::MemoryProgramCache" = type <{ %"class.egl::BlobCache"*, i32, [4 x i8] }>
%"struct.angle::FrontendFeatures" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.103" }
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"struct.angle::Feature"**, %"struct.angle::Feature"**, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.angle::Feature"** }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.angle::ScratchBuffer"* }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector.128", %"class.std::__1::vector.128", %"class.std::__1::vector.128", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.137", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.139", %"struct.std::__1::array.139", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { i32*, i32*, %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.135", i32 }
%"struct.std::__1::array.135" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.136" }
%"struct.std::__1::array.136" = type { [6 x i32] }
%"class.angle::PackedEnumMap.137" = type { %"struct.std::__1::array.138" }
%"struct.std::__1::array.138" = type { [6 x i64] }
%"struct.std::__1::array.139" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.140" }
%"class.angle::PackedEnumMap.140" = type { %"struct.std::__1::array.141" }
%"struct.std::__1::array.141" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.142" }
%"class.std::__1::set.142" = type { %"class.std::__1::__tree.143" }
%"class.std::__1::__tree.143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.152", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.std::__1::array.152" = type { [4 x %"struct.angle::Feature"] }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.155" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.160" = type { %"struct.std::__1::array.161" }
%"struct.std::__1::array.161" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.172" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.165" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::Serial" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.167" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.rx::vk::GarbageObject"* }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.177" }
%"struct.std::__1::array.177" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.178" = type { %"struct.std::__1::array.179" }
%"struct.std::__1::array.179" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.180" }
%"class.rx::vk::WrappedObject.180" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.187" }
%"struct.std::__1::__split_buffer" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.182" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.181" }
%"class.rx::vk::WrappedObject.181" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.191", %"class.std::__1::vector.198", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.212", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.193" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.200" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.216" }
%"class.rx::vk::WrappedObject.216" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.205", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.212" = type { %"struct.std::__1::array.213" }
%"struct.std::__1::array.213" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.214" }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.295" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.231", %"class.angle::BitSetT", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.252", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.224", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.226" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.angle::PackedEnumMap.231" = type { %"struct.std::__1::array.232" }
%"struct.std::__1::array.232" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.233" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.235" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT" = type { i16 }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.240", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.242" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.247", %"class.angle::BitSetT.247", %"struct.std::__1::array.248" }
%"class.angle::BitSetT.247" = type { i8 }
%"struct.std::__1::array.248" = type { [9 x i8] }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.249" }
%"struct.std::__1::array.249" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.250" }
%"class.rx::vk::WrappedObject.250" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.251" }
%"struct.std::__1::array.251" = type { [10 x %union.VkClearValue] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"struct.std::__1::array.252" = type { [4 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.261" }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { i32*, i32*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { i32* }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.253" }
%"class.std::__1::vector.253" = type { %"class.std::__1::__vector_base.254" }
%"class.std::__1::__vector_base.254" = type { %"class.angle::BitSetT.255"*, %"class.angle::BitSetT.255"*, %"class.std::__1::__compressed_pair.256" }
%"class.angle::BitSetT.255" = type { i64 }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.angle::BitSetT.255"* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.294" }
%"struct.std::__1::array.294" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.270", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.285", %struct.Optional, %"struct.std::__1::array.293", %"struct.std::__1::array.293", [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.268" }
%"class.rx::vk::WrappedObject.268" = type { %struct.VkImage_T* }
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.269" }
%"class.rx::vk::WrappedObject.269" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.270" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.271"* }
%"class.rx::vk::RefCounted.271" = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.272", i32, i32, i64, i64, i32, %"class.std::__1::vector.278", %"class.std::__1::vector.278" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.rx::vk::BufferHelper"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.275" }
%"class.rx::vk::WrappedObject.275" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.276" }
%"class.rx::vk::WrappedObject.276" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::unique_ptr.272"* }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"class.std::__1::vector.287"*, %"class.std::__1::vector.287"*, %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::vector.287" = type opaque
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.std::__1::vector.287"* }
%struct.Optional = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.293" = type { [16 x %"class.angle::BitSetT.247"] }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.332", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.345", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.300" }
%"class.std::__1::deque.300" = type { %"class.std::__1::__deque_base.301" }
%"class.std::__1::__deque_base.301" = type { %"struct.std::__1::__split_buffer.302", i64, %"class.std::__1::__compressed_pair.324" }
%"struct.std::__1::__split_buffer.302" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.319" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.304", %"class.std::__1::vector.128", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.165", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.312", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.303" }
%"class.rx::vk::WrappedObject.303" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %struct.VkSemaphore_T** }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.311" }
%"class.rx::vk::WrappedObject.311" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.332" = type { %"class.std::__1::deque.333" }
%"class.std::__1::deque.333" = type { %"class.std::__1::__deque_base.334" }
%"class.std::__1::__deque_base.334" = type { %"struct.std::__1::__split_buffer.335", i64, %"class.std::__1::__compressed_pair.341" }
%"struct.std::__1::__split_buffer.335" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.328, %union.anon.330, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.328 = type { i64 }
%union.anon.330 = type { i64 }
%"class.std::__1::map.345" = type { %"class.std::__1::__tree.346" }
%"class.std::__1::__tree.346" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.356" }
%"class.rx::vk::WrappedObject.356" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats", %"class.std::__1::unordered_map.357" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map.357" = type { %"class.std::__1::__hash_table.358" }
%"class.std::__1::__hash_table.358" = type <{ %"class.std::__1::unique_ptr.359", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.378", [4 x i8] }>
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361", %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.std::__1::__hash_node_base.362"** }
%"struct.std::__1::__hash_node_base.362" = type { %"struct.std::__1::__hash_node_base.362"* }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.std::__1::__bucket_list_deallocator.364" }
%"class.std::__1::__bucket_list_deallocator.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.std::__1::__hash_node_base.362" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.384", %"class.std::__1::unordered_map.385" }
%"class.rx::HasCacheStats.384" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.385" = type { %"class.std::__1::__hash_table.386" }
%"class.std::__1::__hash_table.386" = type <{ %"class.std::__1::unique_ptr.387", %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.406", [4 x i8] }>
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389", %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.std::__1::__hash_node_base.390"** }
%"struct.std::__1::__hash_node_base.390" = type { %"struct.std::__1::__hash_node_base.390"* }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.std::__1::__bucket_list_deallocator.392" }
%"class.std::__1::__bucket_list_deallocator.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.std::__1::__hash_node_base.390" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.412", %"class.angle::PackedEnumMap.412" }
%"class.angle::PackedEnumMap.412" = type { %"struct.std::__1::array.413" }
%"struct.std::__1::array.413" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.414" }
%"struct.std::__1::atomic.414" = type { %"struct.std::__1::__atomic_base.415" }
%"struct.std::__1::__atomic_base.415" = type { %"struct.std::__1::__atomic_base.416" }
%"struct.std::__1::__atomic_base.416" = type { %"struct.std::__1::__cxx_atomic_impl.417" }
%"struct.std::__1::__cxx_atomic_impl.417" = type { %"struct.std::__1::__cxx_atomic_base_impl.418" }
%"struct.std::__1::__cxx_atomic_base_impl.418" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map", i64, i64, %"class.absl::flat_hash_map.427" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::flat_hash_map.427" = type { %"class.absl::container_internal::raw_hash_map.428" }
%"class.absl::container_internal::raw_hash_map.428" = type { %"class.absl::container_internal::raw_hash_set.429" }
%"class.absl::container_internal::raw_hash_set.429" = type { i8*, %"union.absl::container_internal::map_slot_type.430"*, i64, i64, %"class.absl::container_internal::CompressedTuple.431" }
%"union.absl::container_internal::map_slot_type.430" = type opaque
%"class.absl::container_internal::CompressedTuple.431" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.432" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.432" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.440" = type { %"struct.std::__1::array.441" }
%"struct.std::__1::array.441" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.442" }
%"class.std::__1::shared_ptr.442" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.443" }
%"class.std::__1::shared_ptr.443" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR*, %"class.std::__1::__compressed_pair.47" }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.VkSurfaceFormatKHR* }
%"class.rx::ExternalImageSiblingImpl" = type opaque
%"class.gl::Context" = type opaque
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"struct.egl::SurfaceState" = type opaque
%"class.rx::WindowSurfaceVkHeadless" = type { %"class.rx::WindowSurfaceVk" }
%"class.rx::WindowSurfaceVk" = type { %"class.rx::SurfaceVk", i64, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR, %"class.std::__1::vector.460", %struct.VkSwapchainKHR_T*, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.467", i64, %"class.std::__1::vector.468", %"class.std::__1::vector.482", %"class.std::__1::vector.490", %"class.rx::vk::Semaphore", i32, %"class.rx::vk::Recycler.497", %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.angle::ObserverBinding", %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.angle::ObserverBinding", %"class.rx::vk::Framebuffer", i8, i64 }
%"class.rx::SurfaceVk" = type { %"class.rx::SurfaceImpl", %"class.angle::ObserverInterface", %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk" }
%"class.rx::RenderTargetVk" = type { %"class.rx::FramebufferAttachmentRenderTarget", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, i32 }
%"class.rx::FramebufferAttachmentRenderTarget" = type { i32 (...)** }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { i32*, i32*, %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { i32* }
%"struct.std::__1::array.467" = type { [2 x %"class.rx::Serial"] }
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { %"struct.rx::impl::SwapchainCleanupData"*, %"struct.rx::impl::SwapchainCleanupData"*, %"class.std::__1::__compressed_pair.477" }
%"struct.rx::impl::SwapchainCleanupData" = type { %struct.VkSwapchainKHR_T*, %"class.std::__1::vector.470" }
%"class.std::__1::vector.470" = type { %"class.std::__1::__vector_base.471" }
%"class.std::__1::__vector_base.471" = type { %"class.rx::vk::Semaphore"*, %"class.rx::vk::Semaphore"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.rx::vk::Semaphore"* }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.rx::impl::SwapchainCleanupData"* }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"struct.rx::impl::SwapchainImage"*, %"struct.rx::impl::SwapchainImage"*, %"class.std::__1::__compressed_pair.485" }
%"struct.rx::impl::SwapchainImage" = type { [8 x i8], %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.rx::vk::Framebuffer", %"struct.std::__1::array.484", i64, i64 }
%"struct.std::__1::array.484" = type { [3 x %"struct.rx::impl::ImagePresentHistory"] }
%"struct.rx::impl::ImagePresentHistory" = type { [8 x i8], %"class.rx::vk::Semaphore", %"class.std::__1::vector.468" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.rx::impl::SwapchainImage"* }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.angle::ObserverBinding"* }
%"class.rx::vk::Recycler.497" = type { %"class.std::__1::vector.470" }
%"class.rx::vk::ImageViewHelper" = type <{ %"class.rx::vk::Resource", %"class.gl::LevelIndexWrapper.444", [4 x i8], %"class.std::__1::vector.445", %"class.std::__1::vector.445", %"class.std::__1::vector.445", %"class.std::__1::vector.445", %"class.std::__1::vector.445", %"class.std::__1::vector.445", %"class.std::__1::vector.445", i8, [7 x i8], %"class.std::__1::vector.445", %"class.std::__1::vector.453", %"class.std::__1::vector.445", %"class.std::__1::vector.453", %"class.std::__1::vector.445", %"class.std::__1::vector.453", %"class.rx::vk::ImageOrBufferViewSerial", [4 x i8] }>
%"class.gl::LevelIndexWrapper.444" = type { i32 }
%"class.std::__1::vector.445" = type { %"class.std::__1::__vector_base.446" }
%"class.std::__1::__vector_base.446" = type { %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"*, %"class.std::__1::__compressed_pair.448" }
%"class.rx::vk::ImageView" = type { %"class.rx::vk::WrappedObject.447" }
%"class.rx::vk::WrappedObject.447" = type { %struct.VkImageView_T* }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.rx::vk::ImageView"* }
%"class.std::__1::vector.453" = type { %"class.std::__1::__vector_base.454" }
%"class.std::__1::__vector_base.454" = type { %"class.std::__1::vector.445"*, %"class.std::__1::vector.445"*, %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.std::__1::vector.445"* }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"struct.egl::ImageState" = type opaque
%"class.rx::ContextImpl" = type opaque
%"class.gl::State" = type opaque
%"class.gl::ErrorSet" = type opaque
%"class.rx::StreamProducerImpl" = type opaque
%"class.rx::EGLSyncImpl" = type opaque
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.498" }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.rx::DeviceImpl" = type opaque

$_ZN2rx14EGLImplFactory26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE = comdat any

$_ZN2rx17DisplayVkHeadlessD2Ev = comdat any

$_ZN2rx17DisplayVkHeadlessD0Ev = comdat any

$_ZN2rx11DisplayImpl17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE = comdat any

$_ZNK2rx11DisplayImpl26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE = comdat any

$_ZThn8_N2rx17DisplayVkHeadlessD1Ev = comdat any

$_ZThn8_N2rx17DisplayVkHeadlessD0Ev = comdat any

$_ZThn200_N2rx17DisplayVkHeadlessD1Ev = comdat any

$_ZThn200_N2rx17DisplayVkHeadlessD0Ev = comdat any

@_ZTVN2rx17DisplayVkHeadlessE = hidden unnamed_addr constant { [46 x i8*], [4 x i8*], [5 x i8*] } { [46 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DisplayVkHeadless"*)* @_ZN2rx17DisplayVkHeadlessD2Ev to i8*), i8* bitcast (void (%"class.rx::DisplayVkHeadless"*)* @_ZN2rx17DisplayVkHeadlessD0Ev to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk19createWindowSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk20createPbufferSurfaceERKN3egl12SurfaceStateERKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk29createPbufferFromClientBufferERKN3egl12SurfaceStateEjPvRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk19createPixmapSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ImageImpl"* (%"class.rx::DisplayVk"*, %"struct.egl::ImageState"*, %"class.gl::Context"*, i32, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk11createImageERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ContextImpl"* (%"class.rx::DisplayVk"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE to i8*), i8* bitcast (%"class.rx::StreamProducerImpl"* (%"class.rx::DisplayVk"*, i32, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk30createStreamProducerD3DTextureEN3egl6Stream12ConsumerTypeERKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ExternalImageSiblingImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZN2rx14EGLImplFactory26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE to i8*), i8* bitcast (%"class.rx::EGLSyncImpl"* (%"class.rx::DisplayVk"*, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayVk10createSyncERKN3egl12AttributeMapE to i8*), i8* bitcast (%"class.rx::ShareGroupImpl"* (%"class.rx::DisplayVk"*)* @_ZN2rx9DisplayVk16createShareGroupEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayVk"*, %"class.egl::Display"*)* @_ZN2rx9DisplayVk10initializeEPN3egl7DisplayE to i8*), i8* bitcast (void (%"class.rx::DisplayVkHeadless"*)* @_ZN2rx17DisplayVkHeadless9terminateEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl14prepareForCallEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl13releaseThreadEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayVk"*, %"class.egl::Display"*, %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.gl::Context"*)* @_ZN2rx9DisplayVk11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::ConfigSet"*, %"class.rx::DisplayVkHeadless"*)* @_ZN2rx17DisplayVkHeadless15generateConfigsEv to i8*), i8* bitcast (i1 (%"class.rx::DisplayVk"*)* @_ZN2rx9DisplayVk14testDeviceLostEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayVk"*, %"class.egl::Display"*)* @_ZN2rx9DisplayVk17restoreLostDeviceEPKN3egl7DisplayE to i8*), i8* bitcast (i1 (%"class.rx::DisplayVkHeadless"*, i64)* @_ZNK2rx17DisplayVkHeadless19isValidNativeWindowEl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl20validateClientBufferEPKN3egl6ConfigEjPvRKNS1_12AttributeMapE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl14validatePixmapEPKN3egl6ConfigElRKNS1_12AttributeMapE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayVk"*)* @_ZN2rx9DisplayVk22getRendererDescriptionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayVk"*)* @_ZN2rx9DisplayVk15getVendorStringEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayVk"*)* @_ZN2rx9DisplayVk16getVersionStringEv to i8*), i8* bitcast (%"class.rx::DeviceImpl"* (%"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl12createDeviceEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayVk"*, %"class.gl::Context"*)* @_ZN2rx9DisplayVk10waitClientEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayVk"*, %"class.gl::Context"*, i32)* @_ZN2rx9DisplayVk10waitNativeEPKN2gl7ContextEi to i8*), i8* bitcast (i64 (%"class.rx::DisplayVk"*)* @_ZNK2rx9DisplayVk24getMaxSupportedESVersionEv to i8*), i8* bitcast (i64 (%"class.rx::DisplayVk"*)* @_ZNK2rx9DisplayVk25getMaxConformantESVersionEv to i8*), i8* bitcast (void (%"class.rx::DisplayImpl"*, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*)* @_ZN2rx11DisplayImpl17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE to i8*), i8* bitcast (void (%"class.rx::DisplayImpl"*, %"struct.angle::FrontendFeatures"*)* @_ZNK2rx11DisplayImpl26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE to i8*), i8* bitcast (void (%"class.rx::DisplayVk"*, %"class.std::__1::vector.114"*)* @_ZN2rx9DisplayVk19populateFeatureListEPNSt3__16vectorIPKN5angle7FeatureENS1_9allocatorIS6_EEEE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl15handleGPUSwitchEv to i8*), i8* bitcast (void (%"class.rx::DisplayVk"*, %"struct.egl::DisplayExtensions"*)* @_ZNK2rx9DisplayVk18generateExtensionsEPN3egl17DisplayExtensionsE to i8*), i8* bitcast (void (%"class.rx::DisplayVk"*, %"struct.egl::Caps"*)* @_ZNK2rx9DisplayVk12generateCapsEPN3egl4CapsE to i8*), i8* bitcast (i8* (%"class.rx::DisplayVkHeadless"*)* @_ZNK2rx17DisplayVkHeadless15getWSIExtensionEv to i8*), i8* bitcast (i8* (%"class.rx::DisplayVk"*)* @_ZNK2rx9DisplayVk11getWSILayerEv to i8*), i8* bitcast (void (%"class.rx::DisplayVkHeadless"*, %"struct.egl::Config"*)* @_ZN2rx17DisplayVkHeadless18checkConfigSupportEPN3egl6ConfigE to i8*), i8* bitcast (void (%"class.rx::DisplayVk"*, i32, i8*, i8*, i32)* @_ZN2rx9DisplayVk11handleErrorE8VkResultPKcS3_j to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayVkHeadless"*, %"struct.egl::SurfaceState"*, i64)* @_ZN2rx17DisplayVkHeadless21createWindowSurfaceVkERKN3egl12SurfaceStateEl to i8*), i8* bitcast (i32 (%"class.rx::DisplayVk"*)* @_ZN2rx9DisplayVk14waitNativeImplEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.rx::DisplayVkHeadless"*)* @_ZThn8_N2rx17DisplayVkHeadlessD1Ev to i8*), i8* bitcast (void (%"class.rx::DisplayVkHeadless"*)* @_ZThn8_N2rx17DisplayVkHeadlessD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void (%"class.rx::DisplayVkHeadless"*)* @_ZThn200_N2rx17DisplayVkHeadlessD1Ev to i8*), i8* bitcast (void (%"class.rx::DisplayVkHeadless"*)* @_ZThn200_N2rx17DisplayVkHeadlessD0Ev to i8*), i8* bitcast (void (%"class.rx::DisplayVk"*, i32, i8*, i8*, i32)* @_ZThn200_N2rx9DisplayVk11handleErrorE8VkResultPKcS3_j to i8*)] }, align 8
@_ZZN2rx17DisplayVkHeadless15generateConfigsEvE13kColorFormats = internal constant [4 x i32] [i32 32856, i32 37793, i32 36194, i32 32849], align 16
@_ZN2rx6egl_vkL26kConfigDepthStencilFormatsE = internal constant [4 x i32] [i32 0, i32 35056, i32 33190, i32 33189], align 16
@.str = private unnamed_addr constant [24 x i8] c"VK_EXT_headless_surface\00", align 1

@_ZN2rx17DisplayVkHeadlessC1ERKN3egl12DisplayStateE = hidden unnamed_addr alias void (%"class.rx::DisplayVkHeadless"*, %"struct.egl::DisplayState"*), void (%"class.rx::DisplayVkHeadless"*, %"struct.egl::DisplayState"*)* @_ZN2rx17DisplayVkHeadlessC2ERKN3egl12DisplayStateE

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.rx::ExternalImageSiblingImpl"* @_ZN2rx14EGLImplFactory26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.rx::EGLImplFactory"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret %"class.rx::ExternalImageSiblingImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17DisplayVkHeadlessC2ERKN3egl12DisplayStateE(%"class.rx::DisplayVkHeadless"*, %"struct.egl::DisplayState"* dereferenceable(96)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 0
  tail call void @_ZN2rx9DisplayVkC2ERKN3egl12DisplayStateE(%"class.rx::DisplayVk"* %3, %"struct.egl::DisplayState"* dereferenceable(96) %1) #8
  %4 = bitcast %"class.rx::DisplayVkHeadless"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.45"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  ret void
}

declare void @_ZN2rx9DisplayVkC2ERKN3egl12DisplayStateE(%"class.rx::DisplayVk"*, %"struct.egl::DisplayState"* dereferenceable(96)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17DisplayVkHeadless9terminateEv(%"class.rx::DisplayVkHeadless"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 0
  tail call void @_ZN2rx9DisplayVk9terminateEv(%"class.rx::DisplayVk"* %2) #8
  ret void
}

declare void @_ZN2rx9DisplayVk9terminateEv(%"class.rx::DisplayVk"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2rx17DisplayVkHeadless19isValidNativeWindowEl(%"class.rx::DisplayVkHeadless"* nocapture readnone, i64) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SurfaceImpl"* @_ZN2rx17DisplayVkHeadless21createWindowSurfaceVkERKN3egl12SurfaceStateEl(%"class.rx::DisplayVkHeadless"* nocapture readnone, %"struct.egl::SurfaceState"*, i64) unnamed_addr #1 align 2 {
  %4 = tail call i8* @_Znwm(i64 2160) #9
  %5 = bitcast i8* %4 to %"class.rx::WindowSurfaceVkHeadless"*
  tail call void @_ZN2rx23WindowSurfaceVkHeadlessC1ERKN3egl12SurfaceStateEl(%"class.rx::WindowSurfaceVkHeadless"* nonnull %5, %"struct.egl::SurfaceState"* %1, i64 %2) #8
  %6 = bitcast i8* %4 to %"class.rx::SurfaceImpl"*
  ret %"class.rx::SurfaceImpl"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2rx23WindowSurfaceVkHeadlessC1ERKN3egl12SurfaceStateEl(%"class.rx::WindowSurfaceVkHeadless"*, %"struct.egl::SurfaceState"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17DisplayVkHeadless15generateConfigsEv(%"class.egl::ConfigSet"* noalias sret, %"class.rx::DisplayVkHeadless"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %1, i64 0, i32 0
  tail call void @_ZN2rx6egl_vk15GenerateConfigsEPKjmS2_mPNS_9DisplayVkE(%"class.egl::ConfigSet"* sret %0, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZN2rx17DisplayVkHeadless15generateConfigsEvE13kColorFormats, i64 0, i64 0), i64 4, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZN2rx6egl_vkL26kConfigDepthStencilFormatsE, i64 0, i64 0), i64 4, %"class.rx::DisplayVk"* %3) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx17DisplayVkHeadless18checkConfigSupportEPN3egl6ConfigE(%"class.rx::DisplayVkHeadless"* nocapture, %"struct.egl::Config"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK2rx17DisplayVkHeadless15getWSIExtensionEv(%"class.rx::DisplayVkHeadless"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2rx32IsVulkanHeadlessDisplayAvailableEv() local_unnamed_addr #3 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::DisplayImpl"* @_ZN2rx27CreateVulkanHeadlessDisplayERKN3egl12DisplayStateE(%"struct.egl::DisplayState"* dereferenceable(96)) local_unnamed_addr #1 {
  %2 = tail call i8* @_Znwm(i64 296) #9
  %3 = bitcast i8* %2 to %"class.rx::DisplayVk"*
  tail call void @_ZN2rx9DisplayVkC2ERKN3egl12DisplayStateE(%"class.rx::DisplayVk"* nonnull %3, %"struct.egl::DisplayState"* dereferenceable(96) %0) #8
  %4 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 200
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 272
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = bitcast i8* %2 to %"class.rx::DisplayImpl"*
  ret %"class.rx::DisplayImpl"* %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx17DisplayVkHeadlessD2Ev(%"class.rx::DisplayVkHeadless"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.rx::DisplayVkHeadless"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %4, align 8
  %6 = icmp eq %struct.VkSurfaceFormatKHR* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %struct.VkSurfaceFormatKHR* %5 to i64
  %9 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %struct.VkSurfaceFormatKHR** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %struct.VkSurfaceFormatKHR* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 0
  tail call void @_ZN2rx9DisplayVkD2Ev(%"class.rx::DisplayVk"* %13) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx17DisplayVkHeadlessD0Ev(%"class.rx::DisplayVkHeadless"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.rx::DisplayVkHeadless"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %4, align 8
  %6 = icmp eq %struct.VkSurfaceFormatKHR* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %struct.VkSurfaceFormatKHR* %5 to i64
  %9 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %struct.VkSurfaceFormatKHR** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %struct.VkSurfaceFormatKHR* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 0, i32 0
  tail call void @_ZN2rx9DisplayVkD2Ev(%"class.rx::DisplayVk"* %13) #8
  %14 = bitcast %"class.rx::DisplayVkHeadless"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

declare %"class.rx::SurfaceImpl"* @_ZN2rx9DisplayVk19createWindowSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE(%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::SurfaceImpl"* @_ZN2rx9DisplayVk20createPbufferSurfaceERKN3egl12SurfaceStateERKNS1_12AttributeMapE(%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::SurfaceImpl"* @_ZN2rx9DisplayVk29createPbufferFromClientBufferERKN3egl12SurfaceStateEjPvRKNS1_12AttributeMapE(%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::SurfaceImpl"* @_ZN2rx9DisplayVk19createPixmapSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE(%"class.rx::DisplayVk"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::ImageImpl"* @_ZN2rx9DisplayVk11createImageERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapE(%"class.rx::DisplayVk"*, %"struct.egl::ImageState"*, %"class.gl::Context"*, i32, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::ContextImpl"* @_ZN2rx9DisplayVk13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE(%"class.rx::DisplayVk"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::StreamProducerImpl"* @_ZN2rx9DisplayVk30createStreamProducerD3DTextureEN3egl6Stream12ConsumerTypeERKNS1_12AttributeMapE(%"class.rx::DisplayVk"*, i32, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::EGLSyncImpl"* @_ZN2rx9DisplayVk10createSyncERKN3egl12AttributeMapE(%"class.rx::DisplayVk"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::ShareGroupImpl"* @_ZN2rx9DisplayVk16createShareGroupEv(%"class.rx::DisplayVk"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk10initializeEPN3egl7DisplayE(%"class.egl::Error"* sret, %"class.rx::DisplayVk"*, %"class.egl::Display"*) unnamed_addr #2

declare void @_ZN2rx11DisplayImpl14prepareForCallEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZN2rx11DisplayImpl13releaseThreadEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::DisplayVk"*, %"class.egl::Display"*, %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.gl::Context"*) unnamed_addr #2

declare zeroext i1 @_ZN2rx9DisplayVk14testDeviceLostEv(%"class.rx::DisplayVk"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk17restoreLostDeviceEPKN3egl7DisplayE(%"class.egl::Error"* sret, %"class.rx::DisplayVk"*, %"class.egl::Display"*) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl20validateClientBufferEPKN3egl6ConfigEjPvRKNS1_12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl14validatePixmapEPKN3egl6ConfigElRKNS1_12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN2rx9DisplayVk22getRendererDescriptionEv(%"class.std::__1::basic_string"* sret, %"class.rx::DisplayVk"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk15getVendorStringEv(%"class.std::__1::basic_string"* sret, %"class.rx::DisplayVk"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk16getVersionStringEv(%"class.std::__1::basic_string"* sret, %"class.rx::DisplayVk"*) unnamed_addr #2

declare %"class.rx::DeviceImpl"* @_ZN2rx11DisplayImpl12createDeviceEv(%"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk10waitClientEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::DisplayVk"*, %"class.gl::Context"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk10waitNativeEPKN2gl7ContextEi(%"class.egl::Error"* sret, %"class.rx::DisplayVk"*, %"class.gl::Context"*, i32) unnamed_addr #2

declare i64 @_ZNK2rx9DisplayVk24getMaxSupportedESVersionEv(%"class.rx::DisplayVk"*) unnamed_addr #2

declare i64 @_ZNK2rx9DisplayVk25getMaxConformantESVersionEv(%"class.rx::DisplayVk"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11DisplayImpl17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE(%"class.rx::DisplayImpl"*, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2rx11DisplayImpl26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE(%"class.rx::DisplayImpl"*, %"struct.angle::FrontendFeatures"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN2rx9DisplayVk19populateFeatureListEPNSt3__16vectorIPKN5angle7FeatureENS1_9allocatorIS6_EEEE(%"class.rx::DisplayVk"*, %"class.std::__1::vector.114"*) unnamed_addr #2

declare void @_ZN2rx11DisplayImpl15handleGPUSwitchEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZNK2rx9DisplayVk18generateExtensionsEPN3egl17DisplayExtensionsE(%"class.rx::DisplayVk"*, %"struct.egl::DisplayExtensions"*) unnamed_addr #2

declare void @_ZNK2rx9DisplayVk12generateCapsEPN3egl4CapsE(%"class.rx::DisplayVk"*, %"struct.egl::Caps"*) unnamed_addr #2

declare i8* @_ZNK2rx9DisplayVk11getWSILayerEv(%"class.rx::DisplayVk"*) unnamed_addr #2

declare void @_ZN2rx9DisplayVk11handleErrorE8VkResultPKcS3_j(%"class.rx::DisplayVk"*, i32, i8*, i8*, i32) unnamed_addr #2

declare i32 @_ZN2rx9DisplayVk14waitNativeImplEv(%"class.rx::DisplayVk"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N2rx17DisplayVkHeadlessD1Ev(%"class.rx::DisplayVkHeadless"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 -1, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.47"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.47"* %2, i64 25
  %5 = bitcast %"class.std::__1::__compressed_pair.47"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.47"* %2, i64 34, i32 0, i32 0
  %7 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %6, align 8
  %8 = icmp eq %struct.VkSurfaceFormatKHR* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %struct.VkSurfaceFormatKHR* %7 to i64
  %11 = getelementptr inbounds %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.47"* %2, i64 35, i32 0, i32 0
  %12 = bitcast %struct.VkSurfaceFormatKHR** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast %struct.VkSurfaceFormatKHR* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %1, %9
  %15 = bitcast %"class.std::__1::__compressed_pair.47"* %2 to %"class.rx::DisplayVk"*
  tail call void @_ZN2rx9DisplayVkD2Ev(%"class.rx::DisplayVk"* %15) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N2rx17DisplayVkHeadlessD0Ev(%"class.rx::DisplayVkHeadless"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 -1, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.47"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.47"* %2, i64 25
  %5 = bitcast %"class.std::__1::__compressed_pair.47"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.47"* %2, i64 34, i32 0, i32 0
  %7 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %6, align 8
  %8 = icmp eq %struct.VkSurfaceFormatKHR* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %struct.VkSurfaceFormatKHR* %7 to i64
  %11 = getelementptr inbounds %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.47"* %2, i64 35, i32 0, i32 0
  %12 = bitcast %struct.VkSurfaceFormatKHR** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast %struct.VkSurfaceFormatKHR* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %1, %9
  %15 = bitcast %"class.std::__1::__compressed_pair.47"* %2 to %"class.rx::DisplayVk"*
  tail call void @_ZN2rx9DisplayVkD2Ev(%"class.rx::DisplayVk"* %15) #8
  %16 = bitcast %"class.std::__1::__compressed_pair.47"* %2 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn200_N2rx17DisplayVkHeadlessD1Ev(%"class.rx::DisplayVkHeadless"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 -1, i32 0, i32 0, i32 1, i32 1, i32 3
  %3 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 25
  %5 = bitcast i64* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 34
  %7 = bitcast i64* %6 to %struct.VkSurfaceFormatKHR**
  %8 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %7, align 8
  %9 = icmp eq %struct.VkSurfaceFormatKHR* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %struct.VkSurfaceFormatKHR* %8 to i64
  %12 = getelementptr inbounds i64, i64* %2, i64 35
  store i64 %11, i64* %12, align 8
  %13 = bitcast %struct.VkSurfaceFormatKHR* %8 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %1, %10
  %15 = bitcast i64* %2 to %"class.rx::DisplayVk"*
  tail call void @_ZN2rx9DisplayVkD2Ev(%"class.rx::DisplayVk"* %15) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn200_N2rx17DisplayVkHeadlessD0Ev(%"class.rx::DisplayVkHeadless"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayVkHeadless", %"class.rx::DisplayVkHeadless"* %0, i64 -1, i32 0, i32 0, i32 1, i32 1, i32 3
  %3 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 25
  %5 = bitcast i64* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [4 x i8*], [5 x i8*] }, { [46 x i8*], [4 x i8*], [5 x i8*] }* @_ZTVN2rx17DisplayVkHeadlessE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 34
  %7 = bitcast i64* %6 to %struct.VkSurfaceFormatKHR**
  %8 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %7, align 8
  %9 = icmp eq %struct.VkSurfaceFormatKHR* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %struct.VkSurfaceFormatKHR* %8 to i64
  %12 = getelementptr inbounds i64, i64* %2, i64 35
  store i64 %11, i64* %12, align 8
  %13 = bitcast %struct.VkSurfaceFormatKHR* %8 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %1, %10
  %15 = bitcast i64* %2 to %"class.rx::DisplayVk"*
  tail call void @_ZN2rx9DisplayVkD2Ev(%"class.rx::DisplayVk"* %15) #8
  %16 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn200_N2rx9DisplayVk11handleErrorE8VkResultPKcS3_j(%"class.rx::DisplayVk"*, i32, i8*, i8*, i32) unnamed_addr #1 align 2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2rx9DisplayVkD2Ev(%"class.rx::DisplayVk"*) unnamed_addr #6

declare void @_ZN2rx6egl_vk15GenerateConfigsEPKjmS2_mPNS_9DisplayVkE(%"class.egl::ConfigSet"* sret, i32*, i64, i32*, i64, %"class.rx::DisplayVk"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
