; ModuleID = '../../jingle/notifier/communicator/single_login_attempt.cc'
source_filename = "../../jingle/notifier/communicator/single_login_attempt.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.jingle_xmpp::StaticQName" = type { i8*, i8* }
%"class.notifier::SingleLoginAttempt::Delegate" = type { i32 (...)** }
%"class.notifier::SingleLoginAttempt" = type { %"class.notifier::XmppConnection::Delegate", %"class.notifier::LoginSettings", %"class.notifier::SingleLoginAttempt::Delegate"*, %"class.std::__1::vector.7", %"class.std::__1::__wrap_iter", %"class.std::__1::unique_ptr" }
%"class.notifier::XmppConnection::Delegate" = type { i32 (...)** }
%"class.notifier::LoginSettings" = type { %"class.jingle_xmpp::XmppClientSettings", %"class.base::RepeatingCallback", %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"struct.net::NetworkTrafficAnnotationTag", [4 x i8], %"struct.notifier::ServerInformation", %"class.base::Time" }
%"class.jingle_xmpp::XmppClientSettings" = type <{ %"class.jingle_xmpp::XmppUserSettings", %"class.net::HostPortPair", i32, [4 x i8] }>
%"class.jingle_xmpp::XmppUserSettings" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.notifier::ServerInformation"*, %"struct.notifier::ServerInformation"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.notifier::ServerInformation"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"struct.notifier::ServerInformation" = type { %"class.net::HostPortPair", i32, [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"*, %"class.std::__1::__compressed_pair.9" }
%"struct.notifier::ConnectionSettings" = type { %"class.net::HostPortPair", i32, i32 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.notifier::ConnectionSettings"* }
%"class.std::__1::__wrap_iter" = type { %"struct.notifier::ConnectionSettings"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.notifier::XmppConnection"* }
%"class.notifier::XmppConnection" = type { %"class.sigslot::has_slots", %"class.std::__1::unique_ptr.24", %"class.base::WeakPtr", i8, %"class.notifier::XmppConnection::Delegate"* }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.jingle_glue::TaskPump"* }
%"class.jingle_glue::TaskPump" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.29", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.30" }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i8 }
%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.notifier::GaiaTokenPreXmppAuth" = type { %"class.jingle_xmpp::PreXmppAuth", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::PreXmppAuth" = type { %"class.jingle_xmpp::SaslHandler", %"class.sigslot::signal_with_thread_policy" }
%"class.jingle_xmpp::SaslHandler" = type { i32 (...)** }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.base::WeakPtr.38" = type { %"class.base::internal::WeakPtrBase" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::basic_string"* }

$_ZN11jingle_xmpp16XmppUserSettingsC2ERKS0_ = comdat any

@_ZTVN8notifier18SingleLoginAttemptE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.notifier::SingleLoginAttempt"*, %"class.base::WeakPtr.38"*)* @_ZN8notifier18SingleLoginAttempt9OnConnectEN4base7WeakPtrIN11jingle_xmpp23XmppTaskParentInterfaceEEE to i8*), i8* bitcast (void (%"class.notifier::SingleLoginAttempt"*, i32, i32, %"class.jingle_xmpp::XmlElement"*)* @_ZN8notifier18SingleLoginAttempt7OnErrorEN11jingle_xmpp10XmppEngine5ErrorEiPKNS1_10XmlElementE to i8*), i8* bitcast (void (%"class.notifier::SingleLoginAttempt"*)* @_ZN8notifier18SingleLoginAttemptD2Ev to i8*), i8* bitcast (void (%"class.notifier::SingleLoginAttempt"*)* @_ZN8notifier18SingleLoginAttemptD0Ev to i8*)] }, align 8
@_ZN11jingle_xmpp25QN_XSTREAM_SEE_OTHER_HOSTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp15QN_XSTREAM_TEXTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1
@_ZTVN8notifier18SingleLoginAttempt8DelegateE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.notifier::SingleLoginAttempt::Delegate"*)* @_ZN8notifier18SingleLoginAttempt8DelegateD2Ev to i8*), i8* bitcast (void (%"class.notifier::SingleLoginAttempt::Delegate"*)* @_ZN8notifier18SingleLoginAttempt8DelegateD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c":\00", align 1

@_ZN8notifier18SingleLoginAttempt8DelegateD1Ev = hidden unnamed_addr alias void (%"class.notifier::SingleLoginAttempt::Delegate"*), void (%"class.notifier::SingleLoginAttempt::Delegate"*)* @_ZN8notifier18SingleLoginAttempt8DelegateD2Ev
@_ZN8notifier18SingleLoginAttemptC1ERKNS_13LoginSettingsEPNS0_8DelegateE = hidden unnamed_addr alias void (%"class.notifier::SingleLoginAttempt"*, %"class.notifier::LoginSettings"*, %"class.notifier::SingleLoginAttempt::Delegate"*), void (%"class.notifier::SingleLoginAttempt"*, %"class.notifier::LoginSettings"*, %"class.notifier::SingleLoginAttempt::Delegate"*)* @_ZN8notifier18SingleLoginAttemptC2ERKNS_13LoginSettingsEPNS0_8DelegateE
@_ZN8notifier18SingleLoginAttemptD1Ev = hidden unnamed_addr alias void (%"class.notifier::SingleLoginAttempt"*), void (%"class.notifier::SingleLoginAttempt"*)* @_ZN8notifier18SingleLoginAttemptD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttempt8DelegateD2Ev(%"class.notifier::SingleLoginAttempt::Delegate"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttempt8DelegateD0Ev(%"class.notifier::SingleLoginAttempt::Delegate"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttemptC2ERKNS_13LoginSettingsEPNS0_8DelegateE(%"class.notifier::SingleLoginAttempt"*, %"class.notifier::LoginSettings"* dereferenceable(336), %"class.notifier::SingleLoginAttempt::Delegate"*) unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8notifier18SingleLoginAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1
  tail call void @_ZN8notifier13LoginSettingsC1ERKS0_(%"class.notifier::LoginSettings"* %6, %"class.notifier::LoginSettings"* dereferenceable(336) %1) #13
  %7 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 2
  store %"class.notifier::SingleLoginAttempt::Delegate"* %2, %"class.notifier::SingleLoginAttempt::Delegate"** %7, align 8
  %8 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  call void @_ZNK8notifier13LoginSettings10GetServersEv(%"class.std::__1::vector"* nonnull sret %4, %"class.notifier::LoginSettings"* %6) #13
  %10 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 3
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp ne i8 %11, 0
  call void @_ZN8notifier26MakeConnectionSettingsListERKNSt3__16vectorINS_17ServerInformationENS0_9allocatorIS2_EEEEb(%"class.std::__1::vector.7"* sret %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %4, i1 zeroext %12) #13
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %14 = load %"struct.notifier::ServerInformation"*, %"struct.notifier::ServerInformation"** %13, align 8
  %15 = icmp eq %"struct.notifier::ServerInformation"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %3
  %17 = bitcast %"struct.notifier::ServerInformation"* %14 to i8*
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %19 = load %"struct.notifier::ServerInformation"*, %"struct.notifier::ServerInformation"** %18, align 8
  %20 = icmp eq %"struct.notifier::ServerInformation"* %19, %14
  br i1 %20, label %28, label %21

21:                                               ; preds = %16, %21
  %22 = phi %"struct.notifier::ServerInformation"* [ %23, %21 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"struct.notifier::ServerInformation", %"struct.notifier::ServerInformation"* %22, i64 -1
  call void @_ZN8notifier17ServerInformationD1Ev(%"struct.notifier::ServerInformation"* %23) #13
  %24 = icmp eq %"struct.notifier::ServerInformation"* %23, %14
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector"* %4 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi i8* [ %27, %25 ], [ %17, %16 ]
  store %"struct.notifier::ServerInformation"* %14, %"struct.notifier::ServerInformation"** %18, align 8
  call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  %31 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %8, i64 0, i32 0, i32 0
  %32 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %31, align 8
  %33 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 4, i32 0
  store %"struct.notifier::ConnectionSettings"* %32, %"struct.notifier::ConnectionSettings"** %33, align 8
  %34 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 5
  %35 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %36, align 8
  %38 = icmp eq %"struct.notifier::ConnectionSettings"* %32, %37
  br i1 %38, label %40, label %39

39:                                               ; preds = %30
  call void @_ZN8notifier18SingleLoginAttempt10TryConnectERKNS_18ConnectionSettingsE(%"class.notifier::SingleLoginAttempt"* %0, %"struct.notifier::ConnectionSettings"* dereferenceable(40) %32)
  br label %40

40:                                               ; preds = %30, %39
  ret void
}

declare void @_ZN8notifier13LoginSettingsC1ERKS0_(%"class.notifier::LoginSettings"*, %"class.notifier::LoginSettings"* dereferenceable(336)) unnamed_addr #4

declare void @_ZN8notifier26MakeConnectionSettingsListERKNSt3__16vectorINS_17ServerInformationENS0_9allocatorIS2_EEEEb(%"class.std::__1::vector.7"* sret, %"class.std::__1::vector"* dereferenceable(24), i1 zeroext) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK8notifier13LoginSettings10GetServersEv(%"class.std::__1::vector"* sret, %"class.notifier::LoginSettings"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttempt10TryConnectERKNS_18ConnectionSettingsE(%"class.notifier::SingleLoginAttempt"*, %"struct.notifier::ConnectionSettings"* dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.jingle_xmpp::XmppClientSettings", align 8
  %5 = alloca %"class.jingle_xmpp::Jid", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"struct.net::NetworkTrafficAnnotationTag", align 4
  %10 = bitcast %"class.jingle_xmpp::XmppClientSettings"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 216, i1 false)
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN11jingle_xmpp16XmppUserSettingsC2ERKS0_(%"class.jingle_xmpp::XmppUserSettings"* nonnull %11, %"class.jingle_xmpp::XmppUserSettings"* dereferenceable(176) %12) #13
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 1
  %14 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.net::HostPortPair"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.net::HostPortPair"* %13 to i8*
  %21 = bitcast %"class.net::HostPortPair"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #13
  br label %28

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %13, i64 0, i32 0
  %24 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #13
  br label %28

28:                                               ; preds = %19, %22
  %29 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 1, i32 1
  %30 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 0, i32 1, i32 1
  %31 = load i16, i16* %30, align 8
  store i16 %31, i16* %29, align 8
  %32 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 2
  %33 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  call void @_ZNK8notifier18ConnectionSettings22FillXmppClientSettingsEPN11jingle_xmpp18XmppClientSettingsE(%"struct.notifier::ConnectionSettings"* %1, %"class.jingle_xmpp::XmppClientSettings"* nonnull %4) #13
  %35 = bitcast %"class.jingle_xmpp::Jid"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 72, i1 false)
  %36 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #13
  %40 = icmp ugt i64 %39, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %42) #12
  unreachable

43:                                               ; preds = %28
  %44 = icmp ult i64 %39, 23
  br i1 %44, label %54, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %39, 16
  %47 = and i64 %46, -16
  %48 = call i8* @_Znwm(i64 %47) #14
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = or i64 %47, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %39, i64* %52, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %59

54:                                               ; preds = %43
  %55 = trunc i64 %39 to i8
  %56 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 %55, i8* %57, align 1
  %58 = icmp eq i64 %39, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54, %45
  %60 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %56, %54 ], [ %53, %45 ]
  %61 = phi i8* [ %38, %54 ], [ %48, %45 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %39, i1 false) #13
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %56, %54 ], [ %60, %59 ]
  %64 = phi i8* [ %38, %54 ], [ %61, %59 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %39
  store i8 0, i8* %65, align 1
  call void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"class.jingle_xmpp::Jid"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %36, %"class.std::__1::basic_string"* dereferenceable(24) %37, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #13
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %62, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  %73 = call i8* @_Znwm(i64 160) #14
  %74 = bitcast i8* %73 to %"class.notifier::GaiaTokenPreXmppAuth"*
  %75 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #13
  call void @_ZNK11jingle_xmpp3Jid3StrEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.jingle_xmpp::Jid"* nonnull %5) #13
  %76 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 4
  %77 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 8
  %78 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 4
  call void @_ZN8notifier20GaiaTokenPreXmppAuthC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_(%"class.notifier::GaiaTokenPreXmppAuth"* nonnull %74, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* dereferenceable(24) %76, %"class.std::__1::basic_string"* dereferenceable(24) %77, %"class.std::__1::basic_string"* dereferenceable(24) %78) #13
  %79 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %72, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #13
  %87 = bitcast i8* %73 to %"class.jingle_xmpp::PreXmppAuth"*
  %88 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13
  %89 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %90 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 1, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %89, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %90) #13
  %91 = bitcast %"struct.net::NetworkTrafficAnnotationTag"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #13
  %92 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1, i32 5, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %"struct.net::NetworkTrafficAnnotationTag", %"struct.net::NetworkTrafficAnnotationTag"* %9, i64 0, i32 0
  store i32 %93, i32* %94, align 4
  %95 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95)
  %96 = call i8* @_Znwm(i64 96) #14
  %97 = bitcast i8* %96 to %"class.notifier::XmppConnection"*
  %98 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.base::RepeatingCallback"* %8 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  store i64 %100, i64* %101, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %98, align 8
  %102 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 0
  call void @_ZN8notifier14XmppConnectionC1ERKN11jingle_xmpp18XmppClientSettingsEN4base17RepeatingCallbackIFvN4mojo15PendingReceiverIN7network5mojom27ProxyResolvingSocketFactoryEEEEEEPNS0_8DelegateEPNS1_11PreXmppAuthERKN3net27NetworkTrafficAnnotationTagE(%"class.notifier::XmppConnection"* nonnull %97, %"class.jingle_xmpp::XmppClientSettings"* nonnull dereferenceable(216) %4, %"class.base::RepeatingCallback"* nonnull %3, %"class.notifier::XmppConnection::Delegate"* %102, %"class.jingle_xmpp::PreXmppAuth"* nonnull %87, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) %9) #13
  %103 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %103) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95)
  %104 = ptrtoint i8* %96 to i64
  %105 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 5
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.notifier::XmppConnection"*, %"class.notifier::XmppConnection"** %106, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  store i64 %104, i64* %108, align 8
  %109 = icmp eq %"class.notifier::XmppConnection"* %107, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %86
  %111 = bitcast %"class.notifier::XmppConnection"* %107 to void (%"class.notifier::XmppConnection"*)***
  %112 = load void (%"class.notifier::XmppConnection"*)**, void (%"class.notifier::XmppConnection"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.notifier::XmppConnection"*)*, void (%"class.notifier::XmppConnection"*)** %112, i64 1
  %114 = load void (%"class.notifier::XmppConnection"*)*, void (%"class.notifier::XmppConnection"*)** %113, align 8
  call void %114(%"class.notifier::XmppConnection"* nonnull %107) #13
  br label %115

115:                                              ; preds = %110, %86
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #13
  %116 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #13
  %117 = bitcast %"class.net::HostPortPair"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #14
  br label %124

124:                                              ; preds = %115, %121
  %125 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #14
  br label %132

132:                                              ; preds = %129, %124
  %133 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 5
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #14
  br label %141

141:                                              ; preds = %138, %132
  %142 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #14
  br label %149

149:                                              ; preds = %146, %141
  %150 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 3
  %151 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #14
  br label %158

158:                                              ; preds = %155, %149
  %159 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 2
  %160 = bitcast %"class.std::__1::basic_string"* %159 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %164, %158
  %168 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %172, %167
  %176 = bitcast %"class.jingle_xmpp::XmppClientSettings"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #14
  br label %183

183:                                              ; preds = %175, %180
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttemptD2Ev(%"class.notifier::SingleLoginAttempt"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8notifier18SingleLoginAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.notifier::XmppConnection"*, %"class.notifier::XmppConnection"** %3, align 8
  store %"class.notifier::XmppConnection"* null, %"class.notifier::XmppConnection"** %3, align 8
  %5 = icmp eq %"class.notifier::XmppConnection"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.notifier::XmppConnection"* %4 to void (%"class.notifier::XmppConnection"*)***
  %8 = load void (%"class.notifier::XmppConnection"*)**, void (%"class.notifier::XmppConnection"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.notifier::XmppConnection"*)*, void (%"class.notifier::XmppConnection"*)** %8, i64 1
  %10 = load void (%"class.notifier::XmppConnection"*)*, void (%"class.notifier::XmppConnection"*)** %9, align 8
  tail call void %10(%"class.notifier::XmppConnection"* nonnull %4) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %13, align 8
  %15 = icmp eq %"struct.notifier::ConnectionSettings"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = bitcast %"struct.notifier::ConnectionSettings"* %14 to i8*
  %18 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %18, align 8
  %20 = icmp eq %"struct.notifier::ConnectionSettings"* %19, %14
  br i1 %20, label %28, label %21

21:                                               ; preds = %16, %21
  %22 = phi %"struct.notifier::ConnectionSettings"* [ %23, %21 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"struct.notifier::ConnectionSettings", %"struct.notifier::ConnectionSettings"* %22, i64 -1
  tail call void @_ZN8notifier18ConnectionSettingsD1Ev(%"struct.notifier::ConnectionSettings"* %23) #13
  %24 = icmp eq %"struct.notifier::ConnectionSettings"* %23, %14
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector.7"* %12 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi i8* [ %27, %25 ], [ %17, %16 ]
  store %"struct.notifier::ConnectionSettings"* %14, %"struct.notifier::ConnectionSettings"** %18, align 8
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %11, %28
  %31 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1
  tail call void @_ZN8notifier13LoginSettingsD1Ev(%"class.notifier::LoginSettings"* %31) #13
  %32 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 0
  tail call void @_ZN8notifier14XmppConnection8DelegateD2Ev(%"class.notifier::XmppConnection::Delegate"* %32) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8notifier13LoginSettingsD1Ev(%"class.notifier::LoginSettings"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN8notifier14XmppConnection8DelegateD2Ev(%"class.notifier::XmppConnection::Delegate"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttemptD0Ev(%"class.notifier::SingleLoginAttempt"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8notifier18SingleLoginAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.notifier::XmppConnection"*, %"class.notifier::XmppConnection"** %3, align 8
  store %"class.notifier::XmppConnection"* null, %"class.notifier::XmppConnection"** %3, align 8
  %5 = icmp eq %"class.notifier::XmppConnection"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.notifier::XmppConnection"* %4 to void (%"class.notifier::XmppConnection"*)***
  %8 = load void (%"class.notifier::XmppConnection"*)**, void (%"class.notifier::XmppConnection"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.notifier::XmppConnection"*)*, void (%"class.notifier::XmppConnection"*)** %8, i64 1
  %10 = load void (%"class.notifier::XmppConnection"*)*, void (%"class.notifier::XmppConnection"*)** %9, align 8
  tail call void %10(%"class.notifier::XmppConnection"* nonnull %4) #13
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %13, align 8
  %15 = icmp eq %"struct.notifier::ConnectionSettings"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = bitcast %"struct.notifier::ConnectionSettings"* %14 to i8*
  %18 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %18, align 8
  %20 = icmp eq %"struct.notifier::ConnectionSettings"* %19, %14
  br i1 %20, label %28, label %21

21:                                               ; preds = %16, %21
  %22 = phi %"struct.notifier::ConnectionSettings"* [ %23, %21 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"struct.notifier::ConnectionSettings", %"struct.notifier::ConnectionSettings"* %22, i64 -1
  tail call void @_ZN8notifier18ConnectionSettingsD1Ev(%"struct.notifier::ConnectionSettings"* %23) #13
  %24 = icmp eq %"struct.notifier::ConnectionSettings"* %23, %14
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector.7"* %12 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi i8* [ %27, %25 ], [ %17, %16 ]
  store %"struct.notifier::ConnectionSettings"* %14, %"struct.notifier::ConnectionSettings"** %18, align 8
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %11, %28
  %31 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 1
  tail call void @_ZN8notifier13LoginSettingsD1Ev(%"class.notifier::LoginSettings"* %31) #13
  %32 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 0
  tail call void @_ZN8notifier14XmppConnection8DelegateD2Ev(%"class.notifier::XmppConnection::Delegate"* %32) #13
  %33 = bitcast %"class.notifier::SingleLoginAttempt"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttempt9OnConnectEN4base7WeakPtrIN11jingle_xmpp23XmppTaskParentInterfaceEEE(%"class.notifier::SingleLoginAttempt"* nocapture readonly, %"class.base::WeakPtr.38"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::WeakPtr.38", align 8
  %4 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 2
  %5 = load %"class.notifier::SingleLoginAttempt::Delegate"*, %"class.notifier::SingleLoginAttempt::Delegate"** %4, align 8
  %6 = getelementptr inbounds %"class.base::WeakPtr.38", %"class.base::WeakPtr.38"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::WeakPtr.38", %"class.base::WeakPtr.38"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %6, %"class.base::internal::WeakReference"* dereferenceable(8) %7) #13
  %8 = getelementptr inbounds %"class.base::WeakPtr.38", %"class.base::WeakPtr.38"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::WeakPtr.38", %"class.base::WeakPtr.38"* %1, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %8, align 8
  %11 = bitcast %"class.notifier::SingleLoginAttempt::Delegate"* %5 to void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"class.base::WeakPtr.38"*)***
  %12 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"class.base::WeakPtr.38"*)**, void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"class.base::WeakPtr.38"*)*** %11, align 8
  %13 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"class.base::WeakPtr.38"*)*, void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"class.base::WeakPtr.38"*)** %12, align 8
  call void %13(%"class.notifier::SingleLoginAttempt::Delegate"* %5, %"class.base::WeakPtr.38"* nonnull %3) #13
  %14 = getelementptr inbounds %"class.base::WeakPtr.38", %"class.base::WeakPtr.38"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier18SingleLoginAttempt7OnErrorEN11jingle_xmpp10XmppEngine5ErrorEiPKNS1_10XmlElementE(%"class.notifier::SingleLoginAttempt"*, i32, i32, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #3 align 2 {
  %5 = alloca %"class.std::__1::vector.43", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.net::HostPortPair", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.notifier::ServerInformation", align 8
  %10 = icmp eq %"class.jingle_xmpp::XmlElement"* %3, null
  br i1 %10, label %165, label %11

11:                                               ; preds = %4
  %12 = tail call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"* nonnull %3, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp25QN_XSTREAM_SEE_OTHER_HOSTE) #13
  %13 = icmp eq %"class.jingle_xmpp::XmlElement"* %12, null
  br i1 %13, label %165, label %14

14:                                               ; preds = %11
  %15 = tail call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"* nonnull %3, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp15QN_XSTREAM_TEXTE) #13
  %16 = icmp eq %"class.jingle_xmpp::XmlElement"* %15, null
  br i1 %16, label %165, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.net::HostPortPair"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #13
  %19 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  call void @_ZNK11jingle_xmpp10XmlElement8BodyTextEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.jingle_xmpp::XmlElement"* nonnull %15) #13
  %20 = bitcast %"class.std::__1::vector.43"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #13, !noalias !3
  %21 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %5, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false) #13, !noalias !3
  %25 = load i8, i8* %24, align 1, !noalias !3
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !3
  %29 = select i1 %26, i8* %28, i8* %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !3
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i64 %31, i64 %32
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.43"* nonnull sret %5, i8* %29, i64 %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #13, !noalias !3
  %34 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false) #13, !alias.scope !3
  call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* nonnull %7) #13
  store i16 5222, i16* %34, align 8, !alias.scope !3
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8, !noalias !3
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8, !noalias !3
  %37 = icmp eq %"class.std::__1::basic_string"* %35, %36
  br i1 %37, label %104, label %38

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 0
  %40 = icmp eq %"class.std::__1::basic_string"* %39, %35
  br i1 %40, label %69, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.net::HostPortPair"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1, !alias.scope !3
  %45 = icmp slt i8 %44, 0
  %46 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %45, label %59, label %50

50:                                               ; preds = %41
  br i1 %49, label %53, label %51

51:                                               ; preds = %50
  %52 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %52, i64 24, i1 false) #13
  br label %69

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %39, i8* %55, i64 %57) #13
  br label %69

59:                                               ; preds = %41
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %65 = zext i8 %48 to i64
  %66 = select i1 %49, i8* %61, i8* %64
  %67 = select i1 %49, i64 %63, i64 %65
  %68 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %39, i8* %66, i64 %67) #13
  br label %69

69:                                               ; preds = %59, %53, %51, %38
  %70 = bitcast %"class.std::__1::basic_string"** %22 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !3
  %72 = bitcast %"class.std::__1::vector.43"* %5 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !3
  %74 = sub i64 %71, %73
  %75 = sdiv exact i64 %74, 24
  %76 = icmp ult i64 %75, 2
  %77 = inttoptr i64 %73 to %"class.std::__1::basic_string"*
  br i1 %76, label %104, label %78

78:                                               ; preds = %69
  %79 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #13, !noalias !3
  store i32 5222, i32* %6, align 4, !noalias !3
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  %88 = select i1 %84, i8* %86, i8* %87
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %83 to i64
  %92 = select i1 %84, i64 %90, i64 %91
  %93 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %88, i64 %92, i32* nonnull %6) #13
  br i1 %93, label %95, label %94

94:                                               ; preds = %78
  store i32 5222, i32* %6, align 4, !noalias !3
  br label %100

95:                                               ; preds = %78
  %96 = load i32, i32* %6, align 4, !noalias !3
  %97 = add i32 %96, -1
  %98 = icmp ugt i32 %97, 65534
  br i1 %98, label %99, label %100

99:                                               ; preds = %95
  store i32 5222, i32* %6, align 4, !noalias !3
  br label %100

100:                                              ; preds = %99, %95, %94
  %101 = phi i32 [ %96, %95 ], [ 5222, %94 ], [ 5222, %99 ]
  %102 = trunc i32 %101 to i16
  store i16 %102, i16* %34, align 8, !alias.scope !3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #13, !noalias !3
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8, !noalias !3
  br label %104

104:                                              ; preds = %100, %69, %17
  %105 = phi %"class.std::__1::basic_string"* [ %103, %100 ], [ %35, %17 ], [ %77, %69 ]
  %106 = icmp eq %"class.std::__1::basic_string"* %105, null
  br i1 %106, label %128, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %109 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8, !noalias !3
  %110 = icmp eq %"class.std::__1::basic_string"* %109, %105
  br i1 %110, label %126, label %111

111:                                              ; preds = %107, %121
  %112 = phi %"class.std::__1::basic_string"* [ %113, %121 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 -1
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %118, %111
  %122 = icmp eq %"class.std::__1::basic_string"* %113, %105
  br i1 %122, label %123, label %111

123:                                              ; preds = %121
  %124 = bitcast %"class.std::__1::vector.43"* %5 to i8**
  %125 = load i8*, i8** %124, align 8, !noalias !3
  br label %126

126:                                              ; preds = %123, %107
  %127 = phi i8* [ %125, %123 ], [ %108, %107 ]
  store %"class.std::__1::basic_string"* %105, %"class.std::__1::basic_string"** %22, align 8, !noalias !3
  call void @_ZdlPv(i8* %127) #14
  br label %128

128:                                              ; preds = %104, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #13, !noalias !3
  %129 = load i8, i8* %24, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %128
  %132 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %132) #14
  br label %133

133:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  %134 = bitcast %"class.net::HostPortPair"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = zext i8 %136 to i64
  %141 = select i1 %137, i64 %139, i64 %140
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %156, label %143

143:                                              ; preds = %133
  %144 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 2
  %145 = load %"class.notifier::SingleLoginAttempt::Delegate"*, %"class.notifier::SingleLoginAttempt::Delegate"** %144, align 8
  %146 = bitcast %"struct.notifier::ServerInformation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #13
  %147 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 4, i32 0
  %148 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %147, align 8
  %149 = getelementptr inbounds %"struct.notifier::ConnectionSettings", %"struct.notifier::ConnectionSettings"* %148, i64 0, i32 2
  %150 = load i32, i32* %149, align 4
  call void @_ZN8notifier17ServerInformationC1ERKN3net12HostPortPairENS_13SslTcpSupportE(%"struct.notifier::ServerInformation"* nonnull %9, %"class.net::HostPortPair"* nonnull dereferenceable(32) %7, i32 %150) #13
  %151 = bitcast %"class.notifier::SingleLoginAttempt::Delegate"* %145 to void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"struct.notifier::ServerInformation"*)***
  %152 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"struct.notifier::ServerInformation"*)**, void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"struct.notifier::ServerInformation"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"struct.notifier::ServerInformation"*)*, void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"struct.notifier::ServerInformation"*)** %152, i64 1
  %154 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"struct.notifier::ServerInformation"*)*, void (%"class.notifier::SingleLoginAttempt::Delegate"*, %"struct.notifier::ServerInformation"*)** %153, align 8
  call void %154(%"class.notifier::SingleLoginAttempt::Delegate"* %145, %"struct.notifier::ServerInformation"* nonnull dereferenceable(40) %9) #13
  call void @_ZN8notifier17ServerInformationD1Ev(%"struct.notifier::ServerInformation"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #13
  %155 = load i8, i8* %135, align 1
  br label %156

156:                                              ; preds = %133, %143
  %157 = phi i8 [ %155, %143 ], [ %136, %133 ]
  %158 = phi i32 [ 1, %143 ], [ 0, %133 ]
  %159 = icmp slt i8 %157, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #14
  br label %163

163:                                              ; preds = %156, %160
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #13
  %164 = icmp eq i32 %158, 0
  br i1 %164, label %165, label %191

165:                                              ; preds = %14, %163, %11, %4
  %166 = icmp eq i32 %1, 4
  br i1 %166, label %167, label %174

167:                                              ; preds = %165
  %168 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 2
  %169 = load %"class.notifier::SingleLoginAttempt::Delegate"*, %"class.notifier::SingleLoginAttempt::Delegate"** %168, align 8
  %170 = bitcast %"class.notifier::SingleLoginAttempt::Delegate"* %169 to void (%"class.notifier::SingleLoginAttempt::Delegate"*)***
  %171 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*)**, void (%"class.notifier::SingleLoginAttempt::Delegate"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.notifier::SingleLoginAttempt::Delegate"*)*, void (%"class.notifier::SingleLoginAttempt::Delegate"*)** %171, i64 2
  %173 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*)*, void (%"class.notifier::SingleLoginAttempt::Delegate"*)** %172, align 8
  call void %173(%"class.notifier::SingleLoginAttempt::Delegate"* %169) #13
  br label %191

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 3, i32 0, i32 1
  %176 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %175, align 8
  %177 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 4, i32 0
  %178 = load %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"** %177, align 8
  %179 = icmp eq %"struct.notifier::ConnectionSettings"* %178, %176
  br i1 %179, label %191, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.notifier::ConnectionSettings", %"struct.notifier::ConnectionSettings"* %178, i64 1
  store %"struct.notifier::ConnectionSettings"* %181, %"struct.notifier::ConnectionSettings"** %177, align 8
  %182 = icmp eq %"struct.notifier::ConnectionSettings"* %181, %176
  br i1 %182, label %183, label %190

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.notifier::SingleLoginAttempt", %"class.notifier::SingleLoginAttempt"* %0, i64 0, i32 2
  %185 = load %"class.notifier::SingleLoginAttempt::Delegate"*, %"class.notifier::SingleLoginAttempt::Delegate"** %184, align 8
  %186 = bitcast %"class.notifier::SingleLoginAttempt::Delegate"* %185 to void (%"class.notifier::SingleLoginAttempt::Delegate"*)***
  %187 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*)**, void (%"class.notifier::SingleLoginAttempt::Delegate"*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.notifier::SingleLoginAttempt::Delegate"*)*, void (%"class.notifier::SingleLoginAttempt::Delegate"*)** %187, i64 3
  %189 = load void (%"class.notifier::SingleLoginAttempt::Delegate"*)*, void (%"class.notifier::SingleLoginAttempt::Delegate"*)** %188, align 8
  call void %189(%"class.notifier::SingleLoginAttempt::Delegate"* %185) #13
  br label %191

190:                                              ; preds = %180
  call void @_ZN8notifier18SingleLoginAttempt10TryConnectERKNS_18ConnectionSettingsE(%"class.notifier::SingleLoginAttempt"* %0, %"struct.notifier::ConnectionSettings"* dereferenceable(40) %181)
  br label %191

191:                                              ; preds = %163, %174, %190, %183, %167
  ret void
}

declare void @_ZNK11jingle_xmpp10XmlElement8BodyTextEv(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #4

declare void @_ZN8notifier17ServerInformationC1ERKN3net12HostPortPairENS_13SslTcpSupportE(%"struct.notifier::ServerInformation"*, %"class.net::HostPortPair"* dereferenceable(32), i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8notifier17ServerInformationD1Ev(%"struct.notifier::ServerInformation"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZNK8notifier18ConnectionSettings22FillXmppClientSettingsEPN11jingle_xmpp18XmppClientSettingsE(%"struct.notifier::ConnectionSettings"*, %"class.jingle_xmpp::XmppClientSettings"*) local_unnamed_addr #4

declare void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNK11jingle_xmpp3Jid3StrEv(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::Jid"*) local_unnamed_addr #4

declare void @_ZN8notifier20GaiaTokenPreXmppAuthC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_(%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"*) unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.43"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #4

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #4

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp16XmppUserSettingsC2ERKS0_(%"class.jingle_xmpp::XmppUserSettings"*, %"class.jingle_xmpp::XmppUserSettings"* dereferenceable(176)) unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %0 to i8*
  %9 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #13
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #13
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #13
  br label %31

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %28, i64 %30) #13
  br label %31

31:                                               ; preds = %23, %26
  %32 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #13
  br label %46

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %32, i8* %43, i64 %45) #13
  br label %46

46:                                               ; preds = %38, %41
  %47 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 3
  %48 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 3
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #13
  br label %61

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %47, i8* %58, i64 %60) #13
  br label %61

61:                                               ; preds = %53, %56
  %62 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 4
  %63 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 4
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #13
  br label %76

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %62, i8* %73, i64 %75) #13
  br label %76

76:                                               ; preds = %68, %71
  %77 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 5
  %78 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 5
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %76
  %84 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #13
  br label %91

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %77, i8* %88, i64 %90) #13
  br label %91

91:                                               ; preds = %83, %86
  %92 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 6
  %93 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 6
  %94 = bitcast i32* %92 to i8*
  %95 = bitcast i32* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 5, i1 false)
  %96 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 8
  %97 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 8
  %98 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %91
  %103 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 24, i1 false) #13
  br label %110

105:                                              ; preds = %91
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %96, i8* %107, i64 %109) #13
  br label %110

110:                                              ; preds = %102, %105
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8notifier18ConnectionSettingsD1Ev(%"struct.notifier::ConnectionSettings"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

declare void @_ZN8notifier14XmppConnectionC1ERKN11jingle_xmpp18XmppClientSettingsEN4base17RepeatingCallbackIFvN4mojo15PendingReceiverIN7network5mojom27ProxyResolvingSocketFactoryEEEEEEPNS0_8DelegateEPNS1_11PreXmppAuthERKN3net27NetworkTrafficAnnotationTagE(%"class.notifier::XmppConnection"*, %"class.jingle_xmpp::XmppClientSettings"* dereferenceable(216), %"class.base::RepeatingCallback"*, %"class.notifier::XmppConnection::Delegate"*, %"class.jingle_xmpp::PreXmppAuth"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN8notifier12_GLOBAL__N_117ParseRedirectTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!5 = distinct !{!5, !"_ZN8notifier12_GLOBAL__N_117ParseRedirectTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
