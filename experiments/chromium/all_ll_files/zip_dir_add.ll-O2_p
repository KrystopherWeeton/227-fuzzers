; ModuleID = '../../third_party/libzip/src/lib/zip_dir_add.c'
source_filename = "../../third_party/libzip/src/lib/zip_dir_add.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden i64 @zip_dir_add(%struct.zip*, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %9, i32 25, i32 0) #5
  br label %47

10:                                               ; preds = %3
  %11 = icmp eq i8* %1, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %13, i32 18, i32 0) #5
  br label %47

14:                                               ; preds = %10
  %15 = tail call i64 @strlen(i8* nonnull %1) #6
  %16 = add i64 %15, -1
  %17 = getelementptr inbounds i8, i8* %1, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 47
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = add i64 %15, 2
  %22 = tail call noalias i8* @malloc(i64 %21) #5
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %25, i32 14, i32 0) #5
  br label %47

26:                                               ; preds = %20
  %27 = tail call i8* @strcpy(i8* nonnull %22, i8* nonnull %1) #5
  %28 = getelementptr inbounds i8, i8* %22, i64 %15
  store i8 47, i8* %28, align 1
  %29 = add i64 %15, 1
  %30 = getelementptr inbounds i8, i8* %22, i64 %29
  store i8 0, i8* %30, align 1
  br label %31

31:                                               ; preds = %14, %26
  %32 = phi i8* [ %22, %26 ], [ null, %14 ]
  %33 = tail call %struct.zip_source* @zip_source_buffer(%struct.zip* %0, i8* null, i64 0, i32 0) #5
  %34 = icmp eq %struct.zip_source* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @free(i8* %32) #5
  br label %47

36:                                               ; preds = %31
  %37 = icmp eq i8* %32, null
  %38 = select i1 %37, i8* %1, i8* %32
  %39 = tail call i64 @_zip_file_replace(%struct.zip* %0, i64 -1, i8* %38, %struct.zip_source* nonnull %33, i32 %2) #5
  tail call void @free(i8* %32) #5
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  tail call void @zip_source_free(%struct.zip_source* nonnull %33) #5
  br label %47

42:                                               ; preds = %36
  %43 = tail call i32 @zip_file_set_external_attributes(%struct.zip* %0, i64 %39, i32 0, i8 zeroext 3, i32 1107230720) #5
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = tail call i32 @zip_delete(%struct.zip* %0, i64 %39) #5
  br label %47

47:                                               ; preds = %41, %42, %45, %35, %24, %12, %8
  %48 = phi i64 [ -1, %8 ], [ -1, %12 ], [ -1, %24 ], [ -1, %35 ], [ -1, %45 ], [ %39, %42 ], [ %39, %41 ]
  ret i64 %48
}

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #3

declare %struct.zip_source* @zip_source_buffer(%struct.zip*, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare i64 @_zip_file_replace(%struct.zip*, i64, i8*, %struct.zip_source*, i32) local_unnamed_addr #1

declare void @zip_source_free(%struct.zip_source*) local_unnamed_addr #1

declare i32 @zip_file_set_external_attributes(%struct.zip*, i64, i32, i8 zeroext, i32) local_unnamed_addr #1

declare i32 @zip_delete(%struct.zip*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
