; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_rendertiling.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_rendertiling.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr", i32, %"class.std::__1::map.147" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.20", %"class.fxcrt::RetainPtr.37", %"class.fxcrt::RetainPtr.37", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::vector.133", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.141" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.15" }
%"class.fxcrt::RetainPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.521" }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.524", %"class.std::__1::__compressed_pair.532", %"class.std::__1::__compressed_pair.537", %"class.std::__1::__compressed_pair.539", [4 x i8] }>
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526", %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { float }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.27", %"class.fxcrt::UnownedPtr.33", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.34", i64, %"class.fxcrt::RetainPtr.66", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.78", %"class.std::__1::map.84", %"class.std::__1::set.93", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.33" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.37", %"class.std::__1::map.54" }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::RetainPtr.66" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.72" }
%"class.fxcrt::RetainPtr.72" = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.84" = type { %"class.std::__1::__tree.85" }
%"class.std::__1::__tree.85" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::set.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::RetainPtr.37" = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.41" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.104" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { i32*, i32*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.140" }
%"class.fxcrt::UnownedPtr.140" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.std::__1::map.147" = type { %"class.std::__1::__tree.148" }
%"class.std::__1::__tree.148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::RetainPtr.160" = type { %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %class.CPDF_Dictionary* }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.fxcrt::UnownedPtr.168"*, %"class.fxcrt::UnownedPtr.168"*, %"class.std::__1::__compressed_pair.169" }
%"class.fxcrt::UnownedPtr.168" = type opaque
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.fxcrt::UnownedPtr.168"* }
%"class.fxcrt::UnownedPtr.174" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.37", %"class.fxcrt::UnownedPtr.175", %"class.std::__1::vector.262" }
%"class.fxcrt::UnownedPtr.175" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr.176", %"class.std::__1::map.244", %"class.fxcrt::MaybeOwned", i32, i32, i8, [7 x i8] }>
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.176" = type { %class.CPDF_Page* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.37", %"class.fxcrt::RetainPtr.37", %"class.std::__1::map.177", %"class.std::__1::map.188", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.37", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.222" }
%"class.std::__1::map.177" = type { %"class.std::__1::__tree.178" }
%"class.std::__1::__tree.178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.188" = type { %"class.std::__1::__tree.189" }
%"class.std::__1::__tree.189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.218" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.212"**, %"class.std::__1::unique_ptr.212"**, %"class.std::__1::unique_ptr.212"**, %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.466" }
%"class.fxcrt::RetainPtr.466" = type { %"class.std::__1::unique_ptr.467" }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.470" }
%"class.std::__1::vector.470" = type { %"class.std::__1::__vector_base.471" }
%"class.std::__1::__vector_base.471" = type { %"class.fxcrt::RetainPtr.472"*, %"class.fxcrt::RetainPtr.472"*, %"class.std::__1::__compressed_pair.473" }
%"class.fxcrt::RetainPtr.472" = type opaque
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.fxcrt::RetainPtr.472"* }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.std::__1::unique_ptr.212"** }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::set.222" = type { %"class.std::__1::__tree.223" }
%"class.std::__1::__tree.223" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.224", %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.std::__1::map.244" = type { %"class.std::__1::__tree.245" }
%"class.std::__1::__tree.245" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.255", %"class.fxcrt::UnownedPtr.261" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_ImageCacheEntry = type opaque
%"class.fxcrt::UnownedPtr.261" = type { %class.CPDF_ImageCacheEntry* }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.265" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.264", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.264" = type { %class.CPDF_PageObjectHolder* }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.CPDF_RenderContext::Layer"* }
%"class.fxcrt::UnownedPtr.270" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.271", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.277" }
%"class.fxcrt::RetainPtr.271" = type { %"class.std::__1::unique_ptr.272" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned.428" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.271", %"class.std::__1::vector.487" }
%"class.std::__1::vector.487" = type { %"class.std::__1::__vector_base.488" }
%"class.std::__1::__vector_base.488" = type { i32*, i32*, %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"class.fxcrt::MaybeOwned.428" = type { %"class.std::__1::unique_ptr.407", %"class.fxcrt::UnownedPtr.415" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { i8* }
%"class.fxcrt::UnownedPtr.415" = type { i8* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.283" }
%"class.fxcrt::RetainPtr.283" = type { %"class.std::__1::unique_ptr.284" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.287", %"class.std::__1::vector.295" }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.std::__1::unique_ptr.297"*, %"class.std::__1::unique_ptr.297"*, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::unique_ptr.297" = type opaque
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.std::__1::unique_ptr.297"* }
%"class.fxcrt::UnownedPtr.305" = type { %class.CPDF_PageObject* }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.306" }
%"class.fxcrt::SharedCopyOnWrite.306" = type { %"class.fxcrt::RetainPtr.307" }
%"class.fxcrt::RetainPtr.307" = type { %"class.std::__1::unique_ptr.308" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.311" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { float*, float*, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.320" }
%"class.fxcrt::SharedCopyOnWrite.320" = type { %"class.fxcrt::RetainPtr.321" }
%"class.fxcrt::RetainPtr.321" = type { %"class.std::__1::unique_ptr.322" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.311", %"class.std::__1::unique_ptr.325", %"class.fxcrt::RetainPtr.343" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.328", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.328" = type { %"class.std::__1::unique_ptr.329" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.332", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::RetainPtr.332" = type { %"class.std::__1::unique_ptr.333" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.343" = type { %"class.std::__1::unique_ptr.344" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.347", %"class.fxcrt::RetainPtr.348", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.347" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.348" = type { %"class.std::__1::unique_ptr.349" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.358" }
%"class.fxcrt::SharedCopyOnWrite.358" = type { %"class.fxcrt::RetainPtr.359" }
%"class.fxcrt::RetainPtr.359" = type { %"class.std::__1::unique_ptr.360" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.363", %"class.fxcrt::UnownedPtr.347", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.363" = type { %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.416", %"class.fxcrt::RetainPtr.424", %"class.fxcrt::RetainPtr.37", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.437", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.367", %"class.std::__1::unique_ptr.373", %"class.fxcrt::RetainPtr.379", %"class.fxcrt::RetainPtr.395", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.407", %"class.std::__1::vector.411", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.367" = type { %"class.std::__1::unique_ptr.368" }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.379" = type { %"class.std::__1::unique_ptr.380" }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.383", %"class.fxcrt::RetainPtr.387" }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.387" = type { %"class.std::__1::unique_ptr.388" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.395" = type { %"class.std::__1::unique_ptr.396" }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::vector.411" = type { %"class.std::__1::__vector_base.412" }
%"class.std::__1::__vector_base.412" = type { i8*, i8*, %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.415", i64 }
%"class.std::__1::vector.416" = type { %"class.std::__1::__vector_base.417" }
%"class.std::__1::__vector_base.417" = type { %"class.std::__1::unique_ptr.418"*, %"class.std::__1::unique_ptr.418"*, %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::unique_ptr.418" = type opaque
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.std::__1::unique_ptr.418"* }
%"class.fxcrt::RetainPtr.424" = type { %"class.std::__1::unique_ptr.425" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned.428", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.160", %"class.fxcrt::RetainPtr.429" }
%"class.fxcrt::RetainPtr.429" = type { %"class.std::__1::unique_ptr.430" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.447" }
%"class.fxcrt::SharedCopyOnWrite.447" = type { %"class.fxcrt::RetainPtr.448" }
%"class.fxcrt::RetainPtr.448" = type { %"class.std::__1::unique_ptr.449" }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.332", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.452", %"class.fxcrt::RetainPtr.458", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.452", %"class.fxcrt::RetainPtr.452", %"class.fxcrt::RetainPtr.452", float, float }
%"class.fxcrt::RetainPtr.458" = type { %"class.std::__1::unique_ptr.459" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.452" = type { %"class.std::__1::unique_ptr.453" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %class.CPDF_Object* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %class.CPDF_ImageRenderer* }
%class.CPDF_ImageRenderer = type opaque
%"class.fxcrt::UnownedPtr.486" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type opaque
%class.CPDF_Transparency = type { i8, i8 }
%class.CPDF_RenderStatus = type <{ %class.CPDF_RenderOptions, %"class.fxcrt::RetainPtr.160", %"class.fxcrt::RetainPtr.160", %"class.std::__1::vector.166", %"class.fxcrt::UnownedPtr.174", %"class.fxcrt::UnownedPtr.270", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.305", %"class.fxcrt::UnownedPtr.305", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.480", %"class.fxcrt::UnownedPtr.486", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr" }
%class.CPDF_TilingPattern = type <{ %class.CPDF_Pattern, i8, [3 x i8], %class.CFX_FloatRect, float, float, [4 x i8] }>
%class.CPDF_Form = type { %class.CPDF_PageObjectHolder, %"class.CPDF_Font::FormIface", %"class.std::__1::set.493", %"class.fxcrt::RetainPtr.503" }
%"class.CPDF_Font::FormIface" = type { i32 (...)** }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::RetainPtr.503" = type { %"class.std::__1::unique_ptr.504" }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %class.CPDF_Stream* }
%class.CFX_PTemplate = type { float, float }
%"class.CFX_RenderDevice::StateRestorer" = type { %"class.fxcrt::UnownedPtr.270" }
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%"class.fxcrt::RetainPtr.515" = type { %"class.std::__1::unique_ptr.516" }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %class.CFX_DIBBase* }
%class.CFX_ClipRgn = type opaque
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }

@.str = private unnamed_addr constant [10 x i8] c"Resources\00", align 1
@__const._ZN17CPDF_RenderTiling4DrawEP17CPDF_RenderStatusP15CPDF_PageObjectP18CPDF_TilingPatternP9CPDF_FormRK10CFX_MatrixRK7FX_RECTb.status = private unnamed_addr constant <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.160", %"class.fxcrt::RetainPtr.160", %"class.std::__1::vector.166", %"class.fxcrt::UnownedPtr.174", %"class.fxcrt::UnownedPtr.270", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.305", %"class.fxcrt::UnownedPtr.305", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.480", %"class.fxcrt::UnownedPtr.486", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }> <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" } { i8 -86, i8 -86, %"struct.CPDF_RenderOptions::Options" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, %"struct.CPDF_RenderOptions::ColorScheme" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::RetainPtr" { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %class.CPDF_OCContext* inttoptr (i64 -6148914691236517206 to %class.CPDF_OCContext*) } } } } }, %"class.fxcrt::RetainPtr.160" { %"class.std::__1::unique_ptr.161" { %"class.std::__1::__compressed_pair.162" { %"struct.std::__1::__compressed_pair_elem.163" { %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*) } } } }, %"class.fxcrt::RetainPtr.160" { %"class.std::__1::unique_ptr.161" { %"class.std::__1::__compressed_pair.162" { %"struct.std::__1::__compressed_pair_elem.163" { %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*) } } } }, %"class.std::__1::vector.166" { %"class.std::__1::__vector_base.167" { %"class.fxcrt::UnownedPtr.168"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.168"*), %"class.fxcrt::UnownedPtr.168"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.168"*), %"class.std::__1::__compressed_pair.169" { %"struct.std::__1::__compressed_pair_elem.170" { %"class.fxcrt::UnownedPtr.168"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.168"*) } } } }, %"class.fxcrt::UnownedPtr.174" { %class.CPDF_RenderContext* inttoptr (i64 -6148914691236517206 to %class.CPDF_RenderContext*) }, %"class.fxcrt::UnownedPtr.270" { %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*) }, %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CPDF_ClipPath { %"class.fxcrt::SharedCopyOnWrite" { %"class.fxcrt::RetainPtr.283" { %"class.std::__1::unique_ptr.284" { %"class.std::__1::__compressed_pair.285" { %"struct.std::__1::__compressed_pair_elem.286" { %"class.CPDF_ClipPath::PathData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ClipPath::PathData"*) } } } } } }, %"class.fxcrt::UnownedPtr.305" { %class.CPDF_PageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_PageObject*) }, %"class.fxcrt::UnownedPtr.305" { %class.CPDF_PageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_PageObject*) }, %class.CPDF_GraphicStates { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.CPDF_ClipPath { %"class.fxcrt::SharedCopyOnWrite" { %"class.fxcrt::RetainPtr.283" { %"class.std::__1::unique_ptr.284" { %"class.std::__1::__compressed_pair.285" { %"struct.std::__1::__compressed_pair_elem.286" { %"class.CPDF_ClipPath::PathData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ClipPath::PathData"*) } } } } } }, %class.CFX_GraphState { %"class.fxcrt::SharedCopyOnWrite.306" { %"class.fxcrt::RetainPtr.307" { %"class.std::__1::unique_ptr.308" { %"class.std::__1::__compressed_pair.309" { %"struct.std::__1::__compressed_pair_elem.310" { %class.CFX_RetainableGraphStateData* inttoptr (i64 -6148914691236517206 to %class.CFX_RetainableGraphStateData*) } } } } } }, %class.CPDF_ColorState { %"class.fxcrt::SharedCopyOnWrite.320" { %"class.fxcrt::RetainPtr.321" { %"class.std::__1::unique_ptr.322" { %"class.std::__1::__compressed_pair.323" { %"struct.std::__1::__compressed_pair_elem.324" { %"class.CPDF_ColorState::ColorData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ColorState::ColorData"*) } } } } } }, %class.CPDF_TextState { %"class.fxcrt::SharedCopyOnWrite.358" { %"class.fxcrt::RetainPtr.359" { %"class.std::__1::unique_ptr.360" { %"class.std::__1::__compressed_pair.361" { %"struct.std::__1::__compressed_pair_elem.362" { %"class.CPDF_TextState::TextData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_TextState::TextData"*) } } } } } }, %class.CPDF_GeneralState { %"class.fxcrt::SharedCopyOnWrite.447" { %"class.fxcrt::RetainPtr.448" { %"class.std::__1::unique_ptr.449" { %"class.std::__1::__compressed_pair.450" { %"struct.std::__1::__compressed_pair_elem.451" { %"class.CPDF_GeneralState::StateData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_GeneralState::StateData"*) } } } } } } }, %"class.std::__1::unique_ptr.480" { %"class.std::__1::__compressed_pair.481" { %"struct.std::__1::__compressed_pair_elem.482" { %class.CPDF_ImageRenderer* inttoptr (i64 -6148914691236517206 to %class.CPDF_ImageRenderer*) } } }, %"class.fxcrt::UnownedPtr.486" { %class.CPDF_Type3Char* inttoptr (i64 -6148914691236517206 to %class.CPDF_Type3Char*) }, %class.CPDF_Transparency { i8 -86, i8 -86 }, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_RenderTiling4DrawEP17CPDF_RenderStatusP15CPDF_PageObjectP18CPDF_TilingPatternP9CPDF_FormRK10CFX_MatrixRK7FX_RECTb(%"class.fxcrt::RetainPtr.271"* noalias nocapture sret, %class.CPDF_RenderStatus*, %class.CPDF_PageObject*, %class.CPDF_TilingPattern*, %class.CPDF_Form*, %class.CFX_Matrix* dereferenceable(24), %struct.FX_RECT* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.CFX_Matrix, align 16
  %10 = alloca %class.CFX_Matrix, align 4
  %11 = alloca %class.CFX_FloatRect, align 4
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %class.CFX_PTemplate, align 4
  %14 = alloca %class.CFX_PTemplate, align 4
  %15 = alloca %class.CFX_Matrix, align 4
  %16 = alloca %"class.CFX_RenderDevice::StateRestorer", align 8
  %17 = alloca %class.CPDF_RenderStatus, align 8
  %18 = alloca %"class.fxcrt::RetainPtr.271", align 8
  %19 = alloca %"class.fxcrt::RetainPtr.271", align 8
  %20 = alloca %struct.FXDIB_ResampleOptions, align 1
  %21 = alloca %"class.fxcrt::RetainPtr.271", align 8
  %22 = alloca %class.CFX_PTemplate, align 4
  %23 = alloca %class.CFX_PTemplate, align 4
  %24 = alloca %"class.fxcrt::RetainPtr.515", align 8
  %25 = alloca %"class.fxcrt::RetainPtr.515", align 8
  %26 = bitcast %class.CFX_Matrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #6
  %27 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %9, i64 0, i32 4
  %28 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %9, i64 0, i32 5
  %29 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 0, i32 4, i32 0
  %30 = load float, float* %29, align 4, !noalias !2
  %31 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 0, i32 4, i32 1
  %32 = load float, float* %31, align 4, !noalias !2
  %33 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 2
  %34 = bitcast %class.CFX_Matrix* %5 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4, !noalias !2
  %36 = shufflevector <2 x float> %35, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %37 = bitcast float* %33 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4, !noalias !2
  %39 = shufflevector <2 x float> %38, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %40 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 0, i32 4, i32 2
  %41 = load float, float* %40, align 4, !noalias !2
  %42 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 0, i32 4, i32 3
  %43 = load float, float* %42, align 4, !noalias !2
  %44 = insertelement <4 x float> undef, float %30, i32 0
  %45 = shufflevector <4 x float> %44, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %46 = extractelement <2 x float> %35, i32 0
  %47 = extractelement <2 x float> %35, i32 1
  %48 = shufflevector <4 x float> %45, <4 x float> %36, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %49 = insertelement <4 x float> undef, float %46, i32 0
  %50 = insertelement <4 x float> %49, float %47, i32 1
  %51 = insertelement <4 x float> %50, float %41, i32 2
  %52 = insertelement <4 x float> %51, float %41, i32 3
  %53 = fmul <4 x float> %48, %52
  %54 = insertelement <4 x float> undef, float %32, i32 0
  %55 = shufflevector <4 x float> %54, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %56 = extractelement <2 x float> %38, i32 0
  %57 = extractelement <2 x float> %38, i32 1
  %58 = shufflevector <4 x float> %55, <4 x float> %39, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %59 = insertelement <4 x float> undef, float %56, i32 0
  %60 = insertelement <4 x float> %59, float %57, i32 1
  %61 = insertelement <4 x float> %60, float %43, i32 2
  %62 = insertelement <4 x float> %61, float %43, i32 3
  %63 = fmul <4 x float> %58, %62
  %64 = fadd <4 x float> %53, %63
  %65 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 0, i32 4, i32 4
  %66 = load float, float* %65, align 4, !noalias !2
  %67 = fmul float %46, %66
  %68 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 0, i32 4, i32 5
  %69 = load float, float* %68, align 4, !noalias !2
  %70 = fmul float %56, %69
  %71 = fadd float %67, %70
  %72 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %73 = load float, float* %72, align 4, !noalias !2
  %74 = fadd float %73, %71
  %75 = fmul float %47, %66
  %76 = fmul float %57, %69
  %77 = fadd float %75, %76
  %78 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %79 = load float, float* %78, align 4, !noalias !2
  %80 = fadd float %77, %79
  %81 = bitcast %class.CFX_Matrix* %9 to <4 x float>*
  store <4 x float> %64, <4 x float>* %81, align 16, !alias.scope !2
  store float %74, float* %27, align 16, !alias.scope !2
  store float %80, float* %28, align 4, !alias.scope !2
  %82 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 3
  %83 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %9, %class.CFX_FloatRect* dereferenceable(16) %82) #6
  %84 = extractvalue { <2 x float>, <2 x float> } %83, 0
  %85 = extractvalue { <2 x float>, <2 x float> } %83, 1
  %86 = extractelement <2 x float> %85, i32 1
  %87 = extractelement <2 x float> %84, i32 1
  %88 = fsub float %86, %87
  %89 = call float @llvm.ceil.f32(float %88) #6
  %90 = extractelement <2 x float> %85, i32 0
  %91 = extractelement <2 x float> %84, i32 0
  %92 = fsub float %90, %91
  %93 = call float @llvm.ceil.f32(float %92) #6
  %94 = fcmp oge float %89, 0xC1E0000000000000
  %95 = fcmp ole float %89, 0x41DFFFFFE0000000
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %101

97:                                               ; preds = %8
  %98 = fcmp oge float %93, 0xC1E0000000000000
  %99 = fcmp ole float %93, 0x41DFFFFFE0000000
  %100 = and i1 %99, %98
  br i1 %100, label %103, label %101

101:                                              ; preds = %97, %8
  %102 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 0, i64* %102, align 8
  br label %589

103:                                              ; preds = %97
  %104 = fptosi float %93 to i32
  %105 = fptosi float %89 to i32
  %106 = icmp sgt i32 %104, 1
  %107 = select i1 %106, i32 %104, i32 1
  %108 = icmp sgt i32 %105, 1
  %109 = select i1 %108, i32 %105, i32 1
  %110 = bitcast %class.CFX_Matrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #6
  call void @_ZNK10CFX_Matrix10GetInverseEv(%class.CFX_Matrix* nonnull sret %10, %class.CFX_Matrix* nonnull %9) #6
  %111 = bitcast %class.CFX_FloatRect* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #6
  call void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect* nonnull %11, %struct.FX_RECT* dereferenceable(16) %6) #6
  %112 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %10, %class.CFX_FloatRect* nonnull dereferenceable(16) %11) #6
  %113 = extractvalue { <2 x float>, <2 x float> } %112, 0
  %114 = extractvalue { <2 x float>, <2 x float> } %112, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #6
  %115 = extractelement <2 x float> %113, i32 0
  %116 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 3, i32 2
  %117 = load float, float* %116, align 4
  %118 = fsub float %115, %117
  %119 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 4
  %120 = load float, float* %119, align 4
  %121 = fdiv float %118, %120
  %122 = call float @llvm.ceil.f32(float %121) #6
  %123 = fptosi float %122 to i32
  %124 = extractelement <2 x float> %114, i32 0
  %125 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %82, i64 0, i32 0
  %126 = load float, float* %125, align 4
  %127 = fsub float %124, %126
  %128 = fdiv float %127, %120
  %129 = call float @llvm.floor.f32(float %128) #6
  %130 = fptosi float %129 to i32
  %131 = extractelement <2 x float> %113, i32 1
  %132 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 3, i32 3
  %133 = load float, float* %132, align 4
  %134 = fsub float %131, %133
  %135 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 5
  %136 = load float, float* %135, align 8
  %137 = fdiv float %134, %136
  %138 = call float @llvm.ceil.f32(float %137) #6
  %139 = fptosi float %138 to i32
  %140 = extractelement <2 x float> %114, i32 1
  %141 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 3, i32 1
  %142 = load float, float* %141, align 4
  %143 = fsub float %140, %142
  %144 = fdiv float %143, %136
  %145 = call float @llvm.floor.f32(float %144) #6
  %146 = fptosi float %145 to i32
  %147 = udiv i32 2147483647, %107
  %148 = icmp sgt i32 %109, %147
  br i1 %148, label %149, label %151

149:                                              ; preds = %103
  %150 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 0, i64* %150, align 8
  br label %589

151:                                              ; preds = %103
  %152 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 5, i32 0
  %153 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %152, align 8
  %154 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 4, i32 0
  %155 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %154, align 8
  %156 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = sub nsw i32 %157, %159
  %161 = icmp sgt i32 %107, %160
  br i1 %161, label %173, label %162

162:                                              ; preds = %151
  %163 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = sub nsw i32 %164, %166
  %168 = icmp sgt i32 %109, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %162
  %170 = mul nsw i32 %107, %109
  %171 = mul nsw i32 %167, %160
  %172 = icmp sgt i32 %170, %171
  br i1 %172, label %173, label %288

173:                                              ; preds = %169, %162, %151
  %174 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 1
  %175 = load i8, i8* %174, align 8, !range !5
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %173
  %178 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %2, i64 0, i32 0
  %179 = call %class.CPDF_GraphicStates* @_ZN17CPDF_RenderStatus14CloneObjStatesEPK18CPDF_GraphicStatesb(%class.CPDF_GraphicStates* %178, i1 zeroext %7) #6
  br label %180

180:                                              ; preds = %173, %177
  %181 = phi %class.CPDF_GraphicStates* [ null, %173 ], [ %179, %177 ]
  %182 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %4, i64 0, i32 0
  %183 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %4, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %184 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %183, align 8
  %185 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #6
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #6
  %186 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %184, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #6
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #6
  %187 = icmp sgt i32 %123, %130
  br i1 %187, label %217, label %188

188:                                              ; preds = %180
  %189 = icmp sgt i32 %139, %146
  %190 = bitcast %class.CFX_PTemplate* %13 to i8*
  %191 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 0
  %192 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 1
  %193 = bitcast %class.CFX_PTemplate* %14 to i8*
  %194 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 0
  %195 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 1
  %196 = bitcast %class.CFX_Matrix* %15 to i8*
  %197 = bitcast %class.CFX_Matrix* %5 to i8*
  %198 = bitcast %"class.CFX_RenderDevice::StateRestorer"* %16 to i8*
  %199 = getelementptr inbounds %"class.CFX_RenderDevice::StateRestorer", %"class.CFX_RenderDevice::StateRestorer"* %16, i64 0, i32 0, i32 0
  %200 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %17, i64 0, i32 0, i32 0
  %201 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 0, i32 0
  %202 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %17, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %203 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %204 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %4, i64 0, i32 0, i32 6
  %205 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %17, i64 0, i32 13, i32 0
  %206 = bitcast %class.CPDF_Transparency* %204 to i16*
  %207 = bitcast i8* %205 to i16*
  %208 = icmp eq %class.CPDF_Dictionary* %186, null
  %209 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %186, i64 0, i32 0, i32 0, i32 1
  %210 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %211 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 16
  %212 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %17, i64 0, i32 16
  br label %213

213:                                              ; preds = %225, %188
  %214 = phi i32 [ %123, %188 ], [ %226, %225 ]
  br i1 %189, label %225, label %215

215:                                              ; preds = %213
  %216 = sitofp i32 %214 to float
  br label %228

217:                                              ; preds = %225, %180
  %218 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 0, i64* %218, align 8
  %219 = icmp eq %class.CPDF_GraphicStates* %181, null
  br i1 %219, label %589, label %220

220:                                              ; preds = %217
  %221 = bitcast %class.CPDF_GraphicStates* %181 to void (%class.CPDF_GraphicStates*)***
  %222 = load void (%class.CPDF_GraphicStates*)**, void (%class.CPDF_GraphicStates*)*** %221, align 8
  %223 = getelementptr inbounds void (%class.CPDF_GraphicStates*)*, void (%class.CPDF_GraphicStates*)** %222, i64 1
  %224 = load void (%class.CPDF_GraphicStates*)*, void (%class.CPDF_GraphicStates*)** %223, align 8
  call void %224(%class.CPDF_GraphicStates* nonnull %181) #6
  br label %589

225:                                              ; preds = %284, %213
  %226 = add nsw i32 %214, 1
  %227 = icmp slt i32 %214, %130
  br i1 %227, label %213, label %217

228:                                              ; preds = %284, %215
  %229 = phi i32 [ %139, %215 ], [ %286, %284 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #6
  store float 0xFFFFFFFFE0000000, float* %191, align 4
  store float 0xFFFFFFFFE0000000, float* %192, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #6
  %230 = load float, float* %119, align 4
  %231 = fmul float %230, %216
  %232 = sitofp i32 %229 to float
  %233 = load float, float* %135, align 8
  %234 = fmul float %233, %232
  store float %231, float* %194, align 4
  store float %234, float* %195, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %13, %class.CFX_Matrix* nonnull %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %14) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #6
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %196, i8* align 4 %197, i64 24, i1 false)
  %235 = load float, float* %191, align 4
  %236 = load float, float* %27, align 16
  %237 = fsub float %235, %236
  %238 = load float, float* %192, align 4
  %239 = load float, float* %28, align 4
  %240 = fsub float %238, %239
  call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* nonnull %15, float %237, float %240) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #6
  store %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*), %class.CFX_RenderDevice** %199, align 8
  call void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"* nonnull %16, %class.CFX_RenderDevice* %153) #6
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %200) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %200, i8* align 8 getelementptr inbounds (<{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.160", %"class.fxcrt::RetainPtr.160", %"class.std::__1::vector.166", %"class.fxcrt::UnownedPtr.174", %"class.fxcrt::UnownedPtr.270", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.305", %"class.fxcrt::UnownedPtr.305", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.480", %"class.fxcrt::UnownedPtr.486", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>, <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.160", %"class.fxcrt::RetainPtr.160", %"class.std::__1::vector.166", %"class.fxcrt::UnownedPtr.174", %"class.fxcrt::UnownedPtr.270", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.305", %"class.fxcrt::UnownedPtr.305", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.480", %"class.fxcrt::UnownedPtr.486", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>* @__const._ZN17CPDF_RenderTiling4DrawEP17CPDF_RenderStatusP15CPDF_PageObjectP18CPDF_TilingPatternP9CPDF_FormRK10CFX_MatrixRK7FX_RECTb.status, i64 0, i32 0, i32 0), i64 232, i1 false)
  call void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus* nonnull %17, %class.CPDF_RenderContext* %155, %class.CFX_RenderDevice* %153) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %200, i8* align 8 %201, i64 28, i1 false) #6
  %241 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %202, align 8
  %242 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %203, align 8
  %243 = icmp eq %class.CPDF_OCContext* %241, %242
  br i1 %243, label %265, label %244

244:                                              ; preds = %228
  %245 = icmp eq %class.CPDF_OCContext* %242, null
  br i1 %245, label %251, label %246

246:                                              ; preds = %244
  %247 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %242, i64 0, i32 0, i32 1
  %248 = load i64, i64* %247, align 8
  %249 = add nsw i64 %248, 1
  store i64 %249, i64* %247, align 8
  %250 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %202, align 8
  br label %251

251:                                              ; preds = %246, %244
  %252 = phi %class.CPDF_OCContext* [ %250, %246 ], [ %241, %244 ]
  store %class.CPDF_OCContext* %242, %class.CPDF_OCContext** %202, align 8
  %253 = icmp eq %class.CPDF_OCContext* %252, null
  br i1 %253, label %265, label %254

254:                                              ; preds = %251
  %255 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %252, i64 0, i32 0, i32 1
  %256 = load i64, i64* %255, align 8
  %257 = add nsw i64 %256, -1
  store i64 %257, i64* %255, align 8
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %265

259:                                              ; preds = %254
  %260 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %252, i64 0, i32 0
  %261 = bitcast %class.CPDF_OCContext* %252 to void (%"class.fxcrt::Retainable"*)***
  %262 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %261, align 8
  %263 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %262, i64 1
  %264 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %263, align 8
  call void %264(%"class.fxcrt::Retainable"* nonnull %260) #6
  br label %265

265:                                              ; preds = %228, %251, %254, %259
  %266 = load i16, i16* %206, align 1
  store i16 %266, i16* %207, align 8
  br i1 %208, label %270, label %267

267:                                              ; preds = %265
  %268 = load i64, i64* %209, align 8
  %269 = add nsw i64 %268, 1
  store i64 %269, i64* %209, align 8
  br label %270

270:                                              ; preds = %267, %265
  %271 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %210, align 8
  store %class.CPDF_Dictionary* %186, %class.CPDF_Dictionary** %210, align 8
  %272 = icmp eq %class.CPDF_Dictionary* %271, null
  br i1 %272, label %284, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %271, i64 0, i32 0, i32 0, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = add nsw i64 %275, -1
  store i64 %276, i64* %274, align 8
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %284

278:                                              ; preds = %273
  %279 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %271, i64 0, i32 0, i32 0
  %280 = bitcast %class.CPDF_Dictionary* %271 to void (%"class.fxcrt::Retainable"*)***
  %281 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %280, align 8
  %282 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %281, i64 1
  %283 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %282, align 8
  call void %283(%"class.fxcrt::Retainable"* nonnull %279) #6
  br label %284

284:                                              ; preds = %270, %273, %278
  %285 = load i8, i8* %211, align 4, !range !5
  store i8 %285, i8* %212, align 4
  call void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus* nonnull %17, %class.CPDF_RenderStatus* %1, %class.CPDF_GraphicStates* %181) #6
  call void @_ZN17CPDF_RenderStatus16RenderObjectListEPK21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderStatus* nonnull %17, %class.CPDF_PageObjectHolder* %182, %class.CFX_Matrix* nonnull dereferenceable(24) %15) #6
  call void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %200) #6
  call void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #6
  %286 = add nsw i32 %229, 1
  %287 = icmp slt i32 %229, %146
  br i1 %287, label %228, label %225

288:                                              ; preds = %169
  %289 = fcmp oeq float %126, 0.000000e+00
  %290 = fcmp oeq float %142, 0.000000e+00
  %291 = and i1 %289, %290
  %292 = fcmp oeq float %117, %120
  %293 = and i1 %292, %291
  %294 = fcmp oeq float %133, %136
  %295 = and i1 %294, %293
  br i1 %295, label %296, label %329

296:                                              ; preds = %288
  %297 = call zeroext i1 @_ZNK10CFX_Matrix8IsScaledEv(%class.CFX_Matrix* nonnull %9) #6
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = call zeroext i1 @_ZNK10CFX_Matrix11Is90RotatedEv(%class.CFX_Matrix* nonnull %9) #6
  br i1 %299, label %300, label %329

300:                                              ; preds = %296, %298
  %301 = load float, float* %27, align 16
  %302 = call i32 @FXSYS_roundf(float %301) #6
  %303 = load float, float* %28, align 4
  %304 = call i32 @FXSYS_roundf(float %303) #6
  %305 = load i32, i32* %158, align 4
  %306 = sub nsw i32 %305, %302
  %307 = sdiv i32 %306, %107
  %308 = icmp slt i32 %305, %302
  %309 = zext i1 %308 to i32
  %310 = sub i32 %307, %309
  %311 = load i32, i32* %156, align 4
  %312 = sub nsw i32 %311, %302
  %313 = sdiv i32 %312, %107
  %314 = icmp sle i32 %311, %302
  %315 = zext i1 %314 to i32
  %316 = sub i32 %313, %315
  %317 = load i32, i32* %165, align 4
  %318 = sub nsw i32 %317, %304
  %319 = sdiv i32 %318, %109
  %320 = icmp slt i32 %317, %304
  %321 = zext i1 %320 to i32
  %322 = sub i32 %319, %321
  %323 = load i32, i32* %163, align 4
  %324 = sub nsw i32 %323, %304
  %325 = sdiv i32 %324, %109
  %326 = icmp sle i32 %323, %304
  %327 = zext i1 %326 to i32
  %328 = sub i32 %325, %327
  br label %329

329:                                              ; preds = %288, %300, %298
  %330 = phi i1 [ false, %298 ], [ true, %300 ], [ false, %288 ]
  %331 = phi i32 [ %123, %298 ], [ %310, %300 ], [ %123, %288 ]
  %332 = phi i32 [ %130, %298 ], [ %316, %300 ], [ %130, %288 ]
  %333 = phi i32 [ %139, %298 ], [ %322, %300 ], [ %139, %288 ]
  %334 = phi i32 [ %146, %298 ], [ %328, %300 ], [ %146, %288 ]
  %335 = load float, float* %27, align 16
  %336 = fsub float %91, %335
  %337 = load float, float* %28, align 4
  %338 = fsub float %87, %337
  %339 = icmp ult i32 %170, 16
  br i1 %339, label %340, label %366

340:                                              ; preds = %329
  %341 = bitcast %"class.fxcrt::RetainPtr.271"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #6
  %342 = getelementptr inbounds %"class.fxcrt::RetainPtr.271", %"class.fxcrt::RetainPtr.271"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %342, align 8
  %343 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %155, i64 0, i32 0, i32 0
  %344 = load %class.CPDF_Document*, %class.CPDF_Document** %343, align 8
  %345 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %155, i64 0, i32 2, i32 0
  %346 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %345, align 8
  %347 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 0, i32 2
  call fastcc void @_ZN12_GLOBAL__N_117DrawPatternBitmapEP13CPDF_DocumentP20CPDF_PageRenderCacheP18CPDF_TilingPatternP9CPDF_FormRK10CFX_MatrixiiRKN18CPDF_RenderOptions7OptionsE(%"class.fxcrt::RetainPtr.271"* nonnull sret %18, %class.CPDF_Document* %344, %class.CPDF_PageRenderCache* %346, %class.CPDF_TilingPattern* %3, %class.CPDF_Form* %4, %class.CFX_Matrix* dereferenceable(24) %5, i32 8, i32 8, %"struct.CPDF_RenderOptions::Options"* dereferenceable(10) %347)
  %348 = bitcast %"class.fxcrt::RetainPtr.271"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348) #6
  %349 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %342, align 8
  %350 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %349, i64 0, i32 0
  %351 = getelementptr inbounds %struct.FXDIB_ResampleOptions, %struct.FXDIB_ResampleOptions* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %351) #6
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %20) #6
  call void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr.271"* nonnull sret %19, %class.CFX_DIBBase* %350, i32 %107, i32 %109, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %20, %struct.FX_RECT* null) #6
  %352 = bitcast %"class.fxcrt::RetainPtr.271"* %19 to i64*
  %353 = load i64, i64* %352, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %351) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348) #6
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %342, align 8
  %354 = icmp eq %class.CFX_DIBitmap* %349, null
  br i1 %354, label %375, label %355

355:                                              ; preds = %340
  %356 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %349, i64 0, i32 0, i32 0, i32 1
  %357 = load i64, i64* %356, align 8
  %358 = add nsw i64 %357, -1
  store i64 %358, i64* %356, align 8
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %375

360:                                              ; preds = %355
  %361 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %349, i64 0, i32 0, i32 0
  %362 = bitcast %class.CFX_DIBitmap* %349 to void (%"class.fxcrt::Retainable"*)***
  %363 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %362, align 8
  %364 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %363, i64 1
  %365 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %364, align 8
  call void %365(%"class.fxcrt::Retainable"* nonnull %361) #6
  br label %375

366:                                              ; preds = %329
  %367 = bitcast %"class.fxcrt::RetainPtr.271"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %367) #6
  %368 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %155, i64 0, i32 0, i32 0
  %369 = load %class.CPDF_Document*, %class.CPDF_Document** %368, align 8
  %370 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %155, i64 0, i32 2, i32 0
  %371 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %370, align 8
  %372 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 0, i32 2
  call fastcc void @_ZN12_GLOBAL__N_117DrawPatternBitmapEP13CPDF_DocumentP20CPDF_PageRenderCacheP18CPDF_TilingPatternP9CPDF_FormRK10CFX_MatrixiiRKN18CPDF_RenderOptions7OptionsE(%"class.fxcrt::RetainPtr.271"* nonnull sret %21, %class.CPDF_Document* %369, %class.CPDF_PageRenderCache* %371, %class.CPDF_TilingPattern* %3, %class.CPDF_Form* %4, %class.CFX_Matrix* dereferenceable(24) %5, i32 %107, i32 %109, %"struct.CPDF_RenderOptions::Options"* dereferenceable(10) %372)
  %373 = bitcast %"class.fxcrt::RetainPtr.271"* %21 to i64*
  %374 = load i64, i64* %373, align 8
  br label %375

375:                                              ; preds = %360, %355, %340, %366
  %376 = phi i8* [ %367, %366 ], [ %341, %340 ], [ %341, %355 ], [ %341, %360 ]
  %377 = phi i64 [ %374, %366 ], [ %353, %340 ], [ %353, %355 ], [ %353, %360 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #6
  %378 = inttoptr i64 %377 to %class.CFX_DIBitmap*
  %379 = icmp eq i64 %377, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %375
  %381 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 0, i64* %381, align 8
  br label %589

382:                                              ; preds = %375
  %383 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 0, i32 0
  %384 = load i8, i8* %383, align 8
  %385 = icmp eq i8 %384, 1
  br i1 %385, label %386, label %388

386:                                              ; preds = %382
  %387 = call zeroext i1 @_ZN12CFX_DIBitmap17ConvertColorScaleEjj(%class.CFX_DIBitmap* nonnull %378, i32 0, i32 16777215) #6
  br label %388

388:                                              ; preds = %386, %382
  %389 = call i32 @_ZNK17CPDF_RenderStatus19GetFillArgbInternalEP15CPDF_PageObjectb(%class.CPDF_RenderStatus* %1, %class.CPDF_PageObject* %2, i1 zeroext false) #6
  %390 = load i32, i32* %156, align 4
  %391 = load i32, i32* %158, align 4
  %392 = sub nsw i32 %390, %391
  %393 = load i32, i32* %163, align 4
  %394 = load i32, i32* %165, align 4
  %395 = sub nsw i32 %393, %394
  %396 = call i8* @_Znwm(i64 80) #7, !noalias !6
  %397 = bitcast i8* %396 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %397) #6, !noalias !6
  %398 = ptrtoint i8* %396 to i64
  %399 = getelementptr inbounds i8, i8* %396, i64 8
  %400 = bitcast i8* %399 to i64*
  %401 = load i64, i64* %400, align 8, !noalias !6
  %402 = add nsw i64 %401, 1
  store i64 %402, i64* %400, align 8, !noalias !6
  %403 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %397, i32 %392, i32 %395, i16 zeroext 544) #6
  br i1 %403, label %406, label %404

404:                                              ; preds = %388
  %405 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 0, i64* %405, align 8
  br label %568

406:                                              ; preds = %388
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* nonnull %397, i32 0) #6
  %407 = inttoptr i64 %377 to i8* (%class.CFX_DIBitmap*)***
  %408 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %407, align 8
  %409 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %408, i64 2
  %410 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %409, align 8
  %411 = call i8* %410(%class.CFX_DIBitmap* nonnull %378) #6
  %412 = icmp sgt i32 %331, %332
  br i1 %412, label %566, label %413

413:                                              ; preds = %406
  %414 = icmp sgt i32 %333, %334
  %415 = bitcast %class.CFX_PTemplate* %22 to i8*
  %416 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %22, i64 0, i32 0
  %417 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %22, i64 0, i32 1
  %418 = bitcast %class.CFX_PTemplate* %23 to i8*
  %419 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %23, i64 0, i32 0
  %420 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %23, i64 0, i32 1
  %421 = icmp slt i32 %104, 2
  %422 = icmp slt i32 %105, 2
  %423 = and i1 %421, %422
  %424 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 1
  %425 = bitcast %"class.fxcrt::RetainPtr.515"* %24 to i8*
  %426 = bitcast %"class.fxcrt::RetainPtr.515"* %24 to i64*
  %427 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %378, i64 0, i32 0, i32 0, i32 1
  %428 = getelementptr inbounds %"class.fxcrt::RetainPtr.515", %"class.fxcrt::RetainPtr.515"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %429 = bitcast %"class.fxcrt::RetainPtr.515"* %25 to i8*
  %430 = bitcast %"class.fxcrt::RetainPtr.515"* %25 to i64*
  %431 = getelementptr inbounds %"class.fxcrt::RetainPtr.515", %"class.fxcrt::RetainPtr.515"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %432 = bitcast i8* %396 to i8* (%class.CFX_DIBitmap*)***
  %433 = getelementptr inbounds i8, i8* %396, i64 28
  %434 = bitcast i8* %433 to i32*
  %435 = bitcast i8* %411 to i32*
  %436 = and i32 %389, 16777215
  br label %437

437:                                              ; preds = %561, %413
  %438 = phi i32 [ %331, %413 ], [ %562, %561 ]
  br i1 %414, label %561, label %439

439:                                              ; preds = %437
  %440 = sitofp i32 %438 to float
  %441 = mul nsw i32 %438, %107
  br label %442

442:                                              ; preds = %558, %439
  %443 = phi i32 [ %333, %439 ], [ %559, %558 ]
  br i1 %330, label %444, label %456

444:                                              ; preds = %442
  %445 = load float, float* %27, align 16
  %446 = call i32 @FXSYS_roundf(float %445) #6
  %447 = add nsw i32 %446, %441
  %448 = load i32, i32* %158, align 4
  %449 = sub i32 %447, %448
  %450 = load float, float* %28, align 4
  %451 = call i32 @FXSYS_roundf(float %450) #6
  %452 = mul nsw i32 %443, %109
  %453 = add nsw i32 %451, %452
  %454 = load i32, i32* %165, align 4
  %455 = sub i32 %453, %454
  br label %478

456:                                              ; preds = %442
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %415) #6
  store float 0xFFFFFFFFE0000000, float* %416, align 4
  store float 0xFFFFFFFFE0000000, float* %417, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %418) #6
  %457 = load float, float* %119, align 4
  %458 = fmul float %457, %440
  %459 = sitofp i32 %443 to float
  %460 = load float, float* %135, align 8
  %461 = fmul float %460, %459
  store float %458, float* %419, align 4
  store float %461, float* %420, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %22, %class.CFX_Matrix* nonnull %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %23) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %418) #6
  %462 = load float, float* %416, align 4
  %463 = fadd float %336, %462
  %464 = call i32 @FXSYS_roundf(float %463) #6
  %465 = load float, float* %417, align 4
  %466 = fadd float %338, %465
  %467 = call i32 @FXSYS_roundf(float %466) #6
  %468 = load i32, i32* %158, align 4
  %469 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %464, i32 %468) #6
  %470 = extractvalue { i32, i1 } %469, 1
  %471 = load i32, i32* %165, align 4
  %472 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %467, i32 %471) #6
  %473 = extractvalue { i32, i1 } %472, 1
  %474 = or i1 %470, %473
  br i1 %474, label %564, label %475

475:                                              ; preds = %456
  %476 = extractvalue { i32, i1 } %472, 0
  %477 = extractvalue { i32, i1 } %469, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %415) #6
  br label %478

478:                                              ; preds = %475, %444
  %479 = phi i32 [ %454, %444 ], [ %471, %475 ]
  %480 = phi i32 [ %449, %444 ], [ %477, %475 ]
  %481 = phi i32 [ %455, %444 ], [ %476, %475 ]
  br i1 %423, label %482, label %519

482:                                              ; preds = %478
  %483 = icmp slt i32 %480, 0
  br i1 %483, label %558, label %484

484:                                              ; preds = %482
  %485 = load i32, i32* %156, align 4
  %486 = load i32, i32* %158, align 4
  %487 = sub nsw i32 %485, %486
  %488 = icmp sge i32 %480, %487
  %489 = icmp slt i32 %481, 0
  %490 = or i1 %489, %488
  br i1 %490, label %558, label %491

491:                                              ; preds = %484
  %492 = load i32, i32* %163, align 4
  %493 = sub nsw i32 %492, %479
  %494 = icmp slt i32 %481, %493
  br i1 %494, label %495, label %558

495:                                              ; preds = %491
  %496 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %432, align 8
  %497 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %496, i64 2
  %498 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %497, align 8
  %499 = call i8* %498(%class.CFX_DIBitmap* nonnull %397) #6
  %500 = load i32, i32* %434, align 4
  %501 = mul i32 %500, %481
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds i8, i8* %499, i64 %502
  %504 = shl nsw i32 %480, 2
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds i8, i8* %503, i64 %505
  %507 = bitcast i8* %506 to i32*
  %508 = load i8, i8* %424, align 8, !range !5
  %509 = icmp eq i8 %508, 0
  br i1 %509, label %512, label %510

510:                                              ; preds = %495
  %511 = load i32, i32* %435, align 4
  br label %517

512:                                              ; preds = %495
  %513 = load i8, i8* %411, align 1
  %514 = zext i8 %513 to i32
  %515 = shl nuw i32 %514, 24
  %516 = or i32 %515, %436
  br label %517

517:                                              ; preds = %512, %510
  %518 = phi i32 [ %516, %512 ], [ %511, %510 ]
  store i32 %518, i32* %507, align 4
  br label %558

519:                                              ; preds = %478
  %520 = load i8, i8* %424, align 8, !range !5
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %540, label %522

522:                                              ; preds = %519
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %425) #6
  store i64 %377, i64* %426, align 8
  %523 = load i64, i64* %427, align 8
  %524 = add nsw i64 %523, 1
  store i64 %524, i64* %427, align 8
  %525 = call zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* nonnull %397, i32 %480, i32 %481, i32 %107, i32 %109, %"class.fxcrt::RetainPtr.515"* nonnull dereferenceable(8) %24, i32 0, i32 0, i32 0, %class.CFX_ClipRgn* null, i1 zeroext false) #6
  %526 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %428, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %428, align 8
  %527 = icmp eq %class.CFX_DIBBase* %526, null
  br i1 %527, label %539, label %528

528:                                              ; preds = %522
  %529 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %526, i64 0, i32 0, i32 1
  %530 = load i64, i64* %529, align 8
  %531 = add nsw i64 %530, -1
  store i64 %531, i64* %529, align 8
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %533, label %539

533:                                              ; preds = %528
  %534 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %526, i64 0, i32 0
  %535 = bitcast %class.CFX_DIBBase* %526 to void (%"class.fxcrt::Retainable"*)***
  %536 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %535, align 8
  %537 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %536, i64 1
  %538 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %537, align 8
  call void %538(%"class.fxcrt::Retainable"* nonnull %534) #6
  br label %539

539:                                              ; preds = %522, %528, %533
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %425) #6
  br label %558

540:                                              ; preds = %519
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %429) #6
  store i64 %377, i64* %430, align 8
  %541 = load i64, i64* %427, align 8
  %542 = add nsw i64 %541, 1
  store i64 %542, i64* %427, align 8
  %543 = call zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* nonnull %397, i32 %480, i32 %481, i32 %107, i32 %109, %"class.fxcrt::RetainPtr.515"* nonnull dereferenceable(8) %25, i32 %389, i32 0, i32 0, i32 0, %class.CFX_ClipRgn* null, i1 zeroext false) #6
  %544 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %431, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %431, align 8
  %545 = icmp eq %class.CFX_DIBBase* %544, null
  br i1 %545, label %557, label %546

546:                                              ; preds = %540
  %547 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %544, i64 0, i32 0, i32 1
  %548 = load i64, i64* %547, align 8
  %549 = add nsw i64 %548, -1
  store i64 %549, i64* %547, align 8
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %557

551:                                              ; preds = %546
  %552 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %544, i64 0, i32 0
  %553 = bitcast %class.CFX_DIBBase* %544 to void (%"class.fxcrt::Retainable"*)***
  %554 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %553, align 8
  %555 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %554, i64 1
  %556 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %555, align 8
  call void %556(%"class.fxcrt::Retainable"* nonnull %552) #6
  br label %557

557:                                              ; preds = %540, %546, %551
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %429) #6
  br label %558

558:                                              ; preds = %491, %484, %482, %539, %557, %517
  %559 = add nsw i32 %443, 1
  %560 = icmp slt i32 %443, %334
  br i1 %560, label %442, label %561

561:                                              ; preds = %558, %437
  %562 = add nsw i32 %438, 1
  %563 = icmp slt i32 %438, %332
  br i1 %563, label %437, label %566

564:                                              ; preds = %456
  %565 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 0, i64* %565, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %415) #6
  br label %568

566:                                              ; preds = %561, %406
  %567 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 %398, i64* %567, align 8
  br label %578

568:                                              ; preds = %404, %564
  %569 = load i64, i64* %400, align 8
  %570 = add nsw i64 %569, -1
  store i64 %570, i64* %400, align 8
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %572, label %578

572:                                              ; preds = %568
  %573 = bitcast i8* %396 to %"class.fxcrt::Retainable"*
  %574 = bitcast i8* %396 to void (%"class.fxcrt::Retainable"*)***
  %575 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %574, align 8
  %576 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %575, i64 1
  %577 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %576, align 8
  call void %577(%"class.fxcrt::Retainable"* nonnull %573) #6
  br label %578

578:                                              ; preds = %566, %568, %572
  %579 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %378, i64 0, i32 0, i32 0, i32 1
  %580 = load i64, i64* %579, align 8
  %581 = add nsw i64 %580, -1
  store i64 %581, i64* %579, align 8
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %583, label %589

583:                                              ; preds = %578
  %584 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %378, i64 0, i32 0, i32 0
  %585 = inttoptr i64 %377 to void (%"class.fxcrt::Retainable"*)***
  %586 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %585, align 8
  %587 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %586, i64 1
  %588 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %587, align 8
  call void %588(%"class.fxcrt::Retainable"* nonnull %584) #6
  br label %589

589:                                              ; preds = %583, %578, %380, %220, %217, %149, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK10CFX_Matrix10GetInverseEv(%class.CFX_Matrix* sret, %class.CFX_Matrix*) local_unnamed_addr #2

declare void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect*, %struct.FX_RECT* dereferenceable(16)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %class.CPDF_GraphicStates* @_ZN17CPDF_RenderStatus14CloneObjStatesEPK18CPDF_GraphicStatesb(%class.CPDF_GraphicStates*, i1 zeroext) local_unnamed_addr #2

declare %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #2

declare void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"*, %class.CFX_RenderDevice*) unnamed_addr #2

declare void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus*, %class.CPDF_RenderContext*, %class.CFX_RenderDevice*) unnamed_addr #2

declare void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus*, %class.CPDF_RenderStatus*, %class.CPDF_GraphicStates*) local_unnamed_addr #2

declare void @_ZN17CPDF_RenderStatus16RenderObjectListEPK21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderStatus*, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"*) unnamed_addr #3

declare zeroext i1 @_ZNK10CFX_Matrix8IsScaledEv(%class.CFX_Matrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK10CFX_Matrix11Is90RotatedEv(%class.CFX_Matrix*) local_unnamed_addr #2

declare i32 @FXSYS_roundf(float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117DrawPatternBitmapEP13CPDF_DocumentP20CPDF_PageRenderCacheP18CPDF_TilingPatternP9CPDF_FormRK10CFX_MatrixiiRKN18CPDF_RenderOptions7OptionsE(%"class.fxcrt::RetainPtr.271"* noalias nocapture sret, %class.CPDF_Document*, %class.CPDF_PageRenderCache*, %class.CPDF_TilingPattern*, %class.CPDF_Form*, %class.CFX_Matrix* dereferenceable(24), i32, i32, %"struct.CPDF_RenderOptions::Options"* nocapture readonly dereferenceable(10)) unnamed_addr #0 {
  %10 = alloca %"class.fxcrt::RetainPtr.271", align 8
  %11 = alloca %class.CFX_DefaultRenderDevice, align 8
  %12 = alloca %"class.fxcrt::RetainPtr.271", align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %class.CFX_FloatRect*
  %15 = alloca %class.CFX_FloatRect, align 4
  %16 = alloca %class.CFX_Matrix, align 16
  %17 = alloca %class.CFX_Matrix, align 16
  %18 = alloca %class.CPDF_RenderOptions, align 8
  %19 = alloca %class.CPDF_RenderContext, align 8
  %20 = bitcast %"class.fxcrt::RetainPtr.271"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.fxcrt::RetainPtr.271", %"class.fxcrt::RetainPtr.271"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = tail call i8* @_Znwm(i64 80) #7, !noalias !9
  %23 = bitcast i8* %22 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %23) #6, !noalias !9
  %24 = ptrtoint i8* %22 to i64
  %25 = bitcast %"class.fxcrt::RetainPtr.271"* %10 to i64*
  store i64 %24, i64* %25, align 8, !alias.scope !9
  %26 = getelementptr inbounds i8, i8* %22, i64 8
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !9
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %27, align 8, !noalias !9
  %30 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 1
  %31 = load i8, i8* %30, align 8, !range !5
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i16 264, i16 544
  %34 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %23, i32 %6, i32 %7, i16 zeroext %33) #6
  br i1 %34, label %38, label %35

35:                                               ; preds = %9
  %36 = bitcast i8* %22 to %class.CFX_DIBitmap*
  %37 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  store i64 0, i64* %37, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %21, align 8
  br label %153

38:                                               ; preds = %9
  %39 = bitcast %class.CFX_DefaultRenderDevice* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %39) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %11) #6
  %40 = bitcast %"class.fxcrt::RetainPtr.271"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  %41 = bitcast %"class.fxcrt::RetainPtr.271"* %12 to i64*
  store i64 0, i64* %41, align 8
  %42 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice* nonnull %11, %"class.fxcrt::RetainPtr.271"* nonnull dereferenceable(8) %10, i1 zeroext false, %"class.fxcrt::RetainPtr.271"* nonnull dereferenceable(8) %12, i1 zeroext false) #6
  %43 = getelementptr inbounds %"class.fxcrt::RetainPtr.271", %"class.fxcrt::RetainPtr.271"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %43, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %43, align 8
  %45 = icmp eq %class.CFX_DIBitmap* %44, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %44, i64 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %44, i64 0, i32 0, i32 0
  %53 = bitcast %class.CFX_DIBitmap* %44 to void (%"class.fxcrt::Retainable"*)***
  %54 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, i64 1
  %56 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, align 8
  call void %56(%"class.fxcrt::Retainable"* nonnull %52) #6
  br label %57

57:                                               ; preds = %38, %46, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  %58 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %21, align 8
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %58, i32 0) #6
  %59 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #6
  %60 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1, i64 0
  %61 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 0, i32 4
  %62 = getelementptr inbounds %class.CPDF_TilingPattern, %class.CPDF_TilingPattern* %3, i64 0, i32 3
  %63 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %61, %class.CFX_FloatRect* dereferenceable(16) %62) #6
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  %65 = extractvalue { <2 x float>, <2 x float> } %63, 0
  store <2 x float> %65, <2 x float>* %64, align 8
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  %67 = extractvalue { <2 x float>, <2 x float> } %63, 1
  store <2 x float> %67, <2 x float>* %66, align 8
  %68 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %5, %class.CFX_FloatRect* nonnull dereferenceable(16) %14) #6
  %69 = extractvalue { <2 x float>, <2 x float> } %68, 0
  %70 = extractvalue { <2 x float>, <2 x float> } %68, 1
  store <2 x float> %69, <2 x float>* %64, align 8
  %71 = bitcast float* %60 to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 8
  %72 = bitcast %class.CFX_FloatRect* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #6
  %73 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 0
  %74 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 1
  %75 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 2
  %76 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 3
  %77 = sitofp i32 %6 to float
  %78 = sitofp i32 %7 to float
  store float 0.000000e+00, float* %73, align 4
  store float 0.000000e+00, float* %74, align 4
  store float %77, float* %75, align 4
  store float %78, float* %76, align 4
  %79 = bitcast %class.CFX_Matrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #6
  %80 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %16, i64 0, i32 2
  %81 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %16, i64 0, i32 4
  %82 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %16, i64 0, i32 5
  %83 = bitcast %class.CFX_Matrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %83, align 16
  store float 0.000000e+00, float* %81, align 16
  store float 0.000000e+00, float* %82, align 4
  call void @_ZN10CFX_Matrix9MatchRectERK13CFX_FloatRectS2_(%class.CFX_Matrix* nonnull %16, %class.CFX_FloatRect* nonnull dereferenceable(16) %15, %class.CFX_FloatRect* nonnull dereferenceable(16) %14) #6
  %84 = bitcast %class.CFX_Matrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #6
  %85 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 4
  %86 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 5
  %87 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 0
  %88 = load float, float* %87, align 4, !noalias !12
  %89 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 1
  %90 = load float, float* %89, align 4, !noalias !12
  %91 = bitcast %class.CFX_Matrix* %16 to <2 x float>*
  %92 = load <2 x float>, <2 x float>* %91, align 16, !noalias !12
  %93 = shufflevector <2 x float> %92, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %94 = bitcast float* %80 to <2 x float>*
  %95 = load <2 x float>, <2 x float>* %94, align 8, !noalias !12
  %96 = shufflevector <2 x float> %95, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %97 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 2
  %98 = load float, float* %97, align 4, !noalias !12
  %99 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 3
  %100 = load float, float* %99, align 4, !noalias !12
  %101 = insertelement <4 x float> undef, float %88, i32 0
  %102 = shufflevector <4 x float> %101, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %103 = extractelement <2 x float> %92, i32 0
  %104 = extractelement <2 x float> %92, i32 1
  %105 = shufflevector <4 x float> %102, <4 x float> %93, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %106 = insertelement <4 x float> undef, float %103, i32 0
  %107 = insertelement <4 x float> %106, float %104, i32 1
  %108 = insertelement <4 x float> %107, float %98, i32 2
  %109 = insertelement <4 x float> %108, float %98, i32 3
  %110 = fmul <4 x float> %105, %109
  %111 = insertelement <4 x float> undef, float %90, i32 0
  %112 = shufflevector <4 x float> %111, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %113 = extractelement <2 x float> %95, i32 0
  %114 = extractelement <2 x float> %95, i32 1
  %115 = shufflevector <4 x float> %112, <4 x float> %96, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %116 = insertelement <4 x float> undef, float %113, i32 0
  %117 = insertelement <4 x float> %116, float %114, i32 1
  %118 = insertelement <4 x float> %117, float %100, i32 2
  %119 = insertelement <4 x float> %118, float %100, i32 3
  %120 = fmul <4 x float> %115, %119
  %121 = fadd <4 x float> %110, %120
  %122 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %123 = load float, float* %122, align 4, !noalias !12
  %124 = fmul float %103, %123
  %125 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %126 = load float, float* %125, align 4, !noalias !12
  %127 = fmul float %113, %126
  %128 = fadd float %124, %127
  %129 = load float, float* %81, align 16, !noalias !12
  %130 = fadd float %129, %128
  %131 = fmul float %104, %123
  %132 = fmul float %114, %126
  %133 = fadd float %131, %132
  %134 = load float, float* %82, align 4, !noalias !12
  %135 = fadd float %133, %134
  %136 = bitcast %class.CFX_Matrix* %17 to <4 x float>*
  store <4 x float> %121, <4 x float>* %136, align 16, !alias.scope !12
  store float %130, float* %85, align 16, !alias.scope !12
  store float %135, float* %86, align 4, !alias.scope !12
  %137 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %137) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 40, i1 false)
  call void @_ZN18CPDF_RenderOptionsC1Ev(%class.CPDF_RenderOptions* nonnull %18) #6
  %138 = load i8, i8* %30, align 8, !range !5
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %57
  store i8 2, i8* %137, align 8
  br label %141

141:                                              ; preds = %140, %57
  %142 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %18, i64 0, i32 2, i32 0
  %143 = getelementptr inbounds %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::Options"* %8, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %142, i8* align 1 %143, i64 10, i1 false)
  %144 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %18, i64 0, i32 2, i32 2
  store i8 1, i8* %144, align 2
  %145 = bitcast %class.CPDF_RenderContext* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %145) #6
  %146 = bitcast %class.CPDF_RenderContext* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 48, i1 false)
  call void @_ZN18CPDF_RenderContextC1EP13CPDF_DocumentP15CPDF_DictionaryP20CPDF_PageRenderCache(%class.CPDF_RenderContext* nonnull %19, %class.CPDF_Document* %1, %class.CPDF_Dictionary* null, %class.CPDF_PageRenderCache* %2) #6
  %147 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %4, i64 0, i32 0
  call void @_ZN18CPDF_RenderContext11AppendLayerEP21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderContext* nonnull %19, %class.CPDF_PageObjectHolder* %147, %class.CFX_Matrix* nonnull dereferenceable(24) %17) #6
  %148 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %11, i64 0, i32 0
  call void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext* nonnull %19, %class.CFX_RenderDevice* nonnull %148, %class.CPDF_RenderOptions* nonnull %18, %class.CFX_Matrix* null) #6
  %149 = bitcast %"class.fxcrt::RetainPtr.271"* %0 to i64*
  %150 = load i64, i64* %25, align 8
  store i64 %150, i64* %149, align 8
  store i64 0, i64* %25, align 8
  call void @_ZN18CPDF_RenderContextD1Ev(%class.CPDF_RenderContext* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %145) #6
  call void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %137) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #6
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %39) #6
  %151 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %21, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %21, align 8
  %152 = icmp eq %class.CFX_DIBitmap* %151, null
  br i1 %152, label %165, label %153

153:                                              ; preds = %35, %141
  %154 = phi %class.CFX_DIBitmap* [ %36, %35 ], [ %151, %141 ]
  %155 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %154, i64 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = add nsw i64 %156, -1
  store i64 %157, i64* %155, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %165

159:                                              ; preds = %153
  %160 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %154, i64 0, i32 0, i32 0
  %161 = bitcast %class.CFX_DIBitmap* %154 to void (%"class.fxcrt::Retainable"*)***
  %162 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %162, i64 1
  %164 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %163, align 8
  call void %164(%"class.fxcrt::Retainable"* nonnull %160) #6
  br label %165

165:                                              ; preds = %141, %153, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  ret void
}

declare void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr.271"* sret, %class.CFX_DIBBase*, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), %struct.FX_RECT*) local_unnamed_addr #2

declare void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions*) unnamed_addr #2

declare zeroext i1 @_ZN12CFX_DIBitmap17ConvertColorScaleEjj(%class.CFX_DIBitmap*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #2

declare void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.515"* dereferenceable(8), i32, i32, i32, %class.CFX_ClipRgn*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.515"* dereferenceable(8), i32, i32, i32, i32, %class.CFX_ClipRgn*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #2

declare zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice*, %"class.fxcrt::RetainPtr.271"* dereferenceable(8), i1 zeroext, %"class.fxcrt::RetainPtr.271"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare void @_ZN10CFX_Matrix9MatchRectERK13CFX_FloatRectS2_(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16), %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN18CPDF_RenderOptionsC1Ev(%class.CPDF_RenderOptions*) unnamed_addr #2

declare void @_ZN18CPDF_RenderContextC1EP13CPDF_DocumentP15CPDF_DictionaryP20CPDF_PageRenderCache(%class.CPDF_RenderContext*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_PageRenderCache*) unnamed_addr #2

declare void @_ZN18CPDF_RenderContext11AppendLayerEP21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderContext*, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %class.CPDF_RenderOptions*, %class.CFX_Matrix*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18CPDF_RenderContextD1Ev(%class.CPDF_RenderContext*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #3

declare i32 @_ZNK17CPDF_RenderStatus19GetFillArgbInternalEP15CPDF_PageObjectb(%class.CPDF_RenderStatus*, %class.CPDF_PageObject*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!14 = distinct !{!14, !"_ZNK10CFX_MatrixmlERKS_"}
