; ModuleID = '../../third_party/blink/renderer/core/html/forms/internal_popup_menu.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/internal_popup_menu.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::PointF" = type { float, float }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.234", i32, [4 x i8], %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.370", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.386", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.404", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.411", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.350", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.270" = type { %"struct.std::__1::__atomic_base.271" }
%"struct.std::__1::__atomic_base.271" = type { %"struct.std::__1::__atomic_base.272" }
%"struct.std::__1::__atomic_base.272" = type { %"struct.std::__1::__cxx_atomic_impl.273" }
%"struct.std::__1::__cxx_atomic_impl.273" = type { %"struct.std::__1::__cxx_atomic_base_impl.274" }
%"struct.std::__1::__cxx_atomic_base_impl.274" = type { i64 }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::Worklist.281"* }
%"class.blink::Worklist.281" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::Worklist.288"* }
%"class.blink::Worklist.288" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::Worklist.295"* }
%"class.blink::Worklist.295" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::Worklist.302"* }
%"class.blink::Worklist.302" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::Worklist.309"* }
%"class.blink::Worklist.309" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::Worklist.316"* }
%"class.blink::Worklist.316" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::Worklist.323"* }
%"class.blink::Worklist.323" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.270" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.344", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { i64 }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { float }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.353", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.362" }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.378" }
%"class.WTF::VectorBuffer.378" = type { %"class.WTF::VectorBufferBase.379" }
%"class.WTF::VectorBufferBase.379" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.392" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.281"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.288"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.295"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.302"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.309"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1441" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.1442" }
%"struct.std::__1::__compressed_pair_elem.1442" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.410 }
%class.scoped_refptr.410 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__cxx_atomic_impl.413" }
%"struct.std::__1::__cxx_atomic_impl.413" = type { %"struct.std::__1::__cxx_atomic_base_impl.414" }
%"struct.std::__1::__cxx_atomic_base_impl.414" = type { i8 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::PopupMenuCSSFontSelector" = type { %"class.blink::CSSFontSelector", %"class.blink::FontSelectorClient", %"class.blink::Member.168" }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember", %"class.blink::Member.114", %"class.blink::HeapHashSet.149", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1", %"class.blink::Member.13", %"class.blink::Member.7", %"class.blink::Member.15", %"class.blink::Member.15", %"class.blink::Member.49", %"class.blink::Member.51", %"class.blink::Member.53", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.58", %"class.blink::HeapVector.60" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.5", %"class.blink::Member.7", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.9" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::Node"* }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Document"* }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.22" }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.26", i32, %"class.blink::HeapVector" }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.29" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.33", %"class.blink::Member.35", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.33" = type { %"class.WTF::SingleThreadedBitField.34" }
%"class.WTF::SingleThreadedBitField.34" = type { i32 }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.40", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.40" = type { %"class.base::RefCounted.41" }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.45" }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"class.blink::Member.26"*, i32, i32 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.55" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::HeapHashMap.57"* }
%"class.blink::HeapHashMap.57" = type opaque
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.60" = type { %"class.WTF::Vector.63" }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.blink::Member.66"*, i32, i32 }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.68", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.70, %"class.WTF::Vector.84", %"class.WTF::Vector.84", %"class.blink::Member.5", %"class.blink::Member.89", %"class.blink::HeapHashSet", %"class.blink::Member.13", %"class.WTF::HashSet.98", %"class.WTF::TextPosition", %"class.blink::Member.102", %"class.blink::HeapVector.104", %"class.blink::Member.111" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.70 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.71", %"class.WTF::Vector.73" }
%"class.WTF::RefCounted.71" = type { %"class.base::RefCounted.72" }
%"class.base::RefCounted.72" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.76", %"class.WTF::String" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.91" }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.95" }
%"class.WTF::HashTable.95" = type <{ %"class.blink::WeakMember.97"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.97" = type { %"class.blink::MemberBase.8" }
%"class.WTF::HashSet.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.70, %"class.blink::Member.66", %"class.blink::Member.89" }
%"class.blink::HeapVector.104" = type { %"class.WTF::Vector.107" }
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.blink::Member.89"*, i32, i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.118", %"class.blink::HeapHashMap.125", %"class.blink::HeapHashMap.132", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.118" = type { %"class.WTF::HashMap.121" }
%"class.WTF::HashMap.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"struct.WTF::KeyValuePair.124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.124" = type opaque
%"class.blink::HeapHashMap.125" = type { %"class.WTF::HashMap.128" }
%"class.WTF::HashMap.128" = type { %"class.WTF::HashTable.129" }
%"class.WTF::HashTable.129" = type <{ %"struct.WTF::KeyValuePair.131"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.131" = type opaque
%"class.blink::HeapHashMap.132" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.141", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.141" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"struct.WTF::KeyValuePair.144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.144" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.145", i32, i32 }
%"class.WTF::Vector.145" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapHashSet.149" = type { %"class.WTF::HashSet.152" }
%"class.WTF::HashSet.152" = type { %"class.WTF::HashTable.153" }
%"class.WTF::HashTable.153" = type <{ %"class.blink::WeakMember.155"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.155" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.156", %"class.WTF::HashMap.156", %"class.WTF::HashMap.156", %"class.WTF::HashMap.156", %"class.WTF::HashMap.156", %"class.WTF::HashMap.156", %"class.WTF::HashMap.156", %"class.std::__1::unique_ptr.161" }
%"class.WTF::HashMap.156" = type { %"class.WTF::HashTable.157" }
%"class.WTF::HashTable.157" = type <{ %"struct.WTF::KeyValuePair.160"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.160" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.WTF::Vector.164"* }
%"class.WTF::Vector.164" = type opaque
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.177", %"class.WTF::Vector.177", i8, i32, %"class.blink::Member.188", %"class.blink::Member.190", %"class.blink::Member.192", %"class.blink::Member.194", %"class.blink::Member.196", %"class.blink::Member.198", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.206", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.212", %"class.blink::Member.214", %"class.blink::Member.66", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.217", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.26", %"class.blink::Member.427", %"class.blink::Member.26", %"class.blink::Member.26", %"class.blink::Member.26", %"class.blink::UserActionElementSet", %"class.blink::Member.436", double, double, i64, i64, %"class.blink::HeapHashSet.438", %"class.blink::HeapHashSet.445", i16, i8, %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.1224", %"class.blink::Member.1226", %"class.blink::TextLinkColors", %"class.blink::Member.1228", i8, [7 x i8], %"class.blink::HeapHashMap.1230", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.26", %"class.WTF::Vector.1237", %"class.blink::Member.1242", %"class.blink::Member.1246", i8, %"class.blink::Member.26", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1248", %"class.blink::HeapVector.1250", %"class.std::__1::unique_ptr.1258", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1264", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1277", %"class.WTF::Vector.1279", i8, i8, %"class.std::__1::unique_ptr.1284", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1290", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1298", i8, i32, %"class.blink::Member.1300", %"class.blink::Member.1302", %"class.blink::Member.1304", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1306", %"class.WTF::HashMap.1308", %"class.blink::Member.1313", %"class.blink::Member.1315", %"class.blink::Member.1317", %"class.blink::Member.1319", %"class.blink::Member.13", %"class.blink::Member.13", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1321", i8, i32, %"class.blink::Member.1328", %"class.blink::Member.1330", i32, %"class.blink::Member.1332", %"class.blink::Member.1334", %"class.blink::Member.1336", %"class.std::__1::unique_ptr.1338", i64, %"class.std::__1::unique_ptr.1344", i32, i32, %"class.blink::Member.1355", %"class.blink::Member.1357", %"class.blink::Member.1359", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1361", %"class.WTF::Vector.1363", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1368", %"class.blink::Member.1375", %"class.std::__1::unique_ptr.1377", %"class.blink::Member.1383", i8, i8, %"class.WTF::String", %"class.blink::Member.1385", i8, [7 x i8], %"class.blink::HeapHashMap.1387", %"class.blink::HeapObserverSet", %"class.blink::Member.1401", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1403", i32, i8, i8, %"class.blink::WeakMember.1405", %"class.blink::Member.1406" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.170" }
%"class.blink::HeapHashMap.170" = type { %"class.WTF::HashMap.173" }
%"class.WTF::HashMap.173" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"struct.WTF::KeyValuePair.176"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.176" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.177" = type { %"class.WTF::VectorBuffer.178" }
%"class.WTF::VectorBuffer.178" = type { %"class.WTF::VectorBufferBase.179" }
%"class.WTF::VectorBufferBase.179" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.180 }
%class.scoped_refptr.180 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.181" }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i32 }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1446", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1513", i32, i8, [3 x i8], %"class.blink::HeapVector.1515", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1523", %"class.blink::Member.1525", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1534", %"class.blink::Member.1657", %"class.blink::Member.1659", i8, [7 x i8] }>
%"class.blink::Supplementable.1446" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1447" }
%"class.blink::HeapHashMap.1447" = type { %"class.WTF::HashMap.1450" }
%"class.WTF::HashMap.1450" = type { %"class.WTF::HashTable.1451" }
%"class.WTF::HashTable.1451" = type <{ %"struct.WTF::KeyValuePair.1453"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1453" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1462" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1454" }
%"class.blink::HeapObserverSet.1454" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1455" }
%"class.blink::HeapHashSet.1455" = type { %"class.WTF::HashSet.1458" }
%"class.WTF::HashSet.1458" = type { %"class.WTF::HashTable.1459" }
%"class.WTF::HashTable.1459" = type <{ %"class.blink::WeakMember.1461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1461" = type opaque
%"class.blink::Supplementable.1462" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1463" }
%"class.blink::HeapHashMap.1463" = type { %"class.WTF::HashMap.1466" }
%"class.WTF::HashMap.1466" = type { %"class.WTF::HashTable.1467" }
%"class.WTF::HashTable.1467" = type <{ %"struct.WTF::KeyValuePair.1469"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1469" = type { i8*, %"class.blink::Member.3013" }
%"class.blink::Member.3013" = type { %"class.blink::MemberBase.3014" }
%"class.blink::MemberBase.3014" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3015" }
%"class.blink::Member.3015" = type { %"class.blink::MemberBase.3016" }
%"class.blink::MemberBase.3016" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1470, %"class.std::__1::unique_ptr.1479", %"class.std::__1::unique_ptr.1479", %"class.std::__1::unique_ptr.1503", %"class.std::__1::unique_ptr.1503", %"class.blink::Member.190", i32, [4 x i8], %"class.WTF::HashSet.1509", i32, i32 }
%class.scoped_refptr.1470 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1471", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1473", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1478 }
%"class.WTF::RefCounted.1471" = type { %"class.base::RefCounted.1472" }
%"class.base::RefCounted.1472" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1473" = type { %"class.absl::optional_internal::optional_data.1474" }
%"class.absl::optional_internal::optional_data.1474" = type { %"class.absl::optional_internal::optional_data_base.1475" }
%"class.absl::optional_internal::optional_data_base.1475" = type { %"class.absl::optional_internal::optional_data_dtor_base.1476" }
%"class.absl::optional_internal::optional_data_dtor_base.1476" = type { i8, %union.anon.1477 }
%union.anon.1477 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1478 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1479" = type { %"class.std::__1::__compressed_pair.1480" }
%"class.std::__1::__compressed_pair.1480" = type { %"struct.std::__1::__compressed_pair_elem.1481" }
%"struct.std::__1::__compressed_pair_elem.1481" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1490", %"class.std::__1::map.1499"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1473" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1482", %"class.std::__1::__compressed_pair.1487" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.std::__1::map.1490" = type { %"class.std::__1::__tree.1491" }
%"class.std::__1::__tree.1491" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1492", %"class.std::__1::__compressed_pair.1496" }
%"class.std::__1::__compressed_pair.1492" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.1496" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.std::__1::map.1499" = type opaque
%"class.std::__1::unique_ptr.1503" = type { %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1515" = type { %"class.WTF::Vector.1518" }
%"class.WTF::Vector.1518" = type { %"class.WTF::VectorBuffer.1519" }
%"class.WTF::VectorBuffer.1519" = type { %"class.WTF::VectorBufferBase.1520" }
%"class.WTF::VectorBufferBase.1520" = type { %"class.blink::Member.1521"*, i32, i32 }
%"class.blink::Member.1521" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1527", i32, i32 }
%"class.blink::HeapHashMap.1527" = type { %"class.WTF::HashMap.1530" }
%"class.WTF::HashMap.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ %"struct.WTF::KeyValuePair.1533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1533" = type opaque
%"class.std::__1::unique_ptr.1534" = type { %"class.std::__1::__compressed_pair.1535" }
%"class.std::__1::__compressed_pair.1535" = type { %"struct.std::__1::__compressed_pair_elem.1536" }
%"struct.std::__1::__compressed_pair_elem.1536" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1537" }
%"class.std::__1::unique_ptr.1537" = type { %"class.std::__1::__compressed_pair.1538" }
%"class.std::__1::__compressed_pair.1538" = type { %"struct.std::__1::__compressed_pair_elem.1539" }
%"struct.std::__1::__compressed_pair_elem.1539" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1540" }
%"class.WTF::Vector.1540" = type { %"class.WTF::VectorBuffer.1541" }
%"class.WTF::VectorBuffer.1541" = type { %"class.WTF::VectorBufferBase.1542" }
%"class.WTF::VectorBufferBase.1542" = type { %"class.mojo::StructPtr.1543"*, i32, i32 }
%"class.mojo::StructPtr.1543" = type { %"class.std::__1::unique_ptr.1544" }
%"class.std::__1::unique_ptr.1544" = type { %"class.std::__1::__compressed_pair.1545" }
%"class.std::__1::__compressed_pair.1545" = type { %"struct.std::__1::__compressed_pair_elem.1546" }
%"struct.std::__1::__compressed_pair_elem.1546" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1547", %"class.WTF::HashMap.1554", %"class.WTF::HashMap.1559", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.864", i32, %"class.mojo::StructPtr.1564", %"class.WTF::Vector.864" }
%"class.mojo::StructPtr.1547" = type { %"class.std::__1::unique_ptr.1548" }
%"class.std::__1::unique_ptr.1548" = type { %"class.std::__1::__compressed_pair.1549" }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"struct.std::__1::__compressed_pair_elem.1550" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1554" = type { %"class.WTF::HashTable.1555" }
%"class.WTF::HashTable.1555" = type <{ %"struct.WTF::KeyValuePair.1558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1558" = type opaque
%"class.WTF::HashMap.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ %"struct.WTF::KeyValuePair.1563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1563" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1564" = type { %"class.std::__1::unique_ptr.1565" }
%"class.std::__1::unique_ptr.1565" = type { %"class.std::__1::__compressed_pair.1566" }
%"class.std::__1::__compressed_pair.1566" = type { %"struct.std::__1::__compressed_pair_elem.1567" }
%"struct.std::__1::__compressed_pair_elem.1567" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.864", i8, i8, [6 x i8] }>
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1648" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1579", i32 }>
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1582", %"class.absl::optional.1583", %"class.absl::optional.1588", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1601", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1623", %"class.std::__1::map.1634", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1643", i8, %class.scoped_refptr.1593, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1644" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1582" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1583" = type { %"class.absl::optional_internal::optional_data.1584" }
%"class.absl::optional_internal::optional_data.1584" = type { %"class.absl::optional_internal::optional_data_base.1585" }
%"class.absl::optional_internal::optional_data_base.1585" = type { %"class.absl::optional_internal::optional_data_dtor_base.1586" }
%"class.absl::optional_internal::optional_data_dtor_base.1586" = type { i8, %union.anon.1587 }
%union.anon.1587 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1588" = type { %"class.absl::optional_internal::optional_data.1589" }
%"class.absl::optional_internal::optional_data.1589" = type { %"class.absl::optional_internal::optional_data_base.1590" }
%"class.absl::optional_internal::optional_data_base.1590" = type { %"class.absl::optional_internal::optional_data_dtor_base.1591" }
%"class.absl::optional_internal::optional_data_dtor_base.1591" = type { i8, %union.anon.1592 }
%union.anon.1592 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1593, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1594" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1594" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.419 }
%class.scoped_refptr.419 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.420", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.420" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.421" }
%"struct.std::__1::atomic.421" = type { %"struct.std::__1::__atomic_base.422" }
%"struct.std::__1::__atomic_base.422" = type { %"struct.std::__1::__atomic_base.423" }
%"struct.std::__1::__atomic_base.423" = type { %"struct.std::__1::__cxx_atomic_impl.424" }
%"struct.std::__1::__cxx_atomic_impl.424" = type { %"struct.std::__1::__cxx_atomic_base_impl.425" }
%"struct.std::__1::__cxx_atomic_base_impl.425" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1599 }
%class.scoped_refptr.1599 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1661", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1593, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1661" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1600 }
%class.scoped_refptr.1600 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1601" = type { %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.1603" }
%"struct.std::__1::__compressed_pair_elem.1603" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1604", %class.scoped_refptr.1605 }
%"class.base::RepeatingCallback.1604" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1605 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1606", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1606" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1610", %"class.std::__1::unique_ptr.1616", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1622" }
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1616" = type { %"class.std::__1::__compressed_pair.1617" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.1618" }
%"struct.std::__1::__compressed_pair_elem.1618" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1622" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1623" = type { %"class.std::__1::__tree.1624" }
%"class.std::__1::__tree.1624" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1625", %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.std::__1::map.1634" = type { %"class.std::__1::__tree.1635" }
%"class.std::__1::__tree.1635" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1636", %"class.std::__1::__compressed_pair.1640" }
%"class.std::__1::__compressed_pair.1636" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.1640" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.base::OnceCallback.1643" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1593 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.418" }>
%"class.base::RefCountedThreadSafe.418" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1644" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1648" = type { %"class.std::__1::__compressed_pair.1649" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.1650" }
%"struct.std::__1::__compressed_pair_elem.1650" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1657" = type { %"class.blink::MemberBase.1658" }
%"class.blink::MemberBase.1658" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.200" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::KURL"* }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.216 }
%class.scoped_refptr.216 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.220 }
%class.scoped_refptr.220 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.221", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.221" = type { %"class.base::RefCounted.222" }
%"class.base::RefCounted.222" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.225" }
%"class.blink::HeapHashMap.225" = type { %"class.WTF::HashMap.228" }
%"class.WTF::HashMap.228" = type { %"class.WTF::HashTable.229" }
%"class.WTF::HashTable.229" = type <{ %"struct.WTF::KeyValuePair.231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.231" = type { %"class.blink::WeakMember.232", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.13", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.5", %"class.blink::Member.5", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.429" }
%"class.blink::HeapHashMap.429" = type { %"class.WTF::HashMap.432" }
%"class.WTF::HashMap.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"struct.WTF::KeyValuePair.435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.435" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.438" = type { %"class.WTF::HashSet.441" }
%"class.WTF::HashSet.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"class.blink::WeakMember.444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.444" = type opaque
%"class.blink::HeapHashSet.445" = type { %"class.WTF::HashSet.448" }
%"class.WTF::HashSet.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"class.blink::WeakMember.451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.451" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.13", i32, i32, i32, %"class.blink::Member.66", %"class.blink::Member.458", %"class.blink::Member.485", %"class.blink::HeapHashMap.487", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.494", %"class.blink::HeapHashSet.494", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.500", %"class.blink::Member.523", %"class.blink::Member.989", %"class.blink::Member.991", %"class.blink::Member.997", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1159", %"class.blink::Member.168", %"class.blink::HeapHashMap.1165", %"class.blink::HeapHashMap.1172", %"class.std::__1::unique_ptr.1179", i32, %"class.blink::HeapVector.1185", %"class.blink::HeapVector.1185", %"class.blink::HeapVector.470", %"class.blink::HeapHashSet.1193", %"class.blink::HeapHashMap.1200", %"class.blink::Member.1207", %"class.blink::HeapHashMap.1209", %class.scoped_refptr.1216, %class.scoped_refptr.615, %"class.blink::Member.1123", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1217", %"class.blink::Member.26" }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.7", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.462", %"class.blink::HeapVector.470", i8 }>
%"class.blink::HeapVector.462" = type { %"class.WTF::Vector.465" }
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"class.blink::Member.468"*, i32, i32 }
%"class.blink::Member.468" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.481", %"class.blink::Member.483", %"class.blink::Member.483", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.481" = type <{ %"class.blink::Member.483"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.5", %"class.blink::Member.483", %"class.blink::Member.483" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.487" = type { %"class.WTF::HashMap.490" }
%"class.WTF::HashMap.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"struct.WTF::KeyValuePair.493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.493" = type opaque
%"class.blink::HeapHashSet.494" = type { %"class.WTF::HashSet.497" }
%"class.WTF::HashSet.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"class.blink::Member.7"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.504", %"class.blink::Member.515" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.26", %"class.blink::HeapHashMap.508" }
%"class.blink::HeapHashMap.508" = type { %"class.WTF::HashMap.511" }
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.514" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.519", %"class.blink::Member.521" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1425", %"class.blink::Member.515", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1432] }
%"class.blink::HeapVector.1425" = type { %"class.WTF::Vector.1428" }
%"class.WTF::Vector.1428" = type { %"class.WTF::VectorBuffer.1429" }
%"class.WTF::VectorBuffer.1429" = type { %"class.WTF::VectorBufferBase.1430" }
%"class.WTF::VectorBufferBase.1430" = type { %"class.blink::Member.521"*, i32, i32 }
%class.sk_sp.1432 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1433, i32, %"class.absl::optional.1434", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.181" }>
%class.sk_sp.1433 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1434" = type { %"class.absl::optional_internal::optional_data.1435" }
%"class.absl::optional_internal::optional_data.1435" = type { %"class.absl::optional_internal::optional_data_base.1436" }
%"class.absl::optional_internal::optional_data_base.1436" = type { %"class.absl::optional_internal::optional_data_dtor_base.1437" }
%"class.absl::optional_internal::optional_data_dtor_base.1437" = type { i8, %union.anon.1438 }
%union.anon.1438 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.13", %class.scoped_refptr.534, %"class.blink::SelectorFilter", %"class.blink::Member.485", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.527" }
%"class.blink::HeapHashMap.527" = type { %"class.WTF::HashMap.530" }
%"class.WTF::HashMap.530" = type { %"class.WTF::HashTable.531" }
%"class.WTF::HashTable.531" = type <{ %"struct.WTF::KeyValuePair.533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.533" = type opaque
%class.scoped_refptr.534 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.956", %"class.std::__1::unique_ptr.958" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.600", %"class.blink::DataRef.679", %"class.blink::DataRef.683", %"class.blink::DataRef.881", %"class.blink::DataRef.939", %"class.blink::DataRef.943", %"class.blink::DataRef.947", %"class.blink::DataRef.951", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.536", %"class.blink::DataRef.538", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.538" = type { %class.scoped_refptr.539 }
%class.scoped_refptr.539 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.540", %"class.blink::Font" }
%"class.WTF::RefCounted.540" = type { %"class.base::RefCounted.541" }
%"class.base::RefCounted.541" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.573 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.543, %class.scoped_refptr.551, %class.scoped_refptr.561, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.572 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.542 }
%class.scoped_refptr.542 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1421", [4 x i8] }>
%"class.WTF::RefCounted.1421" = type { %"class.base::RefCounted.1422" }
%"class.base::RefCounted.1422" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.543 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.549", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.544" }
%"class.WTF::Vector.544" = type { %"class.WTF::VectorBuffer.545" }
%"class.WTF::VectorBuffer.545" = type { %"class.WTF::VectorBufferBase.546" }
%"class.WTF::VectorBufferBase.546" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.549" = type { %"class.base::RefCounted.550" }
%"class.base::RefCounted.550" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.551 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.552", %"class.WTF::RefCounted.559", [4 x i8] }>
%"class.blink::FontSettings.552" = type { %"class.WTF::Vector.553" }
%"class.WTF::Vector.553" = type { %"class.WTF::VectorBuffer.554" }
%"class.WTF::VectorBuffer.554" = type { %"class.WTF::VectorBufferBase.555" }
%"class.WTF::VectorBufferBase.555" = type { %"class.blink::FontTagValuePair.556"*, i32, i32 }
%"class.blink::FontTagValuePair.556" = type { i32, float }
%"class.WTF::RefCounted.559" = type { %"class.base::RefCounted.560" }
%"class.base::RefCounted.560" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.561 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.562", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.569, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.562" = type { %"class.base::RefCounted.563" }
%"class.base::RefCounted.563" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.569 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.570", [4 x i8] }>
%"class.WTF::RefCounted.570" = type { %"class.base::RefCounted.571" }
%"class.base::RefCounted.571" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.572 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.573 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.574", %"class.WTF::Vector.576", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.574" = type { %"class.base::RefCounted.575" }
%"class.base::RefCounted.575" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578", [8 x i8] }
%"class.WTF::VectorBufferBase.578" = type { %class.scoped_refptr.579*, i32, i32 }
%class.scoped_refptr.579 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.580", [4 x i8] }>
%"class.WTF::RefCounted.580" = type { %"class.base::RefCounted.581" }
%"class.base::RefCounted.581" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.586", %class.scoped_refptr.593, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.580" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.584 }
%union.anon.584 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.585, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.181" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.421" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.585 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.589, %class.scoped_refptr.589 }
%class.scoped_refptr.589 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.593 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.594", [4 x i8] }>
%"class.WTF::RefCounted.594" = type { %"class.base::RefCounted.595" }
%"class.base::RefCounted.595" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.596" }
%"class.blink::PersistentBase.596" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.597" }
%"class.blink::PersistentNodePtr.597" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.598 }
%class.scoped_refptr.598 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.599, i8, i8, i8, i8 }>
%union.anon.599 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.600" = type { %class.scoped_refptr.601 }
%class.scoped_refptr.601 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.602", [4 x i8], %"class.blink::DataRef.604", %"class.blink::DataRef.645", %"class.WTF::Vector.649", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.653, %class.scoped_refptr.662, %"class.blink::Persistent.670", %"class.blink::Persistent.672", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.602" = type { %"class.base::RefCounted.603" }
%"class.base::RefCounted.603" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.604" = type { %class.scoped_refptr.605 }
%class.scoped_refptr.605 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.606", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.608, %class.scoped_refptr.615, %"class.blink::Persistent.632", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.606" = type { %"class.base::RefCounted.607" }
%"class.base::RefCounted.607" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.608 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.609", %"class.WTF::Vector.610" }
%"class.base::RefCountedThreadSafe.609" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.632" = type { %"class.blink::PersistentBase.633" }
%"class.blink::PersistentBase.633" = type { %"class.blink::HeapVector.634"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.634" = type { %"class.WTF::Vector.637" }
%"class.WTF::Vector.637" = type { %"class.WTF::VectorBuffer.638" }
%"class.WTF::VectorBuffer.638" = type { %"class.WTF::VectorBufferBase.639" }
%"class.WTF::VectorBufferBase.639" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.640", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.645" = type { %class.scoped_refptr.646 }
%class.scoped_refptr.646 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.647", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.647" = type { %"class.base::RefCounted.648" }
%"class.base::RefCounted.648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.649" = type { %"class.WTF::VectorBuffer.650" }
%"class.WTF::VectorBuffer.650" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.653 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.654", %"class.WTF::Vector.656" }
%"class.WTF::RefCounted.654" = type { %"class.base::RefCounted.655" }
%"class.base::RefCounted.655" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.656" = type { %"class.WTF::VectorBuffer.657" }
%"class.WTF::VectorBuffer.657" = type { %"class.WTF::VectorBufferBase.658" }
%"class.WTF::VectorBufferBase.658" = type { %"struct.std::__1::pair.659"*, i32, i32 }
%"struct.std::__1::pair.659" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.662 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.663", [4 x i8], %"class.WTF::Vector.665" }
%"class.WTF::RefCounted.663" = type { %"class.base::RefCounted.664" }
%"class.base::RefCounted.664" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.667", [28 x i8] }>
%"class.WTF::VectorBufferBase.667" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.670" = type { %"class.blink::PersistentBase.671" }
%"class.blink::PersistentBase.671" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.672" = type { %"class.blink::PersistentBase.673" }
%"class.blink::PersistentBase.673" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.676", %"class.blink::Member.677" }
%"class.blink::Member.676" = type { %"class.blink::MemberBase.0" }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.679" = type { %class.scoped_refptr.680 }
%class.scoped_refptr.680 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.681", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.683" = type { %class.scoped_refptr.684 }
%class.scoped_refptr.684 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.685", [4 x i8], %"class.blink::DataRef.687", %"class.blink::DataRef.751", %"class.blink::TransformOperations", %class.scoped_refptr.662, %"class.blink::Persistent.875", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.685" = type { %"class.base::RefCounted.686" }
%"class.base::RefCounted.686" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.687" = type { %class.scoped_refptr.688 }
%class.scoped_refptr.688 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.689", [4 x i8], %"class.blink::DataRef.691", %"class.blink::Persistent.729", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.689" = type { %"class.base::RefCounted.690" }
%"class.base::RefCounted.690" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.691" = type { %class.scoped_refptr.692 }
%class.scoped_refptr.692 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.693", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.711, %class.scoped_refptr.714, %class.scoped_refptr.717, %class.scoped_refptr.720, %class.scoped_refptr.721, %class.scoped_refptr.722, %"class.blink::Persistent.729", %"class.blink::Persistent.742", %"class.absl::optional.746", %"class.absl::optional.746", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.693" = type { %"class.base::RefCounted.694" }
%"class.base::RefCounted.694" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.695", %"class.std::__1::unique_ptr.700" }
%"class.WTF::Vector.695" = type { %"class.WTF::VectorBuffer.696" }
%"class.WTF::VectorBuffer.696" = type { %"class.WTF::VectorBufferBase.697" }
%"class.WTF::VectorBufferBase.697" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.703", %"class.WTF::Vector.695", i32, i32 }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.711 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.712", [4 x i8] }>
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.714 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.715", [4 x i8] }>
%"class.WTF::RefCounted.715" = type { %"class.base::RefCounted.716" }
%"class.base::RefCounted.716" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.717 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.718" }>
%"class.WTF::RefCounted.718" = type { %"class.base::RefCounted.719" }
%"class.base::RefCounted.719" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.720 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.721 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.722 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.723", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.723" = type { %"class.base::RefCounted.724" }
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.725" }
%"class.blink::DataRef.725" = type { %class.scoped_refptr.726 }
%class.scoped_refptr.726 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.670", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.727" }
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.742" = type { %"class.blink::PersistentBase.743" }
%"class.blink::PersistentBase.743" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.714, %"class.blink::Member.640", i32, [4 x i8] }>
%"class.absl::optional.746" = type { %"class.absl::optional_internal::optional_data.747" }
%"class.absl::optional_internal::optional_data.747" = type { %"class.absl::optional_internal::optional_data_base.748" }
%"class.absl::optional_internal::optional_data_base.748" = type { %"class.absl::optional_internal::optional_data_dtor_base.749" }
%"class.absl::optional_internal::optional_data_dtor_base.749" = type { i8, [3 x i8], %union.anon.750 }
%union.anon.750 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.729" = type { %"class.blink::PersistentBase.730" }
%"class.blink::PersistentBase.730" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.733" }
%"class.blink::HeapVector.733" = type { %"class.WTF::Vector.736" }
%"class.WTF::Vector.736" = type { %"class.WTF::VectorBuffer.737" }
%"class.WTF::VectorBuffer.737" = type { %"class.WTF::VectorBufferBase.738" }
%"class.WTF::VectorBufferBase.738" = type { %"class.blink::Member.739"*, i32, i32 }
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.751" = type { %class.scoped_refptr.752 }
%class.scoped_refptr.752 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.753", %"class.blink::DataRef.755", %"class.blink::DataRef.759", %"class.blink::DataRef.768", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.787", %"class.std::__1::unique_ptr.798", %"class.std::__1::unique_ptr.836", %"class.std::__1::unique_ptr.847", %"class.std::__1::unique_ptr.858", %"class.WTF::Vector.864", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.753" = type { %"class.base::RefCounted.754" }
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.755" = type { %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.757", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.757" = type { %"class.base::RefCounted.758" }
%"class.base::RefCounted.758" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.759" = type { %class.scoped_refptr.760 }
%class.scoped_refptr.760 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.761", [4 x i8], %"class.WTF::Vector.763", i8, [7 x i8] }>
%"class.WTF::RefCounted.761" = type { %"class.base::RefCounted.762" }
%"class.base::RefCounted.762" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765" }
%"class.WTF::VectorBufferBase.765" = type { i32*, i32, i32 }
%"class.blink::DataRef.768" = type { %class.scoped_refptr.769 }
%class.scoped_refptr.769 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.770", [4 x i8], %"class.WTF::HashMap.772", %"class.WTF::HashMap.772", %"class.WTF::HashMap.772", %"class.WTF::HashMap.772", %"class.WTF::HashMap.772", %"class.WTF::HashMap.772", %"class.WTF::HashMap.777", %"class.WTF::HashMap.777", %"class.WTF::HashMap.777", %"class.WTF::HashMap.777", %"class.WTF::HashMap.782", %"class.WTF::Vector.695", %"class.WTF::Vector.695", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.770" = type { %"class.base::RefCounted.771" }
%"class.base::RefCounted.771" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.772" = type { %"class.WTF::HashTable.773" }
%"class.WTF::HashTable.773" = type <{ %"struct.WTF::KeyValuePair.776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.776" = type { %"class.WTF::String", %"class.WTF::Vector.3017" }
%"class.WTF::Vector.3017" = type { %"class.WTF::VectorBuffer.3018" }
%"class.WTF::VectorBuffer.3018" = type { %"class.WTF::VectorBufferBase.3019" }
%"class.WTF::VectorBufferBase.3019" = type { i64*, i32, i32 }
%"class.WTF::HashMap.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type { i64, %"class.WTF::Vector.864" }
%"class.WTF::HashMap.782" = type { %"class.WTF::HashTable.783" }
%"class.WTF::HashTable.783" = type <{ %"struct.WTF::KeyValuePair.786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.786" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.790" }
%"class.WTF::HashMap.790" = type { %"class.WTF::HashTable.791" }
%"class.WTF::HashTable.791" = type <{ %"struct.WTF::KeyValuePair.794"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.794" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3022", %"class.absl::optional.3022", %"class.absl::optional.3022" }
%"class.absl::optional.3022" = type { %"class.absl::optional_internal::optional_data.3023" }
%"class.absl::optional_internal::optional_data.3023" = type { %"class.absl::optional_internal::optional_data_base.3024" }
%"class.absl::optional_internal::optional_data_base.3024" = type { %"class.absl::optional_internal::optional_data_dtor_base.3025" }
%"class.absl::optional_internal::optional_data_dtor_base.3025" = type { i8, %union.anon.3026 }
%union.anon.3026 = type { i32 }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.649", %"class.WTF::Vector.813", %"class.WTF::Vector.801", %"class.WTF::Vector.818", %"class.WTF::Vector.823", %"class.WTF::Vector.828" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.801", %"class.WTF::Vector.801", %"class.WTF::Vector.806" }
%"class.WTF::Vector.806" = type { %"class.WTF::VectorBuffer.807" }
%"class.WTF::VectorBuffer.807" = type { %"class.WTF::VectorBufferBase.808" }
%"class.WTF::VectorBufferBase.808" = type { %class.scoped_refptr.809*, i32, i32 }
%class.scoped_refptr.809 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.810" }
%"class.base::RefCountedThreadSafe.810" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.801" = type { %"class.WTF::VectorBuffer.802" }
%"class.WTF::VectorBuffer.802" = type { %"class.WTF::VectorBufferBase.803" }
%"class.WTF::VectorBufferBase.803" = type { double*, i32, i32 }
%"class.WTF::Vector.818" = type { %"class.WTF::VectorBuffer.819" }
%"class.WTF::VectorBuffer.819" = type { %"class.WTF::VectorBufferBase.820" }
%"class.WTF::VectorBufferBase.820" = type { i32*, i32, i32 }
%"class.WTF::Vector.823" = type { %"class.WTF::VectorBuffer.824" }
%"class.WTF::VectorBuffer.824" = type { %"class.WTF::VectorBufferBase.825" }
%"class.WTF::VectorBufferBase.825" = type { i32*, i32, i32 }
%"class.WTF::Vector.828" = type { %"class.WTF::VectorBuffer.829" }
%"class.WTF::VectorBuffer.829" = type { %"class.WTF::VectorBufferBase.830" }
%"class.WTF::VectorBufferBase.830" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.839" }
%"class.WTF::Vector.839" = type { %"class.WTF::VectorBuffer.840" }
%"class.WTF::VectorBuffer.840" = type { %"class.WTF::VectorBufferBase.841" }
%"class.WTF::VectorBufferBase.841" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.850" }
%"class.WTF::Vector.850" = type { %"class.WTF::VectorBuffer.851" }
%"class.WTF::VectorBuffer.851" = type { %"class.WTF::VectorBufferBase.852" }
%"class.WTF::VectorBufferBase.852" = type { %"class.blink::Persistent.670"*, i32, i32 }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.618", %"class.blink::Persistent.623" }
%"class.WTF::HashMap.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3027 }
%class.scoped_refptr.3027 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3028", %"class.WTF::Vector.864", %"class.WTF::Vector.3030", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3028" = type { %"class.base::RefCounted.3029" }
%"class.base::RefCounted.3029" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3030" = type { %"class.WTF::VectorBuffer.3031" }
%"class.WTF::VectorBuffer.3031" = type { %"class.WTF::VectorBufferBase.3032" }
%"class.WTF::VectorBufferBase.3032" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3033 }
%union.anon.3033 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent.623" = type { %"class.blink::PersistentBase.624" }
%"class.blink::PersistentBase.624" = type { %"class.blink::HeapHashMap.625"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.625" = type { %"class.WTF::HashMap.628" }
%"class.WTF::HashMap.628" = type { %"class.WTF::HashTable.629" }
%"class.WTF::HashTable.629" = type <{ %"struct.WTF::KeyValuePair.631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.631" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.670", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.869" }
%"class.WTF::Vector.869" = type { %"class.WTF::VectorBuffer.870" }
%"class.WTF::VectorBuffer.870" = type { %"class.WTF::VectorBufferBase.871" }
%"class.WTF::VectorBufferBase.871" = type { %class.scoped_refptr.872*, i32, i32 }
%class.scoped_refptr.872 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.718", [4 x i8] }>
%"class.blink::Persistent.875" = type { %"class.blink::PersistentBase.876" }
%"class.blink::PersistentBase.876" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.879" }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.881" = type { %class.scoped_refptr.882 }
%class.scoped_refptr.882 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.883", [4 x i8], %"class.blink::DataRef.885", %"class.blink::DataRef.889", %"class.blink::DataRef.910", %"class.blink::DataRef.919", %"class.blink::DataRef.931", %"class.blink::DataRef.935", %class.scoped_refptr.914, i32, [4 x i8] }>
%"class.WTF::RefCounted.883" = type { %"class.base::RefCounted.884" }
%"class.base::RefCounted.884" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.885" = type { %class.scoped_refptr.886 }
%class.scoped_refptr.886 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.887", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.887" = type { %"class.base::RefCounted.888" }
%"class.base::RefCounted.888" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.889" = type { %class.scoped_refptr.890 }
%class.scoped_refptr.890 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.891", %class.scoped_refptr.893, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.891" = type { %"class.base::RefCounted.892" }
%"class.base::RefCounted.892" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.893 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.894", %"class.std::__1::unique_ptr.900", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.715" }>
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.903, i32, %"struct.std::__1::atomic.421", %"struct.std::__1::atomic.421", i8, i8 }>
%class.sk_sp.903 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.904, %class.SkTDArray.905, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.181" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.904 = type { i8*, i32, i32 }
%class.SkTDArray.905 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.906 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.181", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.906 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.411", [3 x i8] }
%"class.blink::DataRef.910" = type { %class.scoped_refptr.911 }
%class.scoped_refptr.911 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.912", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.912" = type { %"class.base::RefCounted.913" }
%"class.base::RefCounted.913" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.914, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.919" = type { %class.scoped_refptr.920 }
%class.scoped_refptr.920 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.921", [4 x i8], %class.scoped_refptr.923, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.921" = type { %"class.base::RefCounted.922" }
%"class.base::RefCounted.922" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.923 = type { %"class.base::RefCountedData.924"* }
%"class.base::RefCountedData.924" = type { %"class.base::RefCountedThreadSafe.925", %"class.WTF::Vector.926" }
%"class.base::RefCountedThreadSafe.925" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.926" = type { %"class.WTF::VectorBuffer.927" }
%"class.WTF::VectorBuffer.927" = type { %"class.WTF::VectorBufferBase.928" }
%"class.WTF::VectorBufferBase.928" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.931" = type { %class.scoped_refptr.932 }
%class.scoped_refptr.932 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.933", %class.scoped_refptr.914, %class.scoped_refptr.914, %class.scoped_refptr.914 }
%"class.WTF::RefCounted.933" = type { %"class.base::RefCounted.934" }
%"class.base::RefCounted.934" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.935" = type { %class.scoped_refptr.936 }
%class.scoped_refptr.936 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.937", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.937" = type { %"class.base::RefCounted.938" }
%"class.base::RefCounted.938" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.914 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.915", %"class.blink::Persistent.917", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.915" = type { %"class.base::RefCounted.916" }
%"class.base::RefCounted.916" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.917" = type { %"class.blink::PersistentBase.918" }
%"class.blink::PersistentBase.918" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DataRef.939" = type { %class.scoped_refptr.940 }
%class.scoped_refptr.940 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.941", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.941" = type { %"class.base::RefCounted.942" }
%"class.base::RefCounted.942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.943" = type { %class.scoped_refptr.944 }
%class.scoped_refptr.944 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.945", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.945" = type { %"class.base::RefCounted.946" }
%"class.base::RefCounted.946" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.947" = type { %class.scoped_refptr.948 }
%class.scoped_refptr.948 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.949", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.949" = type { %"class.base::RefCounted.950" }
%"class.base::RefCounted.950" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.951" = type { %class.scoped_refptr.952 }
%class.scoped_refptr.952 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.953", %class.scoped_refptr.955 }
%"class.WTF::RefCounted.953" = type { %"class.base::RefCounted.954" }
%"class.base::RefCounted.954" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.955 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1419", %"class.blink::StyleVariables", %class.scoped_refptr.955 }
%"class.WTF::RefCounted.1419" = type { %"class.base::RefCounted.1420" }
%"class.base::RefCounted.1420" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.956" = type { %"class.base::RefCounted.957" }
%"class.base::RefCounted.957" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.961" }
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"class.WTF::Vector.964"* }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.3037" }
%"class.WTF::VectorBuffer.3037" = type { %"class.WTF::VectorBufferBase.3038", [32 x i8] }
%"class.WTF::VectorBufferBase.3038" = type { %class.scoped_refptr.534*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.971", %"class.std::__1::unique_ptr.983" }
%"class.blink::HeapVector.971" = type { %"class.WTF::Vector.974" }
%"class.WTF::Vector.974" = type { %"class.WTF::VectorBuffer.975" }
%"class.WTF::VectorBuffer.975" = type { %"class.WTF::VectorBufferBase.976" }
%"class.WTF::VectorBufferBase.976" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.26", %"class.WTF::Vector.977" }
%"class.WTF::Vector.977" = type { %"class.WTF::VectorBuffer.978" }
%"class.WTF::VectorBuffer.978" = type { %"class.WTF::VectorBufferBase.979", [16 x i8] }
%"class.WTF::VectorBufferBase.979" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.995", i8, [7 x i8] }>
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1019", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1001", %"class.WTF::HashMap.1001", %"class.WTF::HashMap.1001", %"class.WTF::HashMap.1006", %class.scoped_refptr.1011, %class.scoped_refptr.1018, %class.scoped_refptr.1017, %"class.WTF::Vector.84", %"class.WTF::Vector.84", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1001" = type { %"class.WTF::HashTable.1002" }
%"class.WTF::HashTable.1002" = type <{ %"struct.WTF::KeyValuePair.1005"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1005" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3041 }
%class.scoped_refptr.3041 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1012", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1014", %"union.blink::InvalidationSet::Backing.1015", %"union.blink::InvalidationSet::Backing.1016", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1012" = type { %"class.base::RefCounted.1013" }
%"class.base::RefCounted.1013" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1014" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1015" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1016" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1006" = type { %"class.WTF::HashTable.1007" }
%"class.WTF::HashTable.1007" = type <{ %"struct.WTF::KeyValuePair.1010"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1010" = type opaque
%class.scoped_refptr.1011 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1017, %class.scoped_refptr.1017 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1012", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1014", %"union.blink::InvalidationSet::Backing.1015", %"union.blink::InvalidationSet::Backing.1016", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1018 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1017 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1023", %"class.blink::HeapHashMap.1023", %"class.blink::HeapHashMap.1023", %"class.blink::HeapHashMap.1023", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1030", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1066", %"class.blink::HeapVector.1074", %"class.blink::HeapVector.1082", %"class.blink::HeapVector.1099", %"class.blink::HeapVector.1107", %"class.blink::HeapVector.1115", %"class.blink::HeapVector.1128", %"class.WTF::Vector.1135", i32, %"class.blink::Member.1141" }
%"class.blink::HeapHashMap.1023" = type { %"class.WTF::HashMap.1026" }
%"class.WTF::HashMap.1026" = type { %"class.WTF::HashTable.1027" }
%"class.WTF::HashTable.1027" = type <{ %"struct.WTF::KeyValuePair.1029"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1029" = type { %"class.WTF::AtomicString", %"class.blink::Member.3051" }
%"class.blink::Member.3051" = type { %"class.blink::MemberBase.3052" }
%"class.blink::MemberBase.3052" = type { %"class.blink::HeapVector.1030"* }
%"class.blink::HeapVector.1030" = type { %"class.WTF::Vector.1033" }
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"class.blink::Member.1036"*, i32, i32 }
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1040", i64, [4 x i32] }
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.35", %"class.blink::Member.1061" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1066" = type { %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { %"class.blink::Member.1072"*, i32, i32 }
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.3047" }
%"class.blink::MemberBase.3047" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.35", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1074" = type { %"class.WTF::Vector.1077" }
%"class.WTF::Vector.1077" = type { %"class.WTF::VectorBuffer.1078" }
%"class.WTF::VectorBuffer.1078" = type { %"class.WTF::VectorBufferBase.1079" }
%"class.WTF::VectorBufferBase.1079" = type { %"class.blink::Member.1080"*, i32, i32 }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.3048" }
%"class.blink::MemberBase.3048" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.35" }
%"class.blink::HeapVector.1082" = type { %"class.WTF::Vector.1085" }
%"class.WTF::Vector.1085" = type { %"class.WTF::VectorBuffer.1086" }
%"class.WTF::VectorBuffer.1086" = type { %"class.WTF::VectorBufferBase.1087" }
%"class.WTF::VectorBufferBase.1087" = type { %"class.blink::Member.1088"*, i32, i32 }
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1090", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1090" = type { %"class.WTF::Vector.1093" }
%"class.WTF::Vector.1093" = type { %"class.WTF::VectorBuffer.1094" }
%"class.WTF::VectorBuffer.1094" = type { %"class.WTF::VectorBufferBase.1095" }
%"class.WTF::VectorBufferBase.1095" = type { %"class.blink::Member.1096"*, i32, i32 }
%"class.blink::Member.1096" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"class.blink::Member.1105"*, i32, i32 }
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.3049" }
%"class.blink::MemberBase.3049" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.35" }
%"class.blink::HeapVector.1107" = type { %"class.WTF::Vector.1110" }
%"class.WTF::Vector.1110" = type { %"class.WTF::VectorBuffer.1111" }
%"class.WTF::VectorBuffer.1111" = type { %"class.WTF::VectorBufferBase.1112" }
%"class.WTF::VectorBufferBase.1112" = type { %"class.blink::Member.1113"*, i32, i32 }
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.3050" }
%"class.blink::MemberBase.3050" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", i32, [4 x i8] }>
%"class.blink::HeapVector.1115" = type { %"class.WTF::Vector.1118" }
%"class.WTF::Vector.1118" = type { %"class.WTF::VectorBuffer.1119" }
%"class.WTF::VectorBuffer.1119" = type { %"class.WTF::VectorBufferBase.1120" }
%"class.WTF::VectorBufferBase.1120" = type { %"class.blink::Member.1121"*, i32, i32 }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123" }
%"class.blink::HeapVector.1128" = type { %"class.WTF::Vector.1131" }
%"class.WTF::Vector.1131" = type { %"class.WTF::VectorBuffer.1132" }
%"class.WTF::VectorBuffer.1132" = type { %"class.WTF::VectorBufferBase.1133" }
%"class.WTF::VectorBufferBase.1133" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1040", i32, i32 }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1138, i8, [7 x i8] }>
%class.scoped_refptr.1138 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1145", %"class.blink::HeapHashMap.1145", %"class.blink::HeapHashMap.1145", %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1152" }
%"class.blink::HeapHashMap.1152" = type { %"class.WTF::HashMap.1155" }
%"class.WTF::HashMap.1155" = type { %"class.WTF::HashTable.1156" }
%"class.WTF::HashTable.1156" = type <{ %"struct.WTF::KeyValuePair.1158"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1158" = type { %"class.blink::Member.1", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3042", %"class.WTF::Vector.3042" }
%"class.WTF::Vector.3042" = type { %"class.WTF::VectorBuffer.3043" }
%"class.WTF::VectorBuffer.3043" = type { %"class.WTF::VectorBufferBase.3044" }
%"class.WTF::VectorBufferBase.3044" = type { %class.scoped_refptr.3041*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.5", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1159" = type { %"class.WTF::HashSet.1162" }
%"class.WTF::HashSet.1162" = type { %"class.WTF::HashTable.1163" }
%"class.WTF::HashTable.1163" = type <{ %"class.blink::Member.26"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1165" = type { %"class.WTF::HashMap.1168" }
%"class.WTF::HashMap.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"struct.WTF::KeyValuePair.1171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1171" = type opaque
%"class.blink::HeapHashMap.1172" = type { %"class.WTF::HashMap.1175" }
%"class.WTF::HashMap.1175" = type { %"class.WTF::HashTable.1176" }
%"class.WTF::HashTable.1176" = type <{ %"struct.WTF::KeyValuePair.1178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1178" = type opaque
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1185" = type { %"class.WTF::Vector.1188" }
%"class.WTF::Vector.1188" = type { %"class.WTF::VectorBuffer.1189" }
%"class.WTF::VectorBuffer.1189" = type { %"class.WTF::VectorBufferBase.1190" }
%"class.WTF::VectorBufferBase.1190" = type { %"struct.std::__1::pair.1191"*, i32, i32 }
%"struct.std::__1::pair.1191" = type opaque
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"struct.std::__1::pair.476"*, i32, i32 }
%"struct.std::__1::pair.476" = type opaque
%"class.blink::HeapHashSet.1193" = type { %"class.WTF::HashSet.1196" }
%"class.WTF::HashSet.1196" = type { %"class.WTF::HashTable.1197" }
%"class.WTF::HashTable.1197" = type <{ %"class.blink::WeakMember.1199"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1199" = type { %"class.blink::MemberBase.67" }
%"class.blink::HeapHashMap.1200" = type { %"class.WTF::HashMap.1203" }
%"class.WTF::HashMap.1203" = type { %"class.WTF::HashTable.1204" }
%"class.WTF::HashTable.1204" = type <{ %"struct.WTF::KeyValuePair.1206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1206" = type { %"class.WTF::AtomicString", %"class.blink::Member.1088" }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1209" = type { %"class.WTF::HashMap.1212" }
%"class.WTF::HashMap.1212" = type { %"class.WTF::HashTable.1213" }
%"class.WTF::HashTable.1213" = type <{ %"struct.WTF::KeyValuePair.1215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1215" = type opaque
%class.scoped_refptr.1216 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.615 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.616", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.616" = type { %"class.base::RefCounted.617" }
%"class.base::RefCounted.617" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1217" = type { %"class.WTF::HashSet.1220" }
%"class.WTF::HashSet.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %"class.blink::Member.1223"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1223" = type opaque
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.7", %"class.blink::HeapVector.60" }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1230" = type { %"class.WTF::HashMap.1233" }
%"class.WTF::HashMap.1233" = type { %"class.WTF::HashTable.1234" }
%"class.WTF::HashTable.1234" = type <{ %"struct.WTF::KeyValuePair.1236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1236" = type opaque
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1250" = type { %"class.WTF::Vector.1253" }
%"class.WTF::Vector.1253" = type { %"class.WTF::VectorBuffer.1254" }
%"class.WTF::VectorBuffer.1254" = type { %"class.WTF::VectorBufferBase.1255" }
%"class.WTF::VectorBufferBase.1255" = type { %"class.blink::Member.1256"*, i32, i32 }
%"class.blink::Member.1256" = type opaque
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1264" = type { %"class.WTF::HashSet.1267" }
%"class.WTF::HashSet.1267" = type { %"class.WTF::HashTable.1268" }
%"class.WTF::HashTable.1268" = type <{ %"class.blink::WeakMember.1270"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1270" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1271", i32, [4 x i8] }>
%"class.WTF::Vector.1271" = type { %"class.WTF::VectorBuffer.1272" }
%"class.WTF::VectorBuffer.1272" = type { %"class.WTF::VectorBufferBase.1273" }
%"class.WTF::VectorBufferBase.1273" = type { %"struct.std::__1::pair.1274"*, i32, i32 }
%"struct.std::__1::pair.1274" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1279" = type { %"class.WTF::VectorBuffer.1280" }
%"class.WTF::VectorBuffer.1280" = type { %"class.WTF::VectorBufferBase.1281" }
%"class.WTF::VectorBufferBase.1281" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1284" = type { %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1290" = type { %"class.WTF::Vector.1293" }
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { %"class.blink::Member.1296"*, i32, i32 }
%"class.blink::Member.1296" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.13" }
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1308" = type { %"class.WTF::HashTable.1309" }
%"class.WTF::HashTable.1309" = type <{ %"struct.WTF::KeyValuePair.1312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1312" = type opaque
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1315" = type { %"class.blink::MemberBase.1316" }
%"class.blink::MemberBase.1316" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.426", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.417, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.417 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.426" = type { %"class.blink::MemberBase.14" }
%"class.blink::HeapHashSet.1321" = type { %"class.WTF::HashSet.1324" }
%"class.WTF::HashSet.1324" = type { %"class.WTF::HashTable.1325" }
%"class.WTF::HashTable.1325" = type <{ %"class.blink::Member.1327"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1327" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1338" = type { %"class.std::__1::__compressed_pair.1339" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.1340" }
%"struct.std::__1::__compressed_pair_elem.1340" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", %"class.WTF::HashSet.98", i32, [4 x i8], %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1347" = type { %"class.WTF::HashTable.1348" }
%"class.WTF::HashTable.1348" = type <{ %"struct.WTF::KeyValuePair.1351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1351" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1368" = type { %"class.WTF::HashMap.1371" }
%"class.WTF::HashMap.1371" = type { %"class.WTF::HashTable.1372" }
%"class.WTF::HashTable.1372" = type <{ %"struct.WTF::KeyValuePair.1374"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1374" = type opaque
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1387" = type { %"class.WTF::HashMap.1390" }
%"class.WTF::HashMap.1390" = type { %"class.WTF::HashTable.1391" }
%"class.WTF::HashTable.1391" = type <{ %"struct.WTF::KeyValuePair.1393"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1393" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1394" }
%"class.blink::HeapHashSet.1394" = type { %"class.WTF::HashSet.1397" }
%"class.WTF::HashSet.1397" = type { %"class.WTF::HashTable.1398" }
%"class.WTF::HashTable.1398" = type <{ %"class.blink::WeakMember.1400"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1400" = type opaque
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.13", %"class.blink::HeapHashSet.1410", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1417", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1410" = type { %"class.WTF::HashSet.1413" }
%"class.WTF::HashSet.1413" = type { %"class.WTF::HashTable.1414" }
%"class.WTF::HashTable.1414" = type <{ %"class.blink::Member.1416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1416" = type opaque
%"class.blink::HeapTaskRunnerTimer.1417" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1418", { i64, i64 } }
%"class.blink::WeakMember.1418" = type { %"class.blink::MemberBase.1404" }
%"class.blink::WeakMember.1405" = type { %"class.blink::MemberBase.6" }
%"class.blink::Member.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::InternalPopupMenu" = type <{ %"class.blink::PopupMenu", %"class.blink::PagePopupClient", %"class.blink::Member.1664", %"class.blink::Member.1668", %"class.blink::PagePopup"*, i8, [7 x i8] }>
%"class.blink::PopupMenu" = type { i32 (...)** }
%"class.blink::PagePopupClient" = type { i32 (...)** }
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::ChromeClient"* }
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::HTMLSelectElement"* }
%"class.blink::PagePopup" = type { i32 (...)** }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1405", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.1676", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.1701", %"class.blink::Member.1701", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.1705", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1670", %"class.blink::Member.1672", %"class.blink::Member.1674", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.1676" = type { %"class.WTF::Vector.1679" }
%"class.WTF::Vector.1679" = type { %"class.WTF::VectorBuffer.1680" }
%"class.WTF::VectorBuffer.1680" = type { %"class.WTF::VectorBufferBase.1681" }
%"class.WTF::VectorBufferBase.1681" = type { %"class.blink::Member.1682"*, i32, i32 }
%"class.blink::Member.1682" = type { %"class.blink::MemberBase.1683" }
%"class.blink::MemberBase.1683" = type { %"class.blink::HTMLElement"* }
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.1685", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional.1685" = type { %"class.absl::optional_internal::optional_data.1686" }
%"class.absl::optional_internal::optional_data.1686" = type { %"class.absl::optional_internal::optional_data_base.1687" }
%"class.absl::optional_internal::optional_data_base.1687" = type { %"class.absl::optional_internal::optional_data_dtor_base.1688" }
%"class.absl::optional_internal::optional_data_dtor_base.1688" = type { i8, %union.anon.1689 }
%union.anon.1689 = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1690, i32, i8, i8, [2 x i8] }>
%union.anon.1690 = type { %"class.WTF::Vector.1691" }
%"class.WTF::Vector.1691" = type { %"class.WTF::VectorBuffer.1692" }
%"class.WTF::VectorBuffer.1692" = type { %"class.WTF::VectorBufferBase.1693", [16 x i8] }
%"class.WTF::VectorBufferBase.1693" = type { i8*, i32, i32 }
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.1703", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1707", i64, %"class.WTF::Vector.1709", %"class.WTF::Vector.1714" }
%"class.WTF::RefCounted.1707" = type { %"class.base::RefCounted.1708" }
%"class.base::RefCounted.1708" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1709" = type { %"class.WTF::VectorBuffer.1710" }
%"class.WTF::VectorBuffer.1710" = type { %"class.WTF::VectorBufferBase.1711" }
%"class.WTF::VectorBufferBase.1711" = type { i8*, i32, i32 }
%"class.WTF::Vector.1714" = type { %"class.WTF::VectorBuffer.1715" }
%"class.WTF::VectorBuffer.1715" = type { %"class.WTF::VectorBufferBase.1716" }
%"class.WTF::VectorBufferBase.1716" = type { %"class.std::__1::unique_ptr.1717"*, i32, i32 }
%"class.std::__1::unique_ptr.1717" = type opaque
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.blink::StyleRequest" = type { %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, i32, i8, i32, i32, %"class.blink::CustomScrollbar"*, %"class.WTF::AtomicString" }
%"class.blink::CustomScrollbar" = type <{ %"class.blink::Scrollbar", %"class.WTF::HashMap.2992", i8, [7 x i8] }>
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2090", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2100", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.26" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2092", %"class.blink::Member.2094", %"class.blink::Member.2096", %"class.blink::Member.2098", %"class.WTF::Vector.177", i16, %class.scoped_refptr.417 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2098" = type { %"class.blink::MemberBase.2099" }
%"class.blink::MemberBase.2099" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2100" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2101", { i64, i64 } }
%"class.blink::WeakMember.2101" = type { %"class.blink::MemberBase.1914" }
%"class.blink::MemberBase.1914" = type { %"class.blink::Scrollbar"* }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.WTF::HashMap.2992" = type { %"class.WTF::HashTable.2993" }
%"class.WTF::HashTable.2993" = type <{ %"struct.WTF::KeyValuePair.2996"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2996" = type { i32, %"class.blink::LayoutCustomScrollbarPart"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"struct.std::__1::pair.2947" = type { i8, %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.blink::InternalPopupMenu::ItemIterationContext" = type { %"class.blink::ComputedStyle"*, %"class.blink::Color", %"class.blink::ComputedStyle"*, i32, i8, %"class.WTF::SharedBuffer"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1722", %"class.blink::Member.1727", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1729", i8, i32, %"class.blink::Color", %"class.absl::optional.1732", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1737", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.std::__1::unique_ptr.1742", i32, [4 x i8], %"class.WTF::HashSet.1745", %"class.blink::Member.1898", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1900", %"class.blink::HeapHashSet.1907", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1915", i8, %"class.blink::Member.1921", i8, i8, i32, %"class.blink::HeapLinkedHashSet.1923", %"class.blink::HeapLinkedHashSet.1937", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1951", i8, %"class.std::__1::unique_ptr.1957", %"class.std::__1::unique_ptr.2038", %"class.WTF::Vector.2044", i32, %class.scoped_refptr.2049, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2050", %"class.blink::Member.2052", %"class.blink::Member.2054", %"class.blink::HeapHashSet.2056", %"class.blink::HeapHashSet.2063", %"class.std::__1::unique_ptr.2070", %"class.std::__1::unique_ptr.2077", %"class.WTF::Vector.177" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1722" = type { %"class.WTF::HashTable.1723" }
%"class.WTF::HashTable.1723" = type <{ %class.scoped_refptr.1726*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1726 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2273", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2281", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2295", %"class.blink::FrameLoader", %"class.blink::Member.2316", %"class.blink::Member.26", %"class.blink::Member.2317", %"class.blink::Member.2319", %"class.blink::Member.2321", %"class.blink::Member.2323", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2325", %class.scoped_refptr.2549, %"class.blink::Member.2550", %"class.blink::Member.2552", %"class.blink::Member.2554", %"class.blink::Member.2556", %"class.blink::Member.2558", %"class.blink::Member.2562", %"class.blink::Member.2564", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2568", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2589", %"class.std::__1::unique_ptr.2590", %"class.absl::optional.2261", i32, [4 x i8], %"class.std::__1::unique_ptr.2596", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2604", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2609", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2614", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2617", %"class.blink::Member.2619", %"class.blink::Member.2621", %"class.blink::Member.2623", %"class.mojo::StructPtr.2626", %"class.blink::Member.2635", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2637", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2106", %"class.blink::Member.2108", %"class.blink::Member.2110", i8, i32, i8, i32, %"class.blink::Member.2243", %"class.blink::Member.2133", %"class.blink::FrameLifecycle", %"class.blink::Member.2104", %"class.blink::Member.2104", %"class.blink::Member.2104", %"class.blink::Member.2104", %"class.blink::Member.2104", %"class.blink::Member.2104", %"class.blink::Member.1727", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2254", i8, %"class.base::UnguessableToken", %"class.absl::optional.2256", %"class.absl::optional.2261", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2104", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2837", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2104", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2851", %"class.blink::Member.2855", %"class.blink::Member.1664", %"class.blink::Member.2857", %"class.blink::Member.2859", %"class.blink::Member.2861", %"class.blink::Member.2863", %"class.blink::Member.2865", %"class.blink::HeapObserverSet.2867", %"class.blink::Member.2875", %"class.blink::Member.2877", %"class.blink::Member.2879", %"class.blink::Member.2881", %"class.blink::Member.2883", %"class.blink::Member.2885", %"class.blink::Member.2887", %"class.blink::Member.2889", %"class.blink::Member.2891", %"class.blink::Member.2893", %"class.blink::Member.2895", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2920", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2927", %"class.blink::Member.2106", %"class.blink::Member.2106", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2935", %"class.std::__1::unique_ptr.2941", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2837" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2838" }
%"class.blink::HeapHashMap.2838" = type { %"class.WTF::HashMap.2841" }
%"class.WTF::HashMap.2841" = type { %"class.WTF::HashTable.2842" }
%"class.WTF::HashTable.2842" = type <{ %"struct.WTF::KeyValuePair.2844"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2844" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2845" }
%"class.std::__1::unique_ptr.2845" = type { %"class.std::__1::__compressed_pair.2846" }
%"class.std::__1::__compressed_pair.2846" = type { %"struct.std::__1::__compressed_pair_elem.2847" }
%"struct.std::__1::__compressed_pair_elem.2847" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2851" = type { %"class.blink::MemberBase.2852" }
%"class.blink::MemberBase.2852" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2106", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2855" = type { %"class.blink::MemberBase.2856" }
%"class.blink::MemberBase.2856" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2857" = type { %"class.blink::MemberBase.2858" }
%"class.blink::MemberBase.2858" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2859" = type { %"class.blink::MemberBase.2860" }
%"class.blink::MemberBase.2860" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2861" = type { %"class.blink::MemberBase.2862" }
%"class.blink::MemberBase.2862" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2863" = type { %"class.blink::MemberBase.2864" }
%"class.blink::MemberBase.2864" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2865" = type { %"class.blink::MemberBase.2866" }
%"class.blink::MemberBase.2866" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2867" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2868" }
%"class.blink::HeapHashSet.2868" = type { %"class.WTF::HashSet.2871" }
%"class.WTF::HashSet.2871" = type { %"class.WTF::HashTable.2872" }
%"class.WTF::HashTable.2872" = type <{ %"class.blink::WeakMember.2874"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2874" = type opaque
%"class.blink::Member.2875" = type { %"class.blink::MemberBase.2876" }
%"class.blink::MemberBase.2876" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2877" = type { %"class.blink::MemberBase.2878" }
%"class.blink::MemberBase.2878" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2879" = type { %"class.blink::MemberBase.2880" }
%"class.blink::MemberBase.2880" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2881" = type { %"class.blink::MemberBase.2882" }
%"class.blink::MemberBase.2882" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2883" = type { %"class.blink::MemberBase.2884" }
%"class.blink::MemberBase.2884" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2885" = type { %"class.blink::MemberBase.2886" }
%"class.blink::MemberBase.2886" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2887" = type { %"class.blink::MemberBase.2888" }
%"class.blink::MemberBase.2888" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2889" = type { %"class.blink::MemberBase.2890" }
%"class.blink::MemberBase.2890" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2891" = type { %"class.blink::MemberBase.2892" }
%"class.blink::MemberBase.2892" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2893" = type { %"class.blink::MemberBase.2894" }
%"class.blink::MemberBase.2894" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2895" = type { %"class.blink::MemberBase.2896" }
%"class.blink::MemberBase.2896" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2897" }
%"class.WTF::Deque.2897" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2900" }
%"class.WTF::VectorBuffer.2900" = type { %"class.WTF::VectorBufferBase.2901" }
%"class.WTF::VectorBufferBase.2901" = type { %"class.std::__1::unique_ptr.2902"*, i32, i32 }
%"class.std::__1::unique_ptr.2902" = type { %"class.std::__1::__compressed_pair.2903" }
%"class.std::__1::__compressed_pair.2903" = type { %"struct.std::__1::__compressed_pair_elem.2904" }
%"struct.std::__1::__compressed_pair_elem.2904" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2908", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2908" = type { %"class.std::__1::__bitset.2909" }
%"class.std::__1::__bitset.2909" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2910" }
%"class.absl::optional.2910" = type { %"class.absl::optional_internal::optional_data.2911" }
%"class.absl::optional_internal::optional_data.2911" = type { %"class.absl::optional_internal::optional_data_base.2912" }
%"class.absl::optional_internal::optional_data_base.2912" = type { %"class.absl::optional_internal::optional_data_dtor_base.2913" }
%"class.absl::optional_internal::optional_data_dtor_base.2913" = type { i8, %union.anon.2914 }
%union.anon.2914 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2915", i64, %"class.absl::optional.1583", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2915" = type { %"class.absl::optional_internal::optional_data.2916" }
%"class.absl::optional_internal::optional_data.2916" = type { %"class.absl::optional_internal::optional_data_base.2917" }
%"class.absl::optional_internal::optional_data_base.2917" = type { %"class.absl::optional_internal::optional_data_dtor_base.2918" }
%"class.absl::optional_internal::optional_data_dtor_base.2918" = type { i8, %union.anon.2919 }
%union.anon.2919 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2920" = type { %"class.std::__1::unique_ptr.2921" }
%"class.std::__1::unique_ptr.2921" = type { %"class.std::__1::__compressed_pair.2922" }
%"class.std::__1::__compressed_pair.2922" = type { %"struct.std::__1::__compressed_pair_elem.2923" }
%"struct.std::__1::__compressed_pair_elem.2923" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2927" = type { %"class.WTF::HashSet.2930" }
%"class.WTF::HashSet.2930" = type { %"class.WTF::HashTable.2931" }
%"class.WTF::HashTable.2931" = type <{ %"class.blink::WeakMember.2933"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2933" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2934" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2934" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2935" = type { %"class.std::__1::__compressed_pair.2936" }
%"class.std::__1::__compressed_pair.2936" = type { %"struct.std::__1::__compressed_pair_elem.2937" }
%"struct.std::__1::__compressed_pair_elem.2937" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2941" = type { %"class.std::__1::__compressed_pair.2942" }
%"class.std::__1::__compressed_pair.2942" = type { %"struct.std::__1::__compressed_pair_elem.2943" }
%"struct.std::__1::__compressed_pair_elem.2943" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.2108" = type { %"class.blink::MemberBase.2109" }
%"class.blink::MemberBase.2109" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2104", %"class.blink::Member.2133", %"class.blink::Member.2135", %"class.blink::Member.2137", i8, %"class.WTF::Vector.2139" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2126" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2114" }
%"class.blink::HeapVector.2114" = type { %"class.WTF::Vector.2117" }
%"class.WTF::Vector.2117" = type { %"class.WTF::VectorBuffer.2118" }
%"class.WTF::VectorBuffer.2118" = type { %"class.WTF::VectorBufferBase.2119", [32 x i8] }
%"class.WTF::VectorBufferBase.2119" = type { %"struct.std::__1::pair.2120"*, i32, i32 }
%"struct.std::__1::pair.2120" = type { %"class.WTF::AtomicString", %"class.blink::Member.2121" }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::HeapVector.2123"* }
%"class.blink::HeapVector.2123" = type opaque
%"class.std::__1::unique_ptr.2126" = type { %"class.std::__1::__compressed_pair.2127" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.2128" }
%"struct.std::__1::__compressed_pair_elem.2128" = type { %"class.WTF::Vector.2129"* }
%"class.WTF::Vector.2129" = type opaque
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2139" = type { %"class.WTF::VectorBuffer.2140" }
%"class.WTF::VectorBuffer.2140" = type { %"class.WTF::VectorBufferBase.2141" }
%"class.WTF::VectorBufferBase.2141" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2235" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2142, %"class.std::__1::unique_ptr.1579", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1593, i32 }>
%class.scoped_refptr.2142 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1593, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2201", %"class.absl::optional.2206", %"class.absl::optional.2159", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2226", i8, [7 x i8], %class.scoped_refptr.1593, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1606" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1593, %"class.std::__1::unique_ptr.2143", %"class.absl::optional.2153", %"struct.std::__1::atomic.411", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2159", %"class.std::__1::unique_ptr.2164", i8, i64, %class.scoped_refptr.2198, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2199", %"class.base::WeakPtrFactory.2200" }
%"class.std::__1::unique_ptr.2143" = type { %"class.std::__1::__compressed_pair.2144" }
%"class.std::__1::__compressed_pair.2144" = type { %"struct.std::__1::__compressed_pair_elem.2145" }
%"struct.std::__1::__compressed_pair_elem.2145" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1593, i8, %"class.mojo::ScopedHandleBase.2146", %class.scoped_refptr.2147, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2148", i8*, %"class.base::WeakPtrFactory.2149" }
%"class.mojo::ScopedHandleBase.2146" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2147 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2148" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2149" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2153" = type { %"class.absl::optional_internal::optional_data.2154" }
%"class.absl::optional_internal::optional_data.2154" = type { %"class.absl::optional_internal::optional_data_base.2155" }
%"class.absl::optional_internal::optional_data_base.2155" = type { %"class.absl::optional_internal::optional_data_dtor_base.2156" }
%"class.absl::optional_internal::optional_data_dtor_base.2156" = type { i8, %union.anon.2157 }
%union.anon.2157 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2158", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2158" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2164" = type { %"class.std::__1::__compressed_pair.2165" }
%"class.std::__1::__compressed_pair.2165" = type { %"struct.std::__1::__compressed_pair_elem.2166" }
%"struct.std::__1::__compressed_pair_elem.2166" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2167", i8, i64, %class.scoped_refptr.2168, %class.scoped_refptr.2193 }
%"class.base::RepeatingCallback.2167" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2168 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2169", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2171", %"class.std::__1::map.2182", i8, [7 x i8] }>
%"class.base::RefCounted.2169" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2170 }
%class.scoped_refptr.2170 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2171" = type { %"class.std::__1::__tree.2172" }
%"class.std::__1::__tree.2172" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2173", %"class.std::__1::__compressed_pair.2177" }
%"class.std::__1::__compressed_pair.2173" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.2177" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.std::__1::map.2182" = type { %"class.std::__1::__tree.2183" }
%"class.std::__1::__tree.2183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2184", %"class.std::__1::__compressed_pair.2188" }
%"class.std::__1::__compressed_pair.2184" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.2188" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%class.scoped_refptr.2193 = type { %"class.base::RefCountedData.2194"* }
%"class.base::RefCountedData.2194" = type opaque
%class.scoped_refptr.2198 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2199" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2200" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2201" = type { %"class.absl::optional_internal::optional_data.2202" }
%"class.absl::optional_internal::optional_data.2202" = type { %"class.absl::optional_internal::optional_data_base.2203" }
%"class.absl::optional_internal::optional_data_base.2203" = type { %"class.absl::optional_internal::optional_data_dtor_base.2204" }
%"class.absl::optional_internal::optional_data_dtor_base.2204" = type { i8, %union.anon.2205 }
%union.anon.2205 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2206" = type { %"class.absl::optional_internal::optional_data.2207" }
%"class.absl::optional_internal::optional_data.2207" = type { %"class.absl::optional_internal::optional_data_base.2208" }
%"class.absl::optional_internal::optional_data_base.2208" = type { %"class.absl::optional_internal::optional_data_dtor_base.2209" }
%"class.absl::optional_internal::optional_data_dtor_base.2209" = type { i8, [7 x i8], %union.anon.2210 }
%union.anon.2210 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2159" = type { %"class.absl::optional_internal::optional_data.2160" }
%"class.absl::optional_internal::optional_data.2160" = type { %"class.absl::optional_internal::optional_data_base.2161" }
%"class.absl::optional_internal::optional_data_base.2161" = type { %"class.absl::optional_internal::optional_data_dtor_base.2162" }
%"class.absl::optional_internal::optional_data_dtor_base.2162" = type { i8, %union.anon.2163 }
%union.anon.2163 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2211 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2211 = type { %"class.std::__1::map.2214" }
%"class.std::__1::map.2214" = type { %"class.std::__1::__tree.2215" }
%"class.std::__1::__tree.2215" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2216", %"class.std::__1::__compressed_pair.2220" }
%"class.std::__1::__compressed_pair.2216" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.2220" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2225"*, i64 }
%"class.std::__1::unique_ptr.2225" = type opaque
%"class.std::__1::map.2226" = type { %"class.std::__1::__tree.2227" }
%"class.std::__1::__tree.2227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2228", %"class.std::__1::__compressed_pair.2232" }
%"class.std::__1::__compressed_pair.2228" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.2232" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2235" = type { %"class.std::__1::__compressed_pair.2236" }
%"class.std::__1::__compressed_pair.2236" = type { %"struct.std::__1::__compressed_pair_elem.2237" }
%"struct.std::__1::__compressed_pair_elem.2237" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2243" = type { %"class.blink::MemberBase.2244" }
%"class.blink::MemberBase.2244" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2104", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2245" }
%"class.base::internal::flat_tree.2245" = type { %"class.std::__1::vector.2246" }
%"class.std::__1::vector.2246" = type { %"class.std::__1::__vector_base.2247" }
%"class.std::__1::__vector_base.2247" = type { %"struct.std::__1::pair.2248"*, %"struct.std::__1::pair.2248"*, %"class.std::__1::__compressed_pair.2249" }
%"struct.std::__1::pair.2248" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"struct.std::__1::pair.2248"* }
%"class.blink::Member.2254" = type { %"class.blink::MemberBase.2255" }
%"class.blink::MemberBase.2255" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2256" = type { %"class.absl::optional_internal::optional_data.2257" }
%"class.absl::optional_internal::optional_data.2257" = type { %"class.absl::optional_internal::optional_data_base.2258" }
%"class.absl::optional_internal::optional_data_base.2258" = type { %"class.absl::optional_internal::optional_data_dtor_base.2259" }
%"class.absl::optional_internal::optional_data_dtor_base.2259" = type { i8, %union.anon.2260 }
%union.anon.2260 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2266" }
%"class.blink::HeapHashSet.2266" = type { %"class.WTF::HashSet.2269" }
%"class.WTF::HashSet.2269" = type { %"class.WTF::HashTable.2270" }
%"class.WTF::HashTable.2270" = type <{ %"class.blink::WeakMember.2272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2272" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2273" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2274" }
%"class.blink::HeapHashMap.2274" = type { %"class.WTF::HashMap.2277" }
%"class.WTF::HashMap.2277" = type { %"class.WTF::HashTable.2278" }
%"class.WTF::HashTable.2278" = type <{ %"struct.WTF::KeyValuePair.2280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2280" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2281" = type { %"class.std::__1::__compressed_pair.2282" }
%"class.std::__1::__compressed_pair.2282" = type { %"struct.std::__1::__compressed_pair_elem.2283" }
%"struct.std::__1::__compressed_pair_elem.2283" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2284", %"class.base::WeakPtrFactory.2289" }
%"class.WTF::HashMap.2284" = type { %"class.WTF::HashTable.2285" }
%"class.WTF::HashTable.2285" = type <{ %"struct.WTF::KeyValuePair.2288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2288" = type opaque
%"class.base::WeakPtrFactory.2289" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2293" }
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3055" }
%"class.blink::WeakMember.3055" = type { %"class.blink::MemberBase.3056" }
%"class.blink::MemberBase.3056" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3057", i64, %"class.std::__1::map.3058", i8*, i64, %"class.base::WeakPtrFactory.3067" }
%"class.base::RepeatingCallback.3057" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3058" = type { %"class.std::__1::__tree.3059" }
%"class.std::__1::__tree.3059" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3060", %"class.std::__1::__compressed_pair.3064" }
%"class.std::__1::__compressed_pair.3060" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"class.std::__1::__compressed_pair.3064" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.base::WeakPtrFactory.3067" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2295" = type { %"class.WTF::HashSet.2298" }
%"class.WTF::HashSet.2298" = type { %"class.WTF::HashTable.2299" }
%"class.WTF::HashTable.2299" = type <{ %"class.blink::WeakMember.2301"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2301" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1727", %"class.blink::Member.2302", %"class.blink::Member.2304", %"class.std::__1::unique_ptr.2306", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2312" }
%"class.blink::Member.2302" = type { %"class.blink::MemberBase.2303" }
%"class.blink::MemberBase.2303" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2304" = type { %"class.blink::MemberBase.2305" }
%"class.blink::MemberBase.2305" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2312" = type { %"class.WTF::HashTable.2313" }
%"class.WTF::HashTable.2313" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.1731" }
%"class.blink::MemberBase.1731" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2317" = type { %"class.blink::MemberBase.2318" }
%"class.blink::MemberBase.2318" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type { %"class.blink::Member.1727", %"class.blink::Member.2716", %"class.blink::HeapTaskRunnerTimer.2718", %"class.blink::HeapTaskRunnerTimer.2718", %"class.blink::Member.26", %"class.blink::Member.26", i8, %"class.blink::Member.1727", %"class.blink::Member.1913", %"class.blink::Member.5", i8, %"class.blink::Member.2720", %"class.blink::Member.2722", %"class.blink::Member.2724", %"class.blink::Member.2746", %"class.blink::Member.2750", %"class.blink::Member.2754", %"class.blink::Member.2758", %"class.blink::Member.2811", double, %"class.blink::HeapTaskRunnerTimer.2718", %"class.absl::optional.1685", %"class.blink::Member.26", i8, %"struct.blink::TouchAdjustmentResult" }
%"class.blink::Member.2716" = type { %"class.blink::MemberBase.2717" }
%"class.blink::MemberBase.2717" = type { %"class.blink::SelectionController"* }
%"class.blink::SelectionController" = type opaque
%"class.blink::Member.1913" = type { %"class.blink::MemberBase.1914" }
%"class.blink::Member.2720" = type { %"class.blink::MemberBase.2721" }
%"class.blink::MemberBase.2721" = type { %"class.blink::HTMLFrameSetElement"* }
%"class.blink::HTMLFrameSetElement" = type opaque
%"class.blink::Member.2722" = type { %"class.blink::MemberBase.2723" }
%"class.blink::MemberBase.2723" = type { %"class.blink::EventHandlerRegistry"* }
%"class.blink::EventHandlerRegistry" = type opaque
%"class.blink::Member.2724" = type { %"class.blink::MemberBase.2725" }
%"class.blink::MemberBase.2725" = type { %"class.blink::ScrollManager"* }
%"class.blink::ScrollManager" = type { %"class.cc::SnapFlingClient", %"class.blink::Member.1727", %"class.WTF::Deque.2728", %"class.blink::Member.5", i8, %"class.blink::Member.5", %"class.blink::FloatSize", i8, i8, i8, %"class.blink::Member.1913", %"class.blink::Member.2732", %"class.std::__1::unique_ptr.2734", %"class.blink::LayoutSize" }
%"class.cc::SnapFlingClient" = type { i32 (...)** }
%"class.WTF::Deque.2728" = type { %"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2731" }
%"class.WTF::VectorBuffer.2731" = type { %"class.WTF::VectorBufferBase.2007" }
%"class.WTF::VectorBufferBase.2007" = type { i32*, i32, i32 }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2817", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2830" }
%"class.blink::PaintLayer" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2732", %"class.blink::Member.1913", %"class.blink::Member.1913", i8, [7 x i8] }>
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2090", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.534, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1749" }
%"class.blink::MemberBase.1749" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1750" }
%"class.std::__1::unique_ptr.1750" = type { %"class.std::__1::__compressed_pair.1751" }
%"class.std::__1::__compressed_pair.1751" = type { %"struct.std::__1::__compressed_pair_elem.1752" }
%"struct.std::__1::__compressed_pair_elem.1752" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1753", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1759", %"class.std::__1::unique_ptr.1875", i8, %"class.absl::optional.1881", %class.scoped_refptr.1857, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1886" }
%"class.std::__1::unique_ptr.1753" = type { %"class.std::__1::__compressed_pair.1754" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"class.blink::PaintLayer"* }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1762, %class.scoped_refptr.1762, %class.scoped_refptr.1762, %class.scoped_refptr.1762, %class.scoped_refptr.1762, %class.scoped_refptr.1762, %class.scoped_refptr.1797, %class.scoped_refptr.1813, %class.scoped_refptr.1814, %class.scoped_refptr.1814, %class.scoped_refptr.1814, %class.scoped_refptr.1814, %class.scoped_refptr.1814, %class.scoped_refptr.1814, %class.scoped_refptr.1847, %class.scoped_refptr.1848, %class.scoped_refptr.1848, %class.scoped_refptr.1848, %class.scoped_refptr.1848, %class.scoped_refptr.1848, %class.scoped_refptr.1848, %class.scoped_refptr.1848, %class.scoped_refptr.1848, %class.scoped_refptr.1871 }
%class.scoped_refptr.1762 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1779" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1763", i8, i8, %class.scoped_refptr.1765, i32, i32 }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1765 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1772, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1773", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1766" }
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1772 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1798", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1798" = type { %"class.WTF::RefCounted.1799", i8, i8, %class.scoped_refptr.1772, i32, i32 }
%"class.WTF::RefCounted.1799" = type { %"class.base::RefCounted.1800" }
%"class.base::RefCounted.1800" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1801" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1801" = type { %"class.absl::optional_internal::optional_data.1802" }
%"class.absl::optional_internal::optional_data.1802" = type { %"class.absl::optional_internal::optional_data_base.1803" }
%"class.absl::optional_internal::optional_data_base.1803" = type { %"class.absl::optional_internal::optional_data_dtor_base.1804" }
%"class.absl::optional_internal::optional_data_dtor_base.1804" = type { i8, %union.anon.1805 }
%union.anon.1805 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1806", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1806" = type { %"class.std::__1::__vector_base.1807" }
%"class.std::__1::__vector_base.1807" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1808" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1773" = type { %"class.std::__1::__compressed_pair.1774" }
%"class.std::__1::__compressed_pair.1774" = type { %"struct.std::__1::__compressed_pair_elem.1775" }
%"struct.std::__1::__compressed_pair_elem.1775" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1779" = type { %"class.std::__1::__compressed_pair.1780" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.1781" }
%"struct.std::__1::__compressed_pair_elem.1781" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1782", %"class.std::__1::unique_ptr.1788", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1782" = type { %"class.std::__1::__compressed_pair.1783" }
%"class.std::__1::__compressed_pair.1783" = type { %"struct.std::__1::__compressed_pair_elem.1784" }
%"struct.std::__1::__compressed_pair_elem.1784" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1788" = type { %"class.std::__1::__compressed_pair.1789" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1790" }
%"struct.std::__1::__compressed_pair_elem.1790" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1797 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1813 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1814 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1815" }
%"class.blink::PaintPropertyNode.1815" = type { %"class.WTF::RefCounted.1816", i8, i8, %class.scoped_refptr.1818, i32, i32 }
%"class.WTF::RefCounted.1816" = type { %"class.base::RefCounted.1817" }
%"class.base::RefCounted.1817" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1818 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1765, %class.scoped_refptr.1819, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1834", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1819 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1849" }
%"class.blink::PaintPropertyNode.1849" = type { %"class.WTF::RefCounted.1850", i8, i8, %class.scoped_refptr.1819, i32, i32 }
%"class.WTF::RefCounted.1850" = type { %"class.base::RefCounted.1851" }
%"class.base::RefCounted.1851" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1820" }
%"class.std::__1::vector.1820" = type { %"class.std::__1::__vector_base.1821" }
%"class.std::__1::__vector_base.1821" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1829" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1432, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1822", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.1822" = type { %"class.std::__1::__vector_base.1823" }
%"class.std::__1::__vector_base.1823" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1824" }
%"class.std::__1::__compressed_pair.1824" = type { %"struct.std::__1::__compressed_pair_elem.1825" }
%"struct.std::__1::__compressed_pair_elem.1825" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1834" = type { %"class.std::__1::__compressed_pair.1835" }
%"class.std::__1::__compressed_pair.1835" = type { %"struct.std::__1::__compressed_pair_elem.1836" }
%"struct.std::__1::__compressed_pair_elem.1836" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1840" }
%"class.std::__1::vector.1840" = type { %"class.std::__1::__vector_base.1841" }
%"class.std::__1::__vector_base.1841" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1842" }
%"class.std::__1::__compressed_pair.1842" = type { %"struct.std::__1::__compressed_pair_elem.1843" }
%"struct.std::__1::__compressed_pair_elem.1843" = type { i32* }
%class.scoped_refptr.1847 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1848 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1860" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1765, %"class.absl::optional.1852", %class.scoped_refptr.1857, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1852" = type { %"class.absl::optional_internal::optional_data.1853" }
%"class.absl::optional_internal::optional_data.1853" = type { %"class.absl::optional_internal::optional_data_base.1854" }
%"class.absl::optional_internal::optional_data_base.1854" = type { %"class.absl::optional_internal::optional_data_dtor_base.1855" }
%"class.absl::optional_internal::optional_data_dtor_base.1855" = type { i8, [3 x i8], %union.anon.1856 }
%union.anon.1856 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1860" = type { %"class.std::__1::__compressed_pair.1861" }
%"class.std::__1::__compressed_pair.1861" = type { %"struct.std::__1::__compressed_pair_elem.1862" }
%"struct.std::__1::__compressed_pair_elem.1862" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1863", i32, [4 x i8] }>
%"class.WTF::Vector.1863" = type { %"class.WTF::VectorBuffer.1864" }
%"class.WTF::VectorBuffer.1864" = type { %"class.WTF::VectorBufferBase.1865" }
%"class.WTF::VectorBufferBase.1865" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1871 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1875" = type { %"class.std::__1::__compressed_pair.1876" }
%"class.std::__1::__compressed_pair.1876" = type { %"struct.std::__1::__compressed_pair_elem.1877" }
%"struct.std::__1::__compressed_pair_elem.1877" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1765, %class.scoped_refptr.1819, %class.scoped_refptr.1818 }
%"class.absl::optional.1881" = type { %"class.absl::optional_internal::optional_data.1882" }
%"class.absl::optional_internal::optional_data.1882" = type { %"class.absl::optional_internal::optional_data_base.1883" }
%"class.absl::optional_internal::optional_data_base.1883" = type { %"class.absl::optional_internal::optional_data_dtor_base.1884" }
%"class.absl::optional_internal::optional_data_dtor_base.1884" = type { i8, %union.anon.1885 }
%union.anon.1885 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1857 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1858", [4 x i8] }
%"class.WTF::RefCounted.1858" = type { %"class.base::RefCounted.1859" }
%"class.base::RefCounted.1859" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2817" = type { %"class.std::__1::__compressed_pair.2818" }
%"class.std::__1::__compressed_pair.2818" = type { %"struct.std::__1::__compressed_pair_elem.2819" }
%"struct.std::__1::__compressed_pair_elem.2819" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2820", %"class.absl::optional.1801", i8, i8, %"class.WTF::Vector.1979" }
%"class.WTF::HashMap.2820" = type { %"class.WTF::HashTable.2821" }
%"class.WTF::HashTable.2821" = type <{ %"struct.WTF::KeyValuePair.2824"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2824" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.WTF::Vector.1979" = type { %"class.WTF::VectorBuffer.1980" }
%"class.WTF::VectorBuffer.1980" = type { %"class.WTF::VectorBufferBase.1981" }
%"class.WTF::VectorBufferBase.1981" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2828" }
%"class.blink::Member.2828" = type { %"class.blink::MemberBase.2829" }
%"class.blink::MemberBase.2829" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2828" }
%"class.absl::optional.2830" = type { %"class.absl::optional_internal::optional_data.2831" }
%"class.absl::optional_internal::optional_data.2831" = type { %"class.absl::optional_internal::optional_data_base.2832" }
%"class.absl::optional_internal::optional_data_base.2832" = type { %"class.absl::optional_internal::optional_data_dtor_base.2833" }
%"class.absl::optional_internal::optional_data_dtor_base.2833" = type { i8, %union.anon.2834 }
%union.anon.2834 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.2734" = type { %"class.std::__1::__compressed_pair.2735" }
%"class.std::__1::__compressed_pair.2735" = type { %"struct.std::__1::__compressed_pair_elem.2736" }
%"struct.std::__1::__compressed_pair_elem.2736" = type { %"class.cc::SnapFlingController"* }
%"class.cc::SnapFlingController" = type { %"class.cc::SnapFlingClient"*, i32, %"class.std::__1::unique_ptr.2737" }
%"class.std::__1::unique_ptr.2737" = type { %"class.std::__1::__compressed_pair.2738" }
%"class.std::__1::__compressed_pair.2738" = type { %"struct.std::__1::__compressed_pair_elem.2739" }
%"struct.std::__1::__compressed_pair_elem.2739" = type { %"class.cc::SnapFlingCurve"* }
%"class.cc::SnapFlingCurve" = type opaque
%"class.blink::Member.2746" = type { %"class.blink::MemberBase.2747" }
%"class.blink::MemberBase.2747" = type { %"class.blink::MouseEventManager"* }
%"class.blink::MouseEventManager" = type <{ %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1727", %"class.blink::Member.2724", %"class.blink::Member.26", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, [7 x i8], %"class.blink::Member.5", i32, [4 x i8], %"class.blink::Member.26", %"class.blink::Member.26", %"class.blink::IntPoint", %"class.base::TimeTicks", %"class.blink::WebMouseEvent", %"struct.blink::PhysicalOffset", i8, [7 x i8] }>
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.426" }
%"class.blink::WebMouseEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32, [4 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.blink::Member.2750" = type { %"class.blink::MemberBase.2751" }
%"class.blink::MemberBase.2751" = type { %"class.blink::MouseWheelEventManager"* }
%"class.blink::MouseWheelEventManager" = type { %"class.blink::Member.1727", %"class.blink::Member.5", %"class.blink::Member.2724" }
%"class.blink::Member.2754" = type { %"class.blink::MemberBase.2755" }
%"class.blink::MemberBase.2755" = type { %"class.blink::KeyboardEventManager"* }
%"class.blink::KeyboardEventManager" = type { %"class.blink::Member.1727", %"class.blink::Member.2724" }
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::PointerEventManager"* }
%"class.blink::PointerEventManager" = type { %"class.blink::Member.1727", [5 x i8], i8, %"class.WTF::Deque.2762", %"class.blink::HeapHashMap.2766", %"class.blink::HeapHashMap.2773", %"class.blink::HeapHashMap.2773", %"class.blink::PointerEventFactory", %"class.blink::Member.2795", %"class.blink::Member.2746", i32, i8, i8, %"class.blink::Member.2811" }
%"class.WTF::Deque.2762" = type { %"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2765" }
%"class.WTF::VectorBuffer.2765" = type { %"class.WTF::VectorBufferBase.979" }
%"class.blink::HeapHashMap.2766" = type { %"class.WTF::HashMap.2769" }
%"class.WTF::HashMap.2769" = type { %"class.WTF::HashTable.2770" }
%"class.WTF::HashTable.2770" = type <{ %"struct.WTF::KeyValuePair.2772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2772" = type opaque
%"class.blink::HeapHashMap.2773" = type { %"class.WTF::HashMap.2776" }
%"class.WTF::HashMap.2776" = type { %"class.WTF::HashTable.2777" }
%"class.WTF::HashTable.2777" = type <{ %"struct.WTF::KeyValuePair.2779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2779" = type opaque
%"class.blink::PointerEventFactory" = type { i32, [4 x i8], %"class.WTF::HashMap.2780", %"class.WTF::HashMap.2785", [5 x i32], [5 x i32], %"class.WTF::HashMap.2790", %"class.WTF::HashMap.2790" }
%"class.WTF::HashMap.2780" = type { %"class.WTF::HashTable.2781" }
%"class.WTF::HashTable.2781" = type <{ %"struct.WTF::KeyValuePair.2784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2784" = type opaque
%"class.WTF::HashMap.2785" = type { %"class.WTF::HashTable.2786" }
%"class.WTF::HashTable.2786" = type <{ %"struct.WTF::KeyValuePair.2789"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2789" = type opaque
%"class.WTF::HashMap.2790" = type { %"class.WTF::HashTable.2791" }
%"class.WTF::HashTable.2791" = type <{ %"struct.WTF::KeyValuePair.2794"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2794" = type opaque
%"class.blink::Member.2795" = type { %"class.blink::MemberBase.2796" }
%"class.blink::MemberBase.2796" = type { %"class.blink::TouchEventManager"* }
%"class.blink::TouchEventManager" = type { %"class.blink::Member.1727", %"class.blink::HeapHashMap.2799", %"class.blink::Member.13", i8, %"class.blink::WebTouchEvent", i32, i8, %"class.absl::optional.2806" }
%"class.blink::HeapHashMap.2799" = type { %"class.WTF::HashMap.2802" }
%"class.WTF::HashMap.2802" = type { %"class.WTF::HashTable.2803" }
%"class.WTF::HashTable.2803" = type <{ %"struct.WTF::KeyValuePair.2805"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2805" = type opaque
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.absl::optional.2806" = type { %"class.absl::optional_internal::optional_data.2807" }
%"class.absl::optional_internal::optional_data.2807" = type { %"class.absl::optional_internal::optional_data_base.2808" }
%"class.absl::optional_internal::optional_data_base.2808" = type { %"class.absl::optional_internal::optional_data_dtor_base.2809" }
%"class.absl::optional_internal::optional_data_dtor_base.2809" = type { i8, %union.anon.2810 }
%union.anon.2810 = type { i32 }
%"class.blink::Member.2811" = type { %"class.blink::MemberBase.2812" }
%"class.blink::MemberBase.2812" = type { %"class.blink::GestureManager"* }
%"class.blink::GestureManager" = type { %"class.blink::Member.1727", %"class.blink::Member.2724", %"class.blink::Member.2746", %"class.blink::Member.2758", i8, i8, %"class.gfx::PointF", i32, %"class.blink::Member.2716" }
%"class.blink::HeapTaskRunnerTimer.2718" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2719", { i64, i64 } }
%"class.blink::WeakMember.2719" = type { %"class.blink::MemberBase.2322" }
%"struct.blink::TouchAdjustmentResult" = type { i32, %"class.blink::FloatPoint" }
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2325" = type { %"class.blink::MemberBase.2326" }
%"class.blink::MemberBase.2326" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2329", %"class.blink::HeapListHashSet.2340", %"class.blink::HeapListHashSet.2351", %"class.blink::HeapListHashSet.2362", %"class.blink::HeapListHashSet.2373", %"class.blink::HeapListHashSet.2384", %"class.blink::HeapListHashSet.2395", %"class.blink::HeapListHashSet.2406", %"class.blink::HeapListHashSet.2417", %"class.blink::HeapListHashSet.2428", %"class.blink::HeapListHashSet.2439", %"class.blink::HeapListHashSet.2450", %"class.blink::HeapListHashSet.2461", %"class.blink::HeapListHashSet.2472", %"class.blink::HeapListHashSet.2483", %"class.blink::HeapListHashSet.2494", %"class.blink::HeapListHashSet.2505", %"class.blink::HeapListHashSet.2516", %"class.blink::HeapListHashSet.2527", %"class.blink::HeapListHashSet.2538" }
%"class.blink::HeapListHashSet.2329" = type { %"class.WTF::ListHashSet.base.2339", [7 x i8] }
%"class.WTF::ListHashSet.base.2339" = type <{ %"class.WTF::HashTable.2334", %"class.blink::Member.2336", %"class.blink::Member.2336", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2334" = type <{ %"class.blink::Member.2336"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::HeapListHashSetNode.2338"* }
%"class.blink::HeapListHashSetNode.2338" = type { %"class.blink::Member.2552", %"class.blink::Member.2336", %"class.blink::Member.2336" }
%"class.blink::HeapListHashSet.2340" = type { %"class.WTF::ListHashSet.base.2350", [7 x i8] }
%"class.WTF::ListHashSet.base.2350" = type <{ %"class.WTF::HashTable.2345", %"class.blink::Member.2347", %"class.blink::Member.2347", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2345" = type <{ %"class.blink::Member.2347"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2347" = type { %"class.blink::MemberBase.2348" }
%"class.blink::MemberBase.2348" = type { %"class.blink::HeapListHashSetNode.2349"* }
%"class.blink::HeapListHashSetNode.2349" = type { %"class.blink::Member.2710", %"class.blink::Member.2347", %"class.blink::Member.2347" }
%"class.blink::Member.2710" = type { %"class.blink::MemberBase.2711" }
%"class.blink::MemberBase.2711" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2351" = type { %"class.WTF::ListHashSet.base.2361", [7 x i8] }
%"class.WTF::ListHashSet.base.2361" = type <{ %"class.WTF::HashTable.2356", %"class.blink::Member.2358", %"class.blink::Member.2358", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2356" = type <{ %"class.blink::Member.2358"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::HeapListHashSetNode.2360"* }
%"class.blink::HeapListHashSetNode.2360" = type { %"class.blink::Member.2706", %"class.blink::Member.2358", %"class.blink::Member.2358" }
%"class.blink::Member.2706" = type { %"class.blink::MemberBase.2707" }
%"class.blink::MemberBase.2707" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2362" = type { %"class.WTF::ListHashSet.base.2372", [7 x i8] }
%"class.WTF::ListHashSet.base.2372" = type <{ %"class.WTF::HashTable.2367", %"class.blink::Member.2369", %"class.blink::Member.2369", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2367" = type <{ %"class.blink::Member.2369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2369" = type { %"class.blink::MemberBase.2370" }
%"class.blink::MemberBase.2370" = type { %"class.blink::HeapListHashSetNode.2371"* }
%"class.blink::HeapListHashSetNode.2371" = type { %"class.blink::Member.2702", %"class.blink::Member.2369", %"class.blink::Member.2369" }
%"class.blink::Member.2702" = type { %"class.blink::MemberBase.2703" }
%"class.blink::MemberBase.2703" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2373" = type { %"class.WTF::ListHashSet.base.2383", [7 x i8] }
%"class.WTF::ListHashSet.base.2383" = type <{ %"class.WTF::HashTable.2378", %"class.blink::Member.2380", %"class.blink::Member.2380", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2378" = type <{ %"class.blink::Member.2380"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2380" = type { %"class.blink::MemberBase.2381" }
%"class.blink::MemberBase.2381" = type { %"class.blink::HeapListHashSetNode.2382"* }
%"class.blink::HeapListHashSetNode.2382" = type { %"class.blink::Member.2698", %"class.blink::Member.2380", %"class.blink::Member.2380" }
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2384" = type { %"class.WTF::ListHashSet.base.2394", [7 x i8] }
%"class.WTF::ListHashSet.base.2394" = type <{ %"class.WTF::HashTable.2389", %"class.blink::Member.2391", %"class.blink::Member.2391", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2389" = type <{ %"class.blink::Member.2391"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2391" = type { %"class.blink::MemberBase.2392" }
%"class.blink::MemberBase.2392" = type { %"class.blink::HeapListHashSetNode.2393"* }
%"class.blink::HeapListHashSetNode.2393" = type { %"class.blink::Member.2694", %"class.blink::Member.2391", %"class.blink::Member.2391" }
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2395" = type { %"class.WTF::ListHashSet.base.2405", [7 x i8] }
%"class.WTF::ListHashSet.base.2405" = type <{ %"class.WTF::HashTable.2400", %"class.blink::Member.2402", %"class.blink::Member.2402", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2400" = type <{ %"class.blink::Member.2402"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::HeapListHashSetNode.2404"* }
%"class.blink::HeapListHashSetNode.2404" = type { %"class.blink::Member.2690", %"class.blink::Member.2402", %"class.blink::Member.2402" }
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2406" = type { %"class.WTF::ListHashSet.base.2416", [7 x i8] }
%"class.WTF::ListHashSet.base.2416" = type <{ %"class.WTF::HashTable.2411", %"class.blink::Member.2413", %"class.blink::Member.2413", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2411" = type <{ %"class.blink::Member.2413"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2413" = type { %"class.blink::MemberBase.2414" }
%"class.blink::MemberBase.2414" = type { %"class.blink::HeapListHashSetNode.2415"* }
%"class.blink::HeapListHashSetNode.2415" = type { %"class.blink::Member.2686", %"class.blink::Member.2413", %"class.blink::Member.2413" }
%"class.blink::Member.2686" = type { %"class.blink::MemberBase.2687" }
%"class.blink::MemberBase.2687" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2417" = type { %"class.WTF::ListHashSet.base.2427", [7 x i8] }
%"class.WTF::ListHashSet.base.2427" = type <{ %"class.WTF::HashTable.2422", %"class.blink::Member.2424", %"class.blink::Member.2424", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2422" = type <{ %"class.blink::Member.2424"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2424" = type { %"class.blink::MemberBase.2425" }
%"class.blink::MemberBase.2425" = type { %"class.blink::HeapListHashSetNode.2426"* }
%"class.blink::HeapListHashSetNode.2426" = type { %"class.blink::Member.2682", %"class.blink::Member.2424", %"class.blink::Member.2424" }
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2428" = type { %"class.WTF::ListHashSet.base.2438", [7 x i8] }
%"class.WTF::ListHashSet.base.2438" = type <{ %"class.WTF::HashTable.2433", %"class.blink::Member.2435", %"class.blink::Member.2435", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2433" = type <{ %"class.blink::Member.2435"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2435" = type { %"class.blink::MemberBase.2436" }
%"class.blink::MemberBase.2436" = type { %"class.blink::HeapListHashSetNode.2437"* }
%"class.blink::HeapListHashSetNode.2437" = type { %"class.blink::Member.2678", %"class.blink::Member.2435", %"class.blink::Member.2435" }
%"class.blink::Member.2678" = type { %"class.blink::MemberBase.2679" }
%"class.blink::MemberBase.2679" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2439" = type { %"class.WTF::ListHashSet.base.2449", [7 x i8] }
%"class.WTF::ListHashSet.base.2449" = type <{ %"class.WTF::HashTable.2444", %"class.blink::Member.2446", %"class.blink::Member.2446", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2444" = type <{ %"class.blink::Member.2446"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2446" = type { %"class.blink::MemberBase.2447" }
%"class.blink::MemberBase.2447" = type { %"class.blink::HeapListHashSetNode.2448"* }
%"class.blink::HeapListHashSetNode.2448" = type { %"class.blink::Member.2556", %"class.blink::Member.2446", %"class.blink::Member.2446" }
%"class.blink::HeapListHashSet.2450" = type { %"class.WTF::ListHashSet.base.2460", [7 x i8] }
%"class.WTF::ListHashSet.base.2460" = type <{ %"class.WTF::HashTable.2455", %"class.blink::Member.2457", %"class.blink::Member.2457", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2455" = type <{ %"class.blink::Member.2457"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2457" = type { %"class.blink::MemberBase.2458" }
%"class.blink::MemberBase.2458" = type { %"class.blink::HeapListHashSetNode.2459"* }
%"class.blink::HeapListHashSetNode.2459" = type { %"class.blink::Member.2672", %"class.blink::Member.2457", %"class.blink::Member.2457" }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2461" = type { %"class.WTF::ListHashSet.base.2471", [7 x i8] }
%"class.WTF::ListHashSet.base.2471" = type <{ %"class.WTF::HashTable.2466", %"class.blink::Member.2468", %"class.blink::Member.2468", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2466" = type <{ %"class.blink::Member.2468"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2468" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::HeapListHashSetNode.2470"* }
%"class.blink::HeapListHashSetNode.2470" = type { %"class.blink::Member.2668", %"class.blink::Member.2468", %"class.blink::Member.2468" }
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2472" = type { %"class.WTF::ListHashSet.base.2482", [7 x i8] }
%"class.WTF::ListHashSet.base.2482" = type <{ %"class.WTF::HashTable.2477", %"class.blink::Member.2479", %"class.blink::Member.2479", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2477" = type <{ %"class.blink::Member.2479"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2479" = type { %"class.blink::MemberBase.2480" }
%"class.blink::MemberBase.2480" = type { %"class.blink::HeapListHashSetNode.2481"* }
%"class.blink::HeapListHashSetNode.2481" = type { %"class.blink::Member.2664", %"class.blink::Member.2479", %"class.blink::Member.2479" }
%"class.blink::Member.2664" = type { %"class.blink::MemberBase.2665" }
%"class.blink::MemberBase.2665" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2483" = type { %"class.WTF::ListHashSet.base.2493", [7 x i8] }
%"class.WTF::ListHashSet.base.2493" = type <{ %"class.WTF::HashTable.2488", %"class.blink::Member.2490", %"class.blink::Member.2490", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2488" = type <{ %"class.blink::Member.2490"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2490" = type { %"class.blink::MemberBase.2491" }
%"class.blink::MemberBase.2491" = type { %"class.blink::HeapListHashSetNode.2492"* }
%"class.blink::HeapListHashSetNode.2492" = type { %"class.blink::Member.2660", %"class.blink::Member.2490", %"class.blink::Member.2490" }
%"class.blink::Member.2660" = type { %"class.blink::MemberBase.2661" }
%"class.blink::MemberBase.2661" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2494" = type { %"class.WTF::ListHashSet.base.2504", [7 x i8] }
%"class.WTF::ListHashSet.base.2504" = type <{ %"class.WTF::HashTable.2499", %"class.blink::Member.2501", %"class.blink::Member.2501", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2499" = type <{ %"class.blink::Member.2501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2501" = type { %"class.blink::MemberBase.2502" }
%"class.blink::MemberBase.2502" = type { %"class.blink::HeapListHashSetNode.2503"* }
%"class.blink::HeapListHashSetNode.2503" = type { %"class.blink::Member.2656", %"class.blink::Member.2501", %"class.blink::Member.2501" }
%"class.blink::Member.2656" = type { %"class.blink::MemberBase.2657" }
%"class.blink::MemberBase.2657" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2505" = type { %"class.WTF::ListHashSet.base.2515", [7 x i8] }
%"class.WTF::ListHashSet.base.2515" = type <{ %"class.WTF::HashTable.2510", %"class.blink::Member.2512", %"class.blink::Member.2512", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2510" = type <{ %"class.blink::Member.2512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::HeapListHashSetNode.2514"* }
%"class.blink::HeapListHashSetNode.2514" = type { %"class.blink::Member.2652", %"class.blink::Member.2512", %"class.blink::Member.2512" }
%"class.blink::Member.2652" = type { %"class.blink::MemberBase.2653" }
%"class.blink::MemberBase.2653" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2516" = type { %"class.WTF::ListHashSet.base.2526", [7 x i8] }
%"class.WTF::ListHashSet.base.2526" = type <{ %"class.WTF::HashTable.2521", %"class.blink::Member.2523", %"class.blink::Member.2523", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2521" = type <{ %"class.blink::Member.2523"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2523" = type { %"class.blink::MemberBase.2524" }
%"class.blink::MemberBase.2524" = type { %"class.blink::HeapListHashSetNode.2525"* }
%"class.blink::HeapListHashSetNode.2525" = type { %"class.blink::Member.2648", %"class.blink::Member.2523", %"class.blink::Member.2523" }
%"class.blink::Member.2648" = type { %"class.blink::MemberBase.2649" }
%"class.blink::MemberBase.2649" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2527" = type { %"class.WTF::ListHashSet.base.2537", [7 x i8] }
%"class.WTF::ListHashSet.base.2537" = type <{ %"class.WTF::HashTable.2532", %"class.blink::Member.2534", %"class.blink::Member.2534", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2532" = type <{ %"class.blink::Member.2534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2534" = type { %"class.blink::MemberBase.2535" }
%"class.blink::MemberBase.2535" = type { %"class.blink::HeapListHashSetNode.2536"* }
%"class.blink::HeapListHashSetNode.2536" = type { %"class.blink::Member.2558", %"class.blink::Member.2534", %"class.blink::Member.2534" }
%"class.blink::HeapListHashSet.2538" = type { %"class.WTF::ListHashSet.base.2548", [7 x i8] }
%"class.WTF::ListHashSet.base.2548" = type <{ %"class.WTF::HashTable.2543", %"class.blink::Member.2545", %"class.blink::Member.2545", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2543" = type <{ %"class.blink::Member.2545"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2545" = type { %"class.blink::MemberBase.2546" }
%"class.blink::MemberBase.2546" = type { %"class.blink::HeapListHashSetNode.2547"* }
%"class.blink::HeapListHashSetNode.2547" = type { %"class.blink::Member.2550", %"class.blink::Member.2545", %"class.blink::Member.2545" }
%class.scoped_refptr.2549 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2550" = type { %"class.blink::MemberBase.2551" }
%"class.blink::MemberBase.2551" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2552" = type { %"class.blink::MemberBase.2553" }
%"class.blink::MemberBase.2553" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2554" = type { %"class.blink::MemberBase.2555" }
%"class.blink::MemberBase.2555" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2556" = type { %"class.blink::MemberBase.2557" }
%"class.blink::MemberBase.2557" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2558" = type { %"class.blink::MemberBase.2559" }
%"class.blink::MemberBase.2559" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2562" = type { %"class.blink::MemberBase.2563" }
%"class.blink::MemberBase.2563" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2564" = type { %"class.blink::MemberBase.2565" }
%"class.blink::MemberBase.2565" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2566" }
%"class.blink::Member.2566" = type { %"class.blink::MemberBase.2567" }
%"class.blink::MemberBase.2567" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3070" }
%"class.mojo::Remote.3070" = type { %"class.mojo::internal::InterfacePtrState.3071" }
%"class.mojo::internal::InterfacePtrState.3071" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3072" }
%"class.std::__1::unique_ptr.3072" = type { %"class.std::__1::__compressed_pair.3073" }
%"class.std::__1::__compressed_pair.3073" = type { %"struct.std::__1::__compressed_pair_elem.3074" }
%"struct.std::__1::__compressed_pair_elem.3074" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2568" = type { %"class.std::__1::__compressed_pair.2569" }
%"class.std::__1::__compressed_pair.2569" = type { %"struct.std::__1::__compressed_pair_elem.2570" }
%"struct.std::__1::__compressed_pair_elem.2570" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2571, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2571 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2572", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2572" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2573" }
%"class.std::__1::vector.2573" = type { %"class.std::__1::__vector_base.2574" }
%"class.std::__1::__vector_base.2574" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2575" }
%"class.std::__1::__compressed_pair.2575" = type { %"struct.std::__1::__compressed_pair_elem.2576" }
%"struct.std::__1::__compressed_pair_elem.2576" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2580, i8, [7 x i8] }>
%class.scoped_refptr.2580 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2581", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2581" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2582" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2582" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2589" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2590" = type { %"class.std::__1::__compressed_pair.2591" }
%"class.std::__1::__compressed_pair.2591" = type { %"struct.std::__1::__compressed_pair_elem.2592" }
%"struct.std::__1::__compressed_pair_elem.2592" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2261" = type { %"class.absl::optional_internal::optional_data.2262" }
%"class.absl::optional_internal::optional_data.2262" = type { %"class.absl::optional_internal::optional_data_base.2263" }
%"class.absl::optional_internal::optional_data_base.2263" = type { %"class.absl::optional_internal::optional_data_dtor_base.2264" }
%"class.absl::optional_internal::optional_data_dtor_base.2264" = type { i8, %union.anon.2265 }
%union.anon.2265 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2596" = type { %"class.std::__1::__compressed_pair.2597" }
%"class.std::__1::__compressed_pair.2597" = type { %"struct.std::__1::__compressed_pair_elem.2598" }
%"struct.std::__1::__compressed_pair_elem.2598" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2602" }
%"class.blink::Member.2602" = type { %"class.blink::MemberBase.2603" }
%"class.blink::MemberBase.2603" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3080" }
%"class.mojo::AssociatedRemote.3080" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3081" }
%"class.mojo::internal::AssociatedInterfacePtrState.3081" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3082" }
%"class.std::__1::unique_ptr.3082" = type { %"class.std::__1::__compressed_pair.3083" }
%"class.std::__1::__compressed_pair.3083" = type { %"struct.std::__1::__compressed_pair_elem.3084" }
%"struct.std::__1::__compressed_pair_elem.3084" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2604" = type { %"class.blink::Member.2605" }
%"class.blink::Member.2605" = type { %"class.blink::MemberBase.2606" }
%"class.blink::MemberBase.2606" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3090" }
%"class.mojo::AssociatedRemote.3090" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3091" }
%"class.mojo::internal::AssociatedInterfacePtrState.3091" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3092" }
%"class.std::__1::unique_ptr.3092" = type { %"class.std::__1::__compressed_pair.3093" }
%"class.std::__1::__compressed_pair.3093" = type { %"struct.std::__1::__compressed_pair_elem.3094" }
%"struct.std::__1::__compressed_pair_elem.3094" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2607" }
%"class.blink::Member.2607" = type { %"class.blink::MemberBase.2608" }
%"class.blink::MemberBase.2608" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3100", %"class.blink::Member.1727", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3100" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3101" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1579" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3101" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2609" = type { %"class.blink::Member.2610" }
%"class.blink::Member.2610" = type { %"class.blink::MemberBase.2611" }
%"class.blink::MemberBase.2611" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3104", %"class.blink::Member.1727", %"class.mojo::AssociatedReceiver.3105" }
%"class.blink::ThreadState::PrefinalizerRegistration.3104" = type { i8 }
%"class.mojo::AssociatedReceiver.3105" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3106" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3106" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2612" }
%"class.blink::Member.2612" = type { %"class.blink::MemberBase.2613" }
%"class.blink::MemberBase.2613" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3109", %"class.blink::Member.1727", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3109" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2142, %"class.std::__1::unique_ptr.1579", %"class.base::WeakPtrFactory.3110" }
%"class.base::WeakPtrFactory.3110" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2614" = type { %"class.blink::Member.2615" }
%"class.blink::Member.2615" = type { %"class.blink::MemberBase.2616" }
%"class.blink::MemberBase.2616" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3113", %"class.blink::Member.1727", %"class.mojo::AssociatedReceiver.3114" }
%"class.blink::ThreadState::PrefinalizerRegistration.3113" = type { i8 }
%"class.mojo::AssociatedReceiver.3114" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3115" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3115" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2619" = type { %"class.blink::MemberBase.2620" }
%"class.blink::MemberBase.2620" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2621" = type { %"class.blink::MemberBase.2622" }
%"class.blink::MemberBase.2622" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2623" = type { %"class.blink::MemberBase.2624" }
%"class.blink::MemberBase.2624" = type { %"class.blink::HeapHashMap.2625"* }
%"class.blink::HeapHashMap.2625" = type opaque
%"class.mojo::StructPtr.2626" = type { %"class.std::__1::unique_ptr.2627" }
%"class.std::__1::unique_ptr.2627" = type { %"class.std::__1::__compressed_pair.2628" }
%"class.std::__1::__compressed_pair.2628" = type { %"struct.std::__1::__compressed_pair_elem.2629" }
%"struct.std::__1::__compressed_pair_elem.2629" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2630", %"class.mojo::InlinedStructPtr.2631" }
%"class.mojo::InlinedStructPtr.2630" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2631" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2637" = type { %"class.absl::optional_internal::optional_data.2638" }
%"class.absl::optional_internal::optional_data.2638" = type { %"class.absl::optional_internal::optional_data_base.2639" }
%"class.absl::optional_internal::optional_data_base.2639" = type { %"class.absl::optional_internal::optional_data_dtor_base.2640" }
%"class.absl::optional_internal::optional_data_dtor_base.2640" = type { i8, %union.anon.2641 }
%union.anon.2641 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1729" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1730", { i64, i64 } }
%"class.blink::WeakMember.1730" = type { %"class.blink::MemberBase.1731" }
%"class.absl::optional.1732" = type { %"class.absl::optional_internal::optional_data.1733" }
%"class.absl::optional_internal::optional_data.1733" = type { %"class.absl::optional_internal::optional_data_base.1734" }
%"class.absl::optional_internal::optional_data_base.1734" = type { %"class.absl::optional_internal::optional_data_dtor_base.1735" }
%"class.absl::optional_internal::optional_data_dtor_base.1735" = type { i8, %union.anon.1736 }
%union.anon.1736 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::HeapHashSet.1741"* }
%"class.blink::HeapHashSet.1741" = type opaque
%"class.std::__1::unique_ptr.1742" = type { %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { %"class.WTF::HashSet.1745"* }
%"class.WTF::HashSet.1745" = type { %"class.WTF::HashTable.1746" }
%"class.WTF::HashTable.1746" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1900" = type { %"class.WTF::HashSet.1903" }
%"class.WTF::HashSet.1903" = type { %"class.WTF::HashTable.1904" }
%"class.WTF::HashTable.1904" = type <{ %"class.blink::Member.1906"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1906" = type opaque
%"class.blink::HeapHashSet.1907" = type { %"class.WTF::HashSet.1910" }
%"class.WTF::HashSet.1910" = type { %"class.WTF::HashTable.1911" }
%"class.WTF::HashTable.1911" = type <{ %"class.blink::Member.1913"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1915" = type { %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.1917" }
%"struct.std::__1::__compressed_pair_elem.1917" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1921" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.1923" = type { %"class.WTF::LinkedHashSet.1926" }
%"class.WTF::LinkedHashSet.1926" = type { %"class.WTF::HashMap.1927", %"class.WTF::VectorBackedLinkedList.1931" }
%"class.WTF::HashMap.1927" = type { %"class.WTF::HashTable.1928" }
%"class.WTF::HashTable.1928" = type <{ %"struct.WTF::KeyValuePair.1930"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1930" = type opaque
%"class.WTF::VectorBackedLinkedList.1931" = type { %"class.WTF::Vector.1932", i32, i32 }
%"class.WTF::Vector.1932" = type { %"class.WTF::VectorBuffer.1933" }
%"class.WTF::VectorBuffer.1933" = type { %"class.WTF::VectorBufferBase.1934" }
%"class.WTF::VectorBufferBase.1934" = type { %"class.WTF::VectorBackedLinkedListNode.1935"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1935" = type opaque
%"class.blink::HeapLinkedHashSet.1937" = type { %"class.WTF::LinkedHashSet.1940" }
%"class.WTF::LinkedHashSet.1940" = type { %"class.WTF::HashMap.1941", %"class.WTF::VectorBackedLinkedList.1945" }
%"class.WTF::HashMap.1941" = type { %"class.WTF::HashTable.1942" }
%"class.WTF::HashTable.1942" = type <{ %"struct.WTF::KeyValuePair.1944"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1944" = type opaque
%"class.WTF::VectorBackedLinkedList.1945" = type { %"class.WTF::Vector.1946", i32, i32 }
%"class.WTF::Vector.1946" = type { %"class.WTF::VectorBuffer.1947" }
%"class.WTF::VectorBuffer.1947" = type { %"class.WTF::VectorBufferBase.1948" }
%"class.WTF::VectorBufferBase.1948" = type { %"class.WTF::VectorBackedLinkedListNode.1949"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1949" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1957" = type { %"class.std::__1::__compressed_pair.1958" }
%"class.std::__1::__compressed_pair.1958" = type { %"struct.std::__1::__compressed_pair_elem.1959" }
%"struct.std::__1::__compressed_pair_elem.1959" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1960, %class.scoped_refptr.1960, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2015", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2020", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1960 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1961", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1968" }
%"class.WTF::RefCounted.1961" = type { %"class.base::RefCounted.1962" }
%"class.base::RefCounted.1962" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1963", i32, [4 x i8] }>
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1968" = type { %"class.WTF::VectorBuffer.1969" }
%"class.WTF::VectorBuffer.1969" = type { %"class.WTF::VectorBufferBase.1970" }
%"class.WTF::VectorBufferBase.1970" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1971", %"class.std::__1::unique_ptr.1987", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1971" = type { %"class.std::__1::__compressed_pair.1972" }
%"class.std::__1::__compressed_pair.1972" = type { %"struct.std::__1::__compressed_pair_elem.1973" }
%"struct.std::__1::__compressed_pair_elem.1973" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1974", %"class.WTF::Vector.1979", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1974" = type { %"class.WTF::VectorBuffer.1975" }
%"class.WTF::VectorBuffer.1975" = type { %"class.WTF::VectorBufferBase.1976" }
%"class.WTF::VectorBufferBase.1976" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1987" = type { %"class.std::__1::__compressed_pair.1988" }
%"class.std::__1::__compressed_pair.1988" = type { %"struct.std::__1::__compressed_pair_elem.1989" }
%"struct.std::__1::__compressed_pair_elem.1989" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1990", %"class.absl::optional.1990" }
%"class.absl::optional.1990" = type { %"class.absl::optional_internal::optional_data.1991" }
%"class.absl::optional_internal::optional_data.1991" = type { %"class.absl::optional_internal::optional_data_base.1992" }
%"class.absl::optional_internal::optional_data_base.1992" = type { %"class.absl::optional_internal::optional_data_dtor_base.1993" }
%"class.absl::optional_internal::optional_data_dtor_base.1993" = type { i8, [3 x i8], %union.anon.1994 }
%union.anon.1994 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1968"*, %"class.absl::optional.2000", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2000" = type { %"class.absl::optional_internal::optional_data.2001" }
%"class.absl::optional_internal::optional_data.2001" = type { %"class.absl::optional_internal::optional_data_base.2002" }
%"class.absl::optional_internal::optional_data_base.2002" = type { %"class.absl::optional_internal::optional_data_dtor_base.2003" }
%"class.absl::optional_internal::optional_data_dtor_base.2003" = type { i8, %union.anon.2004 }
%union.anon.2004 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2005", %"class.WTF::Vector.2010" }
%"class.WTF::Vector.2005" = type { %"class.WTF::VectorBuffer.2006" }
%"class.WTF::VectorBuffer.2006" = type { %"class.WTF::VectorBufferBase.2007", [128 x i8] }
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012", [128 x i8] }
%"class.WTF::VectorBufferBase.2012" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2015" = type { %"class.WTF::VectorBuffer.2016" }
%"class.WTF::VectorBuffer.2016" = type { %"class.WTF::VectorBufferBase.2017" }
%"class.WTF::VectorBufferBase.2017" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2020" = type { %"class.WTF::HashTable.2021" }
%"class.WTF::HashTable.2021" = type <{ %"struct.WTF::KeyValuePair.2024"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2024" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2025", %"class.WTF::Vector.2030" }
%"class.WTF::HashMap.2025" = type { %"class.WTF::HashTable.2026" }
%"class.WTF::HashTable.2026" = type <{ %"struct.WTF::KeyValuePair.2029"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2029" = type opaque
%"class.WTF::Vector.2030" = type { %"class.WTF::VectorBuffer.2031" }
%"class.WTF::VectorBuffer.2031" = type { %"class.WTF::VectorBufferBase.2032" }
%"class.WTF::VectorBufferBase.2032" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2038" = type { %"class.std::__1::__compressed_pair.2039" }
%"class.std::__1::__compressed_pair.2039" = type { %"struct.std::__1::__compressed_pair_elem.2040" }
%"struct.std::__1::__compressed_pair_elem.2040" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2044" = type { %"class.WTF::VectorBuffer.2045" }
%"class.WTF::VectorBuffer.2045" = type { %"class.WTF::VectorBufferBase.2046" }
%"class.WTF::VectorBufferBase.2046" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2049 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2054" = type { %"class.blink::MemberBase.2055" }
%"class.blink::MemberBase.2055" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2056" = type { %"class.WTF::HashSet.2059" }
%"class.WTF::HashSet.2059" = type { %"class.WTF::HashTable.2060" }
%"class.WTF::HashTable.2060" = type <{ %"class.blink::WeakMember.2062"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2062" = type opaque
%"class.blink::HeapHashSet.2063" = type { %"class.WTF::HashSet.2066" }
%"class.WTF::HashSet.2066" = type { %"class.WTF::HashTable.2067" }
%"class.WTF::HashTable.2067" = type <{ %"class.blink::WeakMember.2069"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2069" = type opaque
%"class.std::__1::unique_ptr.2070" = type { %"class.std::__1::__compressed_pair.2071" }
%"class.std::__1::__compressed_pair.2071" = type { %"struct.std::__1::__compressed_pair_elem.2072" }
%"struct.std::__1::__compressed_pair_elem.2072" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2073" }
%"class.base::time_internal::TimeBase.2073" = type { i64 }
%"class.std::__1::unique_ptr.2077" = type { %"class.std::__1::__compressed_pair.2078" }
%"class.std::__1::__compressed_pair.2078" = type { %"struct.std::__1::__compressed_pair_elem.2079" }
%"struct.std::__1::__compressed_pair_elem.2079" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2080", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2080" = type { %"class.absl::optional_internal::optional_data.2081" }
%"class.absl::optional_internal::optional_data.2081" = type { %"class.absl::optional_internal::optional_data_base.2082" }
%"class.absl::optional_internal::optional_data_base.2082" = type { %"class.absl::optional_internal::optional_data_dtor_base.2083" }
%"class.absl::optional_internal::optional_data_dtor_base.2083" = type { i8, %union.anon.2084 }
%union.anon.2084 = type { %"class.base::Time" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3116", %"class.blink::Member.3118", %"class.blink::Member.3120", %"class.blink::Member.3139", %"class.blink::Member.3141" }
%"class.blink::Member.3116" = type { %"class.blink::MemberBase.3117" }
%"class.blink::MemberBase.3117" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.534 }
%"class.blink::Member.3118" = type { %"class.blink::MemberBase.3119" }
%"class.blink::MemberBase.3119" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3120" = type { %"class.blink::MemberBase.3121" }
%"class.blink::MemberBase.3121" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3124", %"class.blink::HeapHashSet.3133" }
%"class.blink::HeapVector.3124" = type { %"class.WTF::Vector.3127" }
%"class.WTF::Vector.3127" = type { %"class.WTF::VectorBuffer.3128" }
%"class.WTF::VectorBuffer.3128" = type { %"class.WTF::VectorBufferBase.3129" }
%"class.WTF::VectorBufferBase.3129" = type { %"class.blink::Member.3130"*, i32, i32 }
%"class.blink::Member.3130" = type { %"class.blink::MemberBase.3131" }
%"class.blink::MemberBase.3131" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3133" = type { %"class.WTF::HashSet.3136" }
%"class.WTF::HashSet.3136" = type { %"class.WTF::HashTable.3137" }
%"class.WTF::HashTable.3137" = type <{ %"class.blink::Member.3130"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3139" = type { %"class.blink::MemberBase.3140" }
%"class.blink::MemberBase.3140" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3141" = type { %"class.blink::MemberBase.3142" }
%"class.blink::MemberBase.3142" = type { %"class.blink::HeapHashSet.3143"* }
%"class.blink::HeapHashSet.3143" = type opaque
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2948, %"class.WTF::Vector.2949", %"class.std::__1::unique_ptr.2954", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2975, %"class.blink::Persistent.2976" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2948 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.2949" = type { %"class.WTF::VectorBuffer.2950" }
%"class.WTF::VectorBuffer.2950" = type { %"class.WTF::VectorBufferBase.2951", [8 x i8] }
%"class.WTF::VectorBufferBase.2951" = type { %class.scoped_refptr.2948*, i32, i32 }
%"class.std::__1::unique_ptr.2954" = type { %"class.std::__1::__compressed_pair.2955" }
%"class.std::__1::__compressed_pair.2955" = type { %"struct.std::__1::__compressed_pair_elem.2956" }
%"struct.std::__1::__compressed_pair_elem.2956" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2957", %"class.absl::optional.2962", %"class.absl::optional.2967" }
%"class.absl::optional.2957" = type { %"class.absl::optional_internal::optional_data.2958" }
%"class.absl::optional_internal::optional_data.2958" = type { %"class.absl::optional_internal::optional_data_base.2959" }
%"class.absl::optional_internal::optional_data_base.2959" = type { %"class.absl::optional_internal::optional_data_dtor_base.2960" }
%"class.absl::optional_internal::optional_data_dtor_base.2960" = type { i8, %union.anon.2961 }
%union.anon.2961 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2962" = type { %"class.absl::optional_internal::optional_data.2963" }
%"class.absl::optional_internal::optional_data.2963" = type { %"class.absl::optional_internal::optional_data_base.2964" }
%"class.absl::optional_internal::optional_data_base.2964" = type { %"class.absl::optional_internal::optional_data_dtor_base.2965" }
%"class.absl::optional_internal::optional_data_dtor_base.2965" = type { i8, [3 x i8], %union.anon.2966 }
%union.anon.2966 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2967" = type { %"class.absl::optional_internal::optional_data.2968" }
%"class.absl::optional_internal::optional_data.2968" = type { %"class.absl::optional_internal::optional_data_base.2969" }
%"class.absl::optional_internal::optional_data_base.2969" = type { %"class.absl::optional_internal::optional_data_dtor_base.2970" }
%"class.absl::optional_internal::optional_data_dtor_base.2970" = type { i8, %union.anon.2971 }
%union.anon.2971 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2975 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.2976" = type { %"class.blink::PersistentBase.2977" }
%"class.blink::PersistentBase.2977" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2980", %"struct.blink::PhysicalRect", %"class.blink::Member.2990" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.2980" = type { %"class.std::__1::__compressed_pair.2981" }
%"class.std::__1::__compressed_pair.2981" = type { %"struct.std::__1::__compressed_pair_elem.2982" }
%"struct.std::__1::__compressed_pair_elem.2982" = type { %"class.WTF::HashSet.2983"* }
%"class.WTF::HashSet.2983" = type { %"class.WTF::HashTable.2984" }
%"class.WTF::HashTable.2984" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2990" = type { %"class.blink::MemberBase.2991" }
%"class.blink::MemberBase.2991" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::LayoutTheme" = type <{ i32 (...)**, %"class.WTF::RefCounted.3145", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.WTF::RefCounted.3145" = type { %"class.base::RefCounted.3146" }
%"class.base::RefCounted.3146" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTMLOptGroupElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLHRElement" = type { %"class.blink::HTMLElement" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.3189" }
%"class.WTF::StringTypeAdapter.3189" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.3190" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.600", %"class.blink::DataRef.679", %"class.blink::DataRef.683", %"class.blink::DataRef.881", %"class.blink::DataRef.939", %"class.blink::DataRef.943", %"class.blink::DataRef.947", %"class.blink::DataRef.951", [20 x i8], [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.35", %"class.WTF::Vector.3153" }
%"class.WTF::Vector.3153" = type { %"class.WTF::VectorBuffer.3154" }
%"class.WTF::VectorBuffer.3154" = type { %"class.WTF::VectorBufferBase.3155", [64 x i8] }
%"class.WTF::VectorBufferBase.3155" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::Vector.2997" = type { %"class.WTF::VectorBuffer.2998" }
%"class.WTF::VectorBuffer.2998" = type { %"class.WTF::VectorBufferBase.2999" }
%"class.WTF::VectorBufferBase.2999" = type { %"class.blink::WebMouseEvent"*, i32, i32 }
%"class.blink::ScopedEventQueue" = type <{ %"class.blink::Persistent.3159", i32, [4 x i8] }>
%"class.blink::Persistent.3159" = type { %"class.blink::PersistentBase.3160" }
%"class.blink::PersistentBase.3160" = type { %"class.blink::HeapVector.3161"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.3161" = type opaque
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::AXObject" = type opaque
%"class.blink::FontDataForRangeSet" = type { i32 (...)**, %"class.WTF::RefCounted.3003", %class.scoped_refptr.589, %class.scoped_refptr.3005 }
%"class.WTF::RefCounted.3003" = type { %"class.base::RefCounted.3004" }
%"class.base::RefCounted.3004" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3005 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.3006", %"class.WTF::Vector.3008" }
%"class.WTF::RefCounted.3006" = type { %"class.base::RefCounted.3007" }
%"class.base::RefCounted.3007" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3008" = type { %"class.WTF::VectorBuffer.3009" }
%"class.WTF::VectorBuffer.3009" = type { %"class.WTF::VectorBufferBase.3010" }
%"class.WTF::VectorBufferBase.3010" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.blink::PagePopupController" = type opaque
%"class.WTF::VectorBuffer.666" = type <{ %"class.WTF::VectorBufferBase.667", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.709" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN5blink17InternalPopupMenu20ItemIterationContext18SerializeBaseStyleEv = comdat any

$_ZN5blink17InternalPopupMenu20ItemIterationContext22FinishGroupIfNecessaryEv = comdat any

$_ZN5blink17InternalPopupMenu20ItemIterationContext18StartGroupChildrenERKNS_13ComputedStyleE = comdat any

$_ZNK5blink15CSSFontSelector7VersionEv = comdat any

$_ZNK5blink15CSSFontSelector19GetExecutionContextEv = comdat any

$_ZN5blink15CSSFontSelector16GetFontFaceCacheEv = comdat any

$_ZN5blink17InternalPopupMenu10ZoomFactorEv = comdat any

$_ZThn8_N5blink17InternalPopupMenu10ZoomFactorEv = comdat any

$_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_ = comdat any

$_ZN5blink10TraceTraitINS_15CSSFontSelectorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12ChromeClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HTMLSelectElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_9ScrollbarEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_9ScrollbarEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_9ScrollbarEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15FontCacheClientEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FontCacheClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FontCacheClientEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_9ScrollbarEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9ScrollbarEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink24PopupMenuCSSFontSelectorE = hidden unnamed_addr constant { [27 x i8*], [6 x i8*] } { [27 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*)* @_ZN5blink24PopupMenuCSSFontSelectorD2Ev to i8*), i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*)* @_ZN5blink24PopupMenuCSSFontSelectorD0Ev to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*)* @_ZN5blink15CSSFontSelector20FontCacheInvalidatedEv to i8*), i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::Visitor"*)* @_ZNK5blink24PopupMenuCSSFontSelector5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::FontData"* (%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)* @_ZN5blink24PopupMenuCSSFontSelector11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.WTF::String"*)* @_ZN5blink15CSSFontSelector15WillUseFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS4_6StringE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)* @_ZN5blink15CSSFontSelector12WillUseRangeERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS_19FontDataForRangeSetE to i8*), i8* bitcast (i32 (%"class.blink::CSSFontSelector"*)* @_ZNK5blink15CSSFontSelector7VersionEv to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink15CSSFontSelector31ReportSuccessfulFontFamilyMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink15CSSFontSelector27ReportFailedFontFamilyMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink15CSSFontSelector30ReportSuccessfulLocalFontMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink15CSSFontSelector26ReportFailedLocalFontMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)* @_ZN5blink15CSSFontSelector36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)* @_ZN5blink15CSSFontSelector32ReportFontLookupByUniqueNameOnlyERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataEb to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)* @_ZN5blink15CSSFontSelector35ReportFontLookupByFallbackCharacterEiNS_20FontFallbackPriorityERKNS_15FontDescriptionEPNS_14SimpleFontDataE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)* @_ZN5blink15CSSFontSelector34ReportLastResortFallbackFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*)* @_ZNK5blink15CSSFontSelector17ReportNotDefGlyphEv to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, i32, i32)* @_ZN5blink15CSSFontSelector31ReportEmojiSegmentGlyphCoverageEjj to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)* @_ZN5blink15CSSFontSelector32RegisterForInvalidationCallbacksEPNS_18FontSelectorClientE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)* @_ZN5blink15CSSFontSelector34UnregisterForInvalidationCallbacksEPNS_18FontSelectorClientE to i8*), i8* bitcast (void (%"class.blink::CSSFontSelector"*, i32)* @_ZN5blink15CSSFontSelector19FontFaceInvalidatedENS_22FontInvalidationReasonE to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::CSSFontSelector"*)* @_ZNK5blink15CSSFontSelector19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)* @_ZN5blink15CSSFontSelector16GetFontFaceCacheEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)* @_ZN5blink15CSSFontSelector30IsPlatformFamilyMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::FontSelector"*, i32)* @_ZN5blink24PopupMenuCSSFontSelector15FontsNeedUpdateEPNS_12FontSelectorENS_22FontInvalidationReasonE to i8*)], [6 x i8*] [i8* inttoptr (i64 -232 to i8*), i8* null, i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::Visitor"*)* @_ZThn232_NK5blink24PopupMenuCSSFontSelector5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*)* @_ZThn232_N5blink24PopupMenuCSSFontSelectorD1Ev to i8*), i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*)* @_ZThn232_N5blink24PopupMenuCSSFontSelectorD0Ev to i8*), i8* bitcast (void (%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::FontSelector"*, i32)* @_ZThn232_N5blink24PopupMenuCSSFontSelector15FontsNeedUpdateEPNS_12FontSelectorENS_22FontInvalidationReasonE to i8*)] }, align 8
@_ZTVN5blink17InternalPopupMenuE = hidden unnamed_addr constant { [21 x i8*], [16 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenuD2Ev to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenuD0Ev to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, %"class.blink::Visitor"*)* @_ZNK5blink17InternalPopupMenu5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu4ShowEv to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu4HideEv to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, i32)* @_ZN5blink17InternalPopupMenu17UpdateFromElementENS_9PopupMenu12UpdateReasonE to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu16DisconnectClientEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::InternalPopupMenu"*)* @_ZNK5blink17InternalPopupMenu17PopupRootAXObjectEv to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, i1)* @_ZN5blink17InternalPopupMenu6UpdateEb to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, %"class.WTF::SharedBuffer"*)* @_ZN5blink17InternalPopupMenu13WriteDocumentEPN3WTF12SharedBufferE to i8*), i8* bitcast (%"class.blink::CSSFontSelector"* (%"class.blink::InternalPopupMenu"*, %"class.blink::Document"*)* @_ZN5blink17InternalPopupMenu21CreateCSSFontSelectorERNS_8DocumentE to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, i32, %"class.WTF::String"*)* @_ZN5blink17InternalPopupMenu21SetValueAndClosePopupEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, %"class.WTF::String"*)* @_ZN5blink17InternalPopupMenu8SetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu11CancelPopupEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu12OwnerElementEv to i8*), i8* bitcast (%"class.blink::ChromeClient"* (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu15GetChromeClientEv to i8*), i8* bitcast (float (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu10ZoomFactorEv to i8*), i8* bitcast (%"class.blink::Locale"* (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu9GetLocaleEv to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenu13DidClosePopupEv to i8*)], [16 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InternalPopupMenu"*, %"class.WTF::SharedBuffer"*)* @_ZThn8_N5blink17InternalPopupMenu13WriteDocumentEPN3WTF12SharedBufferE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenu12OwnerElementEv to i8*), i8* bitcast (%"class.blink::ChromeClient"* (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenu15GetChromeClientEv to i8*), i8* bitcast (%"class.blink::CSSFontSelector"* (%"class.blink::InternalPopupMenu"*, %"class.blink::Document"*)* @_ZThn8_N5blink17InternalPopupMenu21CreateCSSFontSelectorERNS_8DocumentE to i8*), i8* bitcast (%"class.blink::PagePopupController"* (%"class.blink::PagePopupClient"*, %"class.blink::Page"*, %"class.blink::PagePopup"*)* @_ZN5blink15PagePopupClient25CreatePagePopupControllerERNS_4PageERNS_9PagePopupE to i8*), i8* bitcast (float (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenu10ZoomFactorEv to i8*), i8* bitcast (%"class.blink::Locale"* (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenu9GetLocaleEv to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, i32, %"class.WTF::String"*)* @_ZThn8_N5blink17InternalPopupMenu21SetValueAndClosePopupEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InternalPopupMenu8SetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenu11CancelPopupEv to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenu13DidClosePopupEv to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*, i1)* @_ZThn8_N5blink17InternalPopupMenu6UpdateEb to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenuD1Ev to i8*), i8* bitcast (void (%"class.blink::InternalPopupMenu"*)* @_ZThn8_N5blink17InternalPopupMenuD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [52 x i8] c"<!DOCTYPE html><head><meta charset='UTF-8'><style>\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"select::-webkit-scrollbar\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"select::-webkit-scrollbar-thumb\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"select::-webkit-scrollbar-track\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"select::-webkit-scrollbar-track-piece\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"select::-webkit-scrollbar-corner\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c":hover\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"@media (any-pointer:coarse) {\00", align 1
@.str.8 = private unnamed_addr constant [120 x i8] c"option, optgroup {padding-top: %dpx;}\0Aoption {padding-bottom: %dpx;min-height: %dpx;display: flex;align-items: center;}\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.10 = private unnamed_addr constant [87 x i8] c"</style></head><body><div id=main>Loading...</div><script>\0Awindow.dialogArguments = {\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"selectedIndex\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"children: [\0A\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"],\0A\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"anchorRectInScreen\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"zoomFactor\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"scaleFactor\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"isRTL\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"paddingStart\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"};\0A\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"</script></body>\0A\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"style: {\0A\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"visibility\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"display\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"rtl\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"ltr\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"unicodeBidi\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"bidi-override\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"backgroundColor\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"fontSize\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"fontWeight\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"fontFamily: [\0A\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"fontStyle\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"fontVariant\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"small-caps\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"textTransform\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"},\0A\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@_ZN5blink10html_names14kAriaLabelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.46 = private unnamed_addr constant [10 x i8] c"ariaLabel\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"},\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"type: \22optgroup\22,\0A\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"type: \22separator\22,\0A\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"{ \0A\00", align 1
@_ZZN5blink17InternalPopupMenu30AppendOwnerElementPseudoStylesERKN3WTF6StringEPNS1_12SharedBufferERKNS_13ComputedStyleEE17serialize_targets = internal constant [10 x i32] [i32 137, i32 52, i32 438, i32 456, i32 465, i32 467, i32 470, i32 466, i32 51, i32 101], align 16
@.str.53 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@__const._ZN5blink17InternalPopupMenu21SetValueAndClosePopupEiRKN3WTF6StringE.event = private unnamed_addr constant <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, i32, [4 x i8] }> <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN5blink16event_type_names8kMouseupE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kClickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.54 = private unnamed_addr constant [23 x i8] c"window.updateData = {\0A\00", align 1
@.str.55 = private unnamed_addr constant [17 x i8] c"type: \22update\22,\0A\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"children: [\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase37is_force_taller_select_popup_enabled_E = external local_unnamed_addr global i8, align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"baseStyle: {\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"fontFamily: [\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"],},\0A\00", align 1
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@.str.62 = private unnamed_addr constant [7 x i8] c"italic\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@.str.64 = private unnamed_addr constant [10 x i8] c"%s : %s;\0A\00", align 1
@_ZTVN5blink13WebMouseEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9ScrollbarEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Scrollbar]\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.66 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_9ScrollbarEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_9ScrollbarEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9ScrollbarEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9ScrollbarEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.67 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.68 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.69 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.72 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kHrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FontCacheClientEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontCacheClient]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FontCacheClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FontCacheClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@switch.table._ZN5blink17InternalPopupMenu13WriteDocumentEPN3WTF12SharedBufferE = private unnamed_addr constant [10 x i32] [i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 8, i32 128, i32 4, i32 4], align 4

@_ZN5blink24PopupMenuCSSFontSelectorC1ERNS_8DocumentEPNS_15CSSFontSelectorE = hidden unnamed_addr alias void (%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::Document"*, %"class.blink::CSSFontSelector"*), void (%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::Document"*, %"class.blink::CSSFontSelector"*)* @_ZN5blink24PopupMenuCSSFontSelectorC2ERNS_8DocumentEPNS_15CSSFontSelectorE
@_ZN5blink24PopupMenuCSSFontSelectorD1Ev = hidden unnamed_addr alias void (%"class.blink::PopupMenuCSSFontSelector"*), void (%"class.blink::PopupMenuCSSFontSelector"*)* @_ZN5blink24PopupMenuCSSFontSelectorD2Ev
@_ZN5blink17InternalPopupMenuC1EPNS_12ChromeClientERNS_17HTMLSelectElementE = hidden unnamed_addr alias void (%"class.blink::InternalPopupMenu"*, %"class.blink::ChromeClient"*, %"class.blink::HTMLSelectElement"*), void (%"class.blink::InternalPopupMenu"*, %"class.blink::ChromeClient"*, %"class.blink::HTMLSelectElement"*)* @_ZN5blink17InternalPopupMenuC2EPNS_12ChromeClientERNS_17HTMLSelectElementE
@_ZN5blink17InternalPopupMenuD1Ev = hidden unnamed_addr alias void (%"class.blink::InternalPopupMenu"*), void (%"class.blink::InternalPopupMenu"*)* @_ZN5blink17InternalPopupMenuD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24PopupMenuCSSFontSelectorC2ERNS_8DocumentEPNS_15CSSFontSelectorE(%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CSSFontSelector"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 1
  tail call void @_ZN5blink15CSSFontSelectorC2ERKNS_9TreeScopeE(%"class.blink::CSSFontSelector"* %4, %"class.blink::TreeScope"* dereferenceable(104) %5) #15
  %6 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FontSelectorClient", %"class.blink::FontSelectorClient"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [6 x i8*] }, { [27 x i8*], [6 x i8*] }* @_ZTVN5blink24PopupMenuCSSFontSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [6 x i8*] }, { [27 x i8*], [6 x i8*] }* @_ZTVN5blink24PopupMenuCSSFontSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSFontSelector"* %2, %"class.blink::CSSFontSelector"** %9, align 8
  %10 = bitcast %"class.blink::CSSFontSelector"* %2 to void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)***
  %11 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)**, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)** %11, i64 18
  %13 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)** %12, align 8
  tail call void %13(%"class.blink::CSSFontSelector"* %2, %"class.blink::FontSelectorClient"* %6) #15
  ret void
}

declare void @_ZN5blink15CSSFontSelectorC2ERKNS_9TreeScopeE(%"class.blink::CSSFontSelector"*, %"class.blink::TreeScope"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24PopupMenuCSSFontSelectorD2Ev(%"class.blink::PopupMenuCSSFontSelector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 0
  tail call void @_ZN5blink15CSSFontSelectorD2Ev(%"class.blink::CSSFontSelector"* %2) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15CSSFontSelectorD2Ev(%"class.blink::CSSFontSelector"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn232_N5blink24PopupMenuCSSFontSelectorD1Ev(%"class.blink::PopupMenuCSSFontSelector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 -1, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::CSSFontSelector"*
  tail call void @_ZN5blink15CSSFontSelectorD2Ev(%"class.blink::CSSFontSelector"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24PopupMenuCSSFontSelectorD0Ev(%"class.blink::PopupMenuCSSFontSelector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 0
  tail call void @_ZN5blink15CSSFontSelectorD2Ev(%"class.blink::CSSFontSelector"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn232_N5blink24PopupMenuCSSFontSelectorD0Ev(%"class.blink::PopupMenuCSSFontSelector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 -1, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::CSSFontSelector"*
  tail call void @_ZN5blink15CSSFontSelectorD2Ev(%"class.blink::CSSFontSelector"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontData"* @_ZN5blink24PopupMenuCSSFontSelector11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::PopupMenuCSSFontSelector"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %4, align 8
  %6 = bitcast %"class.blink::CSSFontSelector"* %5 to %"class.blink::FontData"* (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)***
  %7 = load %"class.blink::FontData"* (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)**, %"class.blink::FontData"* (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FontData"* (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %7, i64 4
  %9 = load %"class.blink::FontData"* (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %8, align 8
  %10 = tail call %"class.blink::FontData"* %9(%"class.blink::CSSFontSelector"* %5, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #15
  ret %"class.blink::FontData"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24PopupMenuCSSFontSelector15FontsNeedUpdateEPNS_12FontSelectorENS_22FontInvalidationReasonE(%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::FontSelector"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 0
  tail call void @_ZN5blink15CSSFontSelector29DispatchInvalidationCallbacksENS_22FontInvalidationReasonE(%"class.blink::CSSFontSelector"* %4, i32 %2) #15
  ret void
}

declare void @_ZN5blink15CSSFontSelector29DispatchInvalidationCallbacksENS_22FontInvalidationReasonE(%"class.blink::CSSFontSelector"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn232_N5blink24PopupMenuCSSFontSelector15FontsNeedUpdateEPNS_12FontSelectorENS_22FontInvalidationReasonE(%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::FontSelector"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 -1, i32 0, i32 1
  %5 = bitcast %"class.blink::WeakMember"* %4 to %"class.blink::CSSFontSelector"*
  tail call void @_ZN5blink15CSSFontSelector29DispatchInvalidationCallbacksENS_22FontInvalidationReasonE(%"class.blink::CSSFontSelector"* %5, i32 %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24PopupMenuCSSFontSelector5TraceEPNS_7VisitorE(%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.168"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CSSFontSelectorEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15CSSFontSelector5TraceEPNS_7VisitorE(%"class.blink::CSSFontSelector"* %14, %"class.blink::Visitor"* %1) #15
  ret void
}

declare void @_ZNK5blink15CSSFontSelector5TraceEPNS_7VisitorE(%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn232_NK5blink24PopupMenuCSSFontSelector5TraceEPNS_7VisitorE(%"class.blink::PopupMenuCSSFontSelector"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PopupMenuCSSFontSelector", %"class.blink::PopupMenuCSSFontSelector"* %0, i64 -1, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %3, i64 30
  %5 = bitcast %"class.blink::WeakMember"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CSSFontSelectorEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %2, %8
  %15 = bitcast %"class.blink::WeakMember"* %3 to %"class.blink::CSSFontSelector"*
  tail call void @_ZNK5blink15CSSFontSelector5TraceEPNS_7VisitorE(%"class.blink::CSSFontSelector"* %15, %"class.blink::Visitor"* %1) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17InternalPopupMenuC2EPNS_12ChromeClientERNS_17HTMLSelectElementE(%"class.blink::InternalPopupMenu"* nocapture, %"class.blink::ChromeClient"*, %"class.blink::HTMLSelectElement"* dereferenceable(352)) unnamed_addr #3 align 2 {
  %4 = bitcast %"class.blink::InternalPopupMenu"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ChromeClient"* %1, %"class.blink::ChromeClient"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::HTMLSelectElement"* %2, %"class.blink::HTMLSelectElement"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  store %"class.blink::PagePopup"* null, %"class.blink::PagePopup"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 5
  store i8 0, i8* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17InternalPopupMenuD2Ev(%"class.blink::InternalPopupMenu"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::InternalPopupMenu"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn8_N5blink17InternalPopupMenuD1Ev(%"class.blink::InternalPopupMenu"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17InternalPopupMenuD0Ev(%"class.blink::InternalPopupMenu"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::InternalPopupMenu"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn8_N5blink17InternalPopupMenuD0Ev(%"class.blink::InternalPopupMenu"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [16 x i8*] }, { [21 x i8*], [16 x i8*] }* @_ZTVN5blink17InternalPopupMenuE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17InternalPopupMenu5TraceEPNS_7VisitorE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.1664"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ChromeClientEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.1668"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLSelectElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu13WriteDocumentEPN3WTF12SharedBufferE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.WTF::SharedBuffer"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %7 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %8 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %9 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %10 = alloca %"class.blink::StyleRequest", align 8
  %11 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %12 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %"class.blink::IntRect"*
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %"class.blink::IntRect"*
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca [5 x %"struct.std::__1::pair.2947"], align 16
  %19 = alloca %"struct.std::__1::pair.2947", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::StringAppend", align 8
  %22 = alloca %"class.WTF::Vector.1709", align 8
  %23 = alloca %"class.WTF::Vector.1709", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.blink::InternalPopupMenu::ItemIterationContext", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::Vector.1709", align 8
  %33 = alloca %"class.WTF::Vector.1709", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %35, align 8
  %37 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #15
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %39 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  %41 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %39, align 8
  %42 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = tail call { i64, i64 } @_ZNK5blink7Element29VisibleBoundsInVisualViewportEv(%"class.blink::Element"* %43) #15
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %46 = extractvalue { i64, i64 } %44, 0
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %48 = extractvalue { i64, i64 } %44, 1
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  %53 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %52) #15
  %54 = bitcast %"class.blink::ChromeClient"* %41 to { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)***
  %55 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)**, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*** %54, align 8
  %56 = getelementptr inbounds { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %55, i64 7
  %57 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %56, align 8
  %58 = call { i64, i64 } %57(%"class.blink::ChromeClient"* %41, %"class.blink::IntRect"* nonnull dereferenceable(16) %16, %"class.blink::LocalFrameView"* %53) #15
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %60 = extractvalue { i64, i64 } %58, 0
  store i64 %60, i64* %59, align 8
  %61 = extractvalue { i64, i64 } %58, 1
  store i64 %61, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #15
  %62 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %39, align 8
  %63 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %64 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %65) #15
  %67 = bitcast %"class.blink::ChromeClient"* %62 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %68 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %67, align 8
  %69 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %68, i64 3
  %70 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %69, align 8
  %71 = call float %70(%"class.blink::ChromeClient"* %62, %"class.blink::LocalFrame"* %66, float 1.000000e+00) #15
  %72 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i64 51) #15
  %73 = bitcast %"class.WTF::StringUTF8Adaptor"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %17, i32 0) #15
  %74 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %11, i64 0, i32 1
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %11, i64 0, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %75, i64 %78) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #15
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %2
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #15
  br label %95

95:                                               ; preds = %2, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  %96 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %99, label %105, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.blink::NodeData"** %100 to %"class.blink::NodeRareData"**
  %103 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %103, i64 0, i32 1, i32 0, i32 0
  br label %107

105:                                              ; preds = %95
  %106 = bitcast %"class.blink::NodeData"** %100 to %"class.blink::NodeRenderingData"**
  br label %107

107:                                              ; preds = %101, %105
  %108 = phi %"class.blink::NodeRenderingData"** [ %104, %101 ], [ %106, %105 ]
  %109 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %109, i64 0, i32 1
  %111 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %110, align 8
  %112 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %112) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %112, i8 -86, i64 80, i1 false)
  %113 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 0
  store i8 8, i8* %112, align 16
  %114 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 0, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %114, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i64 25) #15
  %115 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 1, i32 0
  store i8 14, i8* %115, align 16
  %116 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 1, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %116, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i64 31) #15
  %117 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 2, i32 0
  store i8 16, i8* %117, align 16
  %118 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 2, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %118, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i64 31) #15
  %119 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 3, i32 0
  store i8 17, i8* %119, align 16
  %120 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 3, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %120, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37) #15
  %121 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 4, i32 0
  store i8 18, i8* %121, align 16
  %122 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 4, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %122, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i64 32) #15
  %123 = call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"* %36) #15
  %124 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %123, i64 0, i32 0, i32 0
  %125 = call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %124) #15
  %126 = icmp eq %"class.blink::LayoutBox"* %125, null
  br i1 %126, label %144, label %127

127:                                              ; preds = %107
  %128 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %125, i64 0, i32 0
  %129 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %128) #15
  %130 = icmp eq %"class.blink::PaintLayerScrollableArea"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %128) #15
  %133 = icmp eq %"class.blink::PaintLayerScrollableArea"* %132, null
  br i1 %133, label %144, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %132, i64 0, i32 0
  %136 = call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"* %36) #15
  %137 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ScrollbarEEEPhm(i64 256) #15
  %138 = bitcast i8* %137 to %"class.blink::CustomScrollbar"*
  call void @_ZN5blink15CustomScrollbarC1EPNS_14ScrollableAreaENS_20ScrollbarOrientationEPNS_7ElementE(%"class.blink::CustomScrollbar"* %138, %"class.blink::ScrollableArea"* %135, i32 1, %"class.blink::Element"* %136) #15
  %139 = getelementptr inbounds i8, i8* %137, i64 -4
  %140 = bitcast i8* %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = or i16 %141, 1
  store atomic i16 %142, i16* %140 release, align 2
  %143 = bitcast i8* %137 to %"class.blink::Scrollbar"*
  br label %144

144:                                              ; preds = %134, %131, %127, %107
  %145 = phi %"class.blink::Scrollbar"* [ null, %127 ], [ null, %107 ], [ %143, %134 ], [ null, %131 ]
  %146 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 5
  %147 = getelementptr inbounds %"struct.std::__1::pair.2947", %"struct.std::__1::pair.2947"* %19, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::pair.2947", %"struct.std::__1::pair.2947"* %19, i64 0, i32 1, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__1::pair.2947", %"struct.std::__1::pair.2947"* %19, i64 0, i32 1
  %150 = icmp eq %"class.blink::Scrollbar"* %145, null
  %151 = bitcast %"class.blink::NodeData"** %100 to %"class.blink::NodeRareData"**
  %152 = bitcast %"class.blink::NodeData"** %100 to %"class.blink::NodeRenderingData"**
  %153 = bitcast %"class.blink::Scrollbar"* %145 to void (%"class.blink::Scrollbar"*, i32)***
  %154 = bitcast %"class.blink::StyleRequest"* %10 to i8*
  %155 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 0
  %156 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 1
  %157 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 2
  %158 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 3
  %159 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 4
  %160 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 5
  %161 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 6
  %162 = bitcast %"class.blink::CustomScrollbar"** %161 to %"class.blink::Scrollbar"**
  %163 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %164 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %163, i64 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %10, i64 0, i32 7, i32 0, i32 0, i32 0
  %166 = bitcast %"class.WTF::String"* %20 to i8*
  %167 = bitcast %"class.WTF::StringAppend"* %21 to i8*
  %168 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 0, i32 0
  %169 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %171 = bitcast %"struct.std::__1::pair.2947"* %19 to i64*
  br label %173

172:                                              ; preds = %379
  br i1 %150, label %387, label %382

173:                                              ; preds = %144, %379
  %174 = phi %"struct.std::__1::pair.2947"* [ %113, %144 ], [ %380, %379 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #15
  store i64 -6148914691236517206, i64* %171, align 8
  %175 = getelementptr inbounds %"struct.std::__1::pair.2947", %"struct.std::__1::pair.2947"* %174, i64 0, i32 0
  %176 = load i8, i8* %175, align 8
  store i8 %176, i8* %147, align 8
  %177 = getelementptr inbounds %"struct.std::__1::pair.2947", %"struct.std::__1::pair.2947"* %174, i64 0, i32 1, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %148, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %197, label %180

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i33
  %189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %188, i33 1) #15
  %190 = extractvalue { i33, i1 } %189, 1
  %191 = extractvalue { i33, i1 } %189, 0
  %192 = icmp slt i33 %191, 0
  %193 = or i1 %190, %192
  br i1 %193, label %194, label %195, !prof !2

194:                                              ; preds = %185
  call void @llvm.trap() #15
  unreachable

195:                                              ; preds = %185
  %196 = trunc i33 %191 to i32
  store i32 %196, i32* %186, align 4
  br label %197

197:                                              ; preds = %173, %180, %195
  %198 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject27GetCachedPseudoElementStyleENS_8PseudoIdE(%"class.blink::LayoutObject"* %111, i8 zeroext %176) #15
  %199 = icmp eq %"class.blink::ComputedStyle"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  call void @_ZN5blink17InternalPopupMenu30AppendOwnerElementPseudoStylesERKN3WTF6StringEPNS1_12SharedBufferERKNS_13ComputedStyleE(%"class.blink::InternalPopupMenu"* undef, %"class.WTF::String"* dereferenceable(8) %149, %"class.WTF::SharedBuffer"* %1, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %198)
  br label %201

201:                                              ; preds = %197, %200
  br i1 %150, label %365, label %202

202:                                              ; preds = %201
  %203 = load i32, i32* %96, align 8
  %204 = and i32 %203, 12
  %205 = icmp eq i32 %204, 0
  %206 = and i32 %203, 1
  %207 = icmp eq i32 %206, 0
  br i1 %205, label %208, label %217

208:                                              ; preds = %202
  br i1 %207, label %214, label %209

209:                                              ; preds = %208
  %210 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %151, align 8
  %211 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %210, i64 0, i32 1, i32 0, i32 0
  %212 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %212, i64 0, i32 2, i32 0
  br label %229

214:                                              ; preds = %208
  %215 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %152, align 8
  %216 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %215, i64 0, i32 2, i32 0
  br label %229

217:                                              ; preds = %202
  br i1 %207, label %221, label %218

218:                                              ; preds = %217
  %219 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %151, align 8
  %220 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %219, i64 0, i32 1, i32 0, i32 0
  br label %221

221:                                              ; preds = %217, %218
  %222 = phi %"class.blink::NodeRenderingData"** [ %220, %218 ], [ %152, %217 ]
  %223 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %223, i64 0, i32 1
  %225 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %224, align 8
  %226 = icmp eq %"class.blink::LayoutObject"* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %225, i64 0, i32 5, i32 0
  br label %229

229:                                              ; preds = %227, %214, %209
  %230 = phi %"class.blink::ComputedStyle"** [ %213, %209 ], [ %216, %214 ], [ %228, %227 ]
  %231 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %230, align 8
  br label %232

232:                                              ; preds = %229, %221
  %233 = phi %"class.blink::ComputedStyle"* [ null, %221 ], [ %231, %229 ]
  %234 = add i8 %176, -8
  %235 = icmp ult i8 %234, 10
  br i1 %235, label %236, label %365

236:                                              ; preds = %232
  %237 = zext i8 %234 to i16
  %238 = lshr i16 833, %237
  %239 = and i16 %238, 1
  %240 = icmp eq i16 %239, 0
  br i1 %240, label %365, label %241

241:                                              ; preds = %236
  %242 = sext i8 %234 to i64
  %243 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5blink17InternalPopupMenu13WriteDocumentEPN3WTF12SharedBufferE, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = load void (%"class.blink::Scrollbar"*, i32)**, void (%"class.blink::Scrollbar"*, i32)*** %153, align 8
  %246 = getelementptr inbounds void (%"class.blink::Scrollbar"*, i32)*, void (%"class.blink::Scrollbar"*, i32)** %245, i64 10
  %247 = load void (%"class.blink::Scrollbar"*, i32)*, void (%"class.blink::Scrollbar"*, i32)** %246, align 8
  call void %247(%"class.blink::Scrollbar"* nonnull %145, i32 %244) #15
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %154) #15
  store %"class.blink::ComputedStyle"* %233, %"class.blink::ComputedStyle"** %155, align 8
  store %"class.blink::ComputedStyle"* %233, %"class.blink::ComputedStyle"** %156, align 8
  store i32 0, i32* %157, align 8
  store i8 %176, i8* %158, align 4
  store i32 0, i32* %159, align 8
  store i32 %244, i32* %160, align 4
  store %"class.blink::Scrollbar"* %145, %"class.blink::Scrollbar"** %162, align 8
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  store %"class.WTF::StringImpl"* %248, %"class.WTF::StringImpl"** %165, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %267, label %250

250:                                              ; preds = %241
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %267

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i33
  %259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %258, i33 1) #15
  %260 = extractvalue { i33, i1 } %259, 1
  %261 = extractvalue { i33, i1 } %259, 0
  %262 = icmp slt i33 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %264, label %265, !prof !2

264:                                              ; preds = %255
  call void @llvm.trap() #15
  unreachable

265:                                              ; preds = %255
  %266 = trunc i33 %261 to i32
  store i32 %266, i32* %256, align 4
  br label %267

267:                                              ; preds = %265, %250, %241
  %268 = call %"class.blink::ComputedStyle"* @_ZN5blink7Element29UncachedStyleForPseudoElementERKNS_12StyleRequestE(%"class.blink::Element"* %43, %"class.blink::StyleRequest"* nonnull dereferenceable(48) %10) #15
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #15
  br label %284

284:                                              ; preds = %267, %280, %283
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %154) #15
  %285 = icmp eq %"class.blink::ComputedStyle"* %268, null
  br i1 %285, label %365, label %286

286:                                              ; preds = %284
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #15
  br i1 %179, label %331, label %287

287:                                              ; preds = %286
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %304

294:                                              ; preds = %287
  %295 = zext i32 %293 to i33
  %296 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %295, i33 1) #15
  %297 = extractvalue { i33, i1 } %296, 1
  %298 = extractvalue { i33, i1 } %296, 0
  %299 = icmp slt i33 %298, 0
  %300 = or i1 %297, %299
  br i1 %300, label %301, label %302, !prof !2

301:                                              ; preds = %294
  call void @llvm.trap() #15
  unreachable

302:                                              ; preds = %294
  %303 = trunc i33 %298 to i32
  store i32 %303, i32* %292, align 4
  br label %304

304:                                              ; preds = %287, %302
  %305 = phi i32 [ %303, %302 ], [ %293, %287 ]
  %306 = load atomic i32, i32* %288 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  br i1 %308, label %310, label %320

310:                                              ; preds = %304
  %311 = zext i32 %305 to i33
  %312 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %311, i33 1) #15
  %313 = extractvalue { i33, i1 } %312, 1
  %314 = extractvalue { i33, i1 } %312, 0
  %315 = icmp slt i33 %314, 0
  %316 = or i1 %313, %315
  br i1 %316, label %317, label %318, !prof !2

317:                                              ; preds = %310
  call void @llvm.trap() #15
  unreachable

318:                                              ; preds = %310
  %319 = trunc i33 %314 to i32
  store i32 %319, i32* %309, align 4
  br label %320

320:                                              ; preds = %318, %304
  %321 = phi i32 [ %319, %318 ], [ %305, %304 ]
  %322 = load atomic i32, i32* %288 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %320
  %326 = add i32 %321, -1
  store i32 %326, i32* %309, align 4
  br label %327

327:                                              ; preds = %325, %320
  %328 = phi i32 [ %326, %325 ], [ %321, %320 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #15
  br label %331

331:                                              ; preds = %286, %327, %330
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %168, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8** %169, align 8
  %332 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %21)
  store %"class.WTF::StringImpl"* %332, %"class.WTF::StringImpl"** %170, align 8
  call void @_ZN5blink17InternalPopupMenu30AppendOwnerElementPseudoStylesERKN3WTF6StringEPNS1_12SharedBufferERKNS_13ComputedStyleE(%"class.blink::InternalPopupMenu"* undef, %"class.WTF::String"* nonnull dereferenceable(8) %20, %"class.WTF::SharedBuffer"* %1, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %268)
  %333 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %333, label %347, label %334

334:                                              ; preds = %331
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br i1 %338, label %341, label %343

341:                                              ; preds = %334
  %342 = add i32 %340, -1
  store i32 %342, i32* %339, align 4
  br label %343

343:                                              ; preds = %341, %334
  %344 = phi i32 [ %342, %341 ], [ %340, %334 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %332) #15
  br label %347

347:                                              ; preds = %331, %343, %346
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #15
  br label %363

363:                                              ; preds = %347, %359, %362
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #15
  %364 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %268, i64 0, i32 1, i32 0
  call void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.957"* %364) #15
  br label %365

365:                                              ; preds = %236, %232, %284, %363, %201
  br i1 %179, label %379, label %366

366:                                              ; preds = %365
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load atomic i32, i32* %367 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  br i1 %370, label %373, label %375

373:                                              ; preds = %366
  %374 = add i32 %372, -1
  store i32 %374, i32* %371, align 4
  br label %375

375:                                              ; preds = %373, %366
  %376 = phi i32 [ %374, %373 ], [ %372, %366 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #15
  br label %379

379:                                              ; preds = %365, %375, %378
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #15
  %380 = getelementptr inbounds %"struct.std::__1::pair.2947", %"struct.std::__1::pair.2947"* %174, i64 1
  %381 = icmp eq %"struct.std::__1::pair.2947"* %380, %146
  br i1 %381, label %172, label %173

382:                                              ; preds = %172
  %383 = bitcast %"class.blink::Scrollbar"* %145 to void (%"class.blink::Scrollbar"*)***
  %384 = load void (%"class.blink::Scrollbar"*)**, void (%"class.blink::Scrollbar"*)*** %383, align 8
  %385 = getelementptr inbounds void (%"class.blink::Scrollbar"*)*, void (%"class.blink::Scrollbar"*)** %384, i64 9
  %386 = load void (%"class.blink::Scrollbar"*)*, void (%"class.blink::Scrollbar"*)** %385, align 8
  call void %386(%"class.blink::Scrollbar"* nonnull %145) #15
  br label %387

387:                                              ; preds = %172, %382
  %388 = bitcast %"class.WTF::Vector.1709"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %388) #15
  call void @_ZN5blink21ChooserResourceLoader25GetPickerCommonStyleSheetEv(%"class.WTF::Vector.1709"* nonnull sret %22) #15
  %389 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %22, i64 0, i32 0, i32 0, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %22, i64 0, i32 0, i32 0, i32 2
  %392 = load i32, i32* %391, align 4
  %393 = zext i32 %392 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %390, i64 %393) #15
  %394 = load i8*, i8** %389, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %401, label %396, !prof !3

396:                                              ; preds = %387
  %397 = load i32, i32* %391, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %400, label %399, !prof !2

399:                                              ; preds = %396
  store i32 0, i32* %391, align 4
  br label %400

400:                                              ; preds = %399, %396
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %394) #15
  store i8* null, i8** %389, align 8
  br label %401

401:                                              ; preds = %387, %400
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %388) #15
  %402 = bitcast %"class.WTF::Vector.1709"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %402) #15
  call void @_ZN5blink21ChooserResourceLoader23GetListPickerStyleSheetEv(%"class.WTF::Vector.1709"* nonnull sret %23) #15
  %403 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %23, i64 0, i32 0, i32 0, i32 0
  %404 = load i8*, i8** %403, align 8
  %405 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %23, i64 0, i32 0, i32 0, i32 2
  %406 = load i32, i32* %405, align 4
  %407 = zext i32 %406 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %404, i64 %407) #15
  %408 = load i8*, i8** %403, align 8
  %409 = icmp eq i8* %408, null
  br i1 %409, label %415, label %410, !prof !3

410:                                              ; preds = %401
  %411 = load i32, i32* %405, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %414, label %413, !prof !2

413:                                              ; preds = %410
  store i32 0, i32* %405, align 4
  br label %414

414:                                              ; preds = %413, %410
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %408) #15
  store i8* null, i8** %403, align 8
  br label %415

415:                                              ; preds = %401, %414
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %402) #15
  %416 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_force_taller_select_popup_enabled_E, align 1, !range !4
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %418, label %443

418:                                              ; preds = %415
  %419 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %419) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i64 29) #15
  %420 = bitcast %"class.WTF::StringUTF8Adaptor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %420) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %420, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %24, i32 0) #15
  %421 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %9, i64 0, i32 1
  %422 = load i8*, i8** %421, align 8
  %423 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %9, i64 0, i32 2
  %424 = load i32, i32* %423, align 8
  %425 = zext i32 %424 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %422, i64 %425) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %420) #15
  %426 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %427 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %426, align 8
  %428 = icmp eq %"class.WTF::StringImpl"* %427, null
  br i1 %428, label %442, label %429

429:                                              ; preds = %418
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = load atomic i32, i32* %430 monotonic, align 4
  %432 = and i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 0
  %435 = load i32, i32* %434, align 4
  br i1 %433, label %436, label %438

436:                                              ; preds = %429
  %437 = add i32 %435, -1
  store i32 %437, i32* %434, align 4
  br label %438

438:                                              ; preds = %436, %429
  %439 = phi i32 [ %437, %436 ], [ %435, %429 ]
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %438
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %427) #15
  br label %442

442:                                              ; preds = %418, %438, %441
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %419) #15
  br label %443

443:                                              ; preds = %415, %442
  %444 = fmul float %71, 4.000000e+00
  %445 = call float @llvm.round.f32(float %444)
  %446 = fptosi float %445 to i32
  %447 = fmul float %71, 2.400000e+01
  %448 = call float @llvm.round.f32(float %447)
  %449 = fptosi float %448 to i32
  %450 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %450) #15
  %451 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.8, i64 0, i64 0), i32 %446, i32 %446, i32 %449) #15
  %452 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %451, %"class.WTF::StringImpl"** %452, align 8
  %453 = bitcast %"class.WTF::StringUTF8Adaptor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %453) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %453, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %25, i32 0) #15
  %454 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 1
  %455 = load i8*, i8** %454, align 8
  %456 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 2
  %457 = load i32, i32* %456, align 8
  %458 = zext i32 %457 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %455, i64 %458) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %453) #15
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %452, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %474, label %461

461:                                              ; preds = %443
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 0
  %467 = load i32, i32* %466, align 4
  br i1 %465, label %468, label %470

468:                                              ; preds = %461
  %469 = add i32 %467, -1
  store i32 %469, i32* %466, align 4
  br label %470

470:                                              ; preds = %468, %461
  %471 = phi i32 [ %469, %468 ], [ %467, %461 ]
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %470
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %459) #15
  br label %474

474:                                              ; preds = %443, %470, %473
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %450) #15
  %475 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_force_taller_select_popup_enabled_E, align 1, !range !4
  %476 = icmp eq i8 %475, 0
  br i1 %476, label %477, label %502

477:                                              ; preds = %474
  %478 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %478) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #15
  %479 = bitcast %"class.WTF::StringUTF8Adaptor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %479) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %479, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %26, i32 0) #15
  %480 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 1
  %481 = load i8*, i8** %480, align 8
  %482 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 2
  %483 = load i32, i32* %482, align 8
  %484 = zext i32 %483 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %481, i64 %484) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %479) #15
  %485 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %485, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, null
  br i1 %487, label %501, label %488

488:                                              ; preds = %477
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %486) #15
  br label %501

501:                                              ; preds = %477, %497, %500
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %478) #15
  br label %502

502:                                              ; preds = %474, %501
  %503 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %503) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.10, i64 0, i64 0), i64 86) #15
  %504 = bitcast %"class.WTF::StringUTF8Adaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %504) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %504, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %27, i32 0) #15
  %505 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 1
  %506 = load i8*, i8** %505, align 8
  %507 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 2
  %508 = load i32, i32* %507, align 8
  %509 = zext i32 %508 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %506, i64 %509) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %504) #15
  %510 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %510, align 8
  %512 = icmp eq %"class.WTF::StringImpl"* %511, null
  br i1 %512, label %526, label %513

513:                                              ; preds = %502
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 0
  %519 = load i32, i32* %518, align 4
  br i1 %517, label %520, label %522

520:                                              ; preds = %513
  %521 = add i32 %519, -1
  store i32 %521, i32* %518, align 4
  br label %522

522:                                              ; preds = %520, %513
  %523 = phi i32 [ %521, %520 ], [ %519, %513 ]
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %526

525:                                              ; preds = %522
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %511) #15
  br label %526

526:                                              ; preds = %502, %522, %525
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %503) #15
  %527 = call i32 @_ZNK5blink17HTMLSelectElement17SelectedListIndexEv(%"class.blink::HTMLSelectElement"* %36) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKciPN3WTF12SharedBufferE(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 %527, %"class.WTF::SharedBuffer"* %1) #15
  %528 = load i32, i32* %96, align 8
  %529 = and i32 %528, 12
  %530 = icmp eq i32 %529, 0
  %531 = and i32 %528, 1
  %532 = icmp eq i32 %531, 0
  br i1 %530, label %533, label %542

533:                                              ; preds = %526
  br i1 %532, label %539, label %534

534:                                              ; preds = %533
  %535 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %151, align 8
  %536 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %535, i64 0, i32 1, i32 0, i32 0
  %537 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %536, align 8
  %538 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %537, i64 0, i32 2, i32 0
  br label %554

539:                                              ; preds = %533
  %540 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %152, align 8
  %541 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %540, i64 0, i32 2, i32 0
  br label %554

542:                                              ; preds = %526
  br i1 %532, label %546, label %543

543:                                              ; preds = %542
  %544 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %151, align 8
  %545 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %544, i64 0, i32 1, i32 0, i32 0
  br label %546

546:                                              ; preds = %542, %543
  %547 = phi %"class.blink::NodeRenderingData"** [ %545, %543 ], [ %152, %542 ]
  %548 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %547, align 8
  %549 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %548, i64 0, i32 1
  %550 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %549, align 8
  %551 = icmp eq %"class.blink::LayoutObject"* %550, null
  br i1 %551, label %557, label %552

552:                                              ; preds = %546
  %553 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %550, i64 0, i32 5, i32 0
  br label %554

554:                                              ; preds = %552, %539, %534
  %555 = phi %"class.blink::ComputedStyle"** [ %538, %534 ], [ %541, %539 ], [ %553, %552 ]
  %556 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %555, align 8
  br label %557

557:                                              ; preds = %554, %546
  %558 = phi %"class.blink::ComputedStyle"* [ null, %546 ], [ %556, %554 ]
  %559 = bitcast %"class.blink::InternalPopupMenu::ItemIterationContext"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %559) #15
  %560 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %28, i64 0, i32 1
  %561 = bitcast %"class.blink::Color"* %560 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %561, i8 -86, i64 32, i1 false)
  %562 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %28, i64 0, i32 0
  store %"class.blink::ComputedStyle"* %558, %"class.blink::ComputedStyle"** %562, align 8
  %563 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #15
  %564 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %558, %"class.blink::CSSProperty"* dereferenceable(24) %563) #15
  %565 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %28, i64 0, i32 1, i32 0
  store i32 %564, i32* %565, align 8
  %566 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %28, i64 0, i32 3
  store i32 0, i32* %566, align 8
  %567 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %28, i64 0, i32 4
  store i8 0, i8* %567, align 4
  %568 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %28, i64 0, i32 5
  store %"class.WTF::SharedBuffer"* %1, %"class.WTF::SharedBuffer"** %568, align 8
  %569 = call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #15
  %570 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %558, i64 0, i32 0, i32 9
  %571 = bitcast [20 x i8]* %570 to i160*
  %572 = load i160, i160* %571, align 8
  %573 = lshr i160 %572, 114
  %574 = trunc i160 %573 to i32
  %575 = and i32 %574, 1
  %576 = bitcast %"class.blink::LayoutTheme"* %569 to i32 (%"class.blink::LayoutTheme"*, i32, i32)***
  %577 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)**, i32 (%"class.blink::LayoutTheme"*, i32, i32)*** %576, align 8
  %578 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %577, i64 17
  %579 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %578, align 8
  %580 = call i32 %579(%"class.blink::LayoutTheme"* %569, i32 113, i32 %575) #15
  %581 = load i32, i32* %565, align 8
  %582 = icmp eq i32 %580, %581
  br i1 %582, label %583, label %594

583:                                              ; preds = %557
  %584 = call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #15
  %585 = load i160, i160* %571, align 8
  %586 = lshr i160 %585, 114
  %587 = trunc i160 %586 to i32
  %588 = and i32 %587, 1
  %589 = bitcast %"class.blink::LayoutTheme"* %584 to i32 (%"class.blink::LayoutTheme"*, i32, i32)***
  %590 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)**, i32 (%"class.blink::LayoutTheme"*, i32, i32)*** %589, align 8
  %591 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %590, i64 17
  %592 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %591, align 8
  %593 = call i32 %592(%"class.blink::LayoutTheme"* %584, i32 15, i32 %588) #15
  store i32 %593, i32* %565, align 8
  br label %594

594:                                              ; preds = %557, %583
  call void @_ZN5blink17InternalPopupMenu20ItemIterationContext18SerializeBaseStyleEv(%"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull %28)
  %595 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %595) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i64 12) #15
  %596 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %596) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %596, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %29, i32 0) #15
  %597 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %598 = load i8*, i8** %597, align 8
  %599 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %600 = load i32, i32* %599, align 8
  %601 = zext i32 %600 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %598, i64 %601) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %596) #15
  %602 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %603 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %602, align 8
  %604 = icmp eq %"class.WTF::StringImpl"* %603, null
  br i1 %604, label %618, label %605

605:                                              ; preds = %594
  %606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %607 = load atomic i32, i32* %606 monotonic, align 4
  %608 = and i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 0
  %611 = load i32, i32* %610, align 4
  br i1 %609, label %612, label %614

612:                                              ; preds = %605
  %613 = add i32 %611, -1
  store i32 %613, i32* %610, align 4
  br label %614

614:                                              ; preds = %612, %605
  %615 = phi i32 [ %613, %612 ], [ %611, %605 ]
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %618

617:                                              ; preds = %614
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %603) #15
  br label %618

618:                                              ; preds = %594, %614, %617
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %595) #15
  %619 = call dereferenceable(16) %"class.blink::HeapVector.1676"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"* %36) #15
  %620 = load i32, i32* %566, align 8
  %621 = getelementptr inbounds %"class.blink::HeapVector.1676", %"class.blink::HeapVector.1676"* %619, i64 0, i32 0, i32 0, i32 0, i32 2
  %622 = load i32, i32* %621, align 4
  %623 = icmp ult i32 %620, %622
  br i1 %623, label %624, label %705

624:                                              ; preds = %618
  %625 = getelementptr inbounds %"class.blink::HeapVector.1676", %"class.blink::HeapVector.1676"* %619, i64 0, i32 0
  %626 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %627 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %626, i64 0, i32 0, i32 0, i32 0
  %628 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %629 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %628, i64 0, i32 0, i32 0, i32 0
  %630 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE, align 8
  %631 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %630, i64 0, i32 0, i32 0, i32 0
  br label %632

632:                                              ; preds = %624, %700
  %633 = phi i32 [ %620, %624 ], [ %702, %700 ]
  %634 = call dereferenceable(8) %"class.blink::Member.1682"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1679"* %625, i32 %633) #15
  %635 = getelementptr inbounds %"class.blink::Member.1682", %"class.blink::Member.1682"* %634, i64 0, i32 0, i32 0
  %636 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %635, align 8
  %637 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %636, i64 0, i32 0, i32 0, i32 0
  %638 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %637) #15
  %639 = icmp eq %"class.blink::ContainerNode"* %638, null
  br i1 %639, label %656, label %640

640:                                              ; preds = %632
  %641 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %638, i64 0, i32 0, i32 1
  %642 = load i32, i32* %641, align 8
  %643 = and i32 %642, 48
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %656

645:                                              ; preds = %640
  %646 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %638, i64 0, i32 0
  %647 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %627, align 8
  %648 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %646, i64 1, i32 2
  %649 = bitcast %"class.blink::Member.5"* %648 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %650 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %649, align 8
  %651 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %650, i64 0, i32 3, i32 0, i32 0, i32 0
  %652 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %651, align 8
  %653 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %647, i64 0, i32 3, i32 0, i32 0, i32 0
  %654 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %653, align 8
  %655 = icmp eq %"class.WTF::StringImpl"* %652, %654
  br i1 %655, label %657, label %656

656:                                              ; preds = %640, %632, %645
  call void @_ZN5blink17InternalPopupMenu20ItemIterationContext22FinishGroupIfNecessaryEv(%"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull %28)
  br label %657

657:                                              ; preds = %656, %645
  %658 = icmp eq %"class.blink::HTMLElement"* %636, null
  br i1 %658, label %700, label %659

659:                                              ; preds = %657
  %660 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %636, i64 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i32, i32* %660, align 8
  %662 = and i32 %661, 48
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %664, label %700

664:                                              ; preds = %659
  %665 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %629, align 8
  %666 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %637, i64 1, i32 2
  %667 = bitcast %"class.blink::Member.5"* %666 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %668 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %667, align 8
  %669 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %668, i64 0, i32 3, i32 0, i32 0, i32 0
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %669, align 8
  %671 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %665, i64 0, i32 3, i32 0, i32 0, i32 0
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %671, align 8
  %673 = icmp eq %"class.WTF::StringImpl"* %670, %672
  br i1 %673, label %674, label %676

674:                                              ; preds = %664
  %675 = bitcast %"class.blink::HTMLElement"* %636 to %"class.blink::HTMLOptionElement"*
  call void @_ZN5blink17InternalPopupMenu9AddOptionERNS0_20ItemIterationContextERNS_17HTMLOptionElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull dereferenceable(40) %28, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %675)
  br label %700

676:                                              ; preds = %664
  %677 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %627, align 8
  %678 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %637, i64 1, i32 2
  %679 = bitcast %"class.blink::Member.5"* %678 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %680 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %679, align 8
  %681 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %680, i64 0, i32 3, i32 0, i32 0, i32 0
  %682 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %681, align 8
  %683 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %677, i64 0, i32 3, i32 0, i32 0, i32 0
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %683, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %682, %684
  br i1 %685, label %686, label %688

686:                                              ; preds = %676
  %687 = bitcast %"class.blink::HTMLElement"* %636 to %"class.blink::HTMLOptGroupElement"*
  call void @_ZN5blink17InternalPopupMenu11AddOptGroupERNS0_20ItemIterationContextERNS_19HTMLOptGroupElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull dereferenceable(40) %28, %"class.blink::HTMLOptGroupElement"* nonnull dereferenceable(104) %687)
  br label %700

688:                                              ; preds = %676
  %689 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %631, align 8
  %690 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %637, i64 1, i32 2
  %691 = bitcast %"class.blink::Member.5"* %690 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %692 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %691, align 8
  %693 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %692, i64 0, i32 3, i32 0, i32 0, i32 0
  %694 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %693, align 8
  %695 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %689, i64 0, i32 3, i32 0, i32 0, i32 0
  %696 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %695, align 8
  %697 = icmp eq %"class.WTF::StringImpl"* %694, %696
  br i1 %697, label %698, label %700

698:                                              ; preds = %688
  %699 = bitcast %"class.blink::HTMLElement"* %636 to %"class.blink::HTMLHRElement"*
  call void @_ZN5blink17InternalPopupMenu12AddSeparatorERNS0_20ItemIterationContextERNS_13HTMLHRElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull dereferenceable(40) %28, %"class.blink::HTMLHRElement"* nonnull dereferenceable(104) %699)
  br label %700

700:                                              ; preds = %659, %657, %688, %686, %698, %674
  %701 = load i32, i32* %566, align 8
  %702 = add i32 %701, 1
  store i32 %702, i32* %566, align 8
  %703 = load i32, i32* %621, align 4
  %704 = icmp ult i32 %702, %703
  br i1 %704, label %632, label %705

705:                                              ; preds = %700, %618
  call void @_ZN5blink17InternalPopupMenu20ItemIterationContext22FinishGroupIfNecessaryEv(%"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull %28)
  %706 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %706) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3) #15
  %707 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %707) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %707, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %30, i32 0) #15
  %708 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %709 = load i8*, i8** %708, align 8
  %710 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %711 = load i32, i32* %710, align 8
  %712 = zext i32 %711 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %709, i64 %712) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %707) #15
  %713 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %714 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %713, align 8
  %715 = icmp eq %"class.WTF::StringImpl"* %714, null
  br i1 %715, label %729, label %716

716:                                              ; preds = %705
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %718 = load atomic i32, i32* %717 monotonic, align 4
  %719 = and i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 0
  %722 = load i32, i32* %721, align 4
  br i1 %720, label %723, label %725

723:                                              ; preds = %716
  %724 = add i32 %722, -1
  store i32 %724, i32* %721, align 4
  br label %725

725:                                              ; preds = %723, %716
  %726 = phi i32 [ %724, %723 ], [ %722, %716 ]
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %729

728:                                              ; preds = %725
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %714) #15
  br label %729

729:                                              ; preds = %705, %725, %728
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %706) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKNS_7IntRectEPN3WTF12SharedBufferE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), %"class.blink::IntRect"* nonnull dereferenceable(16) %14, %"class.WTF::SharedBuffer"* %1) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKciPN3WTF12SharedBufferE(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 1, %"class.WTF::SharedBuffer"* %1) #15
  %730 = fpext float %71 to double
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcdPN3WTF12SharedBufferE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), double %730, %"class.WTF::SharedBuffer"* %1) #15
  %731 = load i160, i160* %571, align 8
  %732 = and i160 %731, 41538374868278621028243970633760768
  %733 = icmp eq i160 %732, 0
  %734 = xor i1 %733, true
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcbPN3WTF12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i1 zeroext %734, %"class.WTF::SharedBuffer"* %1) #15
  br i1 %733, label %737, label %735

735:                                              ; preds = %729
  %736 = call i32 @_ZNK5blink17HTMLSelectElement18ClientPaddingRightEv(%"class.blink::HTMLSelectElement"* %36) #15
  br label %739

737:                                              ; preds = %729
  %738 = call i32 @_ZNK5blink17HTMLSelectElement17ClientPaddingLeftEv(%"class.blink::HTMLSelectElement"* %36) #15
  br label %739

739:                                              ; preds = %737, %735
  %740 = phi i32 [ %736, %735 ], [ %738, %737 ]
  %741 = sitofp i32 %740 to double
  %742 = fmul double %741, 1.562500e-02
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcdPN3WTF12SharedBufferE(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), double %742, %"class.WTF::SharedBuffer"* %1) #15
  %743 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %743) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i64 3) #15
  %744 = bitcast %"class.WTF::StringUTF8Adaptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %744) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %744, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %31, i32 0) #15
  %745 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 1
  %746 = load i8*, i8** %745, align 8
  %747 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 2
  %748 = load i32, i32* %747, align 8
  %749 = zext i32 %748 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %746, i64 %749) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %744) #15
  %750 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %751 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %750, align 8
  %752 = icmp eq %"class.WTF::StringImpl"* %751, null
  br i1 %752, label %766, label %753

753:                                              ; preds = %739
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %751, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %751, i64 0, i32 0
  %759 = load i32, i32* %758, align 4
  br i1 %757, label %760, label %762

760:                                              ; preds = %753
  %761 = add i32 %759, -1
  store i32 %761, i32* %758, align 4
  br label %762

762:                                              ; preds = %760, %753
  %763 = phi i32 [ %761, %760 ], [ %759, %753 ]
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %765, label %766

765:                                              ; preds = %762
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %751) #15
  br label %766

766:                                              ; preds = %739, %762, %765
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %743) #15
  %767 = bitcast %"class.WTF::Vector.1709"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %767) #15
  call void @_ZN5blink21ChooserResourceLoader17GetPickerCommonJSEv(%"class.WTF::Vector.1709"* nonnull sret %32) #15
  %768 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %32, i64 0, i32 0, i32 0, i32 0
  %769 = load i8*, i8** %768, align 8
  %770 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %32, i64 0, i32 0, i32 0, i32 2
  %771 = load i32, i32* %770, align 4
  %772 = zext i32 %771 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %769, i64 %772) #15
  %773 = load i8*, i8** %768, align 8
  %774 = icmp eq i8* %773, null
  br i1 %774, label %780, label %775, !prof !3

775:                                              ; preds = %766
  %776 = load i32, i32* %770, align 4
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %779, label %778, !prof !2

778:                                              ; preds = %775
  store i32 0, i32* %770, align 4
  br label %779

779:                                              ; preds = %778, %775
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %773) #15
  store i8* null, i8** %768, align 8
  br label %780

780:                                              ; preds = %766, %779
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %767) #15
  %781 = bitcast %"class.WTF::Vector.1709"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %781) #15
  call void @_ZN5blink21ChooserResourceLoader15GetListPickerJSEv(%"class.WTF::Vector.1709"* nonnull sret %33) #15
  %782 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %33, i64 0, i32 0, i32 0, i32 0
  %783 = load i8*, i8** %782, align 8
  %784 = getelementptr inbounds %"class.WTF::Vector.1709", %"class.WTF::Vector.1709"* %33, i64 0, i32 0, i32 0, i32 2
  %785 = load i32, i32* %784, align 4
  %786 = zext i32 %785 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %783, i64 %786) #15
  %787 = load i8*, i8** %782, align 8
  %788 = icmp eq i8* %787, null
  br i1 %788, label %794, label %789, !prof !3

789:                                              ; preds = %780
  %790 = load i32, i32* %784, align 4
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %793, label %792, !prof !2

792:                                              ; preds = %789
  store i32 0, i32* %784, align 4
  br label %793

793:                                              ; preds = %792, %789
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %787) #15
  store i8* null, i8** %782, align 8
  br label %794

794:                                              ; preds = %780, %793
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %781) #15
  %795 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %795) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %34, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i64 17) #15
  %796 = bitcast %"class.WTF::StringUTF8Adaptor"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %796) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %796, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %34, i32 0) #15
  %797 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %12, i64 0, i32 1
  %798 = load i8*, i8** %797, align 8
  %799 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %12, i64 0, i32 2
  %800 = load i32, i32* %799, align 8
  %801 = zext i32 %800 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %1, i8* %798, i64 %801) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %796) #15
  %802 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %803 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %802, align 8
  %804 = icmp eq %"class.WTF::StringImpl"* %803, null
  br i1 %804, label %818, label %805

805:                                              ; preds = %794
  %806 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %803, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %807 = load atomic i32, i32* %806 monotonic, align 4
  %808 = and i32 %807, 2
  %809 = icmp eq i32 %808, 0
  %810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %803, i64 0, i32 0
  %811 = load i32, i32* %810, align 4
  br i1 %809, label %812, label %814

812:                                              ; preds = %805
  %813 = add i32 %811, -1
  store i32 %813, i32* %810, align 4
  br label %814

814:                                              ; preds = %812, %805
  %815 = phi i32 [ %813, %812 ], [ %811, %805 ]
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %817, label %818

817:                                              ; preds = %814
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %803) #15
  br label %818

818:                                              ; preds = %794, %814, %817
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %795) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %559) #15
  %819 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 4, i32 1, i32 0, i32 0
  %820 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %819, align 8
  %821 = icmp eq %"class.WTF::StringImpl"* %820, null
  br i1 %821, label %835, label %822

822:                                              ; preds = %818
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %820, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %824 = load atomic i32, i32* %823 monotonic, align 4
  %825 = and i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %820, i64 0, i32 0
  %828 = load i32, i32* %827, align 4
  br i1 %826, label %829, label %831

829:                                              ; preds = %822
  %830 = add i32 %828, -1
  store i32 %830, i32* %827, align 4
  br label %831

831:                                              ; preds = %829, %822
  %832 = phi i32 [ %830, %829 ], [ %828, %822 ]
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %835

834:                                              ; preds = %831
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %820) #15
  br label %835

835:                                              ; preds = %818, %831, %834
  %836 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 3, i32 1, i32 0, i32 0
  %837 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %836, align 8
  %838 = icmp eq %"class.WTF::StringImpl"* %837, null
  br i1 %838, label %852, label %839

839:                                              ; preds = %835
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %837, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %841 = load atomic i32, i32* %840 monotonic, align 4
  %842 = and i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %837, i64 0, i32 0
  %845 = load i32, i32* %844, align 4
  br i1 %843, label %846, label %848

846:                                              ; preds = %839
  %847 = add i32 %845, -1
  store i32 %847, i32* %844, align 4
  br label %848

848:                                              ; preds = %846, %839
  %849 = phi i32 [ %847, %846 ], [ %845, %839 ]
  %850 = icmp eq i32 %849, 0
  br i1 %850, label %851, label %852

851:                                              ; preds = %848
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %837) #15
  br label %852

852:                                              ; preds = %851, %848, %835
  %853 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 2, i32 1, i32 0, i32 0
  %854 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %853, align 8
  %855 = icmp eq %"class.WTF::StringImpl"* %854, null
  br i1 %855, label %869, label %856

856:                                              ; preds = %852
  %857 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %854, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %858 = load atomic i32, i32* %857 monotonic, align 4
  %859 = and i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %854, i64 0, i32 0
  %862 = load i32, i32* %861, align 4
  br i1 %860, label %863, label %865

863:                                              ; preds = %856
  %864 = add i32 %862, -1
  store i32 %864, i32* %861, align 4
  br label %865

865:                                              ; preds = %863, %856
  %866 = phi i32 [ %864, %863 ], [ %862, %856 ]
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %868, label %869

868:                                              ; preds = %865
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %854) #15
  br label %869

869:                                              ; preds = %868, %865, %852
  %870 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 1, i32 1, i32 0, i32 0
  %871 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %870, align 8
  %872 = icmp eq %"class.WTF::StringImpl"* %871, null
  br i1 %872, label %886, label %873

873:                                              ; preds = %869
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %871, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %875 = load atomic i32, i32* %874 monotonic, align 4
  %876 = and i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %871, i64 0, i32 0
  %879 = load i32, i32* %878, align 4
  br i1 %877, label %880, label %882

880:                                              ; preds = %873
  %881 = add i32 %879, -1
  store i32 %881, i32* %878, align 4
  br label %882

882:                                              ; preds = %880, %873
  %883 = phi i32 [ %881, %880 ], [ %879, %873 ]
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %885, label %886

885:                                              ; preds = %882
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %871) #15
  br label %886

886:                                              ; preds = %885, %882, %869
  %887 = getelementptr inbounds [5 x %"struct.std::__1::pair.2947"], [5 x %"struct.std::__1::pair.2947"]* %18, i64 0, i64 0, i32 1, i32 0, i32 0
  %888 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %887, align 8
  %889 = icmp eq %"class.WTF::StringImpl"* %888, null
  br i1 %889, label %903, label %890

890:                                              ; preds = %886
  %891 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %892 = load atomic i32, i32* %891 monotonic, align 4
  %893 = and i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 0
  %896 = load i32, i32* %895, align 4
  br i1 %894, label %897, label %899

897:                                              ; preds = %890
  %898 = add i32 %896, -1
  store i32 %898, i32* %895, align 4
  br label %899

899:                                              ; preds = %897, %890
  %900 = phi i32 [ %898, %897 ], [ %896, %890 ]
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %903

902:                                              ; preds = %899
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %888) #15
  br label %903

903:                                              ; preds = %902, %899, %886
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %112) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare { i64, i64 } @_ZNK5blink7Element29VisibleBoundsInVisualViewportEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject27GetCachedPseudoElementStyleENS_8PseudoIdE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu30AppendOwnerElementPseudoStylesERKN3WTF6StringEPNS1_12SharedBufferERKNS_13ComputedStyleE(%"class.blink::InternalPopupMenu"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::SharedBuffer"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %9 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %63, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #15
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %26
  tail call void @llvm.trap() #15
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4
  br label %36

36:                                               ; preds = %19, %34
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = load atomic i32, i32* %20 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  br i1 %40, label %42, label %52

42:                                               ; preds = %36
  %43 = zext i32 %37 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #15
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %42
  tail call void @llvm.trap() #15
  unreachable

50:                                               ; preds = %42
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %36
  %53 = phi i32 [ %51, %50 ], [ %37, %36 ]
  %54 = load atomic i32, i32* %20 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = add i32 %53, -1
  store i32 %58, i32* %41, align 4
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i32 [ %58, %57 ], [ %53, %52 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %63

63:                                               ; preds = %4, %59, %62
  %64 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i64 0, i64 0), i8** %65, align 8
  %66 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %11)
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %67, align 8
  %68 = bitcast %"class.WTF::StringUTF8Adaptor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %68) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10, i32 0) #15
  %69 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %9, i64 0, i32 1
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %9, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = zext i32 %72 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %2, i8* %70, i64 %73) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %68) #15
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #15
  br label %89

89:                                               ; preds = %63, %85, %88
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #15
  br label %105

105:                                              ; preds = %89, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %106 = bitcast %"class.WTF::String"* %12 to i8*
  %107 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %108 = bitcast %"class.WTF::String"* %7 to i8*
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  %115 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %116 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  br label %142

117:                                              ; preds = %198
  %118 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0), i64 2) #15
  %119 = bitcast %"class.WTF::StringUTF8Adaptor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %119) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %13, i32 0) #15
  %120 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 1
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 2
  %123 = load i32, i32* %122, align 8
  %124 = zext i32 %123 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %2, i8* %121, i64 %124) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %119) #15
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %117
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #15
  br label %141

141:                                              ; preds = %117, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #15
  ret void

142:                                              ; preds = %105, %198
  %143 = phi i32* [ getelementptr inbounds ([10 x i32], [10 x i32]* @_ZZN5blink17InternalPopupMenu30AppendOwnerElementPseudoStylesERKN3WTF6StringEPNS1_12SharedBufferERKNS_13ComputedStyleEE17serialize_targets, i64 0, i64 0), %105 ], [ %199, %198 ]
  %144 = load i32, i32* %143, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #15
  %145 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %144) #15
  %146 = call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %145, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.blink::LayoutObject"* null, i1 zeroext false) #15
  %147 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %145, i64 0, i32 0
  %148 = bitcast %"class.blink::CSSProperty"* %145 to i8* (%"class.blink::CSSUnresolvedProperty"*)***
  %149 = load i8* (%"class.blink::CSSUnresolvedProperty"*)**, i8* (%"class.blink::CSSUnresolvedProperty"*)*** %148, align 8
  %150 = getelementptr inbounds i8* (%"class.blink::CSSUnresolvedProperty"*)*, i8* (%"class.blink::CSSUnresolvedProperty"*)** %149, i64 3
  %151 = load i8* (%"class.blink::CSSUnresolvedProperty"*)*, i8* (%"class.blink::CSSUnresolvedProperty"*)** %150, align 8
  %152 = call i8* %151(%"class.blink::CSSUnresolvedProperty"* %147) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #15
  %153 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %146) #15
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %109, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %7, i32 0) #15
  %154 = load i8, i8* %111, align 1
  %155 = icmp slt i8 %154, 0
  %156 = load i8*, i8** %112, align 8
  %157 = select i1 %155, i8* %156, i8* %107
  %158 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0), i8* %152, i8* %157) #15
  %159 = load i8, i8* %111, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %142
  %162 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %162) #16
  br label %163

163:                                              ; preds = %161, %142
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #15
  br label %179

179:                                              ; preds = %163, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #15
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %113, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %114) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %12, i32 0) #15
  %180 = load i8*, i8** %115, align 8
  %181 = load i32, i32* %116, align 8
  %182 = zext i32 %181 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %2, i8* %180, i64 %182) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %114) #15
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #15
  br label %198

198:                                              ; preds = %179, %194, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #15
  %199 = getelementptr inbounds i32, i32* %143, i64 1
  %200 = icmp eq i32* %199, getelementptr inbounds ([10 x i32], [10 x i32]* @_ZZN5blink17InternalPopupMenu30AppendOwnerElementPseudoStylesERKN3WTF6StringEPNS1_12SharedBufferERKNS_13ComputedStyleEE17serialize_targets, i64 1, i64 0)
  br i1 %200, label %117, label %142
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3190", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3190", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.3190", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.3190"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #15
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3190"* nonnull %6, i8* %16) #15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #15
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #15
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #15
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.3190"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #15
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3190"* nonnull %5, i8* %45) #15
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3189"* nonnull %46, i8* %25) #15
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3190"* nonnull %5, i8* %49) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #15
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #15
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #15
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #15
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #15
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.3190"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #15
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3190"* nonnull %3, i8* %105) #15
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3189"* nonnull %106, i16* %85) #15
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3190"* nonnull %3, i16* %109) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #15
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #15
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #15
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #15
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #15
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare void @_ZN5blink21ChooserResourceLoader25GetPickerCommonStyleSheetEv(%"class.WTF::Vector.1709"* sret) local_unnamed_addr #1

declare void @_ZN5blink21ChooserResourceLoader23GetListPickerStyleSheetEv(%"class.WTF::Vector.1709"* sret) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #5

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

declare void @_ZN5blink15PagePopupClient11AddPropertyEPKciPN3WTF12SharedBufferE(i8*, i32, %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare i32 @_ZNK5blink17HTMLSelectElement17SelectedListIndexEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InternalPopupMenu20ItemIterationContext18SerializeBaseStyleEv(%"class.blink::InternalPopupMenu::ItemIterationContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %3 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::Color", align 4
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), i64 12) #15
  %19 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 5
  %20 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  %21 = bitcast %"class.WTF::StringUTF8Adaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 0) #15
  %22 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %20, i8* %23, i64 %26) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #15
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #15
  br label %43

43:                                               ; preds = %1, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %44 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #15
  %45 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 1
  %46 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %45) #15
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %47, align 8
  %48 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::SharedBuffer"* %48) #15
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %43, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #15
  %65 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #15
  %66 = bitcast %"class.blink::Color"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #15
  %67 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 4
  %68 = load i8, i8* %67, align 4, !range !4
  %69 = icmp eq i8 %68, 0
  %70 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 2
  %71 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 0
  %72 = select i1 %69, %"class.blink::ComputedStyle"** %71, %"class.blink::ComputedStyle"** %70
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #15
  %75 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %73, %"class.blink::CSSProperty"* dereferenceable(24) %74) #15
  %76 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %10, i64 0, i32 0
  store i32 %75, i32* %76, align 4
  %77 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* nonnull %10) #15
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::SharedBuffer"* %79) #15
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #15
  br label %95

95:                                               ; preds = %64, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #15
  %96 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #15
  %97 = load i8, i8* %67, align 4, !range !4
  %98 = icmp eq i8 %97, 0
  %99 = select i1 %98, %"class.blink::ComputedStyle"** %71, %"class.blink::ComputedStyle"** %70
  %100 = bitcast %"class.blink::ComputedStyle"** %99 to %"class.blink::ComputedStyleBase"**
  %101 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %101, i64 0, i32 9
  %103 = bitcast [20 x i8]* %102 to i160*
  %104 = load i160, i160* %103, align 8
  %105 = lshr i160 %104, 83
  %106 = trunc i160 %105 to i32
  %107 = and i32 %106, 7
  switch i32 %107, label %109 [
    i32 0, label %111
    i32 4, label %108
  ]

108:                                              ; preds = %95
  br label %111

109:                                              ; preds = %95
  %110 = add nuw nsw i32 %107, 444
  br label %111

111:                                              ; preds = %95, %108, %109
  %112 = phi i32 [ %110, %109 ], [ 448, %108 ], [ 3, %95 ]
  %113 = call i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32 %112) #15
  %114 = icmp eq i8* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = call i64 @strlen(i8* nonnull %113) #17
  br label %117

117:                                              ; preds = %111, %115
  %118 = phi i64 [ %116, %115 ], [ 0, %111 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* %113, i64 %118) #15
  %119 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::SharedBuffer"* %119) #15
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #15
  br label %136

136:                                              ; preds = %117, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #15
  %137 = load i8, i8* %67, align 4, !range !4
  %138 = icmp eq i8 %137, 0
  %139 = select i1 %138, %"class.blink::ComputedStyle"** %71, %"class.blink::ComputedStyle"** %70
  %140 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %140, i64 0, i32 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %142, i64 0, i32 1, i32 0, i32 0
  %144 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %144, i64 0, i32 1, i32 0, i32 5
  %146 = load float, float* %145, align 4
  %147 = fadd float %146, 5.000000e-01
  %148 = fptosi float %147 to i32
  %149 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKciPN3WTF12SharedBufferE(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i32 %148, %"class.WTF::SharedBuffer"* %149) #15
  %150 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #15
  %151 = load i8, i8* %67, align 4, !range !4
  %152 = icmp eq i8 %151, 0
  %153 = select i1 %152, %"class.blink::ComputedStyle"** %71, %"class.blink::ComputedStyle"** %70
  %154 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %154, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %156, i64 0, i32 1, i32 0, i32 0
  %158 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %158, i64 0, i32 1, i32 0, i32 10, i32 2, i32 0
  %160 = load i16, i16* %159, align 4
  %161 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %167, !prof !5

163:                                              ; preds = %136
  %164 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %167, label %166

166:                                              ; preds = %163
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %167

167:                                              ; preds = %136, %163, %166
  %168 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %169 = icmp eq i16 %168, %160
  %170 = select i1 %169, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* %170, i64 6) #15
  %171 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::SharedBuffer"* %171) #15
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #15
  br label %188

188:                                              ; preds = %167, %184, %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #15
  %189 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = load i8, i8* %67, align 4, !range !4
  %191 = icmp eq i8 %190, 0
  %192 = select i1 %191, %"class.blink::ComputedStyle"** %71, %"class.blink::ComputedStyle"** %70
  %193 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %193, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %195, i64 0, i32 1, i32 0, i32 0
  %197 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %197, i64 0, i32 1, i32 0, i32 12, i32 0
  %199 = bitcast %"struct.blink::FontDescription::BitFields"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = and i64 %200, 112
  %202 = icmp eq i64 %201, 16
  br i1 %202, label %203, label %204

203:                                              ; preds = %188
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i64 10) #15
  br label %206

204:                                              ; preds = %188
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %205, align 8
  br label %206

206:                                              ; preds = %204, %203
  %207 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::SharedBuffer"* %207) #15
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #15
  br label %224

224:                                              ; preds = %206, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %225 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i64 13) #15
  %226 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  %227 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %227) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %14, i32 0) #15
  %228 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %231 = load i32, i32* %230, align 8
  %232 = zext i32 %231 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %226, i8* %229, i64 %232) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %227) #15
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %224
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #15
  br label %249

249:                                              ; preds = %224, %245, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #15
  %250 = load i8, i8* %67, align 4, !range !4
  %251 = icmp eq i8 %250, 0
  %252 = select i1 %251, %"class.blink::ComputedStyle"** %71, %"class.blink::ComputedStyle"** %70
  %253 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %253, i64 0, i32 0, i32 0, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %255, i64 0, i32 1, i32 0, i32 0
  %257 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %257, i64 0, i32 1, i32 0, i32 0
  %259 = icmp eq %"class.blink::FontFamily"* %258, null
  br i1 %259, label %266, label %260

260:                                              ; preds = %249
  %261 = bitcast %"class.WTF::String"* %15 to i8*
  %262 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  %263 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %264 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %265 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  br label %317

266:                                              ; preds = %317, %344, %249
  %267 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0), i64 1) #15
  %268 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  %269 = bitcast %"class.WTF::StringUTF8Adaptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %269) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %16, i32 0) #15
  %270 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 1
  %271 = load i8*, i8** %270, align 8
  %272 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 2
  %273 = load i32, i32* %272, align 8
  %274 = zext i32 %273 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %268, i8* %271, i64 %274) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %269) #15
  %275 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %266
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #15
  br label %291

291:                                              ; preds = %266, %287, %290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #15
  %292 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #15
  %293 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  %294 = bitcast %"class.WTF::StringUTF8Adaptor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %294) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %294, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %17, i32 0) #15
  %295 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %2, i64 0, i32 1
  %296 = load i8*, i8** %295, align 8
  %297 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %2, i64 0, i32 2
  %298 = load i32, i32* %297, align 8
  %299 = zext i32 %298 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %293, i8* %296, i64 %299) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %294) #15
  %300 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %291
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #15
  br label %316

316:                                              ; preds = %291, %312, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #15
  ret void

317:                                              ; preds = %260, %344
  %318 = phi %"class.blink::FontFamily"* [ %258, %260 ], [ %346, %344 ]
  %319 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @_ZN5blink15PagePopupClient19AddJavaScriptStringERKN3WTF6StringEPNS1_12SharedBufferE(%"class.WTF::String"* dereferenceable(8) %319, %"class.WTF::SharedBuffer"* %320) #15
  %321 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %318, i64 0, i32 1, i32 0
  %322 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %321, align 8
  %323 = icmp eq %"class.blink::SharedFontFamily"* %322, null
  br i1 %323, label %266, label %324

324:                                              ; preds = %317
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i64 1) #15
  %325 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %262) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %15, i32 0) #15
  %326 = load i8*, i8** %263, align 8
  %327 = load i32, i32* %264, align 8
  %328 = zext i32 %327 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %325, i8* %326, i64 %328) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %262) #15
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %324
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #15
  br label %344

344:                                              ; preds = %343, %340, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #15
  %345 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %321, align 8
  %346 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %345, i64 0, i32 0
  %347 = icmp eq %"class.blink::SharedFontFamily"* %345, null
  br i1 %347, label %266, label %317
}

declare dereferenceable(16) %"class.blink::HeapVector.1676"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InternalPopupMenu20ItemIterationContext22FinishGroupIfNecessaryEv(%"class.blink::InternalPopupMenu::ItemIterationContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i64 5) #15
  %9 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 5
  %10 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %11 = bitcast %"class.WTF::StringUTF8Adaptor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 0) #15
  %12 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %2, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %2, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %10, i8* %13, i64 %16) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #15
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %7, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  store i8 0, i8* %4, align 4
  %34 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 2
  store %"class.blink::ComputedStyle"* null, %"class.blink::ComputedStyle"** %34, align 8
  br label %35

35:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu9AddOptionERNS0_20ItemIterationContextERNS_17HTMLOptionElementE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.blink::InternalPopupMenu::ItemIterationContext"* nocapture readonly dereferenceable(40), %"class.blink::HTMLOptionElement"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 5
  %11 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0), i64 1) #15
  %13 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32 0) #15
  %14 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %11, i8* %15, i64 %18) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #15
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %3, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %36 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  %37 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"* %2) #15
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::SharedBuffer"* %11) #15
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #15
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  %55 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcjPN3WTF12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i32 %56, %"class.WTF::SharedBuffer"* %11) #15
  %57 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %2, i64 0, i32 0
  %58 = call %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"* %57) #15
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %97, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %60
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %60
  %73 = phi i32 [ %71, %70 ], [ %69, %60 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #15
  br i1 %63, label %97, label %77

76:                                               ; preds = %72
  br i1 %63, label %97, label %77

77:                                               ; preds = %75, %76
  %78 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  %79 = call %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"* %57) #15
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %80, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::SharedBuffer"* %11) #15
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #15
  br label %96

96:                                               ; preds = %77, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  br label %97

97:                                               ; preds = %54, %75, %76, %96
  %98 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %99 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %100 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %99, align 8
  %101 = icmp eq %"class.blink::ElementData"* %100, null
  br i1 %101, label %152, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %100, i64 0, i32 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.blink::ElementData"* %100 to %"class.blink::UniqueElementData"*
  %109 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %100, i64 1, i32 1
  %110 = bitcast %"class.blink::Member.35"* %109 to %"class.blink::Attribute"**
  %111 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %108, i64 0, i32 2, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  br label %119

114:                                              ; preds = %102
  %115 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %100, i64 1
  %116 = bitcast %"class.blink::ElementData"* %115 to %"class.blink::Attribute"*
  %117 = lshr i32 %104, 1
  %118 = and i32 %117, 268435455
  br label %119

119:                                              ; preds = %114, %107
  %120 = phi %"class.blink::Attribute"* [ %116, %114 ], [ %111, %107 ]
  %121 = phi i32 [ %118, %114 ], [ %113, %107 ]
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %120, i64 %122
  %124 = icmp eq i32 %121, 0
  br i1 %124, label %152, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %98, i64 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %130

130:                                              ; preds = %145, %125
  %131 = phi %"class.blink::Attribute"* [ %120, %125 ], [ %146, %145 ]
  %132 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %132, align 8
  %134 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %133, %127
  br i1 %134, label %148, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %133, i64 0, i32 3, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %137, %138
  br i1 %139, label %140, label %145

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %133, i64 0, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %142, %143
  br i1 %144, label %148, label %145

145:                                              ; preds = %140, %135
  %146 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %131, i64 1
  %147 = icmp eq %"class.blink::Attribute"* %146, %123
  br i1 %147, label %152, label %130

148:                                              ; preds = %140, %130
  %149 = icmp eq %"class.blink::Attribute"* %131, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %131, i64 0, i32 1
  br label %154

152:                                              ; preds = %145, %148, %119, %97
  %153 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %154

154:                                              ; preds = %150, %152
  %155 = phi %"class.WTF::AtomicString"* [ %153, %152 ], [ %151, %150 ]
  %156 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %155, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %155, i64 0, i32 0
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), %"class.WTF::String"* dereferenceable(8) %164, %"class.WTF::SharedBuffer"* %11) #15
  br label %165

165:                                              ; preds = %154, %163, %159
  %166 = call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* %2) #15
  br i1 %166, label %167, label %168

167:                                              ; preds = %165
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcbPN3WTF12SharedBufferE(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i64 0, i64 0), i1 zeroext true, %"class.WTF::SharedBuffer"* %11) #15
  br label %168

168:                                              ; preds = %167, %165
  call void @_ZN5blink17InternalPopupMenu15AddElementStyleERNS0_20ItemIterationContextERNS_11HTMLElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* dereferenceable(40) %1, %"class.blink::HTMLElement"* dereferenceable(104) %57)
  %169 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i64 2) #15
  %170 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %170) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0) #15
  %171 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %172 = load i8*, i8** %171, align 8
  %173 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %174 = load i32, i32* %173, align 8
  %175 = zext i32 %174 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %11, i8* %172, i64 %175) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %170) #15
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %168
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #15
  br label %192

192:                                              ; preds = %168, %188, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu11AddOptGroupERNS0_20ItemIterationContextERNS_19HTMLOptGroupElementE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.blink::InternalPopupMenu::ItemIterationContext"* dereferenceable(40), %"class.blink::HTMLOptGroupElement"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 5
  %11 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i64 0, i64 0), i64 2) #15
  %13 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32 0) #15
  %14 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %11, i8* %15, i64 %18) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #15
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %3, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %36 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i64 0, i64 0), i64 18) #15
  %37 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 0) #15
  %38 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %11, i8* %39, i64 %42) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #15
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #15
  br label %59

59:                                               ; preds = %35, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  %60 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #15
  %61 = call %"class.WTF::StringImpl"* @_ZNK5blink19HTMLOptGroupElement14GroupLabelTextEv(%"class.blink::HTMLOptGroupElement"* %2) #15
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::SharedBuffer"* %11) #15
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #15
  br label %78

78:                                               ; preds = %59, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %79 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #15
  %80 = getelementptr inbounds %"class.blink::HTMLOptGroupElement", %"class.blink::HTMLOptGroupElement"* %2, i64 0, i32 0
  %81 = call %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"* %80) #15
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %82, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::SharedBuffer"* %11) #15
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #15
  br label %98

98:                                               ; preds = %78, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #15
  %99 = getelementptr inbounds %"class.blink::HTMLOptGroupElement", %"class.blink::HTMLOptGroupElement"* %2, i64 0, i32 0, i32 0
  %100 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %101 = getelementptr inbounds %"class.blink::HTMLOptGroupElement", %"class.blink::HTMLOptGroupElement"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %101, align 8
  %103 = icmp eq %"class.blink::ElementData"* %102, null
  br i1 %103, label %154, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %102, i64 0, i32 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %104
  %110 = bitcast %"class.blink::ElementData"* %102 to %"class.blink::UniqueElementData"*
  %111 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %102, i64 1, i32 1
  %112 = bitcast %"class.blink::Member.35"* %111 to %"class.blink::Attribute"**
  %113 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %110, i64 0, i32 2, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  br label %121

116:                                              ; preds = %104
  %117 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %102, i64 1
  %118 = bitcast %"class.blink::ElementData"* %117 to %"class.blink::Attribute"*
  %119 = lshr i32 %106, 1
  %120 = and i32 %119, 268435455
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi %"class.blink::Attribute"* [ %118, %116 ], [ %113, %109 ]
  %123 = phi i32 [ %120, %116 ], [ %115, %109 ]
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %122, i64 %124
  %126 = icmp eq i32 %123, 0
  br i1 %126, label %154, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %100, i64 0, i32 0, i32 0
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %132

132:                                              ; preds = %147, %127
  %133 = phi %"class.blink::Attribute"* [ %122, %127 ], [ %148, %147 ]
  %134 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %134, align 8
  %136 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %135, %129
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %139, %140
  br i1 %141, label %142, label %147

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 4, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %144, %145
  br i1 %146, label %150, label %147

147:                                              ; preds = %142, %137
  %148 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %133, i64 1
  %149 = icmp eq %"class.blink::Attribute"* %148, %125
  br i1 %149, label %154, label %132

150:                                              ; preds = %142, %132
  %151 = icmp eq %"class.blink::Attribute"* %133, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %133, i64 0, i32 1
  br label %156

154:                                              ; preds = %147, %150, %121, %98
  %155 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %156

156:                                              ; preds = %152, %154
  %157 = phi %"class.WTF::AtomicString"* [ %155, %154 ], [ %153, %152 ]
  %158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %157, i64 0, i32 0
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), %"class.WTF::String"* dereferenceable(8) %158, %"class.WTF::SharedBuffer"* %11) #15
  %159 = call zeroext i1 @_ZNK5blink19HTMLOptGroupElement21IsDisabledFormControlEv(%"class.blink::HTMLOptGroupElement"* %2) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcbPN3WTF12SharedBufferE(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i64 0, i64 0), i1 zeroext %159, %"class.WTF::SharedBuffer"* %11) #15
  call void @_ZN5blink17InternalPopupMenu15AddElementStyleERNS0_20ItemIterationContextERNS_11HTMLElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* dereferenceable(40) %1, %"class.blink::HTMLElement"* dereferenceable(104) %80)
  %160 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %161 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %160, align 8
  %162 = call %"class.blink::ComputedStyle"* @_ZNK5blink17HTMLSelectElement17ItemComputedStyleERNS_7ElementE(%"class.blink::HTMLSelectElement"* %161, %"class.blink::Element"* dereferenceable(104) %99) #15
  call void @_ZN5blink17InternalPopupMenu20ItemIterationContext18StartGroupChildrenERKNS_13ComputedStyleE(%"class.blink::InternalPopupMenu::ItemIterationContext"* %1, %"class.blink::ComputedStyle"* dereferenceable(104) %162)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu12AddSeparatorERNS0_20ItemIterationContextERNS_13HTMLHRElementE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.blink::InternalPopupMenu::ItemIterationContext"* nocapture readonly dereferenceable(40), %"class.blink::HTMLHRElement"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 5
  %12 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %11, align 8
  %13 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i64 0, i64 0), i64 2) #15
  %14 = bitcast %"class.WTF::StringUTF8Adaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 0) #15
  %15 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %12, i8* %16, i64 %19) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #15
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %3, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %37 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i64 0, i64 0), i64 19) #15
  %38 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 0) #15
  %39 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = zext i32 %42 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %12, i8* %40, i64 %43) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #15
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #15
  br label %60

60:                                               ; preds = %36, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  %61 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #15
  %62 = getelementptr inbounds %"class.blink::HTMLHRElement", %"class.blink::HTMLHRElement"* %2, i64 0, i32 0
  %63 = call %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"* %62) #15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::SharedBuffer"* %12) #15
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %60, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #15
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLHRElement", %"class.blink::HTMLHRElement"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %82, align 8
  %84 = icmp eq %"class.blink::ElementData"* %83, null
  br i1 %84, label %135, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %83, i64 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.blink::ElementData"* %83 to %"class.blink::UniqueElementData"*
  %92 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %83, i64 1, i32 1
  %93 = bitcast %"class.blink::Member.35"* %92 to %"class.blink::Attribute"**
  %94 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %91, i64 0, i32 2, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  br label %102

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %83, i64 1
  %99 = bitcast %"class.blink::ElementData"* %98 to %"class.blink::Attribute"*
  %100 = lshr i32 %87, 1
  %101 = and i32 %100, 268435455
  br label %102

102:                                              ; preds = %97, %90
  %103 = phi %"class.blink::Attribute"* [ %99, %97 ], [ %94, %90 ]
  %104 = phi i32 [ %101, %97 ], [ %96, %90 ]
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %103, i64 %105
  %107 = icmp eq i32 %104, 0
  br i1 %107, label %135, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %113

113:                                              ; preds = %128, %108
  %114 = phi %"class.blink::Attribute"* [ %103, %108 ], [ %129, %128 ]
  %115 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  %117 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %116, %110
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %120, %121
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 4, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %125, %126
  br i1 %127, label %131, label %128

128:                                              ; preds = %123, %118
  %129 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %114, i64 1
  %130 = icmp eq %"class.blink::Attribute"* %129, %106
  br i1 %130, label %135, label %113

131:                                              ; preds = %123, %113
  %132 = icmp eq %"class.blink::Attribute"* %114, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %114, i64 0, i32 1
  br label %137

135:                                              ; preds = %128, %131, %102, %80
  %136 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %137

137:                                              ; preds = %133, %135
  %138 = phi %"class.WTF::AtomicString"* [ %136, %135 ], [ %134, %133 ]
  %139 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %138, i64 0, i32 0
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), %"class.WTF::String"* dereferenceable(8) %139, %"class.WTF::SharedBuffer"* %12) #15
  %140 = call zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"* %62) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcbPN3WTF12SharedBufferE(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i64 0, i64 0), i1 zeroext %140, %"class.WTF::SharedBuffer"* %12) #15
  call void @_ZN5blink17InternalPopupMenu15AddElementStyleERNS0_20ItemIterationContextERNS_11HTMLElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* dereferenceable(40) %1, %"class.blink::HTMLElement"* dereferenceable(104) %62)
  %141 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #15
  %142 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %142) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %10, i32 0) #15
  %143 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %146 = load i32, i32* %145, align 8
  %147 = zext i32 %146 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %12, i8* %144, i64 %147) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #15
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %137
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #15
  br label %164

164:                                              ; preds = %137, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #15
  ret void
}

declare void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKNS_7IntRectEPN3WTF12SharedBufferE(i8*, %"class.blink::IntRect"* dereferenceable(16), %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare void @_ZN5blink15PagePopupClient11AddPropertyEPKcdPN3WTF12SharedBufferE(i8*, double, %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare void @_ZN5blink15PagePopupClient11AddPropertyEPKcbPN3WTF12SharedBufferE(i8*, i1 zeroext, %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare i32 @_ZNK5blink17HTMLSelectElement18ClientPaddingRightEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink17HTMLSelectElement17ClientPaddingLeftEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare void @_ZN5blink21ChooserResourceLoader17GetPickerCommonJSEv(%"class.WTF::Vector.1709"* sret) local_unnamed_addr #1

declare void @_ZN5blink21ChooserResourceLoader15GetListPickerJSEv(%"class.WTF::Vector.1709"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InternalPopupMenu13WriteDocumentEPN3WTF12SharedBufferE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.WTF::SharedBuffer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %4 = bitcast i8* %3 to %"class.blink::InternalPopupMenu"*
  tail call void @_ZN5blink17InternalPopupMenu13WriteDocumentEPN3WTF12SharedBufferE(%"class.blink::InternalPopupMenu"* %4, %"class.WTF::SharedBuffer"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu15AddElementStyleERNS0_20ItemIterationContextERNS_11HTMLElementE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.blink::InternalPopupMenu::ItemIterationContext"* nocapture readonly dereferenceable(40), %"class.blink::HTMLElement"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %7 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %8 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::Color", align 4
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::Color", align 4
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.blink::FontSelectionValue", align 2
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  %30 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink17HTMLSelectElement17ItemComputedStyleERNS_7ElementE(%"class.blink::HTMLSelectElement"* %28, %"class.blink::Element"* dereferenceable(104) %29) #15
  %31 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 5
  %32 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %31, align 8
  %33 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i64 9) #15
  %34 = bitcast %"class.WTF::StringUTF8Adaptor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0) #15
  %35 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %8, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %32, i8* %36, i64 %39) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #15
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %3, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %57 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %58 = bitcast [20 x i8]* %57 to i160*
  %59 = load i160, i160* %58, align 8
  %60 = and i160 %59, 3802951800684688204490109616128
  %61 = icmp eq i160 %60, 0
  br i1 %61, label %62, label %82

62:                                               ; preds = %56
  %63 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::SharedBuffer"* %32) #15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %62, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #15
  %81 = load i160, i160* %58, align 8
  br label %82

82:                                               ; preds = %80, %56
  %83 = phi i160 [ %81, %80 ], [ %59, %56 ]
  %84 = and i160 %83, 133143986176
  %85 = icmp eq i160 %84, 94489280512
  %86 = lshr i160 %83, 115
  %87 = trunc i160 %86 to i8
  %88 = lshr i160 %83, 86
  %89 = trunc i160 %88 to i32
  br i1 %85, label %90, label %114

90:                                               ; preds = %82
  %91 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 4) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::SharedBuffer"* %32) #15
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #15
  br label %108

108:                                              ; preds = %90, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #15
  %109 = load i160, i160* %58, align 8
  %110 = lshr i160 %109, 115
  %111 = trunc i160 %110 to i8
  %112 = lshr i160 %109, 86
  %113 = trunc i160 %112 to i32
  br label %114

114:                                              ; preds = %108, %82
  %115 = phi i8 [ %111, %108 ], [ %87, %82 ]
  %116 = phi i32 [ %113, %108 ], [ %89, %82 ]
  %117 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 4
  %118 = load i8, i8* %117, align 4, !range !4
  %119 = icmp eq i8 %118, 0
  %120 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 2
  %121 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  %124 = select i1 %119, %"class.blink::ComputedStyle"* %122, %"class.blink::ComputedStyle"* %123
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 9
  %126 = bitcast [20 x i8]* %125 to i160*
  %127 = load i160, i160* %126, align 8
  %128 = lshr i160 %127, 115
  %129 = trunc i160 %128 to i8
  %130 = and i8 %129, 1
  %131 = and i8 %115, 1
  %132 = icmp eq i8 %130, %131
  br i1 %132, label %158, label %133

133:                                              ; preds = %114
  %134 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #15
  %135 = icmp eq i8 %131, 0
  %136 = select i1 %135, [4 x i8]* @.str.28, [4 x i8]* @.str.27
  %137 = getelementptr inbounds [4 x i8], [4 x i8]* %136, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* nonnull %137, i64 3) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::SharedBuffer"* %32) #15
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #15
  br label %154

154:                                              ; preds = %133, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #15
  %155 = load i160, i160* %58, align 8
  %156 = lshr i160 %155, 86
  %157 = trunc i160 %156 to i32
  br label %158

158:                                              ; preds = %114, %154
  %159 = phi i32 [ %116, %114 ], [ %157, %154 ]
  %160 = and i32 %159, 7
  switch i32 %160, label %180 [
    i32 5, label %161
    i32 2, label %161
  ]

161:                                              ; preds = %158, %158
  %162 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0), i64 13) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::SharedBuffer"* %32) #15
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #15
  br label %179

179:                                              ; preds = %161, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #15
  br label %180

180:                                              ; preds = %158, %179
  %181 = bitcast %"class.blink::Color"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #15
  %182 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %14, i64 0, i32 0
  store i32 -1431655766, i32* %182, align 4
  %183 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #15
  %184 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %30, %"class.blink::CSSProperty"* dereferenceable(24) %183) #15
  store i32 %184, i32* %182, align 4
  %185 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #15
  %186 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %124, %"class.blink::CSSProperty"* dereferenceable(24) %185) #15
  %187 = load i32, i32* %182, align 4
  %188 = icmp eq i32 %186, %187
  br i1 %188, label %209, label %189

189:                                              ; preds = %180
  %190 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #15
  %191 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* nonnull %14) #15
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::SharedBuffer"* %32) #15
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #15
  br label %208

208:                                              ; preds = %189, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #15
  br label %209

209:                                              ; preds = %180, %208
  %210 = bitcast %"class.blink::Color"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210) #15
  %211 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %16, i64 0, i32 0
  store i32 -1431655766, i32* %211, align 4
  %212 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #15
  %213 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %30, %"class.blink::CSSProperty"* dereferenceable(24) %212) #15
  store i32 %213, i32* %211, align 4
  %214 = load i8, i8* %117, align 4, !range !4
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %221, label %216

216:                                              ; preds = %209
  %217 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  %218 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #15
  %219 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %217, %"class.blink::CSSProperty"* dereferenceable(24) %218) #15
  %220 = load i32, i32* %211, align 4
  br label %224

221:                                              ; preds = %209
  %222 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %1, i64 0, i32 1, i32 0
  %223 = load i32, i32* %222, align 8
  br label %224

224:                                              ; preds = %216, %221
  %225 = phi i32 [ %220, %216 ], [ %213, %221 ]
  %226 = phi i32 [ %219, %216 ], [ %223, %221 ]
  %227 = icmp ne i32 %226, %225
  %228 = icmp ne i32 %225, 0
  %229 = and i1 %227, %228
  br i1 %229, label %230, label %250

230:                                              ; preds = %224
  %231 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #15
  %232 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* nonnull %16) #15
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %233, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::SharedBuffer"* %32) #15
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #15
  br label %249

249:                                              ; preds = %230, %245, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #15
  br label %250

250:                                              ; preds = %224, %249
  %251 = load i8, i8* %117, align 4, !range !4
  %252 = icmp eq i8 %251, 0
  %253 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %254 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  %255 = select i1 %252, %"class.blink::ComputedStyle"* %253, %"class.blink::ComputedStyle"* %254
  %256 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %257 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %257, i64 0, i32 1, i32 0, i32 0
  %259 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %261 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %260, align 8
  %262 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %261, i64 0, i32 1, i32 0, i32 0
  %263 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %259, i64 0, i32 1, i32 0, i32 5
  %265 = load float, float* %264, align 4
  %266 = fadd float %265, 5.000000e-01
  %267 = fptosi float %266 to i32
  %268 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %263, i64 0, i32 1, i32 0, i32 5
  %269 = load float, float* %268, align 4
  %270 = fadd float %269, 5.000000e-01
  %271 = fptosi float %270 to i32
  %272 = icmp eq i32 %267, %271
  br i1 %272, label %274, label %273

273:                                              ; preds = %250
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKciPN3WTF12SharedBufferE(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i32 %271, %"class.WTF::SharedBuffer"* %32) #15
  br label %274

274:                                              ; preds = %250, %273
  %275 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %277, label %281, !prof !5

277:                                              ; preds = %274
  %278 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %281, label %280

280:                                              ; preds = %277
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  br label %281

281:                                              ; preds = %274, %277, %280
  %282 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %263, i64 0, i32 1, i32 0, i32 10, i32 0, i32 0
  %283 = load i16, i16* %282, align 8
  %284 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %285 = icmp eq i16 %284, %283
  br i1 %285, label %308, label %286

286:                                              ; preds = %281
  %287 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #15
  %288 = bitcast %"class.blink::FontSelectionValue"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %288) #15
  %289 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %19, i64 0, i32 0
  store i16 %283, i16* %289, align 2
  %290 = call %"class.WTF::StringImpl"* @_ZNK5blink18FontSelectionValue8ToStringEv(%"class.blink::FontSelectionValue"* nonnull %19) #15
  %291 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %290, %"class.WTF::StringImpl"** %291, align 8
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.WTF::SharedBuffer"* %32) #15
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %286
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #15
  br label %307

307:                                              ; preds = %286, %303, %306
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %288) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #15
  br label %308

308:                                              ; preds = %281, %307
  %309 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %259, i64 0, i32 1, i32 0, i32 0
  %310 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %263, i64 0, i32 1, i32 0, i32 0
  %311 = call zeroext i1 @_ZN5blinkeqERKNS_10FontFamilyES2_(%"class.blink::FontFamily"* dereferenceable(16) %309, %"class.blink::FontFamily"* dereferenceable(16) %310) #15
  br i1 %311, label %398, label %312

312:                                              ; preds = %308
  %313 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i64 0, i64 0), i64 14) #15
  %314 = bitcast %"class.WTF::StringUTF8Adaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %314) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %20, i32 0) #15
  %315 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 1
  %316 = load i8*, i8** %315, align 8
  %317 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 2
  %318 = load i32, i32* %317, align 8
  %319 = zext i32 %318 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %32, i8* %316, i64 %319) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %314) #15
  %320 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %336, label %323

323:                                              ; preds = %312
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #15
  br label %336

336:                                              ; preds = %312, %332, %335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #15
  %337 = icmp eq %"class.blink::FontFamily"* %310, null
  br i1 %337, label %344, label %338

338:                                              ; preds = %336
  %339 = bitcast %"class.WTF::String"* %21 to i8*
  %340 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  %341 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %342 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %343 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  br label %369

344:                                              ; preds = %369, %394, %336
  %345 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3) #15
  %346 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %346) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %346, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %22, i32 0) #15
  %347 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %348 = load i8*, i8** %347, align 8
  %349 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %350 = load i32, i32* %349, align 8
  %351 = zext i32 %350 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %32, i8* %348, i64 %351) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %346) #15
  %352 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %344
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #15
  br label %368

368:                                              ; preds = %344, %364, %367
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #15
  br label %398

369:                                              ; preds = %338, %394
  %370 = phi %"class.blink::FontFamily"* [ %310, %338 ], [ %396, %394 ]
  %371 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %370, i64 0, i32 0, i32 0
  call void @_ZN5blink15PagePopupClient19AddJavaScriptStringERKN3WTF6StringEPNS1_12SharedBufferE(%"class.WTF::String"* dereferenceable(8) %371, %"class.WTF::SharedBuffer"* %32) #15
  %372 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %370, i64 0, i32 1, i32 0
  %373 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %372, align 8
  %374 = icmp eq %"class.blink::SharedFontFamily"* %373, null
  br i1 %374, label %344, label %375

375:                                              ; preds = %369
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %339) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0), i64 2) #15
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %340) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %340, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %21, i32 0) #15
  %376 = load i8*, i8** %341, align 8
  %377 = load i32, i32* %342, align 8
  %378 = zext i32 %377 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %32, i8* %376, i64 %378) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %340) #15
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %375
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %379) #15
  br label %394

394:                                              ; preds = %393, %390, %375
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %339) #15
  %395 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %372, align 8
  %396 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %395, i64 0, i32 0
  %397 = icmp eq %"class.blink::SharedFontFamily"* %395, null
  br i1 %397, label %344, label %369

398:                                              ; preds = %308, %368
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %259, i64 0, i32 1, i32 0, i32 10, i32 2, i32 0
  %400 = load i16, i16* %399, align 4
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %263, i64 0, i32 1, i32 0, i32 10, i32 2, i32 0
  %402 = load i16, i16* %401, align 4
  %403 = icmp eq i16 %400, %402
  br i1 %403, label %433, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %405) #15
  %406 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %408, label %412, !prof !5

408:                                              ; preds = %404
  %409 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %412, label %411

411:                                              ; preds = %408
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %412

412:                                              ; preds = %404, %408, %411
  %413 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %414 = icmp eq i16 %413, %402
  %415 = select i1 %414, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* %415, i64 6) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.WTF::SharedBuffer"* %32) #15
  %416 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %416, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %432, label %419

419:                                              ; preds = %412
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  br i1 %423, label %426, label %428

426:                                              ; preds = %419
  %427 = add i32 %425, -1
  store i32 %427, i32* %424, align 4
  br label %428

428:                                              ; preds = %426, %419
  %429 = phi i32 [ %427, %426 ], [ %425, %419 ]
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %428
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %417) #15
  br label %432

432:                                              ; preds = %412, %428, %431
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %405) #15
  br label %433

433:                                              ; preds = %398, %432
  %434 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %259, i64 0, i32 1, i32 0, i32 12, i32 0
  %435 = bitcast %"struct.blink::FontDescription::BitFields"* %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = lshr i64 %436, 4
  %438 = trunc i64 %437 to i32
  %439 = and i32 %438, 7
  %440 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %263, i64 0, i32 1, i32 0, i32 12, i32 0
  %441 = bitcast %"struct.blink::FontDescription::BitFields"* %440 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = lshr i64 %442, 4
  %444 = trunc i64 %443 to i32
  %445 = and i32 %444, 7
  %446 = icmp ne i32 %439, %445
  %447 = icmp eq i32 %445, 1
  %448 = and i1 %446, %447
  br i1 %448, label %449, label %468

449:                                              ; preds = %433
  %450 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %450) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i64 10) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.WTF::SharedBuffer"* %32) #15
  %451 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %451, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %467, label %454

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #15
  br label %467

467:                                              ; preds = %449, %463, %466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %450) #15
  br label %468

468:                                              ; preds = %433, %467
  %469 = load i160, i160* %126, align 8
  %470 = lshr i160 %469, 83
  %471 = trunc i160 %470 to i32
  %472 = and i32 %471, 7
  %473 = load i160, i160* %58, align 8
  %474 = lshr i160 %473, 83
  %475 = trunc i160 %474 to i32
  %476 = and i32 %475, 7
  %477 = icmp eq i32 %472, %476
  br i1 %477, label %508, label %478

478:                                              ; preds = %468
  %479 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %479) #15
  switch i32 %476, label %481 [
    i32 0, label %483
    i32 4, label %480
  ]

480:                                              ; preds = %478
  br label %483

481:                                              ; preds = %478
  %482 = add nuw nsw i32 %476, 444
  br label %483

483:                                              ; preds = %478, %480, %481
  %484 = phi i32 [ %482, %481 ], [ 448, %480 ], [ 3, %478 ]
  %485 = call i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32 %484) #15
  %486 = icmp eq i8* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %483
  %488 = call i64 @strlen(i8* nonnull %485) #17
  br label %489

489:                                              ; preds = %483, %487
  %490 = phi i64 [ %488, %487 ], [ 0, %483 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* %485, i64 %490) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %25, %"class.WTF::SharedBuffer"* %32) #15
  %491 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %492 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %491, align 8
  %493 = icmp eq %"class.WTF::StringImpl"* %492, null
  br i1 %493, label %507, label %494

494:                                              ; preds = %489
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %492, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = load atomic i32, i32* %495 monotonic, align 4
  %497 = and i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %492, i64 0, i32 0
  %500 = load i32, i32* %499, align 4
  br i1 %498, label %501, label %503

501:                                              ; preds = %494
  %502 = add i32 %500, -1
  store i32 %502, i32* %499, align 4
  br label %503

503:                                              ; preds = %501, %494
  %504 = phi i32 [ %502, %501 ], [ %500, %494 ]
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %507

506:                                              ; preds = %503
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %492) #15
  br label %507

507:                                              ; preds = %489, %503, %506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %479) #15
  br label %508

508:                                              ; preds = %468, %507
  %509 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %509) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #15
  %510 = bitcast %"class.WTF::StringUTF8Adaptor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %510) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %510, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %26, i32 0) #15
  %511 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 1
  %512 = load i8*, i8** %511, align 8
  %513 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 2
  %514 = load i32, i32* %513, align 8
  %515 = zext i32 %514 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %32, i8* %512, i64 %515) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %510) #15
  %516 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %517, null
  br i1 %518, label %532, label %519

519:                                              ; preds = %508
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = load atomic i32, i32* %520 monotonic, align 4
  %522 = and i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  br i1 %523, label %526, label %528

526:                                              ; preds = %519
  %527 = add i32 %525, -1
  store i32 %527, i32* %524, align 4
  br label %528

528:                                              ; preds = %526, %519
  %529 = phi i32 [ %527, %526 ], [ %525, %519 ]
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %532

531:                                              ; preds = %528
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %517) #15
  br label %532

532:                                              ; preds = %508, %528, %531
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %509) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #15
  ret void
}

declare %"class.blink::ComputedStyle"* @_ZNK5blink17HTMLSelectElement17ItemComputedStyleERNS_7ElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKN3WTF6StringEPNS3_12SharedBufferE(i8*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink18FontSelectionValue8ToStringEv(%"class.blink::FontSelectionValue"*) local_unnamed_addr #1

declare void @_ZN5blink15PagePopupClient19AddJavaScriptStringERKN3WTF6StringEPNS1_12SharedBufferE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare void @_ZN5blink15PagePopupClient11AddPropertyEPKcjPN3WTF12SharedBufferE(i8*, i32, %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink19HTMLOptGroupElement14GroupLabelTextEv(%"class.blink::HTMLOptGroupElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink19HTMLOptGroupElement21IsDisabledFormControlEv(%"class.blink::HTMLOptGroupElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InternalPopupMenu20ItemIterationContext18StartGroupChildrenERKNS_13ComputedStyleE(%"class.blink::InternalPopupMenu::ItemIterationContext"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i64 11) #15
  %6 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 5
  %7 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %6, align 8
  %8 = bitcast %"class.WTF::StringUTF8Adaptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0) #15
  %9 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %7, i8* %10, i64 %13) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #15
  br label %30

30:                                               ; preds = %2, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %31 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 4
  store i8 1, i8* %31, align 4
  %32 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %0, i64 0, i32 2
  store %"class.blink::ComputedStyle"* %1, %"class.blink::ComputedStyle"** %32, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSFontSelector"* @_ZN5blink17InternalPopupMenu21CreateCSSFontSelectorERNS_8DocumentE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 59, i32 0, i32 0
  %10 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %10, i64 0, i32 37, i32 0, i32 0
  %12 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %11, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FontCacheClientEEEPhm(i64 248) #15
  %14 = bitcast i8* %13 to %"class.blink::CSSFontSelector"*
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 1
  tail call void @_ZN5blink15CSSFontSelectorC2ERKNS_9TreeScopeE(%"class.blink::CSSFontSelector"* %14, %"class.blink::TreeScope"* dereferenceable(104) %15) #15
  %16 = getelementptr inbounds i8, i8* %13, i64 232
  %17 = bitcast i8* %16 to %"class.blink::FontSelectorClient"*
  %18 = bitcast i8* %16 to i32 (...)***
  %19 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [6 x i8*] }, { [27 x i8*], [6 x i8*] }* @_ZTVN5blink24PopupMenuCSSFontSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [6 x i8*] }, { [27 x i8*], [6 x i8*] }* @_ZTVN5blink24PopupMenuCSSFontSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 240
  %21 = bitcast i8* %20 to %"class.blink::CSSFontSelector"**
  store %"class.blink::CSSFontSelector"* %12, %"class.blink::CSSFontSelector"** %21, align 8
  %22 = bitcast %"class.blink::CSSFontSelector"* %12 to void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)***
  %23 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)**, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)** %23, i64 18
  %25 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)** %24, align 8
  tail call void %25(%"class.blink::CSSFontSelector"* %12, %"class.blink::FontSelectorClient"* %17) #15
  %26 = getelementptr inbounds i8, i8* %13, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  ret %"class.blink::CSSFontSelector"* %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZN5blink17InternalPopupMenu12OwnerElementEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::Element"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSFontSelector"* @_ZThn8_N5blink17InternalPopupMenu21CreateCSSFontSelectorERNS_8DocumentE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %4 = getelementptr inbounds i8, i8* %3, i64 24
  %5 = bitcast i8* %4 to %"class.blink::HTMLSelectElement"**
  %6 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 59, i32 0, i32 0
  %12 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %12, i64 0, i32 37, i32 0, i32 0
  %14 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %13, align 8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FontCacheClientEEEPhm(i64 248) #15
  %16 = bitcast i8* %15 to %"class.blink::CSSFontSelector"*
  %17 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 1
  tail call void @_ZN5blink15CSSFontSelectorC2ERKNS_9TreeScopeE(%"class.blink::CSSFontSelector"* %16, %"class.blink::TreeScope"* dereferenceable(104) %17) #15
  %18 = getelementptr inbounds i8, i8* %15, i64 232
  %19 = bitcast i8* %18 to %"class.blink::FontSelectorClient"*
  %20 = bitcast i8* %18 to i32 (...)***
  %21 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [6 x i8*] }, { [27 x i8*], [6 x i8*] }* @_ZTVN5blink24PopupMenuCSSFontSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*], [6 x i8*] }, { [27 x i8*], [6 x i8*] }* @_ZTVN5blink24PopupMenuCSSFontSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 240
  %23 = bitcast i8* %22 to %"class.blink::CSSFontSelector"**
  store %"class.blink::CSSFontSelector"* %14, %"class.blink::CSSFontSelector"** %23, align 8
  %24 = bitcast %"class.blink::CSSFontSelector"* %14 to void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)***
  %25 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)**, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)** %25, i64 18
  %27 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*)** %26, align 8
  tail call void %27(%"class.blink::CSSFontSelector"* %14, %"class.blink::FontSelectorClient"* %19) #15
  %28 = getelementptr inbounds i8, i8* %15, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  ret %"class.blink::CSSFontSelector"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu21SetValueAndClosePopupEiRKN3WTF6StringE(%"class.blink::InternalPopupMenu"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #7 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::WebMouseEvent", align 8
  %6 = alloca %"class.WTF::Vector.2997", align 8
  %7 = alloca %"class.WTF::Vector.2997", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::Vector.2997", align 8
  %10 = alloca %"class.WTF::Vector.2997", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 -86, i8* %4, align 1
  %20 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %2, i8* nonnull %4) #15
  %21 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %21) #15
  %22 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %22, align 8
  call void @_ZN5blink17HTMLSelectElement19SelectOptionByPopupEi(%"class.blink::HTMLSelectElement"* %23, i32 %20) #15
  %24 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %25 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %24, align 8
  %26 = icmp eq %"class.blink::PagePopup"* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %28, align 8
  %30 = bitcast %"class.blink::ChromeClient"* %29 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %31 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %31, i64 76
  %33 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %32, align 8
  call void %33(%"class.blink::ChromeClient"* %29, %"class.blink::PagePopup"* nonnull %25) #15
  br label %34

34:                                               ; preds = %19, %27
  %35 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %35) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  br label %47

36:                                               ; preds = %3, %15
  %37 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %38 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %37, align 8
  %39 = icmp eq %"class.blink::PagePopup"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %41, align 8
  %43 = bitcast %"class.blink::ChromeClient"* %42 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %44 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %44, i64 76
  %46 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %45, align 8
  tail call void %46(%"class.blink::ChromeClient"* %42, %"class.blink::PagePopup"* nonnull %38) #15
  br label %47

47:                                               ; preds = %36, %40, %34
  %48 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %48, align 8
  %50 = icmp eq %"class.blink::HTMLSelectElement"* %49, null
  br i1 %50, label %223, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::WebMouseEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %52) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, i32, [4 x i8] }>* @__const._ZN5blink17InternalPopupMenu21SetValueAndClosePopupEiRKN3WTF6StringE.event to i8*), i64 112, i1 false)
  %53 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %55, align 4
  %56 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %56, align 4
  %57 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 0, i32 4
  store i32 -1, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 0, i32 5
  store i32 0, i32* %59, align 4
  store i64 0, i64* %57, align 8
  %60 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 1, i32 0
  store i32 2147483647, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 1, i32 1
  store float 0x7FF8000000000000, float* %61, align 4
  %62 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 1, i32 2
  %63 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 1, i32 6
  %64 = bitcast i32* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #15
  store i32 -1, i32* %63, align 8
  %65 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 1, i32 7
  %66 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 1, i32 11
  %67 = bitcast i32* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 13, i1 false) #15
  %68 = bitcast %"class.gfx::PointF"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebMouseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %69 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 2
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %5, i64 0, i32 3
  store i32 0, i32* %70, align 8
  store float 1.000000e+00, float* %54, align 8
  %71 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  %76 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %75) #15
  %77 = icmp eq %"class.blink::LocalFrame"* %76, null
  br i1 %77, label %222, label %78

78:                                               ; preds = %51
  %79 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %76, i64 0, i32 15, i32 0, i32 0
  %80 = load %"class.blink::EventHandler"*, %"class.blink::EventHandler"** %79, align 8
  %81 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMouseupE, align 8
  %82 = bitcast %"class.WTF::Vector.2997"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 16, i1 false) #15
  %83 = bitcast %"class.WTF::Vector.2997"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #15
  %84 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #15
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %85, align 8
  %86 = call i32 @_ZN5blink12EventHandler24HandleTargetedMouseEventEPNS_7ElementERKNS_13WebMouseEventERKN3WTF12AtomicStringERKNS6_6VectorIS3_Lj0ENS6_18PartitionAllocatorEEESE_RKNS6_6StringE(%"class.blink::EventHandler"* %80, %"class.blink::Element"* %71, %"class.blink::WebMouseEvent"* nonnull dereferenceable(112) %5, %"class.WTF::AtomicString"* dereferenceable(8) %81, %"class.WTF::Vector.2997"* nonnull dereferenceable(16) %6, %"class.WTF::Vector.2997"* nonnull dereferenceable(16) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #15
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #15
  br label %102

102:                                              ; preds = %78, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #15
  %103 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %7, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::WebMouseEvent"*, %"class.blink::WebMouseEvent"** %103, align 8
  %105 = icmp eq %"class.blink::WebMouseEvent"* %104, null
  br i1 %105, label %126, label %106, !prof !3

106:                                              ; preds = %102
  %107 = bitcast %"class.blink::WebMouseEvent"* %104 to i8*
  %108 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %7, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %124, label %111, !prof !2

111:                                              ; preds = %106
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %104, i64 %112
  br label %114

114:                                              ; preds = %114, %111
  %115 = phi %"class.blink::WebMouseEvent"* [ %119, %114 ], [ %104, %111 ]
  %116 = bitcast %"class.blink::WebMouseEvent"* %115 to void (%"class.blink::WebMouseEvent"*)***
  %117 = load void (%"class.blink::WebMouseEvent"*)**, void (%"class.blink::WebMouseEvent"*)*** %116, align 8
  %118 = load void (%"class.blink::WebMouseEvent"*)*, void (%"class.blink::WebMouseEvent"*)** %117, align 8
  call void %118(%"class.blink::WebMouseEvent"* %115) #15
  %119 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %115, i64 1
  %120 = icmp eq %"class.blink::WebMouseEvent"* %119, %113
  br i1 %120, label %121, label %114

121:                                              ; preds = %114
  store i32 0, i32* %108, align 4
  %122 = bitcast %"class.WTF::Vector.2997"* %7 to i8**
  %123 = load i8*, i8** %122, align 8
  br label %124

124:                                              ; preds = %121, %106
  %125 = phi i8* [ %123, %121 ], [ %107, %106 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %125) #15
  store %"class.blink::WebMouseEvent"* null, %"class.blink::WebMouseEvent"** %103, align 8
  br label %126

126:                                              ; preds = %102, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #15
  %127 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %6, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.blink::WebMouseEvent"*, %"class.blink::WebMouseEvent"** %127, align 8
  %129 = icmp eq %"class.blink::WebMouseEvent"* %128, null
  br i1 %129, label %150, label %130, !prof !3

130:                                              ; preds = %126
  %131 = bitcast %"class.blink::WebMouseEvent"* %128 to i8*
  %132 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %6, i64 0, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %148, label %135, !prof !2

135:                                              ; preds = %130
  %136 = zext i32 %133 to i64
  %137 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %128, i64 %136
  br label %138

138:                                              ; preds = %138, %135
  %139 = phi %"class.blink::WebMouseEvent"* [ %143, %138 ], [ %128, %135 ]
  %140 = bitcast %"class.blink::WebMouseEvent"* %139 to void (%"class.blink::WebMouseEvent"*)***
  %141 = load void (%"class.blink::WebMouseEvent"*)**, void (%"class.blink::WebMouseEvent"*)*** %140, align 8
  %142 = load void (%"class.blink::WebMouseEvent"*)*, void (%"class.blink::WebMouseEvent"*)** %141, align 8
  call void %142(%"class.blink::WebMouseEvent"* %139) #15
  %143 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %139, i64 1
  %144 = icmp eq %"class.blink::WebMouseEvent"* %143, %137
  br i1 %144, label %145, label %138

145:                                              ; preds = %138
  store i32 0, i32* %132, align 4
  %146 = bitcast %"class.WTF::Vector.2997"* %6 to i8**
  %147 = load i8*, i8** %146, align 8
  br label %148

148:                                              ; preds = %145, %130
  %149 = phi i8* [ %147, %145 ], [ %131, %130 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %149) #15
  store %"class.blink::WebMouseEvent"* null, %"class.blink::WebMouseEvent"** %127, align 8
  br label %150

150:                                              ; preds = %126, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #15
  %151 = load %"class.blink::EventHandler"*, %"class.blink::EventHandler"** %79, align 8
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %153 = bitcast %"class.WTF::Vector.2997"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 0, i64 16, i1 false) #15
  %154 = bitcast %"class.WTF::Vector.2997"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 16, i1 false) #15
  %155 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #15
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %156, align 8
  %157 = call i32 @_ZN5blink12EventHandler24HandleTargetedMouseEventEPNS_7ElementERKNS_13WebMouseEventERKN3WTF12AtomicStringERKNS6_6VectorIS3_Lj0ENS6_18PartitionAllocatorEEESE_RKNS6_6StringE(%"class.blink::EventHandler"* %151, %"class.blink::Element"* %71, %"class.blink::WebMouseEvent"* nonnull dereferenceable(112) %5, %"class.WTF::AtomicString"* dereferenceable(8) %152, %"class.WTF::Vector.2997"* nonnull dereferenceable(16) %9, %"class.WTF::Vector.2997"* nonnull dereferenceable(16) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #15
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %150
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #15
  br label %173

173:                                              ; preds = %150, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #15
  %174 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %10, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.blink::WebMouseEvent"*, %"class.blink::WebMouseEvent"** %174, align 8
  %176 = icmp eq %"class.blink::WebMouseEvent"* %175, null
  br i1 %176, label %197, label %177, !prof !3

177:                                              ; preds = %173
  %178 = bitcast %"class.blink::WebMouseEvent"* %175 to i8*
  %179 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %10, i64 0, i32 0, i32 0, i32 2
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %195, label %182, !prof !2

182:                                              ; preds = %177
  %183 = zext i32 %180 to i64
  %184 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %175, i64 %183
  br label %185

185:                                              ; preds = %185, %182
  %186 = phi %"class.blink::WebMouseEvent"* [ %190, %185 ], [ %175, %182 ]
  %187 = bitcast %"class.blink::WebMouseEvent"* %186 to void (%"class.blink::WebMouseEvent"*)***
  %188 = load void (%"class.blink::WebMouseEvent"*)**, void (%"class.blink::WebMouseEvent"*)*** %187, align 8
  %189 = load void (%"class.blink::WebMouseEvent"*)*, void (%"class.blink::WebMouseEvent"*)** %188, align 8
  call void %189(%"class.blink::WebMouseEvent"* %186) #15
  %190 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %186, i64 1
  %191 = icmp eq %"class.blink::WebMouseEvent"* %190, %184
  br i1 %191, label %192, label %185

192:                                              ; preds = %185
  store i32 0, i32* %179, align 4
  %193 = bitcast %"class.WTF::Vector.2997"* %10 to i8**
  %194 = load i8*, i8** %193, align 8
  br label %195

195:                                              ; preds = %192, %177
  %196 = phi i8* [ %194, %192 ], [ %178, %177 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %196) #15
  store %"class.blink::WebMouseEvent"* null, %"class.blink::WebMouseEvent"** %174, align 8
  br label %197

197:                                              ; preds = %173, %195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #15
  %198 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %9, i64 0, i32 0, i32 0, i32 0
  %199 = load %"class.blink::WebMouseEvent"*, %"class.blink::WebMouseEvent"** %198, align 8
  %200 = icmp eq %"class.blink::WebMouseEvent"* %199, null
  br i1 %200, label %221, label %201, !prof !3

201:                                              ; preds = %197
  %202 = bitcast %"class.blink::WebMouseEvent"* %199 to i8*
  %203 = getelementptr inbounds %"class.WTF::Vector.2997", %"class.WTF::Vector.2997"* %9, i64 0, i32 0, i32 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %219, label %206, !prof !2

206:                                              ; preds = %201
  %207 = zext i32 %204 to i64
  %208 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %199, i64 %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi %"class.blink::WebMouseEvent"* [ %214, %209 ], [ %199, %206 ]
  %211 = bitcast %"class.blink::WebMouseEvent"* %210 to void (%"class.blink::WebMouseEvent"*)***
  %212 = load void (%"class.blink::WebMouseEvent"*)**, void (%"class.blink::WebMouseEvent"*)*** %211, align 8
  %213 = load void (%"class.blink::WebMouseEvent"*)*, void (%"class.blink::WebMouseEvent"*)** %212, align 8
  call void %213(%"class.blink::WebMouseEvent"* %210) #15
  %214 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %210, i64 1
  %215 = icmp eq %"class.blink::WebMouseEvent"* %214, %208
  br i1 %215, label %216, label %209

216:                                              ; preds = %209
  store i32 0, i32* %203, align 4
  %217 = bitcast %"class.WTF::Vector.2997"* %9 to i8**
  %218 = load i8*, i8** %217, align 8
  br label %219

219:                                              ; preds = %216, %201
  %220 = phi i8* [ %218, %216 ], [ %202, %201 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %220) #15
  store %"class.blink::WebMouseEvent"* null, %"class.blink::WebMouseEvent"** %198, align 8
  br label %221

221:                                              ; preds = %197, %219
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #15
  br label %222

222:                                              ; preds = %51, %221
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %52) #15
  br label %223

223:                                              ; preds = %47, %222
  ret void
}

declare i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink17HTMLSelectElement19SelectOptionByPopupEi(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #1

declare i32 @_ZN5blink12EventHandler24HandleTargetedMouseEventEPNS_7ElementERKNS_13WebMouseEventERKN3WTF12AtomicStringERKNS6_6VectorIS3_Lj0ENS6_18PartitionAllocatorEEESE_RKNS6_6StringE(%"class.blink::EventHandler"*, %"class.blink::Element"*, %"class.blink::WebMouseEvent"* dereferenceable(112), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::Vector.2997"* dereferenceable(16), %"class.WTF::Vector.2997"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InternalPopupMenu21SetValueAndClosePopupEiRKN3WTF6StringE(%"class.blink::InternalPopupMenu"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %5 = bitcast i8* %4 to %"class.blink::InternalPopupMenu"*
  tail call void @_ZN5blink17InternalPopupMenu21SetValueAndClosePopupEiRKN3WTF6StringE(%"class.blink::InternalPopupMenu"* %5, i32 undef, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu8SetValueERKN3WTF6StringE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 -86, i8* %3, align 1
  %4 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %1, i8* nonnull %3) #15
  %5 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %5, align 8
  call void @_ZN5blink17HTMLSelectElement27ProvisionalSelectionChangedEj(%"class.blink::HTMLSelectElement"* %6, i32 %4) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  ret void
}

declare void @_ZN5blink17HTMLSelectElement27ProvisionalSelectionChangedEj(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InternalPopupMenu8SetValueERKN3WTF6StringE(%"class.blink::InternalPopupMenu"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 -86, i8* %3, align 1
  %5 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %1, i8* nonnull %3) #15
  %6 = getelementptr inbounds i8, i8* %4, i64 24
  %7 = bitcast i8* %6 to %"class.blink::HTMLSelectElement"**
  %8 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %7, align 8
  call void @_ZN5blink17HTMLSelectElement27ProvisionalSelectionChangedEj(%"class.blink::HTMLSelectElement"* %8, i32 %5) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu13DidClosePopupEv(%"class.blink::InternalPopupMenu"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  store %"class.blink::PagePopup"* null, %"class.blink::PagePopup"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLSelectElement"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink17HTMLSelectElement12PopupDidHideEv(%"class.blink::HTMLSelectElement"* nonnull %4) #15
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN5blink17HTMLSelectElement12PopupDidHideEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InternalPopupMenu13DidClosePopupEv(%"class.blink::InternalPopupMenu"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %"class.blink::PagePopup"**
  store %"class.blink::PagePopup"* null, %"class.blink::PagePopup"** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 24
  %6 = bitcast i8* %5 to %"class.blink::HTMLSelectElement"**
  %7 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %6, align 8
  %8 = icmp eq %"class.blink::HTMLSelectElement"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN5blink17HTMLSelectElement12PopupDidHideEv(%"class.blink::HTMLSelectElement"* nonnull %7) #15
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZThn8_N5blink17InternalPopupMenu12OwnerElementEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to %"class.blink::HTMLSelectElement"**
  %5 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::Element"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.blink::ChromeClient"* @_ZN5blink17InternalPopupMenu15GetChromeClientEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %2, align 8
  ret %"class.blink::ChromeClient"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.blink::ChromeClient"* @_ZThn8_N5blink17InternalPopupMenu15GetChromeClientEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %"class.blink::ChromeClient"**
  %5 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %4, align 8
  ret %"class.blink::ChromeClient"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.blink::Locale"* @_ZN5blink17InternalPopupMenu9GetLocaleEv(%"class.blink::InternalPopupMenu"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() #15
  ret %"class.blink::Locale"* %2
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.blink::Locale"* @_ZThn8_N5blink17InternalPopupMenu9GetLocaleEv(%"class.blink::InternalPopupMenu"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() #15
  ret %"class.blink::Locale"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu11CancelPopupEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %3 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %2, align 8
  %4 = icmp eq %"class.blink::PagePopup"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %6, align 8
  %8 = bitcast %"class.blink::ChromeClient"* %7 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %9 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %9, i64 76
  %11 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %10, align 8
  tail call void %11(%"class.blink::ChromeClient"* %7, %"class.blink::PagePopup"* nonnull %3) #15
  br label %12

12:                                               ; preds = %1, %5
  %13 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %13, align 8
  %15 = icmp eq %"class.blink::HTMLSelectElement"* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZN5blink17HTMLSelectElement14PopupDidCancelEv(%"class.blink::HTMLSelectElement"* nonnull %14) #15
  br label %17

17:                                               ; preds = %12, %16
  ret void
}

declare void @_ZN5blink17HTMLSelectElement14PopupDidCancelEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InternalPopupMenu11CancelPopupEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %"class.blink::PagePopup"**
  %5 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %4, align 8
  %6 = icmp eq %"class.blink::PagePopup"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to %"class.blink::ChromeClient"**
  %10 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %9, align 8
  %11 = bitcast %"class.blink::ChromeClient"* %10 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %12 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %12, i64 76
  %14 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %13, align 8
  tail call void %14(%"class.blink::ChromeClient"* %10, %"class.blink::PagePopup"* nonnull %5) #15
  br label %15

15:                                               ; preds = %7, %1
  %16 = getelementptr inbounds i8, i8* %2, i64 24
  %17 = bitcast i8* %16 to %"class.blink::HTMLSelectElement"**
  %18 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %17, align 8
  %19 = icmp eq %"class.blink::HTMLSelectElement"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  tail call void @_ZN5blink17HTMLSelectElement14PopupDidCancelEv(%"class.blink::HTMLSelectElement"* nonnull %18) #15
  br label %21

21:                                               ; preds = %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu7DisposeEv(%"class.blink::InternalPopupMenu"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %3 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %2, align 8
  %4 = icmp eq %"class.blink::PagePopup"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %6, align 8
  %8 = bitcast %"class.blink::ChromeClient"* %7 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %9 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %9, i64 76
  %11 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %10, align 8
  tail call void %11(%"class.blink::ChromeClient"* %7, %"class.blink::PagePopup"* nonnull %3) #15
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu4ShowEv(%"class.blink::InternalPopupMenu"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::ChromeClient"* %3 to %"class.blink::PagePopup"* (%"class.blink::ChromeClient"*, %"class.blink::PagePopupClient"*)***
  %6 = load %"class.blink::PagePopup"* (%"class.blink::ChromeClient"*, %"class.blink::PagePopupClient"*)**, %"class.blink::PagePopup"* (%"class.blink::ChromeClient"*, %"class.blink::PagePopupClient"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::PagePopup"* (%"class.blink::ChromeClient"*, %"class.blink::PagePopupClient"*)*, %"class.blink::PagePopup"* (%"class.blink::ChromeClient"*, %"class.blink::PagePopupClient"*)** %6, i64 75
  %8 = load %"class.blink::PagePopup"* (%"class.blink::ChromeClient"*, %"class.blink::PagePopupClient"*)*, %"class.blink::PagePopup"* (%"class.blink::ChromeClient"*, %"class.blink::PagePopupClient"*)** %7, align 8
  %9 = tail call %"class.blink::PagePopup"* %8(%"class.blink::ChromeClient"* %3, %"class.blink::PagePopupClient"* %4) #15
  %10 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  store %"class.blink::PagePopup"* %9, %"class.blink::PagePopup"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu4HideEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %3 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %2, align 8
  %4 = icmp eq %"class.blink::PagePopup"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %6, align 8
  %8 = bitcast %"class.blink::ChromeClient"* %7 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %9 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %9, i64 76
  %11 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %10, align 8
  tail call void %11(%"class.blink::ChromeClient"* %7, %"class.blink::PagePopup"* nonnull %3) #15
  br label %12

12:                                               ; preds = %5, %1
  %13 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %13, align 8
  %15 = icmp eq %"class.blink::HTMLSelectElement"* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZN5blink17HTMLSelectElement14PopupDidCancelEv(%"class.blink::HTMLSelectElement"* nonnull %14) #15
  br label %17

17:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17InternalPopupMenu17UpdateFromElementENS_9PopupMenu12UpdateReasonE(%"class.blink::InternalPopupMenu"* nocapture, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 5
  store i8 1, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink17InternalPopupMenu17PopupRootAXObjectEv(%"class.blink::InternalPopupMenu"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %3 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %2, align 8
  %4 = icmp eq %"class.blink::PagePopup"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::PagePopup"* %3 to %"class.blink::AXObject"* (%"class.blink::PagePopup"*)***
  %7 = load %"class.blink::AXObject"* (%"class.blink::PagePopup"*)**, %"class.blink::AXObject"* (%"class.blink::PagePopup"*)*** %6, align 8
  %8 = load %"class.blink::AXObject"* (%"class.blink::PagePopup"*)*, %"class.blink::AXObject"* (%"class.blink::PagePopup"*)** %7, align 8
  %9 = tail call %"class.blink::AXObject"* %8(%"class.blink::PagePopup"* nonnull %3) #15
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"class.blink::AXObject"* [ %9, %5 ], [ null, %1 ]
  ret %"class.blink::AXObject"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu6UpdateEb(%"class.blink::InternalPopupMenu"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %7 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %8 = alloca %"class.blink::IntRect", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.blink::IntRect"*
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::InternalPopupMenu::ItemIterationContext", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %"class.blink::IntRect"*
  %18 = alloca { i64, i64 }, align 8
  %19 = bitcast { i64, i64 }* %18 to %"class.blink::IntRect"*
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %23 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %22, align 8
  %24 = icmp eq %"class.blink::PagePopup"* %23, null
  br i1 %24, label %417, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %26, align 8
  %28 = icmp eq %"class.blink::HTMLSelectElement"* %27, null
  br i1 %28, label %417, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 5
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp ne i8 %31, 0
  %33 = or i1 %32, %1
  br i1 %33, label %34, label %417

34:                                               ; preds = %29
  store i8 0, i8* %30, align 8
  %35 = bitcast %"class.blink::IntRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %39) #15
  %41 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %40, i64 0, i32 0, i32 0, i32 1, i32 1
  %42 = bitcast %"class.blink::IntSize"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = bitcast %"class.blink::IntRect"* %8 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %8, i64 0, i32 1
  %46 = bitcast %"class.blink::IntSize"* %45 to i64*
  store i64 %43, i64* %46, align 8
  %47 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #15
  %48 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %26, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = tail call { i64, i64 } @_ZNK5blink4Node23PixelSnappedBoundingBoxEv(%"class.blink::Node"* %49) #15
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %52 = extractvalue { i64, i64 } %50, 0
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %54 = extractvalue { i64, i64 } %50, 1
  store i64 %54, i64* %53, align 8
  %55 = call zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"* nonnull %8, %"class.blink::IntRect"* nonnull dereferenceable(16) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #15
  br i1 %55, label %70, label %56

56:                                               ; preds = %34
  %57 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %22, align 8
  %58 = icmp eq %"class.blink::PagePopup"* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %60, align 8
  %62 = bitcast %"class.blink::ChromeClient"* %61 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %63 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %63, i64 76
  %65 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %64, align 8
  call void %65(%"class.blink::ChromeClient"* %61, %"class.blink::PagePopup"* nonnull %57) #15
  br label %66

66:                                               ; preds = %59, %56
  %67 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %26, align 8
  %68 = icmp eq %"class.blink::HTMLSelectElement"* %67, null
  br i1 %68, label %417, label %69

69:                                               ; preds = %66
  call void @_ZN5blink17HTMLSelectElement14PopupDidCancelEv(%"class.blink::HTMLSelectElement"* nonnull %67) #15
  br label %417

70:                                               ; preds = %34
  %71 = call noalias i8* @malloc(i64 48) #15
  %72 = bitcast i8* %71 to %"class.WTF::SharedBuffer"*
  call void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"* %72) #15
  %73 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0), i64 22) #15
  %74 = bitcast %"class.WTF::StringUTF8Adaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %11, i32 0) #15
  %75 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = zext i32 %78 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %72, i8* %76, i64 %79) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #15
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #15
  br label %96

96:                                               ; preds = %70, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #15
  %97 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.55, i64 0, i64 0), i64 16) #15
  %98 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %12, i32 0) #15
  %99 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %102 = load i32, i32* %101, align 8
  %103 = zext i32 %102 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %72, i8* %100, i64 %103) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #15
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #15
  br label %120

120:                                              ; preds = %96, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #15
  %121 = bitcast %"class.blink::InternalPopupMenu::ItemIterationContext"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %121) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 40, i1 false)
  %122 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %26, align 8
  %123 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 12
  %126 = icmp eq i32 %125, 0
  %127 = and i32 %124, 1
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %126, label %130, label %141

130:                                              ; preds = %120
  br i1 %128, label %137, label %131

131:                                              ; preds = %130
  %132 = bitcast %"class.blink::NodeData"** %129 to %"class.blink::NodeRareData"**
  %133 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %133, i64 0, i32 1, i32 0, i32 0
  %135 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %135, i64 0, i32 2, i32 0
  br label %156

137:                                              ; preds = %130
  %138 = bitcast %"class.blink::NodeData"** %129 to %"class.blink::NodeRenderingData"**
  %139 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %139, i64 0, i32 2, i32 0
  br label %156

141:                                              ; preds = %120
  br i1 %128, label %146, label %142

142:                                              ; preds = %141
  %143 = bitcast %"class.blink::NodeData"** %129 to %"class.blink::NodeRareData"**
  %144 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %144, i64 0, i32 1, i32 0, i32 0
  br label %148

146:                                              ; preds = %141
  %147 = bitcast %"class.blink::NodeData"** %129 to %"class.blink::NodeRenderingData"**
  br label %148

148:                                              ; preds = %146, %142
  %149 = phi %"class.blink::NodeRenderingData"** [ %145, %142 ], [ %147, %146 ]
  %150 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %150, i64 0, i32 1
  %152 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %151, align 8
  %153 = icmp eq %"class.blink::LayoutObject"* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %152, i64 0, i32 5, i32 0
  br label %156

156:                                              ; preds = %154, %137, %131
  %157 = phi %"class.blink::ComputedStyle"** [ %136, %131 ], [ %140, %137 ], [ %155, %154 ]
  %158 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %157, align 8
  br label %159

159:                                              ; preds = %156, %148
  %160 = phi %"class.blink::ComputedStyle"* [ null, %148 ], [ %158, %156 ]
  %161 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %13, i64 0, i32 0
  store %"class.blink::ComputedStyle"* %160, %"class.blink::ComputedStyle"** %161, align 8
  %162 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #15
  %163 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %160, %"class.blink::CSSProperty"* dereferenceable(24) %162) #15
  %164 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %13, i64 0, i32 1, i32 0
  store i32 %163, i32* %164, align 8
  %165 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %13, i64 0, i32 3
  store i32 0, i32* %165, align 8
  %166 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %13, i64 0, i32 4
  store i8 0, i8* %166, align 4
  %167 = getelementptr inbounds %"class.blink::InternalPopupMenu::ItemIterationContext", %"class.blink::InternalPopupMenu::ItemIterationContext"* %13, i64 0, i32 5
  %168 = bitcast %"class.WTF::SharedBuffer"** %167 to i8**
  store i8* %71, i8** %168, align 8
  %169 = call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #15
  %170 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %160, i64 0, i32 0, i32 9
  %171 = bitcast [20 x i8]* %170 to i160*
  %172 = load i160, i160* %171, align 8
  %173 = lshr i160 %172, 114
  %174 = trunc i160 %173 to i32
  %175 = and i32 %174, 1
  %176 = bitcast %"class.blink::LayoutTheme"* %169 to i32 (%"class.blink::LayoutTheme"*, i32, i32)***
  %177 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)**, i32 (%"class.blink::LayoutTheme"*, i32, i32)*** %176, align 8
  %178 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %177, i64 17
  %179 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %178, align 8
  %180 = call i32 %179(%"class.blink::LayoutTheme"* %169, i32 113, i32 %175) #15
  %181 = load i32, i32* %164, align 8
  %182 = icmp eq i32 %180, %181
  br i1 %182, label %183, label %194

183:                                              ; preds = %159
  %184 = call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #15
  %185 = load i160, i160* %171, align 8
  %186 = lshr i160 %185, 114
  %187 = trunc i160 %186 to i32
  %188 = and i32 %187, 1
  %189 = bitcast %"class.blink::LayoutTheme"* %184 to i32 (%"class.blink::LayoutTheme"*, i32, i32)***
  %190 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)**, i32 (%"class.blink::LayoutTheme"*, i32, i32)*** %189, align 8
  %191 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %190, i64 17
  %192 = load i32 (%"class.blink::LayoutTheme"*, i32, i32)*, i32 (%"class.blink::LayoutTheme"*, i32, i32)** %191, align 8
  %193 = call i32 %192(%"class.blink::LayoutTheme"* %184, i32 15, i32 %188) #15
  store i32 %193, i32* %164, align 8
  br label %194

194:                                              ; preds = %159, %183
  call void @_ZN5blink17InternalPopupMenu20ItemIterationContext18SerializeBaseStyleEv(%"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull %13)
  %195 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i64 11) #15
  %196 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %196) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %14, i32 0) #15
  %197 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %200 = load i32, i32* %199, align 8
  %201 = zext i32 %200 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %72, i8* %198, i64 %201) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %196) #15
  %202 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %194
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #15
  br label %218

218:                                              ; preds = %194, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #15
  %219 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %26, align 8
  %220 = call dereferenceable(16) %"class.blink::HeapVector.1676"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"* %219) #15
  %221 = load i32, i32* %165, align 8
  %222 = getelementptr inbounds %"class.blink::HeapVector.1676", %"class.blink::HeapVector.1676"* %220, i64 0, i32 0, i32 0, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = icmp ult i32 %221, %223
  br i1 %224, label %225, label %306

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"class.blink::HeapVector.1676", %"class.blink::HeapVector.1676"* %220, i64 0, i32 0
  %227 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %228 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %227, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %230 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE, align 8
  %232 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %231, i64 0, i32 0, i32 0, i32 0
  br label %233

233:                                              ; preds = %225, %301
  %234 = phi i32 [ %221, %225 ], [ %303, %301 ]
  %235 = call dereferenceable(8) %"class.blink::Member.1682"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1679"* %226, i32 %234) #15
  %236 = getelementptr inbounds %"class.blink::Member.1682", %"class.blink::Member.1682"* %235, i64 0, i32 0, i32 0
  %237 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %238) #15
  %240 = icmp eq %"class.blink::ContainerNode"* %239, null
  br i1 %240, label %257, label %241

241:                                              ; preds = %233
  %242 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %239, i64 0, i32 0, i32 1
  %243 = load i32, i32* %242, align 8
  %244 = and i32 %243, 48
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %257

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %239, i64 0, i32 0
  %248 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %228, align 8
  %249 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %247, i64 1, i32 2
  %250 = bitcast %"class.blink::Member.5"* %249 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %251 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %250, align 8
  %252 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %251, i64 0, i32 3, i32 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 3, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %253, %255
  br i1 %256, label %258, label %257

257:                                              ; preds = %241, %233, %246
  call void @_ZN5blink17InternalPopupMenu20ItemIterationContext22FinishGroupIfNecessaryEv(%"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull %13)
  br label %258

258:                                              ; preds = %257, %246
  %259 = icmp eq %"class.blink::HTMLElement"* %237, null
  br i1 %259, label %301, label %260

260:                                              ; preds = %258
  %261 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %237, i64 0, i32 0, i32 0, i32 0, i32 1
  %262 = load i32, i32* %261, align 8
  %263 = and i32 %262, 48
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %301

265:                                              ; preds = %260
  %266 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %230, align 8
  %267 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %238, i64 1, i32 2
  %268 = bitcast %"class.blink::Member.5"* %267 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %269 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %269, i64 0, i32 3, i32 0, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %266, i64 0, i32 3, i32 0, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %271, %273
  br i1 %274, label %275, label %277

275:                                              ; preds = %265
  %276 = bitcast %"class.blink::HTMLElement"* %237 to %"class.blink::HTMLOptionElement"*
  call void @_ZN5blink17InternalPopupMenu9AddOptionERNS0_20ItemIterationContextERNS_17HTMLOptionElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull dereferenceable(40) %13, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %276)
  br label %301

277:                                              ; preds = %265
  %278 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %228, align 8
  %279 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %238, i64 1, i32 2
  %280 = bitcast %"class.blink::Member.5"* %279 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %281 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %281, i64 0, i32 3, i32 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %278, i64 0, i32 3, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %283, %285
  br i1 %286, label %287, label %289

287:                                              ; preds = %277
  %288 = bitcast %"class.blink::HTMLElement"* %237 to %"class.blink::HTMLOptGroupElement"*
  call void @_ZN5blink17InternalPopupMenu11AddOptGroupERNS0_20ItemIterationContextERNS_19HTMLOptGroupElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull dereferenceable(40) %13, %"class.blink::HTMLOptGroupElement"* nonnull dereferenceable(104) %288)
  br label %301

289:                                              ; preds = %277
  %290 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %232, align 8
  %291 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %238, i64 1, i32 2
  %292 = bitcast %"class.blink::Member.5"* %291 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %293 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %292, align 8
  %294 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %293, i64 0, i32 3, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %290, i64 0, i32 3, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %295, %297
  br i1 %298, label %299, label %301

299:                                              ; preds = %289
  %300 = bitcast %"class.blink::HTMLElement"* %237 to %"class.blink::HTMLHRElement"*
  call void @_ZN5blink17InternalPopupMenu12AddSeparatorERNS0_20ItemIterationContextERNS_13HTMLHRElementE(%"class.blink::InternalPopupMenu"* %0, %"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull dereferenceable(40) %13, %"class.blink::HTMLHRElement"* nonnull dereferenceable(104) %300)
  br label %301

301:                                              ; preds = %260, %258, %289, %287, %299, %275
  %302 = load i32, i32* %165, align 8
  %303 = add i32 %302, 1
  store i32 %303, i32* %165, align 8
  %304 = load i32, i32* %222, align 4
  %305 = icmp ult i32 %303, %304
  br i1 %305, label %233, label %306

306:                                              ; preds = %301, %218
  call void @_ZN5blink17InternalPopupMenu20ItemIterationContext22FinishGroupIfNecessaryEv(%"class.blink::InternalPopupMenu::ItemIterationContext"* nonnull %13)
  %307 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3) #15
  %308 = bitcast %"class.WTF::StringUTF8Adaptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %308) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %308, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %15, i32 0) #15
  %309 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 1
  %310 = load i8*, i8** %309, align 8
  %311 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 2
  %312 = load i32, i32* %311, align 8
  %313 = zext i32 %312 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %72, i8* %310, i64 %313) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %308) #15
  %314 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %306
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #15
  br label %330

330:                                              ; preds = %306, %326, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #15
  %331 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %331) #15
  %332 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %333 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %334 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %334, i8 -86, i64 16, i1 false)
  %335 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %333, align 8
  %336 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %336) #15
  %337 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %26, align 8
  %338 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %337, i64 0, i32 0, i32 0, i32 0, i32 0
  %339 = call { i64, i64 } @_ZNK5blink7Element29VisibleBoundsInVisualViewportEv(%"class.blink::Element"* %338) #15
  %340 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  %341 = extractvalue { i64, i64 } %339, 0
  store i64 %341, i64* %340, align 8
  %342 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %343 = extractvalue { i64, i64 } %339, 1
  store i64 %343, i64* %342, align 8
  %344 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %26, align 8
  %345 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %344, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %346 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %345, align 8
  %347 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %346, i64 0, i32 2, i32 0, i32 0
  %348 = load %"class.blink::Document"*, %"class.blink::Document"** %347, align 8
  %349 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %348) #15
  %350 = bitcast %"class.blink::ChromeClient"* %335 to { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)***
  %351 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)**, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*** %350, align 8
  %352 = getelementptr inbounds { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %351, i64 7
  %353 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %352, align 8
  %354 = call { i64, i64 } %353(%"class.blink::ChromeClient"* %335, %"class.blink::IntRect"* nonnull dereferenceable(16) %19, %"class.blink::LocalFrameView"* %349) #15
  %355 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %356 = extractvalue { i64, i64 } %354, 0
  store i64 %356, i64* %355, align 8
  %357 = extractvalue { i64, i64 } %354, 1
  store i64 %357, i64* %332, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %336) #15
  call void @_ZN5blink15PagePopupClient11AddPropertyEPKcRKNS_7IntRectEPN3WTF12SharedBufferE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), %"class.blink::IntRect"* nonnull dereferenceable(16) %17, %"class.WTF::SharedBuffer"* %72) #15
  %358 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0), i64 2) #15
  %359 = bitcast %"class.WTF::StringUTF8Adaptor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %359) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %359, i8 -86, i64 40, i1 false) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %20, i32 0) #15
  %360 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 1
  %361 = load i8*, i8** %360, align 8
  %362 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 2
  %363 = load i32, i32* %362, align 8
  %364 = zext i32 %363 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %72, i8* %361, i64 %364) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %359) #15
  %365 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %365, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %366, null
  br i1 %367, label %381, label %368

368:                                              ; preds = %330
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  br i1 %372, label %375, label %377

375:                                              ; preds = %368
  %376 = add i32 %374, -1
  store i32 %376, i32* %373, align 4
  br label %377

377:                                              ; preds = %375, %368
  %378 = phi i32 [ %376, %375 ], [ %374, %368 ]
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %366) #15
  br label %381

381:                                              ; preds = %330, %377, %380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #15
  %382 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %22, align 8
  %383 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #15
  %384 = call i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"* %72) #15
  %385 = getelementptr inbounds i8, i8* %71, i64 8
  %386 = bitcast i8* %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %384, i64 %387) #15
  %389 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %388, %"class.WTF::StringImpl"** %389, align 8
  %390 = bitcast %"class.blink::PagePopup"* %382 to void (%"class.blink::PagePopup"*, %"class.WTF::String"*)***
  %391 = load void (%"class.blink::PagePopup"*, %"class.WTF::String"*)**, void (%"class.blink::PagePopup"*, %"class.WTF::String"*)*** %390, align 8
  %392 = getelementptr inbounds void (%"class.blink::PagePopup"*, %"class.WTF::String"*)*, void (%"class.blink::PagePopup"*, %"class.WTF::String"*)** %391, i64 2
  %393 = load void (%"class.blink::PagePopup"*, %"class.WTF::String"*)*, void (%"class.blink::PagePopup"*, %"class.WTF::String"*)** %392, align 8
  call void %393(%"class.blink::PagePopup"* %382, %"class.WTF::String"* nonnull dereferenceable(8) %21) #15
  %394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  %395 = icmp eq %"class.WTF::StringImpl"* %394, null
  br i1 %395, label %409, label %396

396:                                              ; preds = %381
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  br i1 %400, label %403, label %405

403:                                              ; preds = %396
  %404 = add i32 %402, -1
  store i32 %404, i32* %401, align 4
  br label %405

405:                                              ; preds = %403, %396
  %406 = phi i32 [ %404, %403 ], [ %402, %396 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %394) #15
  br label %409

409:                                              ; preds = %381, %405, %408
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %331) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %121) #15
  %410 = icmp eq i8* %71, null
  br i1 %410, label %417, label %411

411:                                              ; preds = %409
  %412 = bitcast i8* %71 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %412) #15
  %413 = bitcast i8* %71 to i32*
  %414 = load i32, i32* %413, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %417

416:                                              ; preds = %411
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %72) #15
  call void @free(i8* nonnull %71) #15
  br label %417

417:                                              ; preds = %25, %416, %411, %409, %69, %66, %29, %2
  ret void
}

declare zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink4Node23PixelSnappedBoundingBoxEv(%"class.blink::Node"*) local_unnamed_addr #1

declare i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InternalPopupMenu6UpdateEb(%"class.blink::InternalPopupMenu"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 -1, i32 5
  %4 = bitcast i8* %3 to %"class.blink::InternalPopupMenu"*
  tail call void @_ZN5blink17InternalPopupMenu6UpdateEb(%"class.blink::InternalPopupMenu"* %4, i1 zeroext %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InternalPopupMenu16DisconnectClientEv(%"class.blink::InternalPopupMenu"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::Member.1668"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 4
  %5 = load %"class.blink::PagePopup"*, %"class.blink::PagePopup"** %4, align 8
  %6 = icmp eq %"class.blink::PagePopup"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InternalPopupMenu", %"class.blink::InternalPopupMenu"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %8, align 8
  %10 = bitcast %"class.blink::ChromeClient"* %9 to void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)***
  %11 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %11, i64 76
  %13 = load void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::PagePopup"*)** %12, align 8
  tail call void %13(%"class.blink::ChromeClient"* %9, %"class.blink::PagePopup"* nonnull %5) #15
  br label %14

14:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN5blink15CSSFontSelector20FontCacheInvalidatedEv(%"class.blink::CSSFontSelector"*) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector15WillUseFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS4_6StringE(%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector12WillUseRangeERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS_19FontDataForRangeSetE(%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDataForRangeSet"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15CSSFontSelector7VersionEv(%"class.blink::CSSFontSelector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::FontFaceCache"*, %"class.blink::FontFaceCache"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %3, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

declare void @_ZN5blink15CSSFontSelector31ReportSuccessfulFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector27ReportFailedFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector30ReportSuccessfulLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector26ReportFailedLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector32ReportFontLookupByUniqueNameOnlyERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::CSSFontSelector"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector35ReportFontLookupByFallbackCharacterEiNS_20FontFallbackPriorityERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::CSSFontSelector"*, i32, i32, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector34ReportLastResortFallbackFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) unnamed_addr #1

declare void @_ZNK5blink15CSSFontSelector17ReportNotDefGlyphEv(%"class.blink::CSSFontSelector"*) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector31ReportEmojiSegmentGlyphCoverageEjj(%"class.blink::CSSFontSelector"*, i32, i32) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector32RegisterForInvalidationCallbacksEPNS_18FontSelectorClientE(%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector34UnregisterForInvalidationCallbacksEPNS_18FontSelectorClientE(%"class.blink::CSSFontSelector"*, %"class.blink::FontSelectorClient"*) unnamed_addr #1

declare void @_ZN5blink15CSSFontSelector19FontFaceInvalidatedENS_22FontInvalidationReasonE(%"class.blink::CSSFontSelector"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ExecutionContext"* @_ZNK5blink15CSSFontSelector19GetExecutionContextEv(%"class.blink::CSSFontSelector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = icmp eq %"class.blink::TreeScope"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %7) #15
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi %"class.blink::ExecutionContext"* [ %8, %5 ], [ null, %1 ]
  ret %"class.blink::ExecutionContext"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FontFaceCache"* @_ZN5blink15CSSFontSelector16GetFontFaceCacheEv(%"class.blink::CSSFontSelector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::FontFaceCache"*, %"class.blink::FontFaceCache"** %2, align 8
  ret %"class.blink::FontFaceCache"* %3
}

declare zeroext i1 @_ZN5blink15CSSFontSelector30IsPlatformFamilyMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::CSSFontSelector"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN5blink17InternalPopupMenu10ZoomFactorEv(%"class.blink::InternalPopupMenu"*) unnamed_addr #0 comdat align 2 {
  ret float 1.000000e+00
}

declare %"class.blink::PagePopupController"* @_ZN5blink15PagePopupClient25CreatePagePopupControllerERNS_4PageERNS_9PagePopupE(%"class.blink::PagePopupClient"*, %"class.blink::Page"* dereferenceable(1264), %"class.blink::PagePopup"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZThn8_N5blink17InternalPopupMenu10ZoomFactorEv(%"class.blink::InternalPopupMenu"*) unnamed_addr #0 comdat align 2 {
  ret float 1.000000e+00
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #2

declare void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element29UncachedStyleForPseudoElementERKNS_12StyleRequestE(%"class.blink::Element"*, %"class.blink::StyleRequest"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.957"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #15
  %3 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %0, i64 -23
  %8 = icmp eq %"class.base::RefCounted.957"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %0, i64 1
  %11 = bitcast %"class.base::RefCounted.957"* %10 to %"class.blink::StyleCachedData"**
  %12 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %11, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %11, align 8
  %13 = icmp eq %"class.blink::StyleCachedData"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::Vector.964"*, %"class.WTF::Vector.964"** %15, align 8
  store %"class.WTF::Vector.964"* null, %"class.WTF::Vector.964"** %15, align 8
  %17 = icmp eq %"class.WTF::Vector.964"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22, !prof !2

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.534*, %class.scoped_refptr.534** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.534, %class.scoped_refptr.534* %24, i64 %25
  br label %27

27:                                               ; preds = %22, %33
  %28 = phi %class.scoped_refptr.534* [ %34, %33 ], [ %24, %22 ]
  %29 = getelementptr inbounds %class.scoped_refptr.534, %class.scoped_refptr.534* %28, i64 0, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = icmp eq %"class.blink::ComputedStyle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %30) #15
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %class.scoped_refptr.534, %class.scoped_refptr.534* %28, i64 1
  %35 = icmp eq %class.scoped_refptr.534* %34, %26
  br i1 %35, label %36, label %27

36:                                               ; preds = %33
  store i32 0, i32* %19, align 4
  br label %37

37:                                               ; preds = %36, %18
  %38 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %16, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.scoped_refptr.534*, %class.scoped_refptr.534** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %16, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr.534*
  %42 = icmp eq %class.scoped_refptr.534* %39, %41
  br i1 %42, label %45, label %43, !prof !3

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3037"* %44, %class.scoped_refptr.534* %39) #15
  br label %45

45:                                               ; preds = %37, %43
  store %class.scoped_refptr.534* null, %class.scoped_refptr.534** %38, align 8
  %46 = bitcast %"class.WTF::Vector.964"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #15
  br label %47

47:                                               ; preds = %14, %45
  %48 = bitcast %"class.blink::StyleCachedData"* %12 to i8*
  tail call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %47, %9
  %50 = bitcast %"class.base::RefCounted.957"* %7 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* nonnull %50) #15
  %51 = bitcast %"class.base::RefCounted.957"* %7 to i8*
  tail call void @free(i8* %51) #15
  br label %52

52:                                               ; preds = %49, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.954", %"class.base::RefCounted.954"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.954"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #15
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #15
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #15
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #15
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #15
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #15
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #15
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #15
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.946", %"class.base::RefCounted.946"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.946"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #15
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #15
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #15
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #15
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #15
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #15
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #15
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #15
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #15
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #15
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #15
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #15
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #15
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #15
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #15
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #15
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #15
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #15
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #15
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #15
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #15
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #15
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #15
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.541", %"class.base::RefCounted.541"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.541"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #15
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #15
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #15
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3037"*, %class.scoped_refptr.534*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %class.scoped_refptr.534* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #15
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #15
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #15
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.622"*, %"struct.WTF::KeyValuePair.622"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair.622"* %26, null
  br i1 %27, label %73, label %28, !prof !3

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair.622"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #15
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #15
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #15
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #15
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair.622"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #15
  store %"struct.WTF::KeyValuePair.622"* null, %"struct.WTF::KeyValuePair.622"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.864", %"class.WTF::Vector.864"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !3

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #15
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.864"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #15
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #15
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #15
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #15
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #15
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #15
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #15
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #15
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #15
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #15
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #15
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #15
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #15
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.914* %2) #15
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #15
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #15
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #15
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.934", %"class.base::RefCounted.934"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.934"* %24 to %class.scoped_refptr.914*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.914* %25) #15
  %26 = getelementptr inbounds %"class.base::RefCounted.934", %"class.base::RefCounted.934"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.934"* %26 to %class.scoped_refptr.914*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.914* %27) #15
  %28 = getelementptr inbounds %"class.base::RefCounted.934", %"class.base::RefCounted.934"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.934"* %28 to %class.scoped_refptr.914*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.914* %29) #15
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #15
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #15
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #15
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #15
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #15
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.913", %"class.base::RefCounted.913"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.913"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #15
  %55 = getelementptr inbounds %"class.base::RefCounted.913", %"class.base::RefCounted.913"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.913"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #15
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #15
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #15
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #15
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #15
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #15
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.888", %"class.base::RefCounted.888"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.888"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #15
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #15
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.914*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.914, %class.scoped_refptr.914* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #15
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #15
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #15
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #15
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #15
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #15
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.924"*, %"class.base::RefCountedData.924"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.924"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.924", %"class.base::RefCountedData.924"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.924", %"class.base::RefCountedData.924"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.925", %"class.base::RefCountedThreadSafe.925"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.925"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !3

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.925", %"class.base::RefCountedThreadSafe.925"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !2

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #15
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.925"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.924"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #16
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.716", %"class.base::RefCounted.716"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #15
  %50 = getelementptr inbounds %"class.base::RefCounted.716", %"class.base::RefCounted.716"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.716", %"class.base::RefCounted.716"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.716"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.716"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #15
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #15
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #15
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #15
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.664", %"class.base::RefCounted.664"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.664", %"class.base::RefCounted.664"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.664"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.664", %"class.base::RefCounted.664"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.664"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !3

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.664"* %47 to %"class.WTF::VectorBuffer.666"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.666"* %59, %"class.blink::ShadowData"* %54) #15
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #15
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.872*, %class.scoped_refptr.872** %64, align 8
  %66 = icmp eq %class.scoped_refptr.872* %65, null
  br i1 %66, label %101, label %67, !prof !3

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.872* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !2

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.872, %class.scoped_refptr.872* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.872* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.872, %class.scoped_refptr.872* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #15
  %83 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.719"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.719"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #15
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.872, %class.scoped_refptr.872* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.872* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #15
  store %class.scoped_refptr.872* null, %class.scoped_refptr.872** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #15
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #15
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #15
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #15
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #15
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #15
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.666"*, %"class.blink::ShadowData"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #15
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #15
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #15
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #15
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.864", %"class.WTF::Vector.864"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !3

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !2

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.864"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #15
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #15
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.847"* %108, %"class.blink::PaintImages"* null) #15
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.839", %"class.WTF::Vector.839"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !3

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !2

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #15
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.839"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #15
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #15
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #15
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #15
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #15
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.794"*, %"struct.WTF::KeyValuePair.794"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.794"* %166, null
  br i1 %167, label %200, label %168, !prof !3

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.794", %"struct.WTF::KeyValuePair.794"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.794"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #15
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.794"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #15
  store %"struct.WTF::KeyValuePair.794"* null, %"struct.WTF::KeyValuePair.794"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #15
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #15
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #15
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #15
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #15
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #15
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #15
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #15
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.762", %"class.base::RefCounted.762"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.762"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !3

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.762", %"class.base::RefCounted.762"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !2

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #15
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #15
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #15
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #15
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.847"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.847", %"class.std::__1::unique_ptr.847"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.670"*, %"class.blink::Persistent.670"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.670"* %8, null
  br i1 %9, label %50, label %10, !prof !3

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.670"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.670", %"class.blink::Persistent.670"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.670"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.670", %"class.blink::Persistent.670"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #15
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #15
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.670", %"class.blink::Persistent.670"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.670"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #15
  store %"class.blink::Persistent.670"* null, %"class.blink::Persistent.670"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #15
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.806", %"class.WTF::Vector.806"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.809*, %class.scoped_refptr.809** %3, align 8
  %5 = icmp eq %class.scoped_refptr.809* %4, null
  br i1 %5, label %39, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.809* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.809, %class.scoped_refptr.809* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.809* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.809, %class.scoped_refptr.809* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.810", %"class.base::RefCountedThreadSafe.810"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.810", %"class.base::RefCountedThreadSafe.810"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.810"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.810"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #15
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.809, %class.scoped_refptr.809* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.809* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.806"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #15
  store %class.scoped_refptr.809* null, %class.scoped_refptr.809** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !3

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #15
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !3

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !2

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #15
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #15
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !3

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !2

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #15
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !3

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #15
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !3

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #15
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.813", %"class.WTF::Vector.813"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !3

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !2

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #15
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.813"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #15
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.649", %"class.WTF::Vector.649"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !3

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !2

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #15
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.649"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #15
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.695", %"class.WTF::Vector.695"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #15
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #15
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #15
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.695"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.695", %"class.WTF::Vector.695"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !3

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !2

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.695"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.786"*, %"struct.WTF::KeyValuePair.786"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.786"* %83, null
  br i1 %84, label %117, label %85, !prof !3

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.786", %"struct.WTF::KeyValuePair.786"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.786"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #15
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.786"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #15
  store %"struct.WTF::KeyValuePair.786"* null, %"struct.WTF::KeyValuePair.786"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.781"*, %"struct.WTF::KeyValuePair.781"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.781"* %119, null
  br i1 %120, label %124, label %121, !prof !3

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.781"* nonnull %119, i32 %123) #15
  store %"struct.WTF::KeyValuePair.781"* null, %"struct.WTF::KeyValuePair.781"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.781"*, %"struct.WTF::KeyValuePair.781"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.781"* %126, null
  br i1 %127, label %131, label %128, !prof !3

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.781"* nonnull %126, i32 %130) #15
  store %"struct.WTF::KeyValuePair.781"* null, %"struct.WTF::KeyValuePair.781"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.781"*, %"struct.WTF::KeyValuePair.781"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.781"* %133, null
  br i1 %134, label %138, label %135, !prof !3

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.781"* nonnull %133, i32 %137) #15
  store %"struct.WTF::KeyValuePair.781"* null, %"struct.WTF::KeyValuePair.781"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.781"*, %"struct.WTF::KeyValuePair.781"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.781"* %140, null
  br i1 %141, label %145, label %142, !prof !3

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.781"* nonnull %140, i32 %144) #15
  store %"struct.WTF::KeyValuePair.781"* null, %"struct.WTF::KeyValuePair.781"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.776"*, %"struct.WTF::KeyValuePair.776"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.776"* %147, null
  br i1 %148, label %196, label %149, !prof !3

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.776"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !3

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !2

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #15
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #15
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.776"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #15
  store %"struct.WTF::KeyValuePair.776"* null, %"struct.WTF::KeyValuePair.776"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.776"*, %"struct.WTF::KeyValuePair.776"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.776"* %198, null
  br i1 %199, label %247, label %200, !prof !3

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.776"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !3

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #15
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #15
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.776"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #15
  store %"struct.WTF::KeyValuePair.776"* null, %"struct.WTF::KeyValuePair.776"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.776"*, %"struct.WTF::KeyValuePair.776"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.776"* %249, null
  br i1 %250, label %298, label %251, !prof !3

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.776"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !3

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !2

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #15
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #15
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.776"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #15
  store %"struct.WTF::KeyValuePair.776"* null, %"struct.WTF::KeyValuePair.776"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.776"*, %"struct.WTF::KeyValuePair.776"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.776"* %300, null
  br i1 %301, label %349, label %302, !prof !3

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.776"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !3

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !2

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #15
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #15
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.776"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #15
  store %"struct.WTF::KeyValuePair.776"* null, %"struct.WTF::KeyValuePair.776"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.776"*, %"struct.WTF::KeyValuePair.776"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.776"* %351, null
  br i1 %352, label %400, label %353, !prof !3

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.776"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !3

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !2

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #15
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #15
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.776"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #15
  store %"struct.WTF::KeyValuePair.776"* null, %"struct.WTF::KeyValuePair.776"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.776"*, %"struct.WTF::KeyValuePair.776"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.776"* %402, null
  br i1 %403, label %451, label %404, !prof !3

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.776"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !3

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !2

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #15
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.776", %"struct.WTF::KeyValuePair.776"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #15
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.776"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #15
  store %"struct.WTF::KeyValuePair.776"* null, %"struct.WTF::KeyValuePair.776"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.781"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.781"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.781", %"struct.WTF::KeyValuePair.781"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.781", %"struct.WTF::KeyValuePair.781"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.864", %"class.WTF::Vector.864"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !3

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.781", %"struct.WTF::KeyValuePair.781"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !2

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.864"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #15
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #15
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #15
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #15
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #15
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #15
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #15
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #15
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #15
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #15
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !2

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #15
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #15
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #15
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #15
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #15
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #15
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #15
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #15
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #15
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #15
  %188 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.719"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.719"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #15
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #15
  %205 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.719"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.719"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #15
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #15
  %222 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.719", %"class.base::RefCounted.719"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.719"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.719"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #15
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.716", %"class.base::RefCounted.716"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #15
  %239 = getelementptr inbounds %"class.base::RefCounted.716", %"class.base::RefCounted.716"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.716", %"class.base::RefCounted.716"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.716"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.716"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #15
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.713", %"class.base::RefCounted.713"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #15
  %256 = getelementptr inbounds %"class.base::RefCounted.713", %"class.base::RefCounted.713"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.713", %"class.base::RefCounted.713"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.713"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.713"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #15
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #15
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #15
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #15
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #15
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #15
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.700"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.700"* %353 to %"struct.std::__1::default_delete.709"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.709"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #15
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !3

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !2

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #15
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #15
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #15
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.700"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.700"* %400 to %"struct.std::__1::default_delete.709"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.709"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #15
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !3

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !2

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #15
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #15
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #15
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.700"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.700"* %447 to %"struct.std::__1::default_delete.709"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.709"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #15
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !3

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !2

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #15
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #15
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #15
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.700"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.700"* %494 to %"struct.std::__1::default_delete.709"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.709"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #15
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !3

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !2

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #15
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #15
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #15
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.709"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.695", %"class.WTF::Vector.695"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !3

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !2

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #15
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #15
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #15
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.695"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !3

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !2

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #15
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #16
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #15
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #15
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #15
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #15
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #15
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.664", %"class.base::RefCounted.664"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.664", %"class.base::RefCounted.664"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.664"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.664", %"class.base::RefCounted.664"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.664"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.664"* %76 to %"class.WTF::VectorBuffer.666"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.666"* %88, %"class.blink::ShadowData"* %83) #15
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #15
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #15
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.656", %"class.WTF::Vector.656"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.659"*, %"struct.std::__1::pair.659"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.659"* %103, null
  br i1 %104, label %156, label %105, !prof !3

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.659"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !2

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.659", %"struct.std::__1::pair.659"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.659"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.659", %"struct.std::__1::pair.659"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.659", %"struct.std::__1::pair.659"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #15
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.659", %"struct.std::__1::pair.659"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.659"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.656"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #15
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #15
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #15
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #15
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.649", %"class.WTF::Vector.649"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !3

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !2

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #15
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.649"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #15
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #15
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #15
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #15
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #15
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #15
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #15
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #15
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.617", %"class.base::RefCounted.617"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.617"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #15
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #15
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.609", %"class.base::RefCountedThreadSafe.609"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.609"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.609", %"class.base::RefCountedThreadSafe.609"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !2

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #15
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #15
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #15
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #15
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #2

declare dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #13

declare zeroext i1 @_ZN5blinkeqERKNS_10FontFamilyES2_(%"class.blink::FontFamily"* dereferenceable(16), %"class.blink::FontFamily"* dereferenceable(16)) local_unnamed_addr #1

declare i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #14

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %2, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3) #15
  %4 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %2, i64 -23
  %9 = getelementptr inbounds %"class.base::RefCounted.957", %"class.base::RefCounted.957"* %2, i64 1
  %10 = bitcast %"class.base::RefCounted.957"* %9 to %"class.blink::StyleCachedData"**
  %11 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %10, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %10, align 8
  %12 = icmp eq %"class.blink::StyleCachedData"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.964"*, %"class.WTF::Vector.964"** %14, align 8
  store %"class.WTF::Vector.964"* null, %"class.WTF::Vector.964"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.964"* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %15, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21, !prof !2

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr.534*, %class.scoped_refptr.534** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr.534, %class.scoped_refptr.534* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %32
  %27 = phi %class.scoped_refptr.534* [ %33, %32 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr.534, %class.scoped_refptr.534* %27, i64 0, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %29) #15
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %class.scoped_refptr.534, %class.scoped_refptr.534* %27, i64 1
  %34 = icmp eq %class.scoped_refptr.534* %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %32
  store i32 0, i32* %18, align 4
  br label %36

36:                                               ; preds = %35, %17
  %37 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %15, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr.534*, %class.scoped_refptr.534** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %15, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %class.scoped_refptr.534*
  %41 = icmp eq %class.scoped_refptr.534* %38, %40
  br i1 %41, label %44, label %42, !prof !3

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.964", %"class.WTF::Vector.964"* %15, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3037"* %43, %class.scoped_refptr.534* %38) #15
  br label %44

44:                                               ; preds = %36, %42
  store %class.scoped_refptr.534* null, %class.scoped_refptr.534** %37, align 8
  %45 = bitcast %"class.WTF::Vector.964"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #15
  br label %46

46:                                               ; preds = %13, %44
  %47 = bitcast %"class.blink::StyleCachedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %47) #16
  br label %48

48:                                               ; preds = %46, %7
  %49 = bitcast %"class.base::RefCounted.957"* %8 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %49) #15
  %50 = bitcast %"class.base::RefCounted.957"* %8 to i8*
  tail call void @free(i8* %50) #15
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CSSFontSelectorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontSelector"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSFontSelector"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSFontSelector"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12ChromeClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ChromeClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::ChromeClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ChromeClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::Visitor"*)** %5, i64 107
  %7 = load void (%"class.blink::ChromeClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ChromeClient"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HTMLSelectElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLSelectElement"*
  tail call void @_ZNK5blink17HTMLSelectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectElement"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink17HTMLSelectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectElement"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink15CustomScrollbarC1EPNS_14ScrollableAreaENS_20ScrollbarOrientationEPNS_7ElementE(%"class.blink::CustomScrollbar"*, %"class.blink::ScrollableArea"*, i32, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9ScrollbarEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ScrollbarEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9ScrollbarEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ScrollbarEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9ScrollbarEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #12 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.66, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Scrollbar"*
  %4 = bitcast i8* %1 to void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)**, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)** %5, i64 14
  %7 = load void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Scrollbar"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_9ScrollbarEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Scrollbar"*
  %3 = bitcast i8* %0 to void (%"class.blink::Scrollbar"*)***
  %4 = load void (%"class.blink::Scrollbar"*)**, void (%"class.blink::Scrollbar"*)*** %3, align 8
  %5 = load void (%"class.blink::Scrollbar"*)*, void (%"class.blink::Scrollbar"*)** %4, align 8
  tail call void %5(%"class.blink::Scrollbar"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9ScrollbarEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3190", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.3190"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3190", %"class.WTF::StringTypeAdapter.3190"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.3190"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3190"* nonnull %4, i8* %21) #15
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.69, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.70, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.69, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3190"*, i8*) unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3189"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3190"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3189"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3190"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1682"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1679"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1679", %"class.WTF::Vector.1679"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.72, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.1679", %"class.WTF::Vector.1679"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1682"*, %"class.blink::Member.1682"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1682", %"class.blink::Member.1682"* %24, i64 %25
  ret %"class.blink::Member.1682"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FontCacheClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FontCacheClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontCacheClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontCacheClient"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FontCacheClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FontCacheClient"*
  %3 = bitcast i8* %0 to void (%"class.blink::FontCacheClient"*)***
  %4 = load void (%"class.blink::FontCacheClient"*)**, void (%"class.blink::FontCacheClient"*)*** %3, align 8
  %5 = load void (%"class.blink::FontCacheClient"*)*, void (%"class.blink::FontCacheClient"*)** %4, align 8
  tail call void %5(%"class.blink::FontCacheClient"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FontCacheClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 1048575}
