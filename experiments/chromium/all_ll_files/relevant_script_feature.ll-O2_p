; ModuleID = '../../third_party/cld_3/src/src/relevant_script_feature.cc'
source_filename = "../../third_party/cld_3/src/src/relevant_script_feature.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.chrome_lang_id::ComponentRegistry" = type { i8*, i8*, i8*, i32, %"class.chrome_lang_id::ComponentRegistry<chrome_lang_id::FeatureFunction<chrome_lang_id::Sentence> *()>::Registrar"* }
%"class.chrome_lang_id::ComponentRegistry<chrome_lang_id::FeatureFunction<chrome_lang_id::Sentence> *()>::Registrar" = type opaque
%"class.chrome_lang_id::RelevantScriptFeature" = type { %"class.chrome_lang_id::FeatureFunction" }
%"class.chrome_lang_id::FeatureFunction" = type { %"class.chrome_lang_id::GenericFeatureFunction" }
%"class.chrome_lang_id::GenericFeatureFunction" = type { i32 (...)**, %"class.chrome_lang_id::GenericFeatureExtractor"*, %"class.chrome_lang_id::FeatureFunctionDescriptor"*, %"class.chrome_lang_id::FeatureType"*, %"class.std::__1::basic_string" }
%"class.chrome_lang_id::GenericFeatureExtractor" = type { i32 (...)**, %"class.chrome_lang_id::FeatureExtractorDescriptor", %"class.std::__1::vector" }
%"class.chrome_lang_id::FeatureExtractorDescriptor" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.0", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.chrome_lang_id::FeatureType"**, %"class.chrome_lang_id::FeatureType"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.chrome_lang_id::FeatureType"** }
%"class.chrome_lang_id::FeatureFunctionDescriptor" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.16", %"class.google::protobuf::RepeatedPtrField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i32, [4 x i8] }>
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::RepeatedPtrField.16" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.chrome_lang_id::FeatureType" = type <{ i32 (...)**, %"class.std::__1::basic_string", i64, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.chrome_lang_id::TaskContext" = type { %"class.chrome_lang_id::TaskSpec", %"class.std::__1::vector.20" }
%"class.chrome_lang_id::TaskSpec" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.17", %"class.google::protobuf::RepeatedPtrField.18", %"class.google::protobuf::RepeatedPtrField.19", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::RepeatedPtrField.17" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.18" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.19" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::basic_string"* }
%"class.chrome_lang_id::NumericFeatureType" = type { %"class.chrome_lang_id::FeatureType.base", i64 }
%"class.chrome_lang_id::FeatureType.base" = type <{ i32 (...)**, %"class.std::__1::basic_string", i64, i8 }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.chrome_lang_id::StringPiece" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.chrome_lang_id::WorkspaceSet" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.42", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i64 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { float }
%"class.chrome_lang_id::Sentence" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::ExtensionSet", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.62", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::internal::ExtensionSet" = type { %"class.google::protobuf::Arena"*, i16, i16, %"union.google::protobuf::internal::ExtensionSet::AllocatedData" }
%"union.google::protobuf::internal::ExtensionSet::AllocatedData" = type { %"struct.google::protobuf::internal::ExtensionSet::KeyValue"* }
%"struct.google::protobuf::internal::ExtensionSet::KeyValue" = type { i32, %"struct.google::protobuf::internal::ExtensionSet::Extension" }
%"struct.google::protobuf::internal::ExtensionSet::Extension" = type { %union.anon.45, i8, i8, i8, i8, i32, %"class.google::protobuf::FieldDescriptor"* }
%union.anon.45 = type { i64 }
%"class.google::protobuf::FieldDescriptor" = type opaque
%"class.google::protobuf::RepeatedPtrField.62" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.chrome_lang_id::FeatureVector" = type { %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.chrome_lang_id::FeatureVector::Element"*, %"struct.chrome_lang_id::FeatureVector::Element"*, %"class.std::__1::__compressed_pair.65" }
%"struct.chrome_lang_id::FeatureVector::Element" = type { %"class.chrome_lang_id::FeatureType"*, i64 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.chrome_lang_id::FeatureVector::Element"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.chrome_lang_id::WorkspaceRegistry" = type { %"class.std::__1::unordered_map.70", %"class.std::__1::unordered_map.94" }
%"class.std::__1::unordered_map.70" = type { %"class.std::__1::__hash_table.71" }
%"class.std::__1::__hash_table.71" = type <{ %"class.std::__1::unique_ptr.72", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.90", [4 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base.75"** }
%"struct.std::__1::__hash_node_base.75" = type { %"struct.std::__1::__hash_node_base.75"* }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::__bucket_list_deallocator.77" }
%"class.std::__1::__bucket_list_deallocator.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.75" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::unordered_map.94" = type { %"class.std::__1::__hash_table.95" }
%"class.std::__1::__hash_table.95" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.99"** }
%"struct.std::__1::__hash_node_base.99" = type { %"struct.std::__1::__hash_node_base.99"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator.101" }
%"class.std::__1::__bucket_list_deallocator.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base.99" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.43" }

$_ZNK14chrome_lang_id22GenericFeatureFunction4nameEv = comdat any

$_ZN14chrome_lang_id21RelevantScriptFeatureD0Ev = comdat any

$_ZN14chrome_lang_id22GenericFeatureFunction17RequestWorkspacesEPNS_17WorkspaceRegistryE = comdat any

$_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE12RegistryNameEv = comdat any

$_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE10PreprocessEPNS_12WorkspaceSetEPS1_ = comdat any

$_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE7ComputeERKNS_12WorkspaceSetERKS1_PKNS_13FeatureVectorE = comdat any

@_ZTVN14chrome_lang_id21RelevantScriptFeatureE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.chrome_lang_id::GenericFeatureFunction"*)* @_ZN14chrome_lang_id22GenericFeatureFunctionD2Ev to i8*), i8* bitcast (void (%"class.chrome_lang_id::RelevantScriptFeature"*)* @_ZN14chrome_lang_id21RelevantScriptFeatureD0Ev to i8*), i8* bitcast (void (%"class.chrome_lang_id::RelevantScriptFeature"*, %"class.chrome_lang_id::TaskContext"*)* @_ZN14chrome_lang_id21RelevantScriptFeature5SetupEPNS_11TaskContextE to i8*), i8* bitcast (void (%"class.chrome_lang_id::RelevantScriptFeature"*, %"class.chrome_lang_id::TaskContext"*)* @_ZN14chrome_lang_id21RelevantScriptFeature4InitEPNS_11TaskContextE to i8*), i8* bitcast (void (%"class.chrome_lang_id::GenericFeatureFunction"*, %"class.chrome_lang_id::WorkspaceRegistry"*)* @_ZN14chrome_lang_id22GenericFeatureFunction17RequestWorkspacesEPNS_17WorkspaceRegistryE to i8*), i8* bitcast (void (%"class.chrome_lang_id::GenericFeatureFunction"*, %"class.std::__1::vector"*)* @_ZNK14chrome_lang_id22GenericFeatureFunction15GetFeatureTypesEPNSt3__16vectorIPNS_11FeatureTypeENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (%"class.chrome_lang_id::FeatureType"* (%"class.chrome_lang_id::GenericFeatureFunction"*)* @_ZNK14chrome_lang_id22GenericFeatureFunction14GetFeatureTypeEv to i8*), i8* bitcast (i8* (%"class.chrome_lang_id::FeatureFunction"*)* @_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE12RegistryNameEv to i8*), i8* bitcast (void (%"class.chrome_lang_id::FeatureFunction"*, %"class.chrome_lang_id::WorkspaceSet"*, %"class.chrome_lang_id::Sentence"*)* @_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE10PreprocessEPNS_12WorkspaceSetEPS1_ to i8*), i8* bitcast (void (%"class.chrome_lang_id::RelevantScriptFeature"*, %"class.chrome_lang_id::WorkspaceSet"*, %"class.chrome_lang_id::Sentence"*, %"class.chrome_lang_id::FeatureVector"*)* @_ZNK14chrome_lang_id21RelevantScriptFeature8EvaluateERKNS_12WorkspaceSetERKNS_8SentenceEPNS_13FeatureVectorE to i8*), i8* bitcast (i64 (%"class.chrome_lang_id::FeatureFunction"*, %"class.chrome_lang_id::WorkspaceSet"*, %"class.chrome_lang_id::Sentence"*, %"class.chrome_lang_id::FeatureVector"*)* @_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE7ComputeERKNS_12WorkspaceSetERKS1_PKNS_13FeatureVectorE to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZN14chrome_lang_id17RegisterableClassINS_15FeatureFunctionINS_8SentenceEJEEEE9registry_E = external local_unnamed_addr global %"struct.chrome_lang_id::ComponentRegistry"*, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14chrome_lang_id21RelevantScriptFeature5SetupEPNS_11TaskContextE(%"class.chrome_lang_id::RelevantScriptFeature"* nocapture, %"class.chrome_lang_id::TaskContext"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14chrome_lang_id21RelevantScriptFeature4InitEPNS_11TaskContextE(%"class.chrome_lang_id::RelevantScriptFeature"*, %"class.chrome_lang_id::TaskContext"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.chrome_lang_id::RelevantScriptFeature", %"class.chrome_lang_id::RelevantScriptFeature"* %0, i64 0, i32 0, i32 0
  %5 = tail call i8* @_Znwm(i64 56) #11
  %6 = bitcast i8* %5 to %"class.chrome_lang_id::NumericFeatureType"*
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @_ZNK14chrome_lang_id22GenericFeatureFunction4nameEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.chrome_lang_id::GenericFeatureFunction"* %4)
  call void @_ZN14chrome_lang_id18NumericFeatureTypeC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx(%"class.chrome_lang_id::NumericFeatureType"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i64 12) #12
  %8 = getelementptr inbounds %"class.chrome_lang_id::RelevantScriptFeature", %"class.chrome_lang_id::RelevantScriptFeature"* %0, i64 0, i32 0, i32 0, i32 3
  %9 = bitcast %"class.chrome_lang_id::FeatureType"** %8 to i8**
  store i8* %5, i8** %9, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %2, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14chrome_lang_id22GenericFeatureFunction4nameEv(%"class.std::__1::basic_string"* noalias sret, %"class.chrome_lang_id::GenericFeatureFunction"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.chrome_lang_id::StringPiece", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"class.chrome_lang_id::GenericFeatureFunction", %"class.chrome_lang_id::GenericFeatureFunction"* %1, i64 0, i32 2
  %9 = load %"class.chrome_lang_id::FeatureFunctionDescriptor"*, %"class.chrome_lang_id::FeatureFunctionDescriptor"** %8, align 8
  %10 = getelementptr inbounds %"class.chrome_lang_id::FeatureFunctionDescriptor", %"class.chrome_lang_id::FeatureFunctionDescriptor"* %9, i64 0, i32 6, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %21

19:                                               ; preds = %2
  %20 = zext i8 %14 to i64
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i64 [ %18, %16 ], [ %20, %19 ]
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %52

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.chrome_lang_id::GenericFeatureFunction", %"class.chrome_lang_id::GenericFeatureFunction"* %1, i64 0, i32 4
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.chrome_lang_id::GenericFeatureFunction", %"class.chrome_lang_id::GenericFeatureFunction"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  br label %35

33:                                               ; preds = %24
  %34 = zext i8 %28 to i64
  br label %35

35:                                               ; preds = %30, %33
  %36 = phi i64 [ %32, %30 ], [ %34, %33 ]
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.chrome_lang_id::GenericFeatureFunction", %"class.chrome_lang_id::GenericFeatureFunction"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %44 = zext i8 %28 to i64
  %45 = select i1 %29, i8* %40, i8* %43
  %46 = select i1 %29, i64 %42, i64 %44
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %45, i64 %46) #12
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #12
  %49 = load %"class.chrome_lang_id::FeatureFunctionDescriptor"*, %"class.chrome_lang_id::FeatureFunctionDescriptor"** %8, align 8
  br label %50

50:                                               ; preds = %38, %35
  %51 = phi %"class.chrome_lang_id::FeatureFunctionDescriptor"* [ %49, %38 ], [ %9, %35 ]
  call void @_ZN14chrome_lang_id5ToFMLERKNS_25FeatureFunctionDescriptorEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.chrome_lang_id::FeatureFunctionDescriptor"* dereferenceable(96) %51, %"class.std::__1::basic_string"* nonnull %3) #12
  br label %63

52:                                               ; preds = %21
  %53 = icmp eq %"class.std::__1::basic_string"* %3, %11
  br i1 %53, label %63, label %54

54:                                               ; preds = %52
  br i1 %15, label %57, label %55

55:                                               ; preds = %54
  %56 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %56, i64 24, i1 false) #12
  br label %63

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %59, i64 %61) #12
  br label %63

63:                                               ; preds = %57, %55, %52, %50
  %64 = bitcast %"class.chrome_lang_id::StringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #12
  %65 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %4, i64 0, i32 0
  %66 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %4, i64 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = bitcast %"class.chrome_lang_id::StringPiece"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false)
  %70 = load i8, i8* %68, align 1
  %71 = icmp slt i8 %70, 0
  %72 = load i8*, i8** %6, align 8
  %73 = select i1 %71, i8* %72, i8* %5
  store i8* %73, i8** %65, align 8
  %74 = load i64, i64* %7, align 8
  %75 = zext i8 %70 to i64
  %76 = select i1 %71, i64 %74, i64 %75
  %77 = trunc i64 %76 to i32
  store i32 %77, i32* %66, align 8
  %78 = call i32 @_ZN14chrome_lang_id5utils23RemoveWhitespaceContextEPNS_11StringPieceE(%"class.chrome_lang_id::StringPiece"* nonnull %4) #12
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 -86, i64 24, i1 false)
  %83 = load i8*, i8** %65, align 8
  %84 = load i32, i32* %66, align 8
  %85 = sext i32 %84 to i64
  %86 = icmp ugt i32 %84, -17
  br i1 %86, label %87, label %89

87:                                               ; preds = %63
  %88 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %88) #13
  unreachable

89:                                               ; preds = %63
  %90 = icmp ult i32 %84, 23
  br i1 %90, label %96, label %91

91:                                               ; preds = %89
  %92 = add nuw nsw i64 %85, 16
  %93 = and i64 %92, -16
  %94 = call i8* @_Znwm(i64 %93) #11
  store i8* %94, i8** %79, align 8
  %95 = or i64 %93, -9223372036854775808
  store i64 %95, i64* %81, align 8
  store i64 %85, i64* %80, align 8
  br label %102

96:                                               ; preds = %89
  %97 = trunc i32 %84 to i8
  %98 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  store i8 %97, i8* %99, align 1
  %100 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %101 = icmp eq i32 %84, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %96, %91
  %103 = phi i8* [ %94, %91 ], [ %100, %96 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %83, i64 %85, i1 false) #12
  br label %104

104:                                              ; preds = %96, %102
  %105 = phi i8* [ %100, %96 ], [ %103, %102 ]
  %106 = getelementptr inbounds i8, i8* %105, i64 %85
  store i8 0, i8* %106, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #12
  %107 = load i8, i8* %68, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %110) #11
  br label %111

111:                                              ; preds = %104, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

declare void @_ZN14chrome_lang_id18NumericFeatureTypeC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx(%"class.chrome_lang_id::NumericFeatureType"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14chrome_lang_id21RelevantScriptFeature8EvaluateERKNS_12WorkspaceSetERKNS_8SentenceEPNS_13FeatureVectorE(%"class.chrome_lang_id::RelevantScriptFeature"* nocapture readonly, %"class.chrome_lang_id::WorkspaceSet"* nocapture readnone dereferenceable(40), %"class.chrome_lang_id::Sentence"* nocapture readonly dereferenceable(88), %"class.chrome_lang_id::FeatureVector"*) unnamed_addr #1 align 2 {
  %5 = alloca [12 x i32], align 16
  %6 = getelementptr inbounds %"class.chrome_lang_id::Sentence", %"class.chrome_lang_id::Sentence"* %2, i64 0, i32 6, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = bitcast [12 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 48, i1 false)
  %9 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  br label %23

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %21 = zext i8 %11 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  br label %23

23:                                               ; preds = %13, %19
  %24 = phi i8* [ %18, %13 ], [ %22, %19 ]
  %25 = phi i8* [ %15, %13 ], [ %20, %19 ]
  %26 = icmp ult i8* %25, %24
  br i1 %26, label %27, label %104

27:                                               ; preds = %23, %98
  %28 = phi i32 [ %99, %98 ], [ 0, %23 ]
  %29 = phi i8* [ %102, %98 ], [ %25, %23 ]
  %30 = tail call i32 @_ZN14chrome_lang_id5utils10OneCharLenEPKc(i8* %29) #12
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = icmp ugt i8* %32, %24
  br i1 %33, label %104, label %34

34:                                               ; preds = %27
  switch i32 %30, label %91 [
    i32 1, label %35
    i32 4, label %92
    i32 2, label %44
    i32 3, label %66
  ]

35:                                               ; preds = %34
  %36 = load i8, i8* %29, align 1
  %37 = tail call i16** @__ctype_b_loc() #14
  %38 = load i16*, i16** %37, align 8
  %39 = sext i8 %36 to i64
  %40 = getelementptr inbounds i16, i16* %38, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1024
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %98, label %92

44:                                               ; preds = %34
  %45 = load i8, i8* %29, align 1
  %46 = and i8 %45, 31
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 6
  %49 = getelementptr inbounds i8, i8* %29, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, 63
  %52 = zext i8 %51 to i32
  %53 = or i32 %48, %52
  %54 = icmp ugt i32 %53, 1279
  br i1 %54, label %55, label %61

55:                                               ; preds = %44
  %56 = icmp ugt i32 %53, 1535
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = icmp ult i32 %53, 1792
  br i1 %58, label %92, label %65

59:                                               ; preds = %55
  %60 = icmp ugt i32 %53, 1423
  br i1 %60, label %92, label %65

61:                                               ; preds = %44
  %62 = icmp ugt i32 %53, 1023
  br i1 %62, label %92, label %63

63:                                               ; preds = %61
  %64 = icmp ugt i32 %53, 879
  br i1 %64, label %92, label %65

65:                                               ; preds = %63, %59, %57
  br label %92

66:                                               ; preds = %34
  %67 = load i8, i8* %29, align 1
  %68 = and i8 %67, 15
  %69 = zext i8 %68 to i32
  %70 = shl nuw nsw i32 %69, 12
  %71 = getelementptr inbounds i8, i8* %29, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = and i8 %72, 63
  %74 = zext i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 6
  %76 = or i32 %75, %70
  %77 = getelementptr inbounds i8, i8* %29, i64 2
  %78 = load i8, i8* %77, align 1
  %79 = and i8 %78, 63
  %80 = zext i8 %79 to i32
  %81 = or i32 %76, %80
  %82 = icmp ugt i32 %81, 12447
  br i1 %82, label %83, label %85

83:                                               ; preds = %66
  %84 = icmp ult i32 %81, 12544
  br i1 %84, label %92, label %90

85:                                               ; preds = %66
  %86 = icmp ugt i32 %81, 12352
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = and i32 %76, 65280
  %89 = icmp eq i32 %88, 4352
  br i1 %89, label %92, label %90

90:                                               ; preds = %87, %83
  br label %92

91:                                               ; preds = %34
  br label %92

92:                                               ; preds = %34, %35, %57, %59, %61, %63, %65, %83, %85, %87, %90, %91
  %93 = phi i64 [ 0, %91 ], [ 2, %65 ], [ 8, %57 ], [ 7, %59 ], [ 6, %61 ], [ 5, %63 ], [ 3, %90 ], [ 11, %83 ], [ 10, %85 ], [ 9, %87 ], [ 1, %35 ], [ 4, %34 ]
  %94 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = add nsw i32 %28, 1
  br label %98

98:                                               ; preds = %92, %35
  %99 = phi i32 [ %28, %35 ], [ %97, %92 ]
  %100 = tail call i32 @_ZN14chrome_lang_id5utils10OneCharLenEPKc(i8* %29) #12
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %29, i64 %101
  %103 = icmp ult i8* %102, %24
  br i1 %103, label %27, label %104

104:                                              ; preds = %98, %27, %23
  %105 = phi i32 [ 0, %23 ], [ %28, %27 ], [ %99, %98 ]
  %106 = sitofp i32 %105 to float
  %107 = getelementptr inbounds %"class.chrome_lang_id::RelevantScriptFeature", %"class.chrome_lang_id::RelevantScriptFeature"* %0, i64 0, i32 0, i32 0, i32 3
  %108 = bitcast %"class.chrome_lang_id::FeatureType"** %107 to i64*
  %109 = getelementptr inbounds %"class.chrome_lang_id::FeatureVector", %"class.chrome_lang_id::FeatureVector"* %3, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.chrome_lang_id::FeatureVector", %"class.chrome_lang_id::FeatureVector"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"** %109 to i64*
  %112 = bitcast %"class.chrome_lang_id::FeatureVector"* %3 to i64*
  %113 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"** %110 to i64*
  %114 = getelementptr inbounds %"class.chrome_lang_id::FeatureVector", %"class.chrome_lang_id::FeatureVector"* %3, i64 0, i32 0, i32 0, i32 0
  br label %116

115:                                              ; preds = %197
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void

116:                                              ; preds = %197, %104
  %117 = phi i64 [ 0, %104 ], [ %198, %197 ]
  %118 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %121, label %197

121:                                              ; preds = %116
  %122 = sitofp i32 %119 to float
  %123 = fdiv float %122, %106
  %124 = bitcast float %123 to i32
  %125 = load i64, i64* %108, align 8
  %126 = load %"struct.chrome_lang_id::FeatureVector::Element"*, %"struct.chrome_lang_id::FeatureVector::Element"** %109, align 8
  %127 = load %"struct.chrome_lang_id::FeatureVector::Element"*, %"struct.chrome_lang_id::FeatureVector::Element"** %110, align 8
  %128 = icmp ult %"struct.chrome_lang_id::FeatureVector::Element"* %126, %127
  %129 = ptrtoint %"struct.chrome_lang_id::FeatureVector::Element"* %127 to i64
  br i1 %128, label %130, label %140

130:                                              ; preds = %121
  %131 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"* %126 to i64*
  store i64 %125, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.chrome_lang_id::FeatureVector::Element", %"struct.chrome_lang_id::FeatureVector::Element"* %126, i64 0, i32 1
  %133 = bitcast i64* %132 to i32*
  %134 = trunc i64 %117 to i32
  store i32 %134, i32* %133, align 8
  %135 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"* %126 to i8*
  %136 = getelementptr inbounds i8, i8* %135, i64 12
  %137 = bitcast i8* %136 to float*
  store float %123, float* %137, align 4
  %138 = getelementptr inbounds %"struct.chrome_lang_id::FeatureVector::Element", %"struct.chrome_lang_id::FeatureVector::Element"* %126, i64 1
  %139 = ptrtoint %"struct.chrome_lang_id::FeatureVector::Element"* %138 to i64
  store i64 %139, i64* %111, align 8
  br label %197

140:                                              ; preds = %121
  %141 = ptrtoint %"struct.chrome_lang_id::FeatureVector::Element"* %126 to i64
  %142 = load i64, i64* %112, align 8
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 4
  %145 = add nsw i64 %144, 1
  %146 = icmp ugt i64 %145, 1152921504606846975
  br i1 %146, label %147, label %149

147:                                              ; preds = %140
  %148 = bitcast %"class.chrome_lang_id::FeatureVector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %148) #13
  unreachable

149:                                              ; preds = %140
  %150 = sub i64 %129, %142
  %151 = ashr exact i64 %150, 4
  %152 = icmp ult i64 %151, 576460752303423487
  br i1 %152, label %153, label %161

153:                                              ; preds = %149
  %154 = ashr exact i64 %150, 3
  %155 = icmp ult i64 %154, %145
  %156 = select i1 %155, i64 %145, i64 %154
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %166, label %158

158:                                              ; preds = %153
  %159 = icmp ugt i64 %156, 1152921504606846975
  br i1 %159, label %160, label %161

160:                                              ; preds = %158
  tail call void @abort() #13
  unreachable

161:                                              ; preds = %158, %149
  %162 = phi i64 [ %156, %158 ], [ 1152921504606846975, %149 ]
  %163 = shl i64 %162, 4
  %164 = tail call i8* @_Znwm(i64 %163) #11
  %165 = bitcast i8* %164 to %"struct.chrome_lang_id::FeatureVector::Element"*
  br label %166

166:                                              ; preds = %161, %153
  %167 = phi i64 [ %162, %161 ], [ 0, %153 ]
  %168 = phi %"struct.chrome_lang_id::FeatureVector::Element"* [ %165, %161 ], [ null, %153 ]
  %169 = getelementptr inbounds %"struct.chrome_lang_id::FeatureVector::Element", %"struct.chrome_lang_id::FeatureVector::Element"* %168, i64 %144
  %170 = getelementptr inbounds %"struct.chrome_lang_id::FeatureVector::Element", %"struct.chrome_lang_id::FeatureVector::Element"* %168, i64 %167
  %171 = ptrtoint %"struct.chrome_lang_id::FeatureVector::Element"* %170 to i64
  %172 = zext i32 %124 to i64
  %173 = shl nuw i64 %172, 32
  %174 = or i64 %173, %117
  %175 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"* %169 to i64*
  store i64 %125, i64* %175, align 8
  %176 = getelementptr inbounds %"struct.chrome_lang_id::FeatureVector::Element", %"struct.chrome_lang_id::FeatureVector::Element"* %168, i64 %144, i32 1
  store i64 %174, i64* %176, align 8
  %177 = getelementptr inbounds %"struct.chrome_lang_id::FeatureVector::Element", %"struct.chrome_lang_id::FeatureVector::Element"* %169, i64 1
  %178 = ptrtoint %"struct.chrome_lang_id::FeatureVector::Element"* %177 to i64
  %179 = load %"struct.chrome_lang_id::FeatureVector::Element"*, %"struct.chrome_lang_id::FeatureVector::Element"** %114, align 8
  %180 = load i64, i64* %111, align 8
  %181 = ptrtoint %"struct.chrome_lang_id::FeatureVector::Element"* %179 to i64
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 4
  %184 = sub nsw i64 0, %183
  %185 = getelementptr inbounds %"struct.chrome_lang_id::FeatureVector::Element", %"struct.chrome_lang_id::FeatureVector::Element"* %169, i64 %184
  %186 = ptrtoint %"struct.chrome_lang_id::FeatureVector::Element"* %185 to i64
  %187 = icmp sgt i64 %182, 0
  br i1 %187, label %188, label %192

188:                                              ; preds = %166
  %189 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"* %185 to i8*
  %190 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"* %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 %182, i1 false) #12
  %191 = load %"struct.chrome_lang_id::FeatureVector::Element"*, %"struct.chrome_lang_id::FeatureVector::Element"** %114, align 8
  br label %192

192:                                              ; preds = %188, %166
  %193 = phi %"struct.chrome_lang_id::FeatureVector::Element"* [ %179, %166 ], [ %191, %188 ]
  store i64 %186, i64* %112, align 8
  store i64 %178, i64* %111, align 8
  store i64 %171, i64* %113, align 8
  %194 = icmp eq %"struct.chrome_lang_id::FeatureVector::Element"* %193, null
  br i1 %194, label %197, label %195

195:                                              ; preds = %192
  %196 = bitcast %"struct.chrome_lang_id::FeatureVector::Element"* %193 to i8*
  tail call void @_ZdlPv(i8* %196) #11
  br label %197

197:                                              ; preds = %130, %192, %195, %116
  %198 = add nuw nsw i64 %117, 1
  %199 = icmp eq i64 %198, 12
  br i1 %199, label %115, label %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZN14chrome_lang_id5utils10OneCharLenEPKc(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN14chrome_lang_id22GenericFeatureFunctionD2Ev(%"class.chrome_lang_id::GenericFeatureFunction"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14chrome_lang_id21RelevantScriptFeatureD0Ev(%"class.chrome_lang_id::RelevantScriptFeature"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.chrome_lang_id::RelevantScriptFeature", %"class.chrome_lang_id::RelevantScriptFeature"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN14chrome_lang_id22GenericFeatureFunctionD2Ev(%"class.chrome_lang_id::GenericFeatureFunction"* %2) #12
  %3 = bitcast %"class.chrome_lang_id::RelevantScriptFeature"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14chrome_lang_id22GenericFeatureFunction17RequestWorkspacesEPNS_17WorkspaceRegistryE(%"class.chrome_lang_id::GenericFeatureFunction"*, %"class.chrome_lang_id::WorkspaceRegistry"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZNK14chrome_lang_id22GenericFeatureFunction15GetFeatureTypesEPNSt3__16vectorIPNS_11FeatureTypeENS1_9allocatorIS4_EEEE(%"class.chrome_lang_id::GenericFeatureFunction"*, %"class.std::__1::vector"*) unnamed_addr #4

declare %"class.chrome_lang_id::FeatureType"* @_ZNK14chrome_lang_id22GenericFeatureFunction14GetFeatureTypeEv(%"class.chrome_lang_id::GenericFeatureFunction"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE12RegistryNameEv(%"class.chrome_lang_id::FeatureFunction"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.chrome_lang_id::ComponentRegistry"*, %"struct.chrome_lang_id::ComponentRegistry"** @_ZN14chrome_lang_id17RegisterableClassINS_15FeatureFunctionINS_8SentenceEJEEEE9registry_E, align 8
  %3 = getelementptr inbounds %"struct.chrome_lang_id::ComponentRegistry", %"struct.chrome_lang_id::ComponentRegistry"* %2, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE10PreprocessEPNS_12WorkspaceSetEPS1_(%"class.chrome_lang_id::FeatureFunction"*, %"class.chrome_lang_id::WorkspaceSet"*, %"class.chrome_lang_id::Sentence"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK14chrome_lang_id15FeatureFunctionINS_8SentenceEJEE7ComputeERKNS_12WorkspaceSetERKS1_PKNS_13FeatureVectorE(%"class.chrome_lang_id::FeatureFunction"*, %"class.chrome_lang_id::WorkspaceSet"* dereferenceable(40), %"class.chrome_lang_id::Sentence"* dereferenceable(88), %"class.chrome_lang_id::FeatureVector"*) unnamed_addr #1 comdat align 2 {
  ret i64 -1
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

declare void @_ZN14chrome_lang_id5ToFMLERKNS_25FeatureFunctionDescriptorEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.chrome_lang_id::FeatureFunctionDescriptor"* dereferenceable(96), %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare i32 @_ZN14chrome_lang_id5utils23RemoveWhitespaceContextEPNS_11StringPieceE(%"class.chrome_lang_id::StringPiece"*) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
