; ModuleID = '../../third_party/dawn/src/dawn_wire/ChunkedCommandSerializer.cpp'
source_filename = "../../third_party/dawn/src/dawn_wire/ChunkedCommandSerializer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_wire::ChunkedCommandSerializer" = type { %"class.dawn_wire::CommandSerializer"*, i64 }
%"class.dawn_wire::CommandSerializer" = type { i32 (...)** }

@_ZN9dawn_wire24ChunkedCommandSerializerC1EPNS_17CommandSerializerE = hidden unnamed_addr alias void (%"class.dawn_wire::ChunkedCommandSerializer"*, %"class.dawn_wire::CommandSerializer"*), void (%"class.dawn_wire::ChunkedCommandSerializer"*, %"class.dawn_wire::CommandSerializer"*)* @_ZN9dawn_wire24ChunkedCommandSerializerC2EPNS_17CommandSerializerE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9dawn_wire24ChunkedCommandSerializerC2EPNS_17CommandSerializerE(%"class.dawn_wire::ChunkedCommandSerializer"* nocapture, %"class.dawn_wire::CommandSerializer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandSerializer", %"class.dawn_wire::ChunkedCommandSerializer"* %0, i64 0, i32 0
  store %"class.dawn_wire::CommandSerializer"* %1, %"class.dawn_wire::CommandSerializer"** %3, align 8
  %4 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandSerializer", %"class.dawn_wire::ChunkedCommandSerializer"* %0, i64 0, i32 1
  %5 = bitcast %"class.dawn_wire::CommandSerializer"* %1 to i64 (%"class.dawn_wire::CommandSerializer"*)***
  %6 = load i64 (%"class.dawn_wire::CommandSerializer"*)**, i64 (%"class.dawn_wire::CommandSerializer"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.dawn_wire::CommandSerializer"*)*, i64 (%"class.dawn_wire::CommandSerializer"*)** %6, i64 4
  %8 = load i64 (%"class.dawn_wire::CommandSerializer"*)*, i64 (%"class.dawn_wire::CommandSerializer"*)** %7, align 8
  %9 = tail call i64 %8(%"class.dawn_wire::CommandSerializer"* %1) #2
  store i64 %9, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9dawn_wire24ChunkedCommandSerializer23SerializeChunkedCommandEPKcm(%"class.dawn_wire::ChunkedCommandSerializer"* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandSerializer", %"class.dawn_wire::ChunkedCommandSerializer"* %0, i64 0, i32 1
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.dawn_wire::ChunkedCommandSerializer", %"class.dawn_wire::ChunkedCommandSerializer"* %0, i64 0, i32 0
  br label %8

8:                                                ; preds = %6, %21
  %9 = phi i8* [ %1, %6 ], [ %22, %21 ]
  %10 = phi i64 [ %2, %6 ], [ %23, %21 ]
  %11 = load i64, i64* %4, align 8
  %12 = icmp ult i64 %11, %10
  %13 = select i1 %12, i64 %11, i64 %10
  %14 = load %"class.dawn_wire::CommandSerializer"*, %"class.dawn_wire::CommandSerializer"** %7, align 8
  %15 = bitcast %"class.dawn_wire::CommandSerializer"* %14 to i8* (%"class.dawn_wire::CommandSerializer"*, i64)***
  %16 = load i8* (%"class.dawn_wire::CommandSerializer"*, i64)**, i8* (%"class.dawn_wire::CommandSerializer"*, i64)*** %15, align 8
  %17 = getelementptr inbounds i8* (%"class.dawn_wire::CommandSerializer"*, i64)*, i8* (%"class.dawn_wire::CommandSerializer"*, i64)** %16, i64 2
  %18 = load i8* (%"class.dawn_wire::CommandSerializer"*, i64)*, i8* (%"class.dawn_wire::CommandSerializer"*, i64)** %17, align 8
  %19 = tail call i8* %18(%"class.dawn_wire::CommandSerializer"* %14, i64 %13) #2
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %9, i64 %13, i1 false)
  %22 = getelementptr inbounds i8, i8* %9, i64 %13
  %23 = sub i64 %10, %13
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %8

25:                                               ; preds = %21, %8, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
