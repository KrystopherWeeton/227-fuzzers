; ModuleID = '../../media/gpu/vaapi/vaapi_picture.cc'
source_filename = "../../media/gpu/vaapi/vaapi_picture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::VaapiPicture" = type { i32 (...)**, %class.scoped_refptr, %"class.base::RepeatingCallback.7", %"class.base::RepeatingCallback.8", %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32, i32 }
%class.scoped_refptr = type { %"class.media::VaapiWrapper"* }
%"class.media::VaapiWrapper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.base::Lock"*, i8*, i32, i32, i32, i32, %"class.std::__1::vector", %"class.std::__1::unique_ptr", %"class.base::RepeatingCallback" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.media::ScopedVABuffer"* }
%"class.media::ScopedVABuffer" = type { %"class.base::Lock"*, i8*, i32, i32, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.6", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.7" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.8" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.gfx::Size" = type { i32, i32 }

@_ZTVN5media12VaapiPictureE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::VaapiPicture"*)* @_ZN5media12VaapiPictureD2Ev to i8*), i8* bitcast (void (%"class.media::VaapiPicture"*)* @_ZN5media12VaapiPictureD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.media::VaapiPicture"*)* @_ZNK5media12VaapiPicture12AllowOverlayEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.media::VaapiPicture"*)* @_ZNK5media12VaapiPicture13va_surface_idEv to i8*)] }, align 8

@_ZN5media12VaapiPictureD1Ev = hidden unnamed_addr alias void (%"class.media::VaapiPicture"*), void (%"class.media::VaapiPicture"*)* @_ZN5media12VaapiPictureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media12VaapiPictureC2E13scoped_refptrINS_12VaapiWrapperEERKN4base17RepeatingCallbackIFbvEEERKNS5_IFbjjRKS1_IN2gl7GLImageEEbEEEiRKN3gfx4SizeESM_jjj(%"class.media::VaapiPicture"*, %"class.media::VaapiWrapper"*, %"class.base::RepeatingCallback.7"* dereferenceable(8), %"class.base::RepeatingCallback.8"* dereferenceable(8), i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i32) unnamed_addr #0 align 2 {
  %11 = ptrtoint %"class.media::VaapiWrapper"* %1 to i64
  %12 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media12VaapiPictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 1
  %14 = bitcast %class.scoped_refptr* %13 to i64*
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.base::RepeatingCallback.7", %"class.base::RepeatingCallback.7"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %15, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %16) #6
  %17 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.base::RepeatingCallback.8", %"class.base::RepeatingCallback.8"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %17, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %18) #6
  %19 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 4
  %20 = bitcast %"class.gfx::Size"* %5 to i64*
  %21 = bitcast %"class.gfx::Size"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 5
  %24 = bitcast %"class.gfx::Size"* %6 to i64*
  %25 = bitcast %"class.gfx::Size"* %23 to i64*
  %26 = load i64, i64* %24, align 4
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 6
  store i32 %7, i32* %27, align 8
  %28 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 7
  store i32 %8, i32* %28, align 4
  %29 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 8
  store i32 %9, i32* %29, align 8
  %30 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 9
  store i32 %4, i32* %30, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media12VaapiPictureD2Ev(%"class.media::VaapiPicture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media12VaapiPictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  %4 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #6
  %5 = getelementptr inbounds %"class.media::VaapiPicture", %"class.media::VaapiPicture"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.media::VaapiWrapper"*, %"class.media::VaapiWrapper"** %5, align 8
  %7 = icmp eq %"class.media::VaapiWrapper"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.media::VaapiWrapper", %"class.media::VaapiWrapper"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.media::VaapiWrapper"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.media::VaapiWrapper"*)***
  %17 = load void (%"class.media::VaapiWrapper"*)**, void (%"class.media::VaapiWrapper"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.media::VaapiWrapper"*)*, void (%"class.media::VaapiWrapper"*)** %17, i64 12
  %19 = load void (%"class.media::VaapiWrapper"*)*, void (%"class.media::VaapiWrapper"*)** %18, align 8
  tail call void %19(%"class.media::VaapiWrapper"* nonnull %15) #6
  br label %20

20:                                               ; preds = %1, %8, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5media12VaapiPictureD0Ev(%"class.media::VaapiPicture"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5media12VaapiPicture12AllowOverlayEv(%"class.media::VaapiPicture"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5media12VaapiPicture13va_surface_idEv(%"class.media::VaapiPicture"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 -1
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
