; ModuleID = '../../net/cookies/cookie_monster.cc'
source_filename = "../../net/cookies/cookie_monster.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.net::(anonymous namespace)::ChangeCausePair_struct" = type { i32, i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::CookieMonster" = type { %"class.net::CookieStore", %"class.std::__1::set", i64, %"class.std::__1::multimap", %"class.net::CookieMonsterChangeDispatcher", i8, i8, i8, %"class.std::__1::set", %"class.std::__1::map.28", %"class.base::circular_deque", i8, %"class.net::NetLogWithSource", %class.scoped_refptr.51, %"class.base::TimeDelta", %"class.base::Time", %"class.std::__1::vector.54", %"class.base::Time", i8, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.66" }
%"class.net::CookieStore" = type { i32 (...)**, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::CookieAccessDelegate"* }
%"class.net::CookieAccessDelegate" = type { i32 (...)** }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.net::CookieMonsterChangeDispatcher" = type { %"class.net::CookieChangeDispatcher", %"class.net::CookieMonster"*, %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.net::CookieChangeDispatcher" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.28" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::OnceCallback"*, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.38", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.51 = type { %"class.net::CookieMonster::PersistentCookieStore"* }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.53" }
%"class.base::time_internal::TimeBase.53" = type { i64 }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.66" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::CookieMonster::PersistentCookieStore" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.52", [4 x i8] }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.44" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.39" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.46" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.274" }
%"union.absl::variant_internal::DestructibleUnionImpl.274" = type { %"union.absl::variant_internal::DestructibleUnionImpl.275" }
%"union.absl::variant_internal::DestructibleUnionImpl.275" = type { %"union.absl::variant_internal::DestructibleUnionImpl.276" }
%"union.absl::variant_internal::DestructibleUnionImpl.276" = type { %"union.absl::variant_internal::DestructibleUnionImpl.277" }
%"union.absl::variant_internal::DestructibleUnionImpl.277" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.68 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.69" }>
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.69", [4 x i8] }>
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*, %"class.std::__1::__compressed_pair.72" }
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.net::CanonicalCookie"* }
%"class.base::OnceCallback.77" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::UnretainedWrapper" = type { %"class.net::CookieMonster"* }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.307" }
%"class.std::__1::tuple.307" = type { %"struct.std::__1::__tuple_impl.308" }
%"struct.std::__1::__tuple_impl.308" = type { %"class.std::__1::__tuple_leaf.309", %"class.std::__1::__tuple_leaf.310", %"class.std::__1::__tuple_leaf.311" }
%"class.std::__1::__tuple_leaf.309" = type { %"class.base::internal::UnretainedWrapper" }
%"class.std::__1::__tuple_leaf.310" = type { %"class.std::__1::vector.70" }
%"class.std::__1::__tuple_leaf.311" = type { %"class.base::OnceCallback.77" }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.83" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.GURL* }
%"class.net::CookieOptions" = type <{ i8, [3 x i8], %"class.net::CookieOptions::SameSiteCookieContext", i8, i8, [2 x i8], i32, i32, i8, [3 x i8] }>
%"class.net::CookieOptions::SameSiteCookieContext" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::OnceCallback.172" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"struct.std::__1::pair.257" = type { %"class.std::__1::basic_string", %"class.base::circular_deque" }
%"struct.net::CookieAccessParams" = type { i32, i8, i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.215", [4 x i8] }>
%"struct.std::__1::atomic.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i32 }
%"class.base::OnceCallback.89" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.166" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.net::CanonicalCookie"** }
%"class.base::OnceCallback.90" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.91" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { i32*, i32*, %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { i32* }
%"class.base::OnceCallback.92" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::CookieDeletionInfo::TimeRange" = type { %"class.base::Time", %"class.base::Time" }
%"class.std::__1::__tree_node.263" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.154" }
%"struct.std::__1::pair.154" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.net::CookieDeletionInfo" = type { %"class.net::CookieDeletionInfo::TimeRange", i32, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.94", %"class.std::__1::set", %"class.std::__1::set", %"class.absl::optional" }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %class.GURL }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"class.std::__1::basic_string" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.100" = type { %"class.base::internal::CallbackBase" }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.101", %"class.std::__1::map.110", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.121" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.110" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.124", %"class.std::__1::vector.129" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { i64 }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.131" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.std::__1::__tree_node.267" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.268" }
%"struct.std::__1::__value_type.268" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.base::circular_deque" }
%"class.std::__1::__tree_node.266" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"struct.std::__1::pair.139" = type { %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator" }
%"class.std::__1::__map_iterator" = type { %"class.std::__1::__tree_iterator" }
%"class.std::__1::__tree_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.std::__1::__map_iterator"* }
%class.GetParamsImpl.442 = type { %"class.net::NetLog::GetParamsInterface", %class.anon.225* }
%"class.net::NetLog::GetParamsInterface" = type { i32 (...)** }
%class.anon.225 = type { %"class.net::CanonicalCookie"**, %"struct.net::(anonymous namespace)::ChangeCausePair_struct"*, i8* }
%"struct.net::CookieChangeInfo" = type { %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", i32 }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::unique_ptr.78"* }
%"class.std::__1::move_iterator" = type { %"class.base::internal::circular_deque_iterator" }
%"class.base::internal::circular_deque_iterator" = type { %"class.base::internal::circular_deque_const_iterator" }
%"class.base::internal::circular_deque_const_iterator" = type { %"class.base::circular_deque"*, i64 }
%class.GetParamsImpl.435 = type { %"class.net::NetLog::GetParamsInterface", %class.anon.223* }
%class.anon.223 = type { %"class.std::__1::unique_ptr.78"*, i8* }
%"struct.std::__1::__tuple_less" = type { i8 }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.197", %"class.std::__1::__tuple_leaf.198" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__tuple_leaf.197" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__tuple_leaf.198" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node.408" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.409" }
%"struct.std::__1::__value_type.409" = type { %"struct.std::__1::pair.209" }
%"struct.std::__1::pair.209" = type { %"class.std::__1::tuple", %"class.std::__1::multiset" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.199" }
%"class.std::__1::__tree.199" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__tree_node.410" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::__map_iterator" }
%"class.std::__1::allocator.59" = type { i8 }
%class.GetParamsImpl = type { %"class.net::NetLog::GetParamsInterface", %class.anon.220* }
%class.anon.220 = type { %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"* }
%class.GetParamsImpl.433 = type { %"class.net::NetLog::GetParamsInterface", %class.anon.221* }
%class.anon.221 = type { %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"* }
%class.GetParamsImpl.434 = type { %"class.net::NetLog::GetParamsInterface", %class.anon.222* }
%class.anon.222 = type { %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.229" }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"*, %"class.std::__1::__compressed_pair.247" }
%"struct.std::__1::pair.231" = type { %"class.net::SchemefulSite", %"class.std::__1::set.237" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.232" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.232" = type { %"class.absl::optional_internal::optional_data.233" }
%"class.absl::optional_internal::optional_data.233" = type { %"class.absl::optional_internal::optional_data_base.234" }
%"class.absl::optional_internal::optional_data_base.234" = type { %"class.absl::optional_internal::optional_data_dtor_base.235" }
%"class.absl::optional_internal::optional_data_dtor_base.235" = type { i8, %union.anon.236 }
%union.anon.236 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::set.237" = type { %"class.std::__1::__tree.238" }
%"class.std::__1::__tree.238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::pair.231"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::SchemefulSite" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__tuple_less.422" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENS_11__wrap_iterIPS6_EEE4typeENSJ_IPKS6_EESF_SF_ = comdat any

$_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN3net22CookieWithAccessResultENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNK3net15CanonicalCookie12IsEquivalentERKS0_ = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE6insertINSt3__113move_iteratorINS_8internal23circular_deque_iteratorIS3_EEEEEENS6_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENS8_29circular_deque_const_iteratorIS3_EESD_SD_ = comdat any

$_ZNSt3__114__partial_sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_ENS_11__wrap_iterIPSM_EEEEvT0_SV_SV_T_ = comdat any

$_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_ = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEENS_12OnceCallbackIFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS2_15CanonicalCookieENS4_9allocatorIS6_EEEENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SD_EEC2ISF_JSH_RKS9_SD_EEENS4_17integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS2_15CanonicalCookieENS4_9allocatorIS6_EEEENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS3_15CanonicalCookieENS5_14default_deleteIS7_EEEERK4GURLRKNS3_13CookieOptionsENS_12OnceCallbackIFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_SK_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS2_15CanonicalCookieENS4_14default_deleteIS6_EEEERK4GURLRKNS2_13CookieOptionsENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_SJ_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRK4GURLRKNS3_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS3_22CookieWithAccessResultENSC_9allocatorISE_EEEESJ_EEEEJNS0_17UnretainedWrapperIS4_EES5_S8_SL_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRK4GURLRKNS2_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS2_22CookieWithAccessResultENSB_9allocatorISD_EEEESI_EEEEJNS0_17UnretainedWrapperIS3_EES4_S7_SK_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS3_15CanonicalCookieENS6_9allocatorIS8_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS2_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS3_EESE_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS3_15CanonicalCookieENS6_9allocatorIS8_EEEERKNS7_INS3_21CookieAccessSemanticsENS9_ISE_EEEEEEESD_EJNS0_17UnretainedWrapperIS4_EESK_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_ = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS2_15CanonicalCookieENS5_9allocatorIS7_EEEERKNS6_INS2_21CookieAccessSemanticsENS8_ISD_EEEEEEESC_EJNS0_17UnretainedWrapperIS3_EESJ_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNS3_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EES5_SA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNS2_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES4_S9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNS3_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EES6_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNS2_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES5_SA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFbRKNS3_18CookieDeletionInfoERKNS3_15CanonicalCookieEEJNS0_17UnretainedWrapperIS4_EES5_EEEFbSA_EE3RunEPNS0_13BindStateBaseESA_ = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFbRKNS2_18CookieDeletionInfoERKNS2_15CanonicalCookieEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS2_15CanonicalCookieEEEENS3_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16__sortIRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPN3net15CanonicalCookieES3_EPS3_EEbT0_S8_T_ = comdat any

$_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvjEEEJjEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS6_S9_EEES8_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS5_S8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE19__equal_range_multiIS7_EENS_4pairINS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEESS_EERKT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS5_10unique_ptrINS2_15CanonicalCookieENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEvE6InvokeISG_NS_7WeakPtrIS3_EEJS4_SE_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS5_10unique_ptrINS2_15CanonicalCookieENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE4findIS7_EENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEERKT_ = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS3_EES8_ = comdat any

$_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_S9_EEESA_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_S9_EEESA_EEbRKT_RKT0_ = comdat any

$_ZNSt3__16vectorIN3net22CookieWithAccessResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN3net6NetLog18GetParamsInterfaceD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE15__emplace_multiIJNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE13__count_multiIS7_EEmRKT_ = comdat any

$_ZNSt3__16__sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEjT0_ST_ST_ST_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEbT0_ST_T_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EESB_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseEOSL_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_6vectorINS4_10unique_ptrINS2_15CanonicalCookieENS4_14default_deleteISF_EEEENS8_ISI_EEEEEvE6InvokeISM_NS_7WeakPtrIS3_EEJSA_SK_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_6vectorINS4_10unique_ptrINS2_15CanonicalCookieENS4_14default_deleteISF_EEEENS8_ISI_EEEEEJNS_7WeakPtrIS3_EESA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EESB_EEEEEbPKNS0_13BindStateBaseENSR_21CancellationQueryModeE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_SD_EEEEENSM_INS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_ = comdat any

@_ZN3net13CookieMonster17kDomainMaxCookiesE = hidden local_unnamed_addr constant i64 180, align 8
@_ZN3net13CookieMonster19kDomainPurgeCookiesE = hidden local_unnamed_addr constant i64 30, align 8
@_ZN3net13CookieMonster11kMaxCookiesE = hidden local_unnamed_addr constant i64 3300, align 8
@_ZN3net13CookieMonster13kPurgeCookiesE = hidden local_unnamed_addr constant i64 300, align 8
@_ZN3net13CookieMonster20kMaxDomainPurgedKeysE = hidden local_unnamed_addr constant i64 100, align 8
@_ZN3net13CookieMonster22kDomainCookiesQuotaLowE = hidden local_unnamed_addr constant i64 30, align 8
@_ZN3net13CookieMonster25kDomainCookiesQuotaMediumE = hidden local_unnamed_addr constant i64 50, align 8
@_ZN3net13CookieMonster23kDomainCookiesQuotaHighE = hidden local_unnamed_addr constant i64 70, align 8
@_ZN3net13CookieMonster24kSafeFromGlobalPurgeDaysE = hidden local_unnamed_addr constant i32 30, align 4
@_ZTVN3net13CookieMonsterE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::CookieMonster"*)* @_ZN3net13CookieMonsterD2Ev to i8*), i8* bitcast (void (%"class.net::CookieMonster"*)* @_ZN3net13CookieMonsterD0Ev to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.77"*)* @_ZN3net13CookieMonster23SetCanonicalCookieAsyncENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.89"*)* @_ZN3net13CookieMonster29GetCookieListWithOptionsAsyncERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvRKNSt3__16vectorINS_22CookieWithAccessResultENS9_9allocatorISB_EEEESG_EEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)* @_ZN3net13CookieMonster18GetAllCookiesAsyncEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEEEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"*)* @_ZN3net13CookieMonster37GetAllCookiesWithAccessSemanticsAsyncEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEERKNS4_INS_21CookieAccessSemanticsENS6_ISB_EEEEEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster26DeleteCanonicalCookieAsyncERKNS_15CanonicalCookieEN4base12OnceCallbackIFvjEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster32DeleteAllCreatedInTimeRangeAsyncERKNS_18CookieDeletionInfo9TimeRangeEN4base12OnceCallbackIFvjEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster26DeleteAllMatchingInfoAsyncENS_18CookieDeletionInfoEN4base12OnceCallbackIFvjEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster25DeleteSessionCookiesAsyncEN4base12OnceCallbackIFvjEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster26DeleteMatchingCookiesAsyncEN4base17RepeatingCallbackIFbRKNS_15CanonicalCookieEEEENS1_12OnceCallbackIFvjEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)* @_ZN3net13CookieMonster10FlushStoreEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*)* @_ZN3net13CookieMonster24SetForceKeepSessionStateEv to i8*), i8* bitcast (%"class.net::CookieChangeDispatcher"* (%"class.net::CookieMonster"*)* @_ZN3net13CookieMonster19GetChangeDispatcherEv to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.std::__1::vector.54"*, %"class.base::OnceCallback.100"*)* @_ZN3net13CookieMonster20SetCookieableSchemesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void (%"class.net::CookieMonster"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)* @_ZNK3net13CookieMonster15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"FlushStore\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"../../net/cookies/cookie_monster.cc\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"persistence\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"ws\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"wss\00", align 1
@_ZN3net13CookieMonster25kDefaultCookieableSchemesE = hidden constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0)], align 16
@_ZN3net13CookieMonster30kDefaultCookieableSchemesCountE = hidden local_unnamed_addr constant i32 4, align 4
@_ZZNK3net13CookieMonster15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE8kRelPath = internal constant [16 x i8] c"/cookie_monster\00", align 16
@.str.8 = private unnamed_addr constant [9 x i8] c"/cookies\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump16kNameObjectCountE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE = external constant [0 x i8], align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"/tasks_pending_global\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"/tasks_pending_for_key\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Cookie.TimeBlockedOnLoad\00", align 1
@_ZN3net8features33kNoCookieChangeNotificationOnLoadE = external global %"struct.base::Feature", align 8
@.str.12 = private unnamed_addr constant [82 x i8] c"Found %d duplicate cookies for key='%s', with {name='%s', domain='%s', path='%s'}\00", align 1
@.str.13 = private unnamed_addr constant [49 x i8] c"Cookie.SameParty.ReadExclusionDecidedBySameParty\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"Cookie.Port.Read.Localhost\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"Cookie.Port.ReadDiffersFromSet.Localhost\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"Cookie.Port.Read.RemoteHost\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"Cookie.Port.ReadDiffersFromSet.RemoteHost\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"Cookie.Port.ReadDiffersFromSet.DomainSet\00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c"Cookie.SamePartyReadIncluded.IsHTTP\00", align 1
@.str.20 = private unnamed_addr constant [46 x i8] c"Cookie.SamePartyReadIncluded.PartyContextSize\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"!found_equivalent_cookie\00", align 1
@.str.22 = private unnamed_addr constant [63 x i8] c"Duplicate equivalent cookies found, cookie store is corrupted.\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"Cookie.Type\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"Cookie.SameSiteContextDowngradeResponse\00", align 1
@.str.25 = private unnamed_addr constant [35 x i8] c"Cookie.SamePartySetIncluded.IsHTTP\00", align 1
@.str.26 = private unnamed_addr constant [45 x i8] c"Cookie.SamePartySetIncluded.PartyContextSize\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"Cookie.CookieSourceScheme\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"Cookie.DomainSet\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"Cookie.Port.Set.Localhost\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"Cookie.Port.Set.RemoteHost\00", align 1
@.str.31 = private unnamed_addr constant [30 x i8] c"Cookie.CookieSourceSchemeName\00", align 1
@.str.32 = private unnamed_addr constant [48 x i8] c"Cookie.SameParty.SetExclusionDecidedBySameParty\00", align 1
@_ZN3net12_GLOBAL__N_119kChangeCauseMappingE = internal unnamed_addr constant [14 x %"struct.net::(anonymous namespace)::ChangeCausePair_struct"] [%"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 1, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 3, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 4, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 5, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 1, i8 0 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 1, i8 0 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 5, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 5, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 5, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 5, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 6, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 5, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 5, i8 1 }, %"struct.net::(anonymous namespace)::ChangeCausePair_struct" { i32 1, i8 0 }], align 16
@.str.33 = private unnamed_addr constant [14 x i8] c"Cookie.Count2\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"Cookie.PerFirstPartySetCount\00", align 1
@.str.35 = private unnamed_addr constant [27 x i8] c"Cookie.NumDomainPurgedKeys\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"Cookie.NumKeys\00", align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"Cookie.ExpirationDurationMinutesSecure\00", align 1
@.str.40 = private unnamed_addr constant [42 x i8] c"Cookie.ExpirationDurationMinutesNonSecure\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.44 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.45 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.51 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_3EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_3EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl*)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_3EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_4EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl.433*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_4EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl.433*)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_4EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_5EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl.434*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_5EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl.434*)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_5EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISD_EEEEbRKNS_18CookieAccessResultEbE3$_6EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl.435*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISD_EEEEbRKNS_18CookieAccessResultEbE3$_6EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl.435*)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISD_EEEEbRKNS_18CookieAccessResultEbE3$_6EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISE_EEEEEEPNS3_11__tree_nodeISI_PvEElEEEEbNS2_13DeletionCauseEE3$_7EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSS_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl.442*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISE_EEEEEEPNS3_11__tree_nodeISI_PvEElEEEEbNS2_13DeletionCauseEE3$_7EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSS_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl.442*)* @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISE_EEEEEEPNS3_11__tree_nodeISI_PvEElEEEEbNS2_13DeletionCauseEE3$_7EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSS_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_5.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_6.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_5.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_6.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_7.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster21DoRecordPeriodicStatsEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13CookieMonster21DoRecordPeriodicStatsEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net13CookieMonsterC1E13scoped_refptrINS0_21PersistentCookieStoreEEPNS_6NetLogE = hidden unnamed_addr alias void (%"class.net::CookieMonster"*, %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::NetLog"*), void (%"class.net::CookieMonster"*, %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::NetLog"*)* @_ZN3net13CookieMonsterC2E13scoped_refptrINS0_21PersistentCookieStoreEEPNS_6NetLogE
@_ZN3net13CookieMonsterC1E13scoped_refptrINS0_21PersistentCookieStoreEEN4base9TimeDeltaEPNS_6NetLogE = hidden unnamed_addr alias void (%"class.net::CookieMonster"*, %"class.net::CookieMonster::PersistentCookieStore"*, i64, %"class.net::NetLog"*), void (%"class.net::CookieMonster"*, %"class.net::CookieMonster::PersistentCookieStore"*, i64, %"class.net::NetLog"*)* @_ZN3net13CookieMonsterC2E13scoped_refptrINS0_21PersistentCookieStoreEEN4base9TimeDeltaEPNS_6NetLogE
@_ZN3net13CookieMonsterD1Ev = hidden unnamed_addr alias void (%"class.net::CookieMonster"*), void (%"class.net::CookieMonster"*)* @_ZN3net13CookieMonsterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonsterC2E13scoped_refptrINS0_21PersistentCookieStoreEEPNS_6NetLogE(%"class.net::CookieMonster"*, %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::NetLog"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net13CookieMonsterC2E13scoped_refptrINS0_21PersistentCookieStoreEEN4base9TimeDeltaEPNS_6NetLogE(%"class.net::CookieMonster"* %0, %"class.net::CookieMonster::PersistentCookieStore"* %1, i64 60000000, %"class.net::NetLog"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonsterC2E13scoped_refptrINS0_21PersistentCookieStoreEEN4base9TimeDeltaEPNS_6NetLogE(%"class.net::CookieMonster"*, %"class.net::CookieMonster::PersistentCookieStore"*, i64, %"class.net::NetLog"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = ptrtoint %"class.net::CookieMonster::PersistentCookieStore"* %1 to i64
  %7 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0
  tail call void @_ZN3net11CookieStoreC2Ev(%"class.net::CookieStore"* %7) #19
  %8 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN3net13CookieMonsterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 2
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 4
  tail call void @_ZN3net29CookieMonsterChangeDispatcherC1EPKNS_13CookieMonsterE(%"class.net::CookieMonsterChangeDispatcher"* %18, %"class.net::CookieMonster"* %0) #19
  %19 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 5
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 6
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 7
  store i8 0, i8* %21, align 2
  %22 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node_base"** %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %27, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10
  %31 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12
  %32 = bitcast %"class.base::circular_deque"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 33, i1 false)
  tail call void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret %31, %"class.net::NetLog"* %3, i32 30) #19
  %33 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13
  %34 = bitcast %class.scoped_refptr.51* %33 to i64*
  store i64 %6, i64* %34, align 8
  %35 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 14, i32 0
  store i64 %2, i64* %35, align 8
  %36 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 15, i32 0, i32 0
  %37 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 16
  %38 = bitcast i64* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false)
  %39 = tail call i64 @_ZN4base4Time3NowEv() #19
  %40 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 17, i32 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 18
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0
  %43 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %42, i64 %43) #19
  %44 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %37, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %46 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENS_11__wrap_iterIPS6_EEE4typeENSJ_IPKS6_EESF_SF_(%"class.std::__1::vector.54"* %37, %"class.std::__1::basic_string"* %45, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN3net13CookieMonster25kDefaultCookieableSchemesE, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN3net13CookieMonster25kDefaultCookieableSchemesE, i64 1, i64 0))
  %47 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 1
  %48 = load %"class.net::NetLog"*, %"class.net::NetLog"** %47, align 8
  %49 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %48, i64 0, i32 3
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52, !prof !2

52:                                               ; preds = %4
  %53 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %31, i64 0, i32 0
  %54 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #19
  call void @_ZN3net36NetLogCookieMonsterConstructorParamsEb(%"class.base::Value"* nonnull sret %5, i1 zeroext false) #19
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %48, i32 439, %"struct.net::NetLogSource"* dereferenceable(16) %53, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %5) #19
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #19
  br label %55

55:                                               ; preds = %52, %4
  ret void
}

declare void @_ZN3net11CookieStoreC2Ev(%"class.net::CookieStore"*) unnamed_addr #1

declare void @_ZN3net29CookieMonsterChangeDispatcherC1EPKNS_13CookieMonsterE(%"class.net::CookieMonsterChangeDispatcher"*, %"class.net::CookieMonster"*) unnamed_addr #1

declare void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret, %"class.net::NetLog"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENS_11__wrap_iterIPS6_EEE4typeENSJ_IPKS6_EESF_SF_(%"class.std::__1::vector.54"*, %"class.std::__1::basic_string"*, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8** %3 to i64
  %8 = ptrtoint i8** %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %272

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  br i1 %21, label %147, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %69

27:                                               ; preds = %23
  %28 = getelementptr inbounds i8*, i8** %2, i64 %25
  %29 = icmp eq i8** %28, %3
  br i1 %29, label %64, label %30

30:                                               ; preds = %27, %56
  %31 = phi %"class.std::__1::basic_string"* [ %60, %56 ], [ %17, %27 ]
  %32 = phi i8** [ %59, %56 ], [ %28, %27 ]
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i64 @strlen(i8* %33) #19
  %35 = icmp ugt i64 %34, -17
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string"* %31 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %37) #20
  unreachable

38:                                               ; preds = %30
  %39 = icmp ult i64 %34, 23
  br i1 %39, label %48, label %40

40:                                               ; preds = %38
  %41 = add nuw i64 %34, 16
  %42 = and i64 %41, -16
  %43 = tail call i8* @_Znwm(i64 %42) #21
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %43, i8** %44, align 8
  %45 = or i64 %42, -9223372036854775808
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %47, align 8
  br label %54

48:                                               ; preds = %38
  %49 = trunc i64 %34 to i8
  %50 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 %49, i8* %51, align 1
  %52 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %53 = icmp eq i64 %34, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %43, %40 ], [ %52, %48 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %33, i64 %34, i1 false) #19
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i8* [ %52, %48 ], [ %55, %54 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %34
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds i8*, i8** %32, i64 1
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %61 = icmp eq i8** %59, %3
  br i1 %61, label %62, label %30

62:                                               ; preds = %56
  %63 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  br label %64

64:                                               ; preds = %62, %27
  %65 = phi i64 [ %18, %27 ], [ %63, %62 ]
  store i64 %65, i64* %22, align 8
  %66 = icmp sgt i64 %24, 0
  br i1 %66, label %67, label %272

67:                                               ; preds = %64
  %68 = inttoptr i64 %65 to %"class.std::__1::basic_string"*
  br label %69

69:                                               ; preds = %67, %23
  %70 = phi i64 [ %65, %67 ], [ %18, %23 ]
  %71 = phi %"class.std::__1::basic_string"* [ %68, %67 ], [ %17, %23 ]
  %72 = phi i8** [ %28, %67 ], [ %3, %23 ]
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %10
  %74 = ptrtoint %"class.std::__1::basic_string"* %73 to i64
  %75 = sub i64 %70, %74
  %76 = sdiv exact i64 %75, 24
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %76
  %78 = icmp ult %"class.std::__1::basic_string"* %77, %17
  br i1 %78, label %102, label %81

79:                                               ; preds = %102
  %80 = ptrtoint %"class.std::__1::basic_string"* %108 to i64
  br label %81

81:                                               ; preds = %79, %69
  %82 = phi i64 [ %80, %79 ], [ %70, %69 ]
  store i64 %82, i64* %22, align 8
  %83 = icmp eq i64 %75, 0
  br i1 %83, label %110, label %84

84:                                               ; preds = %81, %96
  %85 = phi %"class.std::__1::basic_string"* [ %88, %96 ], [ %71, %81 ]
  %86 = phi %"class.std::__1::basic_string"* [ %87, %96 ], [ %77, %81 ]
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 -1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 -1
  %89 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #21
  br label %96

96:                                               ; preds = %93, %84
  %97 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %98 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 24, i1 false) #19
  %99 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  store i8 0, i8* %100, align 1
  store i8 0, i8* %98, align 1
  %101 = icmp eq %"class.std::__1::basic_string"* %87, %1
  br i1 %101, label %110, label %84

102:                                              ; preds = %69, %102
  %103 = phi %"class.std::__1::basic_string"* [ %108, %102 ], [ %71, %69 ]
  %104 = phi %"class.std::__1::basic_string"* [ %107, %102 ], [ %77, %69 ]
  %105 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #19
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 1
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 1
  %109 = icmp ult %"class.std::__1::basic_string"* %107, %17
  br i1 %109, label %102, label %79

110:                                              ; preds = %96, %81
  %111 = icmp eq i8** %72, %2
  br i1 %111, label %272, label %112

112:                                              ; preds = %110, %143
  %113 = phi %"class.std::__1::basic_string"* [ %145, %143 ], [ %1, %110 ]
  %114 = phi i8** [ %144, %143 ], [ %2, %110 ]
  %115 = load i8*, i8** %114, align 8
  %116 = load i8, i8* %115, align 1
  %117 = tail call i1 @llvm.is.constant.i8(i8 %116) #19
  br i1 %117, label %118, label %141

118:                                              ; preds = %112
  %119 = tail call i64 @strlen(i8* %115) #19
  %120 = icmp ult i64 %119, 23
  br i1 %120, label %121, label %139

121:                                              ; preds = %118
  %122 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %130

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %119, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  br label %133

130:                                              ; preds = %121
  %131 = trunc i64 %119 to i8
  store i8 %131, i8* %123, align 1
  %132 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  br label %133

133:                                              ; preds = %130, %126
  %134 = phi i8* [ %129, %126 ], [ %132, %130 ]
  %135 = icmp eq i64 %119, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %134, i8* align 1 %115, i64 %119, i1 false) #19
  br label %137

137:                                              ; preds = %136, %133
  %138 = getelementptr inbounds i8, i8* %134, i64 %119
  store i8 0, i8* %138, align 1
  br label %143

139:                                              ; preds = %118
  %140 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %113, i8* %115, i64 %119) #19
  br label %143

141:                                              ; preds = %112
  %142 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %113, i8* %115) #19
  br label %143

143:                                              ; preds = %141, %139, %137
  %144 = getelementptr inbounds i8*, i8** %114, i64 1
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 1
  %146 = icmp eq i8** %144, %72
  br i1 %146, label %272, label %112

147:                                              ; preds = %12
  %148 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %18, %149
  %151 = sdiv exact i64 %150, 24
  %152 = add nsw i64 %151, %10
  %153 = icmp ugt i64 %152, 768614336404564650
  br i1 %153, label %154, label %156

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %155) #20
  unreachable

156:                                              ; preds = %147
  %157 = sub i64 %15, %149
  %158 = sdiv exact i64 %157, 24
  %159 = icmp ult i64 %158, 384307168202282325
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = sub i64 %5, %149
  %162 = sdiv exact i64 %161, 24
  br label %170

163:                                              ; preds = %156
  %164 = shl nsw i64 %158, 1
  %165 = icmp ult i64 %164, %152
  %166 = select i1 %165, i64 %152, i64 %164
  %167 = sub i64 %5, %149
  %168 = sdiv exact i64 %167, 24
  %169 = icmp eq i64 %166, 0
  br i1 %169, label %176, label %170

170:                                              ; preds = %163, %160
  %171 = phi i64 [ %162, %160 ], [ %168, %163 ]
  %172 = phi i64 [ 768614336404564650, %160 ], [ %166, %163 ]
  %173 = mul i64 %172, 24
  %174 = tail call i8* @_Znwm(i64 %173) #21
  %175 = bitcast i8* %174 to %"class.std::__1::basic_string"*
  br label %176

176:                                              ; preds = %170, %163
  %177 = phi i64 [ %171, %170 ], [ %168, %163 ]
  %178 = phi i64 [ %172, %170 ], [ 0, %163 ]
  %179 = phi %"class.std::__1::basic_string"* [ %175, %170 ], [ null, %163 ]
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 %177
  %181 = ptrtoint %"class.std::__1::basic_string"* %180 to i64
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 %178
  %183 = ptrtoint %"class.std::__1::basic_string"* %182 to i64
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 %10
  br label %185

185:                                              ; preds = %176, %212
  %186 = phi %"class.std::__1::basic_string"* [ %215, %212 ], [ %180, %176 ]
  %187 = phi i8** [ %217, %212 ], [ %2, %176 ]
  %188 = phi i64 [ %216, %212 ], [ %181, %176 ]
  %189 = load i8*, i8** %187, align 8
  %190 = tail call i64 @strlen(i8* %189) #19
  %191 = icmp ugt i64 %190, -17
  br i1 %191, label %192, label %194

192:                                              ; preds = %185
  %193 = inttoptr i64 %188 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %193) #20
  unreachable

194:                                              ; preds = %185
  %195 = icmp ult i64 %190, 23
  br i1 %195, label %204, label %196

196:                                              ; preds = %194
  %197 = add nuw i64 %190, 16
  %198 = and i64 %197, -16
  %199 = tail call i8* @_Znwm(i64 %198) #21
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %199, i8** %200, align 8
  %201 = or i64 %198, -9223372036854775808
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %190, i64* %203, align 8
  br label %210

204:                                              ; preds = %194
  %205 = trunc i64 %190 to i8
  %206 = inttoptr i64 %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  store i8 %205, i8* %207, align 1
  %208 = inttoptr i64 %188 to i8*
  %209 = icmp eq i64 %190, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %204, %196
  %211 = phi i8* [ %199, %196 ], [ %208, %204 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 %189, i64 %190, i1 false) #19
  br label %212

212:                                              ; preds = %210, %204
  %213 = phi i8* [ %208, %204 ], [ %211, %210 ]
  %214 = getelementptr inbounds i8, i8* %213, i64 %190
  store i8 0, i8* %214, align 1
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %186, i64 1
  %216 = ptrtoint %"class.std::__1::basic_string"* %215 to i64
  %217 = getelementptr inbounds i8*, i8** %187, i64 1
  %218 = icmp eq %"class.std::__1::basic_string"* %184, %215
  br i1 %218, label %219, label %185

219:                                              ; preds = %212
  %220 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %221 = icmp eq %"class.std::__1::basic_string"* %220, %1
  br i1 %221, label %232, label %222

222:                                              ; preds = %219, %222
  %223 = phi %"class.std::__1::basic_string"* [ %225, %222 ], [ %180, %219 ]
  %224 = phi %"class.std::__1::basic_string"* [ %226, %222 ], [ %1, %219 ]
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %223, i64 -1
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %224, i64 -1
  %227 = bitcast %"class.std::__1::basic_string"* %225 to i8*
  %228 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 24, i1 false) #19
  %229 = icmp eq %"class.std::__1::basic_string"* %226, %220
  br i1 %229, label %230, label %222

230:                                              ; preds = %222
  %231 = ptrtoint %"class.std::__1::basic_string"* %225 to i64
  br label %232

232:                                              ; preds = %230, %219
  %233 = phi i64 [ %181, %219 ], [ %231, %230 ]
  %234 = phi %"class.std::__1::basic_string"* [ %180, %219 ], [ %225, %230 ]
  %235 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %236 = icmp eq %"class.std::__1::basic_string"* %235, %1
  br i1 %236, label %237, label %239

237:                                              ; preds = %232
  %238 = ptrtoint %"class.std::__1::basic_string"* %234 to i64
  br label %249

239:                                              ; preds = %232, %239
  %240 = phi %"class.std::__1::basic_string"* [ %245, %239 ], [ %184, %232 ]
  %241 = phi %"class.std::__1::basic_string"* [ %244, %239 ], [ %1, %232 ]
  %242 = bitcast %"class.std::__1::basic_string"* %240 to i8*
  %243 = bitcast %"class.std::__1::basic_string"* %241 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #19
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 1
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 1
  %246 = icmp eq %"class.std::__1::basic_string"* %244, %235
  br i1 %246, label %247, label %239

247:                                              ; preds = %239
  %248 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %249

249:                                              ; preds = %247, %237
  %250 = phi %"class.std::__1::basic_string"* [ %1, %237 ], [ %248, %247 ]
  %251 = phi %"class.std::__1::basic_string"* [ %184, %237 ], [ %245, %247 ]
  %252 = phi i64 [ %238, %237 ], [ %233, %247 ]
  %253 = ptrtoint %"class.std::__1::basic_string"* %251 to i64
  %254 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  store i64 %252, i64* %148, align 8
  store i64 %253, i64* %22, align 8
  store i64 %183, i64* %14, align 8
  %255 = icmp eq %"class.std::__1::basic_string"* %250, %254
  br i1 %255, label %268, label %256

256:                                              ; preds = %249, %266
  %257 = phi %"class.std::__1::basic_string"* [ %258, %266 ], [ %250, %249 ]
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %257, i64 -1
  %259 = bitcast %"class.std::__1::basic_string"* %258 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %260 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %259, i64 0, i32 1, i32 0
  %261 = load i8, i8* %260, align 1
  %262 = icmp slt i8 %261, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %256
  %264 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  tail call void @_ZdlPv(i8* %265) #21
  br label %266

266:                                              ; preds = %263, %256
  %267 = icmp eq %"class.std::__1::basic_string"* %258, %254
  br i1 %267, label %268, label %256

268:                                              ; preds = %266, %249
  %269 = icmp eq %"class.std::__1::basic_string"* %254, null
  br i1 %269, label %272, label %270

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::basic_string"* %254 to i8*
  tail call void @_ZdlPv(i8* %271) #21
  br label %272

272:                                              ; preds = %143, %270, %268, %64, %110, %4
  %273 = phi %"class.std::__1::basic_string"* [ %1, %4 ], [ %1, %110 ], [ %1, %64 ], [ %180, %268 ], [ %180, %270 ], [ %1, %143 ]
  ret %"class.std::__1::basic_string"* %273
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster10FlushStoreEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* nocapture readonly, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %11 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %10, align 8
  %12 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %11 to void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback"*)***
  %19 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback"*)** %19, i64 7
  %21 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback"*)** %20, align 8
  call void %21(%"class.net::CookieMonster::PersistentCookieStore"* nonnull %11, %"class.base::OnceCallback"* nonnull %3) #19
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #19
  br label %37

23:                                               ; preds = %9, %2
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %24, align 8
  %26 = icmp eq %"class.base::internal::BindStateBase"* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %23
  %28 = tail call dereferenceable(8) %class.scoped_refptr.68* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #19
  %29 = bitcast %class.scoped_refptr.68* %28 to %"class.base::TaskRunner"**
  %30 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %29, align 8
  %31 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #19
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 367) #19
  %32 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %35 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %30, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #19
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #19
  br label %37

37:                                               ; preds = %23, %27, %13
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.68* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster24SetForceKeepSessionStateEv(%"class.net::CookieMonster"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %2, align 8
  %4 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %3 to void (%"class.net::CookieMonster::PersistentCookieStore"*)***
  %7 = load void (%"class.net::CookieMonster::PersistentCookieStore"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*)** %7, i64 5
  %9 = load void (%"class.net::CookieMonster::PersistentCookieStore"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*)** %8, align 8
  tail call void %9(%"class.net::CookieMonster::PersistentCookieStore"* nonnull %3) #19
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster18SetAllCookiesAsyncERKNSt3__16vectorINS_15CanonicalCookieENS1_9allocatorIS3_EEEEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEE(%"class.net::CookieMonster"*, %"class.std::__1::vector.70"* dereferenceable(24), %"class.base::OnceCallback.77"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.base::internal::UnretainedWrapper", align 8
  %8 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #19
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.std::__1::vector.70"*, %"class.base::OnceCallback.77"*)* @_ZN3net13CookieMonster13SetAllCookiesENSt3__16vectorINS_15CanonicalCookieENS1_9allocatorIS3_EEEEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEE to i64), i64 0>, <2 x i64>* %5, align 16
  %9 = bitcast %"class.base::internal::UnretainedWrapper"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.base::internal::UnretainedWrapper", %"class.base::internal::UnretainedWrapper"* %7, i64 0, i32 0
  store %"class.net::CookieMonster"* %0, %"class.net::CookieMonster"** %10, align 8
  %11 = tail call i8* @_Znwm(i64 88) #21, !noalias !4
  %12 = bitcast i8* %11 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS2_15CanonicalCookieENS4_9allocatorIS6_EEEENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SD_EEC2ISF_JSH_RKS9_SD_EEENS4_17integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEENS_12OnceCallbackIFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %6, %"class.base::internal::UnretainedWrapper"* nonnull dereferenceable(8) %7, %"class.std::__1::vector.70"* dereferenceable(24) %1, %"class.base::OnceCallback.77"* dereferenceable(8) %2) #19, !noalias !4
  %13 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %11, i8** %13, align 8, !alias.scope !4
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %4)
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 5
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %6 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %5, align 8
  %7 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i8 1, i8* %9, align 1
  tail call void @_ZN3net13CookieMonster15FetchAllCookiesEv(%"class.net::CookieMonster"* %0) #19
  br label %13

13:                                               ; preds = %2, %8, %12
  %14 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 11
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 7
  %16 = load i8, i8* %15, align 2, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %44

18:                                               ; preds = %13
  %19 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %5, align 8
  %20 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %22, i64 1) #19
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %25) #19
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback"* %26 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = load i64, i64* %24, align 8
  %32 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, -1
  %35 = icmp eq i64 %31, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %21
  store i64 0, i64* %24, align 8
  br label %40

37:                                               ; preds = %21
  %38 = add i64 %31, 1
  store i64 %38, i64* %24, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %36
  br label %41

41:                                               ; preds = %37, %40
  %42 = phi i64 [ %34, %40 ], [ %31, %37 ]
  %43 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %42) #19
  br label %55

44:                                               ; preds = %18, %13
  %45 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #19
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %51 = inttoptr i64 %48 to %"class.base::internal::BindStateBase"*
  %52 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %51, i64 0, i32 1
  %53 = bitcast void ()** %52 to void (%"class.base::internal::BindStateBase"*)**
  %54 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %53, align 8
  tail call void %54(%"class.base::internal::BindStateBase"* %51) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #19
  br label %55

55:                                               ; preds = %44, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster13SetAllCookiesENSt3__16vectorINS_15CanonicalCookieENS1_9allocatorIS3_EEEEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEE(%"class.net::CookieMonster"*, %"class.std::__1::vector.70"* nocapture readonly, %"class.base::OnceCallback.77"* nocapture) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.77", align 8
  %5 = alloca %"struct.net::CookieAccessResult", align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::Time", align 8
  %8 = alloca %"struct.net::CookieAccessResult", align 4
  %9 = alloca %"class.base::OnceCallback.77", align 8
  %10 = alloca %"struct.net::CookieAccessResult", align 4
  %11 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 0
  br label %16

16:                                               ; preds = %14, %16
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  tail call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %17, i1 zeroext true, i32 0)
  %18 = load i64, i64* %11, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %16

20:                                               ; preds = %16, %3
  %21 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %1, i64 0, i32 0, i32 0
  %22 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %1, i64 0, i32 0, i32 1
  %24 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %23, align 8
  %25 = icmp eq %"class.net::CanonicalCookie"* %22, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::Time"* %7 to i8*
  %30 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %7, i64 0, i32 0, i32 0
  %31 = bitcast %"struct.net::CookieAccessResult"* %8 to i8*
  %32 = getelementptr inbounds %"struct.net::CookieAccessResult", %"struct.net::CookieAccessResult"* %8, i64 0, i32 2
  %33 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %37 = bitcast %"struct.net::CookieAccessResult"* %8 to i8*
  br label %58

38:                                               ; preds = %104, %20
  %39 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %2, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.base::OnceCallback.77"* %2 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::OnceCallback.77"* %9 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  %43 = bitcast %"struct.net::CookieAccessResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43) #19
  call void @_ZN3net18CookieAccessResultC1Ev(%"struct.net::CookieAccessResult"* nonnull %10) #19
  %44 = bitcast %"struct.net::CookieAccessResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %44)
  %45 = icmp eq i64 %41, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %9, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"* nonnull %5, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %10) #19
  %48 = bitcast %"class.base::OnceCallback.77"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #19
  %49 = load i64, i64* %42, align 8
  %50 = bitcast %"class.base::OnceCallback.77"* %4 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8
  %51 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %4, i64 0, i32 0
  %52 = inttoptr i64 %49 to %"class.base::internal::BindStateBase"*
  %53 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %52, i64 0, i32 1
  %54 = bitcast void ()** %53 to void (%"class.base::internal::BindStateBase"*, %"struct.net::CookieAccessResult"*)**
  %55 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::CookieAccessResult"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::CookieAccessResult"*)** %54, align 8
  call void %55(%"class.base::internal::BindStateBase"* %52, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %5) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #19
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %5) #19
  br label %56

56:                                               ; preds = %38, %46
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %44)
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43) #19
  %57 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #19
  ret void

58:                                               ; preds = %26, %104
  %59 = phi %"class.net::CanonicalCookie"* [ %22, %26 ], [ %105, %104 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #19
  %60 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %59, i64 0, i32 2
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %68 = select i1 %64, i8* %66, i8* %67
  %69 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %63 to i64
  %72 = select i1 %64, i64 %70, i64 %71
  call void @_ZN3net13CookieMonster6GetKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %68, i64 %72)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #19
  %73 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %59, i64 0, i32 4, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %30, align 8
  %75 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %59, i64 0, i32 5, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp ne i64 %76, 0
  %78 = icmp sge i64 %74, %76
  %79 = and i1 %78, %77
  br i1 %79, label %99, label %80

80:                                               ; preds = %58
  call fastcc void @_ZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeE(%"class.net::CanonicalCookie"* dereferenceable(144) %59, i64 %74)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %31) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 -86, i64 20, i1 false)
  call void @_ZN3net18CookieAccessResultC1Ev(%"struct.net::CookieAccessResult"* nonnull %8) #19
  %81 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %33, align 8
  %82 = icmp eq %"class.net::CookieAccessDelegate"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.net::CookieAccessDelegate"* %81 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)***
  %85 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** %84, align 8
  %86 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %85, i64 3
  %87 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %86, align 8
  %88 = call i32 %87(%"class.net::CookieAccessDelegate"* nonnull %81, %"class.net::CanonicalCookie"* dereferenceable(144) %59) #19
  br label %89

89:                                               ; preds = %80, %83
  %90 = phi i32 [ %88, %83 ], [ -1, %80 ]
  store i32 %90, i32* %32, align 4
  %91 = call i8* @_Znwm(i64 144) #21
  %92 = bitcast i8* %91 to %"class.net::CanonicalCookie"*
  call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* nonnull %92, %"class.net::CanonicalCookie"* dereferenceable(144) %59) #19
  %93 = call %"class.std::__1::__tree_end_node"* @_ZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEb(%"class.net::CookieMonster"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.net::CanonicalCookie"* nonnull %92, i1 zeroext true, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %8, i1 zeroext true)
  %94 = call i64 @_ZN3net13CookieMonster14GarbageCollectERKN4base4TimeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::CookieMonster"* %0, %"class.base::Time"* nonnull dereferenceable(8) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %31) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #19
  %95 = load i8, i8* %35, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %89
  %98 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %98) #21
  br label %104

99:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #19
  %100 = load i8, i8* %35, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %103) #21
  br label %104

104:                                              ; preds = %102, %99, %97, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #19
  %105 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %59, i64 1
  %106 = icmp eq %"class.net::CanonicalCookie"* %105, %24
  br i1 %106, label %38, label %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster23SetCanonicalCookieAsyncENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEE(%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL* dereferenceable(120), %"class.net::CookieOptions"* dereferenceable(32), %"class.base::OnceCallback.77"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = ptrtoint %"class.net::CanonicalCookie"* %1 to i64
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = load i8, i8* %14, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %19, i64 24, i1 false) #19
  br label %25

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %22, i64 %24) #19
  br label %25

25:                                               ; preds = %18, %20
  %26 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %27 = call i8* @_Znwm(i64 224) #21, !noalias !9
  %28 = bitcast i8* %27 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %28, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS3_15CanonicalCookieENS5_14default_deleteIS7_EEEERK4GURLRKNS3_13CookieOptionsENS_12OnceCallbackIFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_SK_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS2_15CanonicalCookieENS4_14default_deleteIS6_EEEERK4GURLRKNS2_13CookieOptionsENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_SJ_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !9
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.77"*)* @_ZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEE to i64), i64 0>, <2 x i64>* %30, align 8, !noalias !9
  %31 = getelementptr inbounds i8, i8* %27, i64 48
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 8, !noalias !9
  %33 = getelementptr inbounds i8, i8* %27, i64 56
  %34 = bitcast i8* %33 to i64*
  store i64 %8, i64* %34, align 8, !noalias !9
  %35 = getelementptr inbounds i8, i8* %27, i64 64
  %36 = bitcast i8* %35 to %class.GURL*
  call void @_ZN4GURLC1ERKS_(%class.GURL* %36, %class.GURL* dereferenceable(120) %2) #19, !noalias !9
  %37 = getelementptr inbounds i8, i8* %27, i64 184
  %38 = bitcast i8* %37 to %"class.net::CookieOptions"*
  call void @_ZN3net13CookieOptionsC1ERKS0_(%"class.net::CookieOptions"* %38, %"class.net::CookieOptions"* dereferenceable(32) %3) #19, !noalias !9
  %39 = getelementptr inbounds i8, i8* %27, i64 216
  %40 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %4, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback.77"* %4 to i64*
  %42 = load i64, i64* %41, align 8, !noalias !9
  %43 = bitcast i8* %39 to i64*
  store i64 %42, i64* %43, align 8, !noalias !9
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8, !noalias !9
  %44 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %27, i8** %44, align 8, !alias.scope !9
  %45 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i8*, i8** %10, align 8
  %50 = select i1 %48, i8* %49, i8* %9
  %51 = load i64, i64* %11, align 8
  %52 = zext i8 %47 to i64
  %53 = select i1 %48, i64 %51, i64 %52
  call void @_ZN3net13CookieMonster31DoCookieCallbackForHostOrDomainEN4base12OnceCallbackIFvvEEENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %7, i8* %50, i64 %53)
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #19
  %55 = load i8, i8* %46, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %25
  %58 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %58) #21
  br label %59

59:                                               ; preds = %57, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster31DoCookieCallbackForHostOrDomainEN4base12OnceCallbackIFvvEEENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CookieMonster"*, %"class.base::OnceCallback"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::OnceCallback.172", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = alloca %"struct.std::__1::pair.257", align 8
  %11 = alloca %"class.base::circular_deque", align 16
  %12 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %14 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %13, align 8
  %15 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 6
  %18 = load i8, i8* %17, align 1, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store i8 1, i8* %17, align 1
  tail call void @_ZN3net13CookieMonster15FetchAllCookiesEv(%"class.net::CookieMonster"* %0) #19
  br label %21

21:                                               ; preds = %4, %16, %20
  %22 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 7
  %23 = load i8, i8* %22, align 2, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %192

25:                                               ; preds = %21
  %26 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %13, align 8
  %27 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %26, null
  br i1 %27, label %192, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 11
  %30 = load i8, i8* %29, align 8, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %33, i64 1) #19
  %34 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %34, i64 %36) #19
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::OnceCallback"* %37 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8
  %42 = load i64, i64* %35, align 8
  %43 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, -1
  %46 = icmp eq i64 %42, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %32
  store i64 0, i64* %35, align 8
  br label %51

48:                                               ; preds = %32
  %49 = add i64 %42, 1
  store i64 %49, i64* %35, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48, %47
  br label %52

52:                                               ; preds = %48, %51
  %53 = phi i64 [ %45, %51 ], [ %42, %48 ]
  %54 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %34, i64 %53) #19
  br label %203

55:                                               ; preds = %28
  %56 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #19
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 24, i1 false)
  call void @_ZN3net13CookieMonster6GetKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %2, i64 %3)
  %60 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0
  %61 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %60, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #19
  %62 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %61, %62
  br i1 %63, label %64, label %184

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0
  %66 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE4findIS7_EENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEERKT_(%"class.std::__1::__tree.29"* %65, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #19
  %67 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %66, %67
  br i1 %68, label %69, label %150

69:                                               ; preds = %64
  %70 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %13, align 8
  %71 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #19
  %72 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #19, !noalias !14
  %73 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %73) #19, !noalias !14
  %74 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 1
  %75 = load i64, i64* %74, align 8, !noalias !14
  %76 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %76, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %75) #19
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #19, !noalias !14
  %77 = call i8* @_Znwm(i64 88) #21, !noalias !17
  %78 = bitcast i8* %77 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %78, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.173"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EESB_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseEOSL_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_6vectorINS4_10unique_ptrINS2_15CanonicalCookieENS4_14default_deleteISF_EEEENS8_ISI_EEEEEJNS_7WeakPtrIS3_EESA_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EESB_EEEEEbPKNS0_13BindStateBaseENSR_21CancellationQueryModeE) #19, !noalias !17
  %79 = getelementptr inbounds i8, i8* %77, i64 32
  %80 = bitcast i8* %79 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.173"*)* @_ZN3net13CookieMonster11OnKeyLoadedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_6vectorINS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEENS5_ISF_EEEE to i64), i64 0>, <2 x i64>* %80, align 8, !noalias !17
  %81 = getelementptr inbounds i8, i8* %77, i64 48
  %82 = bitcast i8* %81 to %"class.base::internal::WeakReference"*
  %83 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %82, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %83) #19, !noalias !17
  %84 = getelementptr inbounds i8, i8* %77, i64 56
  %85 = bitcast i8* %84 to i64*
  %86 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8, !noalias !17
  store i64 %87, i64* %85, align 8, !noalias !17
  %88 = getelementptr inbounds i8, i8* %77, i64 64
  %89 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1, !noalias !17
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %56, i64 24, i1 false) #19, !noalias !17
  br label %98

94:                                               ; preds = %69
  %95 = bitcast i8* %88 to %"class.std::__1::basic_string"*
  %96 = load i8*, i8** %57, align 8, !noalias !17
  %97 = load i64, i64* %58, align 8, !noalias !17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %95, i8* %96, i64 %97) #19, !noalias !17
  br label %98

98:                                               ; preds = %93, %94
  %99 = bitcast %"class.base::OnceCallback.172"* %8 to i8**
  store i8* %77, i8** %99, align 8, !alias.scope !17
  %100 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %70 to void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.172"*)***
  %101 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.172"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.172"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.172"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.172"*)** %101, i64 1
  %103 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.172"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.172"*)** %102, align 8
  call void %103(%"class.net::CookieMonster::PersistentCookieStore"* %70, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.base::OnceCallback.172"* nonnull %8) #19
  %104 = getelementptr inbounds %"class.base::OnceCallback.172", %"class.base::OnceCallback.172"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #19
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %76) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #19
  %105 = bitcast %"struct.std::__1::pair.257"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %105) #19
  %106 = bitcast %"class.base::circular_deque"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #19
  %107 = bitcast %"class.base::circular_deque"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %107, i8 0, i64 32, i1 false)
  %108 = load i8, i8* %90, align 1, !noalias !22
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %105, i8* nonnull align 8 %56, i64 24, i1 false) #19
  br label %120

111:                                              ; preds = %98
  %112 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %10, i64 0, i32 0
  %113 = load i8*, i8** %57, align 8, !noalias !22
  %114 = load i64, i64* %58, align 8, !noalias !22
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %112, i8* %113, i64 %114) #19
  %115 = bitcast %"class.base::circular_deque"* %11 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 16, !noalias !22
  %117 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %11, i64 0, i32 1
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 16, !noalias !22
  br label %120

120:                                              ; preds = %110, %111
  %121 = phi <2 x i64> [ zeroinitializer, %110 ], [ %116, %111 ]
  %122 = phi <2 x i64> [ zeroinitializer, %110 ], [ %119, %111 ]
  %123 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %10, i64 0, i32 1
  %124 = bitcast %"class.base::circular_deque"* %123 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %124, align 8, !alias.scope !22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %106, i8 0, i64 16, i1 false) #19, !noalias !22
  %125 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %10, i64 0, i32 1, i32 1
  %126 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %11, i64 0, i32 1
  %127 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %10, i64 0, i32 1, i32 2
  %128 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %11, i64 0, i32 2
  %129 = bitcast i64* %125 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %129, align 8, !alias.scope !22
  %130 = bitcast i64* %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %130, i8 0, i64 16, i1 false) #19, !noalias !22
  %131 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %10, i64 0, i32 0
  %132 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_SD_EEEEENSM_INS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.29"* %65, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %131, %"struct.std::__1::pair.257"* nonnull dereferenceable(56) %10) #19
  %133 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %132, 0
  %134 = load i64, i64* %125, align 8
  %135 = load i64, i64* %127, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* %123, i64 %134, i64 %135) #19
  %136 = bitcast %"class.base::circular_deque"* %123 to i8**
  %137 = load i8*, i8** %136, align 8
  call void @free(i8* %137) #19
  %138 = bitcast %"struct.std::__1::pair.257"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %120
  %143 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #21
  br label %145

145:                                              ; preds = %120, %142
  %146 = load i64, i64* %126, align 16
  %147 = load i64, i64* %128, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* nonnull %11, i64 %146, i64 %147) #19
  %148 = bitcast %"class.base::circular_deque"* %11 to i8**
  %149 = load i8*, i8** %148, align 16
  call void @free(i8* %149) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %105) #19
  br label %150

150:                                              ; preds = %145, %64
  %151 = phi %"class.std::__1::__tree_end_node"* [ %133, %145 ], [ %66, %64 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 7
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to %"class.base::circular_deque"*
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %153, i64 1) #19
  %154 = bitcast %"class.std::__1::__tree_end_node"* %152 to %"class.base::internal::VectorBuffer"*
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 10
  %156 = bitcast %"class.std::__1::__tree_end_node"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %154, i64 %157) #19
  %159 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %160 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.base::OnceCallback"* %158 to i64*
  store i64 %161, i64* %162, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %159, align 8
  %163 = load i64, i64* %156, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 8
  %165 = bitcast %"class.std::__1::__tree_end_node"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, -1
  %168 = icmp eq i64 %163, %167
  br i1 %168, label %169, label %170

169:                                              ; preds = %150
  store i64 0, i64* %156, align 8
  br label %173

170:                                              ; preds = %150
  %171 = add i64 %163, 1
  store i64 %171, i64* %156, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170, %169
  br label %174

174:                                              ; preds = %170, %173
  %175 = phi i64 [ %167, %173 ], [ %163, %170 ]
  %176 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %154, i64 %175) #19
  %177 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %174
  %182 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %182) #21
  br label %183

183:                                              ; preds = %174, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #19
  br label %203

184:                                              ; preds = %55
  %185 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %184
  %190 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %190) #21
  br label %191

191:                                              ; preds = %184, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #19
  br label %192

192:                                              ; preds = %191, %25, %21
  %193 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #19
  %194 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %196, i64* %197, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %194, align 8
  %198 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %199 = inttoptr i64 %196 to %"class.base::internal::BindStateBase"*
  %200 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %199, i64 0, i32 1
  %201 = bitcast void ()** %200 to void (%"class.base::internal::BindStateBase"*)**
  %202 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %201, align 8
  call void %202(%"class.base::internal::BindStateBase"* %199) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %198) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #19
  br label %203

203:                                              ; preds = %183, %192, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEE(%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL* dereferenceable(120), %"class.net::CookieOptions"* dereferenceable(32), %"class.base::OnceCallback.77"* nocapture) #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.77", align 8
  %7 = alloca %"struct.net::CookieAccessResult", align 4
  %8 = alloca %"struct.net::CookieAccessResult", align 4
  %9 = alloca %"struct.net::CookieAccessParams", align 4
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::Time", align 8
  %12 = alloca %"class.base::Time", align 8
  %13 = alloca %"class.base::OnceCallback.77", align 8
  %14 = ptrtoint %"class.net::CanonicalCookie"* %1 to i64
  %15 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %15, align 8
  %17 = icmp eq %"class.net::CookieAccessDelegate"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.net::CookieAccessDelegate"* %16 to i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)***
  %20 = load i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)**, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)** %20, i64 2
  %22 = load i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.net::CookieAccessDelegate"* nonnull %16, %class.GURL* dereferenceable(120) %2) #19
  %24 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %15, align 8
  %25 = bitcast %"class.net::CookieAccessDelegate"* %24 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)***
  br label %26

26:                                               ; preds = %5, %18
  %27 = phi i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** [ null, %5 ], [ %25, %18 ]
  %28 = phi %"class.net::CookieAccessDelegate"* [ null, %5 ], [ %24, %18 ]
  %29 = phi i1 [ false, %5 ], [ %23, %18 ]
  %30 = bitcast %"struct.net::CookieAccessResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"struct.net::CookieAccessResult", %"struct.net::CookieAccessResult"* %8, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.net::CookieAccessResult", %"struct.net::CookieAccessResult"* %8, i64 0, i32 3
  %33 = bitcast %"struct.net::CookieAccessParams"* %9 to i8*
  %34 = bitcast %"struct.net::CookieAccessResult"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -86, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %33) #19
  %35 = icmp eq %"class.net::CookieAccessDelegate"* %28, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %26
  %37 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** %27, align 8
  %38 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %37, i64 3
  %39 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %38, align 8
  %40 = tail call i32 %39(%"class.net::CookieAccessDelegate"* nonnull %28, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #19
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i32 [ %40, %36 ], [ -1, %26 ]
  %43 = tail call i32 @_ZN3net11cookie_util18GetSamePartyStatusERKNS_15CanonicalCookieERKNS_13CookieOptionsE(%"class.net::CanonicalCookie"* dereferenceable(144) %1, %"class.net::CookieOptions"* dereferenceable(32) %3) #19
  call void @_ZN3net18CookieAccessParamsC1ENS_21CookieAccessSemanticsEbNS_21CookieSamePartyStatusE(%"struct.net::CookieAccessParams"* nonnull %9, i32 %42, i1 zeroext %29, i32 %43) #19
  %44 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 16
  call void @_ZNK3net15CanonicalCookie23IsSetPermittedInContextERK4GURLRKNS_13CookieOptionsERKNS_18CookieAccessParamsERKNSt3__16vectorINSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEENSF_ISH_EEEE(%"struct.net::CookieAccessResult"* nonnull sret %8, %"class.net::CanonicalCookie"* %1, %class.GURL* dereferenceable(120) %2, %"class.net::CookieOptions"* dereferenceable(32) %3, %"struct.net::CookieAccessParams"* nonnull dereferenceable(12) %9, %"class.std::__1::vector.54"* dereferenceable(24) %44) #19
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %33) #19
  %45 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #19
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  %51 = load i8, i8* %49, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %56 = select i1 %52, i8* %54, i8* %55
  %57 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %51 to i64
  %60 = select i1 %52, i64 %58, i64 %59
  call void @_ZN3net13CookieMonster6GetKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i8* %56, i64 %60)
  %61 = bitcast %"class.base::Time"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #19
  %62 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %11, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 4, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %62, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %41
  %67 = call i64 @_ZN4base4Time3NowEv() #19
  store i64 %67, i64* %62, align 8
  store i64 %67, i64* %63, align 8
  br label %68

68:                                               ; preds = %66, %41
  %69 = phi i64 [ %67, %66 ], [ %64, %41 ]
  %70 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 5, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp ne i64 %71, 0
  %73 = icmp sge i64 %69, %71
  %74 = and i1 %72, %73
  %75 = bitcast %"class.base::Time"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #19
  %76 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %12, i64 0, i32 0, i32 0
  store i64 0, i64* %76, align 8
  %77 = load i8, i8* %32, align 4, !range !3
  %78 = icmp ne i8 %77, 0
  %79 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %3, i64 0, i32 0
  %80 = load i8, i8* %79, align 4, !range !3
  %81 = icmp ne i8 %80, 0
  call void @_ZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusE(%"class.net::CookieMonster"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.net::CanonicalCookie"* dereferenceable(144) %1, i1 zeroext %78, i1 zeroext %81, i1 zeroext %74, %"class.base::Time"* nonnull %12, %"class.net::CookieInclusionStatus"* nonnull %31)
  %82 = call zeroext i1 @_ZNK3net21CookieInclusionStatus18HasExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"* nonnull %31, i32 13) #19
  br i1 %82, label %85, label %83

83:                                               ; preds = %68
  %84 = call zeroext i1 @_ZNK3net21CookieInclusionStatus18HasExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"* nonnull %31, i32 14) #19
  br label %85

85:                                               ; preds = %83, %68
  %86 = call zeroext i1 @_ZNK3net21CookieInclusionStatus28ShouldRecordDowngradeMetricsEv(%"class.net::CookieInclusionStatus"* nonnull %31) #19
  br i1 %86, label %87, label %101

87:                                               ; preds = %85
  %88 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %89 = inttoptr i64 %88 to %"class.base::HistogramBase"*
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %87
  %92 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i32 1, i32 12, i32 13, i32 1) #19
  %93 = ptrtoint %"class.base::HistogramBase"* %92 to i64
  store atomic i64 %93, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %94

94:                                               ; preds = %87, %91
  %95 = phi %"class.base::HistogramBase"* [ %89, %87 ], [ %92, %91 ]
  %96 = call i32 @_ZNK3net21CookieInclusionStatus36GetBreakingDowngradeMetricsEnumValueERK4GURL(%"class.net::CookieInclusionStatus"* nonnull %31, %class.GURL* dereferenceable(120) %2) #19
  %97 = bitcast %"class.base::HistogramBase"* %95 to void (%"class.base::HistogramBase"*, i32)***
  %98 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %98, i64 6
  %100 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %99, align 8
  call void %100(%"class.base::HistogramBase"* %95, i32 %96) #19
  br label %101

101:                                              ; preds = %94, %85
  %102 = call zeroext i1 @_ZNK3net21CookieInclusionStatus9IsIncludeEv(%"class.net::CookieInclusionStatus"* nonnull %31) #19
  br i1 %102, label %103, label %233

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 11
  %105 = load i8, i8* %104, align 4, !range !3
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %132, label %107

107:                                              ; preds = %103
  %108 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %109 = inttoptr i64 %108 to %"class.base::HistogramBase"*
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i64 0, i64 0), i32 1) #19
  %113 = ptrtoint %"class.base::HistogramBase"* %112 to i64
  store atomic i64 %113, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %114

114:                                              ; preds = %107, %111
  %115 = phi %"class.base::HistogramBase"* [ %109, %107 ], [ %112, %111 ]
  %116 = load i8, i8* %79, align 4, !range !3
  %117 = icmp eq i8 %116, 0
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %115, i1 zeroext %117) #19
  %118 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %119 = inttoptr i64 %118 to %"class.base::HistogramBase"*
  %120 = icmp eq i64 %118, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %114
  %122 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i64 0, i64 0), i32 1, i32 21, i32 22, i32 1) #19
  %123 = ptrtoint %"class.base::HistogramBase"* %122 to i64
  store atomic i64 %123, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %124

124:                                              ; preds = %114, %121
  %125 = phi %"class.base::HistogramBase"* [ %119, %114 ], [ %122, %121 ]
  %126 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %3, i64 0, i32 7
  %127 = load i32, i32* %126, align 4
  %128 = bitcast %"class.base::HistogramBase"* %125 to void (%"class.base::HistogramBase"*, i32)***
  %129 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %129, i64 6
  %131 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %130, align 8
  call void %131(%"class.base::HistogramBase"* %125, i32 %127) #19
  br label %132

132:                                              ; preds = %103, %124
  br i1 %74, label %185, label %133

133:                                              ; preds = %132
  %134 = load i64, i64* %62, align 8
  call fastcc void @_ZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeE(%"class.net::CanonicalCookie"* dereferenceable(144) %1, i64 %134)
  %135 = call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %2) #19
  %136 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 7
  %137 = load i8, i8* %136, align 8, !range !3
  %138 = icmp ne i8 %137, 0
  %139 = select i1 %138, i32 0, i32 2
  %140 = select i1 %138, i32 1, i32 3
  %141 = select i1 %135, i32 %139, i32 %140
  %142 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %143 = inttoptr i64 %142 to %"class.base::HistogramBase"*
  %144 = icmp eq i64 %142, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %133
  %146 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #19
  %147 = ptrtoint %"class.base::HistogramBase"* %146 to i64
  store atomic i64 %147, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %148

148:                                              ; preds = %133, %145
  %149 = phi %"class.base::HistogramBase"* [ %143, %133 ], [ %146, %145 ]
  %150 = bitcast %"class.base::HistogramBase"* %149 to void (%"class.base::HistogramBase"*, i32)***
  %151 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %151, i64 6
  %153 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %152, align 8
  call void %153(%"class.base::HistogramBase"* %149, i32 %141) #19
  %154 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %155 = inttoptr i64 %154 to %"class.base::HistogramBase"*
  %156 = icmp eq i64 %154, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %148
  %158 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0), i32 1) #19
  %159 = ptrtoint %"class.base::HistogramBase"* %158 to i64
  store atomic i64 %159, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %160

160:                                              ; preds = %148, %157
  %161 = phi %"class.base::HistogramBase"* [ %155, %148 ], [ %158, %157 ]
  %162 = load i8, i8* %49, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  %165 = load i64, i64* %57, align 8
  br label %168

166:                                              ; preds = %160
  %167 = zext i8 %162 to i64
  br label %168

168:                                              ; preds = %166, %164
  %169 = phi i64 [ %165, %164 ], [ %167, %166 ]
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  br i1 %163, label %172, label %174

172:                                              ; preds = %171
  %173 = load i8*, i8** %53, align 8
  br label %174

174:                                              ; preds = %171, %172
  %175 = phi i8* [ %173, %172 ], [ %55, %171 ]
  %176 = load i8, i8* %175, align 1
  %177 = icmp eq i8 %176, 46
  br label %178

178:                                              ; preds = %168, %174
  %179 = phi i1 [ false, %168 ], [ %177, %174 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %161, i1 zeroext %179) #19
  %180 = load i64, i64* %76, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %183, label %182

182:                                              ; preds = %178
  store i64 %180, i64* %63, align 8
  br label %183

183:                                              ; preds = %182, %178
  %184 = call %"class.std::__1::__tree_end_node"* @_ZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEb(%"class.net::CookieMonster"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.net::CanonicalCookie"* %1, i1 zeroext true, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %8, i1 zeroext true)
  br label %185

185:                                              ; preds = %132, %183
  %186 = phi i64 [ %14, %132 ], [ 0, %183 ]
  %187 = call i64 @_ZN3net13CookieMonster14GarbageCollectERKN4base4TimeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::CookieMonster"* %0, %"class.base::Time"* nonnull dereferenceable(8) %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10)
  %188 = call zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120) %2) #19
  br i1 %188, label %189, label %204

189:                                              ; preds = %185
  %190 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %191 = inttoptr i64 %190 to %"class.base::HistogramBase"*
  %192 = icmp eq i64 %190, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %189
  %194 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i64 0, i64 0), i32 1, i32 91, i32 92, i32 1) #19
  %195 = ptrtoint %"class.base::HistogramBase"* %194 to i64
  store atomic i64 %195, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %196

196:                                              ; preds = %189, %193
  %197 = phi %"class.base::HistogramBase"* [ %191, %189 ], [ %194, %193 ]
  %198 = call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %2) #19
  %199 = call i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32 %198) #19
  %200 = bitcast %"class.base::HistogramBase"* %197 to void (%"class.base::HistogramBase"*, i32)***
  %201 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %201, i64 6
  %203 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %202, align 8
  call void %203(%"class.base::HistogramBase"* %197, i32 %199) #19
  br label %219

204:                                              ; preds = %185
  %205 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_5.0.0.0.0.0 acquire, align 8
  %206 = inttoptr i64 %205 to %"class.base::HistogramBase"*
  %207 = icmp eq i64 %205, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %204
  %209 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0), i32 1, i32 91, i32 92, i32 1) #19
  %210 = ptrtoint %"class.base::HistogramBase"* %209 to i64
  store atomic i64 %210, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_5.0.0.0.0.0 release, align 8
  br label %211

211:                                              ; preds = %204, %208
  %212 = phi %"class.base::HistogramBase"* [ %206, %204 ], [ %209, %208 ]
  %213 = call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %2) #19
  %214 = call i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32 %213) #19
  %215 = bitcast %"class.base::HistogramBase"* %212 to void (%"class.base::HistogramBase"*, i32)***
  %216 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %215, align 8
  %217 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %216, i64 6
  %218 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %217, align 8
  call void %218(%"class.base::HistogramBase"* %212, i32 %214) #19
  br label %219

219:                                              ; preds = %211, %196
  %220 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_6.0.0.0.0.0 acquire, align 8
  %221 = inttoptr i64 %220 to %"class.base::HistogramBase"*
  %222 = icmp eq i64 %220, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %219
  %224 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i64 0, i64 0), i32 1, i32 23, i32 24, i32 1) #19
  %225 = ptrtoint %"class.base::HistogramBase"* %224 to i64
  store atomic i64 %225, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_6.0.0.0.0.0 release, align 8
  br label %226

226:                                              ; preds = %219, %223
  %227 = phi %"class.base::HistogramBase"* [ %221, %219 ], [ %224, %223 ]
  %228 = call i32 @_ZN3net17GetSchemeNameEnumERK4GURL(%class.GURL* dereferenceable(120) %2) #19
  %229 = bitcast %"class.base::HistogramBase"* %227 to void (%"class.base::HistogramBase"*, i32)***
  %230 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %230, i64 6
  %232 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %231, align 8
  call void %232(%"class.base::HistogramBase"* %227, i32 %228) #19
  br label %243

233:                                              ; preds = %101
  %234 = load atomic i64, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_7.0.0.0.0.0 acquire, align 8
  %235 = inttoptr i64 %234 to %"class.base::HistogramBase"*
  %236 = icmp eq i64 %234, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %233
  %238 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.32, i64 0, i64 0), i32 1) #19
  %239 = ptrtoint %"class.base::HistogramBase"* %238 to i64
  store atomic i64 %239, i64* @_ZZN3net13CookieMonster18SetCanonicalCookieENSt3__110unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS3_EEEERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvNS_18CookieAccessResultEEEEE24atomic_histogram_pointer_7.0.0.0.0.0 release, align 8
  br label %240

240:                                              ; preds = %233, %237
  %241 = phi %"class.base::HistogramBase"* [ %235, %233 ], [ %238, %237 ]
  %242 = call zeroext i1 @_ZNK3net21CookieInclusionStatus22HasOnlyExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"* nonnull %31, i32 10) #19
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %241, i1 zeroext %242) #19
  br label %243

243:                                              ; preds = %240, %226
  %244 = phi i64 [ %186, %226 ], [ %14, %240 ]
  %245 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %4, i64 0, i32 0, i32 0, i32 0
  %246 = bitcast %"class.base::OnceCallback.77"* %4 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.base::OnceCallback.77"* %13 to i64*
  store i64 %247, i64* %248, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %245, align 8
  %249 = bitcast %"struct.net::CookieAccessResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %249)
  %250 = icmp eq i64 %247, 0
  br i1 %250, label %261, label %251

251:                                              ; preds = %243
  %252 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %13, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"* nonnull %7, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %8) #19
  %253 = bitcast %"class.base::OnceCallback.77"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #19
  %254 = load i64, i64* %248, align 8
  %255 = bitcast %"class.base::OnceCallback.77"* %6 to i64*
  store i64 %254, i64* %255, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %252, align 8
  %256 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %6, i64 0, i32 0
  %257 = inttoptr i64 %254 to %"class.base::internal::BindStateBase"*
  %258 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %257, i64 0, i32 1
  %259 = bitcast void ()** %258 to void (%"class.base::internal::BindStateBase"*, %"struct.net::CookieAccessResult"*)**
  %260 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::CookieAccessResult"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::CookieAccessResult"*)** %259, align 8
  call void %260(%"class.base::internal::BindStateBase"* %257, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %7) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %256) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #19
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %7) #19
  br label %261

261:                                              ; preds = %243, %251
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %249)
  %262 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %262) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #19
  %263 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %261
  %268 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %268) #21
  br label %269

269:                                              ; preds = %261, %267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #19
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30) #19
  %270 = icmp eq i64 %244, 0
  br i1 %270, label %274, label %271

271:                                              ; preds = %269
  %272 = inttoptr i64 %244 to %"class.net::CanonicalCookie"*
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %272) #19
  %273 = inttoptr i64 %244 to i8*
  call void @_ZdlPv(i8* %273) #21
  br label %274

274:                                              ; preds = %269, %271
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster29GetCookieListWithOptionsAsyncERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvRKNSt3__16vectorINS_22CookieWithAccessResultENS9_9allocatorISB_EEEESG_EEE(%"class.net::CookieMonster"*, %class.GURL* dereferenceable(120), %"class.net::CookieOptions"* dereferenceable(32), %"class.base::OnceCallback.89"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %8 = tail call i8* @_Znwm(i64 216) #21, !noalias !25
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRK4GURLRKNS3_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS3_22CookieWithAccessResultENSC_9allocatorISE_EEEESJ_EEEEJNS0_17UnretainedWrapperIS4_EES5_S8_SL_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRK4GURLRKNS2_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS2_22CookieWithAccessResultENSB_9allocatorISD_EEEESI_EEEEJNS0_17UnretainedWrapperIS3_EES4_S7_SK_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !25
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.89"*)* @_ZN3net13CookieMonster24GetCookieListWithOptionsERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvRKNSt3__16vectorINS_22CookieWithAccessResultENS9_9allocatorISB_EEEESG_EEE to i64), i64 0>, <2 x i64>* %11, align 8, !noalias !25
  %12 = getelementptr inbounds i8, i8* %8, i64 48
  %13 = bitcast i8* %12 to i64*
  store i64 %7, i64* %13, align 8, !noalias !25
  %14 = getelementptr inbounds i8, i8* %8, i64 56
  %15 = bitcast i8* %14 to %class.GURL*
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %15, %class.GURL* dereferenceable(120) %1) #19, !noalias !25
  %16 = getelementptr inbounds i8, i8* %8, i64 176
  %17 = bitcast i8* %16 to %"class.net::CookieOptions"*
  tail call void @_ZN3net13CookieOptionsC1ERKS0_(%"class.net::CookieOptions"* %17, %"class.net::CookieOptions"* dereferenceable(32) %2) #19, !noalias !25
  %18 = getelementptr inbounds i8, i8* %8, i64 208
  %19 = getelementptr inbounds %"class.base::OnceCallback.89", %"class.base::OnceCallback.89"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback.89"* %3 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !25
  %22 = bitcast i8* %18 to i64*
  store i64 %21, i64* %22, align 8, !noalias !25
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8, !noalias !25
  %23 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %25 = ptrtoint i8* %8 to i64
  %26 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %27 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %44, label %30

30:                                               ; preds = %4
  %31 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %class.GURL* %1 to i8*
  %41 = select i1 %37, i8* %39, i8* %40
  %42 = getelementptr inbounds i8, i8* %41, i64 %33
  %43 = sext i32 %28 to i64
  br label %44

44:                                               ; preds = %4, %30
  %45 = phi i8* [ %42, %30 ], [ null, %4 ]
  %46 = phi i64 [ %43, %30 ], [ 0, %4 ]
  call void @_ZN3net13CookieMonster31DoCookieCallbackForHostOrDomainEN4base12OnceCallbackIFvvEEENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %5, i8* %45, i64 %46) #19
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster22DoCookieCallbackForURLEN4base12OnceCallbackIFvvEEERK4GURL(%"class.net::CookieMonster"*, %"class.base::OnceCallback"* nocapture, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %26, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %class.GURL* %2 to i8*
  %23 = select i1 %19, i8* %21, i8* %22
  %24 = getelementptr inbounds i8, i8* %23, i64 %15
  %25 = sext i32 %10 to i64
  br label %26

26:                                               ; preds = %3, %12
  %27 = phi i8* [ %24, %12 ], [ null, %3 ]
  %28 = phi i64 [ %25, %12 ], [ 0, %3 ]
  call void @_ZN3net13CookieMonster31DoCookieCallbackForHostOrDomainEN4base12OnceCallbackIFvvEEENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %4, i8* %27, i64 %28)
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster24GetCookieListWithOptionsERK4GURLRKNS_13CookieOptionsEN4base12OnceCallbackIFvRKNSt3__16vectorINS_22CookieWithAccessResultENS9_9allocatorISB_EEEESG_EEE(%"class.net::CookieMonster"*, %class.GURL* dereferenceable(120), %"class.net::CookieOptions"* dereferenceable(32), %"class.base::OnceCallback.89"* nocapture) #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.89", align 8
  %6 = alloca i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, align 8
  %7 = alloca %"class.std::__1::vector.164", align 8
  %8 = alloca %"class.std::__1::vector.164", align 8
  %9 = alloca %"class.std::__1::vector.147", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"class.net::CookieOptions", align 4
  %12 = alloca %"class.base::OnceCallback.89", align 8
  %13 = bitcast %"class.std::__1::vector.164"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %7, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #19
  %16 = bitcast %"class.std::__1::vector.164"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %8, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #19
  %19 = tail call zeroext i1 @_ZN3net13CookieMonster19HasCookieableSchemeERK4GURL(%"class.net::CookieMonster"* %0, %class.GURL* dereferenceable(120) %1)
  br i1 %19, label %20, label %40

20:                                               ; preds = %4
  %21 = bitcast %"class.std::__1::vector.147"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #19
  %22 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %9, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %9, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::vector.147"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZN3net13CookieMonster36FindCookiesForRegistryControlledHostERK4GURL(%"class.std::__1::vector.147"* nonnull sret %9, %"class.net::CookieMonster"* %0, %class.GURL* dereferenceable(120) %1)
  %25 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %22, align 8
  %26 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %23, align 8
  %27 = bitcast i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  store i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)* @_ZN3net12_GLOBAL__N_112CookieSorterEPNS_15CanonicalCookieES2_, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %6, align 8
  call void @_ZNSt3__16__sortIRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_(%"class.net::CanonicalCookie"** %25, %"class.net::CanonicalCookie"** %26, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** nonnull dereferenceable(8) %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %"class.net::CanonicalCookie"*** %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.147"* %9 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  call void @_ZNSt3__16vectorIN3net22CookieWithAccessResultENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.164"* nonnull %7, i64 %33)
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %10, %class.GURL* dereferenceable(120) %1) #19
  call void @_ZN3net13CookieOptionsC1ERKS0_(%"class.net::CookieOptions"* nonnull %11, %"class.net::CookieOptions"* dereferenceable(32) %2) #19
  call void @_ZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_(%"class.net::CookieMonster"* %0, %class.GURL* nonnull %10, %"class.net::CookieOptions"* nonnull %11, %"class.std::__1::vector.147"* nonnull %9, %"class.std::__1::vector.164"* nonnull %7, %"class.std::__1::vector.164"* nonnull %8)
  call void @_ZN3net13CookieOptionsD1Ev(%"class.net::CookieOptions"* nonnull %11) #19
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #19
  %34 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %22, align 8
  %35 = icmp eq %"class.net::CanonicalCookie"** %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %20
  %37 = ptrtoint %"class.net::CanonicalCookie"** %34 to i64
  store i64 %37, i64* %28, align 8
  %38 = bitcast %"class.net::CanonicalCookie"** %34 to i8*
  call void @_ZdlPv(i8* %38) #21
  br label %39

39:                                               ; preds = %20, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #19
  br label %40

40:                                               ; preds = %39, %4
  %41 = getelementptr inbounds %"class.base::OnceCallback.89", %"class.base::OnceCallback.89"* %3, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback.89"* %3 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback.89"* %12 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %45 = inttoptr i64 %43 to %"class.base::internal::BindStateBase"*
  %46 = icmp eq i64 %43, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::OnceCallback.89", %"class.base::OnceCallback.89"* %12, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.base::OnceCallback.89"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #19
  %50 = bitcast %"class.base::OnceCallback.89"* %5 to i64*
  store i64 %43, i64* %50, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8
  %51 = getelementptr inbounds %"class.base::OnceCallback.89", %"class.base::OnceCallback.89"* %5, i64 0, i32 0
  %52 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %45, i64 0, i32 1
  %53 = bitcast void ()** %52 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.164"*, %"class.std::__1::vector.164"*)**
  %54 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.164"*, %"class.std::__1::vector.164"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.164"*, %"class.std::__1::vector.164"*)** %53, align 8
  call void %54(%"class.base::internal::BindStateBase"* nonnull %45, %"class.std::__1::vector.164"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.164"* nonnull dereferenceable(24) %8) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #19
  br label %55

55:                                               ; preds = %40, %47
  %56 = getelementptr inbounds %"class.base::OnceCallback.89", %"class.base::OnceCallback.89"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %56) #19
  %57 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %17, align 8
  %58 = icmp eq %"struct.net::CookieWithAccessResult"* %57, null
  br i1 %58, label %74, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.net::CookieWithAccessResult"* %57 to i8*
  %61 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %18, align 8
  %62 = icmp eq %"struct.net::CookieWithAccessResult"* %61, %57
  br i1 %62, label %72, label %63

63:                                               ; preds = %59, %63
  %64 = phi %"struct.net::CookieWithAccessResult"* [ %65, %63 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %64, i64 -1
  %66 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %64, i64 -1, i32 1
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* %66) #19
  %67 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %65, i64 0, i32 0
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %67) #19
  %68 = icmp eq %"struct.net::CookieWithAccessResult"* %65, %57
  br i1 %68, label %69, label %63

69:                                               ; preds = %63
  %70 = bitcast %"class.std::__1::vector.164"* %8 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %59
  %73 = phi i8* [ %71, %69 ], [ %60, %59 ]
  store %"struct.net::CookieWithAccessResult"* %57, %"struct.net::CookieWithAccessResult"** %18, align 8
  call void @_ZdlPv(i8* %73) #21
  br label %74

74:                                               ; preds = %55, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #19
  %75 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %14, align 8
  %76 = icmp eq %"struct.net::CookieWithAccessResult"* %75, null
  br i1 %76, label %92, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.net::CookieWithAccessResult"* %75 to i8*
  %79 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %15, align 8
  %80 = icmp eq %"struct.net::CookieWithAccessResult"* %79, %75
  br i1 %80, label %90, label %81

81:                                               ; preds = %77, %81
  %82 = phi %"struct.net::CookieWithAccessResult"* [ %83, %81 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %82, i64 -1
  %84 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %82, i64 -1, i32 1
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* %84) #19
  %85 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %83, i64 0, i32 0
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %85) #19
  %86 = icmp eq %"struct.net::CookieWithAccessResult"* %83, %75
  br i1 %86, label %87, label %81

87:                                               ; preds = %81
  %88 = bitcast %"class.std::__1::vector.164"* %7 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %87, %77
  %91 = phi i8* [ %89, %87 ], [ %78, %77 ]
  store %"struct.net::CookieWithAccessResult"* %75, %"struct.net::CookieWithAccessResult"** %15, align 8
  call void @_ZdlPv(i8* %91) #21
  br label %92

92:                                               ; preds = %74, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster18GetAllCookiesAsyncEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEEEEE(%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %5 = tail call i8* @_Znwm(i64 64) #21, !noalias !30
  %6 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %6, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS3_15CanonicalCookieENS6_9allocatorIS8_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS2_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS3_EESE_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !30
  %7 = getelementptr inbounds i8, i8* %5, i64 32
  %8 = bitcast i8* %7 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)* @_ZN3net13CookieMonster13GetAllCookiesEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEEEEE to i64), i64 0>, <2 x i64>* %8, align 8, !noalias !30
  %9 = getelementptr inbounds i8, i8* %5, i64 48
  %10 = bitcast i8* %9 to i64*
  store i64 %4, i64* %10, align 8, !noalias !30
  %11 = getelementptr inbounds i8, i8* %5, i64 56
  %12 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback.90"* %1 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !30
  %15 = bitcast i8* %11 to i64*
  store i64 %14, i64* %15, align 8, !noalias !30
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8, !noalias !30
  %16 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %5, i8** %16, align 8, !alias.scope !30
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %3)
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster13GetAllCookiesEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEEEEE(%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"* nocapture) #0 align 2 {
  %3 = alloca i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, align 8
  %4 = alloca %"class.base::OnceCallback.90", align 8
  %5 = alloca %"class.std::__1::vector.147", align 8
  %6 = alloca %"class.std::__1::vector.70", align 8
  %7 = alloca %"class.base::OnceCallback.90", align 8
  %8 = tail call i64 @_ZN4base4Time3NowEv() #19
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %11, %10
  br i1 %12, label %55, label %13

13:                                               ; preds = %2, %53
  %14 = phi %"class.std::__1::__tree_end_node"* [ %43, %53 ], [ %10, %2 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 1, i32 0
  %16 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node_base"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %13
  %19 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node_base"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 2
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_end_node"**
  %22 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, %19
  br i1 %25, label %42, label %33

26:                                               ; preds = %13, %26
  %27 = phi %"class.std::__1::__tree_node_base"* [ %29, %26 ], [ %16, %13 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %26

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 0
  br label %42

33:                                               ; preds = %18, %33
  %34 = phi %"class.std::__1::__tree_end_node"** [ %37, %33 ], [ %21, %18 ]
  %35 = bitcast %"class.std::__1::__tree_end_node"** %34 to %"class.std::__1::__tree_node_base"**
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %36
  br i1 %41, label %42, label %33

42:                                               ; preds = %33, %31, %18
  %43 = phi %"class.std::__1::__tree_end_node"* [ %32, %31 ], [ %22, %18 ], [ %38, %33 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 7
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.net::CanonicalCookie"**
  %46 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %45, align 8
  %47 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %46, i64 0, i32 5, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp ne i64 %48, 0
  %50 = icmp sge i64 %8, %48
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %42
  tail call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %14, i1 zeroext true, i32 2) #19
  br label %53

53:                                               ; preds = %42, %52
  %54 = icmp eq %"class.std::__1::__tree_end_node"* %11, %43
  br i1 %54, label %55, label %13

55:                                               ; preds = %53, %2
  %56 = bitcast %"class.std::__1::vector.147"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #19
  %57 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %5, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %5, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #19
  %60 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.net::CanonicalCookie"*** %59 to i64*
  %63 = bitcast %"class.std::__1::vector.147"* %5 to i64*
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %78, label %65

65:                                               ; preds = %55
  %66 = icmp ugt i64 %61, 2305843009213693951
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @abort() #20
  unreachable

68:                                               ; preds = %65
  %69 = bitcast %"class.net::CanonicalCookie"*** %58 to i64*
  %70 = shl i64 %61, 3
  %71 = tail call i8* @_Znwm(i64 %70) #21
  %72 = bitcast i8* %71 to %"class.net::CanonicalCookie"**
  %73 = ptrtoint i8* %71 to i64
  %74 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %72, i64 %61
  %75 = ptrtoint %"class.net::CanonicalCookie"** %74 to i64
  %76 = ptrtoint i8* %71 to i64
  store i64 %76, i64* %63, align 8
  store i64 %73, i64* %69, align 8
  store i64 %75, i64* %62, align 8
  %77 = bitcast i8* %71 to %"class.net::CanonicalCookie"**
  br label %78

78:                                               ; preds = %68, %55
  %79 = phi %"class.net::CanonicalCookie"** [ null, %55 ], [ %72, %68 ]
  %80 = phi %"class.net::CanonicalCookie"** [ null, %55 ], [ %77, %68 ]
  %81 = phi i64 [ 0, %55 ], [ %73, %68 ]
  %82 = phi %"class.net::CanonicalCookie"** [ null, %55 ], [ %74, %68 ]
  %83 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %84 = icmp eq %"class.std::__1::__tree_end_node"* %83, %11
  %85 = bitcast %"class.net::CanonicalCookie"*** %58 to i64*
  br i1 %84, label %86, label %103

86:                                               ; preds = %197, %78
  %87 = phi %"class.net::CanonicalCookie"** [ %79, %78 ], [ %167, %197 ]
  %88 = phi %"class.net::CanonicalCookie"** [ %80, %78 ], [ %168, %197 ]
  %89 = bitcast i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  store i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)* @_ZN3net12_GLOBAL__N_112CookieSorterEPNS_15CanonicalCookieES2_, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_(%"class.net::CanonicalCookie"** %88, %"class.net::CanonicalCookie"** %87, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** nonnull dereferenceable(8) %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  %90 = bitcast %"class.std::__1::vector.70"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #19
  %91 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %6, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %6, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #19
  %94 = load i64, i64* %85, align 8
  %95 = load i64, i64* %63, align 8
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 3
  call void @_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.70"* nonnull %6, i64 %97)
  %98 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %57, align 8
  %99 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %58, align 8
  %100 = icmp eq %"class.net::CanonicalCookie"** %98, %99
  br i1 %100, label %202, label %101

101:                                              ; preds = %86
  %102 = bitcast %"class.net::CanonicalCookie"** %92 to i64*
  br label %241

103:                                              ; preds = %78, %200
  %104 = phi %"class.net::CanonicalCookie"** [ %168, %200 ], [ %80, %78 ]
  %105 = phi i64 [ %169, %200 ], [ %81, %78 ]
  %106 = phi %"class.net::CanonicalCookie"** [ %201, %200 ], [ %82, %78 ]
  %107 = phi %"class.net::CanonicalCookie"** [ %167, %200 ], [ %79, %78 ]
  %108 = phi %"class.std::__1::__tree_end_node"* [ %198, %200 ], [ %83, %78 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 7
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = icmp ult %"class.net::CanonicalCookie"** %107, %106
  %113 = ptrtoint %"class.net::CanonicalCookie"** %106 to i64
  br i1 %112, label %114, label %118

114:                                              ; preds = %103
  %115 = bitcast %"class.net::CanonicalCookie"** %107 to i64*
  store i64 %111, i64* %115, align 8
  %116 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %107, i64 1
  %117 = ptrtoint %"class.net::CanonicalCookie"** %116 to i64
  store i64 %117, i64* %85, align 8
  br label %166

118:                                              ; preds = %103
  %119 = ptrtoint %"class.net::CanonicalCookie"** %107 to i64
  %120 = load i64, i64* %63, align 8
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 3
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 2305843009213693951
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::vector.147"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %126) #20
  unreachable

127:                                              ; preds = %118
  %128 = sub i64 %113, %120
  %129 = ashr exact i64 %128, 3
  %130 = icmp ult i64 %129, 1152921504606846975
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = ashr exact i64 %128, 2
  %133 = icmp ult i64 %132, %123
  %134 = select i1 %133, i64 %123, i64 %132
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %131
  %137 = icmp ugt i64 %134, 2305843009213693951
  br i1 %137, label %138, label %139

138:                                              ; preds = %136
  tail call void @abort() #20
  unreachable

139:                                              ; preds = %136, %127
  %140 = phi i64 [ %134, %136 ], [ 2305843009213693951, %127 ]
  %141 = shl i64 %140, 3
  %142 = tail call i8* @_Znwm(i64 %141) #21
  %143 = bitcast i8* %142 to %"class.net::CanonicalCookie"**
  br label %144

144:                                              ; preds = %139, %131
  %145 = phi i64 [ %140, %139 ], [ 0, %131 ]
  %146 = phi %"class.net::CanonicalCookie"** [ %143, %139 ], [ null, %131 ]
  %147 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %146, i64 %122
  %148 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %146, i64 %145
  %149 = ptrtoint %"class.net::CanonicalCookie"** %148 to i64
  %150 = bitcast %"class.net::CanonicalCookie"** %147 to i64*
  store i64 %111, i64* %150, align 8
  %151 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %147, i64 1
  %152 = ptrtoint %"class.net::CanonicalCookie"** %151 to i64
  %153 = sub i64 %105, %120
  %154 = ashr exact i64 %153, 3
  %155 = sub nsw i64 0, %154
  %156 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %147, i64 %155
  %157 = ptrtoint %"class.net::CanonicalCookie"** %156 to i64
  %158 = icmp sgt i64 %153, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %144
  %160 = bitcast %"class.net::CanonicalCookie"** %156 to i8*
  %161 = inttoptr i64 %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 %153, i1 false) #19
  br label %162

162:                                              ; preds = %159, %144
  store i64 %157, i64* %63, align 8
  store i64 %152, i64* %85, align 8
  store i64 %149, i64* %62, align 8
  %163 = icmp eq i64 %120, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %120 to i8*
  tail call void @_ZdlPv(i8* %165) #21
  br label %166

166:                                              ; preds = %114, %162, %164
  %167 = phi %"class.net::CanonicalCookie"** [ %116, %114 ], [ %151, %162 ], [ %151, %164 ]
  %168 = phi %"class.net::CanonicalCookie"** [ %104, %114 ], [ %156, %162 ], [ %156, %164 ]
  %169 = phi i64 [ %117, %114 ], [ %152, %162 ], [ %152, %164 ]
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 1, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %173, label %181

173:                                              ; preds = %166
  %174 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"class.std::__1::__tree_node_base"*
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 2
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to %"class.std::__1::__tree_end_node"**
  %177 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, %174
  br i1 %180, label %197, label %188

181:                                              ; preds = %166, %181
  %182 = phi %"class.std::__1::__tree_node_base"* [ %184, %181 ], [ %171, %166 ]
  %183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %182, i64 0, i32 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, null
  br i1 %185, label %186, label %181

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %182, i64 0, i32 0
  br label %197

188:                                              ; preds = %173, %188
  %189 = phi %"class.std::__1::__tree_end_node"** [ %192, %188 ], [ %176, %173 ]
  %190 = bitcast %"class.std::__1::__tree_end_node"** %189 to %"class.std::__1::__tree_node_base"**
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  %193 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %192, align 8
  %194 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 0, i32 0
  %195 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %194, align 8
  %196 = icmp eq %"class.std::__1::__tree_node_base"* %195, %191
  br i1 %196, label %197, label %188

197:                                              ; preds = %188, %173, %186
  %198 = phi %"class.std::__1::__tree_end_node"* [ %187, %186 ], [ %177, %173 ], [ %193, %188 ]
  %199 = icmp eq %"class.std::__1::__tree_end_node"* %198, %11
  br i1 %199, label %86, label %200

200:                                              ; preds = %197
  %201 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %59, align 8
  br label %103

202:                                              ; preds = %251, %86
  %203 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %1, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast %"class.base::OnceCallback.90"* %1 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.base::OnceCallback.90"* %7 to i64*
  store i64 %205, i64* %206, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %203, align 8
  %207 = inttoptr i64 %205 to %"class.base::internal::BindStateBase"*
  %208 = icmp eq i64 %205, 0
  br i1 %208, label %217, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %7, i64 0, i32 0, i32 0, i32 0
  %211 = bitcast %"class.base::OnceCallback.90"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #19
  %212 = bitcast %"class.base::OnceCallback.90"* %4 to i64*
  store i64 %205, i64* %212, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %210, align 8
  %213 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %4, i64 0, i32 0
  %214 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %207, i64 0, i32 1
  %215 = bitcast void ()** %214 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"*)**
  %216 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"*)** %215, align 8
  call void %216(%"class.base::internal::BindStateBase"* nonnull %207, %"class.std::__1::vector.70"* nonnull dereferenceable(24) %6) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %213) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #19
  br label %217

217:                                              ; preds = %202, %209
  %218 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %218) #19
  %219 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %91, align 8
  %220 = icmp eq %"class.net::CanonicalCookie"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %217
  %222 = bitcast %"class.net::CanonicalCookie"* %219 to i8*
  %223 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, align 8
  %224 = icmp eq %"class.net::CanonicalCookie"* %223, %219
  br i1 %224, label %232, label %225

225:                                              ; preds = %221, %225
  %226 = phi %"class.net::CanonicalCookie"* [ %227, %225 ], [ %223, %221 ]
  %227 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %226, i64 -1
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %227) #19
  %228 = icmp eq %"class.net::CanonicalCookie"* %227, %219
  br i1 %228, label %229, label %225

229:                                              ; preds = %225
  %230 = bitcast %"class.std::__1::vector.70"* %6 to i8**
  %231 = load i8*, i8** %230, align 8
  br label %232

232:                                              ; preds = %229, %221
  %233 = phi i8* [ %231, %229 ], [ %222, %221 ]
  store %"class.net::CanonicalCookie"* %219, %"class.net::CanonicalCookie"** %92, align 8
  call void @_ZdlPv(i8* %233) #21
  br label %234

234:                                              ; preds = %217, %232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #19
  %235 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %57, align 8
  %236 = icmp eq %"class.net::CanonicalCookie"** %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %234
  %238 = ptrtoint %"class.net::CanonicalCookie"** %235 to i64
  store i64 %238, i64* %85, align 8
  %239 = bitcast %"class.net::CanonicalCookie"** %235 to i8*
  call void @_ZdlPv(i8* %239) #21
  br label %240

240:                                              ; preds = %234, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #19
  ret void

241:                                              ; preds = %101, %251
  %242 = phi %"class.net::CanonicalCookie"** [ %98, %101 ], [ %252, %251 ]
  %243 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %242, align 8
  %244 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, align 8
  %245 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %93, align 8
  %246 = icmp eq %"class.net::CanonicalCookie"* %244, %245
  br i1 %246, label %250, label %247

247:                                              ; preds = %241
  call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %244, %"class.net::CanonicalCookie"* dereferenceable(144) %243) #19
  %248 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %244, i64 1
  %249 = ptrtoint %"class.net::CanonicalCookie"* %248 to i64
  store i64 %249, i64* %102, align 8
  br label %251

250:                                              ; preds = %241
  call void @_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.70"* nonnull %6, %"class.net::CanonicalCookie"* dereferenceable(144) %243) #19
  br label %251

251:                                              ; preds = %247, %250
  %252 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %242, i64 1
  %253 = icmp eq %"class.net::CanonicalCookie"** %252, %99
  br i1 %253, label %202, label %241
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster37GetAllCookiesWithAccessSemanticsAsyncEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEERKNS4_INS_21CookieAccessSemanticsENS6_ISB_EEEEEEE(%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback.90", align 8
  %5 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %6 = bitcast %"class.base::OnceCallback.90"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = tail call i8* @_Znwm(i64 64) #21, !noalias !35
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS3_15CanonicalCookieENS6_9allocatorIS8_EEEERKNS7_INS3_21CookieAccessSemanticsENS9_ISE_EEEEEEESD_EJNS0_17UnretainedWrapperIS4_EESK_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS2_15CanonicalCookieENS5_9allocatorIS7_EEEERKNS6_INS2_21CookieAccessSemanticsENS8_ISD_EEEEEEESC_EJNS0_17UnretainedWrapperIS3_EESJ_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !35
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"*, %"class.std::__1::vector.70"*)* @_ZN3net13CookieMonster38AttachAccessSemanticsListForCookieListEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEERKNS4_INS_21CookieAccessSemanticsENS6_ISB_EEEEEEESA_ to i64), i64 0>, <2 x i64>* %10, align 8, !noalias !35
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to i64*
  store i64 %5, i64* %12, align 8, !noalias !35
  %13 = getelementptr inbounds i8, i8* %7, i64 56
  %14 = getelementptr inbounds %"class.base::OnceCallback.91", %"class.base::OnceCallback.91"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback.91"* %1 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !35
  %17 = bitcast i8* %13 to i64*
  store i64 %16, i64* %17, align 8, !noalias !35
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8, !noalias !35
  %18 = tail call i8* @_Znwm(i64 64) #21, !noalias !40
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS3_15CanonicalCookieENS6_9allocatorIS8_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS2_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS3_EESE_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !40
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)* @_ZN3net13CookieMonster13GetAllCookiesEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEEEEE to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !40
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %5, i64* %23, align 8, !noalias !40
  %24 = getelementptr inbounds i8, i8* %18, i64 56
  %25 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = ptrtoint i8* %7 to i64
  %27 = bitcast i8* %24 to i64*
  store i64 %26, i64* %27, align 8, !noalias !40
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8, !noalias !40
  %28 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %18, i8** %28, align 8, !alias.scope !40
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %3)
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #19
  %30 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster38AttachAccessSemanticsListForCookieListEN4base12OnceCallbackIFvRKNSt3__16vectorINS_15CanonicalCookieENS3_9allocatorIS5_EEEERKNS4_INS_21CookieAccessSemanticsENS6_ISB_EEEEEEESA_(%"class.net::CookieMonster"* nocapture readonly, %"class.base::OnceCallback.91"* nocapture, %"class.std::__1::vector.70"* dereferenceable(24)) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.91", align 8
  %5 = alloca %"class.std::__1::vector.156", align 8
  %6 = alloca %"class.base::OnceCallback.91", align 8
  %7 = bitcast %"class.std::__1::vector.156"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #19
  %8 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #19
  %11 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2, i64 0, i32 0, i32 1
  %14 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %13, align 8
  %15 = icmp eq %"class.net::CanonicalCookie"* %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = bitcast i32** %9 to i64*
  %19 = bitcast %"class.std::__1::vector.156"* %5 to i64*
  %20 = bitcast i32** %10 to i64*
  br label %45

21:                                               ; preds = %112, %3
  %22 = getelementptr inbounds %"class.base::OnceCallback.91", %"class.base::OnceCallback.91"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.91"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.91"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = inttoptr i64 %24 to %"class.base::internal::BindStateBase"*
  %27 = icmp eq i64 %24, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.base::OnceCallback.91", %"class.base::OnceCallback.91"* %6, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback.91"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = bitcast %"class.base::OnceCallback.91"* %4 to i64*
  store i64 %24, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback.91", %"class.base::OnceCallback.91"* %4, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %34 = bitcast void ()** %33 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"*, %"class.std::__1::vector.156"*)**
  %35 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"*, %"class.std::__1::vector.156"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"*, %"class.std::__1::vector.156"*)** %34, align 8
  call void %35(%"class.base::internal::BindStateBase"* nonnull %26, %"class.std::__1::vector.70"* dereferenceable(24) %2, %"class.std::__1::vector.156"* nonnull dereferenceable(24) %5) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  br label %36

36:                                               ; preds = %21, %28
  %37 = getelementptr inbounds %"class.base::OnceCallback.91", %"class.base::OnceCallback.91"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #19
  %38 = load i32*, i32** %8, align 8
  %39 = icmp eq i32* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = ptrtoint i32* %38 to i64
  %42 = bitcast i32** %9 to i64*
  store i64 %41, i64* %42, align 8
  %43 = bitcast i32* %38 to i8*
  call void @_ZdlPv(i8* %43) #21
  br label %44

44:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #19
  ret void

45:                                               ; preds = %16, %112
  %46 = phi i64 [ 0, %16 ], [ %113, %112 ]
  %47 = phi i32* [ null, %16 ], [ %114, %112 ]
  %48 = phi %"class.net::CanonicalCookie"* [ %12, %16 ], [ %115, %112 ]
  %49 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %17, align 8
  %50 = icmp eq %"class.net::CookieAccessDelegate"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.net::CookieAccessDelegate"* %49 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)***
  %53 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %53, i64 3
  %55 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %54, align 8
  %56 = tail call i32 %55(%"class.net::CookieAccessDelegate"* nonnull %49, %"class.net::CanonicalCookie"* dereferenceable(144) %48) #19
  br label %57

57:                                               ; preds = %45, %51
  %58 = phi i32 [ %56, %51 ], [ -1, %45 ]
  %59 = load i32*, i32** %10, align 8
  %60 = icmp ult i32* %47, %59
  %61 = ptrtoint i32* %59 to i64
  br i1 %60, label %62, label %65

62:                                               ; preds = %57
  store i32 %58, i32* %47, align 4
  %63 = getelementptr inbounds i32, i32* %47, i64 1
  %64 = ptrtoint i32* %63 to i64
  store i64 %64, i64* %18, align 8
  br label %112

65:                                               ; preds = %57
  %66 = ptrtoint i32* %47 to i64
  %67 = load i64, i64* %19, align 8
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 2
  %70 = add nsw i64 %69, 1
  %71 = icmp ugt i64 %70, 4611686018427387903
  br i1 %71, label %72, label %74

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::vector.156"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %73) #20
  unreachable

74:                                               ; preds = %65
  %75 = sub i64 %61, %67
  %76 = ashr exact i64 %75, 2
  %77 = icmp ult i64 %76, 2305843009213693951
  br i1 %77, label %78, label %86

78:                                               ; preds = %74
  %79 = ashr exact i64 %75, 1
  %80 = icmp ult i64 %79, %70
  %81 = select i1 %80, i64 %70, i64 %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %78
  %84 = icmp ugt i64 %81, 4611686018427387903
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  tail call void @abort() #20
  unreachable

86:                                               ; preds = %83, %74
  %87 = phi i64 [ %81, %83 ], [ 4611686018427387903, %74 ]
  %88 = shl i64 %87, 2
  %89 = tail call i8* @_Znwm(i64 %88) #21
  %90 = bitcast i8* %89 to i32*
  br label %91

91:                                               ; preds = %86, %78
  %92 = phi i64 [ %87, %86 ], [ 0, %78 ]
  %93 = phi i32* [ %90, %86 ], [ null, %78 ]
  %94 = getelementptr inbounds i32, i32* %93, i64 %69
  %95 = getelementptr inbounds i32, i32* %93, i64 %92
  %96 = ptrtoint i32* %95 to i64
  store i32 %58, i32* %94, align 4
  %97 = getelementptr inbounds i32, i32* %94, i64 1
  %98 = ptrtoint i32* %97 to i64
  %99 = sub i64 %46, %67
  %100 = ashr exact i64 %99, 2
  %101 = sub nsw i64 0, %100
  %102 = getelementptr inbounds i32, i32* %94, i64 %101
  %103 = ptrtoint i32* %102 to i64
  %104 = icmp sgt i64 %99, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %91
  %106 = bitcast i32* %102 to i8*
  %107 = inttoptr i64 %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %99, i1 false) #19
  br label %108

108:                                              ; preds = %105, %91
  store i64 %103, i64* %19, align 8
  store i64 %98, i64* %18, align 8
  store i64 %96, i64* %20, align 8
  %109 = icmp eq i64 %67, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %67 to i8*
  tail call void @_ZdlPv(i8* %111) #21
  br label %112

112:                                              ; preds = %62, %108, %110
  %113 = phi i64 [ %64, %62 ], [ %98, %108 ], [ %98, %110 ]
  %114 = phi i32* [ %63, %62 ], [ %97, %108 ], [ %97, %110 ]
  %115 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %48, i64 1
  %116 = icmp eq %"class.net::CanonicalCookie"* %115, %14
  br i1 %116, label %21, label %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster26DeleteCanonicalCookieAsyncERKNS_15CanonicalCookieEN4base12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"* dereferenceable(144), %"class.base::OnceCallback.92"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %6 = tail call i8* @_Znwm(i64 208) #21, !noalias !45
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNS3_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EES5_SA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNS2_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES4_S9_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !45
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster21DeleteCanonicalCookieERKNS_15CanonicalCookieEN4base12OnceCallbackIFvjEEE to i64), i64 0>, <2 x i64>* %9, align 8, !noalias !45
  %10 = getelementptr inbounds i8, i8* %6, i64 48
  %11 = bitcast i8* %10 to i64*
  store i64 %5, i64* %11, align 8, !noalias !45
  %12 = getelementptr inbounds i8, i8* %6, i64 56
  %13 = bitcast i8* %12 to %"class.net::CanonicalCookie"*
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %13, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #19, !noalias !45
  %14 = getelementptr inbounds i8, i8* %6, i64 200
  %15 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !45
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8, !noalias !45
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8, !noalias !45
  %19 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %6, i8** %19, align 8, !alias.scope !45
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %4)
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster21DeleteCanonicalCookieERKNS_15CanonicalCookieEN4base12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"* dereferenceable(144), %"class.base::OnceCallback.92"* nocapture) #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  call void @_ZN3net13CookieMonster6GetKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %19, i64 %23)
  %24 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0
  %25 = call { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE19__equal_range_multiIS7_EENS_4pairINS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEESS_EERKT_(%"class.std::__1::__tree.7"* %24, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #19
  %26 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %25, 0
  %27 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %25, 1
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #21
  br label %35

35:                                               ; preds = %3, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #19
  %36 = icmp eq %"class.std::__1::__tree_end_node"* %26, %27
  br i1 %36, label %129, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  br label %44

44:                                               ; preds = %37, %126
  %45 = phi %"class.std::__1::__tree_end_node"* [ %26, %37 ], [ %127, %126 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 7
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.net::CanonicalCookie"**
  %48 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %47, align 8
  %49 = call zeroext i1 @_ZNK3net15CanonicalCookie12IsEquivalentERKS0_(%"class.net::CanonicalCookie"* %48, %"class.net::CanonicalCookie"* dereferenceable(144) %1)
  br i1 %49, label %50, label %98

50:                                               ; preds = %44
  %51 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %47, align 8
  %52 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %51, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %55 to i64
  %60 = select i1 %56, i64 %58, i64 %59
  %61 = load i8, i8* %40, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i64, i64* %41, align 8
  %64 = zext i8 %61 to i64
  %65 = select i1 %62, i64 %63, i64 %64
  %66 = icmp eq i64 %60, %65
  br i1 %66, label %67, label %98

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %71 = select i1 %56, i8* %69, i8* %70
  %72 = load i8*, i8** %42, align 8
  %73 = select i1 %62, i8* %72, i8* %43
  %74 = icmp eq i64 %60, 0
  br i1 %56, label %81, label %75

75:                                               ; preds = %67
  br i1 %74, label %97, label %76

76:                                               ; preds = %75
  %77 = ptrtoint i8* %69 to i64
  %78 = trunc i64 %77 to i8
  %79 = load i8, i8* %73, align 1
  %80 = icmp eq i8 %79, %78
  br i1 %80, label %82, label %98

81:                                               ; preds = %67
  br i1 %74, label %97, label %94

82:                                               ; preds = %76, %89
  %83 = phi i64 [ %86, %89 ], [ %59, %76 ]
  %84 = phi i8* [ %87, %89 ], [ %70, %76 ]
  %85 = phi i8* [ %90, %89 ], [ %73, %76 ]
  %86 = add i64 %83, -1
  %87 = getelementptr inbounds i8, i8* %84, i64 1
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds i8, i8* %85, i64 1
  %91 = load i8, i8* %87, align 1
  %92 = load i8, i8* %90, align 1
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %82, label %98

94:                                               ; preds = %81
  %95 = call i32 @bcmp(i8* %71, i8* %73, i64 %60) #19
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %75, %81, %94, %82
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %45, i1 zeroext true, i32 0)
  br label %129

98:                                               ; preds = %89, %76, %50, %94, %44
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 1, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %98
  %103 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node_base"*
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 2
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_end_node"**
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %103
  br i1 %109, label %126, label %117

110:                                              ; preds = %98, %110
  %111 = phi %"class.std::__1::__tree_node_base"* [ %113, %110 ], [ %100, %98 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %110

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0
  br label %126

117:                                              ; preds = %102, %117
  %118 = phi %"class.std::__1::__tree_end_node"** [ %121, %117 ], [ %105, %102 ]
  %119 = bitcast %"class.std::__1::__tree_end_node"** %118 to %"class.std::__1::__tree_node_base"**
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 2
  %122 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, %120
  br i1 %125, label %126, label %117

126:                                              ; preds = %117, %102, %115
  %127 = phi %"class.std::__1::__tree_end_node"* [ %116, %115 ], [ %106, %102 ], [ %122, %117 ]
  %128 = icmp eq %"class.std::__1::__tree_end_node"* %127, %27
  br i1 %128, label %129, label %44

129:                                              ; preds = %126, %35, %97
  %130 = phi i32 [ 1, %97 ], [ 0, %35 ], [ 0, %126 ]
  %131 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #19
  %132 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #19, !noalias !50
  %133 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %133) #19, !noalias !50
  %134 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 1
  %135 = load i64, i64* %134, align 8, !noalias !50
  %136 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %136, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %135) #19
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #19, !noalias !50
  %137 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #19
  %138 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %138, align 8
  %140 = icmp eq %"class.base::internal::BindStateBase"* %139, null
  br i1 %140, label %157, label %141

141:                                              ; preds = %129
  %142 = call i8* @_Znwm(i64 48) #21, !noalias !53
  %143 = bitcast i8* %142 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %143, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvjEEEJjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #19, !noalias !53
  %144 = getelementptr inbounds i8, i8* %142, i64 32
  %145 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  %146 = load i64, i64* %145, align 8, !noalias !53
  %147 = bitcast i8* %144 to i64*
  store i64 %146, i64* %147, align 8, !noalias !53
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %138, align 8, !noalias !53
  %148 = getelementptr inbounds i8, i8* %142, i64 40
  %149 = bitcast i8* %148 to i32*
  store i32 %130, i32* %149, align 4, !noalias !53
  %150 = icmp eq i64 %146, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %141
  %152 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #19, !noalias !53
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #19, !noalias !53
  %153 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19, !noalias !53
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19, !noalias !53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #19, !noalias !53
  br label %154

154:                                              ; preds = %141, %151
  %155 = bitcast %"class.base::OnceCallback"* %9 to i8**
  store i8* %142, i8** %155, align 8, !alias.scope !53
  %156 = ptrtoint i8* %142 to i64
  br label %159

157:                                              ; preds = %129
  %158 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %158, align 8
  br label %159

159:                                              ; preds = %157, %154
  %160 = phi i64 [ 0, %157 ], [ %156, %154 ]
  %161 = call i8* @_Znwm(i64 64) #21, !noalias !58
  %162 = bitcast i8* %161 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %162, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS6_S9_EEES8_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS5_S8_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !58
  %163 = getelementptr inbounds i8, i8* %161, i64 32
  %164 = bitcast i8* %163 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*, %"class.base::OnceCallback"*)* @_ZN12_GLOBAL__N_122MaybeRunDeleteCallbackEN4base7WeakPtrIN3net13CookieMonsterEEENS0_12OnceCallbackIFvvEEE to i64), i64* %164, align 8, !noalias !58
  %165 = getelementptr inbounds i8, i8* %161, i64 40
  %166 = bitcast i8* %165 to %"class.base::internal::WeakReference"*
  %167 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %166, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %167) #19, !noalias !58
  %168 = getelementptr inbounds i8, i8* %161, i64 48
  %169 = bitcast i8* %168 to i64*
  %170 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %171 = load i64, i64* %170, align 8, !noalias !58
  store i64 %171, i64* %169, align 8, !noalias !58
  %172 = getelementptr inbounds i8, i8* %161, i64 56
  %173 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  %174 = bitcast i8* %172 to i64*
  store i64 %160, i64* %174, align 8, !noalias !58
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %173, align 8, !noalias !58
  %175 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %161, i8** %175, align 8, !alias.scope !58
  %176 = bitcast %"class.net::CookieMonster"* %0 to void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)***
  %177 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)**, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)** %177, i64 11
  %179 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)** %178, align 8
  call void %179(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %7) #19
  %180 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %180) #19
  %181 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %181) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #19
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %136) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster32DeleteAllCreatedInTimeRangeAsyncERKNS_18CookieDeletionInfo9TimeRangeEN4base12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"* dereferenceable(16), %"class.base::OnceCallback.92"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %6 = tail call i8* @_Znwm(i64 80) #21, !noalias !63
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNS3_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EES6_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNS2_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES5_SA_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !63
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster27DeleteAllCreatedInTimeRangeERKNS_18CookieDeletionInfo9TimeRangeEN4base12OnceCallbackIFvjEEE to i64), i64 0>, <2 x i64>* %9, align 8, !noalias !63
  %10 = getelementptr inbounds i8, i8* %6, i64 48
  %11 = bitcast i8* %10 to i64*
  store i64 %5, i64* %11, align 8, !noalias !63
  %12 = getelementptr inbounds i8, i8* %6, i64 56
  %13 = bitcast i8* %12 to %"class.net::CookieDeletionInfo::TimeRange"*
  tail call void @_ZN3net18CookieDeletionInfo9TimeRangeC1ERKS1_(%"class.net::CookieDeletionInfo::TimeRange"* %13, %"class.net::CookieDeletionInfo::TimeRange"* dereferenceable(16) %1) #19, !noalias !63
  %14 = getelementptr inbounds i8, i8* %6, i64 72
  %15 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !63
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8, !noalias !63
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8, !noalias !63
  %19 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %6, i8** %19, align 8, !alias.scope !63
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %4)
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster27DeleteAllCreatedInTimeRangeERKNS_18CookieDeletionInfo9TimeRangeEN4base12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"* dereferenceable(16), %"class.base::OnceCallback.92"* nocapture) #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::multimap"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %13 = inttoptr i64 %11 to %"class.std::__1::__tree_end_node"*
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %67, %3
  %16 = phi i32 [ 0, %3 ], [ %68, %67 ]
  %17 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #19
  %18 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #19, !noalias !68
  %19 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %19) #19, !noalias !68
  %20 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !68
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %22, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %21) #19
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #19, !noalias !68
  %23 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  %24 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %24, align 8
  %26 = icmp eq %"class.base::internal::BindStateBase"* %25, null
  br i1 %26, label %86, label %70

27:                                               ; preds = %3, %67
  %28 = phi %"class.std::__1::__tree_end_node"* [ %61, %67 ], [ %13, %3 ]
  %29 = phi i32 [ %68, %67 ], [ 0, %3 ]
  %30 = phi i64 [ %62, %67 ], [ %11, %3 ]
  %31 = inttoptr i64 %30 to %"class.std::__1::__tree_node.263"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %31, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %32, align 8
  %34 = inttoptr i64 %30 to %"class.std::__1::__tree_node_base"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %44

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %34
  br i1 %43, label %60, label %51

44:                                               ; preds = %27, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %36, %27 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %38, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %38 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %38, %49
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %38 ], [ %56, %51 ]
  %62 = ptrtoint %"class.std::__1::__tree_end_node"* %61 to i64
  %63 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %33, i64 0, i32 4
  %64 = tail call zeroext i1 @_ZNK3net18CookieDeletionInfo9TimeRange8ContainsERKN4base4TimeE(%"class.net::CookieDeletionInfo::TimeRange"* %1, %"class.base::Time"* dereferenceable(8) %63) #19
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  tail call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %28, i1 zeroext true, i32 0)
  %66 = add i32 %29, 1
  br label %67

67:                                               ; preds = %65, %60
  %68 = phi i32 [ %66, %65 ], [ %29, %60 ]
  %69 = icmp eq %"class.std::__1::__tree_end_node"* %12, %61
  br i1 %69, label %15, label %27

70:                                               ; preds = %15
  %71 = call i8* @_Znwm(i64 48) #21, !noalias !71
  %72 = bitcast i8* %71 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %72, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvjEEEJjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #19, !noalias !71
  %73 = getelementptr inbounds i8, i8* %71, i64 32
  %74 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  %75 = load i64, i64* %74, align 8, !noalias !71
  %76 = bitcast i8* %73 to i64*
  store i64 %75, i64* %76, align 8, !noalias !71
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8, !noalias !71
  %77 = getelementptr inbounds i8, i8* %71, i64 40
  %78 = bitcast i8* %77 to i32*
  store i32 %16, i32* %78, align 4, !noalias !71
  %79 = icmp eq i64 %75, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %70
  %81 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #19, !noalias !71
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #19, !noalias !71
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19, !noalias !71
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19, !noalias !71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #19, !noalias !71
  br label %83

83:                                               ; preds = %70, %80
  %84 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %71, i8** %84, align 8, !alias.scope !71
  %85 = ptrtoint i8* %71 to i64
  br label %88

86:                                               ; preds = %15
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  br label %88

88:                                               ; preds = %86, %83
  %89 = phi i64 [ 0, %86 ], [ %85, %83 ]
  %90 = call i8* @_Znwm(i64 64) #21, !noalias !76
  %91 = bitcast i8* %90 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %91, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS6_S9_EEES8_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS5_S8_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !76
  %92 = getelementptr inbounds i8, i8* %90, i64 32
  %93 = bitcast i8* %92 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*, %"class.base::OnceCallback"*)* @_ZN12_GLOBAL__N_122MaybeRunDeleteCallbackEN4base7WeakPtrIN3net13CookieMonsterEEENS0_12OnceCallbackIFvvEEE to i64), i64* %93, align 8, !noalias !76
  %94 = getelementptr inbounds i8, i8* %90, i64 40
  %95 = bitcast i8* %94 to %"class.base::internal::WeakReference"*
  %96 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %95, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %96) #19, !noalias !76
  %97 = getelementptr inbounds i8, i8* %90, i64 48
  %98 = bitcast i8* %97 to i64*
  %99 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8, !noalias !76
  store i64 %100, i64* %98, align 8, !noalias !76
  %101 = getelementptr inbounds i8, i8* %90, i64 56
  %102 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast i8* %101 to i64*
  store i64 %89, i64* %103, align 8, !noalias !76
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %102, align 8, !noalias !76
  %104 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %90, i8** %104, align 8, !alias.scope !76
  %105 = bitcast %"class.net::CookieMonster"* %0 to void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)***
  %106 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)**, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)** %106, i64 11
  %108 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)** %107, align 8
  call void %108(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %6) #19
  %109 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %109) #19
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %110) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %22) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster26DeleteAllMatchingInfoAsyncENS_18CookieDeletionInfoEN4base12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.base::OnceCallback.92"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 352) #21, !noalias !81
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.net::CanonicalCookie"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFbRKNS3_18CookieDeletionInfoERKNS3_15CanonicalCookieEEJNS0_17UnretainedWrapperIS4_EES5_EEEFbSA_EE3RunEPNS0_13BindStateBaseESA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFbRKNS2_18CookieDeletionInfoERKNS2_15CanonicalCookieEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !81
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.net::CanonicalCookie"*)* @_ZN3net13CookieMonster23MatchCookieDeletionInfoERKNS_18CookieDeletionInfoERKNS_15CanonicalCookieE to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !81
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 8, !noalias !81
  %15 = getelementptr inbounds i8, i8* %9, i64 56
  %16 = bitcast i8* %15 to %"struct.net::CookieDeletionInfo"*
  tail call void @_ZN3net18CookieDeletionInfoC1EOS0_(%"struct.net::CookieDeletionInfo"* %16, %"struct.net::CookieDeletionInfo"* dereferenceable(296) %1) #19, !noalias !81
  %17 = tail call i8* @_Znwm(i64 80) #21, !noalias !86
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS2_15CanonicalCookieEEEENS3_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !86
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster21DeleteMatchingCookiesEN4base17RepeatingCallbackIFbRKNS_15CanonicalCookieEEEENS0_13DeletionCauseENS1_12OnceCallbackIFvjEEE to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !86
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %8, i64* %22, align 8, !noalias !86
  %23 = getelementptr inbounds i8, i8* %17, i64 56
  %24 = ptrtoint i8* %9 to i64
  %25 = bitcast i8* %23 to i64*
  store i64 %24, i64* %25, align 8, !noalias !86
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8, !noalias !86
  %26 = getelementptr inbounds i8, i8* %17, i64 64
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4, !noalias !86
  %28 = getelementptr inbounds i8, i8* %17, i64 72
  %29 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !86
  %32 = bitcast i8* %28 to i64*
  store i64 %31, i64* %32, align 8, !noalias !86
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8, !noalias !86
  %33 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %17, i8** %33, align 8, !alias.scope !86
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %5)
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #19
  %35 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13CookieMonster23MatchCookieDeletionInfoERKNS_18CookieDeletionInfoERKNS_15CanonicalCookieE(%"class.net::CookieMonster"* nocapture readonly, %"struct.net::CookieDeletionInfo"* dereferenceable(296), %"class.net::CanonicalCookie"* dereferenceable(144)) #0 align 2 {
  %4 = alloca %"struct.net::CookieAccessParams", align 4
  %5 = getelementptr inbounds %"struct.net::CookieDeletionInfo", %"struct.net::CookieDeletionInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %9, align 8
  %11 = icmp eq %"class.net::CookieAccessDelegate"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.net::CookieDeletionInfo", %"struct.net::CookieDeletionInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = bitcast %"class.net::CookieAccessDelegate"* %10 to i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)***
  %15 = load i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)**, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)** %15, i64 2
  %17 = load i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.net::CookieAccessDelegate"* nonnull %10, %class.GURL* dereferenceable(120) %13) #19
  br label %19

19:                                               ; preds = %3, %12, %8
  %20 = phi i1 [ false, %3 ], [ false, %8 ], [ %18, %12 ]
  %21 = bitcast %"struct.net::CookieAccessParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %21) #19
  %22 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %22, align 8
  %24 = icmp eq %"class.net::CookieAccessDelegate"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.net::CookieAccessDelegate"* %23 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)***
  %27 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %27, i64 3
  %29 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %28, align 8
  %30 = tail call i32 %29(%"class.net::CookieAccessDelegate"* nonnull %23, %"class.net::CanonicalCookie"* dereferenceable(144) %2) #19
  br label %31

31:                                               ; preds = %19, %25
  %32 = phi i32 [ %30, %25 ], [ -1, %19 ]
  call void @_ZN3net18CookieAccessParamsC1ENS_21CookieAccessSemanticsEbNS_21CookieSamePartyStatusE(%"struct.net::CookieAccessParams"* nonnull %4, i32 %32, i1 zeroext %20, i32 0) #19
  %33 = call zeroext i1 @_ZNK3net18CookieDeletionInfo7MatchesERKNS_15CanonicalCookieERKNS_18CookieAccessParamsE(%"struct.net::CookieDeletionInfo"* %1, %"class.net::CanonicalCookie"* dereferenceable(144) %2, %"struct.net::CookieAccessParams"* nonnull dereferenceable(12) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %21) #19
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster21DeleteMatchingCookiesEN4base17RepeatingCallbackIFbRKNS_15CanonicalCookieEEEENS0_13DeletionCauseENS1_12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"* nocapture readonly, i32, %"class.base::OnceCallback.92"* nocapture) #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::multimap"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %14 = inttoptr i64 %12 to %"class.std::__1::__tree_end_node"*
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %13, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %30

18:                                               ; preds = %73, %4
  %19 = phi i32 [ 0, %4 ], [ %74, %73 ]
  %20 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #19
  %21 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19, !noalias !91
  %22 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %6, %"class.base::internal::WeakReferenceOwner"* %22) #19, !noalias !91
  %23 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !91
  %25 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %25, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %6, i64 %24) #19
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19, !noalias !91
  %26 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #19
  %27 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %27, align 8
  %29 = icmp eq %"class.base::internal::BindStateBase"* %28, null
  br i1 %29, label %92, label %76

30:                                               ; preds = %16, %73
  %31 = phi %"class.std::__1::__tree_end_node"* [ %14, %16 ], [ %64, %73 ]
  %32 = phi i32 [ 0, %16 ], [ %74, %73 ]
  %33 = phi i64 [ %12, %16 ], [ %65, %73 ]
  %34 = inttoptr i64 %33 to %"class.std::__1::__tree_node.263"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %34, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %35, align 8
  %37 = inttoptr i64 %33 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 1
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %47

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %37
  br i1 %46, label %63, label %54

47:                                               ; preds = %30, %47
  %48 = phi %"class.std::__1::__tree_node_base"* [ %50, %47 ], [ %39, %30 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0
  br label %63

54:                                               ; preds = %41, %54
  %55 = phi %"class.std::__1::__tree_end_node"** [ %58, %54 ], [ %42, %41 ]
  %56 = bitcast %"class.std::__1::__tree_end_node"** %55 to %"class.std::__1::__tree_node_base"**
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 2
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, %57
  br i1 %62, label %63, label %54

63:                                               ; preds = %54, %41, %52
  %64 = phi %"class.std::__1::__tree_end_node"* [ %53, %52 ], [ %43, %41 ], [ %59, %54 ]
  %65 = ptrtoint %"class.std::__1::__tree_end_node"* %64 to i64
  %66 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %17, align 8
  %67 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %66, i64 0, i32 1
  %68 = bitcast void ()** %67 to i1 (%"class.base::internal::BindStateBase"*, %"class.net::CanonicalCookie"*)**
  %69 = load i1 (%"class.base::internal::BindStateBase"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.net::CanonicalCookie"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.base::internal::BindStateBase"* %66, %"class.net::CanonicalCookie"* dereferenceable(144) %36) #19
  br i1 %70, label %71, label %73

71:                                               ; preds = %63
  tail call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %31, i1 zeroext true, i32 %2)
  %72 = add i32 %32, 1
  br label %73

73:                                               ; preds = %71, %63
  %74 = phi i32 [ %72, %71 ], [ %32, %63 ]
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %13, %64
  br i1 %75, label %18, label %30

76:                                               ; preds = %18
  %77 = call i8* @_Znwm(i64 48) #21, !noalias !94
  %78 = bitcast i8* %77 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %78, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvjEEEJjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #19, !noalias !94
  %79 = getelementptr inbounds i8, i8* %77, i64 32
  %80 = bitcast %"class.base::OnceCallback.92"* %3 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !94
  %82 = bitcast i8* %79 to i64*
  store i64 %81, i64* %82, align 8, !noalias !94
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8, !noalias !94
  %83 = getelementptr inbounds i8, i8* %77, i64 40
  %84 = bitcast i8* %83 to i32*
  store i32 %19, i32* %84, align 4, !noalias !94
  %85 = icmp eq i64 %81, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %76
  %87 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #19, !noalias !94
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #19, !noalias !94
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19, !noalias !94
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19, !noalias !94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #19, !noalias !94
  br label %89

89:                                               ; preds = %76, %86
  %90 = bitcast %"class.base::OnceCallback"* %9 to i8**
  store i8* %77, i8** %90, align 8, !alias.scope !94
  %91 = ptrtoint i8* %77 to i64
  br label %94

92:                                               ; preds = %18
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  br label %94

94:                                               ; preds = %92, %89
  %95 = phi i64 [ 0, %92 ], [ %91, %89 ]
  %96 = call i8* @_Znwm(i64 64) #21, !noalias !99
  %97 = bitcast i8* %96 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %97, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS6_S9_EEES8_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS5_S8_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !99
  %98 = getelementptr inbounds i8, i8* %96, i64 32
  %99 = bitcast i8* %98 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*, %"class.base::OnceCallback"*)* @_ZN12_GLOBAL__N_122MaybeRunDeleteCallbackEN4base7WeakPtrIN3net13CookieMonsterEEENS0_12OnceCallbackIFvvEEE to i64), i64* %99, align 8, !noalias !99
  %100 = getelementptr inbounds i8, i8* %96, i64 40
  %101 = bitcast i8* %100 to %"class.base::internal::WeakReference"*
  %102 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %101, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %102) #19, !noalias !99
  %103 = getelementptr inbounds i8, i8* %96, i64 48
  %104 = bitcast i8* %103 to i64*
  %105 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8, !noalias !99
  store i64 %106, i64* %104, align 8, !noalias !99
  %107 = getelementptr inbounds i8, i8* %96, i64 56
  %108 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast i8* %107 to i64*
  store i64 %95, i64* %109, align 8, !noalias !99
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %108, align 8, !noalias !99
  %110 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %96, i8** %110, align 8, !alias.scope !99
  %111 = bitcast %"class.net::CookieMonster"* %0 to void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)***
  %112 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)**, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)** %112, i64 11
  %114 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback"*)** %113, align 8
  call void %114(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %7) #19
  %115 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %115) #19
  %116 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %116) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #19
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %25) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster25DeleteSessionCookiesAsyncEN4base12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"class.base::OnceCallback.92"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = tail call i8* @_Znwm(i64 40) #21, !noalias !104
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.net::CanonicalCookie"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEEEFbRKNS3_15CanonicalCookieEEE3RunEPNS0_13BindStateBaseESC_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEE7DestroyEPKNS0_13BindStateBaseE") #19, !noalias !104
  %9 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %10 = tail call i8* @_Znwm(i64 80) #21, !noalias !109
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS2_15CanonicalCookieEEEENS3_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !109
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster21DeleteMatchingCookiesEN4base17RepeatingCallbackIFbRKNS_15CanonicalCookieEEEENS0_13DeletionCauseENS1_12OnceCallbackIFvjEEE to i64), i64 0>, <2 x i64>* %13, align 8, !noalias !109
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = bitcast i8* %14 to i64*
  store i64 %9, i64* %15, align 8, !noalias !109
  %16 = getelementptr inbounds i8, i8* %10, i64 56
  %17 = ptrtoint i8* %7 to i64
  %18 = bitcast i8* %16 to i64*
  store i64 %17, i64* %18, align 8, !noalias !109
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8, !noalias !109
  %19 = getelementptr inbounds i8, i8* %10, i64 64
  %20 = bitcast i8* %19 to i32*
  store i32 2, i32* %20, align 4, !noalias !109
  %21 = getelementptr inbounds i8, i8* %10, i64 72
  %22 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.92"* %1 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !109
  %25 = bitcast i8* %21 to i64*
  store i64 %24, i64* %25, align 8, !noalias !109
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8, !noalias !109
  %26 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %10, i8** %26, align 8, !alias.scope !109
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %4)
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #19
  %28 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster26DeleteMatchingCookiesAsyncEN4base17RepeatingCallbackIFbRKNS_15CanonicalCookieEEEENS1_12OnceCallbackIFvjEEE(%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"* nocapture, %"class.base::OnceCallback.92"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.net::CookieMonster"* %0 to i64
  %6 = tail call i8* @_Znwm(i64 80) #21, !noalias !114
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS2_15CanonicalCookieEEEENS3_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE) #19, !noalias !114
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)* @_ZN3net13CookieMonster21DeleteMatchingCookiesEN4base17RepeatingCallbackIFbRKNS_15CanonicalCookieEEEENS0_13DeletionCauseENS1_12OnceCallbackIFvjEEE to i64), i64 0>, <2 x i64>* %9, align 8, !noalias !114
  %10 = getelementptr inbounds i8, i8* %6, i64 48
  %11 = bitcast i8* %10 to i64*
  store i64 %5, i64* %11, align 8, !noalias !114
  %12 = getelementptr inbounds i8, i8* %6, i64 56
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !114
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !114
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !114
  %17 = getelementptr inbounds i8, i8* %6, i64 64
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4, !noalias !114
  %19 = getelementptr inbounds i8, i8* %6, i64 72
  %20 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !114
  %23 = bitcast i8* %19 to i64*
  store i64 %22, i64* %23, align 8, !noalias !114
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8, !noalias !114
  %24 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %6, i8** %24, align 8, !alias.scope !114
  call void @_ZN3net13CookieMonster16DoCookieCallbackEN4base12OnceCallbackIFvvEEE(%"class.net::CookieMonster"* %0, %"class.base::OnceCallback"* nonnull %4)
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster20SetCookieableSchemesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN4base12OnceCallbackIFvbEEE(%"class.net::CookieMonster"*, %"class.std::__1::vector.54"* readonly dereferenceable(24), %"class.base::OnceCallback.100"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.100", align 8
  %5 = alloca %"class.base::OnceCallback.100", align 8
  %6 = alloca %"class.base::OnceCallback.100", align 8
  %7 = alloca %"class.base::OnceCallback.100", align 8
  %8 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::OnceCallback.100", %"class.base::OnceCallback.100"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback.100"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback.100"* %6 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = inttoptr i64 %14 to %"class.base::internal::BindStateBase"*
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.base::OnceCallback.100", %"class.base::OnceCallback.100"* %6, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback.100"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  %21 = bitcast %"class.base::OnceCallback.100"* %4 to i64*
  store i64 %14, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.100", %"class.base::OnceCallback.100"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, i1)**
  %25 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %24, align 8
  tail call void %25(%"class.base::internal::BindStateBase"* nonnull %16, i1 zeroext false) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %49

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 16
  %28 = icmp eq %"class.std::__1::vector.54"* %27, %1
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 1
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.54"* %27, %"class.std::__1::basic_string"* %31, %"class.std::__1::basic_string"* %33) #19
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"class.base::OnceCallback.100", %"class.base::OnceCallback.100"* %2, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback.100"* %2 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::OnceCallback.100"* %7 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  %39 = inttoptr i64 %37 to %"class.base::internal::BindStateBase"*
  %40 = icmp eq i64 %37, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.base::OnceCallback.100", %"class.base::OnceCallback.100"* %7, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.base::OnceCallback.100"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #19
  %44 = bitcast %"class.base::OnceCallback.100"* %5 to i64*
  store i64 %37, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %45 = getelementptr inbounds %"class.base::OnceCallback.100", %"class.base::OnceCallback.100"* %5, i64 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %47 = bitcast void ()** %46 to void (%"class.base::internal::BindStateBase"*, i1)**
  %48 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %47, align 8
  tail call void %48(%"class.base::internal::BindStateBase"* nonnull %39, i1 zeroext true) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #19
  br label %49

49:                                               ; preds = %41, %34, %18, %11
  %50 = phi %"class.base::OnceCallback.100"* [ %6, %11 ], [ %6, %18 ], [ %7, %34 ], [ %7, %41 ]
  %51 = getelementptr inbounds %"class.base::OnceCallback.100", %"class.base::OnceCallback.100"* %50, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster24SetPersistSessionCookiesEb(%"class.net::CookieMonster"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12
  tail call void @_ZNK3net16NetLogWithSource22AddEntryWithBoolParamsENS_15NetLogEventTypeENS_16NetLogEventPhaseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.net::NetLogWithSource"* %4, i32 445, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11, i1 zeroext %1) #19
  %5 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 18
  store i8 %3, i8* %5, align 8
  ret void
}

declare void @_ZNK3net16NetLogWithSource22AddEntryWithBoolParamsENS_15NetLogEventTypeENS_16NetLogEventPhaseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.net::NetLogWithSource"*, i32, i32, i8*, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.net::CookieChangeDispatcher"* @_ZN3net13CookieMonster19GetChangeDispatcherEv(%"class.net::CookieMonster"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 4, i32 0
  ret %"class.net::CookieChangeDispatcher"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net13CookieMonster15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::CookieMonster"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #19
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #19, !alias.scope !119
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !119
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = zext i8 %17 to i64
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %25 = select i1 %18, i64 %20, i64 %23
  %26 = select i1 %18, i8* %22, i8* %24
  %27 = add i64 %25, 15
  %28 = icmp ugt i64 %27, -17
  br i1 %28, label %29, label %31

29:                                               ; preds = %3
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %30) #20
  unreachable

31:                                               ; preds = %3
  %32 = icmp ult i64 %27, 23
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = add nuw i64 %25, 31
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #21
  store i8* %36, i8** %12, align 8, !alias.scope !119
  %37 = or i64 %35, -9223372036854775808
  store i64 %37, i64* %14, align 8, !alias.scope !119
  store i64 %25, i64* %13, align 8, !alias.scope !119
  br label %43

38:                                               ; preds = %31
  %39 = trunc i64 %25 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1, !alias.scope !119
  %42 = icmp eq i64 %25, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %33, %38
  %44 = phi i8* [ %36, %33 ], [ %11, %38 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 %26, i64 %25, i1 false) #19
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i8* [ %11, %38 ], [ %44, %43 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %25
  store i8 0, i8* %47, align 1
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZNK3net13CookieMonster15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE8kRelPath, i64 0, i64 0), i64 15) #19
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #19, !noalias !122
  %50 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %50, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #19, !noalias !122
  %51 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #19
  %52 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %51, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump16kNameObjectCountE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE, i64 0, i64 0), i64 %53) #19
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #21
  br label %61

61:                                               ; preds = %45, %58
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %67) #21
  br label %68

68:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #19
  %69 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #19
  %70 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #19
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #19, !alias.scope !125
  %74 = load i8, i8* %16, align 1, !noalias !125
  %75 = icmp slt i8 %74, 0
  %76 = load i64, i64* %19, align 8
  %77 = load i8*, i8** %21, align 8
  %78 = zext i8 %74 to i64
  %79 = select i1 %75, i64 %76, i64 %78
  %80 = select i1 %75, i8* %77, i8* %24
  %81 = add i64 %79, 15
  %82 = icmp ugt i64 %81, -17
  br i1 %82, label %83, label %85

83:                                               ; preds = %68
  %84 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %84) #20
  unreachable

85:                                               ; preds = %68
  %86 = icmp ult i64 %81, 23
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = add nuw i64 %79, 31
  %89 = and i64 %88, -16
  %90 = call i8* @_Znwm(i64 %89) #21
  store i8* %90, i8** %71, align 8, !alias.scope !125
  %91 = or i64 %89, -9223372036854775808
  store i64 %91, i64* %73, align 8, !alias.scope !125
  store i64 %79, i64* %72, align 8, !alias.scope !125
  br label %97

92:                                               ; preds = %85
  %93 = trunc i64 %79 to i8
  %94 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  store i8 %93, i8* %95, align 1, !alias.scope !125
  %96 = icmp eq i64 %79, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %87, %92
  %98 = phi i8* [ %90, %87 ], [ %70, %92 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %98, i8* align 1 %80, i64 %79, i1 false) #19
  br label %99

99:                                               ; preds = %92, %97
  %100 = phi i8* [ %70, %92 ], [ %98, %97 ]
  %101 = getelementptr inbounds i8, i8* %100, i64 %79
  store i8 0, i8* %101, align 1
  %102 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZNK3net13CookieMonster15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE8kRelPath, i64 0, i64 0), i64 15) #19
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0)) #19, !noalias !128
  %104 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %104, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #19, !noalias !128
  %105 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #19
  %106 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = icmp ult i64 %109, %107
  br i1 %110, label %113, label %111

111:                                              ; preds = %99
  %112 = sub i64 %109, %107
  br label %118

113:                                              ; preds = %99
  %114 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %109, %107
  %117 = add i64 %116, %115
  br label %118

118:                                              ; preds = %111, %113
  %119 = phi i64 [ %112, %111 ], [ %117, %113 ]
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %105, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump16kNameObjectCountE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE, i64 0, i64 0), i64 %119) #19
  %120 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #21
  br label %127

127:                                              ; preds = %118, %124
  %128 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %133) #21
  br label %134

134:                                              ; preds = %127, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #19
  %135 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %135, align 8
  %137 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %138 = icmp eq %"class.std::__1::__tree_end_node"* %136, %137
  br i1 %138, label %139, label %193

139:                                              ; preds = %241, %134
  %140 = phi i64 [ 0, %134 ], [ %213, %241 ]
  %141 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #19
  %142 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #19
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 24, i1 false) #19, !alias.scope !131
  %146 = load i8, i8* %16, align 1, !noalias !131
  %147 = icmp slt i8 %146, 0
  %148 = load i64, i64* %19, align 8
  %149 = load i8*, i8** %21, align 8
  %150 = zext i8 %146 to i64
  %151 = select i1 %147, i64 %148, i64 %150
  %152 = select i1 %147, i8* %149, i8* %24
  %153 = add i64 %151, 15
  %154 = icmp ugt i64 %153, -17
  br i1 %154, label %155, label %157

155:                                              ; preds = %139
  %156 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %156) #20
  unreachable

157:                                              ; preds = %139
  %158 = icmp ult i64 %153, 23
  br i1 %158, label %164, label %159

159:                                              ; preds = %157
  %160 = add nuw i64 %151, 31
  %161 = and i64 %160, -16
  %162 = call i8* @_Znwm(i64 %161) #21
  store i8* %162, i8** %143, align 8, !alias.scope !131
  %163 = or i64 %161, -9223372036854775808
  store i64 %163, i64* %145, align 8, !alias.scope !131
  store i64 %151, i64* %144, align 8, !alias.scope !131
  br label %169

164:                                              ; preds = %157
  %165 = trunc i64 %151 to i8
  %166 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  store i8 %165, i8* %167, align 1, !alias.scope !131
  %168 = icmp eq i64 %151, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %159, %164
  %170 = phi i8* [ %162, %159 ], [ %142, %164 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %170, i8* align 1 %152, i64 %151, i1 false) #19
  br label %171

171:                                              ; preds = %164, %169
  %172 = phi i8* [ %142, %164 ], [ %170, %169 ]
  %173 = getelementptr inbounds i8, i8* %172, i64 %151
  store i8 0, i8* %173, align 1
  %174 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZNK3net13CookieMonster15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE8kRelPath, i64 0, i64 0), i64 15) #19
  %175 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)) #19, !noalias !134
  %176 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 %176, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 24, i1 false) #19, !noalias !134
  %177 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #19
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %177, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump16kNameObjectCountE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE, i64 0, i64 0), i64 %140) #19
  %178 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %171
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #21
  br label %185

185:                                              ; preds = %171, %182
  %186 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %185
  %191 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %191) #21
  br label %192

192:                                              ; preds = %185, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #19
  ret void

193:                                              ; preds = %134, %241
  %194 = phi i64 [ %213, %241 ], [ 0, %134 ]
  %195 = phi %"class.std::__1::__tree_end_node"* [ %242, %241 ], [ %136, %134 ]
  %196 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 9
  %197 = bitcast %"class.std::__1::__tree_end_node"* %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 10
  %200 = bitcast %"class.std::__1::__tree_end_node"* %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = icmp ult i64 %201, %198
  br i1 %202, label %205, label %203

203:                                              ; preds = %193
  %204 = sub i64 %201, %198
  br label %211

205:                                              ; preds = %193
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 8
  %207 = bitcast %"class.std::__1::__tree_end_node"* %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = sub i64 %201, %198
  %210 = add i64 %209, %208
  br label %211

211:                                              ; preds = %203, %205
  %212 = phi i64 [ %204, %203 ], [ %210, %205 ]
  %213 = add i64 %212, %194
  %214 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 1, i32 0
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %214, align 8
  %216 = icmp eq %"class.std::__1::__tree_node_base"* %215, null
  br i1 %216, label %217, label %225

217:                                              ; preds = %211
  %218 = bitcast %"class.std::__1::__tree_end_node"* %195 to %"class.std::__1::__tree_node_base"*
  %219 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 2
  %220 = bitcast %"class.std::__1::__tree_end_node"* %219 to %"class.std::__1::__tree_end_node"**
  %221 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %220, align 8
  %222 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %221, i64 0, i32 0
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = icmp eq %"class.std::__1::__tree_node_base"* %223, %218
  br i1 %224, label %241, label %232

225:                                              ; preds = %211, %225
  %226 = phi %"class.std::__1::__tree_node_base"* [ %228, %225 ], [ %215, %211 ]
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %226, i64 0, i32 0, i32 0
  %228 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %227, align 8
  %229 = icmp eq %"class.std::__1::__tree_node_base"* %228, null
  br i1 %229, label %230, label %225

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %226, i64 0, i32 0
  br label %241

232:                                              ; preds = %217, %232
  %233 = phi %"class.std::__1::__tree_end_node"** [ %236, %232 ], [ %220, %217 ]
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to %"class.std::__1::__tree_node_base"**
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %235, i64 0, i32 2
  %237 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %236, align 8
  %238 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %237, i64 0, i32 0
  %239 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %238, align 8
  %240 = icmp eq %"class.std::__1::__tree_node_base"* %239, %235
  br i1 %240, label %241, label %232

241:                                              ; preds = %232, %217, %230
  %242 = phi %"class.std::__1::__tree_end_node"* [ %231, %230 ], [ %221, %217 ], [ %237, %232 ]
  %243 = icmp eq %"class.std::__1::__tree_end_node"* %242, %137
  br i1 %243, label %139, label %193
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonsterD2Ev(%"class.net::CookieMonster"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN3net13CookieMonsterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %3, i32 439) #19
  %4 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #19
  %5 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 16
  %6 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %11 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 16, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, %7
  br i1 %13, label %29, label %14

14:                                               ; preds = %9, %24
  %15 = phi %"class.std::__1::basic_string"* [ %16, %24 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #21
  br label %24

24:                                               ; preds = %21, %14
  %25 = icmp eq %"class.std::__1::basic_string"* %16, %7
  br i1 %25, label %26, label %14

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.54"* %5 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %9
  %30 = phi i8* [ %28, %26 ], [ %10, %9 ]
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %11, align 8
  tail call void @_ZdlPv(i8* %30) #21
  br label %31

31:                                               ; preds = %1, %29
  %32 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %33 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %32, align 8
  %34 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.net::CookieMonster::PersistentCookieStore", %"class.net::CookieMonster::PersistentCookieStore"* %33, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.52", %"class.base::RefCountedThreadSafe.52"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.52", %"class.base::RefCountedThreadSafe.52"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.52"* %41 to %"class.net::CookieMonster::PersistentCookieStore"*
  %43 = bitcast %"class.base::RefCountedThreadSafe.52"* %41 to void (%"class.net::CookieMonster::PersistentCookieStore"*)***
  %44 = load void (%"class.net::CookieMonster::PersistentCookieStore"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*)** %44, i64 9
  %46 = load void (%"class.net::CookieMonster::PersistentCookieStore"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*)** %45, align 8
  tail call void %46(%"class.net::CookieMonster::PersistentCookieStore"* nonnull %42) #19
  br label %47

47:                                               ; preds = %31, %35, %40
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #19
  %48 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10
  %49 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 2
  %52 = load i64, i64* %51, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* %48, i64 %50, i64 %52) #19
  %53 = bitcast %"class.base::circular_deque"* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @free(i8* %54) #19
  %55 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0
  %56 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.std::__1::__tree_node.267"**
  %58 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %57, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.29"* %55, %"class.std::__1::__tree_node.267"* %58) #19
  %59 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0
  %60 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node.266"**
  %62 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %61, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %59, %"class.std::__1::__tree_node.266"* %62) #19
  %63 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 4
  tail call void @_ZN3net29CookieMonsterChangeDispatcherD1Ev(%"class.net::CookieMonsterChangeDispatcher"* %63) #19
  %64 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0
  %65 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_node.263"**
  %67 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %66, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.7"* %64, %"class.std::__1::__tree_node.263"* %67) #19
  %68 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node.266"**
  %71 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %70, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %68, %"class.std::__1::__tree_node.266"* %71) #19
  %72 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0
  tail call void @_ZN3net11CookieStoreD2Ev(%"class.net::CookieStore"* %72) #19
  ret void
}

declare void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net29CookieMonsterChangeDispatcherD1Ev(%"class.net::CookieMonsterChangeDispatcher"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net11CookieStoreD2Ev(%"class.net::CookieStore"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonsterD0Ev(%"class.net::CookieMonster"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net13CookieMonsterD2Ev(%"class.net::CookieMonster"* %0) #19
  %2 = bitcast %"class.net::CookieMonster"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net13CookieMonster21GarbageCollectExpiredERKN4base4TimeERKNSt3__14pairINS5_14__map_iteratorINS5_15__tree_iteratorINS5_12__value_typeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10unique_ptrINS_15CanonicalCookieENS5_14default_deleteISH_EEEEEEPNS5_11__tree_nodeISL_PvEElEEEESR_EEPNS5_6vectorISR_NSD_ISR_EEEE(%"class.net::CookieMonster"*, %"class.base::Time"* nocapture readonly dereferenceable(8), %"struct.std::__1::pair.139"* nocapture readonly dereferenceable(16), %"class.std::__1::vector.140"*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.std::__1::pair.139"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::pair.139", %"struct.std::__1::pair.139"* %2, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = inttoptr i64 %6 to %"class.std::__1::__tree_end_node"*
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %20, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %13 = icmp eq %"class.std::__1::vector.140"* %3, null
  %14 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__map_iterator"** %14 to i64*
  %17 = bitcast %"class.std::__1::vector.140"* %3 to i64*
  %18 = bitcast %"class.std::__1::__map_iterator"** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %3, i64 0, i32 0, i32 0
  br label %23

20:                                               ; preds = %130, %4
  %21 = phi i32 [ 0, %4 ], [ %131, %130 ]
  %22 = sext i32 %21 to i64
  ret i64 %22

23:                                               ; preds = %11, %130
  %24 = phi %"class.std::__1::__tree_end_node"* [ %9, %11 ], [ %54, %130 ]
  %25 = phi i32 [ 0, %11 ], [ %131, %130 ]
  %26 = phi i64 [ %6, %11 ], [ %55, %130 ]
  %27 = inttoptr i64 %26 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 2
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %27
  br i1 %36, label %53, label %44

37:                                               ; preds = %23, %37
  %38 = phi %"class.std::__1::__tree_node_base"* [ %40, %37 ], [ %29, %23 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %37

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  br label %53

44:                                               ; preds = %31, %44
  %45 = phi %"class.std::__1::__tree_end_node"** [ %48, %44 ], [ %32, %31 ]
  %46 = bitcast %"class.std::__1::__tree_end_node"** %45 to %"class.std::__1::__tree_node_base"**
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 2
  %49 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, %47
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %31, %42
  %54 = phi %"class.std::__1::__tree_end_node"* [ %43, %42 ], [ %33, %31 ], [ %49, %44 ]
  %55 = ptrtoint %"class.std::__1::__tree_end_node"* %54 to i64
  %56 = inttoptr i64 %26 to %"class.std::__1::__tree_node.263"*
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %56, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %57, align 8
  %59 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %58, i64 0, i32 5, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp ne i64 %60, 0
  %62 = load i64, i64* %12, align 8
  %63 = icmp sge i64 %62, %60
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %53
  tail call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %24, i1 zeroext true, i32 2)
  %66 = add nsw i32 %25, 1
  br label %130

67:                                               ; preds = %53
  br i1 %13, label %130, label %68

68:                                               ; preds = %67
  %69 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %14, align 8
  %70 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %15, align 8
  %71 = icmp eq %"class.std::__1::__map_iterator"* %69, %70
  %72 = ptrtoint %"class.std::__1::__map_iterator"* %70 to i64
  br i1 %71, label %77, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.std::__1::__map_iterator"* %69 to i64*
  store i64 %26, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %69, i64 1
  %76 = ptrtoint %"class.std::__1::__map_iterator"* %75 to i64
  store i64 %76, i64* %16, align 8
  br label %130

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::__map_iterator"* %69 to i64
  %79 = load i64, i64* %17, align 8
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = add nsw i64 %81, 1
  %83 = icmp ugt i64 %82, 2305843009213693951
  br i1 %83, label %84, label %86

84:                                               ; preds = %77
  %85 = bitcast %"class.std::__1::vector.140"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %85) #20
  unreachable

86:                                               ; preds = %77
  %87 = sub i64 %72, %79
  %88 = ashr exact i64 %87, 3
  %89 = icmp ult i64 %88, 1152921504606846975
  br i1 %89, label %90, label %98

90:                                               ; preds = %86
  %91 = ashr exact i64 %87, 2
  %92 = icmp ult i64 %91, %82
  %93 = select i1 %92, i64 %82, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = icmp ugt i64 %93, 2305843009213693951
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  tail call void @abort() #20
  unreachable

98:                                               ; preds = %95, %86
  %99 = phi i64 [ %93, %95 ], [ 2305843009213693951, %86 ]
  %100 = shl i64 %99, 3
  %101 = tail call i8* @_Znwm(i64 %100) #21
  %102 = bitcast i8* %101 to %"class.std::__1::__map_iterator"*
  br label %103

103:                                              ; preds = %98, %90
  %104 = phi i64 [ %99, %98 ], [ 0, %90 ]
  %105 = phi %"class.std::__1::__map_iterator"* [ %102, %98 ], [ null, %90 ]
  %106 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %105, i64 %81
  %107 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %105, i64 %104
  %108 = ptrtoint %"class.std::__1::__map_iterator"* %107 to i64
  %109 = bitcast %"class.std::__1::__map_iterator"* %106 to i64*
  store i64 %26, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %106, i64 1
  %111 = ptrtoint %"class.std::__1::__map_iterator"* %110 to i64
  %112 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %19, align 8
  %113 = load i64, i64* %16, align 8
  %114 = ptrtoint %"class.std::__1::__map_iterator"* %112 to i64
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = sub nsw i64 0, %116
  %118 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %106, i64 %117
  %119 = ptrtoint %"class.std::__1::__map_iterator"* %118 to i64
  %120 = icmp sgt i64 %115, 0
  br i1 %120, label %121, label %125

121:                                              ; preds = %103
  %122 = bitcast %"class.std::__1::__map_iterator"* %118 to i8*
  %123 = bitcast %"class.std::__1::__map_iterator"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 %115, i1 false) #19
  %124 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %19, align 8
  br label %125

125:                                              ; preds = %121, %103
  %126 = phi %"class.std::__1::__map_iterator"* [ %112, %103 ], [ %124, %121 ]
  store i64 %119, i64* %17, align 8
  store i64 %111, i64* %16, align 8
  store i64 %108, i64* %18, align 8
  %127 = icmp eq %"class.std::__1::__map_iterator"* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = bitcast %"class.std::__1::__map_iterator"* %126 to i8*
  tail call void @_ZdlPv(i8* %129) #21
  br label %130

130:                                              ; preds = %128, %125, %73, %67, %65
  %131 = phi i32 [ %66, %65 ], [ %25, %67 ], [ %25, %73 ], [ %25, %125 ], [ %25, %128 ]
  %132 = icmp eq %"class.std::__1::__tree_end_node"* %8, %54
  br i1 %132, label %20, label %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3net12_GLOBAL__N_112CookieSorterEPNS_15CanonicalCookieES2_(%"class.net::CanonicalCookie"* nocapture readonly, %"class.net::CanonicalCookie"* nocapture readonly) #6 {
  %3 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %2
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 3
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %13
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %14, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 4, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 4, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %32, %30
  br label %50

34:                                               ; preds = %25
  br i1 %7, label %35, label %38

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %34
  %39 = zext i8 %6 to i64
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  br i1 %19, label %42, label %45

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  br label %47

45:                                               ; preds = %40
  %46 = zext i8 %18 to i64
  br label %47

47:                                               ; preds = %42, %45
  %48 = phi i64 [ %44, %42 ], [ %46, %45 ]
  %49 = icmp ugt i64 %41, %48
  br label %50

50:                                               ; preds = %47, %28
  %51 = phi i1 [ %33, %28 ], [ %49, %47 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.70"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.net::CanonicalCookie"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.net::CanonicalCookie"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.net::CanonicalCookie"** %13 to i64*
  %15 = icmp ugt i64 %1, 128102389400760775
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #20
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 144
  %21 = mul i64 %1, 144
  %22 = tail call i8* @_Znwm(i64 %21) #21
  %23 = bitcast i8* %22 to %"class.net::CanonicalCookie"*
  %24 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %23, i64 %20
  %25 = ptrtoint %"class.net::CanonicalCookie"* %24 to i64
  %26 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %23, i64 %1
  %27 = ptrtoint %"class.net::CanonicalCookie"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.net::CanonicalCookie"*
  %29 = icmp eq %"class.net::CanonicalCookie"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.net::CanonicalCookie"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.net::CanonicalCookie"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %31, i64 -1
  %34 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %32, i64 -1
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %33, %"class.net::CanonicalCookie"* dereferenceable(144) %34) #19
  %35 = icmp eq %"class.net::CanonicalCookie"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.net::CanonicalCookie"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.net::CanonicalCookie"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.net::CanonicalCookie"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.net::CanonicalCookie"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.net::CanonicalCookie"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.net::CanonicalCookie"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %48, i64 -1
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %49) #19
  %50 = icmp eq %"class.net::CanonicalCookie"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #21
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net13CookieMonster27GetAccessSemanticsForCookieERKNS_15CanonicalCookieE(%"class.net::CookieMonster"* nocapture readonly, %"class.net::CanonicalCookie"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %3, align 8
  %5 = icmp eq %"class.net::CookieAccessDelegate"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.net::CookieAccessDelegate"* %4 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)***
  %8 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %8, i64 3
  %10 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %9, align 8
  %11 = tail call i32 %10(%"class.net::CookieAccessDelegate"* nonnull %4, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #19
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i32 [ %11, %6 ], [ -1, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13CookieMonster19HasCookieableSchemeERK4GURL(%"class.net::CookieMonster"* nocapture readonly, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 16, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 16, i32 0, i32 1
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %5, %7
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %13

11:                                               ; preds = %28
  %12 = icmp eq %"class.std::__1::basic_string"* %31, %7
  br i1 %12, label %32, label %13

13:                                               ; preds = %11, %9
  %14 = phi %"class.std::__1::basic_string"* [ %5, %9 ], [ %31, %11 ]
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  %23 = icmp eq i8* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %13
  %25 = call i64 @strlen(i8* nonnull %22) #19
  br label %28

26:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #19
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ 0, %26 ], [ %25, %24 ]
  %30 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* %22, i64 %29) #19
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  br i1 %30, label %32, label %11

32:                                               ; preds = %11, %28, %2
  %33 = phi i1 [ false, %2 ], [ false, %11 ], [ true, %28 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster36FindCookiesForRegistryControlledHostERK4GURL(%"class.std::__1::vector.147"* noalias sret, %"class.net::CookieMonster"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call i64 @_ZN4base4Time3NowEv() #19
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i32, i32* %8, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %26, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %class.GURL* %2 to i8*
  %23 = select i1 %19, i8* %21, i8* %22
  %24 = getelementptr inbounds i8, i8* %23, i64 %15
  %25 = sext i32 %10 to i64
  br label %26

26:                                               ; preds = %3, %12
  %27 = phi i8* [ %24, %12 ], [ null, %3 ]
  %28 = phi i64 [ %25, %12 ], [ 0, %3 ]
  call void @_ZN3net13CookieMonster6GetKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %27, i64 %28)
  %29 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.std::__1::vector.147"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #19
  %32 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %1, i64 0, i32 3, i32 0
  %33 = call { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE19__equal_range_multiIS7_EENS_4pairINS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEESS_EERKT_(%"class.std::__1::__tree.7"* %32, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #19
  %34 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %33, 0
  %35 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %33, 1
  %36 = icmp eq %"class.std::__1::__tree_end_node"* %34, %35
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.net::CanonicalCookie"*** %29 to i64*
  %39 = bitcast %"class.std::__1::vector.147"* %0 to i64*
  %40 = bitcast %"class.net::CanonicalCookie"*** %30 to i64*
  br label %49

41:                                               ; preds = %143, %26
  %42 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %47) #21
  br label %48

48:                                               ; preds = %41, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #19
  ret void

49:                                               ; preds = %37, %143
  %50 = phi %"class.std::__1::__tree_end_node"* [ %34, %37 ], [ %83, %143 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 7
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.net::CanonicalCookie"**
  %53 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %52, align 8
  %54 = ptrtoint %"class.net::CanonicalCookie"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 1, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %66

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 2
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_end_node"**
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, %59
  br i1 %65, label %82, label %73

66:                                               ; preds = %49, %66
  %67 = phi %"class.std::__1::__tree_node_base"* [ %69, %66 ], [ %56, %49 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %66

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  br label %82

73:                                               ; preds = %58, %73
  %74 = phi %"class.std::__1::__tree_end_node"** [ %77, %73 ], [ %61, %58 ]
  %75 = bitcast %"class.std::__1::__tree_end_node"** %74 to %"class.std::__1::__tree_node_base"**
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, %76
  br i1 %81, label %82, label %73

82:                                               ; preds = %73, %58, %71
  %83 = phi %"class.std::__1::__tree_end_node"* [ %72, %71 ], [ %62, %58 ], [ %78, %73 ]
  %84 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %53, i64 0, i32 5, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp ne i64 %85, 0
  %87 = icmp sge i64 %5, %85
  %88 = and i1 %87, %86
  br i1 %88, label %89, label %90

89:                                               ; preds = %82
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %1, %"class.std::__1::__tree_end_node"* %50, i1 zeroext true, i32 2)
  br label %143

90:                                               ; preds = %82
  %91 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %29, align 8
  %92 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %30, align 8
  %93 = icmp eq %"class.net::CanonicalCookie"** %91, %92
  %94 = ptrtoint %"class.net::CanonicalCookie"** %92 to i64
  br i1 %93, label %99, label %95

95:                                               ; preds = %90
  %96 = bitcast %"class.net::CanonicalCookie"** %91 to i64*
  store i64 %54, i64* %96, align 8
  %97 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %91, i64 1
  %98 = ptrtoint %"class.net::CanonicalCookie"** %97 to i64
  store i64 %98, i64* %38, align 8
  br label %143

99:                                               ; preds = %90
  %100 = ptrtoint %"class.net::CanonicalCookie"** %91 to i64
  %101 = load i64, i64* %39, align 8
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = add nsw i64 %103, 1
  %105 = icmp ugt i64 %104, 2305843009213693951
  br i1 %105, label %106, label %108

106:                                              ; preds = %99
  %107 = bitcast %"class.std::__1::vector.147"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %107) #20
  unreachable

108:                                              ; preds = %99
  %109 = sub i64 %94, %101
  %110 = ashr exact i64 %109, 3
  %111 = icmp ult i64 %110, 1152921504606846975
  br i1 %111, label %112, label %120

112:                                              ; preds = %108
  %113 = ashr exact i64 %109, 2
  %114 = icmp ult i64 %113, %104
  %115 = select i1 %114, i64 %104, i64 %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = icmp ugt i64 %115, 2305843009213693951
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  call void @abort() #20
  unreachable

120:                                              ; preds = %117, %108
  %121 = phi i64 [ %115, %117 ], [ 2305843009213693951, %108 ]
  %122 = shl i64 %121, 3
  %123 = call i8* @_Znwm(i64 %122) #21
  %124 = bitcast i8* %123 to %"class.net::CanonicalCookie"**
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i64 [ %121, %120 ], [ 0, %112 ]
  %127 = phi i8* [ %123, %120 ], [ null, %112 ]
  %128 = phi %"class.net::CanonicalCookie"** [ %124, %120 ], [ null, %112 ]
  %129 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %128, i64 %103
  %130 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %128, i64 %126
  %131 = ptrtoint %"class.net::CanonicalCookie"** %130 to i64
  %132 = bitcast %"class.net::CanonicalCookie"** %129 to i64*
  store i64 %54, i64* %132, align 8
  %133 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %129, i64 1
  %134 = ptrtoint %"class.net::CanonicalCookie"** %133 to i64
  %135 = ptrtoint %"class.net::CanonicalCookie"** %128 to i64
  %136 = icmp sgt i64 %102, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %125
  %138 = inttoptr i64 %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %138, i64 %102, i1 false) #19
  br label %139

139:                                              ; preds = %137, %125
  store i64 %135, i64* %39, align 8
  store i64 %134, i64* %38, align 8
  store i64 %131, i64* %40, align 8
  %140 = icmp eq i64 %101, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = inttoptr i64 %101 to i8*
  call void @_ZdlPv(i8* %142) #21
  br label %143

143:                                              ; preds = %141, %139, %95, %89
  %144 = icmp eq %"class.std::__1::__tree_end_node"* %83, %35
  br i1 %144, label %41, label %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net22CookieWithAccessResultENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.164"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.net::CookieWithAccessResult"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.164"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 168
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.net::CookieWithAccessResult"*
  br i1 %10, label %12, label %61

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.net::CookieWithAccessResult"** %13 to i64*
  %15 = icmp ugt i64 %1, 109802048057794950
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #20
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 168
  %21 = mul i64 %1, 168
  %22 = tail call i8* @_Znwm(i64 %21) #21
  %23 = bitcast i8* %22 to %"struct.net::CookieWithAccessResult"*
  %24 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %23, i64 %20
  %25 = ptrtoint %"struct.net::CookieWithAccessResult"* %24 to i64
  %26 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %23, i64 %1
  %27 = ptrtoint %"struct.net::CookieWithAccessResult"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.net::CookieWithAccessResult"*
  %29 = icmp eq %"struct.net::CookieWithAccessResult"* %28, %11
  br i1 %29, label %45, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.net::CookieWithAccessResult"* [ %38, %30 ], [ %24, %17 ]
  %32 = phi %"struct.net::CookieWithAccessResult"* [ %33, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %32, i64 -1
  %34 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %33, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %34, %"class.net::CanonicalCookie"* dereferenceable(144) %35) #19
  %36 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %31, i64 -1, i32 1
  %37 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %32, i64 -1, i32 1
  tail call void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"* %36, %"struct.net::CookieAccessResult"* dereferenceable(20) %37) #19
  %38 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %31, i64 -1
  %39 = icmp eq %"struct.net::CookieWithAccessResult"* %33, %11
  br i1 %39, label %40, label %30

40:                                               ; preds = %30
  %41 = ptrtoint %"struct.net::CookieWithAccessResult"* %38 to i64
  %42 = load i64, i64* %6, align 8
  %43 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %13, align 8
  %44 = inttoptr i64 %42 to %"struct.net::CookieWithAccessResult"*
  br label %45

45:                                               ; preds = %17, %40
  %46 = phi %"struct.net::CookieWithAccessResult"* [ %44, %40 ], [ %28, %17 ]
  %47 = phi %"struct.net::CookieWithAccessResult"* [ %43, %40 ], [ %11, %17 ]
  %48 = phi i64 [ %41, %40 ], [ %25, %17 ]
  %49 = phi i64 [ %42, %40 ], [ %18, %17 ]
  store i64 %48, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %50 = icmp eq %"struct.net::CookieWithAccessResult"* %47, %46
  br i1 %50, label %57, label %51

51:                                               ; preds = %45, %51
  %52 = phi %"struct.net::CookieWithAccessResult"* [ %53, %51 ], [ %47, %45 ]
  %53 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %52, i64 -1
  %54 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %52, i64 -1, i32 1
  tail call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* %54) #19
  %55 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %53, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %55) #19
  %56 = icmp eq %"struct.net::CookieWithAccessResult"* %53, %46
  br i1 %56, label %57, label %51

57:                                               ; preds = %51, %45
  %58 = icmp eq i64 %49, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = inttoptr i64 %49 to i8*
  tail call void @_ZdlPv(i8* %60) #21
  br label %61

61:                                               ; preds = %59, %57, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_(%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.std::__1::vector.147"* nocapture readonly, %"class.std::__1::vector.164"*, %"class.std::__1::vector.164"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.net::CookieAccessResult", align 4
  %8 = alloca %"struct.net::CookieAccessParams", align 4
  %9 = alloca %"struct.net::CookieWithAccessResult", align 8
  %10 = alloca %"struct.net::CookieWithAccessResult", align 8
  %11 = tail call i64 @_ZN4base4Time3NowEv() #19
  %12 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 17, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = sub nsw i64 %11, %13
  %15 = icmp slt i64 %14, 600000001
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = tail call zeroext i1 @_ZN3net13CookieMonster21DoRecordPeriodicStatsEv(%"class.net::CookieMonster"* %0) #19
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  store i64 %11, i64* %12, align 8
  br label %19

19:                                               ; preds = %6, %16, %18
  %20 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %20, align 8
  %22 = icmp eq %"class.net::CookieAccessDelegate"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.net::CookieAccessDelegate"* %21 to i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)***
  %25 = load i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)**, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)** %25, i64 2
  %27 = load i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)*, i1 (%"class.net::CookieAccessDelegate"*, %class.GURL*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.net::CookieAccessDelegate"* nonnull %21, %class.GURL* dereferenceable(120) %1) #19
  br label %29

29:                                               ; preds = %19, %23
  %30 = phi i1 [ false, %19 ], [ %28, %23 ]
  %31 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %3, i64 0, i32 0, i32 1
  %34 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %33, align 8
  %35 = icmp eq %"class.net::CanonicalCookie"** %32, %34
  br i1 %35, label %60, label %36

36:                                               ; preds = %29
  %37 = bitcast %"struct.net::CookieAccessResult"* %7 to i8*
  %38 = getelementptr inbounds %"struct.net::CookieAccessResult", %"struct.net::CookieAccessResult"* %7, i64 0, i32 0
  %39 = bitcast %"struct.net::CookieAccessParams"* %8 to i8*
  %40 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %2, i64 0, i32 4
  %41 = bitcast %"struct.net::CookieWithAccessResult"* %9 to i8*
  %42 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %9, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %9, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %5, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"struct.net::CookieWithAccessResult"** %44 to i64*
  %47 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %2, i64 0, i32 3
  %48 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 14, i32 0
  %49 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 18
  %50 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %51 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %2, i64 0, i32 0
  %52 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %2, i64 0, i32 7
  %53 = bitcast %"struct.net::CookieWithAccessResult"* %10 to i8*
  %54 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %10, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %10, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %4, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"struct.net::CookieWithAccessResult"** %56 to i64*
  %59 = bitcast %"struct.net::CookieAccessResult"* %7 to i8*
  br label %61

60:                                               ; preds = %271, %29
  ret void

61:                                               ; preds = %36, %271
  %62 = phi %"class.net::CanonicalCookie"** [ %32, %36 ], [ %272, %271 ]
  %63 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %59, i8 -86, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %39) #19
  %64 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %20, align 8
  %65 = icmp eq %"class.net::CookieAccessDelegate"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = bitcast %"class.net::CookieAccessDelegate"* %64 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)***
  %68 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** %67, align 8
  %69 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %68, i64 3
  %70 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %69, align 8
  %71 = call i32 %70(%"class.net::CookieAccessDelegate"* nonnull %64, %"class.net::CanonicalCookie"* dereferenceable(144) %63) #19
  br label %72

72:                                               ; preds = %61, %66
  %73 = phi i32 [ %71, %66 ], [ -1, %61 ]
  %74 = call i32 @_ZN3net11cookie_util18GetSamePartyStatusERKNS_15CanonicalCookieERKNS_13CookieOptionsE(%"class.net::CanonicalCookie"* dereferenceable(144) %63, %"class.net::CookieOptions"* dereferenceable(32) %2) #19
  call void @_ZN3net18CookieAccessParamsC1ENS_21CookieAccessSemanticsEbNS_21CookieSamePartyStatusE(%"struct.net::CookieAccessParams"* nonnull %8, i32 %73, i1 zeroext %30, i32 %74) #19
  call void @_ZNK3net15CanonicalCookie20IncludeForRequestURLERK4GURLRKNS_13CookieOptionsERKNS_18CookieAccessParamsE(%"struct.net::CookieAccessResult"* nonnull sret %7, %"class.net::CanonicalCookie"* %63, %class.GURL* dereferenceable(120) %1, %"class.net::CookieOptions"* dereferenceable(32) %2, %"struct.net::CookieAccessParams"* nonnull dereferenceable(12) %8) #19
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39) #19
  %75 = call zeroext i1 @_ZNK3net21CookieInclusionStatus9IsIncludeEv(%"class.net::CookieInclusionStatus"* nonnull %38) #19
  br i1 %75, label %98, label %76

76:                                               ; preds = %72
  %77 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %78 = inttoptr i64 %77 to %"class.base::HistogramBase"*
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.13, i64 0, i64 0), i32 1) #19
  %82 = ptrtoint %"class.base::HistogramBase"* %81 to i64
  store atomic i64 %82, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %83

83:                                               ; preds = %76, %80
  %84 = phi %"class.base::HistogramBase"* [ %78, %76 ], [ %81, %80 ]
  %85 = call zeroext i1 @_ZNK3net21CookieInclusionStatus22HasOnlyExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"* nonnull %38, i32 10) #19
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %84, i1 zeroext %85) #19
  %86 = load i8, i8* %40, align 1, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %271, label %88

88:                                               ; preds = %83
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %41) #19
  call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* nonnull %42, %"class.net::CanonicalCookie"* dereferenceable(144) %63) #19
  call void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"* %43, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %7) #19
  %89 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %44, align 8
  %90 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %45, align 8
  %91 = icmp ult %"struct.net::CookieWithAccessResult"* %89, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %89, i64 0, i32 0
  call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %93, %"class.net::CanonicalCookie"* nonnull dereferenceable(144) %42) #19
  %94 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %89, i64 0, i32 1
  call void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"* %94, %"struct.net::CookieAccessResult"* dereferenceable(20) %43) #19
  %95 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %89, i64 1
  %96 = ptrtoint %"struct.net::CookieWithAccessResult"* %95 to i64
  store i64 %96, i64* %46, align 8
  br label %267

97:                                               ; preds = %88
  call void @_ZNSt3__16vectorIN3net22CookieWithAccessResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.164"* %5, %"struct.net::CookieWithAccessResult"* nonnull dereferenceable(168) %9) #19
  br label %267

98:                                               ; preds = %72
  %99 = load i8, i8* %47, align 4, !range !3
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %122, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 6, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = sub nsw i64 %11, %103
  %105 = load i64, i64* %48, align 8
  %106 = icmp slt i64 %104, %105
  br i1 %106, label %122, label %107

107:                                              ; preds = %101
  store i64 %11, i64* %102, align 8
  %108 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 5, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = load i8, i8* %49, align 8, !range !3
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %111, %107
  %115 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %50, align 8
  %116 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %115 to void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)***
  %119 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %119, i64 3
  %121 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %120, align 8
  call void %121(%"class.net::CookieMonster::PersistentCookieStore"* nonnull %115, %"class.net::CanonicalCookie"* dereferenceable(144) %63) #19
  br label %122

122:                                              ; preds = %98, %117, %114, %111, %101
  %123 = call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %1) #19
  %124 = call zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120) %1) #19
  br i1 %124, label %125, label %156

125:                                              ; preds = %122
  %126 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %127 = inttoptr i64 %126 to %"class.base::HistogramBase"*
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %125
  %130 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 91, i32 92, i32 1) #19
  %131 = ptrtoint %"class.base::HistogramBase"* %130 to i64
  store atomic i64 %131, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %132

132:                                              ; preds = %125, %129
  %133 = phi %"class.base::HistogramBase"* [ %127, %125 ], [ %130, %129 ]
  %134 = call i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32 %123) #19
  %135 = bitcast %"class.base::HistogramBase"* %133 to void (%"class.base::HistogramBase"*, i32)***
  %136 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %136, i64 6
  %138 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %137, align 8
  call void %138(%"class.base::HistogramBase"* %133, i32 %134) #19
  %139 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %140 = inttoptr i64 %139 to %"class.base::HistogramBase"*
  %141 = icmp eq i64 %139, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %132
  %143 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #19
  %144 = ptrtoint %"class.base::HistogramBase"* %143 to i64
  store atomic i64 %144, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %145

145:                                              ; preds = %132, %142
  %146 = phi %"class.base::HistogramBase"* [ %140, %132 ], [ %143, %142 ]
  %147 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 13
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 12
  %150 = load i32, i32* %149, align 8
  %151 = call i32 @_ZN3net13CookieMonster31IsCookieSentToSamePortThatSetItERK4GURLiNS_18CookieSourceSchemeE(%class.GURL* dereferenceable(120) %1, i32 %148, i32 %150)
  %152 = bitcast %"class.base::HistogramBase"* %146 to void (%"class.base::HistogramBase"*, i32)***
  %153 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %153, i64 6
  %155 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %154, align 8
  call void %155(%"class.base::HistogramBase"* %146, i32 %151) #19
  br label %187

156:                                              ; preds = %122
  %157 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %158 = inttoptr i64 %157 to %"class.base::HistogramBase"*
  %159 = icmp eq i64 %157, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %156
  %161 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i32 1, i32 91, i32 92, i32 1) #19
  %162 = ptrtoint %"class.base::HistogramBase"* %161 to i64
  store atomic i64 %162, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %163

163:                                              ; preds = %156, %160
  %164 = phi %"class.base::HistogramBase"* [ %158, %156 ], [ %161, %160 ]
  %165 = call i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32 %123) #19
  %166 = bitcast %"class.base::HistogramBase"* %164 to void (%"class.base::HistogramBase"*, i32)***
  %167 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %167, i64 6
  %169 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %168, align 8
  call void %169(%"class.base::HistogramBase"* %164, i32 %165) #19
  %170 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %171 = inttoptr i64 %170 to %"class.base::HistogramBase"*
  %172 = icmp eq i64 %170, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %163
  %174 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #19
  %175 = ptrtoint %"class.base::HistogramBase"* %174 to i64
  store atomic i64 %175, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %176

176:                                              ; preds = %163, %173
  %177 = phi %"class.base::HistogramBase"* [ %171, %163 ], [ %174, %173 ]
  %178 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 13
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 12
  %181 = load i32, i32* %180, align 8
  %182 = call i32 @_ZN3net13CookieMonster31IsCookieSentToSamePortThatSetItERK4GURLiNS_18CookieSourceSchemeE(%class.GURL* dereferenceable(120) %1, i32 %179, i32 %181)
  %183 = bitcast %"class.base::HistogramBase"* %177 to void (%"class.base::HistogramBase"*, i32)***
  %184 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %184, i64 6
  %186 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %185, align 8
  call void %186(%"class.base::HistogramBase"* %177, i32 %182) #19
  br label %187

187:                                              ; preds = %176, %145
  %188 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 2
  %189 = bitcast %"class.std::__1::basic_string"* %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %195 = load i64, i64* %194, align 8
  br label %198

196:                                              ; preds = %187
  %197 = zext i8 %191 to i64
  br label %198

198:                                              ; preds = %196, %193
  %199 = phi i64 [ %195, %193 ], [ %197, %196 ]
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %229, label %201

201:                                              ; preds = %198
  br i1 %192, label %202, label %205

202:                                              ; preds = %201
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  br label %207

205:                                              ; preds = %201
  %206 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  br label %207

207:                                              ; preds = %202, %205
  %208 = phi i8* [ %204, %202 ], [ %206, %205 ]
  %209 = load i8, i8* %208, align 1
  %210 = icmp eq i8 %209, 46
  br i1 %210, label %211, label %229

211:                                              ; preds = %207
  %212 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %213 = inttoptr i64 %212 to %"class.base::HistogramBase"*
  %214 = icmp eq i64 %212, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %211
  %216 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #19
  %217 = ptrtoint %"class.base::HistogramBase"* %216 to i64
  store atomic i64 %217, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %218

218:                                              ; preds = %211, %215
  %219 = phi %"class.base::HistogramBase"* [ %213, %211 ], [ %216, %215 ]
  %220 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 13
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 12
  %223 = load i32, i32* %222, align 8
  %224 = call i32 @_ZN3net13CookieMonster31IsCookieSentToSamePortThatSetItERK4GURLiNS_18CookieSourceSchemeE(%class.GURL* dereferenceable(120) %1, i32 %221, i32 %223)
  %225 = bitcast %"class.base::HistogramBase"* %219 to void (%"class.base::HistogramBase"*, i32)***
  %226 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %226, i64 6
  %228 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %227, align 8
  call void %228(%"class.base::HistogramBase"* %219, i32 %224) #19
  br label %229

229:                                              ; preds = %198, %218, %207
  %230 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 11
  %231 = load i8, i8* %230, align 4, !range !3
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %257, label %233

233:                                              ; preds = %229
  %234 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_5.0.0.0.0.0 acquire, align 8
  %235 = inttoptr i64 %234 to %"class.base::HistogramBase"*
  %236 = icmp eq i64 %234, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %233
  %238 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0), i32 1) #19
  %239 = ptrtoint %"class.base::HistogramBase"* %238 to i64
  store atomic i64 %239, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_5.0.0.0.0.0 release, align 8
  br label %240

240:                                              ; preds = %233, %237
  %241 = phi %"class.base::HistogramBase"* [ %235, %233 ], [ %238, %237 ]
  %242 = load i8, i8* %51, align 4, !range !3
  %243 = icmp eq i8 %242, 0
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %241, i1 zeroext %243) #19
  %244 = load atomic i64, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_6.0.0.0.0.0 acquire, align 8
  %245 = inttoptr i64 %244 to %"class.base::HistogramBase"*
  %246 = icmp eq i64 %244, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %240
  %248 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i64 0, i64 0), i32 1, i32 21, i32 22, i32 1) #19
  %249 = ptrtoint %"class.base::HistogramBase"* %248 to i64
  store atomic i64 %249, i64* @_ZZN3net13CookieMonster24FilterCookiesWithOptionsE4GURLNS_13CookieOptionsEPNSt3__16vectorIPNS_15CanonicalCookieENS3_9allocatorIS6_EEEEPNS4_INS_22CookieWithAccessResultENS7_ISB_EEEESE_E24atomic_histogram_pointer_6.0.0.0.0.0 release, align 8
  br label %250

250:                                              ; preds = %240, %247
  %251 = phi %"class.base::HistogramBase"* [ %245, %240 ], [ %248, %247 ]
  %252 = load i32, i32* %52, align 4
  %253 = bitcast %"class.base::HistogramBase"* %251 to void (%"class.base::HistogramBase"*, i32)***
  %254 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %254, i64 6
  %256 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %255, align 8
  call void %256(%"class.base::HistogramBase"* %251, i32 %252) #19
  br label %257

257:                                              ; preds = %229, %250
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %53) #19
  call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* nonnull %54, %"class.net::CanonicalCookie"* dereferenceable(144) %63) #19
  call void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"* %55, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %7) #19
  %258 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %56, align 8
  %259 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %57, align 8
  %260 = icmp ult %"struct.net::CookieWithAccessResult"* %258, %259
  br i1 %260, label %261, label %266

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %258, i64 0, i32 0
  call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %262, %"class.net::CanonicalCookie"* nonnull dereferenceable(144) %54) #19
  %263 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %258, i64 0, i32 1
  call void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"* %263, %"struct.net::CookieAccessResult"* dereferenceable(20) %55) #19
  %264 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %258, i64 1
  %265 = ptrtoint %"struct.net::CookieWithAccessResult"* %264 to i64
  store i64 %265, i64* %58, align 8
  br label %267

266:                                              ; preds = %257
  call void @_ZNSt3__16vectorIN3net22CookieWithAccessResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.164"* %4, %"struct.net::CookieWithAccessResult"* nonnull dereferenceable(168) %10) #19
  br label %267

267:                                              ; preds = %266, %261, %97, %92
  %268 = phi %"struct.net::CookieAccessResult"* [ %43, %92 ], [ %43, %97 ], [ %55, %261 ], [ %55, %266 ]
  %269 = phi %"class.net::CanonicalCookie"* [ %42, %92 ], [ %42, %97 ], [ %54, %261 ], [ %54, %266 ]
  %270 = phi i8* [ %41, %92 ], [ %41, %97 ], [ %53, %261 ], [ %53, %266 ]
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* %268) #19
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %269) #19
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %270) #19
  br label %271

271:                                              ; preds = %267, %83
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37) #19
  %272 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %62, i64 1
  %273 = icmp eq %"class.net::CanonicalCookie"** %272, %34
  br i1 %273, label %60, label %61
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN3net13CookieOptionsC1ERKS0_(%"class.net::CookieOptions"*, %"class.net::CookieOptions"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net13CookieOptionsD1Ev(%"class.net::CookieOptions"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare zeroext i1 @_ZNK3net18CookieDeletionInfo9TimeRange8ContainsERKN4base4TimeE(%"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"*, %"class.std::__1::__tree_end_node"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GetParamsImpl.442, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.net::CanonicalCookie"*, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.net::(anonymous namespace)::ChangeCausePair_struct"*
  %10 = alloca %class.anon.225, align 8
  %11 = alloca %"struct.net::CookieChangeInfo", align 8
  %12 = alloca %"struct.net::CookieAccessResult", align 4
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.net::CookieInclusionStatus"*
  %15 = zext i1 %2 to i8
  store i8 %15, i8* %6, align 1
  %16 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.net::CanonicalCookie"** %7 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #19
  %23 = zext i32 %3 to i64
  %24 = getelementptr inbounds [14 x %"struct.net::(anonymous namespace)::ChangeCausePair_struct"], [14 x %"struct.net::(anonymous namespace)::ChangeCausePair_struct"]* @_ZN3net12_GLOBAL__N_119kChangeCauseMappingE, i64 0, i64 %23
  %25 = bitcast %"struct.net::(anonymous namespace)::ChangeCausePair_struct"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %8, align 8
  %27 = icmp eq i32 %3, 5
  %28 = inttoptr i64 %20 to %"class.net::CanonicalCookie"*
  br i1 %27, label %49, label %29

29:                                               ; preds = %4
  %30 = bitcast %class.anon.225* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #19
  %31 = getelementptr inbounds %class.anon.225, %class.anon.225* %10, i64 0, i32 0
  store %"class.net::CanonicalCookie"** %7, %"class.net::CanonicalCookie"*** %31, align 8
  %32 = getelementptr inbounds %class.anon.225, %class.anon.225* %10, i64 0, i32 1
  %33 = bitcast %"struct.net::(anonymous namespace)::ChangeCausePair_struct"** %32 to i64**
  store i64* %8, i64** %33, align 8
  %34 = getelementptr inbounds %class.anon.225, %class.anon.225* %10, i64 0, i32 2
  store i8* %6, i8** %34, align 8
  %35 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 1
  %36 = load %"class.net::NetLog"*, %"class.net::NetLog"** %35, align 8
  %37 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %36, i64 0, i32 3
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %47, label %40, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 0
  %42 = bitcast %class.GetParamsImpl.442* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #19
  %43 = getelementptr inbounds %class.GetParamsImpl.442, %class.GetParamsImpl.442* %5, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.GetParamsImpl.442, %class.GetParamsImpl.442* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISE_EEEEEEPNS3_11__tree_nodeISI_PvEElEEEEbNS2_13DeletionCauseEE3$_7EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSS_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  store %class.anon.225* %10, %class.anon.225** %44, align 8
  %45 = getelementptr inbounds %class.GetParamsImpl.442, %class.GetParamsImpl.442* %5, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %36, i32 441, %"struct.net::NetLogSource"* dereferenceable(16) %41, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %45) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #19
  %46 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.net::CanonicalCookie"* [ %28, %29 ], [ %46, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #19
  br label %49

49:                                               ; preds = %4, %47
  %50 = phi %"class.net::CanonicalCookie"* [ %28, %4 ], [ %48, %47 ]
  %51 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %50, i64 0, i32 5, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 18
  %56 = load i8, i8* %55, align 8, !range !3
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %71, label %58

58:                                               ; preds = %49, %54
  %59 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %60 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %59, align 8
  %61 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %60, null
  %62 = load i8, i8* %6, align 1
  %63 = icmp eq i8 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %60 to void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)***
  %67 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %67, i64 4
  %69 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %68, align 8
  call void %69(%"class.net::CookieMonster::PersistentCookieStore"* nonnull %60, %"class.net::CanonicalCookie"* dereferenceable(144) %50) #19
  %70 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8
  br label %71

71:                                               ; preds = %58, %54, %65
  %72 = phi %"class.net::CanonicalCookie"* [ %50, %58 ], [ %50, %54 ], [ %70, %65 ]
  %73 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 4
  %74 = bitcast %"struct.net::CookieChangeInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %74) #19
  call void @_ZN3net21CookieInclusionStatusC1Ev(%"class.net::CookieInclusionStatus"* nonnull %14) #19
  %75 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %75, align 8
  %77 = icmp eq %"class.net::CookieAccessDelegate"* %76, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %71
  %79 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8
  %80 = bitcast %"class.net::CookieAccessDelegate"* %76 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)***
  %81 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*** %80, align 8
  %82 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %81, i64 3
  %83 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::CanonicalCookie"*)** %82, align 8
  %84 = call i32 %83(%"class.net::CookieAccessDelegate"* nonnull %76, %"class.net::CanonicalCookie"* dereferenceable(144) %79) #19
  br label %85

85:                                               ; preds = %71, %78
  %86 = phi i32 [ %84, %78 ], [ -1, %71 ]
  %87 = load i64, i64* %13, align 8
  call void @_ZN3net18CookieAccessResultC1ENS_23CookieEffectiveSameSiteENS_21CookieInclusionStatusENS_21CookieAccessSemanticsEb(%"struct.net::CookieAccessResult"* nonnull %12, i32 4, i64 %87, i32 %86, i1 zeroext true) #19
  %88 = bitcast i64* %8 to i32*
  %89 = load i32, i32* %88, align 8
  call void @_ZN3net16CookieChangeInfoC1ERKNS_15CanonicalCookieENS_18CookieAccessResultENS_17CookieChangeCauseE(%"struct.net::CookieChangeInfo"* nonnull %11, %"class.net::CanonicalCookie"* dereferenceable(144) %72, %"struct.net::CookieAccessResult"* nonnull %12, i32 %89) #19
  %90 = getelementptr inbounds %"struct.net::(anonymous namespace)::ChangeCausePair_struct", %"struct.net::(anonymous namespace)::ChangeCausePair_struct"* %9, i64 0, i32 1
  %91 = load i8, i8* %90, align 4, !range !3
  %92 = icmp ne i8 %91, 0
  call void @_ZN3net29CookieMonsterChangeDispatcher14DispatchChangeERKNS_16CookieChangeInfoEb(%"class.net::CookieMonsterChangeDispatcher"* %73, %"struct.net::CookieChangeInfo"* nonnull dereferenceable(168) %11, i1 zeroext %92) #19
  call void @_ZN3net16CookieChangeInfoD1Ev(%"struct.net::CookieChangeInfo"* nonnull %11) #19
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %74) #19
  %93 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3
  %94 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_end_node"* %95, %1
  br i1 %96, label %171, label %97

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %97, %101
  %102 = phi %"class.std::__1::__tree_node_base"* [ %104, %101 ], [ %99, %97 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 0, i32 1
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %117, label %101

106:                                              ; preds = %97, %106
  %107 = phi %"class.std::__1::__tree_end_node"* [ %111, %106 ], [ %1, %97 ]
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.std::__1::__tree_node_base"*
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 2
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_end_node"**
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, %108
  br i1 %114, label %106, label %115

115:                                              ; preds = %106
  %116 = bitcast %"class.std::__1::__tree_end_node"* %111 to %"class.std::__1::__tree_node_base"*
  br label %117

117:                                              ; preds = %101, %115
  %118 = phi %"class.std::__1::__tree_node_base"* [ %116, %115 ], [ %102, %101 ]
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %118, i64 1
  %120 = bitcast %"class.std::__1::__tree_node_base"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %118, i64 1, i32 1
  %125 = bitcast %"class.std::__1::__tree_node_base"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %122 to i64
  %128 = select i1 %123, i64 %126, i64 %127
  %129 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %134 = bitcast %"class.std::__1::__tree_end_node"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = zext i8 %131 to i64
  %137 = select i1 %132, i64 %135, i64 %136
  %138 = icmp eq i64 %128, %137
  br i1 %138, label %139, label %171

139:                                              ; preds = %117
  %140 = bitcast %"class.std::__1::__tree_node_base"* %119 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = bitcast %"class.std::__1::__tree_node_base"* %119 to i8*
  %143 = select i1 %123, i8* %141, i8* %142
  %144 = bitcast %"class.std::__1::__tree_end_node"* %17 to i8**
  %145 = load i8*, i8** %144, align 8
  %146 = bitcast %"class.std::__1::__tree_end_node"* %17 to i8*
  %147 = select i1 %132, i8* %145, i8* %146
  %148 = icmp eq i64 %128, 0
  br i1 %123, label %155, label %149

149:                                              ; preds = %139
  br i1 %148, label %171, label %150

150:                                              ; preds = %149
  %151 = ptrtoint i8* %141 to i64
  %152 = trunc i64 %151 to i8
  %153 = load i8, i8* %147, align 1
  %154 = icmp eq i8 %153, %152
  br i1 %154, label %159, label %171

155:                                              ; preds = %139
  br i1 %148, label %171, label %156

156:                                              ; preds = %155
  %157 = call i32 @bcmp(i8* %143, i8* %147, i64 %128) #19
  %158 = icmp eq i32 %157, 0
  br label %171

159:                                              ; preds = %150, %166
  %160 = phi i64 [ %163, %166 ], [ %127, %150 ]
  %161 = phi i8* [ %164, %166 ], [ %142, %150 ]
  %162 = phi i8* [ %167, %166 ], [ %147, %150 ]
  %163 = add i64 %160, -1
  %164 = getelementptr inbounds i8, i8* %161, i64 1
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds i8, i8* %162, i64 1
  %168 = load i8, i8* %164, align 1
  %169 = load i8, i8* %167, align 1
  %170 = icmp eq i8 %168, %169
  br i1 %170, label %159, label %171

171:                                              ; preds = %166, %159, %150, %156, %155, %149, %117, %85
  %172 = phi i1 [ false, %85 ], [ false, %117 ], [ %158, %156 ], [ true, %155 ], [ true, %149 ], [ false, %150 ], [ false, %166 ], [ true, %159 ]
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, null
  br i1 %175, label %176, label %184

176:                                              ; preds = %171
  %177 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %179 = bitcast %"class.std::__1::__tree_end_node"* %178 to %"class.std::__1::__tree_end_node"**
  %180 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 0, i32 0
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, %177
  br i1 %183, label %200, label %191

184:                                              ; preds = %171, %184
  %185 = phi %"class.std::__1::__tree_node_base"* [ %187, %184 ], [ %174, %171 ]
  %186 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %185, i64 0, i32 0, i32 0
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, null
  br i1 %188, label %189, label %184

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %185, i64 0, i32 0
  br label %200

191:                                              ; preds = %176, %191
  %192 = phi %"class.std::__1::__tree_end_node"** [ %195, %191 ], [ %179, %176 ]
  %193 = bitcast %"class.std::__1::__tree_end_node"** %192 to %"class.std::__1::__tree_node_base"**
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %194, i64 0, i32 2
  %196 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 0, i32 0
  %198 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %197, align 8
  %199 = icmp eq %"class.std::__1::__tree_node_base"* %198, %194
  br i1 %199, label %200, label %191

200:                                              ; preds = %191, %189, %176
  %201 = phi %"class.std::__1::__tree_end_node"* [ %190, %189 ], [ %180, %176 ], [ %196, %191 ]
  %202 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %203 = icmp eq %"class.std::__1::__tree_end_node"* %201, %202
  br i1 %203, label %283, label %204

204:                                              ; preds = %200
  br i1 %175, label %205, label %213

205:                                              ; preds = %204
  %206 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %208 = bitcast %"class.std::__1::__tree_end_node"* %207 to %"class.std::__1::__tree_end_node"**
  %209 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %208, align 8
  %210 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %209, i64 0, i32 0
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, %206
  br i1 %212, label %229, label %220

213:                                              ; preds = %204, %213
  %214 = phi %"class.std::__1::__tree_node_base"* [ %216, %213 ], [ %174, %204 ]
  %215 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %214, i64 0, i32 0, i32 0
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  %217 = icmp eq %"class.std::__1::__tree_node_base"* %216, null
  br i1 %217, label %218, label %213

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %214, i64 0, i32 0
  br label %229

220:                                              ; preds = %205, %220
  %221 = phi %"class.std::__1::__tree_end_node"** [ %224, %220 ], [ %208, %205 ]
  %222 = bitcast %"class.std::__1::__tree_end_node"** %221 to %"class.std::__1::__tree_node_base"**
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %223, i64 0, i32 2
  %225 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %224, align 8
  %226 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %225, i64 0, i32 0
  %227 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %226, align 8
  %228 = icmp eq %"class.std::__1::__tree_node_base"* %227, %223
  br i1 %228, label %229, label %220

229:                                              ; preds = %220, %218, %205
  %230 = phi %"class.std::__1::__tree_end_node"* [ %219, %218 ], [ %209, %205 ], [ %225, %220 ]
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %230, i64 4
  %232 = bitcast %"class.std::__1::__tree_end_node"* %231 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %230, i64 5
  %237 = bitcast %"class.std::__1::__tree_end_node"* %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = zext i8 %234 to i64
  %240 = select i1 %235, i64 %238, i64 %239
  %241 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = zext i8 %243 to i64
  %249 = select i1 %244, i64 %247, i64 %248
  %250 = icmp eq i64 %240, %249
  br i1 %250, label %251, label %283

251:                                              ; preds = %229
  %252 = bitcast %"class.std::__1::__tree_end_node"* %231 to i8**
  %253 = load i8*, i8** %252, align 8
  %254 = bitcast %"class.std::__1::__tree_end_node"* %231 to i8*
  %255 = select i1 %235, i8* %253, i8* %254
  %256 = bitcast %"class.std::__1::__tree_end_node"* %17 to i8**
  %257 = load i8*, i8** %256, align 8
  %258 = bitcast %"class.std::__1::__tree_end_node"* %17 to i8*
  %259 = select i1 %244, i8* %257, i8* %258
  %260 = icmp eq i64 %240, 0
  br i1 %235, label %267, label %261

261:                                              ; preds = %251
  br i1 %260, label %290, label %262

262:                                              ; preds = %261
  %263 = ptrtoint i8* %253 to i64
  %264 = trunc i64 %263 to i8
  %265 = load i8, i8* %259, align 1
  %266 = icmp eq i8 %265, %264
  br i1 %266, label %271, label %283

267:                                              ; preds = %251
  br i1 %260, label %290, label %268

268:                                              ; preds = %267
  %269 = call i32 @bcmp(i8* %255, i8* %259, i64 %240) #19
  %270 = icmp eq i32 %269, 0
  br label %283

271:                                              ; preds = %262, %278
  %272 = phi i64 [ %275, %278 ], [ %239, %262 ]
  %273 = phi i8* [ %276, %278 ], [ %254, %262 ]
  %274 = phi i8* [ %279, %278 ], [ %259, %262 ]
  %275 = add i64 %272, -1
  %276 = getelementptr inbounds i8, i8* %273, i64 1
  %277 = icmp eq i64 %275, 0
  br i1 %277, label %290, label %278

278:                                              ; preds = %271
  %279 = getelementptr inbounds i8, i8* %274, i64 1
  %280 = load i8, i8* %276, align 1
  %281 = load i8, i8* %279, align 1
  %282 = icmp eq i8 %280, %281
  br i1 %282, label %271, label %283

283:                                              ; preds = %278, %262, %268, %229, %200
  %284 = phi i1 [ false, %200 ], [ false, %229 ], [ %270, %268 ], [ false, %262 ], [ false, %278 ]
  %285 = or i1 %172, %284
  br i1 %285, label %290, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = add i64 %288, -1
  store i64 %289, i64* %287, align 8
  br label %290

290:                                              ; preds = %271, %261, %267, %283, %286
  %291 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %93, i64 0, i32 0
  %292 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE(%"class.std::__1::__tree.7"* %291, %"class.std::__1::__tree_end_node"* %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122MaybeRunDeleteCallbackEN4base7WeakPtrIN3net13CookieMonsterEEENS0_12OnceCallbackIFvvEEE(%"class.base::WeakPtr"*, %"class.base::OnceCallback"* nocapture) #0 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #19
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i64* %7 to %"class.net::CookieMonster"**
  %9 = load %"class.net::CookieMonster"*, %"class.net::CookieMonster"** %8, align 8
  %10 = icmp eq %"class.net::CookieMonster"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.base::internal::BindStateBase"* %13 to i64
  %17 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %18 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %16, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %21 = bitcast void ()** %20 to void (%"class.base::internal::BindStateBase"*)**
  %22 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %21, align 8
  tail call void %22(%"class.base::internal::BindStateBase"* nonnull %13) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %23

23:                                               ; preds = %11, %6, %2, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK3net18CookieDeletionInfo7MatchesERKNS_15CanonicalCookieERKNS_18CookieAccessParamsE(%"struct.net::CookieDeletionInfo"*, %"class.net::CanonicalCookie"* dereferenceable(144), %"struct.net::CookieAccessParams"* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZN3net18CookieAccessParamsC1ENS_21CookieAccessSemanticsEbNS_21CookieSamePartyStatusE(%"struct.net::CookieAccessParams"*, i32, i1 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster6GetKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %1, i64 %2, i32 1) #19
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i64, i64* %8, align 8
  %15 = zext i8 %12 to i64
  %16 = select i1 %13, i64 %14, i64 %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %46

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #19
  %20 = icmp ugt i64 %2, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #20
  unreachable

23:                                               ; preds = %18
  %24 = icmp ult i64 %2, 23
  br i1 %24, label %33, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %2, 16
  %27 = and i64 %26, -16
  %28 = call i8* @_Znwm(i64 %27) #21
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8, !alias.scope !137
  %30 = or i64 %27, -9223372036854775808
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %30, i64* %31, align 8, !alias.scope !137
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %32, align 8, !alias.scope !137
  br label %38

33:                                               ; preds = %23
  %34 = trunc i64 %2 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1, !alias.scope !137
  %37 = icmp eq i64 %2, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33, %25
  %39 = phi i8* [ %28, %25 ], [ %19, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %1, i64 %2, i1 false) #19
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i8* [ %19, %33 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %2
  store i8 0, i8* %42, align 1
  br i1 %13, label %43, label %45

43:                                               ; preds = %40
  %44 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %44) #21
  br label %45

45:                                               ; preds = %43, %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %19, i64 24, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #19
  br label %46

46:                                               ; preds = %45, %3
  call void @_ZN3net11cookie_util18CookieDomainAsHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #19
  %47 = load i8, i8* %11, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %50) #21
  br label %51

51:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3net15CanonicalCookie12IsEquivalentERKS0_(%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"* dereferenceable(144)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.net::CanonicalCookie"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.net::CanonicalCookie"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %156

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.net::CanonicalCookie"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.net::CanonicalCookie"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %156

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %156

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #19
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %156

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 2
  %54 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = icmp eq i64 %62, %70
  br i1 %71, label %72, label %156

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %76 = select i1 %58, i8* %74, i8* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %80 = select i1 %66, i8* %78, i8* %79
  %81 = icmp eq i64 %62, 0
  br i1 %58, label %88, label %82

82:                                               ; preds = %72
  br i1 %81, label %104, label %83

83:                                               ; preds = %82
  %84 = ptrtoint i8* %74 to i64
  %85 = trunc i64 %84 to i8
  %86 = load i8, i8* %80, align 1
  %87 = icmp eq i8 %86, %85
  br i1 %87, label %89, label %156

88:                                               ; preds = %72
  br i1 %81, label %104, label %101

89:                                               ; preds = %83, %96
  %90 = phi i64 [ %93, %96 ], [ %61, %83 ]
  %91 = phi i8* [ %94, %96 ], [ %75, %83 ]
  %92 = phi i8* [ %97, %96 ], [ %80, %83 ]
  %93 = add i64 %90, -1
  %94 = getelementptr inbounds i8, i8* %91, i64 1
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds i8, i8* %92, i64 1
  %98 = load i8, i8* %94, align 1
  %99 = load i8, i8* %97, align 1
  %100 = icmp eq i8 %98, %99
  br i1 %100, label %89, label %156

101:                                              ; preds = %88
  %102 = tail call i32 @bcmp(i8* %76, i8* %80, i64 %62) #19
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %156

104:                                              ; preds = %89, %82, %88, %101
  %105 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 3
  %106 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 3
  %107 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %109 to i64
  %114 = select i1 %110, i64 %112, i64 %113
  %115 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  %119 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = zext i8 %117 to i64
  %122 = select i1 %118, i64 %120, i64 %121
  %123 = icmp eq i64 %114, %122
  br i1 %123, label %124, label %156

124:                                              ; preds = %104
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %128 = select i1 %110, i8* %126, i8* %127
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  %132 = select i1 %118, i8* %130, i8* %131
  %133 = icmp eq i64 %114, 0
  br i1 %110, label %140, label %134

134:                                              ; preds = %124
  br i1 %133, label %156, label %135

135:                                              ; preds = %134
  %136 = ptrtoint i8* %126 to i64
  %137 = trunc i64 %136 to i8
  %138 = load i8, i8* %132, align 1
  %139 = icmp eq i8 %138, %137
  br i1 %139, label %144, label %156

140:                                              ; preds = %124
  br i1 %133, label %156, label %141

141:                                              ; preds = %140
  %142 = tail call i32 @bcmp(i8* %128, i8* %132, i64 %114) #19
  %143 = icmp eq i32 %142, 0
  br label %156

144:                                              ; preds = %135, %151
  %145 = phi i64 [ %148, %151 ], [ %113, %135 ]
  %146 = phi i8* [ %149, %151 ], [ %127, %135 ]
  %147 = phi i8* [ %152, %151 ], [ %132, %135 ]
  %148 = add i64 %145, -1
  %149 = getelementptr inbounds i8, i8* %146, i64 1
  %150 = icmp eq i64 %148, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds i8, i8* %147, i64 1
  %153 = load i8, i8* %149, align 1
  %154 = load i8, i8* %152, align 1
  %155 = icmp eq i8 %153, %154
  br i1 %155, label %144, label %156

156:                                              ; preds = %44, %96, %151, %144, %31, %83, %135, %52, %2, %141, %140, %134, %104, %101, %49
  %157 = phi i1 [ false, %101 ], [ false, %49 ], [ false, %104 ], [ %143, %141 ], [ true, %140 ], [ true, %134 ], [ false, %2 ], [ false, %52 ], [ false, %135 ], [ false, %83 ], [ false, %31 ], [ true, %144 ], [ false, %151 ], [ false, %96 ], [ false, %44 ]
  ret i1 %157
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net13CookieMonster28MarkCookieStoreAsInitializedEv(%"class.net::CookieMonster"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 5
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster26FetchAllCookiesIfNecessaryEv(%"class.net::CookieMonster"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %2, align 8
  %4 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i8 1, i8* %6, align 1
  tail call void @_ZN3net13CookieMonster15FetchAllCookiesEv(%"class.net::CookieMonster"* %0)
  br label %10

10:                                               ; preds = %5, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster15FetchAllCookiesEv(%"class.net::CookieMonster"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::OnceCallback.172", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %6 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %5, align 8
  %7 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #19
  %8 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19, !noalias !140
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %9) #19, !noalias !140
  %10 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 20, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !140
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %11) #19
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19, !noalias !140
  %13 = call i64 @_ZN4base9TimeTicks3NowEv() #19
  %14 = call i8* @_Znwm(i64 72) #21, !noalias !143
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.173"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS5_10unique_ptrINS2_15CanonicalCookieENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE) #19, !noalias !143
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CookieMonster"*, i64, %"class.std::__1::vector.173"*)* @_ZN3net13CookieMonster8OnLoadedEN4base9TimeTicksENSt3__16vectorINS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE to i64), i64 0>, <2 x i64>* %17, align 8, !noalias !143
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to %"class.base::internal::WeakReference"*
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %19, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %20) #19, !noalias !143
  %21 = getelementptr inbounds i8, i8* %14, i64 56
  %22 = bitcast i8* %21 to i64*
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !143
  store i64 %24, i64* %22, align 8, !noalias !143
  %25 = getelementptr inbounds i8, i8* %14, i64 64
  %26 = bitcast i8* %25 to i64*
  store i64 %13, i64* %26, align 8, !noalias !143
  %27 = bitcast %"class.base::OnceCallback.172"* %3 to i8**
  store i8* %14, i8** %27, align 8, !alias.scope !143
  %28 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12
  %29 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %6 to void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback.172"*, %"class.net::NetLogWithSource"*)***
  %30 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback.172"*, %"class.net::NetLogWithSource"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback.172"*, %"class.net::NetLogWithSource"*)*** %29, align 8
  %31 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback.172"*, %"class.net::NetLogWithSource"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.base::OnceCallback.172"*, %"class.net::NetLogWithSource"*)** %30, align 8
  call void %31(%"class.net::CookieMonster::PersistentCookieStore"* %6, %"class.base::OnceCallback.172"* nonnull %3, %"class.net::NetLogWithSource"* dereferenceable(24) %28) #19
  %32 = getelementptr inbounds %"class.base::OnceCallback.172", %"class.base::OnceCallback.172"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #19
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster8OnLoadedEN4base9TimeTicksENSt3__16vectorINS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.net::CookieMonster"*, i64, %"class.std::__1::vector.173"* nocapture) #0 align 2 {
  %4 = alloca %"class.std::__1::vector.173", align 8
  %5 = bitcast %"class.std::__1::vector.173"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.173"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %2, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.78"** %8 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.78"** %9 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %12, align 8
  %13 = bitcast %"class.std::__1::vector.173"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #19
  call void @_ZN3net13CookieMonster18StoreLoadedCookiesENSt3__16vectorINS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.173"* nonnull %4)
  %14 = inttoptr i64 %6 to %"class.std::__1::unique_ptr.78"*
  %15 = icmp eq i64 %6, 0
  %16 = extractelement <2 x i64> %11, i32 0
  %17 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.78"*
  br i1 %15, label %36, label %18

18:                                               ; preds = %3
  %19 = inttoptr i64 %6 to i8*
  %20 = icmp eq %"class.std::__1::unique_ptr.78"* %17, %14
  br i1 %20, label %34, label %21

21:                                               ; preds = %18, %29
  %22 = phi %"class.std::__1::unique_ptr.78"* [ %23, %29 ], [ %17, %18 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %22, i64 -1
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %24, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %24, align 8
  %26 = icmp eq %"class.net::CanonicalCookie"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %25) #19
  %28 = bitcast %"class.net::CanonicalCookie"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #21
  br label %29

29:                                               ; preds = %27, %21
  %30 = icmp eq %"class.std::__1::unique_ptr.78"* %23, %14
  br i1 %30, label %31, label %21

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.173"* %4 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %18
  %35 = phi i8* [ %33, %31 ], [ %19, %18 ]
  store %"class.std::__1::unique_ptr.78"* %14, %"class.std::__1::unique_ptr.78"** %9, align 8
  tail call void @_ZdlPv(i8* %35) #21
  br label %36

36:                                               ; preds = %3, %34
  %37 = tail call i64 @_ZN4base9TimeTicks3NowEv() #19
  %38 = sub nsw i64 %37, %1
  tail call void @_ZN4base23UmaHistogramCustomTimesEPKcNS_9TimeDeltaES2_S2_i(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i64 %38, i64 1000, i64 60000000, i32 50) #19
  tail call void @_ZN3net13CookieMonster11InvokeQueueEv(%"class.net::CookieMonster"* %0)
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster18StoreLoadedCookiesENSt3__16vectorINS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.net::CookieMonster"*, %"class.std::__1::vector.173"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.140", align 8
  %4 = alloca %"struct.net::CookieAccessResult", align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::vector.140"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #19
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features33kNoCookieChangeNotificationOnLoadE) #19
  %11 = xor i1 %10, true
  %12 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %1, i64 0, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.78"* %13, %15
  br i1 %16, label %166, label %17

17:                                               ; preds = %2
  %18 = bitcast %"struct.net::CookieAccessResult"* %4 to i8*
  %19 = getelementptr inbounds %"struct.net::CookieAccessResult", %"struct.net::CookieAccessResult"* %4, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 15, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__map_iterator"** %8 to i64*
  %26 = bitcast %"class.std::__1::vector.140"* %3 to i64*
  %27 = bitcast %"class.std::__1::__map_iterator"** %9 to i64*
  %28 = bitcast %"struct.net::CookieAccessResult"* %4 to i8*
  br label %33

29:                                               ; preds = %163
  %30 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %7, align 8
  %31 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %8, align 8
  %32 = icmp eq %"class.std::__1::__map_iterator"* %30, %31
  br i1 %32, label %166, label %174

33:                                               ; preds = %17, %163
  %34 = phi %"class.std::__1::unique_ptr.78"* [ %13, %17 ], [ %164, %163 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %18) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -86, i64 20, i1 false)
  call void @_ZN3net18CookieAccessResultC1Ev(%"struct.net::CookieAccessResult"* nonnull %4) #19
  store i32 -1, i32* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #19
  %37 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %36, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %45 = select i1 %41, i8* %43, i8* %44
  %46 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %40 to i64
  %49 = select i1 %41, i64 %47, i64 %48
  call void @_ZN3net13CookieMonster6GetKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %45, i64 %49)
  %50 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %35, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %35, align 8
  %51 = call %"class.std::__1::__tree_end_node"* @_ZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEb(%"class.net::CookieMonster"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.net::CanonicalCookie"* %50, i1 zeroext false, %"struct.net::CookieAccessResult"* nonnull dereferenceable(20) %4, i1 zeroext %11)
  %52 = ptrtoint %"class.std::__1::__tree_end_node"* %51 to i64
  %53 = load i8, i8* %22, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %33
  %56 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %56) #21
  br label %57

57:                                               ; preds = %33, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #19
  %58 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %36, i64 0, i32 6, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = load i64, i64* %24, align 8
  %61 = icmp eq i64 %60, 0
  %62 = icmp slt i64 %59, %60
  %63 = or i1 %61, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %57
  store i64 %59, i64* %24, align 8
  br label %65

65:                                               ; preds = %57, %64
  %66 = bitcast %"class.net::CanonicalCookie"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"class.net::CanonicalCookie"* %36 to i8*
  %73 = select i1 %69, i8* %71, i8* %72
  %74 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %68 to i64
  %77 = select i1 %69, i64 %75, i64 %76
  %78 = getelementptr inbounds i8, i8* %73, i64 %77
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %87, label %82

80:                                               ; preds = %82
  %81 = icmp eq i8* %86, %78
  br i1 %81, label %87, label %82

82:                                               ; preds = %65, %80
  %83 = phi i8* [ %86, %80 ], [ %73, %65 ]
  %84 = load i8, i8* %83, align 1
  %85 = call zeroext i1 @_ZN3net8HttpUtil13IsControlCharEc(i8 signext %84) #19
  %86 = getelementptr inbounds i8, i8* %83, i64 1
  br i1 %85, label %110, label %80

87:                                               ; preds = %80, %65
  %88 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %36, i64 0, i32 1
  %89 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %96 = select i1 %92, i8* %94, i8* %95
  %97 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %91 to i64
  %100 = select i1 %92, i64 %98, i64 %99
  %101 = getelementptr inbounds i8, i8* %96, i64 %100
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %163, label %105

103:                                              ; preds = %105
  %104 = icmp eq i8* %109, %101
  br i1 %104, label %163, label %105

105:                                              ; preds = %87, %103
  %106 = phi i8* [ %109, %103 ], [ %96, %87 ]
  %107 = load i8, i8* %106, align 1
  %108 = call zeroext i1 @_ZN3net8HttpUtil13IsControlCharEc(i8 signext %107) #19
  %109 = getelementptr inbounds i8, i8* %106, i64 1
  br i1 %108, label %110, label %103

110:                                              ; preds = %82, %105
  %111 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %8, align 8
  %112 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %9, align 8
  %113 = icmp eq %"class.std::__1::__map_iterator"* %111, %112
  %114 = ptrtoint %"class.std::__1::__map_iterator"* %112 to i64
  br i1 %113, label %119, label %115

115:                                              ; preds = %110
  %116 = bitcast %"class.std::__1::__map_iterator"* %111 to i64*
  store i64 %52, i64* %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %111, i64 1
  %118 = ptrtoint %"class.std::__1::__map_iterator"* %117 to i64
  store i64 %118, i64* %25, align 8
  br label %163

119:                                              ; preds = %110
  %120 = ptrtoint %"class.std::__1::__map_iterator"* %111 to i64
  %121 = load i64, i64* %26, align 8
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 2305843009213693951
  br i1 %125, label %126, label %128

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::vector.140"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %127) #20
  unreachable

128:                                              ; preds = %119
  %129 = sub i64 %114, %121
  %130 = ashr exact i64 %129, 3
  %131 = icmp ult i64 %130, 1152921504606846975
  br i1 %131, label %132, label %140

132:                                              ; preds = %128
  %133 = ashr exact i64 %129, 2
  %134 = icmp ult i64 %133, %124
  %135 = select i1 %134, i64 %124, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %132
  %138 = icmp ugt i64 %135, 2305843009213693951
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  call void @abort() #20
  unreachable

140:                                              ; preds = %137, %128
  %141 = phi i64 [ %135, %137 ], [ 2305843009213693951, %128 ]
  %142 = shl i64 %141, 3
  %143 = call i8* @_Znwm(i64 %142) #21
  %144 = bitcast i8* %143 to %"class.std::__1::__map_iterator"*
  br label %145

145:                                              ; preds = %140, %132
  %146 = phi i64 [ %141, %140 ], [ 0, %132 ]
  %147 = phi i8* [ %143, %140 ], [ null, %132 ]
  %148 = phi %"class.std::__1::__map_iterator"* [ %144, %140 ], [ null, %132 ]
  %149 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %148, i64 %123
  %150 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %148, i64 %146
  %151 = ptrtoint %"class.std::__1::__map_iterator"* %150 to i64
  %152 = bitcast %"class.std::__1::__map_iterator"* %149 to i64*
  store i64 %52, i64* %152, align 8
  %153 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %149, i64 1
  %154 = ptrtoint %"class.std::__1::__map_iterator"* %153 to i64
  %155 = ptrtoint %"class.std::__1::__map_iterator"* %148 to i64
  %156 = icmp sgt i64 %122, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %145
  %158 = inttoptr i64 %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %158, i64 %122, i1 false) #19
  br label %159

159:                                              ; preds = %157, %145
  store i64 %155, i64* %26, align 8
  store i64 %154, i64* %25, align 8
  store i64 %151, i64* %27, align 8
  %160 = icmp eq i64 %121, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = inttoptr i64 %121 to i8*
  call void @_ZdlPv(i8* %162) #21
  br label %163

163:                                              ; preds = %103, %87, %161, %159, %115
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %18) #19
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %34, i64 1
  %165 = icmp eq %"class.std::__1::unique_ptr.78"* %164, %15
  br i1 %165, label %29, label %33

166:                                              ; preds = %174, %2, %29
  call void @_ZN3net13CookieMonster23EnsureCookiesMapIsValidEv(%"class.net::CookieMonster"* %0)
  %167 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %7, align 8
  %168 = icmp eq %"class.std::__1::__map_iterator"* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %166
  %170 = ptrtoint %"class.std::__1::__map_iterator"* %167 to i64
  %171 = bitcast %"class.std::__1::__map_iterator"** %8 to i64*
  store i64 %170, i64* %171, align 8
  %172 = bitcast %"class.std::__1::__map_iterator"* %167 to i8*
  call void @_ZdlPv(i8* %172) #21
  br label %173

173:                                              ; preds = %166, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #19
  ret void

174:                                              ; preds = %29, %174
  %175 = phi %"class.std::__1::__map_iterator"* [ %176, %174 ], [ %30, %29 ]
  %176 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %175, i64 1
  %177 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %175, i64 0, i32 0, i32 0
  %178 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %177, align 8
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %178, i1 zeroext true, i32 11)
  %179 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %8, align 8
  %180 = icmp eq %"class.std::__1::__map_iterator"* %176, %179
  br i1 %180, label %166, label %174
}

declare void @_ZN4base23UmaHistogramCustomTimesEPKcNS_9TimeDeltaES2_S2_i(i8*, i64, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster11InvokeQueueEv(%"class.net::CookieMonster"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.std::__1::move_iterator", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 11
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"class.std::__1::map.28", %"class.std::__1::map.28"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 1
  %14 = bitcast %"class.std::__1::move_iterator"* %3 to %"class.std::__1::__tree_end_node"**
  %15 = getelementptr inbounds %"class.std::__1::move_iterator", %"class.std::__1::move_iterator"* %3, i64 0, i32 0, i32 0, i32 1
  br label %38

16:                                               ; preds = %76, %1
  %17 = getelementptr inbounds %"class.std::__1::map.28", %"class.std::__1::map.28"* %6, i64 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.267"**
  %19 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.29"* %17, %"class.std::__1::__tree_node.267"* %19) #19
  %20 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %20, align 8
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %7, align 8
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %21, align 8
  %22 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10
  %23 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %103, label %28

28:                                               ; preds = %16
  %29 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %22, i64 0, i32 0
  %32 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %33 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 10, i32 0, i32 1
  %34 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %35 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  br label %79

38:                                               ; preds = %11, %76
  %39 = phi %"class.std::__1::__tree_end_node"* [ %8, %11 ], [ %77, %76 ]
  %40 = load i64, i64* %13, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 7
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.base::circular_deque"*
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 9
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 10
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %14, align 8
  store i64 %48, i64* %15, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE6insertINSt3__113move_iteratorINS_8internal23circular_deque_iteratorIS3_EEEEEENS6_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENS8_29circular_deque_const_iteratorIS3_EESD_SD_(%"class.base::circular_deque"* %12, %"class.base::circular_deque"* %12, i64 %40, %"class.base::circular_deque"* %42, i64 %45, %"class.std::__1::move_iterator"* nonnull byval(%"class.std::__1::move_iterator") align 8 %3)
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 1, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %60

52:                                               ; preds = %38
  %53 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 2
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_end_node"**
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %53
  br i1 %59, label %76, label %67

60:                                               ; preds = %38, %60
  %61 = phi %"class.std::__1::__tree_node_base"* [ %63, %60 ], [ %50, %38 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %60

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 0
  br label %76

67:                                               ; preds = %52, %67
  %68 = phi %"class.std::__1::__tree_end_node"** [ %71, %67 ], [ %55, %52 ]
  %69 = bitcast %"class.std::__1::__tree_end_node"** %68 to %"class.std::__1::__tree_node_base"**
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 0, i32 2
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, %70
  br i1 %75, label %76, label %67

76:                                               ; preds = %67, %52, %65
  %77 = phi %"class.std::__1::__tree_end_node"* [ %66, %65 ], [ %56, %52 ], [ %72, %67 ]
  %78 = icmp eq %"class.std::__1::__tree_end_node"* %77, %9
  br i1 %78, label %16, label %38

79:                                               ; preds = %28, %79
  %80 = phi i64 [ %24, %28 ], [ %100, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #19
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %30, align 8
  %81 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %31, i64 %80) #19
  %82 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.base::OnceCallback"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %82, align 8
  %85 = load i64, i64* %23, align 8
  %86 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %31, i64 %85) #19
  %87 = load i64, i64* %23, align 8
  %88 = add i64 %87, 1
  %89 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %31, i64 %88) #19
  call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %31, %"class.base::OnceCallback"* %86, %"class.base::OnceCallback"* %89) #19
  %90 = load i64, i64* %23, align 8
  %91 = add i64 %90, 1
  %92 = load i64, i64* %33, align 8
  %93 = icmp eq i64 %91, %92
  %94 = select i1 %93, i64 0, i64 %91
  store i64 %94, i64* %23, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %22) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19
  %95 = load i64, i64* %32, align 8
  store i64 %95, i64* %35, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %96 = inttoptr i64 %95 to %"class.base::internal::BindStateBase"*
  %97 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %96, i64 0, i32 1
  %98 = bitcast void ()** %97 to void (%"class.base::internal::BindStateBase"*)**
  %99 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %98, align 8
  call void %99(%"class.base::internal::BindStateBase"* %96) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #19
  %100 = load i64, i64* %23, align 8
  %101 = load i64, i64* %25, align 8
  %102 = icmp eq i64 %100, %101
  br i1 %102, label %103, label %79

103:                                              ; preds = %79, %16
  %104 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 7
  store i8 1, i8* %104, align 2
  %105 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8
  %106 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %105, i64 0, i32 0
  %107 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.std::__1::__tree_node.266"**
  %109 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %108, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %106, %"class.std::__1::__tree_node.266"* %109) #19
  %110 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %105, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %107, %"class.std::__1::__tree_end_node"** %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster11OnKeyLoadedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_6vectorINS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEENS5_ISF_EEEE(%"class.net::CookieMonster"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.173"* nocapture) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::vector.173", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.std::__1::vector.173"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.173"* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %5, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.78"** %10 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr.78"** %11 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %14, align 8
  %15 = bitcast %"class.std::__1::vector.173"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #19
  call void @_ZN3net13CookieMonster18StoreLoadedCookiesENSt3__16vectorINS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.173"* nonnull %5)
  %16 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.78"*
  %17 = icmp eq i64 %8, 0
  %18 = extractelement <2 x i64> %13, i32 0
  %19 = inttoptr i64 %18 to %"class.std::__1::unique_ptr.78"*
  br i1 %17, label %38, label %20

20:                                               ; preds = %3
  %21 = inttoptr i64 %8 to i8*
  %22 = icmp eq %"class.std::__1::unique_ptr.78"* %19, %16
  br i1 %22, label %36, label %23

23:                                               ; preds = %20, %31
  %24 = phi %"class.std::__1::unique_ptr.78"* [ %25, %31 ], [ %19, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %24, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %26, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %26, align 8
  %28 = icmp eq %"class.net::CanonicalCookie"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %27) #19
  %30 = bitcast %"class.net::CanonicalCookie"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #21
  br label %31

31:                                               ; preds = %29, %23
  %32 = icmp eq %"class.std::__1::unique_ptr.78"* %25, %16
  br i1 %32, label %33, label %23

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.173"* %5 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %20
  %37 = phi i8* [ %35, %33 ], [ %21, %20 ]
  store %"class.std::__1::unique_ptr.78"* %16, %"class.std::__1::unique_ptr.78"** %11, align 8
  tail call void @_ZdlPv(i8* %37) #21
  br label %38

38:                                               ; preds = %3, %36
  %39 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0
  %40 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE4findIS7_EENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEERKT_(%"class.std::__1::__tree.29"* %39, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  %41 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %42 = icmp eq %"class.std::__1::__tree_end_node"* %40, %41
  br i1 %42, label %92, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 7
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 9
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 10
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %47, %50
  br i1 %51, label %88, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.base::circular_deque"*
  %54 = bitcast %"class.base::OnceCallback"* %6 to i8*
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.base::internal::VectorBuffer"*
  %57 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 8
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to i64*
  %60 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %61 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  br label %64

64:                                               ; preds = %52, %64
  %65 = phi i64 [ %47, %52 ], [ %85, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #19
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %55, align 8
  %66 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %56, i64 %65) #19
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::OnceCallback"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %57, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %67, align 8
  %70 = load i64, i64* %46, align 8
  %71 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %56, i64 %70) #19
  %72 = load i64, i64* %46, align 8
  %73 = add i64 %72, 1
  %74 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %56, i64 %73) #19
  call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %56, %"class.base::OnceCallback"* %71, %"class.base::OnceCallback"* %74) #19
  %75 = load i64, i64* %46, align 8
  %76 = add i64 %75, 1
  %77 = load i64, i64* %59, align 8
  %78 = icmp eq i64 %76, %77
  %79 = select i1 %78, i64 0, i64 %76
  store i64 %79, i64* %46, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %53) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #19
  %80 = load i64, i64* %57, align 8
  store i64 %80, i64* %61, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %81 = inttoptr i64 %80 to %"class.base::internal::BindStateBase"*
  %82 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %81, i64 0, i32 1
  %83 = bitcast void ()** %82 to void (%"class.base::internal::BindStateBase"*)**
  %84 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %83, align 8
  call void %84(%"class.base::internal::BindStateBase"* %81) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #19
  %85 = load i64, i64* %46, align 8
  %86 = load i64, i64* %49, align 8
  %87 = icmp eq i64 %85, %86
  br i1 %87, label %88, label %64

88:                                               ; preds = %64, %43
  %89 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE(%"class.std::__1::__tree.29"* %39, %"class.std::__1::__tree_end_node"* %40) #19
  %90 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 8, i32 0
  %91 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %90, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  br label %92

92:                                               ; preds = %38, %88
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net18CookieAccessResultC1Ev(%"struct.net::CookieAccessResult"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::__tree_end_node"* @_ZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEb(%"class.net::CookieMonster"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.net::CanonicalCookie"*, i1 zeroext, %"struct.net::CookieAccessResult"* dereferenceable(20), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.GetParamsImpl.435, align 8
  %8 = alloca %"class.std::__1::unique_ptr.78", align 8
  %9 = alloca i8, align 1
  %10 = alloca %class.anon.223, align 8
  %11 = alloca %"struct.std::__1::pair.154", align 8
  %12 = alloca %"struct.net::CookieChangeInfo", align 8
  %13 = alloca %"struct.net::CookieAccessResult", align 4
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.net::CanonicalCookie"* %2, %"class.net::CanonicalCookie"** %14, align 8
  %15 = zext i1 %3 to i8
  store i8 %15, i8* %9, align 1
  %16 = bitcast %class.anon.223* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #19
  %17 = getelementptr inbounds %class.anon.223, %class.anon.223* %10, i64 0, i32 0
  store %"class.std::__1::unique_ptr.78"* %8, %"class.std::__1::unique_ptr.78"** %17, align 8
  %18 = getelementptr inbounds %class.anon.223, %class.anon.223* %10, i64 0, i32 1
  store i8* %9, i8** %18, align 8
  %19 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 1
  %20 = load %"class.net::NetLog"*, %"class.net::NetLog"** %19, align 8
  %21 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %20, i64 0, i32 3
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %30, label %24, !prof !2

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 0
  %26 = bitcast %class.GetParamsImpl.435* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #19
  %27 = getelementptr inbounds %class.GetParamsImpl.435, %class.GetParamsImpl.435* %7, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %class.GetParamsImpl.435, %class.GetParamsImpl.435* %7, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISD_EEEEbRKNS_18CookieAccessResultEbE3$_6EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  store %class.anon.223* %10, %class.anon.223** %28, align 8
  %29 = getelementptr inbounds %class.GetParamsImpl.435, %class.GetParamsImpl.435* %7, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %20, i32 440, %"struct.net::NetLogSource"* dereferenceable(16) %25, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %29) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #19
  br label %30

30:                                               ; preds = %6, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #19
  %31 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %2, i64 0, i32 5, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 18
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %30, %34
  %39 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %40 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %39, align 8
  %41 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %40, null
  %42 = load i8, i8* %9, align 1
  %43 = icmp eq i8 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %50, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %40 to void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)***
  %47 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %47, i64 2
  %49 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %48, align 8
  call void %49(%"class.net::CookieMonster::PersistentCookieStore"* nonnull %40, %"class.net::CanonicalCookie"* dereferenceable(144) %2) #19
  br label %50

50:                                               ; preds = %38, %34, %45
  %51 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3
  %52 = bitcast %"struct.std::__1::pair.154"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #19
  %53 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %58, i64 24, i1 false) #19
  br label %65

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %11, i64 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %60, i8* %62, i64 %64) #19
  br label %65

65:                                               ; preds = %57, %59
  %66 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %11, i64 0, i32 1
  %67 = bitcast %"class.std::__1::unique_ptr.78"* %8 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %14, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.78"* %66 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %51, i64 0, i32 0
  %71 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE15__emplace_multiIJNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEDpOT_(%"class.std::__1::__tree.7"* %70, %"struct.std::__1::pair.154"* nonnull dereferenceable(32) %11) #19
  %72 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %72, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %72, align 8
  %74 = icmp eq %"class.net::CanonicalCookie"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %65
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %73) #19
  %76 = bitcast %"class.net::CanonicalCookie"* %73 to i8*
  call void @_ZdlPv(i8* %76) #21
  br label %77

77:                                               ; preds = %75, %65
  %78 = bitcast %"struct.std::__1::pair.154"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #21
  br label %85

85:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #19
  %86 = getelementptr inbounds %"struct.net::CookieAccessResult", %"struct.net::CookieAccessResult"* %4, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = call zeroext i1 @_ZNK3net15CanonicalCookie25IsEffectivelySameSiteNoneENS_21CookieAccessSemanticsE(%"class.net::CanonicalCookie"* %2, i32 %87) #19
  %89 = xor i1 %88, true
  %90 = zext i1 %89 to i32
  %91 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %2, i64 0, i32 8
  %92 = load i8, i8* %91, align 1, !range !3
  %93 = icmp eq i8 %92, 0
  %94 = select i1 %93, i32 0, i32 2
  %95 = or i32 %94, %90
  %96 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %2, i64 0, i32 7
  %97 = load i8, i8* %96, align 8, !range !3
  %98 = icmp eq i8 %97, 0
  %99 = select i1 %98, i32 0, i32 4
  %100 = or i32 %95, %99
  %101 = load atomic i64, i64* @_ZZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %102 = inttoptr i64 %101 to %"class.base::HistogramBase"*
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %85
  %105 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #19
  %106 = ptrtoint %"class.base::HistogramBase"* %105 to i64
  store atomic i64 %106, i64* @_ZZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %107

107:                                              ; preds = %85, %104
  %108 = phi %"class.base::HistogramBase"* [ %102, %85 ], [ %105, %104 ]
  %109 = bitcast %"class.base::HistogramBase"* %108 to void (%"class.base::HistogramBase"*, i32)***
  %110 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %110, i64 6
  %112 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %111, align 8
  call void %112(%"class.base::HistogramBase"* %108, i32 %100) #19
  br i1 %5, label %113, label %116

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 4
  %115 = bitcast %"struct.net::CookieChangeInfo"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %115) #19
  call void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"* nonnull %13, %"struct.net::CookieAccessResult"* dereferenceable(20) %4) #19
  call void @_ZN3net16CookieChangeInfoC1ERKNS_15CanonicalCookieENS_18CookieAccessResultENS_17CookieChangeCauseE(%"struct.net::CookieChangeInfo"* nonnull %12, %"class.net::CanonicalCookie"* dereferenceable(144) %2, %"struct.net::CookieAccessResult"* nonnull %13, i32 0) #19
  call void @_ZN3net29CookieMonsterChangeDispatcher14DispatchChangeERKNS_16CookieChangeInfoEb(%"class.net::CookieMonsterChangeDispatcher"* %114, %"struct.net::CookieChangeInfo"* nonnull dereferenceable(168) %12, i1 zeroext true) #19
  call void @_ZN3net16CookieChangeInfoD1Ev(%"struct.net::CookieChangeInfo"* nonnull %12) #19
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %13) #19
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %115) #19
  br label %116

116:                                              ; preds = %113, %107
  %117 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %51, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_end_node"* %71, %118
  br i1 %119, label %191, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120, %124
  %125 = phi %"class.std::__1::__tree_node_base"* [ %127, %124 ], [ %122, %120 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 1
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %140, label %124

129:                                              ; preds = %120, %129
  %130 = phi %"class.std::__1::__tree_end_node"* [ %134, %129 ], [ %71, %120 ]
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 2
  %133 = bitcast %"class.std::__1::__tree_end_node"* %132 to %"class.std::__1::__tree_end_node"**
  %134 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, %131
  br i1 %137, label %129, label %138

138:                                              ; preds = %129
  %139 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_node_base"*
  br label %140

140:                                              ; preds = %124, %138
  %141 = phi %"class.std::__1::__tree_node_base"* [ %139, %138 ], [ %125, %124 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 1
  %143 = bitcast %"class.std::__1::__tree_node_base"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  %147 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 1, i32 1
  %148 = bitcast %"class.std::__1::__tree_node_base"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = zext i8 %145 to i64
  %151 = select i1 %146, i64 %149, i64 %150
  %152 = load i8, i8* %54, align 1
  %153 = icmp slt i8 %152, 0
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = zext i8 %152 to i64
  %157 = select i1 %153, i64 %155, i64 %156
  %158 = icmp eq i64 %151, %157
  br i1 %158, label %159, label %191

159:                                              ; preds = %140
  %160 = bitcast %"class.std::__1::__tree_node_base"* %142 to i8**
  %161 = load i8*, i8** %160, align 8
  %162 = bitcast %"class.std::__1::__tree_node_base"* %142 to i8*
  %163 = select i1 %146, i8* %161, i8* %162
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %167 = select i1 %153, i8* %165, i8* %166
  %168 = icmp eq i64 %151, 0
  br i1 %146, label %175, label %169

169:                                              ; preds = %159
  br i1 %168, label %195, label %170

170:                                              ; preds = %169
  %171 = ptrtoint i8* %161 to i64
  %172 = trunc i64 %171 to i8
  %173 = load i8, i8* %167, align 1
  %174 = icmp eq i8 %173, %172
  br i1 %174, label %176, label %191

175:                                              ; preds = %159
  br i1 %168, label %195, label %188

176:                                              ; preds = %170, %183
  %177 = phi i64 [ %180, %183 ], [ %150, %170 ]
  %178 = phi i8* [ %181, %183 ], [ %162, %170 ]
  %179 = phi i8* [ %184, %183 ], [ %167, %170 ]
  %180 = add i64 %177, -1
  %181 = getelementptr inbounds i8, i8* %178, i64 1
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %195, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds i8, i8* %179, i64 1
  %185 = load i8, i8* %181, align 1
  %186 = load i8, i8* %184, align 1
  %187 = icmp eq i8 %185, %186
  br i1 %187, label %176, label %191

188:                                              ; preds = %175
  %189 = call i32 @bcmp(i8* %163, i8* %167, i64 %151) #19
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %183, %170, %188, %140, %116
  %192 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 2
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %193, 1
  store i64 %194, i64* %192, align 8
  br label %195

195:                                              ; preds = %176, %188, %169, %175, %191
  %196 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %14, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %14, align 8
  %197 = icmp eq %"class.net::CanonicalCookie"* %196, null
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %196) #19
  %199 = bitcast %"class.net::CanonicalCookie"* %196 to i8*
  call void @_ZdlPv(i8* %199) #21
  br label %200

200:                                              ; preds = %195, %198
  ret %"class.std::__1::__tree_end_node"* %71
}

; Function Attrs: nounwind
declare void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster23EnsureCookiesMapIsValidEv(%"class.net::CookieMonster"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::multimap"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = inttoptr i64 %5 to %"class.std::__1::__tree_end_node"*
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %90, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.263"**
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %17

17:                                               ; preds = %9, %88
  %18 = phi %"class.std::__1::__tree_end_node"* [ %7, %9 ], [ %82, %88 ]
  %19 = phi i64 [ %5, %9 ], [ %83, %88 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #19
  %20 = inttoptr i64 %19 to %"class.std::__1::__tree_node.263"*
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %27, i64 24, i1 false) #19
  br label %33

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %30, i64 %32) #19
  br label %33

33:                                               ; preds = %26, %28
  %34 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %13, align 8
  %35 = icmp eq %"class.std::__1::__tree_node.263"* %34, null
  br i1 %35, label %81, label %36

36:                                               ; preds = %33
  %37 = load i8, i8* %15, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i64, i64* %12, align 8
  %40 = zext i8 %37 to i64
  %41 = select i1 %38, i64 %39, i64 %40
  %42 = load i8*, i8** %11, align 8
  %43 = select i1 %38, i8* %42, i8* %10
  br label %44

44:                                               ; preds = %70, %36
  %45 = phi %"class.std::__1::__tree_end_node"* [ %6, %36 ], [ %78, %70 ]
  %46 = phi %"class.std::__1::__tree_node.263"* [ %34, %36 ], [ %79, %70 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %46, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__value_type"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %46, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i64 %53, i64 %54
  %56 = icmp ult i64 %55, %41
  %57 = select i1 %56, i64 %55, i64 %41
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"struct.std::__1::__value_type"* %47 to i8*
  %63 = select i1 %51, i8* %61, i8* %62
  %64 = call i32 @memcmp(i8* %43, i8* %63, i64 %57) #19
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %59, %44
  %67 = icmp ult i64 %41, %55
  %68 = zext i1 %56 to i32
  %69 = select i1 %67, i32 -1, i32 %68
  br label %70

70:                                               ; preds = %66, %59
  %71 = phi i32 [ %69, %66 ], [ %64, %59 ]
  %72 = icmp slt i32 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %46, i64 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::__tree_node.263"* %46 to %"class.std::__1::__tree_node.263"**
  %75 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %46, i64 0, i32 0, i32 1
  %76 = bitcast %"class.std::__1::__tree_node_base"** %75 to %"class.std::__1::__tree_node.263"**
  %77 = select i1 %72, %"class.std::__1::__tree_node.263"** %74, %"class.std::__1::__tree_node.263"** %76
  %78 = select i1 %72, %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"* %45
  %79 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %77, align 8
  %80 = icmp eq %"class.std::__1::__tree_node.263"* %79, null
  br i1 %80, label %81, label %44

81:                                               ; preds = %70, %33
  %82 = phi %"class.std::__1::__tree_end_node"* [ %6, %33 ], [ %78, %70 ]
  %83 = ptrtoint %"class.std::__1::__tree_end_node"* %82 to i64
  call void @_ZN3net13CookieMonster26TrimDuplicateCookiesForKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeIS7_NS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISE_EEEEEEPNS1_11__tree_nodeISI_PvEElEEEESO_(%"class.net::CookieMonster"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"* %82)
  %84 = load i8, i8* %15, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %87) #21
  br label %88

88:                                               ; preds = %81, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #19
  %89 = icmp eq %"class.std::__1::__tree_end_node"* %6, %82
  br i1 %89, label %90, label %17

90:                                               ; preds = %88, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE6insertINSt3__113move_iteratorINS_8internal23circular_deque_iteratorIS3_EEEEEENS6_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENS8_29circular_deque_const_iteratorIS3_EESD_SD_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64, %"class.std::__1::move_iterator"* byval(%"class.std::__1::move_iterator") align 8) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %8 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %9 = getelementptr inbounds %"class.std::__1::move_iterator", %"class.std::__1::move_iterator"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::move_iterator", %"class.std::__1::move_iterator"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %10, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %6
  %17 = sub i64 %12, %14
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %10, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %12, %14
  %22 = add i64 %21, %20
  br label %23

23:                                               ; preds = %18, %16
  %24 = phi i64 [ %17, %16 ], [ %22, %18 ]
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, %4
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = sub i64 %4, %26
  br label %35

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %4, %26
  %34 = add i64 %33, %32
  br label %35

35:                                               ; preds = %28, %30
  %36 = phi i64 [ %29, %28 ], [ %34, %30 ]
  %37 = sub i64 %24, %36
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %115, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.base::internal::circular_deque_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #19
  %41 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #19
  %43 = bitcast %"class.base::internal::circular_deque_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #19
  %44 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %8, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #19
  %46 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %2
  br i1 %48, label %49, label %56

49:                                               ; preds = %39
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %37)
  %50 = load i64, i64* %46, align 8
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %44, align 8
  store i64 %50, i64* %45, align 8
  %51 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %37
  %54 = add i64 %53, %52
  %55 = urem i64 %54, %52
  store i64 %55, i64* %46, align 8
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %41, align 8
  store i64 %55, i64* %42, align 8
  br label %59

56:                                               ; preds = %39
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %41, align 8
  store i64 %2, i64* %42, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS3_EES8_(%"class.base::circular_deque"* %0, i64 %37, %"class.base::internal::circular_deque_iterator"* nonnull %7, %"class.base::internal::circular_deque_iterator"* nonnull %8)
  %57 = load i64, i64* %42, align 8
  %58 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %41, align 8
  br label %59

59:                                               ; preds = %56, %49
  %60 = phi %"class.base::circular_deque"* [ %58, %56 ], [ %0, %49 ]
  %61 = phi i64 [ %57, %56 ], [ %55, %49 ]
  %62 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %63 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  %64 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0, i32 1
  br label %65

65:                                               ; preds = %96, %59
  %66 = phi %"class.base::circular_deque"* [ %60, %59 ], [ %105, %96 ]
  %67 = phi i64 [ %61, %59 ], [ %109, %96 ]
  %68 = phi i64 [ %4, %59 ], [ %113, %96 ]
  %69 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %66, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %67, %70
  br i1 %71, label %74, label %72

72:                                               ; preds = %65
  %73 = sub i64 %67, %70
  br label %79

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %66, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %67, %70
  %78 = add i64 %77, %76
  br label %79

79:                                               ; preds = %74, %72
  %80 = phi i64 [ %73, %72 ], [ %78, %74 ]
  %81 = load i64, i64* %45, align 8
  %82 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %44, align 8
  %83 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %82, i64 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %79
  %87 = sub i64 %81, %84
  br label %93

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %82, i64 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %81, %84
  %92 = add i64 %91, %90
  br label %93

93:                                               ; preds = %86, %88
  %94 = phi i64 [ %87, %86 ], [ %92, %88 ]
  %95 = icmp ult i64 %80, %94
  br i1 %95, label %96, label %114

96:                                               ; preds = %93
  %97 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %62, i64 %67)
  %98 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %68) #19
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::OnceCallback"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::OnceCallback"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = load i64, i64* %42, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %42, align 8
  %105 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %41, align 8
  %106 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %105, i64 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %104, %107
  %109 = select i1 %108, i64 0, i64 %104
  store i64 %109, i64* %42, align 8
  %110 = add i64 %68, 1
  %111 = load i64, i64* %64, align 8
  %112 = icmp eq i64 %110, %111
  %113 = select i1 %112, i64 0, i64 %110
  br label %65

114:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #19
  br label %115

115:                                              ; preds = %35, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster26TrimDuplicateCookiesForKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeIS7_NS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISE_EEEEEEPNS1_11__tree_nodeISI_PvEElEEEESO_(%"class.net::CookieMonster"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::__tuple_less", align 1
  %6 = alloca %"struct.std::__1::__tuple_less", align 1
  %7 = alloca %"class.std::__1::map.186", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::map.186"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %12, align 8
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %2, %3
  br i1 %17, label %478, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tuple_leaf.197"* %21 to i8*
  %23 = getelementptr inbounds %"class.std::__1::__tuple_leaf.197", %"class.std::__1::__tuple_leaf.197"* %21, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::__tuple_leaf.198"* %24 to i8*
  %26 = getelementptr inbounds %"class.std::__1::__tuple_leaf.198", %"class.std::__1::__tuple_leaf.198"* %24, i64 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.408"**
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %6, i64 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  %31 = bitcast %"class.std::__1::tuple"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::__tuple_leaf.197"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::__tuple_leaf.197", %"class.std::__1::__tuple_leaf.197"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::__tuple_leaf.198"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::__tuple_leaf.198", %"class.std::__1::__tuple_leaf.198"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::map.186"* %7 to i64*
  br label %46

44:                                               ; preds = %285
  %45 = icmp eq i32 %180, 0
  br i1 %45, label %478, label %288

46:                                               ; preds = %18, %285
  %47 = phi %"class.std::__1::__tree_end_node"* [ %2, %18 ], [ %286, %285 ]
  %48 = phi i32 [ 0, %18 ], [ %180, %285 ]
  %49 = ptrtoint %"class.std::__1::__tree_end_node"* %47 to i64
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 7
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.net::CanonicalCookie"**
  %52 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 72, i1 false)
  %53 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %52, i64 0, i32 2
  %54 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %52, i64 0, i32 3
  %55 = bitcast %"class.net::CanonicalCookie"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1, !noalias !148
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %46
  %60 = bitcast %"class.net::CanonicalCookie"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %60, i64 24, i1 false) #19
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8, !noalias !148
  %64 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8, !noalias !148
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %20, i8* %63, i64 %65) #19
  br label %66

66:                                               ; preds = %61, %59
  %67 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1, !noalias !148
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  %72 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %72, i64 24, i1 false) #19
  br label %78

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8, !noalias !148
  %76 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8, !noalias !148
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %75, i64 %77) #19
  br label %78

78:                                               ; preds = %73, %71
  %79 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1, !noalias !148
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  %84 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %84, i64 24, i1 false) #19
  br label %90

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8, !noalias !148
  %88 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %52, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8, !noalias !148
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %26, i8* %87, i64 %89) #19
  br label %90

90:                                               ; preds = %83, %85
  %91 = load %"class.std::__1::__tree_node.408"*, %"class.std::__1::__tree_node.408"** %27, align 8
  %92 = icmp eq %"class.std::__1::__tree_node.408"* %91, null
  br i1 %92, label %118, label %93

93:                                               ; preds = %90, %114
  %94 = phi %"class.std::__1::__tree_node.408"* [ %117, %114 ], [ %91, %90 ]
  %95 = phi %"class.std::__1::__tree_node_base"** [ %116, %114 ], [ %13, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %94, i64 0, i32 1, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #19
  %97 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_S9_EEESA_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %5, %"class.std::__1::tuple"* nonnull dereferenceable(72) %8, %"class.std::__1::tuple"* dereferenceable(72) %96) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #19
  br i1 %97, label %98, label %104

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %94, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %114

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %94, i64 0, i32 0, i32 0
  br label %118

104:                                              ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #19
  %105 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_S9_EEESA_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %6, %"class.std::__1::tuple"* dereferenceable(72) %96, %"class.std::__1::tuple"* nonnull dereferenceable(72) %8) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #19
  br i1 %105, label %106, label %112

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %94, i64 0, i32 0, i32 1
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %94, i64 0, i32 0, i32 0
  br label %118

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %94, i64 0, i32 0, i32 0
  br label %118

114:                                              ; preds = %106, %98
  %115 = phi %"class.std::__1::__tree_node_base"* [ %100, %98 ], [ %108, %106 ]
  %116 = phi %"class.std::__1::__tree_node_base"** [ %99, %98 ], [ %107, %106 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"* %115 to %"class.std::__1::__tree_node.408"*
  br label %93

118:                                              ; preds = %90, %112, %110, %102
  %119 = phi %"class.std::__1::__tree_end_node"* [ %103, %102 ], [ %111, %110 ], [ %113, %112 ], [ %15, %90 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %99, %102 ], [ %107, %110 ], [ %95, %112 ], [ %30, %90 ]
  %121 = bitcast %"class.std::__1::__tree_node_base"** %120 to %"class.std::__1::__tree_node.408"**
  %122 = load %"class.std::__1::__tree_node.408"*, %"class.std::__1::__tree_node.408"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node.408"* %122, null
  br i1 %123, label %124, label %173

124:                                              ; preds = %118
  %125 = call i8* @_Znwm(i64 128) #21, !noalias !153
  %126 = getelementptr inbounds i8, i8* %125, i64 32
  %127 = load i8, i8* %32, align 1, !noalias !153
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* nonnull align 8 %19, i64 24, i1 false) #19, !noalias !153
  br label %134

130:                                              ; preds = %124
  %131 = bitcast i8* %126 to %"class.std::__1::basic_string"*
  %132 = load i8*, i8** %33, align 8, !noalias !153
  %133 = load i64, i64* %34, align 8, !noalias !153
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %131, i8* %132, i64 %133) #19, !noalias !153
  br label %134

134:                                              ; preds = %130, %129
  %135 = getelementptr inbounds i8, i8* %125, i64 56
  %136 = load i8, i8* %36, align 1, !noalias !153
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %22, i64 24, i1 false) #19, !noalias !153
  br label %143

139:                                              ; preds = %134
  %140 = bitcast i8* %135 to %"class.std::__1::basic_string"*
  %141 = load i8*, i8** %37, align 8, !noalias !153
  %142 = load i64, i64* %38, align 8, !noalias !153
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %140, i8* %141, i64 %142) #19, !noalias !153
  br label %143

143:                                              ; preds = %139, %138
  %144 = getelementptr inbounds i8, i8* %125, i64 80
  %145 = load i8, i8* %40, align 1, !noalias !153
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %25, i64 24, i1 false) #19, !noalias !153
  br label %152

148:                                              ; preds = %143
  %149 = bitcast i8* %144 to %"class.std::__1::basic_string"*
  %150 = load i8*, i8** %41, align 8, !noalias !153
  %151 = load i64, i64* %42, align 8, !noalias !153
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %149, i8* %150, i64 %151) #19, !noalias !153
  br label %152

152:                                              ; preds = %148, %147
  %153 = getelementptr inbounds i8, i8* %125, i64 112
  %154 = getelementptr inbounds i8, i8* %125, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #19, !noalias !153
  %155 = bitcast i8* %154 to i8**
  store i8* %153, i8** %155, align 8, !noalias !153
  %156 = bitcast i8* %125 to %"class.std::__1::__tree_node.408"*
  %157 = bitcast i8* %125 to %"class.std::__1::__tree_node_base"*
  %158 = getelementptr inbounds i8, i8* %125, i64 16
  %159 = bitcast i8* %158 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %159, align 8
  %160 = bitcast %"class.std::__1::__tree_node_base"** %120 to i8**
  store i8* %125, i8** %160, align 8
  %161 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %161, i64 0, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %152
  %166 = ptrtoint %"class.std::__1::__tree_node_base"* %163 to i64
  store i64 %166, i64* %43, align 8
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  br label %168

168:                                              ; preds = %165, %152
  %169 = phi %"class.std::__1::__tree_node_base"* [ %157, %152 ], [ %167, %165 ]
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %13, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %170, %"class.std::__1::__tree_node_base"* %169) #19
  %171 = load i64, i64* %14, align 8
  %172 = add i64 %171, 1
  store i64 %172, i64* %14, align 8
  br label %173

173:                                              ; preds = %118, %168
  %174 = phi %"class.std::__1::__tree_node.408"* [ %156, %168 ], [ %122, %118 ]
  %175 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %174, i64 0, i32 1, i32 0, i32 1
  %176 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %174, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %177 = load i64, i64* %176, align 8
  %178 = icmp ne i64 %177, 0
  %179 = zext i1 %178 to i32
  %180 = add nuw nsw i32 %48, %179
  %181 = call i8* @_Znwm(i64 40) #21, !noalias !156
  %182 = getelementptr inbounds i8, i8* %181, i64 32
  %183 = bitcast i8* %182 to i64*
  store i64 %49, i64* %183, align 8, !noalias !156
  %184 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %174, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %185 = bitcast %"class.std::__1::__tree_end_node"* %184 to %"class.std::__1::__tree_node.410"**
  %186 = load %"class.std::__1::__tree_node.410"*, %"class.std::__1::__tree_node.410"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node.410"* %186, null
  br i1 %187, label %219, label %188

188:                                              ; preds = %173
  %189 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %51, align 8
  %190 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %189, i64 0, i32 4, i32 0, i32 0
  %191 = load i64, i64* %190, align 8
  br label %192

192:                                              ; preds = %216, %188
  %193 = phi %"class.std::__1::__tree_node.410"* [ %218, %216 ], [ %186, %188 ]
  %194 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %193, i64 0, i32 1
  %195 = bitcast %"class.std::__1::__map_iterator"* %194 to %"class.std::__1::__tree_node.263"**
  %196 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %196, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %198 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %197, align 8
  %199 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %198, i64 0, i32 4, i32 0, i32 0
  %200 = load i64, i64* %199, align 8
  %201 = icmp sgt i64 %191, %200
  br i1 %201, label %202, label %209

202:                                              ; preds = %192
  %203 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %193, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %206, label %216

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %193, i64 0, i32 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %193, i64 0, i32 0, i32 0
  br label %221

209:                                              ; preds = %192
  %210 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %193, i64 0, i32 0, i32 1
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, null
  br i1 %212, label %213, label %216

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %193, i64 0, i32 0, i32 1
  %215 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %193, i64 0, i32 0, i32 0
  br label %221

216:                                              ; preds = %209, %202
  %217 = phi %"class.std::__1::__tree_node_base"* [ %204, %202 ], [ %211, %209 ]
  %218 = bitcast %"class.std::__1::__tree_node_base"* %217 to %"class.std::__1::__tree_node.410"*
  br label %192

219:                                              ; preds = %173
  %220 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  br label %221

221:                                              ; preds = %219, %213, %206
  %222 = phi %"class.std::__1::__tree_end_node"* [ %184, %219 ], [ %208, %206 ], [ %215, %213 ]
  %223 = phi %"class.std::__1::__tree_node_base"** [ %220, %219 ], [ %207, %206 ], [ %214, %213 ]
  %224 = bitcast i8* %181 to %"class.std::__1::__tree_node_base"*
  %225 = getelementptr inbounds i8, i8* %181, i64 16
  %226 = bitcast i8* %225 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %222, %"class.std::__1::__tree_end_node"** %226, align 8
  %227 = bitcast %"class.std::__1::__tree_node_base"** %223 to i8**
  store i8* %181, i8** %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %175, i64 0, i32 0, i32 0
  %229 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %229, i64 0, i32 0
  %231 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %230, align 8
  %232 = icmp eq %"class.std::__1::__tree_node_base"* %231, null
  br i1 %232, label %237, label %233

233:                                              ; preds = %221
  %234 = ptrtoint %"class.std::__1::__tree_node_base"* %231 to i64
  %235 = bitcast %"class.std::__1::multiset"* %175 to i64*
  store i64 %234, i64* %235, align 8
  %236 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  br label %237

237:                                              ; preds = %221, %233
  %238 = phi %"class.std::__1::__tree_node_base"* [ %224, %221 ], [ %236, %233 ]
  %239 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %174, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %240, %"class.std::__1::__tree_node_base"* %238) #19
  %241 = load i64, i64* %176, align 8
  %242 = add i64 %241, 1
  store i64 %242, i64* %176, align 8
  %243 = load i8, i8* %40, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %237
  %246 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %246) #21
  br label %247

247:                                              ; preds = %245, %237
  %248 = load i8, i8* %36, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %247
  %251 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %251) #21
  br label %252

252:                                              ; preds = %250, %247
  %253 = load i8, i8* %32, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %257

255:                                              ; preds = %252
  %256 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %256) #21
  br label %257

257:                                              ; preds = %252, %255
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #19
  %258 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 1, i32 0
  %259 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  %260 = icmp eq %"class.std::__1::__tree_node_base"* %259, null
  br i1 %260, label %261, label %269

261:                                              ; preds = %257
  %262 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node_base"*
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 2
  %264 = bitcast %"class.std::__1::__tree_end_node"* %263 to %"class.std::__1::__tree_end_node"**
  %265 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 0, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, %262
  br i1 %268, label %285, label %276

269:                                              ; preds = %257, %269
  %270 = phi %"class.std::__1::__tree_node_base"* [ %272, %269 ], [ %259, %257 ]
  %271 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %272 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %271, align 8
  %273 = icmp eq %"class.std::__1::__tree_node_base"* %272, null
  br i1 %273, label %274, label %269

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0
  br label %285

276:                                              ; preds = %261, %276
  %277 = phi %"class.std::__1::__tree_end_node"** [ %280, %276 ], [ %264, %261 ]
  %278 = bitcast %"class.std::__1::__tree_end_node"** %277 to %"class.std::__1::__tree_node_base"**
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 2
  %281 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %280, align 8
  %282 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %281, i64 0, i32 0
  %283 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %282, align 8
  %284 = icmp eq %"class.std::__1::__tree_node_base"* %283, %279
  br i1 %284, label %285, label %276

285:                                              ; preds = %276, %261, %274
  %286 = phi %"class.std::__1::__tree_end_node"* [ %275, %274 ], [ %265, %261 ], [ %281, %276 ]
  %287 = icmp eq %"class.std::__1::__tree_end_node"* %286, %3
  br i1 %287, label %44, label %46

288:                                              ; preds = %44
  %289 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %290 = icmp eq %"class.std::__1::__tree_end_node"* %289, %15
  br i1 %290, label %478, label %291

291:                                              ; preds = %288
  %292 = bitcast %"class.logging::LogMessage"* %9 to i8*
  %293 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %294 = bitcast %"class.std::__1::basic_ostringstream"* %293 to %"class.std::__1::basic_ostream"*
  %295 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %296 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %296, i64 0, i32 1, i32 0
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %300 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %304

304:                                              ; preds = %291, %475
  %305 = phi %"class.std::__1::__tree_end_node"* [ %289, %291 ], [ %476, %475 ]
  %306 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 4
  %307 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 13
  %308 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 15
  %309 = bitcast %"class.std::__1::__tree_end_node"* %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = icmp ult i64 %310, 2
  br i1 %311, label %447, label %312

312:                                              ; preds = %304
  %313 = bitcast %"class.std::__1::__tree_end_node"* %307 to %"class.std::__1::__tree_end_node"**
  %314 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %313, align 8
  %315 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %314, i64 1, i32 0
  %316 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %317 = icmp eq %"class.std::__1::__tree_node_base"* %316, null
  br i1 %317, label %318, label %326

318:                                              ; preds = %312
  %319 = bitcast %"class.std::__1::__tree_end_node"* %314 to %"class.std::__1::__tree_node_base"*
  %320 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %314, i64 2
  %321 = bitcast %"class.std::__1::__tree_end_node"* %320 to %"class.std::__1::__tree_end_node"**
  %322 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %321, align 8
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 0, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, %319
  br i1 %325, label %343, label %334

326:                                              ; preds = %312, %326
  %327 = phi %"class.std::__1::__tree_node_base"* [ %329, %326 ], [ %316, %312 ]
  %328 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %327, i64 0, i32 0, i32 0
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node_base"* %329, null
  br i1 %330, label %331, label %326

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %327, i64 0, i32 0
  %333 = bitcast %"class.std::__1::__tree_end_node"* %314 to %"class.std::__1::__tree_node_base"*
  br label %343

334:                                              ; preds = %318, %334
  %335 = phi %"class.std::__1::__tree_end_node"** [ %338, %334 ], [ %321, %318 ]
  %336 = bitcast %"class.std::__1::__tree_end_node"** %335 to %"class.std::__1::__tree_node_base"**
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %337, i64 0, i32 2
  %339 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %338, align 8
  %340 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %339, i64 0, i32 0
  %341 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %340, align 8
  %342 = icmp eq %"class.std::__1::__tree_node_base"* %341, %337
  br i1 %342, label %343, label %334

343:                                              ; preds = %334, %331, %318
  %344 = phi %"class.std::__1::__tree_node_base"* [ %333, %331 ], [ %319, %318 ], [ %319, %334 ]
  %345 = phi %"class.std::__1::__tree_end_node"* [ %332, %331 ], [ %322, %318 ], [ %339, %334 ]
  %346 = ptrtoint %"class.std::__1::__tree_end_node"* %345 to i64
  %347 = bitcast %"class.std::__1::__tree_end_node"* %307 to i64*
  store i64 %346, i64* %347, align 8
  %348 = add i64 %310, -1
  store i64 %348, i64* %309, align 8
  %349 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 14, i32 0
  %350 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %349, align 8
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %350, %"class.std::__1::__tree_node_base"* %344) #19
  %351 = bitcast %"class.std::__1::__tree_end_node"* %314 to i8*
  call void @_ZdlPv(i8* %351) #21
  %352 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #19
  br i1 %352, label %353, label %408

353:                                              ; preds = %343
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %292) #19
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 946, i32 2) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #19
  %354 = load i64, i64* %309, align 8
  %355 = trunc i64 %354 to i32
  %356 = load i8, i8* %297, align 1
  %357 = icmp slt i8 %356, 0
  %358 = load i8*, i8** %298, align 8
  %359 = select i1 %357, i8* %358, i8* %299
  %360 = bitcast %"class.std::__1::__tree_end_node"* %306 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %360, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %353
  %365 = bitcast %"class.std::__1::__tree_end_node"* %306 to i8**
  %366 = load i8*, i8** %365, align 8
  br label %369

367:                                              ; preds = %353
  %368 = bitcast %"class.std::__1::__tree_end_node"* %306 to i8*
  br label %369

369:                                              ; preds = %364, %367
  %370 = phi i8* [ %366, %364 ], [ %368, %367 ]
  %371 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 7
  %372 = bitcast %"class.std::__1::__tree_end_node"* %371 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  %374 = load i8, i8* %373, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %379

376:                                              ; preds = %369
  %377 = bitcast %"class.std::__1::__tree_end_node"* %371 to i8**
  %378 = load i8*, i8** %377, align 8
  br label %381

379:                                              ; preds = %369
  %380 = bitcast %"class.std::__1::__tree_end_node"* %371 to i8*
  br label %381

381:                                              ; preds = %376, %379
  %382 = phi i8* [ %378, %376 ], [ %380, %379 ]
  %383 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 10
  %384 = bitcast %"class.std::__1::__tree_end_node"* %383 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  %386 = load i8, i8* %385, align 1
  %387 = icmp slt i8 %386, 0
  br i1 %387, label %388, label %391

388:                                              ; preds = %381
  %389 = bitcast %"class.std::__1::__tree_end_node"* %383 to i8**
  %390 = load i8*, i8** %389, align 8
  br label %393

391:                                              ; preds = %381
  %392 = bitcast %"class.std::__1::__tree_end_node"* %383 to i8*
  br label %393

393:                                              ; preds = %388, %391
  %394 = phi i8* [ %390, %388 ], [ %392, %391 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.12, i64 0, i64 0), i32 %355, i8* %359, i8* %370, i8* %382, i8* %394) #19
  %395 = load i8, i8* %301, align 1
  %396 = icmp slt i8 %395, 0
  %397 = load i8*, i8** %302, align 8
  %398 = load i64, i64* %303, align 8
  %399 = zext i8 %395 to i64
  %400 = select i1 %396, i8* %397, i8* %295
  %401 = select i1 %396, i64 %398, i64 %399
  %402 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %294, i8* %400, i64 %401) #19
  %403 = load i8, i8* %301, align 1
  %404 = icmp slt i8 %403, 0
  br i1 %404, label %405, label %407

405:                                              ; preds = %393
  %406 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %406) #21
  br label %407

407:                                              ; preds = %393, %405
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %295) #19
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %292) #19
  br label %408

408:                                              ; preds = %343, %407
  %409 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %313, align 8
  %410 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 14
  %411 = icmp eq %"class.std::__1::__tree_end_node"* %409, %410
  br i1 %411, label %447, label %412

412:                                              ; preds = %408, %444
  %413 = phi %"class.std::__1::__tree_end_node"* [ %445, %444 ], [ %409, %408 ]
  %414 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %413, i64 4
  %415 = bitcast %"class.std::__1::__tree_end_node"* %414 to %"class.std::__1::__tree_end_node"**
  %416 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %415, align 8
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %416, i1 zeroext true, i32 4)
  %417 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %413, i64 1, i32 0
  %418 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %417, align 8
  %419 = icmp eq %"class.std::__1::__tree_node_base"* %418, null
  br i1 %419, label %420, label %428

420:                                              ; preds = %412
  %421 = bitcast %"class.std::__1::__tree_end_node"* %413 to %"class.std::__1::__tree_node_base"*
  %422 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %413, i64 2
  %423 = bitcast %"class.std::__1::__tree_end_node"* %422 to %"class.std::__1::__tree_end_node"**
  %424 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %423, align 8
  %425 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %424, i64 0, i32 0
  %426 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %425, align 8
  %427 = icmp eq %"class.std::__1::__tree_node_base"* %426, %421
  br i1 %427, label %444, label %435

428:                                              ; preds = %412, %428
  %429 = phi %"class.std::__1::__tree_node_base"* [ %431, %428 ], [ %418, %412 ]
  %430 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %429, i64 0, i32 0, i32 0
  %431 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %430, align 8
  %432 = icmp eq %"class.std::__1::__tree_node_base"* %431, null
  br i1 %432, label %433, label %428

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %429, i64 0, i32 0
  br label %444

435:                                              ; preds = %420, %435
  %436 = phi %"class.std::__1::__tree_end_node"** [ %439, %435 ], [ %423, %420 ]
  %437 = bitcast %"class.std::__1::__tree_end_node"** %436 to %"class.std::__1::__tree_node_base"**
  %438 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %437, align 8
  %439 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %438, i64 0, i32 2
  %440 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %439, align 8
  %441 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %440, i64 0, i32 0
  %442 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %441, align 8
  %443 = icmp eq %"class.std::__1::__tree_node_base"* %442, %438
  br i1 %443, label %444, label %435

444:                                              ; preds = %435, %420, %433
  %445 = phi %"class.std::__1::__tree_end_node"* [ %434, %433 ], [ %424, %420 ], [ %440, %435 ]
  %446 = icmp eq %"class.std::__1::__tree_end_node"* %445, %410
  br i1 %446, label %447, label %412

447:                                              ; preds = %444, %408, %304
  %448 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 1, i32 0
  %449 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %448, align 8
  %450 = icmp eq %"class.std::__1::__tree_node_base"* %449, null
  br i1 %450, label %451, label %459

451:                                              ; preds = %447
  %452 = bitcast %"class.std::__1::__tree_end_node"* %305 to %"class.std::__1::__tree_node_base"*
  %453 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %305, i64 2
  %454 = bitcast %"class.std::__1::__tree_end_node"* %453 to %"class.std::__1::__tree_end_node"**
  %455 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %454, align 8
  %456 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %455, i64 0, i32 0
  %457 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %456, align 8
  %458 = icmp eq %"class.std::__1::__tree_node_base"* %457, %452
  br i1 %458, label %475, label %466

459:                                              ; preds = %447, %459
  %460 = phi %"class.std::__1::__tree_node_base"* [ %462, %459 ], [ %449, %447 ]
  %461 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %460, i64 0, i32 0, i32 0
  %462 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %461, align 8
  %463 = icmp eq %"class.std::__1::__tree_node_base"* %462, null
  br i1 %463, label %464, label %459

464:                                              ; preds = %459
  %465 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %460, i64 0, i32 0
  br label %475

466:                                              ; preds = %451, %466
  %467 = phi %"class.std::__1::__tree_end_node"** [ %470, %466 ], [ %454, %451 ]
  %468 = bitcast %"class.std::__1::__tree_end_node"** %467 to %"class.std::__1::__tree_node_base"**
  %469 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %468, align 8
  %470 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %469, i64 0, i32 2
  %471 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %470, align 8
  %472 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %471, i64 0, i32 0
  %473 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %472, align 8
  %474 = icmp eq %"class.std::__1::__tree_node_base"* %473, %469
  br i1 %474, label %475, label %466

475:                                              ; preds = %466, %451, %464
  %476 = phi %"class.std::__1::__tree_end_node"* [ %465, %464 ], [ %455, %451 ], [ %471, %466 ]
  %477 = icmp eq %"class.std::__1::__tree_end_node"* %476, %15
  br i1 %477, label %478, label %304

478:                                              ; preds = %475, %4, %288, %44
  %479 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %7, i64 0, i32 0
  %480 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.408"**
  %481 = load %"class.std::__1::__tree_node.408"*, %"class.std::__1::__tree_node.408"** %480, align 8
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_8multisetINS_14__map_iteratorINS_15__tree_iteratorINS1_IS8_NS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISF_EEEEEEPNS_11__tree_nodeISJ_PvEElEEEENSE_12_GLOBAL__N_123OrderByCreationTimeDescENS6_ISP_EEEEEENS_19__map_value_compareIS9_SU_NS_4lessIS9_EELb1EEENS6_ISU_EEE7destroyEPNSK_ISU_SL_EE(%"class.std::__1::__tree.187"* nonnull %479, %"class.std::__1::__tree_node.408"* %481) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster19RecordPeriodicStatsERKN4base4TimeE(%"class.net::CookieMonster"*, %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 17, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sub nsw i64 %6, %4
  %8 = icmp slt i64 %7, 600000001
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN3net13CookieMonster21DoRecordPeriodicStatsEv(%"class.net::CookieMonster"* %0)
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = load i64, i64* %5, align 8
  store i64 %12, i64* %3, align 8
  br label %13

13:                                               ; preds = %9, %11, %2
  ret void
}

declare void @_ZNK3net15CanonicalCookie20IncludeForRequestURLERK4GURLRKNS_13CookieOptionsERKNS_18CookieAccessParamsE(%"struct.net::CookieAccessResult"* sret, %"class.net::CanonicalCookie"*, %class.GURL* dereferenceable(120), %"class.net::CookieOptions"* dereferenceable(32), %"struct.net::CookieAccessParams"* dereferenceable(12)) local_unnamed_addr #1

declare i32 @_ZN3net11cookie_util18GetSamePartyStatusERKNS_15CanonicalCookieERKNS_13CookieOptionsE(%"class.net::CanonicalCookie"* dereferenceable(144), %"class.net::CookieOptions"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net21CookieInclusionStatus9IsIncludeEv(%"class.net::CookieInclusionStatus"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net21CookieInclusionStatus22HasOnlyExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"*, i32) local_unnamed_addr #1

declare void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"* dereferenceable(144)) unnamed_addr #1

declare void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"*, %"struct.net::CookieAccessResult"* dereferenceable(20)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster30InternalUpdateCookieAccessTimeEPNS_15CanonicalCookieERKN4base4TimeE(%"class.net::CookieMonster"* nocapture readonly, %"class.net::CanonicalCookie"*, %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 6, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sub nsw i64 %7, %5
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 14, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  store i64 %7, i64* %4, align 8
  %13 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 5, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 18
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %12, %16
  %21 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 13, i32 0
  %22 = load %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CookieMonster::PersistentCookieStore"** %21, align 8
  %23 = icmp eq %"class.net::CookieMonster::PersistentCookieStore"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.net::CookieMonster::PersistentCookieStore"* %22 to void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)***
  %26 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)**, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %26, i64 3
  %28 = load void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)*, void (%"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::CanonicalCookie"*)** %27, align 8
  tail call void %28(%"class.net::CookieMonster::PersistentCookieStore"* nonnull %22, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #19
  br label %29

29:                                               ; preds = %20, %16, %3, %24
  ret void
}

declare i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13CookieMonster31IsCookieSentToSamePortThatSetItERK4GURLiNS_18CookieSourceSchemeE(%class.GURL* dereferenceable(120), i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::allocator.59", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  switch i32 %1, label %8 [
    i32 -1, label %101
    i32 -2, label %7
  ]

7:                                                ; preds = %3
  br label %101

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %0) #19
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %101, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #19
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load i32, i32* %13, align 4, !noalias !159
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #19, !alias.scope !159
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %32

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %20 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i32, i32* %20, align 4, !noalias !159
  %22 = sext i32 %21 to i64
  %23 = sext i32 %14 to i64
  %24 = getelementptr inbounds %"class.std::__1::allocator.59", %"class.std::__1::allocator.59"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #19, !noalias !159
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %19, i64 %22, i64 %23, %"class.std::__1::allocator.59"* nonnull dereferenceable(1) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #19, !noalias !159
  %25 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  br label %32

32:                                               ; preds = %16, %18
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %17, %16 ], [ %25, %18 ]
  %34 = phi i64 [ 0, %16 ], [ %31, %18 ]
  %35 = phi i8* [ null, %16 ], [ %29, %18 ]
  %36 = phi i8 [ 0, %16 ], [ %27, %18 ]
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %38 = icmp slt i8 %36, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = zext i8 %36 to i64
  %41 = select i1 %38, i8* %35, i8* %12
  %42 = select i1 %38, i64 %34, i64 %40
  %43 = trunc i64 %42 to i32
  %44 = call i32 @_ZN3url20DefaultPortForSchemeEPKci(i8* %41, i32 %43) #19
  %45 = icmp eq i32 %44, %9
  %46 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #19
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %50 = icmp eq i32 %2, 2
  %51 = select i1 %50, [0 x i8]* @_ZN3url12kHttpsSchemeE, [0 x i8]* @_ZN3url11kHttpSchemeE
  %52 = getelementptr inbounds [0 x i8], [0 x i8]* %51, i64 0, i64 0
  %53 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  %54 = call i64 @strlen(i8* nonnull %52) #19
  %55 = icmp ugt i64 %54, -17
  br i1 %55, label %56, label %58

56:                                               ; preds = %32
  %57 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %57) #20
  unreachable

58:                                               ; preds = %32
  %59 = icmp ult i64 %54, 23
  br i1 %59, label %66, label %60

60:                                               ; preds = %58
  %61 = add nuw i64 %54, 16
  %62 = and i64 %61, -16
  %63 = call i8* @_Znwm(i64 %62) #21
  store i8* %63, i8** %47, align 8
  %64 = or i64 %62, -9223372036854775808
  store i64 %64, i64* %49, align 8
  store i64 %54, i64* %48, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %71

66:                                               ; preds = %58
  %67 = trunc i64 %54 to i8
  %68 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 %67, i8* %69, align 1
  %70 = icmp eq i64 %54, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66, %60
  %72 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %66 ], [ %65, %60 ]
  %73 = phi i8* [ %46, %66 ], [ %63, %60 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* nonnull align 1 %52, i64 %54, i1 false) #19
  br label %74

74:                                               ; preds = %66, %71
  %75 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %66 ], [ %72, %71 ]
  %76 = phi i8* [ %46, %66 ], [ %73, %71 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %54
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i8*, i8** %47, align 8
  %82 = load i64, i64* %48, align 8
  %83 = zext i8 %79 to i64
  %84 = select i1 %80, i8* %81, i8* %46
  %85 = select i1 %80, i64 %82, i64 %83
  %86 = trunc i64 %85 to i32
  %87 = call i32 @_ZN3url20DefaultPortForSchemeEPKci(i8* %84, i32 %86) #19
  %88 = icmp eq i32 %87, %1
  %89 = and i1 %45, %88
  %90 = select i1 %89, i32 3, i32 2
  %91 = load i8, i8* %78, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %74
  %94 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %94) #21
  br label %95

95:                                               ; preds = %74, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #19
  %96 = load i8, i8* %37, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %99) #21
  br label %100

100:                                              ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #19
  br label %101

101:                                              ; preds = %100, %8, %3, %7
  %102 = phi i32 [ 1, %7 ], [ 0, %3 ], [ %90, %100 ], [ 4, %8 ]
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusE(%"class.net::CookieMonster"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.net::CanonicalCookie"* dereferenceable(144), i1 zeroext, i1 zeroext, i1 zeroext, %"class.base::Time"* nocapture, %"class.net::CookieInclusionStatus"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.GetParamsImpl, align 8
  %10 = alloca %class.GetParamsImpl.433, align 8
  %11 = alloca %class.GetParamsImpl.434, align 8
  %12 = alloca %"class.net::CanonicalCookie"*, align 8
  %13 = alloca %"class.net::CanonicalCookie"*, align 8
  %14 = alloca %class.anon.220, align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %class.anon.221, align 8
  %17 = alloca %"class.net::CanonicalCookie"*, align 8
  %18 = alloca %class.anon.222, align 8
  %19 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %20 = ptrtoint %"class.std::__1::__tree_end_node"* %19 to i64
  %21 = bitcast %"class.net::CanonicalCookie"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %12, align 8
  %22 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0
  %23 = tail call { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE19__equal_range_multiIS7_EENS_4pairINS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEESS_EERKT_(%"class.std::__1::__tree.7"* %22, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  %24 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %23, 0
  %25 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %23, 1
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %24, %25
  br i1 %26, label %48, label %27

27:                                               ; preds = %8
  %28 = bitcast %"class.net::CanonicalCookie"** %13 to i8*
  %29 = bitcast %"class.net::CanonicalCookie"** %13 to i64*
  %30 = bitcast %"class.net::CanonicalCookie"** %12 to i64*
  %31 = bitcast %class.anon.220* %14 to i8*
  %32 = getelementptr inbounds %class.anon.220, %class.anon.220* %14, i64 0, i32 0
  %33 = getelementptr inbounds %class.anon.220, %class.anon.220* %14, i64 0, i32 1
  %34 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 1
  %35 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 0
  %36 = bitcast %class.GetParamsImpl* %9 to i8*
  %37 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %9, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %9, i64 0, i32 1
  %39 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %9, i64 0, i32 0
  %40 = bitcast %"class.logging::CheckError"* %15 to i8*
  %41 = bitcast %class.anon.221* %16 to i8*
  %42 = getelementptr inbounds %class.anon.221, %class.anon.221* %16, i64 0, i32 0
  %43 = getelementptr inbounds %class.anon.221, %class.anon.221* %16, i64 0, i32 1
  %44 = bitcast %class.GetParamsImpl.433* %10 to i8*
  %45 = getelementptr inbounds %class.GetParamsImpl.433, %class.GetParamsImpl.433* %10, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %class.GetParamsImpl.433, %class.GetParamsImpl.433* %10, i64 0, i32 1
  %47 = getelementptr inbounds %class.GetParamsImpl.433, %class.GetParamsImpl.433* %10, i64 0, i32 0
  br label %52

48:                                               ; preds = %126, %8
  %49 = phi i64 [ %20, %8 ], [ %97, %126 ]
  %50 = inttoptr i64 %49 to %"class.std::__1::__tree_end_node"*
  %51 = icmp eq %"class.std::__1::__tree_end_node"* %19, %50
  br i1 %51, label %213, label %129

52:                                               ; preds = %27, %126
  %53 = phi %"class.std::__1::__tree_end_node"* [ %24, %27 ], [ %127, %126 ]
  %54 = phi i8 [ 0, %27 ], [ %98, %126 ]
  %55 = phi i64 [ %20, %27 ], [ %97, %126 ]
  %56 = ptrtoint %"class.std::__1::__tree_end_node"* %53 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 7
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.net::CanonicalCookie"**
  %59 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %58, align 8
  store %"class.net::CanonicalCookie"* %59, %"class.net::CanonicalCookie"** %13, align 8
  %60 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %59, i64 0, i32 7
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp eq i8 %61, 0
  %63 = or i1 %62, %3
  br i1 %63, label %74, label %64

64:                                               ; preds = %52
  %65 = call zeroext i1 @_ZNK3net15CanonicalCookie35IsEquivalentForSecureCookieMatchingERKS0_(%"class.net::CanonicalCookie"* %2, %"class.net::CanonicalCookie"* dereferenceable(144) %59) #19
  br i1 %65, label %66, label %74

66:                                               ; preds = %64
  %67 = load i64, i64* %29, align 8
  store i64 %67, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #19
  store %"class.net::CanonicalCookie"** %12, %"class.net::CanonicalCookie"*** %32, align 8
  store %"class.net::CanonicalCookie"* %2, %"class.net::CanonicalCookie"** %33, align 8
  %68 = load %"class.net::NetLog"*, %"class.net::NetLog"** %34, align 8
  %69 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %68, i64 0, i32 3
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_3EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  store %class.anon.220* %14, %class.anon.220** %38, align 8
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %68, i32 442, %"struct.net::NetLogSource"* dereferenceable(16) %35, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %39) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #19
  br label %73

73:                                               ; preds = %66, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #19
  call void @_ZN3net21CookieInclusionStatus18AddExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"* %7, i32 13) #19
  br label %74

74:                                               ; preds = %52, %73, %64
  %75 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %13, align 8
  %76 = call zeroext i1 @_ZNK3net15CanonicalCookie12IsEquivalentERKS0_(%"class.net::CanonicalCookie"* %2, %"class.net::CanonicalCookie"* dereferenceable(144) %75)
  br i1 %76, label %77, label %96

77:                                               ; preds = %74
  %78 = and i8 %54, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 1126, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0)) #19
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #19
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %81, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.22, i64 0, i64 0), i64 62) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #19
  br label %83

83:                                               ; preds = %77, %80
  br i1 %4, label %84, label %96

84:                                               ; preds = %83
  %85 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %13, align 8
  %86 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %85, i64 0, i32 8
  %87 = load i8, i8* %86, align 1, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #19
  store %"class.net::CanonicalCookie"** %13, %"class.net::CanonicalCookie"*** %42, align 8
  store %"class.net::CanonicalCookie"* %2, %"class.net::CanonicalCookie"** %43, align 8
  %90 = load %"class.net::NetLog"*, %"class.net::NetLog"** %34, align 8
  %91 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %90, i64 0, i32 3
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94, !prof !2

94:                                               ; preds = %89
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_4EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  store %class.anon.221* %16, %class.anon.221** %46, align 8
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %90, i32 443, %"struct.net::NetLogSource"* dereferenceable(16) %35, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %47) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #19
  br label %95

95:                                               ; preds = %89, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #19
  call void @_ZN3net21CookieInclusionStatus18AddExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"* %7, i32 14) #19
  br label %96

96:                                               ; preds = %84, %83, %95, %74
  %97 = phi i64 [ %55, %95 ], [ %55, %74 ], [ %56, %84 ], [ %56, %83 ]
  %98 = phi i8 [ 1, %95 ], [ %54, %74 ], [ 1, %84 ], [ 1, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 1, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %96
  %103 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node_base"*
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 2
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_end_node"**
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %103
  br i1 %109, label %126, label %117

110:                                              ; preds = %96, %110
  %111 = phi %"class.std::__1::__tree_node_base"* [ %113, %110 ], [ %100, %96 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %110

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0
  br label %126

117:                                              ; preds = %102, %117
  %118 = phi %"class.std::__1::__tree_end_node"** [ %121, %117 ], [ %105, %102 ]
  %119 = bitcast %"class.std::__1::__tree_end_node"** %118 to %"class.std::__1::__tree_node_base"**
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 2
  %122 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, %120
  br i1 %125, label %126, label %117

126:                                              ; preds = %117, %102, %115
  %127 = phi %"class.std::__1::__tree_end_node"* [ %116, %115 ], [ %106, %102 ], [ %122, %117 ]
  %128 = icmp eq %"class.std::__1::__tree_end_node"* %127, %25
  br i1 %128, label %48, label %52

129:                                              ; preds = %48
  %130 = bitcast %"class.net::CanonicalCookie"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #19
  %131 = inttoptr i64 %49 to %"class.std::__1::__tree_node.263"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %131, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %132, align 8
  store %"class.net::CanonicalCookie"* %133, %"class.net::CanonicalCookie"** %17, align 8
  %134 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %133, i64 0, i32 1
  %135 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %2, i64 0, i32 1
  %136 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  %140 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %133, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = zext i8 %138 to i64
  %143 = select i1 %139, i64 %141, i64 %142
  %144 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  %148 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = zext i8 %146 to i64
  %151 = select i1 %147, i64 %149, i64 %150
  %152 = icmp eq i64 %143, %151
  br i1 %152, label %153, label %189

153:                                              ; preds = %129
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %157 = select i1 %139, i8* %155, i8* %156
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  %161 = select i1 %147, i8* %159, i8* %160
  %162 = icmp eq i64 %143, 0
  br i1 %139, label %169, label %163

163:                                              ; preds = %153
  br i1 %162, label %185, label %164

164:                                              ; preds = %163
  %165 = ptrtoint i8* %155 to i64
  %166 = trunc i64 %165 to i8
  %167 = load i8, i8* %161, align 1
  %168 = icmp eq i8 %167, %166
  br i1 %168, label %170, label %189

169:                                              ; preds = %153
  br i1 %162, label %185, label %182

170:                                              ; preds = %164, %177
  %171 = phi i64 [ %174, %177 ], [ %142, %164 ]
  %172 = phi i8* [ %175, %177 ], [ %156, %164 ]
  %173 = phi i8* [ %178, %177 ], [ %161, %164 ]
  %174 = add i64 %171, -1
  %175 = getelementptr inbounds i8, i8* %172, i64 1
  %176 = icmp eq i64 %174, 0
  br i1 %176, label %185, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds i8, i8* %173, i64 1
  %179 = load i8, i8* %175, align 1
  %180 = load i8, i8* %178, align 1
  %181 = icmp eq i8 %179, %180
  br i1 %181, label %170, label %189

182:                                              ; preds = %169
  %183 = call i32 @bcmp(i8* %157, i8* %161, i64 %143) #19
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %170, %163, %169, %182
  %186 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %133, i64 0, i32 4, i32 0, i32 0
  %187 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  %188 = load i64, i64* %186, align 8
  store i64 %188, i64* %187, align 8
  br label %189

189:                                              ; preds = %177, %164, %129, %185, %182
  %190 = call zeroext i1 @_ZNK3net21CookieInclusionStatus9IsIncludeEv(%"class.net::CookieInclusionStatus"* %7) #19
  br i1 %190, label %191, label %193

191:                                              ; preds = %189
  %192 = select i1 %5, i32 10, i32 1
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %50, i1 zeroext true, i32 %192)
  br label %212

193:                                              ; preds = %189
  %194 = call zeroext i1 @_ZNK3net21CookieInclusionStatus18HasExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"* %7, i32 13) #19
  br i1 %194, label %195, label %212

195:                                              ; preds = %193
  %196 = bitcast %class.anon.222* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #19
  %197 = getelementptr inbounds %class.anon.222, %class.anon.222* %18, i64 0, i32 0
  store %"class.net::CanonicalCookie"** %12, %"class.net::CanonicalCookie"*** %197, align 8
  %198 = getelementptr inbounds %class.anon.222, %class.anon.222* %18, i64 0, i32 1
  store %"class.net::CanonicalCookie"** %17, %"class.net::CanonicalCookie"*** %198, align 8
  %199 = getelementptr inbounds %class.anon.222, %class.anon.222* %18, i64 0, i32 2
  store %"class.net::CanonicalCookie"* %2, %"class.net::CanonicalCookie"** %199, align 8
  %200 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 1
  %201 = load %"class.net::NetLog"*, %"class.net::NetLog"** %200, align 8
  %202 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %201, i64 0, i32 3
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %211, label %205, !prof !2

205:                                              ; preds = %195
  %206 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 12, i32 0
  %207 = bitcast %class.GetParamsImpl.434* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %207) #19
  %208 = getelementptr inbounds %class.GetParamsImpl.434, %class.GetParamsImpl.434* %11, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %class.GetParamsImpl.434, %class.GetParamsImpl.434* %11, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_5EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %208, align 8
  store %class.anon.222* %18, %class.anon.222** %209, align 8
  %210 = getelementptr inbounds %class.GetParamsImpl.434, %class.GetParamsImpl.434* %11, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %201, i32 444, %"struct.net::NetLogSource"* dereferenceable(16) %206, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %210) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207) #19
  br label %211

211:                                              ; preds = %195, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #19
  br label %212

212:                                              ; preds = %193, %211, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #19
  br label %213

213:                                              ; preds = %48, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  ret void
}

declare zeroext i1 @_ZNK3net15CanonicalCookie35IsEquivalentForSecureCookieMatchingERKS0_(%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"* dereferenceable(144)) local_unnamed_addr #1

declare void @_ZN3net21CookieInclusionStatus18AddExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"*, i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK3net21CookieInclusionStatus18HasExclusionReasonENS0_15ExclusionReasonE(%"class.net::CookieInclusionStatus"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net15CanonicalCookie25IsEffectivelySameSiteNoneENS_21CookieAccessSemanticsE(%"class.net::CanonicalCookie"*, i32) local_unnamed_addr #1

declare void @_ZN3net29CookieMonsterChangeDispatcher14DispatchChangeERKNS_16CookieChangeInfoEb(%"class.net::CookieMonsterChangeDispatcher"*, %"struct.net::CookieChangeInfo"* dereferenceable(168), i1 zeroext) local_unnamed_addr #1

declare void @_ZN3net16CookieChangeInfoC1ERKNS_15CanonicalCookieENS_18CookieAccessResultENS_17CookieChangeCauseE(%"struct.net::CookieChangeInfo"*, %"class.net::CanonicalCookie"* dereferenceable(144), %"struct.net::CookieAccessResult"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net16CookieChangeInfoD1Ev(%"struct.net::CookieChangeInfo"*) unnamed_addr #3

declare void @_ZNK3net15CanonicalCookie23IsSetPermittedInContextERK4GURLRKNS_13CookieOptionsERKNS_18CookieAccessParamsERKNSt3__16vectorINSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEENSF_ISH_EEEE(%"struct.net::CookieAccessResult"* sret, %"class.net::CanonicalCookie"*, %class.GURL* dereferenceable(120), %"class.net::CookieOptions"* dereferenceable(32), %"struct.net::CookieAccessParams"* dereferenceable(12), %"class.std::__1::vector.54"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net21CookieInclusionStatus28ShouldRecordDowngradeMetricsEv(%"class.net::CookieInclusionStatus"*) local_unnamed_addr #1

declare i32 @_ZNK3net21CookieInclusionStatus36GetBreakingDowngradeMetricsEnumValueERK4GURL(%"class.net::CookieInclusionStatus"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeE(%"class.net::CanonicalCookie"* nocapture readonly dereferenceable(144), i64) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %54, label %6

6:                                                ; preds = %2
  %7 = sub nsw i64 %4, %1
  %8 = sdiv i64 %7, 60000000
  %9 = tail call i1 @llvm.is.constant.i64(i64 %8) #19
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = icmp slt i64 %7, -59999999
  %12 = select i1 %11, i32 -2147483648, i32 2147483647
  %13 = add nsw i64 %8, 2147483648
  %14 = icmp ult i64 %13, 4294967296
  %15 = trunc i64 %8 to i32
  %16 = select i1 %14, i32 %15, i32 %12, !prof !2
  br label %23

17:                                               ; preds = %6
  %18 = icmp sgt i64 %7, 128849018879999999
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = icmp sgt i64 %8, -2147483648
  %21 = select i1 %20, i64 %8, i64 -2147483648
  %22 = trunc i64 %21 to i32
  br label %23

23:                                               ; preds = %10, %17, %19
  %24 = phi i32 [ %16, %10 ], [ %22, %19 ], [ 2147483647, %17 ]
  %25 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 7
  %26 = load i8, i8* %25, align 8, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %30 = inttoptr i64 %29 to %"class.base::HistogramBase"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.39, i64 0, i64 0), i32 1, i32 5256000, i32 50, i32 1) #19
  %34 = ptrtoint %"class.base::HistogramBase"* %33 to i64
  store atomic i64 %34, i64* @_ZZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi %"class.base::HistogramBase"* [ %30, %28 ], [ %33, %32 ]
  %37 = bitcast %"class.base::HistogramBase"* %36 to void (%"class.base::HistogramBase"*, i32)***
  %38 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %38, i64 6
  %40 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %39, align 8
  tail call void %40(%"class.base::HistogramBase"* %36, i32 %24) #19
  br label %54

41:                                               ; preds = %23
  %42 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %43 = inttoptr i64 %42 to %"class.base::HistogramBase"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 1, i32 5256000, i32 50, i32 1) #19
  %47 = ptrtoint %"class.base::HistogramBase"* %46 to i64
  store atomic i64 %47, i64* @_ZZN3net12_GLOBAL__N_127HistogramExpirationDurationERKNS_15CanonicalCookieEN4base4TimeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi %"class.base::HistogramBase"* [ %43, %41 ], [ %46, %45 ]
  %50 = bitcast %"class.base::HistogramBase"* %49 to void (%"class.base::HistogramBase"*, i32)***
  %51 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %51, i64 6
  %53 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %52, align 8
  tail call void %53(%"class.base::HistogramBase"* %49, i32 %24) #19
  br label %54

54:                                               ; preds = %2, %35, %48
  ret void
}

declare zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net13CookieMonster14GarbageCollectERKN4base4TimeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::CookieMonster"*, %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, align 8
  %5 = alloca i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, align 8
  %6 = alloca i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, align 8
  %7 = alloca %"class.std::__1::vector.140", align 8
  %8 = alloca %"struct.std::__1::pair.139", align 8
  %9 = alloca %"class.std::__1::vector.140", align 8
  %10 = alloca %"struct.std::__1::pair.139", align 8
  %11 = alloca %"class.std::__1::vector.140", align 8
  %12 = alloca %"class.std::__1::vector.140", align 8
  %13 = alloca %"class.std::__1::vector.140", align 8
  %14 = alloca %"class.std::__1::vector.140", align 8
  %15 = tail call i64 @_ZN4base4Time3NowEv() #19
  %16 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 -2592000000000)
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 -9223372036854775808, i64 %18, !prof !164
  %20 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %20, i64 0, i32 0
  %22 = tail call i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE13__count_multiIS7_EEmRKT_(%"class.std::__1::__tree.7"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  %23 = icmp ugt i64 %22, 180
  br i1 %23, label %24, label %71

24:                                               ; preds = %3
  %25 = bitcast %"class.std::__1::vector.140"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #19
  %26 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %7, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #19
  %28 = bitcast %"struct.std::__1::pair.139"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #19
  %29 = tail call { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE19__equal_range_multiIS7_EENS_4pairINS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEESS_EERKT_(%"class.std::__1::__tree.7"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  %30 = getelementptr inbounds %"struct.std::__1::pair.139", %"struct.std::__1::pair.139"* %8, i64 0, i32 0, i32 0, i32 0
  %31 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %29, 0
  store %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.139", %"struct.std::__1::pair.139"* %8, i64 0, i32 1, i32 0, i32 0
  %33 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %29, 1
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = call i64 @_ZN3net13CookieMonster21GarbageCollectExpiredERKN4base4TimeERKNSt3__14pairINS5_14__map_iteratorINS5_15__tree_iteratorINS5_12__value_typeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10unique_ptrINS_15CanonicalCookieENS5_14default_deleteISH_EEEEEEPNS5_11__tree_nodeISL_PvEElEEEESR_EEPNS5_6vectorISR_NSD_ISR_EEEE(%"class.net::CookieMonster"* %0, %"class.base::Time"* dereferenceable(8) %1, %"struct.std::__1::pair.139"* nonnull dereferenceable(16) %8, %"class.std::__1::vector.140"* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #19
  %35 = bitcast %"class.std::__1::__map_iterator"** %27 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.140"* %7 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ugt i64 %40, 180
  %42 = inttoptr i64 %38 to %"class.std::__1::__map_iterator"*
  br i1 %41, label %43, label %63

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, 100
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0
  %49 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %48, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  %50 = load i64, i64* %35, align 8
  %51 = load i64, i64* %37, align 8
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 3
  %54 = inttoptr i64 %51 to %"class.std::__1::__map_iterator"*
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi %"class.std::__1::__map_iterator"* [ %54, %47 ], [ %42, %43 ]
  %57 = phi i64 [ %53, %47 ], [ %40, %43 ]
  %58 = phi i64 [ %50, %47 ], [ %36, %43 ]
  %59 = add nsw i64 %57, -150
  %60 = inttoptr i64 %58 to %"class.std::__1::__map_iterator"*
  %61 = bitcast i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)* @_ZN3net12_GLOBAL__N_115LRACookieSorterERKNSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEESO_, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_(%"class.std::__1::__map_iterator"* %56, %"class.std::__1::__map_iterator"* %60, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** nonnull dereferenceable(8) %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %522, label %494

63:                                               ; preds = %522, %24
  %64 = phi %"class.std::__1::__map_iterator"* [ %524, %522 ], [ %42, %24 ]
  %65 = phi i64 [ %523, %522 ], [ %34, %24 ]
  %66 = icmp eq %"class.std::__1::__map_iterator"* %64, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = ptrtoint %"class.std::__1::__map_iterator"* %64 to i64
  store i64 %68, i64* %35, align 8
  %69 = bitcast %"class.std::__1::__map_iterator"* %64 to i8*
  call void @_ZdlPv(i8* %69) #21
  br label %70

70:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #19
  br label %71

71:                                               ; preds = %70, %3
  %72 = phi i64 [ %65, %70 ], [ 0, %3 ]
  %73 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %74, 3300
  br i1 %75, label %76, label %492

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 15, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp slt i64 %78, %19
  br i1 %79, label %80, label %492

80:                                               ; preds = %76
  %81 = bitcast %"class.std::__1::vector.140"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #19
  %82 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %9, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 24, i1 false) #19
  %84 = bitcast %"struct.std::__1::pair.139"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #19
  %85 = bitcast %"class.std::__1::multimap"* %20 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %88 = ptrtoint %"class.std::__1::__tree_end_node"* %87 to i64
  %89 = bitcast %"struct.std::__1::pair.139"* %10 to i64*
  store i64 %86, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.139", %"struct.std::__1::pair.139"* %10, i64 0, i32 1
  %91 = bitcast %"class.std::__1::__map_iterator"* %90 to i64*
  store i64 %88, i64* %91, align 8
  %92 = call i64 @_ZN3net13CookieMonster21GarbageCollectExpiredERKN4base4TimeERKNSt3__14pairINS5_14__map_iteratorINS5_15__tree_iteratorINS5_12__value_typeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10unique_ptrINS_15CanonicalCookieENS5_14default_deleteISH_EEEEEEPNS5_11__tree_nodeISL_PvEElEEEESR_EEPNS5_6vectorISR_NSD_ISR_EEEE(%"class.net::CookieMonster"* %0, %"class.base::Time"* dereferenceable(8) %1, %"struct.std::__1::pair.139"* nonnull dereferenceable(16) %10, %"class.std::__1::vector.140"* nonnull %9)
  %93 = add i64 %92, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #19
  %94 = bitcast %"class.std::__1::__map_iterator"** %83 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.140"* %9 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 3
  %100 = icmp ugt i64 %99, 3300
  %101 = inttoptr i64 %97 to %"class.std::__1::__map_iterator"*
  %102 = inttoptr i64 %95 to %"class.std::__1::__map_iterator"*
  br i1 %100, label %103, label %484

103:                                              ; preds = %80
  %104 = add nsw i64 %99, -3000
  %105 = bitcast %"class.std::__1::vector.140"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #19
  %106 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %11, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %11, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #19
  %109 = bitcast %"class.std::__1::vector.140"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #19
  %110 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %12, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %12, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 24, i1 false) #19
  %113 = icmp eq %"class.std::__1::__map_iterator"* %101, %102
  br i1 %113, label %114, label %116

114:                                              ; preds = %103
  %115 = bitcast %"class.std::__1::__map_iterator"** %111 to i64*
  br label %252

116:                                              ; preds = %103
  %117 = bitcast %"class.std::__1::__map_iterator"** %107 to i64*
  %118 = bitcast %"class.std::__1::vector.140"* %11 to i64*
  %119 = bitcast %"class.std::__1::__map_iterator"** %108 to i64*
  %120 = bitcast %"class.std::__1::__map_iterator"** %111 to i64*
  %121 = bitcast %"class.std::__1::vector.140"* %12 to i64*
  %122 = bitcast %"class.std::__1::__map_iterator"** %112 to i64*
  br label %123

123:                                              ; preds = %245, %116
  %124 = phi %"class.std::__1::__map_iterator"* [ %101, %116 ], [ %246, %245 ]
  %125 = bitcast %"class.std::__1::__map_iterator"* %124 to %"class.std::__1::__tree_node.263"**
  %126 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %126, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %127, align 8
  %129 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %128, i64 0, i32 7
  %130 = load i8, i8* %129, align 8, !range !3
  %131 = icmp eq i8 %130, 0
  %132 = ptrtoint %"class.std::__1::__tree_node.263"* %126 to i64
  br i1 %131, label %189, label %133

133:                                              ; preds = %123
  %134 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %107, align 8
  %135 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %108, align 8
  %136 = icmp eq %"class.std::__1::__map_iterator"* %134, %135
  %137 = ptrtoint %"class.std::__1::__map_iterator"* %135 to i64
  br i1 %136, label %142, label %138

138:                                              ; preds = %133
  %139 = bitcast %"class.std::__1::__map_iterator"* %134 to i64*
  store i64 %132, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %134, i64 1
  %141 = ptrtoint %"class.std::__1::__map_iterator"* %140 to i64
  store i64 %141, i64* %117, align 8
  br label %245

142:                                              ; preds = %133
  %143 = ptrtoint %"class.std::__1::__map_iterator"* %134 to i64
  %144 = load i64, i64* %118, align 8
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 3
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 2305843009213693951
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  %150 = bitcast %"class.std::__1::vector.140"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %150) #20
  unreachable

151:                                              ; preds = %142
  %152 = sub i64 %137, %144
  %153 = ashr exact i64 %152, 3
  %154 = icmp ult i64 %153, 1152921504606846975
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = ashr exact i64 %152, 2
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %170, label %160

160:                                              ; preds = %155
  %161 = icmp ugt i64 %158, 2305843009213693951
  br i1 %161, label %162, label %163

162:                                              ; preds = %160
  call void @abort() #20
  unreachable

163:                                              ; preds = %160, %151
  %164 = phi i64 [ %158, %160 ], [ 2305843009213693951, %151 ]
  %165 = shl i64 %164, 3
  %166 = call i8* @_Znwm(i64 %165) #21
  %167 = bitcast i8* %166 to %"class.std::__1::__map_iterator"*
  %168 = bitcast %"class.std::__1::__map_iterator"* %124 to i64*
  %169 = load i64, i64* %168, align 8
  br label %170

170:                                              ; preds = %163, %155
  %171 = phi i64 [ %169, %163 ], [ %132, %155 ]
  %172 = phi i64 [ %164, %163 ], [ 0, %155 ]
  %173 = phi i8* [ %166, %163 ], [ null, %155 ]
  %174 = phi %"class.std::__1::__map_iterator"* [ %167, %163 ], [ null, %155 ]
  %175 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %174, i64 %146
  %176 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %174, i64 %172
  %177 = ptrtoint %"class.std::__1::__map_iterator"* %176 to i64
  %178 = bitcast %"class.std::__1::__map_iterator"* %175 to i64*
  store i64 %171, i64* %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %175, i64 1
  %180 = ptrtoint %"class.std::__1::__map_iterator"* %179 to i64
  %181 = ptrtoint %"class.std::__1::__map_iterator"* %174 to i64
  %182 = icmp sgt i64 %145, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %170
  %184 = inttoptr i64 %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %184, i64 %145, i1 false) #19
  br label %185

185:                                              ; preds = %183, %170
  store i64 %181, i64* %118, align 8
  store i64 %180, i64* %117, align 8
  store i64 %177, i64* %119, align 8
  %186 = icmp eq i64 %144, 0
  br i1 %186, label %245, label %187

187:                                              ; preds = %185
  %188 = inttoptr i64 %144 to i8*
  call void @_ZdlPv(i8* %188) #21
  br label %245

189:                                              ; preds = %123
  %190 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %111, align 8
  %191 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %112, align 8
  %192 = icmp eq %"class.std::__1::__map_iterator"* %190, %191
  %193 = ptrtoint %"class.std::__1::__map_iterator"* %191 to i64
  br i1 %192, label %198, label %194

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::__map_iterator"* %190 to i64*
  store i64 %132, i64* %195, align 8
  %196 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %190, i64 1
  %197 = ptrtoint %"class.std::__1::__map_iterator"* %196 to i64
  store i64 %197, i64* %120, align 8
  br label %245

198:                                              ; preds = %189
  %199 = ptrtoint %"class.std::__1::__map_iterator"* %190 to i64
  %200 = load i64, i64* %121, align 8
  %201 = sub i64 %199, %200
  %202 = ashr exact i64 %201, 3
  %203 = add nsw i64 %202, 1
  %204 = icmp ugt i64 %203, 2305843009213693951
  br i1 %204, label %205, label %207

205:                                              ; preds = %198
  %206 = bitcast %"class.std::__1::vector.140"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %206) #20
  unreachable

207:                                              ; preds = %198
  %208 = sub i64 %193, %200
  %209 = ashr exact i64 %208, 3
  %210 = icmp ult i64 %209, 1152921504606846975
  br i1 %210, label %211, label %219

211:                                              ; preds = %207
  %212 = ashr exact i64 %208, 2
  %213 = icmp ult i64 %212, %203
  %214 = select i1 %213, i64 %203, i64 %212
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %226, label %216

216:                                              ; preds = %211
  %217 = icmp ugt i64 %214, 2305843009213693951
  br i1 %217, label %218, label %219

218:                                              ; preds = %216
  call void @abort() #20
  unreachable

219:                                              ; preds = %216, %207
  %220 = phi i64 [ %214, %216 ], [ 2305843009213693951, %207 ]
  %221 = shl i64 %220, 3
  %222 = call i8* @_Znwm(i64 %221) #21
  %223 = bitcast i8* %222 to %"class.std::__1::__map_iterator"*
  %224 = bitcast %"class.std::__1::__map_iterator"* %124 to i64*
  %225 = load i64, i64* %224, align 8
  br label %226

226:                                              ; preds = %219, %211
  %227 = phi i64 [ %225, %219 ], [ %132, %211 ]
  %228 = phi i64 [ %220, %219 ], [ 0, %211 ]
  %229 = phi i8* [ %222, %219 ], [ null, %211 ]
  %230 = phi %"class.std::__1::__map_iterator"* [ %223, %219 ], [ null, %211 ]
  %231 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %230, i64 %202
  %232 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %230, i64 %228
  %233 = ptrtoint %"class.std::__1::__map_iterator"* %232 to i64
  %234 = bitcast %"class.std::__1::__map_iterator"* %231 to i64*
  store i64 %227, i64* %234, align 8
  %235 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %231, i64 1
  %236 = ptrtoint %"class.std::__1::__map_iterator"* %235 to i64
  %237 = ptrtoint %"class.std::__1::__map_iterator"* %230 to i64
  %238 = icmp sgt i64 %201, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %226
  %240 = inttoptr i64 %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %240, i64 %201, i1 false) #19
  br label %241

241:                                              ; preds = %239, %226
  store i64 %237, i64* %121, align 8
  store i64 %236, i64* %120, align 8
  store i64 %233, i64* %122, align 8
  %242 = icmp eq i64 %200, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %241
  %244 = inttoptr i64 %200 to i8*
  call void @_ZdlPv(i8* %244) #21
  br label %245

245:                                              ; preds = %243, %241, %194, %187, %185, %138
  %246 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %124, i64 1
  %247 = icmp eq %"class.std::__1::__map_iterator"* %246, %102
  br i1 %247, label %248, label %123

248:                                              ; preds = %245
  %249 = load i64, i64* %120, align 8
  %250 = load i64, i64* %121, align 8
  %251 = inttoptr i64 %250 to %"class.std::__1::__map_iterator"*
  br label %252

252:                                              ; preds = %114, %248
  %253 = phi i64* [ %115, %114 ], [ %120, %248 ]
  %254 = phi %"class.std::__1::__map_iterator"* [ null, %114 ], [ %251, %248 ]
  %255 = phi i64 [ 0, %114 ], [ %250, %248 ]
  %256 = phi i64 [ 0, %114 ], [ %249, %248 ]
  %257 = sub i64 %256, %255
  %258 = ashr exact i64 %257, 3
  %259 = icmp ult i64 %258, %104
  %260 = select i1 %259, i64 %258, i64 %104
  %261 = bitcast %"class.std::__1::vector.140"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 0, i64 24, i1 false) #19
  %262 = icmp eq i64 %257, 0
  br i1 %262, label %288, label %263

263:                                              ; preds = %252
  %264 = icmp ugt i64 %258, 2305843009213693951
  br i1 %264, label %265, label %267

265:                                              ; preds = %263
  %266 = bitcast %"class.std::__1::vector.140"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %266) #20
  unreachable

267:                                              ; preds = %263
  %268 = call i8* @_Znwm(i64 %257) #21
  %269 = bitcast i8* %268 to %"class.std::__1::__map_iterator"*
  %270 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %13, i64 0, i32 0, i32 1
  %271 = bitcast %"class.std::__1::__map_iterator"** %270 to i8**
  store i8* %268, i8** %271, align 8
  %272 = bitcast %"class.std::__1::vector.140"* %13 to i8**
  store i8* %268, i8** %272, align 8
  %273 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %269, i64 %258
  %274 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::__map_iterator"* %273, %"class.std::__1::__map_iterator"** %274, align 8
  %275 = bitcast %"class.std::__1::__map_iterator"** %270 to i64*
  %276 = ptrtoint i8* %268 to i64
  %277 = ptrtoint %"class.std::__1::__map_iterator"* %254 to i64
  %278 = sub i64 %256, %277
  %279 = icmp sgt i64 %278, 0
  br i1 %279, label %280, label %285

280:                                              ; preds = %267
  %281 = lshr exact i64 %278, 3
  %282 = bitcast %"class.std::__1::__map_iterator"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %268, i8* align 8 %282, i64 %278, i1 false) #19
  %283 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %269, i64 %281
  %284 = ptrtoint %"class.std::__1::__map_iterator"* %283 to i64
  br label %285

285:                                              ; preds = %280, %267
  %286 = phi i64 [ %284, %280 ], [ %276, %267 ]
  store i64 %286, i64* %275, align 8
  %287 = inttoptr i64 %286 to %"class.std::__1::__map_iterator"*
  br label %288

288:                                              ; preds = %252, %285
  %289 = phi %"class.std::__1::__map_iterator"* [ null, %252 ], [ %287, %285 ]
  %290 = phi %"class.std::__1::__map_iterator"* [ null, %252 ], [ %269, %285 ]
  %291 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %13, i64 0, i32 0, i32 0
  %292 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %13, i64 0, i32 0, i32 1
  %293 = ptrtoint %"class.std::__1::__map_iterator"* %289 to i64
  %294 = ptrtoint %"class.std::__1::__map_iterator"* %290 to i64
  %295 = sub i64 %293, %294
  %296 = ashr exact i64 %295, 3
  %297 = icmp ult i64 %296, %260
  %298 = zext i1 %297 to i64
  %299 = add nsw i64 %260, %298
  %300 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %290, i64 %299
  %301 = bitcast i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #19
  store i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)* @_ZN3net12_GLOBAL__N_115LRACookieSorterERKNSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEESO_, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  call void @_ZNSt3__114__partial_sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_ENS_11__wrap_iterIPSM_EEEEvT0_SV_SV_T_(%"class.std::__1::__map_iterator"* %290, %"class.std::__1::__map_iterator"* %300, %"class.std::__1::__map_iterator"* %289, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** nonnull dereferenceable(8) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #19
  %302 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %291, align 8
  %303 = ptrtoint %"class.std::__1::__map_iterator"* %302 to i64
  %304 = icmp eq i64 %260, 0
  br i1 %304, label %335, label %305

305:                                              ; preds = %288
  %306 = shl nuw i64 %260, 3
  %307 = ashr exact i64 %306, 3
  br label %308

308:                                              ; preds = %308, %305
  %309 = phi %"class.std::__1::__map_iterator"* [ %324, %308 ], [ %302, %305 ]
  %310 = phi i64 [ %323, %308 ], [ %307, %305 ]
  %311 = lshr i64 %310, 1
  %312 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %309, i64 %311
  %313 = bitcast %"class.std::__1::__map_iterator"* %312 to %"class.std::__1::__tree_node.263"**
  %314 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %313, align 8
  %315 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %314, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %316 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %315, align 8
  %317 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %316, i64 0, i32 6, i32 0, i32 0
  %318 = load i64, i64* %317, align 8
  %319 = icmp slt i64 %318, %19
  %320 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %312, i64 1
  %321 = xor i64 %311, -1
  %322 = add i64 %310, %321
  %323 = select i1 %319, i64 %322, i64 %311
  %324 = select i1 %319, %"class.std::__1::__map_iterator"* %320, %"class.std::__1::__map_iterator"* %309
  %325 = icmp eq i64 %323, 0
  br i1 %325, label %326, label %308

326:                                              ; preds = %308
  %327 = ptrtoint %"class.std::__1::__map_iterator"* %324 to i64
  %328 = icmp eq %"class.std::__1::__map_iterator"* %302, %324
  br i1 %328, label %335, label %329

329:                                              ; preds = %326, %329
  %330 = phi %"class.std::__1::__map_iterator"* [ %333, %329 ], [ %302, %326 ]
  %331 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %330, i64 0, i32 0, i32 0
  %332 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %331, align 8
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %332, i1 zeroext true, i32 7) #19
  %333 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %330, i64 1
  %334 = icmp eq %"class.std::__1::__map_iterator"* %333, %324
  br i1 %334, label %335, label %329

335:                                              ; preds = %329, %326, %288
  %336 = phi i64 [ %327, %326 ], [ %303, %288 ], [ %327, %329 ]
  %337 = phi %"class.std::__1::__map_iterator"* [ %302, %326 ], [ %302, %288 ], [ %324, %329 ]
  %338 = sub i64 %336, %303
  %339 = ashr exact i64 %338, 3
  %340 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %292, align 8
  %341 = icmp eq %"class.std::__1::__map_iterator"* %337, %340
  br i1 %341, label %349, label %342

342:                                              ; preds = %335
  %343 = bitcast %"class.std::__1::__map_iterator"* %337 to %"class.std::__1::__tree_node.263"**
  %344 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %343, align 8
  %345 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %344, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %346 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %345, align 8
  %347 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %346, i64 0, i32 6, i32 0, i32 0
  %348 = load i64, i64* %347, align 8
  br label %349

349:                                              ; preds = %335, %342
  %350 = phi i64 [ 0, %335 ], [ %348, %342 ]
  %351 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %291, align 8
  %352 = icmp eq %"class.std::__1::__map_iterator"* %351, null
  br i1 %352, label %357, label %353

353:                                              ; preds = %349
  %354 = ptrtoint %"class.std::__1::__map_iterator"* %351 to i64
  %355 = bitcast %"class.std::__1::__map_iterator"** %292 to i64*
  store i64 %354, i64* %355, align 8
  %356 = bitcast %"class.std::__1::__map_iterator"* %351 to i8*
  call void @_ZdlPv(i8* %356) #21
  br label %357

357:                                              ; preds = %349, %353
  %358 = add i64 %339, %93
  %359 = bitcast %"class.std::__1::__map_iterator"** %107 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = bitcast %"class.std::__1::vector.140"* %11 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = sub i64 %360, %362
  %364 = ashr exact i64 %363, 3
  %365 = icmp eq i64 %363, 0
  br i1 %365, label %466, label %366

366:                                              ; preds = %357
  %367 = icmp ugt i64 %104, %339
  br i1 %367, label %368, label %469

368:                                              ; preds = %366
  %369 = sub nsw i64 %104, %339
  %370 = icmp ult i64 %364, %369
  %371 = select i1 %370, i64 %364, i64 %369
  %372 = bitcast %"class.std::__1::vector.140"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %372, i8 0, i64 24, i1 false) #19
  %373 = icmp ugt i64 %364, 2305843009213693951
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector.140"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %375) #20
  unreachable

376:                                              ; preds = %368
  %377 = call i8* @_Znwm(i64 %363) #21
  %378 = bitcast i8* %377 to %"class.std::__1::__map_iterator"*
  %379 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %14, i64 0, i32 0, i32 1
  %380 = bitcast %"class.std::__1::__map_iterator"** %379 to i8**
  store i8* %377, i8** %380, align 8
  %381 = bitcast %"class.std::__1::vector.140"* %14 to i8**
  store i8* %377, i8** %381, align 8
  %382 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %378, i64 %364
  %383 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::__map_iterator"* %382, %"class.std::__1::__map_iterator"** %383, align 8
  %384 = bitcast %"class.std::__1::__map_iterator"** %379 to i64*
  %385 = ptrtoint i8* %377 to i64
  %386 = icmp sgt i64 %363, 0
  br i1 %386, label %387, label %392

387:                                              ; preds = %376
  %388 = lshr exact i64 %363, 3
  %389 = inttoptr i64 %362 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %377, i8* align 8 %389, i64 %363, i1 false) #19
  %390 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %378, i64 %388
  %391 = ptrtoint %"class.std::__1::__map_iterator"* %390 to i64
  br label %392

392:                                              ; preds = %376, %387
  %393 = phi i64 [ %391, %387 ], [ %385, %376 ]
  store i64 %393, i64* %384, align 8
  %394 = inttoptr i64 %393 to %"class.std::__1::__map_iterator"*
  %395 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %14, i64 0, i32 0, i32 0
  %396 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %14, i64 0, i32 0, i32 1
  %397 = ptrtoint i8* %377 to i64
  %398 = sub i64 %393, %397
  %399 = ashr exact i64 %398, 3
  %400 = icmp ult i64 %399, %371
  %401 = zext i1 %400 to i64
  %402 = add nsw i64 %371, %401
  %403 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %378, i64 %402
  %404 = bitcast i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %404) #19
  store i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)* @_ZN3net12_GLOBAL__N_115LRACookieSorterERKNSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEESO_, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %6, align 8
  call void @_ZNSt3__114__partial_sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_ENS_11__wrap_iterIPSM_EEEEvT0_SV_SV_T_(%"class.std::__1::__map_iterator"* nonnull %378, %"class.std::__1::__map_iterator"* %403, %"class.std::__1::__map_iterator"* %394, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** nonnull dereferenceable(8) %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %404) #19
  %405 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %395, align 8
  %406 = ptrtoint %"class.std::__1::__map_iterator"* %405 to i64
  %407 = icmp eq i64 %371, 0
  br i1 %407, label %438, label %408

408:                                              ; preds = %392
  %409 = shl nuw i64 %371, 3
  %410 = ashr exact i64 %409, 3
  br label %411

411:                                              ; preds = %411, %408
  %412 = phi %"class.std::__1::__map_iterator"* [ %427, %411 ], [ %405, %408 ]
  %413 = phi i64 [ %426, %411 ], [ %410, %408 ]
  %414 = lshr i64 %413, 1
  %415 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %412, i64 %414
  %416 = bitcast %"class.std::__1::__map_iterator"* %415 to %"class.std::__1::__tree_node.263"**
  %417 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %416, align 8
  %418 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %417, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %419 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %418, align 8
  %420 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %419, i64 0, i32 6, i32 0, i32 0
  %421 = load i64, i64* %420, align 8
  %422 = icmp slt i64 %421, %19
  %423 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %415, i64 1
  %424 = xor i64 %414, -1
  %425 = add i64 %413, %424
  %426 = select i1 %422, i64 %425, i64 %414
  %427 = select i1 %422, %"class.std::__1::__map_iterator"* %423, %"class.std::__1::__map_iterator"* %412
  %428 = icmp eq i64 %426, 0
  br i1 %428, label %429, label %411

429:                                              ; preds = %411
  %430 = ptrtoint %"class.std::__1::__map_iterator"* %427 to i64
  %431 = icmp eq %"class.std::__1::__map_iterator"* %405, %427
  br i1 %431, label %438, label %432

432:                                              ; preds = %429, %432
  %433 = phi %"class.std::__1::__map_iterator"* [ %436, %432 ], [ %405, %429 ]
  %434 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %433, i64 0, i32 0, i32 0
  %435 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %434, align 8
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %435, i1 zeroext true, i32 7) #19
  %436 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %433, i64 1
  %437 = icmp eq %"class.std::__1::__map_iterator"* %436, %427
  br i1 %437, label %438, label %432

438:                                              ; preds = %432, %429, %392
  %439 = phi i64 [ %430, %429 ], [ %406, %392 ], [ %430, %432 ]
  %440 = phi %"class.std::__1::__map_iterator"* [ %405, %429 ], [ %405, %392 ], [ %427, %432 ]
  %441 = sub i64 %439, %406
  %442 = ashr exact i64 %441, 3
  %443 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %396, align 8
  %444 = icmp eq %"class.std::__1::__map_iterator"* %440, %443
  br i1 %444, label %452, label %445

445:                                              ; preds = %438
  %446 = bitcast %"class.std::__1::__map_iterator"* %440 to %"class.std::__1::__tree_node.263"**
  %447 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %446, align 8
  %448 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %447, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %449 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %448, align 8
  %450 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %449, i64 0, i32 6, i32 0, i32 0
  %451 = load i64, i64* %450, align 8
  br label %452

452:                                              ; preds = %438, %445
  %453 = phi i64 [ 0, %438 ], [ %451, %445 ]
  %454 = add i64 %442, %358
  %455 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %395, align 8
  %456 = icmp eq %"class.std::__1::__map_iterator"* %455, null
  br i1 %456, label %461, label %457

457:                                              ; preds = %452
  %458 = ptrtoint %"class.std::__1::__map_iterator"* %455 to i64
  %459 = bitcast %"class.std::__1::__map_iterator"** %396 to i64*
  store i64 %458, i64* %459, align 8
  %460 = bitcast %"class.std::__1::__map_iterator"* %455 to i8*
  call void @_ZdlPv(i8* %460) #21
  br label %461

461:                                              ; preds = %452, %457
  %462 = icmp ne i64 %350, 0
  %463 = icmp slt i64 %350, %453
  %464 = and i1 %462, %463
  %465 = select i1 %464, i64 %350, i64 %453
  br label %466

466:                                              ; preds = %461, %357
  %467 = phi i64 [ %350, %357 ], [ %465, %461 ]
  %468 = phi i64 [ %358, %357 ], [ %454, %461 ]
  store i64 %467, i64* %77, align 8
  br label %469

469:                                              ; preds = %466, %366
  %470 = phi i64 [ %358, %366 ], [ %468, %466 ]
  %471 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %110, align 8
  %472 = icmp eq %"class.std::__1::__map_iterator"* %471, null
  br i1 %472, label %476, label %473

473:                                              ; preds = %469
  %474 = ptrtoint %"class.std::__1::__map_iterator"* %471 to i64
  store i64 %474, i64* %253, align 8
  %475 = bitcast %"class.std::__1::__map_iterator"* %471 to i8*
  call void @_ZdlPv(i8* %475) #21
  br label %476

476:                                              ; preds = %469, %473
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #19
  %477 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %106, align 8
  %478 = icmp eq %"class.std::__1::__map_iterator"* %477, null
  br i1 %478, label %482, label %479

479:                                              ; preds = %476
  %480 = ptrtoint %"class.std::__1::__map_iterator"* %477 to i64
  store i64 %480, i64* %359, align 8
  %481 = bitcast %"class.std::__1::__map_iterator"* %477 to i8*
  call void @_ZdlPv(i8* %481) #21
  br label %482

482:                                              ; preds = %476, %479
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #19
  %483 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %82, align 8
  br label %484

484:                                              ; preds = %482, %80
  %485 = phi %"class.std::__1::__map_iterator"* [ %483, %482 ], [ %101, %80 ]
  %486 = phi i64 [ %470, %482 ], [ %93, %80 ]
  %487 = icmp eq %"class.std::__1::__map_iterator"* %485, null
  br i1 %487, label %491, label %488

488:                                              ; preds = %484
  %489 = ptrtoint %"class.std::__1::__map_iterator"* %485 to i64
  store i64 %489, i64* %94, align 8
  %490 = bitcast %"class.std::__1::__map_iterator"* %485 to i8*
  call void @_ZdlPv(i8* %490) #21
  br label %491

491:                                              ; preds = %484, %488
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #19
  br label %492

492:                                              ; preds = %491, %76, %71
  %493 = phi i64 [ %486, %491 ], [ %72, %76 ], [ %72, %71 ]
  ret i64 %493

494:                                              ; preds = %55
  %495 = call i64 @_ZN3net13CookieMonster23PurgeLeastRecentMatchesEPNSt3__16vectorINS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISD_EEEEEEPNS1_11__tree_nodeISH_PvEElEEEENS9_ISN_EEEENS_14CookiePriorityEmmb(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.140"* nonnull %7, i32 0, i64 30, i64 %59, i1 zeroext true)
  %496 = sub i64 %59, %495
  %497 = add i64 %495, %34
  %498 = icmp eq i64 %496, 0
  br i1 %498, label %522, label %499

499:                                              ; preds = %494
  %500 = call i64 @_ZN3net13CookieMonster23PurgeLeastRecentMatchesEPNSt3__16vectorINS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISD_EEEEEEPNS1_11__tree_nodeISH_PvEElEEEENS9_ISN_EEEENS_14CookiePriorityEmmb(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.140"* nonnull %7, i32 0, i64 30, i64 %496, i1 zeroext false)
  %501 = sub i64 %496, %500
  %502 = add i64 %500, %497
  %503 = icmp eq i64 %501, 0
  br i1 %503, label %522, label %504

504:                                              ; preds = %499
  %505 = call i64 @_ZN3net13CookieMonster23PurgeLeastRecentMatchesEPNSt3__16vectorINS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISD_EEEEEEPNS1_11__tree_nodeISH_PvEElEEEENS9_ISN_EEEENS_14CookiePriorityEmmb(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.140"* nonnull %7, i32 1, i64 50, i64 %501, i1 zeroext true)
  %506 = sub i64 %501, %505
  %507 = add i64 %505, %502
  %508 = icmp eq i64 %506, 0
  br i1 %508, label %522, label %509

509:                                              ; preds = %504
  %510 = call i64 @_ZN3net13CookieMonster23PurgeLeastRecentMatchesEPNSt3__16vectorINS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISD_EEEEEEPNS1_11__tree_nodeISH_PvEElEEEENS9_ISN_EEEENS_14CookiePriorityEmmb(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.140"* nonnull %7, i32 2, i64 70, i64 %506, i1 zeroext true)
  %511 = sub i64 %506, %510
  %512 = add i64 %510, %507
  %513 = icmp eq i64 %511, 0
  br i1 %513, label %522, label %514

514:                                              ; preds = %509
  %515 = call i64 @_ZN3net13CookieMonster23PurgeLeastRecentMatchesEPNSt3__16vectorINS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISD_EEEEEEPNS1_11__tree_nodeISH_PvEElEEEENS9_ISN_EEEENS_14CookiePriorityEmmb(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.140"* nonnull %7, i32 1, i64 50, i64 %511, i1 zeroext false)
  %516 = sub i64 %511, %515
  %517 = add i64 %515, %512
  %518 = icmp eq i64 %516, 0
  br i1 %518, label %522, label %519

519:                                              ; preds = %514
  %520 = call i64 @_ZN3net13CookieMonster23PurgeLeastRecentMatchesEPNSt3__16vectorINS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISD_EEEEEEPNS1_11__tree_nodeISH_PvEElEEEENS9_ISN_EEEENS_14CookiePriorityEmmb(%"class.net::CookieMonster"* %0, %"class.std::__1::vector.140"* nonnull %7, i32 2, i64 70, i64 %516, i1 zeroext false)
  %521 = add i64 %520, %517
  br label %522

522:                                              ; preds = %55, %494, %499, %504, %509, %519, %514
  %523 = phi i64 [ %521, %519 ], [ %517, %514 ], [ %512, %509 ], [ %507, %504 ], [ %502, %499 ], [ %497, %494 ], [ %34, %55 ]
  %524 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %26, align 8
  br label %63
}

declare i32 @_ZN3net17GetSchemeNameEnumERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN3net21CookieInclusionStatusC1Ev(%"class.net::CookieInclusionStatus"*) unnamed_addr #1

declare void @_ZN3net18CookieAccessResultC1ENS_23CookieEffectiveSameSiteENS_21CookieInclusionStatusENS_21CookieAccessSemanticsEb(%"struct.net::CookieAccessResult"*, i32, i64, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3net12_GLOBAL__N_115LRACookieSorterERKNSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEESO_(%"class.std::__1::__map_iterator"* nocapture readonly dereferenceable(8), %"class.std::__1::__map_iterator"* nocapture readonly dereferenceable(8)) #6 {
  %3 = bitcast %"class.std::__1::__map_iterator"* %0 to %"class.std::__1::__tree_node.263"**
  %4 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, align 8
  %7 = bitcast %"class.std::__1::__map_iterator"* %1 to %"class.std::__1::__tree_node.263"**
  %8 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %8, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %9, align 8
  %11 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %6, i64 0, i32 6, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %12
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = icmp slt i64 %14, %12
  br label %24

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %10, i64 0, i32 4, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %6, i64 0, i32 4, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp slt i64 %22, %20
  br label %24

24:                                               ; preds = %18, %16
  %25 = phi i1 [ %17, %16 ], [ %23, %18 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net13CookieMonster23PurgeLeastRecentMatchesEPNSt3__16vectorINS1_14__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISD_EEEEEEPNS1_11__tree_nodeISH_PvEElEEEENS9_ISN_EEEENS_14CookiePriorityEmmb(%"class.net::CookieMonster"*, %"class.std::__1::vector.140"*, i32, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64 %3, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %9, align 8
  %11 = ptrtoint %"class.std::__1::__map_iterator"* %10 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %1, i64 0, i32 0, i32 1
  %13 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %12, align 8
  %14 = icmp eq %"class.std::__1::__map_iterator"* %10, %13
  %15 = ptrtoint %"class.std::__1::__map_iterator"* %13 to i64
  br i1 %14, label %223, label %16

16:                                               ; preds = %6
  %17 = getelementptr %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %13, i64 -1, i32 0, i32 0
  %18 = ptrtoint %"class.std::__1::__tree_end_node"** %17 to i64
  %19 = sub i64 %18, %11
  %20 = lshr i64 %19, 3
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 3
  %23 = icmp ult i64 %19, 24
  br i1 %23, label %72, label %24

24:                                               ; preds = %16
  %25 = sub nsw i64 %21, %22
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ 0, %24 ], [ %68, %26 ]
  %28 = phi %"class.std::__1::__map_iterator"* [ %10, %24 ], [ %69, %26 ]
  %29 = phi i64 [ %25, %24 ], [ %70, %26 ]
  %30 = bitcast %"class.std::__1::__map_iterator"* %28 to %"class.std::__1::__tree_node.263"**
  %31 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %31, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %32, align 8
  %34 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %33, i64 0, i32 10
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, %2
  %37 = zext i1 %36 to i64
  %38 = add i64 %27, %37
  %39 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %28, i64 1
  %40 = bitcast %"class.std::__1::__map_iterator"* %39 to %"class.std::__1::__tree_node.263"**
  %41 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %42, align 8
  %44 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %43, i64 0, i32 10
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, %2
  %47 = zext i1 %46 to i64
  %48 = add i64 %38, %47
  %49 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %28, i64 2
  %50 = bitcast %"class.std::__1::__map_iterator"* %49 to %"class.std::__1::__tree_node.263"**
  %51 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %51, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %52, align 8
  %54 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %53, i64 0, i32 10
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, %2
  %57 = zext i1 %56 to i64
  %58 = add i64 %48, %57
  %59 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %28, i64 3
  %60 = bitcast %"class.std::__1::__map_iterator"* %59 to %"class.std::__1::__tree_node.263"**
  %61 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %61, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %62, align 8
  %64 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %63, i64 0, i32 10
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, %2
  %67 = zext i1 %66 to i64
  %68 = add i64 %58, %67
  %69 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %28, i64 4
  %70 = add i64 %29, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %26, %16
  %73 = phi i64 [ undef, %16 ], [ %68, %26 ]
  %74 = phi i64 [ 0, %16 ], [ %68, %26 ]
  %75 = phi %"class.std::__1::__map_iterator"* [ %10, %16 ], [ %69, %26 ]
  %76 = icmp eq i64 %22, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %72, %77
  %78 = phi i64 [ %89, %77 ], [ %74, %72 ]
  %79 = phi %"class.std::__1::__map_iterator"* [ %90, %77 ], [ %75, %72 ]
  %80 = phi i64 [ %91, %77 ], [ %22, %72 ]
  %81 = bitcast %"class.std::__1::__map_iterator"* %79 to %"class.std::__1::__tree_node.263"**
  %82 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %82, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %83, align 8
  %85 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %84, i64 0, i32 10
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, %2
  %88 = zext i1 %87 to i64
  %89 = add i64 %78, %88
  %90 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %79, i64 1
  %91 = add i64 %80, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %77, !llvm.loop !165

93:                                               ; preds = %77, %72
  %94 = phi i64 [ %73, %72 ], [ %89, %77 ]
  %95 = icmp ugt i64 %94, %3
  br i1 %95, label %96, label %223

96:                                               ; preds = %93
  %97 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  store i64 0, i64* %8, align 8
  br i1 %5, label %98, label %156

98:                                               ; preds = %96
  %99 = getelementptr %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %13, i64 -1, i32 0, i32 0
  %100 = ptrtoint %"class.std::__1::__tree_end_node"** %99 to i64
  %101 = sub i64 %100, %11
  %102 = lshr i64 %101, 3
  %103 = add nuw nsw i64 %102, 1
  %104 = and i64 %103, 1
  %105 = icmp eq i64 %102, 0
  br i1 %105, label %134, label %106

106:                                              ; preds = %98
  %107 = sub nuw nsw i64 %103, %104
  br label %108

108:                                              ; preds = %230, %106
  %109 = phi i64 [ 0, %106 ], [ %231, %230 ]
  %110 = phi %"class.std::__1::__map_iterator"* [ %10, %106 ], [ %232, %230 ]
  %111 = phi i64 [ %107, %106 ], [ %233, %230 ]
  %112 = bitcast %"class.std::__1::__map_iterator"* %110 to %"class.std::__1::__tree_node.263"**
  %113 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %113, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %115 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %114, align 8
  %116 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %115, i64 0, i32 10
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, %2
  br i1 %118, label %119, label %124

119:                                              ; preds = %108
  %120 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %115, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !3
  %122 = zext i8 %121 to i64
  %123 = add i64 %109, %122
  br label %124

124:                                              ; preds = %119, %108
  %125 = phi i64 [ %109, %108 ], [ %123, %119 ]
  %126 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %110, i64 1
  %127 = bitcast %"class.std::__1::__map_iterator"* %126 to %"class.std::__1::__tree_node.263"**
  %128 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %128, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %129, align 8
  %131 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %130, i64 0, i32 10
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, %2
  br i1 %133, label %225, label %230

134:                                              ; preds = %230, %98
  %135 = phi i64 [ undef, %98 ], [ %231, %230 ]
  %136 = phi i64 [ 0, %98 ], [ %231, %230 ]
  %137 = phi %"class.std::__1::__map_iterator"* [ %10, %98 ], [ %232, %230 ]
  %138 = icmp eq i64 %104, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %134
  %140 = bitcast %"class.std::__1::__map_iterator"* %137 to %"class.std::__1::__tree_node.263"**
  %141 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %141, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %143 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %142, align 8
  %144 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %143, i64 0, i32 10
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, %2
  br i1 %146, label %147, label %152

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %143, i64 0, i32 7
  %149 = load i8, i8* %148, align 8, !range !3
  %150 = zext i8 %149 to i64
  %151 = add i64 %136, %150
  br label %152

152:                                              ; preds = %147, %139, %134
  %153 = phi i64 [ %135, %134 ], [ %136, %139 ], [ %151, %147 ]
  store i64 %153, i64* %8, align 8
  %154 = icmp ult i64 %153, %3
  %155 = select i1 %154, i64* %7, i64* %8
  br label %156

156:                                              ; preds = %96, %152
  %157 = phi i64* [ %155, %152 ], [ %7, %96 ]
  %158 = icmp eq i64 %4, 0
  br i1 %158, label %221, label %159

159:                                              ; preds = %156
  %160 = load i64, i64* %157, align 8
  %161 = sub i64 %94, %160
  %162 = bitcast %"class.std::__1::__map_iterator"** %12 to i64*
  %163 = bitcast %"class.std::__1::vector.140"* %1 to i64*
  %164 = icmp ne %"class.std::__1::__map_iterator"* %13, %10
  %165 = icmp ne i64 %161, 0
  %166 = and i1 %165, %164
  br i1 %166, label %167, label %221

167:                                              ; preds = %159, %214
  %168 = phi i64 [ %210, %214 ], [ 0, %159 ]
  %169 = phi i64 [ %211, %214 ], [ 0, %159 ]
  %170 = phi i64 [ %212, %214 ], [ %161, %159 ]
  %171 = phi i64 [ %209, %214 ], [ %15, %159 ]
  %172 = phi i64 [ %215, %214 ], [ %11, %159 ]
  %173 = inttoptr i64 %172 to %"class.std::__1::__map_iterator"*
  %174 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %173, i64 %169
  %175 = bitcast %"class.std::__1::__map_iterator"* %174 to %"class.std::__1::__tree_node.263"**
  %176 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %175, align 8
  %177 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %176, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %178 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %177, align 8
  %179 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %178, i64 0, i32 10
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %180, %2
  %182 = and i1 %181, %5
  %183 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %176, i64 0, i32 0, i32 0
  br i1 %182, label %184, label %188

184:                                              ; preds = %167
  %185 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %178, i64 0, i32 7
  %186 = load i8, i8* %185, align 8, !range !3
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %189, label %206

188:                                              ; preds = %167
  br i1 %181, label %189, label %206

189:                                              ; preds = %188, %184
  tail call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %183, i1 zeroext true, i32 6)
  %190 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %9, align 8
  %191 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %190, i64 %169
  %192 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %191, i64 1
  %193 = load i64, i64* %162, align 8
  %194 = ptrtoint %"class.std::__1::__map_iterator"* %192 to i64
  %195 = sub i64 %193, %194
  %196 = ashr exact i64 %195, 3
  %197 = icmp eq i64 %195, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %189
  %199 = bitcast %"class.std::__1::__map_iterator"* %191 to i8*
  %200 = bitcast %"class.std::__1::__map_iterator"* %192 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 %195, i1 false) #19
  br label %201

201:                                              ; preds = %189, %198
  %202 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %191, i64 %196
  store %"class.std::__1::__map_iterator"* %202, %"class.std::__1::__map_iterator"** %12, align 8
  %203 = add nuw i64 %168, 1
  %204 = add i64 %170, -1
  %205 = ptrtoint %"class.std::__1::__map_iterator"* %202 to i64
  br label %208

206:                                              ; preds = %184, %188
  %207 = add nuw i64 %169, 1
  br label %208

208:                                              ; preds = %206, %201
  %209 = phi i64 [ %205, %201 ], [ %171, %206 ]
  %210 = phi i64 [ %203, %201 ], [ %168, %206 ]
  %211 = phi i64 [ %169, %201 ], [ %207, %206 ]
  %212 = phi i64 [ %204, %201 ], [ %170, %206 ]
  %213 = icmp ult i64 %210, %4
  br i1 %213, label %214, label %221

214:                                              ; preds = %208
  %215 = load i64, i64* %163, align 8
  %216 = sub i64 %209, %215
  %217 = ashr exact i64 %216, 3
  %218 = icmp ult i64 %211, %217
  %219 = icmp ne i64 %212, 0
  %220 = and i1 %219, %218
  br i1 %220, label %167, label %221

221:                                              ; preds = %208, %214, %159, %156
  %222 = phi i64 [ 0, %156 ], [ 0, %159 ], [ %210, %214 ], [ %210, %208 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  br label %223

223:                                              ; preds = %6, %93, %221
  %224 = phi i64 [ %222, %221 ], [ 0, %93 ], [ 0, %6 ]
  ret i64 %224

225:                                              ; preds = %124
  %226 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %130, i64 0, i32 7
  %227 = load i8, i8* %226, align 8, !range !3
  %228 = zext i8 %227 to i64
  %229 = add i64 %125, %228
  br label %230

230:                                              ; preds = %225, %124
  %231 = phi i64 [ %125, %124 ], [ %229, %225 ]
  %232 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %110, i64 2
  %233 = add i64 %111, -2
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %134, label %108
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net13CookieMonster35GarbageCollectLeastRecentlyAccessedERKN4base4TimeES4_mNSt3__16vectorINS5_14__map_iteratorINS5_15__tree_iteratorINS5_12__value_typeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10unique_ptrINS_15CanonicalCookieENS5_14default_deleteISH_EEEEEEPNS5_11__tree_nodeISL_PvEElEEEENSD_ISR_EEEEPS2_(%"class.net::CookieMonster"*, %"class.base::Time"* nocapture readnone dereferenceable(8), %"class.base::Time"* nocapture readonly dereferenceable(8), i64, %"class.std::__1::vector.140"* nocapture readonly, %"class.base::Time"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %4, i64 0, i32 0, i32 1
  %11 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %10, align 8
  %12 = ptrtoint %"class.std::__1::__map_iterator"* %11 to i64
  %13 = ptrtoint %"class.std::__1::__map_iterator"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, %3
  %17 = zext i1 %16 to i64
  %18 = add i64 %17, %3
  %19 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %9, i64 %18
  %20 = bitcast i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  store i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)* @_ZN3net12_GLOBAL__N_115LRACookieSorterERKNSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEESO_, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %7, align 8
  call void @_ZNSt3__114__partial_sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_ENS_11__wrap_iterIPSM_EEEEvT0_SV_SV_T_(%"class.std::__1::__map_iterator"* %9, %"class.std::__1::__map_iterator"* %19, %"class.std::__1::__map_iterator"* %11, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** nonnull dereferenceable(8) %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  %21 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %8, align 8
  %22 = ptrtoint %"class.std::__1::__map_iterator"* %21 to i64
  %23 = icmp eq i64 %3, 0
  br i1 %23, label %56, label %24

24:                                               ; preds = %6
  %25 = shl nuw i64 %3, 3
  %26 = ashr exact i64 %25, 3
  %27 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %29, %24
  %30 = phi %"class.std::__1::__map_iterator"* [ %45, %29 ], [ %21, %24 ]
  %31 = phi i64 [ %44, %29 ], [ %26, %24 ]
  %32 = lshr i64 %31, 1
  %33 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %30, i64 %32
  %34 = bitcast %"class.std::__1::__map_iterator"* %33 to %"class.std::__1::__tree_node.263"**
  %35 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %35, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %36, align 8
  %38 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %37, i64 0, i32 6, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %39, %28
  %41 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %33, i64 1
  %42 = xor i64 %32, -1
  %43 = add i64 %31, %42
  %44 = select i1 %40, i64 %43, i64 %32
  %45 = select i1 %40, %"class.std::__1::__map_iterator"* %41, %"class.std::__1::__map_iterator"* %30
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %47, label %29

47:                                               ; preds = %29
  %48 = ptrtoint %"class.std::__1::__map_iterator"* %45 to i64
  %49 = icmp eq %"class.std::__1::__map_iterator"* %21, %45
  br i1 %49, label %56, label %50

50:                                               ; preds = %47, %50
  %51 = phi %"class.std::__1::__map_iterator"* [ %54, %50 ], [ %21, %47 ]
  %52 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %53, i1 zeroext true, i32 7) #19
  %54 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %51, i64 1
  %55 = icmp eq %"class.std::__1::__map_iterator"* %54, %45
  br i1 %55, label %56, label %50

56:                                               ; preds = %50, %6, %47
  %57 = phi i64 [ %48, %47 ], [ %22, %6 ], [ %48, %50 ]
  %58 = phi %"class.std::__1::__map_iterator"* [ %21, %47 ], [ %21, %6 ], [ %45, %50 ]
  %59 = sub i64 %57, %22
  %60 = ashr exact i64 %59, 3
  %61 = load %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"** %10, align 8
  %62 = icmp eq %"class.std::__1::__map_iterator"* %58, %61
  br i1 %62, label %71, label %63

63:                                               ; preds = %56
  %64 = bitcast %"class.std::__1::__map_iterator"* %58 to %"class.std::__1::__tree_node.263"**
  %65 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %65, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %66, align 8
  %68 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %67, i64 0, i32 6, i32 0, i32 0
  %69 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %69, align 8
  br label %71

71:                                               ; preds = %56, %63
  ret i64 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net13CookieMonster25GarbageCollectDeleteRangeERKN4base4TimeENS0_13DeletionCauseENSt3__111__wrap_iterIPNS6_14__map_iteratorINS6_15__tree_iteratorINS6_12__value_typeINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_10unique_ptrINS_15CanonicalCookieENS6_14default_deleteISI_EEEEEEPNS6_11__tree_nodeISM_PvEElEEEEEESU_(%"class.net::CookieMonster"*, %"class.base::Time"* nocapture readnone dereferenceable(8), i32, %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.std::__1::__map_iterator"* %3 to i64
  %7 = ptrtoint %"class.std::__1::__map_iterator"* %4 to i64
  %8 = icmp eq %"class.std::__1::__map_iterator"* %3, %4
  br i1 %8, label %9, label %12

9:                                                ; preds = %12, %5
  %10 = sub i64 %7, %6
  %11 = ashr exact i64 %10, 3
  ret i64 %11

12:                                               ; preds = %5, %12
  %13 = phi %"class.std::__1::__map_iterator"* [ %16, %12 ], [ %3, %5 ]
  %14 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  tail call void @_ZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseE(%"class.net::CookieMonster"* %0, %"class.std::__1::__tree_end_node"* %15, i1 zeroext true, i32 %2)
  %16 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %13, i64 1
  %17 = icmp eq %"class.std::__1::__map_iterator"* %16, %4
  br i1 %17, label %9, label %12
}

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, i8*, i64, i32) local_unnamed_addr #1

declare void @_ZN3net11cookie_util18CookieDomainAsHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13CookieMonster21DoRecordPeriodicStatsEv(%"class.net::CookieMonster"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::flat_map", align 8
  %5 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 7
  %10 = load i8, i8* %9, align 2, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %202, label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  tail call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0), i32 %15) #19
  %16 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.net::CookieAccessDelegate"*, %"class.net::CookieAccessDelegate"** %16, align 8
  %18 = icmp eq %"class.net::CookieAccessDelegate"* %17, null
  br i1 %18, label %171, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.base::flat_map"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #19
  %21 = bitcast %"class.net::CookieAccessDelegate"* %17 to void (%"class.base::flat_map"*, %"class.net::CookieAccessDelegate"*)***
  %22 = load void (%"class.base::flat_map"*, %"class.net::CookieAccessDelegate"*)**, void (%"class.base::flat_map"*, %"class.net::CookieAccessDelegate"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.base::flat_map"*, %"class.net::CookieAccessDelegate"*)*, void (%"class.base::flat_map"*, %"class.net::CookieAccessDelegate"*)** %22, i64 8
  %24 = load void (%"class.base::flat_map"*, %"class.net::CookieAccessDelegate"*)*, void (%"class.base::flat_map"*, %"class.net::CookieAccessDelegate"*)** %23, align 8
  call void %24(%"class.base::flat_map"* nonnull sret %4, %"class.net::CookieAccessDelegate"* nonnull %17) #19
  %25 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"** %25, align 8
  %27 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = load %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"** %27, align 8
  %29 = icmp eq %"struct.std::__1::pair.231"* %26, %28
  br i1 %29, label %43, label %30

30:                                               ; preds = %19
  %31 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %37 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 3, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %65

41:                                               ; preds = %167
  %42 = load %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"** %25, align 8
  br label %43

43:                                               ; preds = %41, %19
  %44 = phi %"struct.std::__1::pair.231"* [ %42, %41 ], [ %26, %19 ]
  %45 = icmp eq %"struct.std::__1::pair.231"* %44, null
  br i1 %45, label %64, label %46

46:                                               ; preds = %43
  %47 = bitcast %"struct.std::__1::pair.231"* %44 to i8*
  %48 = load %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"** %27, align 8
  %49 = icmp eq %"struct.std::__1::pair.231"* %48, %44
  br i1 %49, label %62, label %50

50:                                               ; preds = %46, %50
  %51 = phi %"struct.std::__1::pair.231"* [ %52, %50 ], [ %48, %46 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair.231", %"struct.std::__1::pair.231"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.std::__1::pair.231", %"struct.std::__1::pair.231"* %51, i64 -1, i32 1, i32 0
  %54 = getelementptr inbounds %"struct.std::__1::pair.231", %"struct.std::__1::pair.231"* %51, i64 -1, i32 1, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"**
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %55, align 8
  call void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.238"* %53, %"class.std::__1::__tree_node"* %56) #19
  %57 = getelementptr inbounds %"struct.std::__1::pair.231", %"struct.std::__1::pair.231"* %52, i64 0, i32 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %57) #19
  %58 = icmp eq %"struct.std::__1::pair.231"* %52, %44
  br i1 %58, label %59, label %50

59:                                               ; preds = %50
  %60 = bitcast %"class.base::flat_map"* %4 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %46
  %63 = phi i8* [ %61, %59 ], [ %47, %46 ]
  store %"struct.std::__1::pair.231"* %44, %"struct.std::__1::pair.231"** %27, align 8
  call void @_ZdlPv(i8* %63) #21
  br label %64

64:                                               ; preds = %43, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #19
  br label %171

65:                                               ; preds = %30, %167
  %66 = phi %"struct.std::__1::pair.231"* [ %26, %30 ], [ %169, %167 ]
  %67 = getelementptr inbounds %"struct.std::__1::pair.231", %"struct.std::__1::pair.231"* %66, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.231", %"struct.std::__1::pair.231"* %66, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %68, %69
  br i1 %70, label %167, label %71

71:                                               ; preds = %65, %164
  %72 = phi i32 [ %136, %164 ], [ 0, %65 ]
  %73 = phi %"class.std::__1::__tree_end_node"* [ %165, %164 ], [ %68, %65 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #19
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 11
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to i8*
  %76 = load i8, i8* %75, align 8, !range !3, !noalias !167
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 7
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::basic_string"*
  br label %83

81:                                               ; preds = %71
  %82 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #19
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi %"class.std::__1::basic_string"* [ %80, %78 ], [ %82, %81 ]
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1, !noalias !167
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %90, i64 24, i1 false) #19
  br label %96

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8, !noalias !167
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8, !noalias !167
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %93, i64 %95) #19
  br label %96

96:                                               ; preds = %91, %89
  %97 = load i8, i8* %33, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = icmp eq i8 %97, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #19
  br i1 %100, label %135, label %105

101:                                              ; preds = %96
  %102 = load i64, i64* %34, align 8
  %103 = icmp eq i64 %102, 0
  %104 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %104) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #19
  br i1 %103, label %135, label %105

105:                                              ; preds = %101, %99
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #19
  %106 = load i8, i8* %75, align 8, !range !3, !noalias !170
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 7
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::basic_string"*
  br label %113

111:                                              ; preds = %105
  %112 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #19
  br label %113

113:                                              ; preds = %111, %108
  %114 = phi %"class.std::__1::basic_string"* [ %110, %108 ], [ %112, %111 ]
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1, !noalias !170
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %113
  %120 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %120, i64 24, i1 false) #19
  br label %126

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8, !noalias !170
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8, !noalias !170
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %123, i64 %125) #19
  br label %126

126:                                              ; preds = %121, %119
  %127 = call i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE13__count_multiIS7_EEmRKT_(%"class.std::__1::__tree.7"* %37, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #19
  %128 = trunc i64 %127 to i32
  %129 = add i32 %72, %128
  %130 = load i8, i8* %39, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %126
  %133 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %133) #21
  br label %134

134:                                              ; preds = %132, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #19
  br label %135

135:                                              ; preds = %134, %101, %99
  %136 = phi i32 [ %129, %134 ], [ %72, %101 ], [ %72, %99 ]
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 1, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %148

140:                                              ; preds = %135
  %141 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::__tree_node_base"*
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 2
  %143 = bitcast %"class.std::__1::__tree_end_node"* %142 to %"class.std::__1::__tree_end_node"**
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %141
  br i1 %147, label %164, label %155

148:                                              ; preds = %135, %148
  %149 = phi %"class.std::__1::__tree_node_base"* [ %151, %148 ], [ %138, %135 ]
  %150 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %153, label %148

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 0
  br label %164

155:                                              ; preds = %140, %155
  %156 = phi %"class.std::__1::__tree_end_node"** [ %159, %155 ], [ %143, %140 ]
  %157 = bitcast %"class.std::__1::__tree_end_node"** %156 to %"class.std::__1::__tree_node_base"**
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %158, i64 0, i32 2
  %160 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %160, i64 0, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, %158
  br i1 %163, label %164, label %155

164:                                              ; preds = %155, %153, %140
  %165 = phi %"class.std::__1::__tree_end_node"* [ %154, %153 ], [ %144, %140 ], [ %160, %155 ]
  %166 = icmp eq %"class.std::__1::__tree_end_node"* %165, %69
  br i1 %166, label %167, label %71

167:                                              ; preds = %164, %65
  %168 = phi i32 [ 0, %65 ], [ %136, %164 ]
  call void @_ZN4base24UmaHistogramCustomCountsEPKciiii(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i64 0, i64 0), i32 %168, i32 0, i32 4000, i32 50) #19
  %169 = getelementptr inbounds %"struct.std::__1::pair.231", %"struct.std::__1::pair.231"* %66, i64 1
  %170 = icmp eq %"struct.std::__1::pair.231"* %169, %28
  br i1 %170, label %41, label %65

171:                                              ; preds = %12, %64
  %172 = load atomic i64, i64* @_ZZN3net13CookieMonster21DoRecordPeriodicStatsEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %173 = inttoptr i64 %172 to %"class.base::HistogramBase"*
  %174 = icmp eq i64 %172, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %171
  %176 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #19
  %177 = ptrtoint %"class.base::HistogramBase"* %176 to i64
  store atomic i64 %177, i64* @_ZZN3net13CookieMonster21DoRecordPeriodicStatsEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %178

178:                                              ; preds = %171, %175
  %179 = phi %"class.base::HistogramBase"* [ %173, %171 ], [ %176, %175 ]
  %180 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = trunc i64 %181 to i32
  %183 = bitcast %"class.base::HistogramBase"* %179 to void (%"class.base::HistogramBase"*, i32)***
  %184 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %184, i64 6
  %186 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %185, align 8
  call void %186(%"class.base::HistogramBase"* %179, i32 %182) #19
  %187 = load atomic i64, i64* @_ZZN3net13CookieMonster21DoRecordPeriodicStatsEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %188 = inttoptr i64 %187 to %"class.base::HistogramBase"*
  %189 = icmp eq i64 %187, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %178
  %191 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #19
  %192 = ptrtoint %"class.base::HistogramBase"* %191 to i64
  store atomic i64 %192, i64* @_ZZN3net13CookieMonster21DoRecordPeriodicStatsEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %193

193:                                              ; preds = %178, %190
  %194 = phi %"class.base::HistogramBase"* [ %188, %178 ], [ %191, %190 ]
  %195 = getelementptr inbounds %"class.net::CookieMonster", %"class.net::CookieMonster"* %0, i64 0, i32 2
  %196 = load i64, i64* %195, align 8
  %197 = trunc i64 %196 to i32
  %198 = bitcast %"class.base::HistogramBase"* %194 to void (%"class.base::HistogramBase"*, i32)***
  %199 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %199, i64 6
  %201 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %200, align 8
  call void %201(%"class.base::HistogramBase"* %194, i32 %197) #19
  br label %202

202:                                              ; preds = %8, %193
  %203 = phi i1 [ true, %193 ], [ false, %8 ]
  ret i1 %203
}

declare void @_ZN4base24UmaHistogramCounts100000EPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base24UmaHistogramCustomCountsEPKciiii(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare i32 @_ZN3url20DefaultPortForSchemeEPKci(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net8HttpUtil13IsControlCharEc(i8 signext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__partial_sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_ENS_11__wrap_iterIPSM_EEEEvT0_SV_SV_T_(%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::__map_iterator", align 8
  %6 = alloca %"class.std::__1::__map_iterator", align 8
  %7 = alloca %"class.std::__1::__map_iterator", align 8
  %8 = ptrtoint %"class.std::__1::__map_iterator"* %0 to i64
  %9 = ptrtoint %"class.std::__1::__map_iterator"* %1 to i64
  %10 = sub i64 %9, %8
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 8
  br i1 %12, label %13, label %84

13:                                               ; preds = %4
  %14 = add nsw i64 %11, -2
  %15 = sdiv i64 %14, 2
  %16 = icmp slt i64 %10, 16
  %17 = bitcast %"class.std::__1::__map_iterator"* %7 to i8*
  %18 = bitcast %"class.std::__1::__map_iterator"* %7 to i64*
  br label %19

19:                                               ; preds = %81, %13
  %20 = phi i64 [ %82, %81 ], [ %15, %13 ]
  %21 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 %20
  %22 = ptrtoint %"class.std::__1::__map_iterator"* %21 to i64
  %23 = shl nuw i64 %20, 3
  %24 = ashr exact i64 %23, 3
  %25 = icmp slt i64 %15, %24
  %26 = or i1 %16, %25
  br i1 %26, label %81, label %27

27:                                               ; preds = %19
  %28 = ashr exact i64 %23, 2
  %29 = or i64 %28, 1
  %30 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 %29
  %31 = ptrtoint %"class.std::__1::__map_iterator"* %30 to i64
  %32 = add nsw i64 %29, 1
  %33 = icmp slt i64 %32, %11
  br i1 %33, label %34, label %41

34:                                               ; preds = %27
  %35 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %36 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %30, i64 1
  %37 = call zeroext i1 %35(%"class.std::__1::__map_iterator"* dereferenceable(8) %30, %"class.std::__1::__map_iterator"* dereferenceable(8) %36) #19
  %38 = ptrtoint %"class.std::__1::__map_iterator"* %36 to i64
  %39 = select i1 %37, i64 %38, i64 %31
  %40 = select i1 %37, i64 %32, i64 %29
  br label %41

41:                                               ; preds = %34, %27
  %42 = phi i64 [ %31, %27 ], [ %39, %34 ]
  %43 = phi i64 [ %29, %27 ], [ %40, %34 ]
  %44 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %45 = inttoptr i64 %42 to %"class.std::__1::__map_iterator"*
  %46 = call zeroext i1 %44(%"class.std::__1::__map_iterator"* dereferenceable(8) %45, %"class.std::__1::__map_iterator"* dereferenceable(8) %21) #19
  br i1 %46, label %81, label %47

47:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %48 = bitcast %"class.std::__1::__map_iterator"* %21 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %18, align 8
  br label %50

50:                                               ; preds = %72, %47
  %51 = phi i64 [ %42, %47 ], [ %73, %72 ]
  %52 = phi i64 [ %22, %47 ], [ %51, %72 ]
  %53 = phi i64 [ %43, %47 ], [ %74, %72 ]
  %54 = inttoptr i64 %51 to i64*
  %55 = inttoptr i64 %52 to i64*
  %56 = load i64, i64* %54, align 8
  store i64 %56, i64* %55, align 8
  %57 = icmp slt i64 %15, %53
  br i1 %57, label %78, label %58

58:                                               ; preds = %50
  %59 = shl nsw i64 %53, 1
  %60 = or i64 %59, 1
  %61 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 %60
  %62 = ptrtoint %"class.std::__1::__map_iterator"* %61 to i64
  %63 = add nsw i64 %60, 1
  %64 = icmp slt i64 %63, %11
  br i1 %64, label %65, label %72

65:                                               ; preds = %58
  %66 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %67 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %61, i64 1
  %68 = call zeroext i1 %66(%"class.std::__1::__map_iterator"* dereferenceable(8) %61, %"class.std::__1::__map_iterator"* dereferenceable(8) %67) #19
  %69 = ptrtoint %"class.std::__1::__map_iterator"* %67 to i64
  %70 = select i1 %68, i64 %69, i64 %62
  %71 = select i1 %68, i64 %63, i64 %60
  br label %72

72:                                               ; preds = %65, %58
  %73 = phi i64 [ %62, %58 ], [ %70, %65 ]
  %74 = phi i64 [ %60, %58 ], [ %71, %65 ]
  %75 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %76 = inttoptr i64 %73 to %"class.std::__1::__map_iterator"*
  %77 = call zeroext i1 %75(%"class.std::__1::__map_iterator"* dereferenceable(8) %76, %"class.std::__1::__map_iterator"* nonnull dereferenceable(8) %7) #19
  br i1 %77, label %78, label %50

78:                                               ; preds = %72, %50
  %79 = inttoptr i64 %51 to i64*
  %80 = load i64, i64* %18, align 8
  store i64 %80, i64* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %81

81:                                               ; preds = %19, %41, %78
  %82 = add nsw i64 %20, -1
  %83 = icmp sgt i64 %20, 0
  br i1 %83, label %19, label %84

84:                                               ; preds = %81, %4
  %85 = icmp eq %"class.std::__1::__map_iterator"* %1, %2
  br i1 %85, label %100, label %86

86:                                               ; preds = %84
  %87 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %88 = icmp slt i64 %10, 16
  %89 = add nsw i64 %11, -2
  %90 = sdiv i64 %89, 2
  %91 = icmp slt i64 %89, -1
  %92 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 1
  %93 = ptrtoint %"class.std::__1::__map_iterator"* %92 to i64
  %94 = icmp sgt i64 %10, 16
  %95 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 2
  %96 = ptrtoint %"class.std::__1::__map_iterator"* %95 to i64
  %97 = bitcast %"class.std::__1::__map_iterator"* %5 to i8*
  %98 = bitcast %"class.std::__1::__map_iterator"* %5 to i64*
  %99 = or i1 %88, %91
  br label %172

100:                                              ; preds = %225, %84
  br i1 %12, label %101, label %171

101:                                              ; preds = %100
  %102 = lshr exact i64 %10, 3
  %103 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %104 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 1
  %105 = ptrtoint %"class.std::__1::__map_iterator"* %104 to i64
  %106 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 2
  %107 = ptrtoint %"class.std::__1::__map_iterator"* %106 to i64
  %108 = bitcast %"class.std::__1::__map_iterator"* %6 to i8*
  %109 = bitcast %"class.std::__1::__map_iterator"* %6 to i64*
  br label %110

110:                                              ; preds = %169, %101
  %111 = phi i64 [ %119, %169 ], [ %102, %101 ]
  %112 = phi %"class.std::__1::__map_iterator"* [ %115, %169 ], [ %1, %101 ]
  %113 = icmp sgt i64 %111, 1
  br i1 %113, label %114, label %171

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %112, i64 -1
  %116 = load i64, i64* %103, align 8
  %117 = bitcast %"class.std::__1::__map_iterator"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %103, align 8
  store i64 %116, i64* %117, align 8
  %119 = add nsw i64 %111, -1
  %120 = icmp eq i64 %111, 2
  br i1 %120, label %171, label %121

121:                                              ; preds = %114
  %122 = add nsw i64 %111, -3
  %123 = sdiv i64 %122, 2
  %124 = icmp sgt i64 %119, 2
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %127 = call zeroext i1 %126(%"class.std::__1::__map_iterator"* dereferenceable(8) %104, %"class.std::__1::__map_iterator"* dereferenceable(8) %106) #19
  %128 = select i1 %127, i64 %107, i64 %105
  %129 = select i1 %127, i64 2, i64 1
  br label %130

130:                                              ; preds = %125, %121
  %131 = phi i64 [ %105, %121 ], [ %128, %125 ]
  %132 = phi i64 [ 1, %121 ], [ %129, %125 ]
  %133 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %134 = inttoptr i64 %131 to %"class.std::__1::__map_iterator"*
  %135 = call zeroext i1 %133(%"class.std::__1::__map_iterator"* dereferenceable(8) %134, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %135, label %169, label %136

136:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #19
  %137 = load i64, i64* %103, align 8
  store i64 %137, i64* %109, align 8
  br label %138

138:                                              ; preds = %160, %136
  %139 = phi i64 [ %131, %136 ], [ %161, %160 ]
  %140 = phi i64 [ %8, %136 ], [ %139, %160 ]
  %141 = phi i64 [ %132, %136 ], [ %162, %160 ]
  %142 = inttoptr i64 %139 to i64*
  %143 = inttoptr i64 %140 to i64*
  %144 = load i64, i64* %142, align 8
  store i64 %144, i64* %143, align 8
  %145 = icmp slt i64 %123, %141
  br i1 %145, label %166, label %146

146:                                              ; preds = %138
  %147 = shl nsw i64 %141, 1
  %148 = or i64 %147, 1
  %149 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 %148
  %150 = ptrtoint %"class.std::__1::__map_iterator"* %149 to i64
  %151 = add nsw i64 %148, 1
  %152 = icmp slt i64 %151, %119
  br i1 %152, label %153, label %160

153:                                              ; preds = %146
  %154 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %155 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %149, i64 1
  %156 = call zeroext i1 %154(%"class.std::__1::__map_iterator"* dereferenceable(8) %149, %"class.std::__1::__map_iterator"* dereferenceable(8) %155) #19
  %157 = ptrtoint %"class.std::__1::__map_iterator"* %155 to i64
  %158 = select i1 %156, i64 %157, i64 %150
  %159 = select i1 %156, i64 %151, i64 %148
  br label %160

160:                                              ; preds = %153, %146
  %161 = phi i64 [ %150, %146 ], [ %158, %153 ]
  %162 = phi i64 [ %148, %146 ], [ %159, %153 ]
  %163 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %164 = inttoptr i64 %161 to %"class.std::__1::__map_iterator"*
  %165 = call zeroext i1 %163(%"class.std::__1::__map_iterator"* dereferenceable(8) %164, %"class.std::__1::__map_iterator"* nonnull dereferenceable(8) %6) #19
  br i1 %165, label %166, label %138

166:                                              ; preds = %160, %138
  %167 = inttoptr i64 %139 to i64*
  %168 = load i64, i64* %109, align 8
  store i64 %168, i64* %167, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #19
  br label %169

169:                                              ; preds = %130, %166
  %170 = icmp sgt i64 %119, 1
  br i1 %170, label %110, label %171

171:                                              ; preds = %114, %110, %169, %100
  ret void

172:                                              ; preds = %86, %225
  %173 = phi %"class.std::__1::__map_iterator"* [ %1, %86 ], [ %226, %225 ]
  %174 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %175 = call zeroext i1 %174(%"class.std::__1::__map_iterator"* dereferenceable(8) %173, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %175, label %176, label %225

176:                                              ; preds = %172
  %177 = bitcast %"class.std::__1::__map_iterator"* %173 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = load i64, i64* %87, align 8
  store i64 %179, i64* %177, align 8
  store i64 %178, i64* %87, align 8
  br i1 %99, label %225, label %180

180:                                              ; preds = %176
  br i1 %94, label %181, label %186

181:                                              ; preds = %180
  %182 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %183 = call zeroext i1 %182(%"class.std::__1::__map_iterator"* dereferenceable(8) %92, %"class.std::__1::__map_iterator"* dereferenceable(8) %95) #19
  %184 = select i1 %183, i64 %96, i64 %93
  %185 = select i1 %183, i64 2, i64 1
  br label %186

186:                                              ; preds = %181, %180
  %187 = phi i64 [ %93, %180 ], [ %184, %181 ]
  %188 = phi i64 [ 1, %180 ], [ %185, %181 ]
  %189 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %190 = inttoptr i64 %187 to %"class.std::__1::__map_iterator"*
  %191 = call zeroext i1 %189(%"class.std::__1::__map_iterator"* dereferenceable(8) %190, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %191, label %225, label %192

192:                                              ; preds = %186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #19
  %193 = load i64, i64* %87, align 8
  store i64 %193, i64* %98, align 8
  br label %194

194:                                              ; preds = %216, %192
  %195 = phi i64 [ %187, %192 ], [ %217, %216 ]
  %196 = phi i64 [ %8, %192 ], [ %195, %216 ]
  %197 = phi i64 [ %188, %192 ], [ %218, %216 ]
  %198 = inttoptr i64 %195 to i64*
  %199 = inttoptr i64 %196 to i64*
  %200 = load i64, i64* %198, align 8
  store i64 %200, i64* %199, align 8
  %201 = icmp slt i64 %90, %197
  br i1 %201, label %222, label %202

202:                                              ; preds = %194
  %203 = shl nsw i64 %197, 1
  %204 = or i64 %203, 1
  %205 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 %204
  %206 = ptrtoint %"class.std::__1::__map_iterator"* %205 to i64
  %207 = add nsw i64 %204, 1
  %208 = icmp slt i64 %207, %11
  br i1 %208, label %209, label %216

209:                                              ; preds = %202
  %210 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %211 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %205, i64 1
  %212 = call zeroext i1 %210(%"class.std::__1::__map_iterator"* dereferenceable(8) %205, %"class.std::__1::__map_iterator"* dereferenceable(8) %211) #19
  %213 = ptrtoint %"class.std::__1::__map_iterator"* %211 to i64
  %214 = select i1 %212, i64 %213, i64 %206
  %215 = select i1 %212, i64 %207, i64 %204
  br label %216

216:                                              ; preds = %209, %202
  %217 = phi i64 [ %206, %202 ], [ %214, %209 ]
  %218 = phi i64 [ %204, %202 ], [ %215, %209 ]
  %219 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %3, align 8
  %220 = inttoptr i64 %217 to %"class.std::__1::__map_iterator"*
  %221 = call zeroext i1 %219(%"class.std::__1::__map_iterator"* dereferenceable(8) %220, %"class.std::__1::__map_iterator"* nonnull dereferenceable(8) %5) #19
  br i1 %221, label %222, label %194

222:                                              ; preds = %216, %194
  %223 = inttoptr i64 %195 to i64*
  %224 = load i64, i64* %98, align 8
  store i64 %224, i64* %223, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #19
  br label %225

225:                                              ; preds = %176, %222, %186, %172
  %226 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %173, i64 1
  %227 = icmp eq %"class.std::__1::__map_iterator"* %226, %2
  br i1 %227, label %100, label %172
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.238"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.238"* %0, %"class.std::__1::__tree_node"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.238"* %0, %"class.std::__1::__tree_node"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %10) #19
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #21
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.59"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #19
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #19
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #19
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #19
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #19
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #19
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #19
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #19
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #21
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #19
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #19
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #21
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #19
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #19
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.266"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.266"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.266"* %1 to %"class.std::__1::__tree_node.266"**
  %6 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.266"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.266"**
  %9 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.266"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.266"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #21
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.7"*, %"class.std::__1::__tree_node.263"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.263"* %1, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.263"* %1 to %"class.std::__1::__tree_node.263"**
  %6 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.7"* %0, %"class.std::__1::__tree_node.263"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.263"**
  %9 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.7"* %0, %"class.std::__1::__tree_node.263"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %11, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %11, align 8
  %13 = icmp eq %"class.net::CanonicalCookie"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %12) #19
  %15 = bitcast %"class.net::CanonicalCookie"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #21
  br label %16

16:                                               ; preds = %14, %4
  %17 = bitcast %"struct.std::__1::pair.154"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #21
  br label %24

24:                                               ; preds = %16, %21
  %25 = bitcast %"class.std::__1::__tree_node.263"* %1 to i8*
  tail call void @_ZdlPv(i8* %25) #21
  br label %26

26:                                               ; preds = %2, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.29"*, %"class.std::__1::__tree_node.267"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.267"* %1, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.267"* %1 to %"class.std::__1::__tree_node.267"**
  %6 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_node.267"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.267"**
  %9 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_node.267"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %1, i64 0, i32 1, i32 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %1, i64 0, i32 1, i32 0, i32 1, i32 2
  %15 = load i64, i64* %14, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* %11, i64 %13, i64 %15) #19
  %16 = bitcast %"class.base::circular_deque"* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @free(i8* %17) #19
  %18 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #21
  br label %25

25:                                               ; preds = %4, %22
  %26 = bitcast %"class.std::__1::__tree_node.267"* %1 to i8*
  tail call void @_ZdlPv(i8* %26) #21
  br label %27

27:                                               ; preds = %2, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"class.base::OnceCallback"* %8, %"class.base::OnceCallback"* %12)
  %13 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.base::OnceCallback"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"class.base::OnceCallback"* %15, %"class.base::OnceCallback"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.base::OnceCallback"*, align 8
  %6 = alloca %"class.base::OnceCallback"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.base::OnceCallback"* %1, %"class.base::OnceCallback"** %5, align 8
  store %"class.base::OnceCallback"* %2, %"class.base::OnceCallback"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.base::OnceCallback"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.base::OnceCallback"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #19
  %17 = bitcast %"class.base::OnceCallback"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), i8* %16, i8* %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #19
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %26 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %27 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %28 = icmp eq %"class.base::OnceCallback"* %26, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"class.base::OnceCallback"* [ %33, %29 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %30, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #19
  %32 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 1
  store %"class.base::OnceCallback"* %33, %"class.base::OnceCallback"** %5, align 8
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %35 = icmp eq %"class.base::OnceCallback"* %33, %34
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #14 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #19
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN3net36NetLogCookieMonsterConstructorParamsEb(%"class.base::Value"* sret, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEENS_12OnceCallbackIFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector.70", align 16
  %3 = alloca %"class.base::OnceCallback.77", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 4
  %10 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.70"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #19
  %16 = bitcast %"class.base::OnceCallback.77"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = getelementptr inbounds i8, i8* %7, i64 %14
  %18 = bitcast i8* %17 to %"class.net::CookieMonster"*
  %19 = and i64 %11, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %1
  %22 = bitcast i8* %17 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %11, -1
  %25 = getelementptr i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to void (%"class.net::CookieMonster"*, %"class.std::__1::vector.70"*, %"class.base::OnceCallback.77"*)**
  %27 = load void (%"class.net::CookieMonster"*, %"class.std::__1::vector.70"*, %"class.base::OnceCallback.77"*)*, void (%"class.net::CookieMonster"*, %"class.std::__1::vector.70"*, %"class.base::OnceCallback.77"*)** %26, align 8
  br label %30

28:                                               ; preds = %1
  %29 = inttoptr i64 %11 to void (%"class.net::CookieMonster"*, %"class.std::__1::vector.70"*, %"class.base::OnceCallback.77"*)*
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi void (%"class.net::CookieMonster"*, %"class.std::__1::vector.70"*, %"class.base::OnceCallback.77"*)* [ %27, %21 ], [ %29, %28 ]
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to <2 x i64>*
  %33 = load <2 x i64>, <2 x i64>* %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector.70"* %2 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %35, align 16
  %36 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 3
  %37 = bitcast void (%"class.base::internal::BindStateBase"*)** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.net::CanonicalCookie"** %39 to i64*
  store i64 %38, i64* %40, align 16
  %41 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #19
  %42 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.base::internal::BindStateBase"**
  %43 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::OnceCallback.77"* %3 to i64*
  store i64 %44, i64* %45, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  call void %31(%"class.net::CookieMonster"* %18, %"class.std::__1::vector.70"* nonnull %2, %"class.base::OnceCallback.77"* nonnull %3) #19
  %46 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #19
  %47 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2, i64 0, i32 0, i32 0
  %48 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %47, align 16
  %49 = icmp eq %"class.net::CanonicalCookie"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %30
  %51 = bitcast %"class.net::CanonicalCookie"* %48 to i8*
  %52 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %34, align 8
  %53 = icmp eq %"class.net::CanonicalCookie"* %52, %48
  br i1 %53, label %61, label %54

54:                                               ; preds = %50, %54
  %55 = phi %"class.net::CanonicalCookie"* [ %56, %54 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %55, i64 -1
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %56) #19
  %57 = icmp eq %"class.net::CanonicalCookie"* %56, %48
  br i1 %57, label %58, label %54

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::vector.70"* %2 to i8**
  %60 = load i8*, i8** %59, align 16
  br label %61

61:                                               ; preds = %58, %50
  %62 = phi i8* [ %60, %58 ], [ %51, %50 ]
  store %"class.net::CanonicalCookie"* %48, %"class.net::CanonicalCookie"** %34, align 8
  call void @_ZdlPv(i8* %62) #21
  br label %63

63:                                               ; preds = %30, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS2_15CanonicalCookieENS4_9allocatorIS6_EEEENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SD_EEC2ISF_JSH_RKS9_SD_EEENS4_17integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.base::internal::UnretainedWrapper"* dereferenceable(8), %"class.std::__1::vector.70"* dereferenceable(24), %"class.base::OnceCallback.77"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %7, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS2_15CanonicalCookieENS4_9allocatorIS6_EEEENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SD_EE7DestroyEPKNS0_13BindStateBaseE) #19
  %8 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %13 = bitcast %"class.base::internal::UnretainedWrapper"* %3 to i64*
  %14 = bitcast %"class.std::__1::tuple.307"* %12 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tuple_leaf.310"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #19
  %18 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 1
  %19 = bitcast %"class.net::CanonicalCookie"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.70"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = sdiv exact i64 %23, 144
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %54, label %26

26:                                               ; preds = %6
  %27 = icmp ugt i64 %24, 128102389400760775
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::__tuple_leaf.310"* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #20
  unreachable

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 %23) #21
  %32 = bitcast i8* %31 to %"class.net::CanonicalCookie"*
  %33 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %34 = bitcast %"class.net::CanonicalCookie"** %33 to i8**
  store i8* %31, i8** %34, align 8
  %35 = bitcast %"class.std::__1::__tuple_leaf.310"* %16 to i8**
  store i8* %31, i8** %35, align 8
  %36 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %32, i64 %24
  %37 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::CanonicalCookie"* %36, %"class.net::CanonicalCookie"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 0
  %39 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %38, align 8
  %40 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %18, align 8
  %41 = bitcast %"class.net::CanonicalCookie"** %33 to i64*
  %42 = ptrtoint i8* %31 to i64
  %43 = icmp eq %"class.net::CanonicalCookie"* %39, %40
  br i1 %43, label %52, label %44

44:                                               ; preds = %30, %44
  %45 = phi %"class.net::CanonicalCookie"* [ %48, %44 ], [ %32, %30 ]
  %46 = phi %"class.net::CanonicalCookie"* [ %47, %44 ], [ %39, %30 ]
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %45, %"class.net::CanonicalCookie"* dereferenceable(144) %46) #19
  %47 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %46, i64 1
  %48 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %45, i64 1
  %49 = icmp eq %"class.net::CanonicalCookie"* %47, %40
  br i1 %49, label %50, label %44

50:                                               ; preds = %44
  %51 = ptrtoint %"class.net::CanonicalCookie"* %48 to i64
  br label %52

52:                                               ; preds = %50, %30
  %53 = phi i64 [ %42, %30 ], [ %51, %50 ]
  store i64 %53, i64* %41, align 8
  br label %54

54:                                               ; preds = %6, %52
  %55 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 2
  %56 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %5, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.base::OnceCallback.77"* %5 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::__tuple_leaf.311"* %55 to i64*
  store i64 %58, i64* %59, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__16vectorINS2_15CanonicalCookieENS4_9allocatorIS6_EEEENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.net::CanonicalCookie"**
  %8 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8
  %9 = icmp eq %"class.net::CanonicalCookie"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.net::CanonicalCookie"* %8 to i8*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %13 = bitcast %"class.base::internal::BindStateBase"* %12 to %"class.net::CanonicalCookie"**
  %14 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %13, align 8
  %15 = icmp eq %"class.net::CanonicalCookie"* %14, %8
  br i1 %15, label %23, label %16

16:                                               ; preds = %10, %16
  %17 = phi %"class.net::CanonicalCookie"* [ %18, %16 ], [ %14, %10 ]
  %18 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %17, i64 -1
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %18) #19
  %19 = icmp eq %"class.net::CanonicalCookie"* %18, %8
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %10
  %24 = phi i8* [ %22, %20 ], [ %11, %10 ]
  store %"class.net::CanonicalCookie"* %8, %"class.net::CanonicalCookie"** %13, align 8
  tail call void @_ZdlPv(i8* %24) #21
  br label %25

25:                                               ; preds = %3, %23
  %26 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #21
  br label %27

27:                                               ; preds = %25, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS3_15CanonicalCookieENS5_14default_deleteIS7_EEEERK4GURLRKNS3_13CookieOptionsENS_12OnceCallbackIFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_SK_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.77", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.GURL*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 17
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::CookieOptions"*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 21
  %12 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %15 = bitcast void ()** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback.77"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %18 = getelementptr inbounds i8, i8* %6, i64 %16
  %19 = bitcast i8* %18 to %"class.net::CookieMonster"*
  %20 = and i64 %13, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %13, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.77"*)**
  %28 = load void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.77"*)*, void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.77"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %13 to void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.77"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.77"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %34 = bitcast void (%"class.base::internal::BindStateBase"*)** %33 to %"class.net::CanonicalCookie"**
  %35 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %34, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %34, align 8
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.base::internal::BindStateBase"**
  %37 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::OnceCallback.77"* %2 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  call void %32(%"class.net::CookieMonster"* %19, %"class.net::CanonicalCookie"* %35, %class.GURL* dereferenceable(120) %8, %"class.net::CookieOptions"* dereferenceable(32) %10, %"class.base::OnceCallback.77"* nonnull %2) #19
  %40 = getelementptr inbounds %"class.base::OnceCallback.77", %"class.base::OnceCallback.77"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS2_15CanonicalCookieENS4_14default_deleteIS6_EEEERK4GURLRKNS2_13CookieOptionsENS_12OnceCallbackIFvNS2_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_SJ_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 6, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 5, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.net::CookieOptions"*
  tail call void @_ZN3net13CookieOptionsD1Ev(%"class.net::CookieOptions"* %7) #19
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %9 = bitcast %"class.base::internal::BindStateBase"* %8 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %9) #19
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %11 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %10 to %"class.net::CanonicalCookie"**
  %12 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %11, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %11, align 8
  %13 = icmp eq %"class.net::CanonicalCookie"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %12) #19
  %15 = bitcast %"class.net::CanonicalCookie"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #21
  br label %16

16:                                               ; preds = %3, %14
  %17 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRK4GURLRKNS3_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS3_22CookieWithAccessResultENSC_9allocatorISE_EEEESJ_EEEEJNS0_17UnretainedWrapperIS4_EES5_S8_SL_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.89", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.GURL*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 16
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::CookieOptions"*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 20
  %12 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %15 = bitcast void ()** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback.89"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %18 = getelementptr inbounds i8, i8* %6, i64 %16
  %19 = bitcast i8* %18 to %"class.net::CookieMonster"*
  %20 = and i64 %13, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %13, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to void (%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.89"*)**
  %28 = load void (%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.89"*)*, void (%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.89"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %13 to void (%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.89"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi void (%"class.net::CookieMonster"*, %class.GURL*, %"class.net::CookieOptions"*, %"class.base::OnceCallback.89"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.base::internal::BindStateBase"**
  %34 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::OnceCallback.89"* %2 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8
  call void %32(%"class.net::CookieMonster"* %19, %class.GURL* dereferenceable(120) %8, %"class.net::CookieOptions"* dereferenceable(32) %10, %"class.base::OnceCallback.89"* nonnull %2) #19
  %37 = getelementptr inbounds %"class.base::OnceCallback.89", %"class.base::OnceCallback.89"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRK4GURLRKNS2_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS2_22CookieWithAccessResultENSB_9allocatorISD_EEEESI_EEEEJNS0_17UnretainedWrapperIS3_EES4_S7_SK_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 6, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 5, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.net::CookieOptions"*
  tail call void @_ZN3net13CookieOptionsD1Ev(%"class.net::CookieOptions"* %7) #19
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %9 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %8 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %9) #19
  %10 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  br label %11

11:                                               ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS3_15CanonicalCookieENS6_9allocatorIS8_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.90", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.90"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds i8, i8* %6, i64 %12
  %15 = bitcast i8* %14 to %"class.net::CookieMonster"*
  %16 = and i64 %9, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %9, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)**
  %24 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)** %23, align 8
  br label %27

25:                                               ; preds = %1
  %26 = inttoptr i64 %9 to void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.90"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::BindStateBase"**
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback.90"* %2 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  call void %28(%"class.net::CookieMonster"* %15, %"class.base::OnceCallback.90"* nonnull %2) #19
  %33 = getelementptr inbounds %"class.base::OnceCallback.90", %"class.base::OnceCallback.90"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS2_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS3_EESE_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #21
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS3_15CanonicalCookieENS6_9allocatorIS8_EEEERKNS7_INS3_21CookieAccessSemanticsENS9_ISE_EEEEEEESD_EJNS0_17UnretainedWrapperIS4_EESK_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_(%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.70"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.91", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %9 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.91"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #19
  %15 = getelementptr inbounds i8, i8* %7, i64 %13
  %16 = bitcast i8* %15 to %"class.net::CookieMonster"*
  %17 = and i64 %10, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %10, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"*, %"class.std::__1::vector.70"*)**
  %25 = load void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"*, %"class.std::__1::vector.70"*)*, void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"*, %"class.std::__1::vector.70"*)** %24, align 8
  br label %28

26:                                               ; preds = %2
  %27 = inttoptr i64 %10 to void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"*, %"class.std::__1::vector.70"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.net::CookieMonster"*, %"class.base::OnceCallback.91"*, %"class.std::__1::vector.70"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::BindStateBase"**
  %31 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback.91"* %3 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  call void %29(%"class.net::CookieMonster"* %16, %"class.base::OnceCallback.91"* nonnull %3, %"class.std::__1::vector.70"* dereferenceable(24) %1) #19
  %34 = getelementptr inbounds %"class.base::OnceCallback.91", %"class.base::OnceCallback.91"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS2_15CanonicalCookieENS5_9allocatorIS7_EEEERKNS6_INS2_21CookieAccessSemanticsENS8_ISD_EEEEEEESC_EJNS0_17UnretainedWrapperIS3_EESJ_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #21
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNS3_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EES5_SA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.92", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::CanonicalCookie"*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 19
  %10 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback.92"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds i8, i8* %6, i64 %14
  %17 = bitcast i8* %16 to %"class.net::CookieMonster"*
  %18 = and i64 %11, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %1
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %11, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %"class.base::OnceCallback.92"*)**
  %26 = load void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %"class.base::OnceCallback.92"*)*, void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %"class.base::OnceCallback.92"*)** %25, align 8
  br label %29

27:                                               ; preds = %1
  %28 = inttoptr i64 %11 to void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %"class.base::OnceCallback.92"*)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi void (%"class.net::CookieMonster"*, %"class.net::CanonicalCookie"*, %"class.base::OnceCallback.92"*)* [ %26, %20 ], [ %28, %27 ]
  %31 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.base::internal::BindStateBase"**
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  call void %30(%"class.net::CookieMonster"* %17, %"class.net::CanonicalCookie"* dereferenceable(144) %8, %"class.base::OnceCallback.92"* nonnull %2) #19
  %35 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNS2_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES4_S9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 6, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.net::CanonicalCookie"*
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %7) #19
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #21
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNS3_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EES6_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.92", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::CookieDeletionInfo::TimeRange"*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %10 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback.92"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds i8, i8* %6, i64 %14
  %17 = bitcast i8* %16 to %"class.net::CookieMonster"*
  %18 = and i64 %11, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %1
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %11, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::OnceCallback.92"*)**
  %26 = load void (%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::OnceCallback.92"*)*, void (%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::OnceCallback.92"*)** %25, align 8
  br label %29

27:                                               ; preds = %1
  %28 = inttoptr i64 %11 to void (%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::OnceCallback.92"*)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi void (%"class.net::CookieMonster"*, %"class.net::CookieDeletionInfo::TimeRange"*, %"class.base::OnceCallback.92"*)* [ %26, %20 ], [ %28, %27 ]
  %31 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.base::internal::BindStateBase"**
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  call void %30(%"class.net::CookieMonster"* %17, %"class.net::CookieDeletionInfo::TimeRange"* dereferenceable(16) %8, %"class.base::OnceCallback.92"* nonnull %2) #19
  %35 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNS2_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES5_SA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #21
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN3net18CookieDeletionInfo9TimeRangeC1ERKS1_(%"class.net::CookieDeletionInfo::TimeRange"*, %"class.net::CookieDeletionInfo::TimeRange"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFbRKNS3_18CookieDeletionInfoERKNS3_15CanonicalCookieEEJNS0_17UnretainedWrapperIS4_EES5_EEEFbSA_EE3RunEPNS0_13BindStateBaseESA_(%"class.base::internal::BindStateBase"*, %"class.net::CanonicalCookie"* dereferenceable(144)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"struct.net::CookieDeletionInfo"*
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 %13
  %15 = bitcast i8* %14 to %"class.net::CookieMonster"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i1 (%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.net::CanonicalCookie"*)**
  %24 = load i1 (%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.net::CanonicalCookie"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %10 to i1 (%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.net::CanonicalCookie"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi i1 (%"class.net::CookieMonster"*, %"struct.net::CookieDeletionInfo"*, %"class.net::CanonicalCookie"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = tail call zeroext i1 %28(%"class.net::CookieMonster"* %15, %"struct.net::CookieDeletionInfo"* dereferenceable(296) %8, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #19
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFbRKNS2_18CookieDeletionInfoERKNS2_15CanonicalCookieEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"struct.net::CookieDeletionInfo"*
  tail call void @_ZN3net18CookieDeletionInfoD1Ev(%"struct.net::CookieDeletionInfo"* %5) #19
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #21
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18CookieDeletionInfoD1Ev(%"struct.net::CookieDeletionInfo"*) unnamed_addr #3

declare void @_ZN3net18CookieDeletionInfoC1EOS0_(%"struct.net::CookieDeletionInfo"*, %"struct.net::CookieDeletionInfo"* dereferenceable(296)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = alloca %"class.base::OnceCallback.92", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i32*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 3
  %12 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %15 = bitcast void ()** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::RepeatingCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %18 = bitcast %"class.base::OnceCallback.92"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #19
  %19 = getelementptr inbounds i8, i8* %7, i64 %16
  %20 = bitcast i8* %19 to %"class.net::CookieMonster"*
  %21 = and i64 %13, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %1
  %24 = bitcast i8* %19 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = add i64 %13, -1
  %27 = getelementptr i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)**
  %29 = load void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)*, void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)** %28, align 8
  br label %32

30:                                               ; preds = %1
  %31 = inttoptr i64 %13 to void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)*
  br label %32

32:                                               ; preds = %23, %30
  %33 = phi void (%"class.net::CookieMonster"*, %"class.base::RepeatingCallback"*, i32, %"class.base::OnceCallback.92"*)* [ %29, %23 ], [ %31, %30 ]
  %34 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::BindStateBase"**
  %35 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = load i32, i32* %10, align 4
  %39 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.base::internal::BindStateBase"**
  %40 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::OnceCallback.92"* %3 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  call void %33(%"class.net::CookieMonster"* %20, %"class.base::RepeatingCallback"* nonnull %2, i32 %38, %"class.base::OnceCallback.92"* nonnull %3) #19
  %43 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #19
  %44 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS2_15CanonicalCookieEEEENS3_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS0_17UnretainedWrapperIS3_EES9_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #19
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #21
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEEEFbRKNS3_15CanonicalCookieEEE3RunEPNS0_13BindStateBaseESC_"(%"class.base::internal::BindStateBase"* nocapture readnone, %"class.net::CanonicalCookie"* nocapture readonly dereferenceable(144)) #6 align 2 {
  %3 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #21
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.54"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #19
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #19
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #19
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #19
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #19
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #21
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #21
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.54"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #21
  %134 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #19
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #20
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #21
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.54"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #19
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #19
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_(%"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %264, %3
  %5 = phi %"class.net::CanonicalCookie"** [ %1, %3 ], [ %243, %264 ]
  %6 = phi %"class.net::CanonicalCookie"** [ %0, %3 ], [ %17, %264 ]
  %7 = ptrtoint %"class.net::CanonicalCookie"** %5 to i64
  %8 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, i64 -1
  %9 = bitcast %"class.net::CanonicalCookie"** %8 to i64*
  %10 = bitcast %"class.net::CanonicalCookie"** %8 to i64*
  %11 = bitcast %"class.net::CanonicalCookie"** %8 to i64*
  %12 = bitcast %"class.net::CanonicalCookie"** %8 to i64*
  %13 = ptrtoint %"class.net::CanonicalCookie"** %5 to i64
  br label %14

14:                                               ; preds = %273, %4
  %15 = phi %"class.net::CanonicalCookie"** [ %6, %4 ], [ %274, %273 ]
  br label %16

16:                                               ; preds = %187, %14
  %17 = phi %"class.net::CanonicalCookie"** [ %15, %14 ], [ %174, %187 ]
  %18 = ptrtoint %"class.net::CanonicalCookie"** %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %86 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %21
    i64 3, label %32
    i64 4, label %75
    i64 5, label %80
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %23 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, i64 -1
  %24 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %23, align 8
  %25 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %26 = tail call zeroext i1 %22(%"class.net::CanonicalCookie"* %24, %"class.net::CanonicalCookie"* %25) #19
  br i1 %26, label %27, label %277

27:                                               ; preds = %21
  %28 = bitcast %"class.net::CanonicalCookie"** %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.net::CanonicalCookie"** %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  br label %277

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 1
  %34 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, i64 -1
  %35 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %36 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %33, align 8
  %37 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %38 = tail call zeroext i1 %35(%"class.net::CanonicalCookie"* %36, %"class.net::CanonicalCookie"* %37) #19
  %39 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %40 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %34, align 8
  %41 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %33, align 8
  %42 = tail call zeroext i1 %39(%"class.net::CanonicalCookie"* %40, %"class.net::CanonicalCookie"* %41) #19
  br i1 %38, label %58, label %43

43:                                               ; preds = %32
  br i1 %42, label %44, label %277

44:                                               ; preds = %43
  %45 = bitcast %"class.net::CanonicalCookie"** %33 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.net::CanonicalCookie"** %34 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %50 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %33, align 8
  %51 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %52 = tail call zeroext i1 %49(%"class.net::CanonicalCookie"* %50, %"class.net::CanonicalCookie"* %51) #19
  br i1 %52, label %53, label %277

53:                                               ; preds = %44
  %54 = bitcast %"class.net::CanonicalCookie"** %17 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = shufflevector <2 x i64> %55, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %57 = bitcast %"class.net::CanonicalCookie"** %17 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  br label %277

58:                                               ; preds = %32
  %59 = bitcast %"class.net::CanonicalCookie"** %17 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %42, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"class.net::CanonicalCookie"** %34 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  store i64 %60, i64* %62, align 8
  br label %277

64:                                               ; preds = %58
  %65 = bitcast %"class.net::CanonicalCookie"** %33 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %59, align 8
  store i64 %60, i64* %65, align 8
  %67 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %68 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %34, align 8
  %69 = inttoptr i64 %60 to %"class.net::CanonicalCookie"*
  %70 = tail call zeroext i1 %67(%"class.net::CanonicalCookie"* %68, %"class.net::CanonicalCookie"* %69) #19
  br i1 %70, label %71, label %277

71:                                               ; preds = %64
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"class.net::CanonicalCookie"** %34 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %65, align 8
  store i64 %72, i64* %73, align 8
  br label %277

75:                                               ; preds = %16
  %76 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 1
  %77 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 2
  %78 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_T_(%"class.net::CanonicalCookie"** %17, %"class.net::CanonicalCookie"** %76, %"class.net::CanonicalCookie"** %77, %"class.net::CanonicalCookie"** %78, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br label %277

80:                                               ; preds = %16
  %81 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 1
  %82 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 2
  %83 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 3
  %84 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.net::CanonicalCookie"** %17, %"class.net::CanonicalCookie"** %81, %"class.net::CanonicalCookie"** %82, %"class.net::CanonicalCookie"** %83, %"class.net::CanonicalCookie"** %84, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br label %277

86:                                               ; preds = %16
  %87 = icmp slt i64 %19, 248
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_(%"class.net::CanonicalCookie"** %17, %"class.net::CanonicalCookie"** %5, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br label %277

89:                                               ; preds = %86
  %90 = icmp sgt i64 %19, 7992
  %91 = sdiv i64 %20, 2
  %92 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 %91
  br i1 %90, label %93, label %98

93:                                               ; preds = %89
  %94 = sdiv i64 %20, 4
  %95 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 %94
  %96 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, i64 %94
  %97 = tail call i32 @_ZNSt3__17__sort5IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.net::CanonicalCookie"** %17, %"class.net::CanonicalCookie"** %95, %"class.net::CanonicalCookie"** %92, %"class.net::CanonicalCookie"** %96, %"class.net::CanonicalCookie"** %8, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br label %135

98:                                               ; preds = %89
  %99 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %100 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, align 8
  %101 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %102 = tail call zeroext i1 %99(%"class.net::CanonicalCookie"* %100, %"class.net::CanonicalCookie"* %101) #19
  %103 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %104 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %8, align 8
  %105 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, align 8
  %106 = tail call zeroext i1 %103(%"class.net::CanonicalCookie"* %104, %"class.net::CanonicalCookie"* %105) #19
  br i1 %102, label %120, label %107

107:                                              ; preds = %98
  br i1 %106, label %108, label %135

108:                                              ; preds = %107
  %109 = bitcast %"class.net::CanonicalCookie"** %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %109, align 8
  store i64 %110, i64* %9, align 8
  %112 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %113 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, align 8
  %114 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %115 = tail call zeroext i1 %112(%"class.net::CanonicalCookie"* %113, %"class.net::CanonicalCookie"* %114) #19
  br i1 %115, label %116, label %135

116:                                              ; preds = %108
  %117 = bitcast %"class.net::CanonicalCookie"** %17 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %109, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %109, align 8
  br label %135

120:                                              ; preds = %98
  %121 = bitcast %"class.net::CanonicalCookie"** %17 to i64*
  %122 = load i64, i64* %121, align 8
  br i1 %106, label %123, label %125

123:                                              ; preds = %120
  %124 = load i64, i64* %11, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %11, align 8
  br label %135

125:                                              ; preds = %120
  %126 = bitcast %"class.net::CanonicalCookie"** %92 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  store i64 %122, i64* %126, align 8
  %128 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %129 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %8, align 8
  %130 = inttoptr i64 %122 to %"class.net::CanonicalCookie"*
  %131 = tail call zeroext i1 %128(%"class.net::CanonicalCookie"* %129, %"class.net::CanonicalCookie"* %130) #19
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = load i64, i64* %126, align 8
  %134 = load i64, i64* %10, align 8
  store i64 %134, i64* %126, align 8
  store i64 %133, i64* %10, align 8
  br label %135

135:                                              ; preds = %132, %125, %123, %116, %108, %107, %93
  %136 = phi i32 [ %97, %93 ], [ 1, %123 ], [ 0, %107 ], [ 2, %116 ], [ 1, %108 ], [ 2, %132 ], [ 1, %125 ]
  %137 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %138 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %139 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, align 8
  %140 = tail call zeroext i1 %137(%"class.net::CanonicalCookie"* %138, %"class.net::CanonicalCookie"* %139) #19
  br i1 %140, label %205, label %141

141:                                              ; preds = %135, %194
  %142 = phi %"class.net::CanonicalCookie"** [ %143, %194 ], [ %8, %135 ]
  %143 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %142, i64 -1
  %144 = icmp eq %"class.net::CanonicalCookie"** %17, %143
  br i1 %144, label %145, label %194

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 1
  %147 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %148 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %149 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %8, align 8
  %150 = tail call zeroext i1 %147(%"class.net::CanonicalCookie"* %148, %"class.net::CanonicalCookie"* %149) #19
  br i1 %150, label %167, label %151

151:                                              ; preds = %145
  %152 = icmp eq %"class.net::CanonicalCookie"** %146, %8
  br i1 %152, label %277, label %153

153:                                              ; preds = %151, %164
  %154 = phi %"class.net::CanonicalCookie"** [ %165, %164 ], [ %146, %151 ]
  %155 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %156 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %157 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %154, align 8
  %158 = tail call zeroext i1 %155(%"class.net::CanonicalCookie"* %156, %"class.net::CanonicalCookie"* %157) #19
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"class.net::CanonicalCookie"** %154 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %12, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %12, align 8
  %163 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %154, i64 1
  br label %167

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %154, i64 1
  %166 = icmp eq %"class.net::CanonicalCookie"** %165, %8
  br i1 %166, label %277, label %153

167:                                              ; preds = %159, %145
  %168 = phi %"class.net::CanonicalCookie"** [ %146, %145 ], [ %163, %159 ]
  %169 = icmp eq %"class.net::CanonicalCookie"** %168, %8
  br i1 %169, label %277, label %170

170:                                              ; preds = %167, %189
  %171 = phi %"class.net::CanonicalCookie"** [ %179, %189 ], [ %168, %167 ]
  %172 = phi %"class.net::CanonicalCookie"** [ %184, %189 ], [ %8, %167 ]
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"class.net::CanonicalCookie"** [ %171, %170 ], [ %179, %173 ]
  %175 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %176 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %177 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %174, align 8
  %178 = tail call zeroext i1 %175(%"class.net::CanonicalCookie"* %176, %"class.net::CanonicalCookie"* %177) #19
  %179 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %174, i64 1
  br i1 %178, label %180, label %173

180:                                              ; preds = %173, %180
  %181 = phi %"class.net::CanonicalCookie"** [ %184, %180 ], [ %172, %173 ]
  %182 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %183 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, align 8
  %184 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %181, i64 -1
  %185 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %184, align 8
  %186 = tail call zeroext i1 %182(%"class.net::CanonicalCookie"* %183, %"class.net::CanonicalCookie"* %185) #19
  br i1 %186, label %180, label %187

187:                                              ; preds = %180
  %188 = icmp ult %"class.net::CanonicalCookie"** %174, %184
  br i1 %188, label %189, label %16

189:                                              ; preds = %187
  %190 = bitcast %"class.net::CanonicalCookie"** %174 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.net::CanonicalCookie"** %184 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %190, align 8
  store i64 %191, i64* %192, align 8
  br label %170

194:                                              ; preds = %141
  %195 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %196 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %143, align 8
  %197 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %92, align 8
  %198 = tail call zeroext i1 %195(%"class.net::CanonicalCookie"* %196, %"class.net::CanonicalCookie"* %197) #19
  br i1 %198, label %199, label %141

199:                                              ; preds = %194
  %200 = bitcast %"class.net::CanonicalCookie"** %17 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.net::CanonicalCookie"** %143 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  %204 = add i32 %136, 1
  br label %205

205:                                              ; preds = %135, %199
  %206 = phi i32 [ %204, %199 ], [ %136, %135 ]
  %207 = phi %"class.net::CanonicalCookie"** [ %143, %199 ], [ %8, %135 ]
  %208 = ptrtoint %"class.net::CanonicalCookie"** %17 to i64
  %209 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %17, i64 1
  %210 = icmp ult %"class.net::CanonicalCookie"** %209, %207
  br i1 %210, label %211, label %240

211:                                              ; preds = %205, %232
  %212 = phi %"class.net::CanonicalCookie"** [ %239, %232 ], [ %92, %205 ]
  %213 = phi i32 [ %237, %232 ], [ %206, %205 ]
  %214 = phi %"class.net::CanonicalCookie"** [ %222, %232 ], [ %209, %205 ]
  %215 = phi %"class.net::CanonicalCookie"** [ %226, %232 ], [ %207, %205 ]
  br label %216

216:                                              ; preds = %216, %211
  %217 = phi %"class.net::CanonicalCookie"** [ %214, %211 ], [ %222, %216 ]
  %218 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %219 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %217, align 8
  %220 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %212, align 8
  %221 = tail call zeroext i1 %218(%"class.net::CanonicalCookie"* %219, %"class.net::CanonicalCookie"* %220) #19
  %222 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %217, i64 1
  br i1 %221, label %216, label %223

223:                                              ; preds = %216, %223
  %224 = phi %"class.net::CanonicalCookie"** [ %226, %223 ], [ %215, %216 ]
  %225 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %226 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %224, i64 -1
  %227 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %226, align 8
  %228 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %212, align 8
  %229 = tail call zeroext i1 %225(%"class.net::CanonicalCookie"* %227, %"class.net::CanonicalCookie"* %228) #19
  br i1 %229, label %230, label %223

230:                                              ; preds = %223
  %231 = icmp ugt %"class.net::CanonicalCookie"** %217, %226
  br i1 %231, label %240, label %232

232:                                              ; preds = %230
  %233 = bitcast %"class.net::CanonicalCookie"** %217 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.net::CanonicalCookie"** %226 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = add i32 %213, 1
  %238 = icmp eq %"class.net::CanonicalCookie"** %212, %217
  %239 = select i1 %238, %"class.net::CanonicalCookie"** %226, %"class.net::CanonicalCookie"** %212
  br label %211

240:                                              ; preds = %230, %205
  %241 = phi %"class.net::CanonicalCookie"** [ %92, %205 ], [ %212, %230 ]
  %242 = phi i32 [ %206, %205 ], [ %213, %230 ]
  %243 = phi %"class.net::CanonicalCookie"** [ %209, %205 ], [ %217, %230 ]
  %244 = icmp eq %"class.net::CanonicalCookie"** %243, %241
  br i1 %244, label %256, label %245

245:                                              ; preds = %240
  %246 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %247 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %241, align 8
  %248 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %243, align 8
  %249 = tail call zeroext i1 %246(%"class.net::CanonicalCookie"* %247, %"class.net::CanonicalCookie"* %248) #19
  br i1 %249, label %250, label %256

250:                                              ; preds = %245
  %251 = bitcast %"class.net::CanonicalCookie"** %243 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.net::CanonicalCookie"** %241 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %251, align 8
  store i64 %252, i64* %253, align 8
  %255 = add i32 %242, 1
  br label %256

256:                                              ; preds = %240, %250, %245
  %257 = phi i32 [ %255, %250 ], [ %242, %245 ], [ %242, %240 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %256
  %260 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN3net15CanonicalCookieES3_EPS3_EEbT0_S8_T_(%"class.net::CanonicalCookie"** %17, %"class.net::CanonicalCookie"** %243, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  %261 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %243, i64 1
  %262 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN3net15CanonicalCookieES3_EPS3_EEbT0_S8_T_(%"class.net::CanonicalCookie"** %261, %"class.net::CanonicalCookie"** %5, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  br i1 %260, label %277, label %264

264:                                              ; preds = %263, %275
  br label %4

265:                                              ; preds = %259
  br i1 %260, label %273, label %266

266:                                              ; preds = %265, %256
  %267 = ptrtoint %"class.net::CanonicalCookie"** %243 to i64
  %268 = sub i64 %267, %208
  %269 = sub i64 %13, %267
  %270 = icmp slt i64 %268, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %266
  tail call void @_ZNSt3__16__sortIRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_(%"class.net::CanonicalCookie"** %17, %"class.net::CanonicalCookie"** %243, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %243, i64 1
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi %"class.net::CanonicalCookie"** [ %261, %265 ], [ %272, %271 ]
  br label %14

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %243, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_(%"class.net::CanonicalCookie"** %276, %"class.net::CanonicalCookie"** %5, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br label %264

277:                                              ; preds = %263, %167, %16, %16, %151, %164, %71, %64, %61, %53, %44, %43, %21, %27, %75, %80, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_T_(%"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %4, align 8
  %7 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, align 8
  %8 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.net::CanonicalCookie"* %7, %"class.net::CanonicalCookie"* %8) #19
  %10 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %4, align 8
  %11 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %2, align 8
  %12 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, align 8
  %13 = tail call zeroext i1 %10(%"class.net::CanonicalCookie"* %11, %"class.net::CanonicalCookie"* %12) #19
  br i1 %9, label %28, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %45

15:                                               ; preds = %14
  %16 = bitcast %"class.net::CanonicalCookie"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.net::CanonicalCookie"** %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %4, align 8
  %21 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, align 8
  %22 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.net::CanonicalCookie"* %21, %"class.net::CanonicalCookie"* %22) #19
  br i1 %23, label %24, label %45

24:                                               ; preds = %15
  %25 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  br label %45

28:                                               ; preds = %5
  %29 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %13, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"class.net::CanonicalCookie"** %2 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  br label %45

34:                                               ; preds = %28
  %35 = bitcast %"class.net::CanonicalCookie"** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %30, i64* %35, align 8
  %37 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %4, align 8
  %38 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %2, align 8
  %39 = inttoptr i64 %30 to %"class.net::CanonicalCookie"*
  %40 = tail call zeroext i1 %37(%"class.net::CanonicalCookie"* %38, %"class.net::CanonicalCookie"* %39) #19
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load i64, i64* %35, align 8
  %43 = bitcast %"class.net::CanonicalCookie"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %35, align 8
  store i64 %42, i64* %43, align 8
  br label %45

45:                                               ; preds = %14, %15, %24, %31, %34, %41
  %46 = phi i32 [ 1, %31 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %34 ]
  %47 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %4, align 8
  %48 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  %49 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %2, align 8
  %50 = tail call zeroext i1 %47(%"class.net::CanonicalCookie"* %48, %"class.net::CanonicalCookie"* %49) #19
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = bitcast %"class.net::CanonicalCookie"** %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.net::CanonicalCookie"** %3 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %4, align 8
  %58 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %2, align 8
  %59 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, align 8
  %60 = tail call zeroext i1 %57(%"class.net::CanonicalCookie"* %58, %"class.net::CanonicalCookie"* %59) #19
  br i1 %60, label %61, label %75

61:                                               ; preds = %51
  %62 = bitcast %"class.net::CanonicalCookie"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %52, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %52, align 8
  %65 = add nuw nsw i32 %46, 2
  %66 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %4, align 8
  %67 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, align 8
  %68 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %69 = tail call zeroext i1 %66(%"class.net::CanonicalCookie"* %67, %"class.net::CanonicalCookie"* %68) #19
  br i1 %69, label %70, label %75

70:                                               ; preds = %61
  %71 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %62, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %62, align 8
  %74 = add nuw nsw i32 %46, 3
  br label %75

75:                                               ; preds = %51, %70, %61, %45
  %76 = phi i32 [ %74, %70 ], [ %65, %61 ], [ %56, %51 ], [ %46, %45 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_T_(%"class.net::CanonicalCookie"** %0, %"class.net::CanonicalCookie"** %1, %"class.net::CanonicalCookie"** %2, %"class.net::CanonicalCookie"** %3, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %5, align 8
  %9 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %4, align 8
  %10 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  %11 = tail call zeroext i1 %8(%"class.net::CanonicalCookie"* %9, %"class.net::CanonicalCookie"* %10) #19
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = bitcast %"class.net::CanonicalCookie"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.net::CanonicalCookie"** %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %7, 1
  %18 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %5, align 8
  %19 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  %20 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %2, align 8
  %21 = tail call zeroext i1 %18(%"class.net::CanonicalCookie"* %19, %"class.net::CanonicalCookie"* %20) #19
  br i1 %21, label %22, label %45

22:                                               ; preds = %12
  %23 = bitcast %"class.net::CanonicalCookie"** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %26 = add i32 %7, 2
  %27 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %5, align 8
  %28 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %2, align 8
  %29 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, align 8
  %30 = tail call zeroext i1 %27(%"class.net::CanonicalCookie"* %28, %"class.net::CanonicalCookie"* %29) #19
  br i1 %30, label %31, label %45

31:                                               ; preds = %22
  %32 = bitcast %"class.net::CanonicalCookie"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %23, align 8
  store i64 %34, i64* %32, align 8
  store i64 %33, i64* %23, align 8
  %35 = add i32 %7, 3
  %36 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %5, align 8
  %37 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, align 8
  %38 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.net::CanonicalCookie"* %37, %"class.net::CanonicalCookie"* %38) #19
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %32, align 8
  store i64 %43, i64* %41, align 8
  store i64 %42, i64* %32, align 8
  %44 = add i32 %7, 4
  br label %45

45:                                               ; preds = %12, %31, %40, %22, %6
  %46 = phi i32 [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %17, %12 ], [ %7, %6 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPN3net15CanonicalCookieES3_EPS3_EEvT0_S8_T_(%"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 2
  %5 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 1
  %6 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %7 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, align 8
  %8 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.net::CanonicalCookie"* %7, %"class.net::CanonicalCookie"* %8) #19
  %10 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %11 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %4, align 8
  %12 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %5, align 8
  %13 = tail call zeroext i1 %10(%"class.net::CanonicalCookie"* %11, %"class.net::CanonicalCookie"* %12) #19
  br i1 %9, label %29, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %"class.net::CanonicalCookie"** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.net::CanonicalCookie"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %21 = inttoptr i64 %19 to %"class.net::CanonicalCookie"*
  %22 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.net::CanonicalCookie"* %21, %"class.net::CanonicalCookie"* %22) #19
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"class.net::CanonicalCookie"** %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %28 = bitcast %"class.net::CanonicalCookie"** %0 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  br label %47

29:                                               ; preds = %3
  %30 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %13, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"class.net::CanonicalCookie"** %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %47

35:                                               ; preds = %29
  %36 = bitcast %"class.net::CanonicalCookie"** %5 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %39 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %4, align 8
  %40 = inttoptr i64 %31 to %"class.net::CanonicalCookie"*
  %41 = tail call zeroext i1 %38(%"class.net::CanonicalCookie"* %39, %"class.net::CanonicalCookie"* %40) #19
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = bitcast %"class.net::CanonicalCookie"** %5 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %46 = bitcast %"class.net::CanonicalCookie"** %5 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %14, %15, %24, %32, %35, %42
  %48 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 3
  %49 = icmp eq %"class.net::CanonicalCookie"** %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %"class.net::CanonicalCookie"** [ %78, %77 ], [ %48, %47 ]
  %53 = phi %"class.net::CanonicalCookie"** [ %52, %77 ], [ %4, %47 ]
  %54 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %55 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %52, align 8
  %56 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %53, align 8
  %57 = tail call zeroext i1 %54(%"class.net::CanonicalCookie"* %55, %"class.net::CanonicalCookie"* %56) #19
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"class.net::CanonicalCookie"** %52 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.net::CanonicalCookie"*
  br label %62

62:                                               ; preds = %69, %58
  %63 = phi %"class.net::CanonicalCookie"** [ %52, %58 ], [ %64, %69 ]
  %64 = phi %"class.net::CanonicalCookie"** [ %53, %58 ], [ %71, %69 ]
  %65 = bitcast %"class.net::CanonicalCookie"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.net::CanonicalCookie"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"class.net::CanonicalCookie"** %64, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %71 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %64, i64 -1
  %72 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %71, align 8
  %73 = tail call zeroext i1 %70(%"class.net::CanonicalCookie"* %61, %"class.net::CanonicalCookie"* %72) #19
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %69
  %75 = phi %"class.net::CanonicalCookie"** [ %64, %69 ], [ %0, %62 ]
  %76 = bitcast %"class.net::CanonicalCookie"** %75 to i64*
  store i64 %60, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %52, i64 1
  %79 = icmp eq %"class.net::CanonicalCookie"** %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN3net15CanonicalCookieES3_EPS3_EEbT0_S8_T_(%"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"**, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.net::CanonicalCookie"** %1 to i64
  %5 = ptrtoint %"class.net::CanonicalCookie"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %156
    i64 1, label %156
    i64 2, label %8
    i64 3, label %19
    i64 4, label %62
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %10 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, i64 -1
  %11 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %10, align 8
  %12 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %13 = tail call zeroext i1 %9(%"class.net::CanonicalCookie"* %11, %"class.net::CanonicalCookie"* %12) #19
  br i1 %13, label %14, label %156

14:                                               ; preds = %8
  %15 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.net::CanonicalCookie"** %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  br label %156

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 1
  %21 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, i64 -1
  %22 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %23 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %20, align 8
  %24 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %25 = tail call zeroext i1 %22(%"class.net::CanonicalCookie"* %23, %"class.net::CanonicalCookie"* %24) #19
  %26 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %27 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %21, align 8
  %28 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %20, align 8
  %29 = tail call zeroext i1 %26(%"class.net::CanonicalCookie"* %27, %"class.net::CanonicalCookie"* %28) #19
  br i1 %25, label %45, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %156

31:                                               ; preds = %30
  %32 = bitcast %"class.net::CanonicalCookie"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.net::CanonicalCookie"** %21 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %37 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %20, align 8
  %38 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.net::CanonicalCookie"* %37, %"class.net::CanonicalCookie"* %38) #19
  br i1 %39, label %40, label %156

40:                                               ; preds = %31
  %41 = bitcast %"class.net::CanonicalCookie"** %0 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = shufflevector <2 x i64> %42, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %44 = bitcast %"class.net::CanonicalCookie"** %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  br label %156

45:                                               ; preds = %19
  %46 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %29, label %48, label %51

48:                                               ; preds = %45
  %49 = bitcast %"class.net::CanonicalCookie"** %21 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 %47, i64* %49, align 8
  br label %156

51:                                               ; preds = %45
  %52 = bitcast %"class.net::CanonicalCookie"** %20 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %46, align 8
  store i64 %47, i64* %52, align 8
  %54 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %55 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %21, align 8
  %56 = inttoptr i64 %47 to %"class.net::CanonicalCookie"*
  %57 = tail call zeroext i1 %54(%"class.net::CanonicalCookie"* %55, %"class.net::CanonicalCookie"* %56) #19
  br i1 %57, label %58, label %156

58:                                               ; preds = %51
  %59 = load i64, i64* %52, align 8
  %60 = bitcast %"class.net::CanonicalCookie"** %21 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  store i64 %59, i64* %60, align 8
  br label %156

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 1
  %64 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 2
  %65 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_T_(%"class.net::CanonicalCookie"** %0, %"class.net::CanonicalCookie"** %63, %"class.net::CanonicalCookie"** %64, %"class.net::CanonicalCookie"** %65, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br label %156

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 1
  %69 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 2
  %70 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 3
  %71 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbPN3net15CanonicalCookieES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.net::CanonicalCookie"** %0, %"class.net::CanonicalCookie"** %68, %"class.net::CanonicalCookie"** %69, %"class.net::CanonicalCookie"** %70, %"class.net::CanonicalCookie"** %71, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** dereferenceable(8) %2)
  br label %156

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 2
  %75 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 1
  %76 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %77 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %75, align 8
  %78 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %79 = tail call zeroext i1 %76(%"class.net::CanonicalCookie"* %77, %"class.net::CanonicalCookie"* %78) #19
  %80 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %81 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %74, align 8
  %82 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %75, align 8
  %83 = tail call zeroext i1 %80(%"class.net::CanonicalCookie"* %81, %"class.net::CanonicalCookie"* %82) #19
  br i1 %79, label %99, label %84

84:                                               ; preds = %73
  br i1 %83, label %85, label %117

85:                                               ; preds = %84
  %86 = bitcast %"class.net::CanonicalCookie"** %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.net::CanonicalCookie"** %74 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %91 = inttoptr i64 %89 to %"class.net::CanonicalCookie"*
  %92 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, align 8
  %93 = tail call zeroext i1 %90(%"class.net::CanonicalCookie"* %91, %"class.net::CanonicalCookie"* %92) #19
  br i1 %93, label %94, label %117

94:                                               ; preds = %85
  %95 = bitcast %"class.net::CanonicalCookie"** %0 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = shufflevector <2 x i64> %96, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %98 = bitcast %"class.net::CanonicalCookie"** %0 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  br label %117

99:                                               ; preds = %73
  %100 = bitcast %"class.net::CanonicalCookie"** %0 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %83, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"class.net::CanonicalCookie"** %74 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %100, align 8
  store i64 %101, i64* %103, align 8
  br label %117

105:                                              ; preds = %99
  %106 = bitcast %"class.net::CanonicalCookie"** %75 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %100, align 8
  store i64 %101, i64* %106, align 8
  %108 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %109 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %74, align 8
  %110 = inttoptr i64 %101 to %"class.net::CanonicalCookie"*
  %111 = tail call zeroext i1 %108(%"class.net::CanonicalCookie"* %109, %"class.net::CanonicalCookie"* %110) #19
  br i1 %111, label %112, label %117

112:                                              ; preds = %105
  %113 = bitcast %"class.net::CanonicalCookie"** %75 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = shufflevector <2 x i64> %114, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %116 = bitcast %"class.net::CanonicalCookie"** %75 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 8
  br label %117

117:                                              ; preds = %84, %85, %94, %102, %105, %112
  %118 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %0, i64 3
  %119 = icmp eq %"class.net::CanonicalCookie"** %118, %1
  br i1 %119, label %156, label %120

120:                                              ; preds = %117, %149
  %121 = phi %"class.net::CanonicalCookie"** [ %151, %149 ], [ %118, %117 ]
  %122 = phi i32 [ %150, %149 ], [ 0, %117 ]
  %123 = phi %"class.net::CanonicalCookie"** [ %121, %149 ], [ %74, %117 ]
  %124 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %125 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %121, align 8
  %126 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %123, align 8
  %127 = tail call zeroext i1 %124(%"class.net::CanonicalCookie"* %125, %"class.net::CanonicalCookie"* %126) #19
  br i1 %127, label %128, label %149

128:                                              ; preds = %120
  %129 = bitcast %"class.net::CanonicalCookie"** %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"class.net::CanonicalCookie"*
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"class.net::CanonicalCookie"** [ %121, %128 ], [ %134, %139 ]
  %134 = phi %"class.net::CanonicalCookie"** [ %123, %128 ], [ %141, %139 ]
  %135 = bitcast %"class.net::CanonicalCookie"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.net::CanonicalCookie"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"class.net::CanonicalCookie"** %134, %0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)*, i1 (%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*)** %2, align 8
  %141 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %134, i64 -1
  %142 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %141, align 8
  %143 = tail call zeroext i1 %140(%"class.net::CanonicalCookie"* %131, %"class.net::CanonicalCookie"* %142) #19
  br i1 %143, label %132, label %144

144:                                              ; preds = %132, %139
  %145 = phi %"class.net::CanonicalCookie"** [ %134, %139 ], [ %0, %132 ]
  %146 = bitcast %"class.net::CanonicalCookie"** %145 to i64*
  store i64 %130, i64* %146, align 8
  %147 = add i32 %122, 1
  %148 = icmp eq i32 %147, 8
  br i1 %148, label %153, label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %147, %144 ], [ %122, %120 ]
  %151 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %121, i64 1
  %152 = icmp eq %"class.net::CanonicalCookie"** %151, %1
  br i1 %152, label %156, label %120

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %121, i64 1
  %155 = icmp eq %"class.net::CanonicalCookie"** %154, %1
  br label %156

156:                                              ; preds = %149, %153, %117, %58, %51, %48, %40, %31, %30, %8, %14, %3, %3, %67, %62
  %157 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ true, %31 ], [ true, %40 ], [ true, %48 ], [ true, %51 ], [ true, %58 ], [ true, %117 ], [ %155, %153 ], [ true, %149 ]
  ret i1 %157
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.70"*, %"class.net::CanonicalCookie"* dereferenceable(144)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::CanonicalCookie"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 128102389400760775
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.70"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::CanonicalCookie"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 144
  %20 = icmp ult i64 %19, 64051194700380387
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 128102389400760775, %14 ]
  %28 = mul i64 %27, 144
  %29 = tail call i8* @_Znwm(i64 %28) #21
  %30 = bitcast i8* %29 to %"class.net::CanonicalCookie"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::CanonicalCookie"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %33, i64 %32
  %36 = ptrtoint %"class.net::CanonicalCookie"* %35 to i64
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %34, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #19
  %37 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %34, i64 1
  %38 = ptrtoint %"class.net::CanonicalCookie"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %39, align 8
  %41 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  %42 = icmp eq %"class.net::CanonicalCookie"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.net::CanonicalCookie"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.net::CanonicalCookie"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.net::CanonicalCookie"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %46, i64 -1
  %49 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %47, i64 -1
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %48, %"class.net::CanonicalCookie"* dereferenceable(144) %49) #19
  %50 = icmp eq %"class.net::CanonicalCookie"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.net::CanonicalCookie"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.net::CanonicalCookie"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.net::CanonicalCookie"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.net::CanonicalCookie"*
  %60 = icmp eq %"class.net::CanonicalCookie"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.net::CanonicalCookie"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %62, i64 -1
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %63) #19
  %64 = icmp eq %"class.net::CanonicalCookie"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #21
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"*, %"struct.net::CookieAccessResult"* dereferenceable(20)) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.92", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %"class.base::OnceCallback.92"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.92"* %2 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %2, i64 0, i32 0
  %13 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, i32)**
  %16 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* %13, i32 %6) #19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvjEEEJjEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #21
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvjEEEJjEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #19
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #19
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS6_S9_EEES8_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::WeakPtr"*, %"class.base::OnceCallback"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %8 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #19
  %9 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = load void (%"class.base::WeakPtr"*, %"class.base::OnceCallback"*)*, void (%"class.base::WeakPtr"*, %"class.base::OnceCallback"*)** %5, align 8
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %12 = bitcast void ()** %6 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %11, %"class.base::internal::WeakReference"* dereferenceable(8) %12) #19
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %15 = bitcast void ()** %14 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  %17 = bitcast void ()** %7 to %"class.base::internal::BindStateBase"**
  %18 = bitcast void ()** %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  call void %10(%"class.base::WeakPtr"* nonnull %2, %"class.base::OnceCallback"* nonnull %3) #19
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #19
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %22) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS5_S8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #19
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #19
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #21
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE19__equal_range_multiIS7_EENS_4pairINS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEESS_EERKT_(%"class.std::__1::__tree.7"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.263"**
  %5 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.263"* %5, null
  br i1 %6, label %159, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %7, %154
  %21 = phi %"class.std::__1::__tree_node.263"* [ %5, %7 ], [ %157, %154 ]
  %22 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %155, %154 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %31, %15
  %33 = select i1 %32, i64 %31, i64 %15
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %19, i8* %39, i64 %33) #19
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %15, %31
  br i1 %43, label %46, label %49

44:                                               ; preds = %35
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %42, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_node.263"* %21 to %"class.std::__1::__tree_node.263"**
  br label %154

49:                                               ; preds = %42
  br i1 %34, label %59, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %54 = select i1 %27, i8* %52, i8* %53
  br label %55

55:                                               ; preds = %50, %44
  %56 = phi i8* [ %54, %50 ], [ %39, %44 ]
  %57 = tail call i32 @memcmp(i8* %56, i8* %19, i64 %33) #19
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55, %49
  br i1 %32, label %62, label %65

60:                                               ; preds = %55
  %61 = icmp slt i32 %57, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59, %60
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::__tree_node_base"** %63 to %"class.std::__1::__tree_node.263"**
  br label %154

65:                                               ; preds = %59, %60
  %66 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::__tree_node.263"* %21 to %"class.std::__1::__tree_node.263"**
  %68 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node.263"* %68, null
  br i1 %69, label %107, label %70

70:                                               ; preds = %65, %96
  %71 = phi %"class.std::__1::__tree_end_node"* [ %104, %96 ], [ %66, %65 ]
  %72 = phi %"class.std::__1::__tree_node.263"* [ %105, %96 ], [ %68, %65 ]
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 1
  %74 = bitcast %"struct.std::__1::__value_type"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = icmp ult i64 %15, %81
  %83 = select i1 %82, i64 %15, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast %"struct.std::__1::__value_type"* %73 to i8*
  %89 = select i1 %77, i8* %87, i8* %88
  %90 = tail call i32 @memcmp(i8* %89, i8* %19, i64 %83) #19
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %85, %70
  %93 = icmp ult i64 %81, %15
  %94 = zext i1 %82 to i32
  %95 = select i1 %93, i32 -1, i32 %94
  br label %96

96:                                               ; preds = %92, %85
  %97 = phi i32 [ %95, %92 ], [ %90, %85 ]
  %98 = icmp slt i32 %97, 0
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 0, i32 1
  %100 = bitcast %"class.std::__1::__tree_node_base"** %99 to %"class.std::__1::__tree_node.263"**
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 0, i32 0
  %102 = bitcast %"class.std::__1::__tree_node.263"* %72 to %"class.std::__1::__tree_node.263"**
  %103 = select i1 %98, %"class.std::__1::__tree_node.263"** %100, %"class.std::__1::__tree_node.263"** %102
  %104 = select i1 %98, %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"* %101
  %105 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %103, align 8
  %106 = icmp eq %"class.std::__1::__tree_node.263"* %105, null
  br i1 %106, label %107, label %70

107:                                              ; preds = %96, %65
  %108 = phi %"class.std::__1::__tree_end_node"* [ %66, %65 ], [ %104, %96 ]
  %109 = ptrtoint %"class.std::__1::__tree_end_node"* %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 1
  %111 = bitcast %"class.std::__1::__tree_node_base"** %110 to %"class.std::__1::__tree_node.263"**
  %112 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node.263"* %112, null
  br i1 %113, label %151, label %114

114:                                              ; preds = %107, %140
  %115 = phi %"class.std::__1::__tree_end_node"* [ %148, %140 ], [ %22, %107 ]
  %116 = phi %"class.std::__1::__tree_node.263"* [ %149, %140 ], [ %112, %107 ]
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %116, i64 0, i32 1
  %118 = bitcast %"struct.std::__1::__value_type"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  %122 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %116, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = zext i8 %120 to i64
  %125 = select i1 %121, i64 %123, i64 %124
  %126 = icmp ult i64 %125, %15
  %127 = select i1 %126, i64 %125, i64 %15
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %114
  %130 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = bitcast %"struct.std::__1::__value_type"* %117 to i8*
  %133 = select i1 %121, i8* %131, i8* %132
  %134 = tail call i32 @memcmp(i8* %19, i8* %133, i64 %127) #19
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %129, %114
  %137 = icmp ult i64 %15, %125
  %138 = zext i1 %126 to i32
  %139 = select i1 %137, i32 -1, i32 %138
  br label %140

140:                                              ; preds = %136, %129
  %141 = phi i32 [ %139, %136 ], [ %134, %129 ]
  %142 = icmp slt i32 %141, 0
  %143 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %116, i64 0, i32 0, i32 0
  %144 = bitcast %"class.std::__1::__tree_node.263"* %116 to %"class.std::__1::__tree_node.263"**
  %145 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %116, i64 0, i32 0, i32 1
  %146 = bitcast %"class.std::__1::__tree_node_base"** %145 to %"class.std::__1::__tree_node.263"**
  %147 = select i1 %142, %"class.std::__1::__tree_node.263"** %144, %"class.std::__1::__tree_node.263"** %146
  %148 = select i1 %142, %"class.std::__1::__tree_end_node"* %143, %"class.std::__1::__tree_end_node"* %115
  %149 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %147, align 8
  %150 = icmp eq %"class.std::__1::__tree_node.263"* %149, null
  br i1 %150, label %151, label %114

151:                                              ; preds = %140, %107
  %152 = phi %"class.std::__1::__tree_end_node"* [ %22, %107 ], [ %148, %140 ]
  %153 = ptrtoint %"class.std::__1::__tree_end_node"* %152 to i64
  br label %162

154:                                              ; preds = %62, %46
  %155 = phi %"class.std::__1::__tree_end_node"* [ %47, %46 ], [ %22, %62 ]
  %156 = phi %"class.std::__1::__tree_node.263"** [ %48, %46 ], [ %64, %62 ]
  %157 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node.263"* %157, null
  br i1 %158, label %159, label %20

159:                                              ; preds = %154, %2
  %160 = phi %"class.std::__1::__tree_end_node"* [ %3, %2 ], [ %155, %154 ]
  %161 = ptrtoint %"class.std::__1::__tree_end_node"* %160 to i64
  br label %162

162:                                              ; preds = %159, %151
  %163 = phi i64 [ %161, %159 ], [ %109, %151 ]
  %164 = phi i64 [ %161, %159 ], [ %153, %151 ]
  %165 = inttoptr i64 %163 to %"class.std::__1::__tree_end_node"*
  %166 = insertvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } undef, %"class.std::__1::__tree_end_node"* %165, 0
  %167 = inttoptr i64 %164 to %"class.std::__1::__tree_end_node"*
  %168 = insertvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %166, %"class.std::__1::__tree_end_node"* %167, 1
  ret { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_(%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.173"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::TimeTicks"*
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #19
  br i1 %9, label %10, label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.net::CookieMonster"**
  %13 = load %"class.net::CookieMonster"*, %"class.net::CookieMonster"** %12, align 8
  %14 = icmp eq %"class.net::CookieMonster"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %19 = bitcast void ()** %18 to i64*
  %20 = load i64, i64* %19, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS5_10unique_ptrINS2_15CanonicalCookieENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEvE6InvokeISG_NS_7WeakPtrIS3_EEJS4_SE_EEEvT_OT0_DpOT1_(i64 %17, i64 %20, %"class.base::WeakPtr"* dereferenceable(16) %5, %"class.base::TimeTicks"* dereferenceable(8) %7, %"class.std::__1::vector.173"* dereferenceable(24) %1) #19
  br label %21

21:                                               ; preds = %2, %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS5_10unique_ptrINS2_15CanonicalCookieENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEvE6InvokeISG_NS_7WeakPtrIS3_EEJS4_SE_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), %"class.base::TimeTicks"* dereferenceable(8), %"class.std::__1::vector.173"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.std::__1::vector.173", align 16
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #19
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0)) #19
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #19
  br label %13

13:                                               ; preds = %10, %5
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #19
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = bitcast i64* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = select i1 %14, i8* %17, i8* null
  %19 = getelementptr inbounds i8, i8* %18, i64 %1
  %20 = bitcast i8* %19 to %"class.net::CookieMonster"*
  %21 = and i64 %0, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %13
  %24 = bitcast i8* %19 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = add i64 %0, -1
  %27 = getelementptr i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to void (%"class.net::CookieMonster"*, i64, %"class.std::__1::vector.173"*)**
  %29 = load void (%"class.net::CookieMonster"*, i64, %"class.std::__1::vector.173"*)*, void (%"class.net::CookieMonster"*, i64, %"class.std::__1::vector.173"*)** %28, align 8
  br label %32

30:                                               ; preds = %13
  %31 = inttoptr i64 %0 to void (%"class.net::CookieMonster"*, i64, %"class.std::__1::vector.173"*)*
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi void (%"class.net::CookieMonster"*, i64, %"class.std::__1::vector.173"*)* [ %29, %23 ], [ %31, %30 ]
  %34 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.173"* %4 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %7, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::vector.173"* %7 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %39, align 16
  %40 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.78"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unique_ptr.78"** %43 to i64*
  store i64 %42, i64* %44, align 16
  %45 = bitcast %"class.std::__1::vector.173"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #19
  call void %33(%"class.net::CookieMonster"* %20, i64 %35, %"class.std::__1::vector.173"* nonnull %7) #19
  %46 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %7, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %46, align 16
  %48 = icmp eq %"class.std::__1::unique_ptr.78"* %47, null
  br i1 %48, label %68, label %49

49:                                               ; preds = %32
  %50 = bitcast %"class.std::__1::unique_ptr.78"* %47 to i8*
  %51 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %38, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr.78"* %51, %47
  br i1 %52, label %66, label %53

53:                                               ; preds = %49, %61
  %54 = phi %"class.std::__1::unique_ptr.78"* [ %55, %61 ], [ %51, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %54, i64 -1
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %56, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %56, align 8
  %58 = icmp eq %"class.net::CanonicalCookie"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %57) #19
  %60 = bitcast %"class.net::CanonicalCookie"* %57 to i8*
  call void @_ZdlPv(i8* %60) #21
  br label %61

61:                                               ; preds = %59, %53
  %62 = icmp eq %"class.std::__1::unique_ptr.78"* %55, %47
  br i1 %62, label %63, label %53

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector.173"* %7 to i8**
  %65 = load i8*, i8** %64, align 16
  br label %66

66:                                               ; preds = %63, %49
  %67 = phi i8* [ %65, %63 ], [ %50, %49 ]
  store %"class.std::__1::unique_ptr.78"* %47, %"class.std::__1::unique_ptr.78"** %38, align 8
  call void @_ZdlPv(i8* %67) #21
  br label %68

68:                                               ; preds = %32, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS5_10unique_ptrINS2_15CanonicalCookieENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #19
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #21
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #19
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::CookieMonster"**
  %9 = load %"class.net::CookieMonster"*, %"class.net::CookieMonster"** %8, align 8
  %10 = icmp ne %"class.net::CookieMonster"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #19
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE4findIS7_EENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEERKT_(%"class.std::__1::__tree.29"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.267"**
  %5 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.267"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node.267"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type.268"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type.268", %"struct.std::__1::__value_type.268"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type.268"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #19
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.267"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node.267"* %22 to %"class.std::__1::__tree_node.267"**
  %53 = select i1 %48, %"class.std::__1::__tree_node.267"** %50, %"class.std::__1::__tree_node.267"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.267"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #19
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #19
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #19
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #19
  br i1 %31, label %32, label %33, !prof !164

32:                                               ; preds = %27
  tail call void @llvm.trap() #19
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #19
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #19
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #19
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #19
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %51

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %18 = ptrtoint %"class.base::OnceCallback"* %14 to i64
  %19 = icmp ult %"class.base::OnceCallback"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.base::OnceCallback"* %17 to i64
  %22 = ptrtoint %"class.base::OnceCallback"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #19
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #19
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !164

29:                                               ; preds = %20
  tail call void @llvm.trap() #19
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i64 0, i64 0)) #19
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #19
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.base::OnceCallback"* %14, %15
  br i1 %37, label %49, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.base::OnceCallback"* [ %47, %38 ], [ %17, %36 ]
  %40 = phi %"class.base::OnceCallback"* [ %46, %38 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback"* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %45) #19
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 1
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %39, i64 1
  %48 = icmp eq %"class.base::OnceCallback"* %46, %15
  br i1 %48, label %49, label %38

49:                                               ; preds = %38, %36
  %50 = sub i64 %2, %1
  br label %127

51:                                               ; preds = %6
  %52 = icmp ult i64 %2, %1
  br i1 %52, label %53, label %127

53:                                               ; preds = %51
  %54 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %55 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %56 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %57 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %56, align 8
  %58 = ptrtoint %"class.base::OnceCallback"* %54 to i64
  %59 = icmp ult %"class.base::OnceCallback"* %57, %55
  br i1 %59, label %60, label %76

60:                                               ; preds = %53
  %61 = ptrtoint %"class.base::OnceCallback"* %57 to i64
  %62 = ptrtoint %"class.base::OnceCallback"* %55 to i64
  %63 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %62, i64 %58) #19
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = extractvalue { i64, i1 } %63, 0
  %66 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %61, i64 %65) #19
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = or i1 %64, %67
  br i1 %68, label %69, label %70, !prof !164

69:                                               ; preds = %60
  tail call void @llvm.trap() #19
  unreachable

70:                                               ; preds = %60
  %71 = extractvalue { i64, i1 } %66, 0
  %72 = icmp ugt i64 %71, %58
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i64 0, i64 0)) #19
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #19
  br label %76

76:                                               ; preds = %73, %70, %53
  %77 = icmp eq %"class.base::OnceCallback"* %54, %55
  br i1 %77, label %89, label %78

78:                                               ; preds = %76, %78
  %79 = phi %"class.base::OnceCallback"* [ %87, %78 ], [ %57, %76 ]
  %80 = phi %"class.base::OnceCallback"* [ %86, %78 ], [ %54, %76 ]
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %85) #19
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 1
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %79, i64 1
  %88 = icmp eq %"class.base::OnceCallback"* %86, %55
  br i1 %88, label %89, label %78

89:                                               ; preds = %78, %76
  %90 = sub i64 %11, %1
  %91 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %92 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %93 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %90)
  %94 = ptrtoint %"class.base::OnceCallback"* %91 to i64
  %95 = icmp ult %"class.base::OnceCallback"* %93, %92
  br i1 %95, label %96, label %112

96:                                               ; preds = %89
  %97 = ptrtoint %"class.base::OnceCallback"* %93 to i64
  %98 = ptrtoint %"class.base::OnceCallback"* %92 to i64
  %99 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %98, i64 %94) #19
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %97, i64 %101) #19
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = or i1 %100, %103
  br i1 %104, label %105, label %106, !prof !164

105:                                              ; preds = %96
  call void @llvm.trap() #19
  unreachable

106:                                              ; preds = %96
  %107 = extractvalue { i64, i1 } %102, 0
  %108 = icmp ugt i64 %107, %94
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i64 0, i64 0)) #19
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #19
  br label %112

112:                                              ; preds = %109, %106, %89
  %113 = icmp eq %"class.base::OnceCallback"* %91, %92
  br i1 %113, label %125, label %114

114:                                              ; preds = %112, %114
  %115 = phi %"class.base::OnceCallback"* [ %123, %114 ], [ %93, %112 ]
  %116 = phi %"class.base::OnceCallback"* [ %122, %114 ], [ %91, %112 ]
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %121) #19
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 1
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %115, i64 1
  %124 = icmp eq %"class.base::OnceCallback"* %122, %92
  br i1 %124, label %125, label %114

125:                                              ; preds = %114, %112
  %126 = add i64 %90, %2
  br label %127

127:                                              ; preds = %51, %125, %49
  %128 = phi i64 [ %126, %125 ], [ %50, %49 ], [ 0, %51 ]
  store i64 %128, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #16

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #17

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE(%"class.std::__1::__tree.29"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.29"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #19
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.base::circular_deque"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 9
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 10
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* %47, i64 %50, i64 %53) #19
  %54 = bitcast %"class.std::__1::__tree_end_node"* %46 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @free(i8* %55) #19
  %56 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %38
  %61 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #21
  br label %63

63:                                               ; preds = %38, %60
  %64 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %64) #21
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !3
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !3
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !3
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !3
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !3
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !3
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !3
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !3
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !3
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !3
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !3
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !3
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !3
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node.266"**
  %8 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.266"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #21, !noalias !173
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !173
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #19, !noalias !173
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !173
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !173
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #19, !noalias !173
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node.266"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #19
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #19
  %46 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node.266"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.266"**
  %6 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.266"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.266"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #19
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #19
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.266"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #19
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #19
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #19
  br i1 %37, label %38, label %39, !prof !164

38:                                               ; preds = %27
  tail call void @llvm.trap() #19
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #19
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #19
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #19
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #19
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS3_EES8_(%"class.base::circular_deque"*, i64, %"class.base::internal::circular_deque_iterator"*, %"class.base::internal::circular_deque_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = bitcast %"class.base::internal::circular_deque_iterator"* %3 to i8*
  %9 = bitcast %"class.base::internal::circular_deque_iterator"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  br label %99

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %13, align 8
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %14, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %12, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = sub i64 %12, %16
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %14, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %16
  %24 = add i64 %23, %22
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i64 [ %19, %18 ], [ %24, %20 ]
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %1)
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %26
  %30 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = urem i64 %29, %32
  store i64 %33, i64* %11, align 8
  %34 = add i64 %33, %1
  %35 = load i64, i64* %31, align 8
  %36 = urem i64 %34, %35
  %37 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 0
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %37, align 8
  %38 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 1
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %1
  %42 = load i64, i64* %31, align 8
  %43 = urem i64 %41, %42
  store i64 %43, i64* %39, align 8
  %44 = load i64, i64* %11, align 8
  %45 = icmp eq i64 %40, %44
  br i1 %45, label %99, label %46

46:                                               ; preds = %25
  %47 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %48

48:                                               ; preds = %46, %96
  %49 = phi i64 [ %43, %46 ], [ %62, %96 ]
  %50 = phi i64 [ %40, %46 ], [ %56, %96 ]
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = load i64, i64* %31, align 8
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i64 [ %53, %52 ], [ %50, %48 ]
  %56 = add i64 %55, -1
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = load i64, i64* %31, align 8
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi i64 [ %59, %58 ], [ %49, %54 ]
  %62 = add i64 %61, -1
  %63 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %30, i64 %56)
  %64 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %30, i64 %55)
  %65 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %30, i64 %62)
  %66 = ptrtoint %"class.base::OnceCallback"* %63 to i64
  %67 = icmp ult %"class.base::OnceCallback"* %65, %64
  br i1 %67, label %68, label %83

68:                                               ; preds = %60
  %69 = ptrtoint %"class.base::OnceCallback"* %65 to i64
  %70 = ptrtoint %"class.base::OnceCallback"* %64 to i64
  %71 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %70, i64 %66) #19
  %72 = extractvalue { i64, i1 } %71, 1
  %73 = extractvalue { i64, i1 } %71, 0
  %74 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %69, i64 %73) #19
  %75 = extractvalue { i64, i1 } %74, 1
  %76 = or i1 %72, %75
  br i1 %76, label %77, label %78, !prof !164

77:                                               ; preds = %68
  call void @llvm.trap() #19
  unreachable

78:                                               ; preds = %68
  %79 = extractvalue { i64, i1 } %74, 0
  %80 = icmp ugt i64 %79, %66
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i64 0, i64 0)) #19
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #19
  br label %83

83:                                               ; preds = %81, %78, %60
  %84 = icmp eq %"class.base::OnceCallback"* %63, %64
  br i1 %84, label %96, label %85

85:                                               ; preds = %83, %85
  %86 = phi %"class.base::OnceCallback"* [ %94, %85 ], [ %65, %83 ]
  %87 = phi %"class.base::OnceCallback"* [ %93, %85 ], [ %63, %83 ]
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.base::OnceCallback"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.base::OnceCallback"* %86 to i64*
  store i64 %90, i64* %91, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %88, align 8
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %87, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %92) #19
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %87, i64 1
  %94 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %86, i64 1
  %95 = icmp eq %"class.base::OnceCallback"* %93, %64
  br i1 %95, label %96, label %85

96:                                               ; preds = %85, %83
  %97 = load i64, i64* %11, align 8
  %98 = icmp eq i64 %56, %97
  br i1 %98, label %99, label %48

99:                                               ; preds = %96, %25, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_8multisetINS_14__map_iteratorINS_15__tree_iteratorINS1_IS8_NS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISF_EEEEEEPNS_11__tree_nodeISJ_PvEElEEEENSE_12_GLOBAL__N_123OrderByCreationTimeDescENS6_ISP_EEEEEENS_19__map_value_compareIS9_SU_NS_4lessIS9_EELb1EEENS6_ISU_EEE7destroyEPNSK_ISU_SL_EE(%"class.std::__1::__tree.187"* readnone, %"class.std::__1::__tree_node.408"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.408"* %1, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.408"* %1 to %"class.std::__1::__tree_node.408"**
  %6 = load %"class.std::__1::__tree_node.408"*, %"class.std::__1::__tree_node.408"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_8multisetINS_14__map_iteratorINS_15__tree_iteratorINS1_IS8_NS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISF_EEEEEEPNS_11__tree_nodeISJ_PvEElEEEENSE_12_GLOBAL__N_123OrderByCreationTimeDescENS6_ISP_EEEEEENS_19__map_value_compareIS9_SU_NS_4lessIS9_EELb1EEENS6_ISU_EEE7destroyEPNSK_ISU_SL_EE(%"class.std::__1::__tree.187"* %0, %"class.std::__1::__tree_node.408"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.408"**
  %9 = load %"class.std::__1::__tree_node.408"*, %"class.std::__1::__tree_node.408"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_8multisetINS_14__map_iteratorINS_15__tree_iteratorINS1_IS8_NS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISF_EEEEEEPNS_11__tree_nodeISJ_PvEElEEEENSE_12_GLOBAL__N_123OrderByCreationTimeDescENS6_ISP_EEEEEENS_19__map_value_compareIS9_SU_NS_4lessIS9_EELb1EEENS6_ISU_EEE7destroyEPNSK_ISU_SL_EE(%"class.std::__1::__tree.187"* %0, %"class.std::__1::__tree_node.408"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.410"**
  %14 = load %"class.std::__1::__tree_node.410"*, %"class.std::__1::__tree_node.410"** %13, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEENSB_12_GLOBAL__N_123OrderByCreationTimeDescENS7_ISM_EEE7destroyEPNSH_ISM_SI_EE(%"class.std::__1::__tree.199"* %11, %"class.std::__1::__tree_node.410"* %14) #19
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.std::__1::__tuple_leaf.198"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::__tuple_leaf.198", %"class.std::__1::__tuple_leaf.198"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #21
  br label %23

23:                                               ; preds = %20, %4
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.408", %"class.std::__1::__tree_node.408"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::__tuple_leaf.197"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::__tuple_leaf.197", %"class.std::__1::__tuple_leaf.197"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #21
  br label %32

32:                                               ; preds = %29, %23
  %33 = bitcast %"struct.std::__1::pair.209"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #21
  br label %40

40:                                               ; preds = %32, %37
  %41 = bitcast %"class.std::__1::__tree_node.408"* %1 to i8*
  tail call void @_ZdlPv(i8* %41) #21
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEENSB_12_GLOBAL__N_123OrderByCreationTimeDescENS7_ISM_EEE7destroyEPNSH_ISM_SI_EE(%"class.std::__1::__tree.199"* readnone, %"class.std::__1::__tree_node.410"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.410"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.410"* %1 to %"class.std::__1::__tree_node.410"**
  %6 = load %"class.std::__1::__tree_node.410"*, %"class.std::__1::__tree_node.410"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEENSB_12_GLOBAL__N_123OrderByCreationTimeDescENS7_ISM_EEE7destroyEPNSH_ISM_SI_EE(%"class.std::__1::__tree.199"* %0, %"class.std::__1::__tree_node.410"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.410", %"class.std::__1::__tree_node.410"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.410"**
  %9 = load %"class.std::__1::__tree_node.410"*, %"class.std::__1::__tree_node.410"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEENSB_12_GLOBAL__N_123OrderByCreationTimeDescENS7_ISM_EEE7destroyEPNSH_ISM_SI_EE(%"class.std::__1::__tree.199"* %0, %"class.std::__1::__tree_node.410"* %9) #19
  %10 = bitcast %"class.std::__1::__tree_node.410"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_S9_EEESA_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"*, %"class.std::__1::tuple"* dereferenceable(72), %"class.std::__1::tuple"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.422", align 1
  %5 = bitcast %"class.std::__1::tuple"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = bitcast %"class.std::__1::tuple"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp ult i64 %12, %20
  %22 = select i1 %21, i64 %12, i64 %20
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::tuple"* %1 to i8*
  %28 = select i1 %16, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %32 = select i1 %8, i8* %30, i8* %31
  %33 = tail call i32 @memcmp(i8* %28, i8* %32, i64 %22) #19
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %24, %3
  %36 = icmp ult i64 %20, %12
  br i1 %36, label %60, label %39

37:                                               ; preds = %24
  %38 = icmp slt i32 %33, 0
  br i1 %38, label %60, label %49

39:                                               ; preds = %35
  br i1 %23, label %54, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %46 = select i1 %8, i8* %42, i8* %45
  %47 = bitcast %"class.std::__1::tuple"* %1 to i8*
  %48 = select i1 %16, i8* %44, i8* %47
  br label %49

49:                                               ; preds = %40, %37
  %50 = phi i8* [ %48, %40 ], [ %28, %37 ]
  %51 = phi i8* [ %46, %40 ], [ %32, %37 ]
  %52 = tail call i32 @memcmp(i8* %51, i8* %50, i64 %22) #19
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49, %39
  br i1 %21, label %60, label %57

55:                                               ; preds = %49
  %56 = icmp slt i32 %52, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54, %55
  %58 = getelementptr inbounds %"struct.std::__1::__tuple_less.422", %"struct.std::__1::__tuple_less.422"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #19
  %59 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_S9_EEESA_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.422"* nonnull %4, %"class.std::__1::tuple"* dereferenceable(72) %1, %"class.std::__1::tuple"* dereferenceable(72) %2)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #19
  br label %60

60:                                               ; preds = %54, %35, %55, %37, %57
  %61 = phi i1 [ %59, %57 ], [ true, %37 ], [ false, %55 ], [ true, %35 ], [ false, %54 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_S9_EEESA_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.422"*, %"class.std::__1::tuple"* dereferenceable(72), %"class.std::__1::tuple"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = icmp ult i64 %13, %21
  %23 = select i1 %22, i64 %13, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %29 = select i1 %17, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %33 = select i1 %9, i8* %31, i8* %32
  %34 = tail call i32 @memcmp(i8* %29, i8* %33, i64 %23) #19
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %25, %3
  %37 = icmp ult i64 %21, %13
  br i1 %37, label %95, label %40

38:                                               ; preds = %25
  %39 = icmp slt i32 %34, 0
  br i1 %39, label %95, label %50

40:                                               ; preds = %36
  br i1 %24, label %55, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %47 = select i1 %9, i8* %43, i8* %46
  %48 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %49 = select i1 %17, i8* %45, i8* %48
  br label %50

50:                                               ; preds = %41, %38
  %51 = phi i8* [ %49, %41 ], [ %29, %38 ]
  %52 = phi i8* [ %47, %41 ], [ %33, %38 ]
  %53 = tail call i32 @memcmp(i8* %52, i8* %51, i64 %23) #19
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50, %40
  br i1 %22, label %95, label %58

56:                                               ; preds = %50
  %57 = icmp slt i32 %53, 0
  br i1 %57, label %95, label %58

58:                                               ; preds = %55, %56
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %63 to i64
  %68 = select i1 %64, i64 %66, i64 %67
  %69 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i64 %74, i64 %75
  %77 = icmp ult i64 %68, %76
  %78 = select i1 %77, i64 %68, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %91, label %80

80:                                               ; preds = %58
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %84 = select i1 %72, i8* %82, i8* %83
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %88 = select i1 %64, i8* %86, i8* %87
  %89 = tail call i32 @memcmp(i8* %84, i8* %88, i64 %78) #19
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %80, %58
  %92 = icmp ult i64 %76, %68
  br label %95

93:                                               ; preds = %80
  %94 = icmp slt i32 %89, 0
  br label %95

95:                                               ; preds = %55, %36, %91, %93, %56, %38
  %96 = phi i1 [ true, %38 ], [ false, %56 ], [ %92, %91 ], [ %94, %93 ], [ true, %36 ], [ false, %55 ]
  ret i1 %96
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net22CookieWithAccessResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.164"*, %"struct.net::CookieWithAccessResult"* dereferenceable(168)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::CookieWithAccessResult"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.164"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 168
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 109802048057794950
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.164"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::CookieWithAccessResult"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 168
  %20 = icmp ult i64 %19, 54901024028897475
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 109802048057794950, %14 ]
  %28 = mul i64 %27, 168
  %29 = tail call i8* @_Znwm(i64 %28) #21
  %30 = bitcast i8* %29 to %"struct.net::CookieWithAccessResult"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::CookieWithAccessResult"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %33, i64 %32
  %36 = ptrtoint %"struct.net::CookieWithAccessResult"* %35 to i64
  %37 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %1, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %37, %"class.net::CanonicalCookie"* dereferenceable(144) %38) #19
  %39 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %1, i64 0, i32 1
  tail call void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"* %39, %"struct.net::CookieAccessResult"* dereferenceable(20) %40) #19
  %41 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %34, i64 1
  %42 = ptrtoint %"struct.net::CookieWithAccessResult"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 0
  %44 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %43, align 8
  %45 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %3, align 8
  %46 = icmp eq %"struct.net::CookieWithAccessResult"* %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %31
  %48 = ptrtoint %"struct.net::CookieWithAccessResult"* %44 to i64
  br label %62

49:                                               ; preds = %31, %49
  %50 = phi %"struct.net::CookieWithAccessResult"* [ %57, %49 ], [ %34, %31 ]
  %51 = phi %"struct.net::CookieWithAccessResult"* [ %52, %49 ], [ %45, %31 ]
  %52 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %50, i64 -1, i32 0
  %54 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %52, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %53, %"class.net::CanonicalCookie"* dereferenceable(144) %54) #19
  %55 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %50, i64 -1, i32 1
  %56 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %51, i64 -1, i32 1
  tail call void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"* %55, %"struct.net::CookieAccessResult"* dereferenceable(20) %56) #19
  %57 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %50, i64 -1
  %58 = icmp eq %"struct.net::CookieWithAccessResult"* %52, %44
  br i1 %58, label %59, label %49

59:                                               ; preds = %49
  %60 = load i64, i64* %6, align 8
  %61 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %3, align 8
  br label %62

62:                                               ; preds = %47, %59
  %63 = phi %"struct.net::CookieWithAccessResult"* [ %44, %47 ], [ %61, %59 ]
  %64 = phi %"struct.net::CookieWithAccessResult"* [ %34, %47 ], [ %57, %59 ]
  %65 = phi i64 [ %48, %47 ], [ %60, %59 ]
  %66 = ptrtoint %"struct.net::CookieWithAccessResult"* %64 to i64
  store i64 %66, i64* %6, align 8
  store i64 %42, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %67 = inttoptr i64 %65 to %"struct.net::CookieWithAccessResult"*
  %68 = icmp eq %"struct.net::CookieWithAccessResult"* %63, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %62, %69
  %70 = phi %"struct.net::CookieWithAccessResult"* [ %71, %69 ], [ %63, %62 ]
  %71 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %70, i64 -1
  %72 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %70, i64 -1, i32 1
  tail call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* %72) #19
  %73 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %71, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %73) #19
  %74 = icmp eq %"struct.net::CookieWithAccessResult"* %71, %67
  br i1 %74, label %75, label %69

75:                                               ; preds = %69, %62
  %76 = icmp eq i64 %65, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = inttoptr i64 %65 to i8*
  tail call void @_ZdlPv(i8* %78) #21
  br label %79

79:                                               ; preds = %75, %77
  ret void
}

declare void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.net::NetLog::GetParamsInterface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net6NetLog18GetParamsInterfaceD2Ev(%"class.net::NetLog::GetParamsInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_3EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %1, i64 0, i32 1
  %5 = load %class.anon.220*, %class.anon.220** %4, align 8
  %6 = getelementptr inbounds %class.anon.220, %class.anon.220* %5, i64 0, i32 0
  %7 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %6, align 8, !noalias !176
  %8 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8, !noalias !176
  %9 = getelementptr inbounds %class.anon.220, %class.anon.220* %5, i64 0, i32 1
  %10 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %9, align 8, !noalias !176
  tail call void @_ZN3net39NetLogCookieMonsterCookieRejectedSecureEPKNS_15CanonicalCookieES2_NS_17NetLogCaptureModeE(%"class.base::Value"* sret %0, %"class.net::CanonicalCookie"* %8, %"class.net::CanonicalCookie"* %10, i32 %2) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_3EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev"(%class.GetParamsImpl*) unnamed_addr #14 align 2 {
  %2 = bitcast %class.GetParamsImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

declare void @_ZN3net39NetLogCookieMonsterCookieRejectedSecureEPKNS_15CanonicalCookieES2_NS_17NetLogCaptureModeE(%"class.base::Value"* sret, %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_4EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl.433* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GetParamsImpl.433, %class.GetParamsImpl.433* %1, i64 0, i32 1
  %5 = load %class.anon.221*, %class.anon.221** %4, align 8
  %6 = getelementptr inbounds %class.anon.221, %class.anon.221* %5, i64 0, i32 0
  %7 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %6, align 8, !noalias !179
  %8 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8, !noalias !179
  %9 = getelementptr inbounds %class.anon.221, %class.anon.221* %5, i64 0, i32 1
  %10 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %9, align 8, !noalias !179
  tail call void @_ZN3net41NetLogCookieMonsterCookieRejectedHttponlyEPKNS_15CanonicalCookieES2_NS_17NetLogCaptureModeE(%"class.base::Value"* sret %0, %"class.net::CanonicalCookie"* %8, %"class.net::CanonicalCookie"* %10, i32 %2) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_4EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev"(%class.GetParamsImpl.433*) unnamed_addr #14 align 2 {
  %2 = bitcast %class.GetParamsImpl.433* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

declare void @_ZN3net41NetLogCookieMonsterCookieRejectedHttponlyEPKNS_15CanonicalCookieES2_NS_17NetLogCaptureModeE(%"class.base::Value"* sret, %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_5EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl.434* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GetParamsImpl.434, %class.GetParamsImpl.434* %1, i64 0, i32 1
  %5 = load %class.anon.222*, %class.anon.222** %4, align 8
  %6 = getelementptr inbounds %class.anon.222, %class.anon.222* %5, i64 0, i32 0
  %7 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %6, align 8, !noalias !182
  %8 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8, !noalias !182
  %9 = getelementptr inbounds %class.anon.222, %class.anon.222* %5, i64 0, i32 1
  %10 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %9, align 8, !noalias !182
  %11 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %10, align 8, !noalias !182
  %12 = getelementptr inbounds %class.anon.222, %class.anon.222* %5, i64 0, i32 2
  %13 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %12, align 8, !noalias !182
  tail call void @_ZN3net47NetLogCookieMonsterCookiePreservedSkippedSecureEPKNS_15CanonicalCookieES2_S2_NS_17NetLogCaptureModeE(%"class.base::Value"* sret %0, %"class.net::CanonicalCookie"* %8, %"class.net::CanonicalCookie"* %11, %"class.net::CanonicalCookie"* %13, i32 %2) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEE3$_5EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev"(%class.GetParamsImpl.434*) unnamed_addr #14 align 2 {
  %2 = bitcast %class.GetParamsImpl.434* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

declare void @_ZN3net47NetLogCookieMonsterCookiePreservedSkippedSecureEPKNS_15CanonicalCookieES2_S2_NS_17NetLogCaptureModeE(%"class.base::Value"* sret, %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISD_EEEEbRKNS_18CookieAccessResultEbE3$_6EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl.435* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GetParamsImpl.435, %class.GetParamsImpl.435* %1, i64 0, i32 1
  %5 = load %class.anon.223*, %class.anon.223** %4, align 8
  %6 = getelementptr inbounds %class.anon.223, %class.anon.223* %5, i64 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %6, align 8, !noalias !185
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %8, align 8, !noalias !185
  %10 = getelementptr inbounds %class.anon.223, %class.anon.223* %5, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8, !noalias !185
  %12 = load i8, i8* %11, align 1, !range !3, !noalias !185
  %13 = icmp ne i8 %12, 0
  tail call void @_ZN3net30NetLogCookieMonsterCookieAddedEPKNS_15CanonicalCookieEbNS_17NetLogCaptureModeE(%"class.base::Value"* sret %0, %"class.net::CanonicalCookie"* %9, i1 zeroext %13, i32 %2) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISD_EEEEbRKNS_18CookieAccessResultEbE3$_6EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSM_EN13GetParamsImplD0Ev"(%class.GetParamsImpl.435*) unnamed_addr #14 align 2 {
  %2 = bitcast %class.GetParamsImpl.435* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

declare void @_ZN3net30NetLogCookieMonsterCookieAddedEPKNS_15CanonicalCookieEbNS_17NetLogCaptureModeE(%"class.base::Value"* sret, %"class.net::CanonicalCookie"*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE15__emplace_multiIJNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEDpOT_(%"class.std::__1::__tree.7"*, %"struct.std::__1::pair.154"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #21, !noalias !188
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast %"struct.std::__1::pair.154"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1, !noalias !188
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"struct.std::__1::pair.154"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %10, i64 24, i1 false) #19, !noalias !188
  br label %17

11:                                               ; preds = %2
  %12 = bitcast i8* %4 to %"class.std::__1::basic_string"*
  %13 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !188
  %15 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !188
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %14, i64 %16) #19, !noalias !188
  br label %17

17:                                               ; preds = %9, %11
  %18 = getelementptr inbounds i8, i8* %3, i64 56
  %19 = getelementptr inbounds %"struct.std::__1::pair.154", %"struct.std::__1::pair.154"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.78"* %19 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !188
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %20, align 8, !noalias !188
  %23 = bitcast i8* %18 to i64*
  store i64 %22, i64* %23, align 8, !noalias !188
  %24 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.263"**
  %26 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node.263"* %26, null
  br i1 %27, label %82, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds i8, i8* %3, i64 55
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds i8, i8* %3, i64 40
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %30 to i64
  %36 = select i1 %31, i64 %34, i64 %35
  %37 = bitcast i8* %4 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = select i1 %31, i8* %38, i8* %4
  br label %40

40:                                               ; preds = %79, %28
  %41 = phi %"class.std::__1::__tree_node.263"* [ %81, %79 ], [ %26, %28 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 1
  %43 = bitcast %"struct.std::__1::__value_type"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = icmp ult i64 %50, %36
  %52 = select i1 %51, i64 %50, i64 %36
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"struct.std::__1::__value_type"* %42 to i8*
  %58 = select i1 %46, i8* %56, i8* %57
  %59 = tail call i32 @memcmp(i8* %39, i8* %58, i64 %52) #19
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %54, %40
  %62 = icmp ult i64 %36, %50
  br i1 %62, label %65, label %72

63:                                               ; preds = %54
  %64 = icmp slt i32 %59, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %63, %61
  %66 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %79

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 0, i32 0
  br label %84

72:                                               ; preds = %63, %61
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 0, i32 1
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %41, i64 0, i32 0, i32 0
  br label %84

79:                                               ; preds = %72, %65
  %80 = phi %"class.std::__1::__tree_node_base"* [ %67, %65 ], [ %74, %72 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"* %80 to %"class.std::__1::__tree_node.263"*
  br label %40

82:                                               ; preds = %17
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  br label %84

84:                                               ; preds = %69, %76, %82
  %85 = phi %"class.std::__1::__tree_end_node"* [ %24, %82 ], [ %71, %69 ], [ %78, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %83, %82 ], [ %70, %69 ], [ %77, %76 ]
  %87 = bitcast i8* %3 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds i8, i8* %3, i64 16
  %89 = bitcast i8* %88 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %85, %"class.std::__1::__tree_end_node"** %89, align 8
  %90 = bitcast %"class.std::__1::__tree_node_base"** %86 to i8**
  store i8* %3, i8** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %84
  %97 = ptrtoint %"class.std::__1::__tree_node_base"* %94 to i64
  %98 = bitcast %"class.std::__1::__tree.7"* %0 to i64*
  store i64 %97, i64* %98, align 8
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  br label %100

100:                                              ; preds = %96, %84
  %101 = phi %"class.std::__1::__tree_node_base"* [ %87, %84 ], [ %99, %96 ]
  %102 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"* %101) #19
  %104 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 2, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %104, align 8
  %107 = bitcast i8* %3 to %"class.std::__1::__tree_end_node"*
  ret %"class.std::__1::__tree_end_node"* %107
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISE_EEEEEEPNS3_11__tree_nodeISI_PvEElEEEEbNS2_13DeletionCauseEE3$_7EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSS_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl.442* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GetParamsImpl.442, %class.GetParamsImpl.442* %1, i64 0, i32 1
  %5 = load %class.anon.225*, %class.anon.225** %4, align 8
  %6 = getelementptr inbounds %class.anon.225, %class.anon.225* %5, i64 0, i32 0
  %7 = load %"class.net::CanonicalCookie"**, %"class.net::CanonicalCookie"*** %6, align 8, !noalias !191
  %8 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, align 8, !noalias !191
  %9 = getelementptr inbounds %class.anon.225, %class.anon.225* %5, i64 0, i32 1
  %10 = load %"struct.net::(anonymous namespace)::ChangeCausePair_struct"*, %"struct.net::(anonymous namespace)::ChangeCausePair_struct"** %9, align 8, !noalias !191
  %11 = getelementptr inbounds %"struct.net::(anonymous namespace)::ChangeCausePair_struct", %"struct.net::(anonymous namespace)::ChangeCausePair_struct"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4, !noalias !191
  %13 = getelementptr inbounds %class.anon.225, %class.anon.225* %5, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !noalias !191
  %15 = load i8, i8* %14, align 1, !range !3, !noalias !191
  %16 = icmp ne i8 %15, 0
  tail call void @_ZN3net32NetLogCookieMonsterCookieDeletedEPKNS_15CanonicalCookieENS_17CookieChangeCauseEbNS_17NetLogCaptureModeE(%"class.base::Value"* sret %0, %"class.net::CanonicalCookie"* %8, i32 %12, i1 zeroext %16, i32 %2) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_15CanonicalCookieENS3_14default_deleteISE_EEEEEEPNS3_11__tree_nodeISI_PvEElEEEEbNS2_13DeletionCauseEE3$_7EENS3_9enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKSS_EN13GetParamsImplD0Ev"(%class.GetParamsImpl.442*) unnamed_addr #14 align 2 {
  %2 = bitcast %class.GetParamsImpl.442* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

declare void @_ZN3net32NetLogCookieMonsterCookieDeletedEPKNS_15CanonicalCookieENS_17CookieChangeCauseEbNS_17NetLogCaptureModeE(%"class.base::Value"* sret, %"class.net::CanonicalCookie"*, i32, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE(%"class.std::__1::__tree.7"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.7"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #19
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.net::CanonicalCookie"**
  %48 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %47, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %47, align 8
  %49 = icmp eq %"class.net::CanonicalCookie"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %38
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %48) #19
  %51 = bitcast %"class.net::CanonicalCookie"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #21
  br label %52

52:                                               ; preds = %50, %38
  %53 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #21
  br label %60

60:                                               ; preds = %52, %57
  %61 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %61) #21
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE13__count_multiIS7_EEmRKT_(%"class.std::__1::__tree.7"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.7", %"class.std::__1::__tree.7"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.263"**
  %5 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.263"* %5, null
  br i1 %6, label %192, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %7, %187
  %21 = phi %"class.std::__1::__tree_node.263"* [ %5, %7 ], [ %190, %187 ]
  %22 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %189, %187 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %31, %15
  %33 = select i1 %32, i64 %31, i64 %15
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %19, i8* %39, i64 %33) #19
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %15, %31
  br i1 %43, label %46, label %49

44:                                               ; preds = %35
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %42, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_node.263"* %21 to %"class.std::__1::__tree_node.263"**
  br label %187

49:                                               ; preds = %42
  br i1 %34, label %59, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %54 = select i1 %27, i8* %52, i8* %53
  br label %55

55:                                               ; preds = %50, %44
  %56 = phi i8* [ %54, %50 ], [ %39, %44 ]
  %57 = tail call i32 @memcmp(i8* %56, i8* %19, i64 %33) #19
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55, %49
  br i1 %32, label %62, label %65

60:                                               ; preds = %55
  %61 = icmp slt i32 %57, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59, %60
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::__tree_node_base"** %63 to %"class.std::__1::__tree_node.263"**
  br label %187

65:                                               ; preds = %59, %60
  %66 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::__tree_node.263"* %21 to %"class.std::__1::__tree_node.263"**
  %68 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node.263"* %68, null
  br i1 %69, label %107, label %70

70:                                               ; preds = %65, %96
  %71 = phi %"class.std::__1::__tree_end_node"* [ %104, %96 ], [ %66, %65 ]
  %72 = phi %"class.std::__1::__tree_node.263"* [ %105, %96 ], [ %68, %65 ]
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 1
  %74 = bitcast %"struct.std::__1::__value_type"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = icmp ult i64 %15, %81
  %83 = select i1 %82, i64 %15, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast %"struct.std::__1::__value_type"* %73 to i8*
  %89 = select i1 %77, i8* %87, i8* %88
  %90 = tail call i32 @memcmp(i8* %89, i8* %19, i64 %83) #19
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %85, %70
  %93 = icmp ult i64 %81, %15
  %94 = zext i1 %82 to i32
  %95 = select i1 %93, i32 -1, i32 %94
  br label %96

96:                                               ; preds = %92, %85
  %97 = phi i32 [ %95, %92 ], [ %90, %85 ]
  %98 = icmp slt i32 %97, 0
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 0, i32 1
  %100 = bitcast %"class.std::__1::__tree_node_base"** %99 to %"class.std::__1::__tree_node.263"**
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %72, i64 0, i32 0, i32 0
  %102 = bitcast %"class.std::__1::__tree_node.263"* %72 to %"class.std::__1::__tree_node.263"**
  %103 = select i1 %98, %"class.std::__1::__tree_node.263"** %100, %"class.std::__1::__tree_node.263"** %102
  %104 = select i1 %98, %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"* %101
  %105 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %103, align 8
  %106 = icmp eq %"class.std::__1::__tree_node.263"* %105, null
  br i1 %106, label %107, label %70

107:                                              ; preds = %96, %65
  %108 = phi %"class.std::__1::__tree_end_node"* [ %66, %65 ], [ %104, %96 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %21, i64 0, i32 0, i32 1
  %110 = bitcast %"class.std::__1::__tree_node_base"** %109 to %"class.std::__1::__tree_node.263"**
  %111 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node.263"* %111, null
  br i1 %112, label %150, label %113

113:                                              ; preds = %107, %139
  %114 = phi %"class.std::__1::__tree_end_node"* [ %147, %139 ], [ %22, %107 ]
  %115 = phi %"class.std::__1::__tree_node.263"* [ %148, %139 ], [ %111, %107 ]
  %116 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %115, i64 0, i32 1
  %117 = bitcast %"struct.std::__1::__value_type"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %115, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = zext i8 %119 to i64
  %124 = select i1 %120, i64 %122, i64 %123
  %125 = icmp ult i64 %124, %15
  %126 = select i1 %125, i64 %124, i64 %15
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %135, label %128

128:                                              ; preds = %113
  %129 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = bitcast %"struct.std::__1::__value_type"* %116 to i8*
  %132 = select i1 %120, i8* %130, i8* %131
  %133 = tail call i32 @memcmp(i8* %19, i8* %132, i64 %126) #19
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %128, %113
  %136 = icmp ult i64 %15, %124
  %137 = zext i1 %125 to i32
  %138 = select i1 %136, i32 -1, i32 %137
  br label %139

139:                                              ; preds = %135, %128
  %140 = phi i32 [ %138, %135 ], [ %133, %128 ]
  %141 = icmp slt i32 %140, 0
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %115, i64 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::__tree_node.263"* %115 to %"class.std::__1::__tree_node.263"**
  %144 = getelementptr inbounds %"class.std::__1::__tree_node.263", %"class.std::__1::__tree_node.263"* %115, i64 0, i32 0, i32 1
  %145 = bitcast %"class.std::__1::__tree_node_base"** %144 to %"class.std::__1::__tree_node.263"**
  %146 = select i1 %141, %"class.std::__1::__tree_node.263"** %143, %"class.std::__1::__tree_node.263"** %145
  %147 = select i1 %141, %"class.std::__1::__tree_end_node"* %142, %"class.std::__1::__tree_end_node"* %114
  %148 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %146, align 8
  %149 = icmp eq %"class.std::__1::__tree_node.263"* %148, null
  br i1 %149, label %150, label %113

150:                                              ; preds = %139, %107
  %151 = phi %"class.std::__1::__tree_end_node"* [ %22, %107 ], [ %147, %139 ]
  %152 = icmp eq %"class.std::__1::__tree_end_node"* %108, %151
  br i1 %152, label %192, label %153

153:                                              ; preds = %150, %184
  %154 = phi i64 [ %156, %184 ], [ 0, %150 ]
  %155 = phi %"class.std::__1::__tree_end_node"* [ %185, %184 ], [ %108, %150 ]
  %156 = add nuw nsw i64 %154, 1
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %155, i64 1, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, null
  br i1 %159, label %160, label %168

160:                                              ; preds = %153
  %161 = bitcast %"class.std::__1::__tree_end_node"* %155 to %"class.std::__1::__tree_node_base"*
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %155, i64 2
  %163 = bitcast %"class.std::__1::__tree_end_node"* %162 to %"class.std::__1::__tree_end_node"**
  %164 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %164, i64 0, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, %161
  br i1 %167, label %184, label %175

168:                                              ; preds = %153, %168
  %169 = phi %"class.std::__1::__tree_node_base"* [ %171, %168 ], [ %158, %153 ]
  %170 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %169, i64 0, i32 0, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %173, label %168

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %169, i64 0, i32 0
  br label %184

175:                                              ; preds = %160, %175
  %176 = phi %"class.std::__1::__tree_end_node"** [ %179, %175 ], [ %163, %160 ]
  %177 = bitcast %"class.std::__1::__tree_end_node"** %176 to %"class.std::__1::__tree_node_base"**
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %178, i64 0, i32 2
  %180 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 0, i32 0
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, %178
  br i1 %183, label %184, label %175

184:                                              ; preds = %175, %173, %160
  %185 = phi %"class.std::__1::__tree_end_node"* [ %174, %173 ], [ %164, %160 ], [ %180, %175 ]
  %186 = icmp eq %"class.std::__1::__tree_end_node"* %185, %151
  br i1 %186, label %192, label %153

187:                                              ; preds = %62, %46
  %188 = phi %"class.std::__1::__tree_node.263"** [ %48, %46 ], [ %64, %62 ]
  %189 = phi %"class.std::__1::__tree_end_node"* [ %47, %46 ], [ %22, %62 ]
  %190 = load %"class.std::__1::__tree_node.263"*, %"class.std::__1::__tree_node.263"** %188, align 8
  %191 = icmp eq %"class.std::__1::__tree_node.263"* %190, null
  br i1 %191, label %192, label %20

192:                                              ; preds = %187, %184, %2, %150
  %193 = phi i64 [ 0, %150 ], [ 0, %2 ], [ %156, %184 ], [ 0, %187 ]
  ret i64 %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_(%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %285, %3
  %5 = phi %"class.std::__1::__map_iterator"* [ %1, %3 ], [ %266, %285 ]
  %6 = phi %"class.std::__1::__map_iterator"* [ %0, %3 ], [ %18, %285 ]
  %7 = ptrtoint %"class.std::__1::__map_iterator"* %5 to i64
  %8 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %5, i64 -1
  %9 = bitcast %"class.std::__1::__map_iterator"* %8 to i64*
  %10 = bitcast %"class.std::__1::__map_iterator"* %8 to i64*
  %11 = bitcast %"class.std::__1::__map_iterator"* %8 to i64*
  %12 = bitcast %"class.std::__1::__map_iterator"* %8 to i64*
  %13 = bitcast %"class.std::__1::__map_iterator"* %8 to i64*
  %14 = ptrtoint %"class.std::__1::__map_iterator"* %5 to i64
  br label %15

15:                                               ; preds = %294, %4
  %16 = phi %"class.std::__1::__map_iterator"* [ %6, %4 ], [ %295, %294 ]
  br label %17

17:                                               ; preds = %216, %15
  %18 = phi %"class.std::__1::__map_iterator"* [ %16, %15 ], [ %207, %216 ]
  %19 = ptrtoint %"class.std::__1::__map_iterator"* %18 to i64
  %20 = sub i64 %7, %19
  %21 = ashr exact i64 %20, 3
  switch i64 %21, label %105 [
    i64 0, label %298
    i64 1, label %298
    i64 2, label %22
    i64 3, label %31
    i64 4, label %66
    i64 5, label %71
  ]

22:                                               ; preds = %17
  %23 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %24 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %5, i64 -1
  %25 = tail call zeroext i1 %23(%"class.std::__1::__map_iterator"* dereferenceable(8) %24, %"class.std::__1::__map_iterator"* dereferenceable(8) %18) #19
  br i1 %25, label %26, label %298

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::__map_iterator"* %18 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::__map_iterator"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  br label %298

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 1
  %33 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %5, i64 -1
  %34 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %35 = tail call zeroext i1 %34(%"class.std::__1::__map_iterator"* dereferenceable(8) %32, %"class.std::__1::__map_iterator"* dereferenceable(8) %18) #19
  %36 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %37 = tail call zeroext i1 %36(%"class.std::__1::__map_iterator"* dereferenceable(8) %33, %"class.std::__1::__map_iterator"* dereferenceable(8) %32) #19
  br i1 %35, label %51, label %38

38:                                               ; preds = %31
  br i1 %37, label %39, label %298

39:                                               ; preds = %38
  %40 = bitcast %"class.std::__1::__map_iterator"* %32 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::__map_iterator"* %33 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 %41, i64* %42, align 8
  %44 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %45 = tail call zeroext i1 %44(%"class.std::__1::__map_iterator"* dereferenceable(8) %32, %"class.std::__1::__map_iterator"* dereferenceable(8) %18) #19
  br i1 %45, label %46, label %298

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::__map_iterator"* %18 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = shufflevector <2 x i64> %48, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %50 = bitcast %"class.std::__1::__map_iterator"* %18 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %50, align 8
  br label %298

51:                                               ; preds = %31
  %52 = bitcast %"class.std::__1::__map_iterator"* %18 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %37, label %54, label %57

54:                                               ; preds = %51
  %55 = bitcast %"class.std::__1::__map_iterator"* %33 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %52, align 8
  store i64 %53, i64* %55, align 8
  br label %298

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__map_iterator"* %32 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %52, align 8
  store i64 %53, i64* %58, align 8
  %60 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %61 = tail call zeroext i1 %60(%"class.std::__1::__map_iterator"* dereferenceable(8) %33, %"class.std::__1::__map_iterator"* dereferenceable(8) %32) #19
  br i1 %61, label %62, label %298

62:                                               ; preds = %57
  %63 = load i64, i64* %58, align 8
  %64 = bitcast %"class.std::__1::__map_iterator"* %33 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %58, align 8
  store i64 %63, i64* %64, align 8
  br label %298

66:                                               ; preds = %17
  %67 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 1
  %68 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 2
  %69 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %5, i64 -1
  %70 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEjT0_ST_ST_ST_T_(%"class.std::__1::__map_iterator"* %18, %"class.std::__1::__map_iterator"* %67, %"class.std::__1::__map_iterator"* %68, %"class.std::__1::__map_iterator"* %69, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2)
  br label %298

71:                                               ; preds = %17
  %72 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 1
  %73 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 2
  %74 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 3
  %75 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %5, i64 -1
  %76 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEjT0_ST_ST_ST_T_(%"class.std::__1::__map_iterator"* %18, %"class.std::__1::__map_iterator"* %72, %"class.std::__1::__map_iterator"* %73, %"class.std::__1::__map_iterator"* %74, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2) #19
  %77 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %78 = tail call zeroext i1 %77(%"class.std::__1::__map_iterator"* dereferenceable(8) %75, %"class.std::__1::__map_iterator"* dereferenceable(8) %74) #19
  br i1 %78, label %79, label %298

79:                                               ; preds = %71
  %80 = bitcast %"class.std::__1::__map_iterator"* %74 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::__map_iterator"* %75 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %80, align 8
  store i64 %81, i64* %82, align 8
  %84 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %85 = tail call zeroext i1 %84(%"class.std::__1::__map_iterator"* dereferenceable(8) %74, %"class.std::__1::__map_iterator"* dereferenceable(8) %73) #19
  br i1 %85, label %86, label %298

86:                                               ; preds = %79
  %87 = bitcast %"class.std::__1::__map_iterator"* %73 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8
  %89 = shufflevector <2 x i64> %88, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %90 = bitcast %"class.std::__1::__map_iterator"* %73 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 8
  %91 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %92 = tail call zeroext i1 %91(%"class.std::__1::__map_iterator"* dereferenceable(8) %73, %"class.std::__1::__map_iterator"* dereferenceable(8) %72) #19
  br i1 %92, label %93, label %298

93:                                               ; preds = %86
  %94 = bitcast %"class.std::__1::__map_iterator"* %72 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  %96 = shufflevector <2 x i64> %95, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %97 = bitcast %"class.std::__1::__map_iterator"* %72 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 8
  %98 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %99 = tail call zeroext i1 %98(%"class.std::__1::__map_iterator"* dereferenceable(8) %72, %"class.std::__1::__map_iterator"* dereferenceable(8) %18) #19
  br i1 %99, label %100, label %298

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::__map_iterator"* %18 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  %103 = shufflevector <2 x i64> %102, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %104 = bitcast %"class.std::__1::__map_iterator"* %18 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  br label %298

105:                                              ; preds = %17
  %106 = icmp slt i64 %20, 248
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_(%"class.std::__1::__map_iterator"* %18, %"class.std::__1::__map_iterator"* %5, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2)
  br label %298

108:                                              ; preds = %105
  %109 = icmp sgt i64 %20, 7992
  %110 = sdiv i64 %21, 2
  %111 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 %110
  br i1 %109, label %112, label %145

112:                                              ; preds = %108
  %113 = sdiv i64 %21, 4
  %114 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 %113
  %115 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %111, i64 %113
  %116 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEjT0_ST_ST_ST_T_(%"class.std::__1::__map_iterator"* %18, %"class.std::__1::__map_iterator"* %114, %"class.std::__1::__map_iterator"* %111, %"class.std::__1::__map_iterator"* %115, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2) #19
  %117 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %118 = tail call zeroext i1 %117(%"class.std::__1::__map_iterator"* dereferenceable(8) %8, %"class.std::__1::__map_iterator"* dereferenceable(8) %115) #19
  br i1 %118, label %119, label %174

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::__map_iterator"* %115 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %12, align 8
  store i64 %122, i64* %120, align 8
  store i64 %121, i64* %12, align 8
  %123 = add i32 %116, 1
  %124 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %125 = tail call zeroext i1 %124(%"class.std::__1::__map_iterator"* dereferenceable(8) %115, %"class.std::__1::__map_iterator"* dereferenceable(8) %111) #19
  br i1 %125, label %126, label %174

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::__map_iterator"* %111 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = load i64, i64* %120, align 8
  store i64 %129, i64* %127, align 8
  store i64 %128, i64* %120, align 8
  %130 = add i32 %116, 2
  %131 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %132 = tail call zeroext i1 %131(%"class.std::__1::__map_iterator"* dereferenceable(8) %111, %"class.std::__1::__map_iterator"* dereferenceable(8) %114) #19
  br i1 %132, label %133, label %174

133:                                              ; preds = %126
  %134 = bitcast %"class.std::__1::__map_iterator"* %114 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = load i64, i64* %127, align 8
  store i64 %136, i64* %134, align 8
  store i64 %135, i64* %127, align 8
  %137 = add i32 %116, 3
  %138 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %139 = tail call zeroext i1 %138(%"class.std::__1::__map_iterator"* dereferenceable(8) %114, %"class.std::__1::__map_iterator"* dereferenceable(8) %18) #19
  br i1 %139, label %140, label %174

140:                                              ; preds = %133
  %141 = bitcast %"class.std::__1::__map_iterator"* %18 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load i64, i64* %134, align 8
  store i64 %143, i64* %141, align 8
  store i64 %142, i64* %134, align 8
  %144 = add i32 %116, 4
  br label %174

145:                                              ; preds = %108
  %146 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %147 = tail call zeroext i1 %146(%"class.std::__1::__map_iterator"* dereferenceable(8) %111, %"class.std::__1::__map_iterator"* dereferenceable(8) %18) #19
  %148 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %149 = tail call zeroext i1 %148(%"class.std::__1::__map_iterator"* dereferenceable(8) %8, %"class.std::__1::__map_iterator"* dereferenceable(8) %111) #19
  br i1 %147, label %161, label %150

150:                                              ; preds = %145
  br i1 %149, label %151, label %174

151:                                              ; preds = %150
  %152 = bitcast %"class.std::__1::__map_iterator"* %111 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = load i64, i64* %9, align 8
  store i64 %154, i64* %152, align 8
  store i64 %153, i64* %9, align 8
  %155 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %156 = tail call zeroext i1 %155(%"class.std::__1::__map_iterator"* dereferenceable(8) %111, %"class.std::__1::__map_iterator"* dereferenceable(8) %18) #19
  br i1 %156, label %157, label %174

157:                                              ; preds = %151
  %158 = bitcast %"class.std::__1::__map_iterator"* %18 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %152, align 8
  store i64 %160, i64* %158, align 8
  store i64 %159, i64* %152, align 8
  br label %174

161:                                              ; preds = %145
  %162 = bitcast %"class.std::__1::__map_iterator"* %18 to i64*
  %163 = load i64, i64* %162, align 8
  br i1 %149, label %164, label %166

164:                                              ; preds = %161
  %165 = load i64, i64* %11, align 8
  store i64 %165, i64* %162, align 8
  store i64 %163, i64* %11, align 8
  br label %174

166:                                              ; preds = %161
  %167 = bitcast %"class.std::__1::__map_iterator"* %111 to i64*
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  store i64 %163, i64* %167, align 8
  %169 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %170 = tail call zeroext i1 %169(%"class.std::__1::__map_iterator"* dereferenceable(8) %8, %"class.std::__1::__map_iterator"* dereferenceable(8) %111) #19
  br i1 %170, label %171, label %174

171:                                              ; preds = %166
  %172 = load i64, i64* %167, align 8
  %173 = load i64, i64* %10, align 8
  store i64 %173, i64* %167, align 8
  store i64 %172, i64* %10, align 8
  br label %174

174:                                              ; preds = %171, %166, %164, %157, %151, %150, %140, %133, %126, %119, %112
  %175 = phi i32 [ %144, %140 ], [ %137, %133 ], [ %130, %126 ], [ %123, %119 ], [ %116, %112 ], [ 1, %164 ], [ 0, %150 ], [ 2, %157 ], [ 1, %151 ], [ 2, %171 ], [ 1, %166 ]
  %176 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %177 = tail call zeroext i1 %176(%"class.std::__1::__map_iterator"* dereferenceable(8) %18, %"class.std::__1::__map_iterator"* dereferenceable(8) %111) #19
  br i1 %177, label %232, label %178

178:                                              ; preds = %174, %223
  %179 = phi %"class.std::__1::__map_iterator"* [ %180, %223 ], [ %8, %174 ]
  %180 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %179, i64 -1
  %181 = icmp eq %"class.std::__1::__map_iterator"* %18, %180
  br i1 %181, label %182, label %223

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 1
  %184 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %185 = tail call zeroext i1 %184(%"class.std::__1::__map_iterator"* dereferenceable(8) %18, %"class.std::__1::__map_iterator"* dereferenceable(8) %8) #19
  br i1 %185, label %200, label %186

186:                                              ; preds = %182
  %187 = icmp eq %"class.std::__1::__map_iterator"* %183, %8
  br i1 %187, label %298, label %188

188:                                              ; preds = %186, %197
  %189 = phi %"class.std::__1::__map_iterator"* [ %198, %197 ], [ %183, %186 ]
  %190 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %191 = tail call zeroext i1 %190(%"class.std::__1::__map_iterator"* dereferenceable(8) %18, %"class.std::__1::__map_iterator"* dereferenceable(8) %189) #19
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = bitcast %"class.std::__1::__map_iterator"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = load i64, i64* %13, align 8
  store i64 %195, i64* %193, align 8
  store i64 %194, i64* %13, align 8
  %196 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %189, i64 1
  br label %200

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %189, i64 1
  %199 = icmp eq %"class.std::__1::__map_iterator"* %198, %8
  br i1 %199, label %298, label %188

200:                                              ; preds = %192, %182
  %201 = phi %"class.std::__1::__map_iterator"* [ %183, %182 ], [ %196, %192 ]
  %202 = icmp eq %"class.std::__1::__map_iterator"* %201, %8
  br i1 %202, label %298, label %203

203:                                              ; preds = %200, %218
  %204 = phi %"class.std::__1::__map_iterator"* [ %210, %218 ], [ %201, %200 ]
  %205 = phi %"class.std::__1::__map_iterator"* [ %214, %218 ], [ %8, %200 ]
  br label %206

206:                                              ; preds = %206, %203
  %207 = phi %"class.std::__1::__map_iterator"* [ %204, %203 ], [ %210, %206 ]
  %208 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %209 = tail call zeroext i1 %208(%"class.std::__1::__map_iterator"* dereferenceable(8) %18, %"class.std::__1::__map_iterator"* dereferenceable(8) %207) #19
  %210 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %207, i64 1
  br i1 %209, label %211, label %206

211:                                              ; preds = %206, %211
  %212 = phi %"class.std::__1::__map_iterator"* [ %214, %211 ], [ %205, %206 ]
  %213 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %214 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %212, i64 -1
  %215 = tail call zeroext i1 %213(%"class.std::__1::__map_iterator"* dereferenceable(8) %18, %"class.std::__1::__map_iterator"* dereferenceable(8) %214) #19
  br i1 %215, label %211, label %216

216:                                              ; preds = %211
  %217 = icmp ult %"class.std::__1::__map_iterator"* %207, %214
  br i1 %217, label %218, label %17

218:                                              ; preds = %216
  %219 = bitcast %"class.std::__1::__map_iterator"* %207 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.std::__1::__map_iterator"* %214 to i64*
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %219, align 8
  store i64 %220, i64* %221, align 8
  br label %203

223:                                              ; preds = %178
  %224 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %225 = tail call zeroext i1 %224(%"class.std::__1::__map_iterator"* dereferenceable(8) %180, %"class.std::__1::__map_iterator"* dereferenceable(8) %111) #19
  br i1 %225, label %226, label %178

226:                                              ; preds = %223
  %227 = bitcast %"class.std::__1::__map_iterator"* %18 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.std::__1::__map_iterator"* %180 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %227, align 8
  store i64 %228, i64* %229, align 8
  %231 = add i32 %175, 1
  br label %232

232:                                              ; preds = %174, %226
  %233 = phi i32 [ %231, %226 ], [ %175, %174 ]
  %234 = phi %"class.std::__1::__map_iterator"* [ %180, %226 ], [ %8, %174 ]
  %235 = ptrtoint %"class.std::__1::__map_iterator"* %18 to i64
  %236 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %18, i64 1
  %237 = icmp ult %"class.std::__1::__map_iterator"* %236, %234
  br i1 %237, label %238, label %263

238:                                              ; preds = %232, %255
  %239 = phi %"class.std::__1::__map_iterator"* [ %262, %255 ], [ %111, %232 ]
  %240 = phi i32 [ %260, %255 ], [ %233, %232 ]
  %241 = phi %"class.std::__1::__map_iterator"* [ %247, %255 ], [ %236, %232 ]
  %242 = phi %"class.std::__1::__map_iterator"* [ %251, %255 ], [ %234, %232 ]
  br label %243

243:                                              ; preds = %243, %238
  %244 = phi %"class.std::__1::__map_iterator"* [ %241, %238 ], [ %247, %243 ]
  %245 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %246 = tail call zeroext i1 %245(%"class.std::__1::__map_iterator"* dereferenceable(8) %244, %"class.std::__1::__map_iterator"* dereferenceable(8) %239) #19
  %247 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %244, i64 1
  br i1 %246, label %243, label %248

248:                                              ; preds = %243, %248
  %249 = phi %"class.std::__1::__map_iterator"* [ %251, %248 ], [ %242, %243 ]
  %250 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %251 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %249, i64 -1
  %252 = tail call zeroext i1 %250(%"class.std::__1::__map_iterator"* dereferenceable(8) %251, %"class.std::__1::__map_iterator"* dereferenceable(8) %239) #19
  br i1 %252, label %253, label %248

253:                                              ; preds = %248
  %254 = icmp ugt %"class.std::__1::__map_iterator"* %244, %251
  br i1 %254, label %263, label %255

255:                                              ; preds = %253
  %256 = bitcast %"class.std::__1::__map_iterator"* %244 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.std::__1::__map_iterator"* %251 to i64*
  %259 = load i64, i64* %258, align 8
  store i64 %259, i64* %256, align 8
  store i64 %257, i64* %258, align 8
  %260 = add i32 %240, 1
  %261 = icmp eq %"class.std::__1::__map_iterator"* %239, %244
  %262 = select i1 %261, %"class.std::__1::__map_iterator"* %251, %"class.std::__1::__map_iterator"* %239
  br label %238

263:                                              ; preds = %253, %232
  %264 = phi %"class.std::__1::__map_iterator"* [ %111, %232 ], [ %239, %253 ]
  %265 = phi i32 [ %233, %232 ], [ %240, %253 ]
  %266 = phi %"class.std::__1::__map_iterator"* [ %236, %232 ], [ %244, %253 ]
  %267 = icmp eq %"class.std::__1::__map_iterator"* %266, %264
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %270 = tail call zeroext i1 %269(%"class.std::__1::__map_iterator"* dereferenceable(8) %264, %"class.std::__1::__map_iterator"* dereferenceable(8) %266) #19
  br i1 %270, label %271, label %277

271:                                              ; preds = %268
  %272 = bitcast %"class.std::__1::__map_iterator"* %266 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.std::__1::__map_iterator"* %264 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %272, align 8
  store i64 %273, i64* %274, align 8
  %276 = add i32 %265, 1
  br label %277

277:                                              ; preds = %263, %271, %268
  %278 = phi i32 [ %276, %271 ], [ %265, %268 ], [ %265, %263 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %287

280:                                              ; preds = %277
  %281 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEbT0_ST_T_(%"class.std::__1::__map_iterator"* %18, %"class.std::__1::__map_iterator"* %266, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2)
  %282 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %266, i64 1
  %283 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEbT0_ST_T_(%"class.std::__1::__map_iterator"* %282, %"class.std::__1::__map_iterator"* %5, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2)
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  br i1 %281, label %298, label %285

285:                                              ; preds = %284, %296
  br label %4

286:                                              ; preds = %280
  br i1 %281, label %294, label %287

287:                                              ; preds = %286, %277
  %288 = ptrtoint %"class.std::__1::__map_iterator"* %266 to i64
  %289 = sub i64 %288, %235
  %290 = sub i64 %14, %288
  %291 = icmp slt i64 %289, %290
  br i1 %291, label %292, label %296

292:                                              ; preds = %287
  tail call void @_ZNSt3__16__sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_(%"class.std::__1::__map_iterator"* %18, %"class.std::__1::__map_iterator"* %266, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2)
  %293 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %266, i64 1
  br label %294

294:                                              ; preds = %292, %286
  %295 = phi %"class.std::__1::__map_iterator"* [ %282, %286 ], [ %293, %292 ]
  br label %15

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %266, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_(%"class.std::__1::__map_iterator"* %297, %"class.std::__1::__map_iterator"* %5, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2)
  br label %285

298:                                              ; preds = %284, %200, %17, %17, %186, %197, %100, %93, %86, %79, %71, %62, %57, %54, %46, %39, %38, %22, %26, %66, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEjT0_ST_ST_ST_T_(%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  %7 = tail call zeroext i1 %6(%"class.std::__1::__map_iterator"* dereferenceable(8) %1, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  %8 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  %9 = tail call zeroext i1 %8(%"class.std::__1::__map_iterator"* dereferenceable(8) %2, %"class.std::__1::__map_iterator"* dereferenceable(8) %1) #19
  br i1 %7, label %22, label %10

10:                                               ; preds = %5
  br i1 %9, label %11, label %37

11:                                               ; preds = %10
  %12 = bitcast %"class.std::__1::__map_iterator"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::__map_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %16 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  %17 = tail call zeroext i1 %16(%"class.std::__1::__map_iterator"* dereferenceable(8) %1, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %17, label %18, label %37

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %12, align 8
  store i64 %21, i64* %19, align 8
  store i64 %20, i64* %12, align 8
  br label %37

22:                                               ; preds = %5
  %23 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  br i1 %9, label %25, label %28

25:                                               ; preds = %22
  %26 = bitcast %"class.std::__1::__map_iterator"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %23, align 8
  store i64 %24, i64* %26, align 8
  br label %37

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::__map_iterator"* %1 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %23, align 8
  store i64 %24, i64* %29, align 8
  %31 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  %32 = tail call zeroext i1 %31(%"class.std::__1::__map_iterator"* dereferenceable(8) %2, %"class.std::__1::__map_iterator"* dereferenceable(8) %1) #19
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = load i64, i64* %29, align 8
  %35 = bitcast %"class.std::__1::__map_iterator"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %34, i64* %35, align 8
  br label %37

37:                                               ; preds = %10, %11, %18, %25, %28, %33
  %38 = phi i32 [ 1, %25 ], [ 0, %10 ], [ 2, %18 ], [ 1, %11 ], [ 2, %33 ], [ 1, %28 ]
  %39 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  %40 = tail call zeroext i1 %39(%"class.std::__1::__map_iterator"* dereferenceable(8) %3, %"class.std::__1::__map_iterator"* dereferenceable(8) %2) #19
  br i1 %40, label %41, label %61

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::__map_iterator"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::__map_iterator"* %3 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  store i64 %43, i64* %44, align 8
  %46 = add nuw nsw i32 %38, 1
  %47 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  %48 = tail call zeroext i1 %47(%"class.std::__1::__map_iterator"* dereferenceable(8) %2, %"class.std::__1::__map_iterator"* dereferenceable(8) %1) #19
  br i1 %48, label %49, label %61

49:                                               ; preds = %41
  %50 = bitcast %"class.std::__1::__map_iterator"* %1 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = load i64, i64* %42, align 8
  store i64 %52, i64* %50, align 8
  store i64 %51, i64* %42, align 8
  %53 = add nuw nsw i32 %38, 2
  %54 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %4, align 8
  %55 = tail call zeroext i1 %54(%"class.std::__1::__map_iterator"* dereferenceable(8) %1, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %50, align 8
  store i64 %59, i64* %57, align 8
  store i64 %58, i64* %50, align 8
  %60 = add nuw nsw i32 %38, 3
  br label %61

61:                                               ; preds = %41, %56, %49, %37
  %62 = phi i32 [ %60, %56 ], [ %53, %49 ], [ %46, %41 ], [ %38, %37 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEvT0_ST_T_(%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::__map_iterator", align 8
  %5 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 2
  %6 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 1
  %7 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %8 = tail call zeroext i1 %7(%"class.std::__1::__map_iterator"* dereferenceable(8) %6, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  %9 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %10 = tail call zeroext i1 %9(%"class.std::__1::__map_iterator"* dereferenceable(8) %5, %"class.std::__1::__map_iterator"* dereferenceable(8) %6) #19
  br i1 %8, label %24, label %11

11:                                               ; preds = %3
  br i1 %10, label %12, label %40

12:                                               ; preds = %11
  %13 = bitcast %"class.std::__1::__map_iterator"* %6 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = shufflevector <2 x i64> %14, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %16 = bitcast %"class.std::__1::__map_iterator"* %6 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8
  %17 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %18 = tail call zeroext i1 %17(%"class.std::__1::__map_iterator"* dereferenceable(8) %6, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %18, label %19, label %40

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = shufflevector <2 x i64> %21, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %23 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8
  br label %40

24:                                               ; preds = %3
  %25 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  br i1 %10, label %27, label %30

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::__map_iterator"* %5 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %25, align 8
  store i64 %26, i64* %28, align 8
  br label %40

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::__map_iterator"* %6 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %25, align 8
  store i64 %26, i64* %31, align 8
  %33 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %34 = tail call zeroext i1 %33(%"class.std::__1::__map_iterator"* dereferenceable(8) %5, %"class.std::__1::__map_iterator"* dereferenceable(8) %6) #19
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = bitcast %"class.std::__1::__map_iterator"* %6 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = shufflevector <2 x i64> %37, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %39 = bitcast %"class.std::__1::__map_iterator"* %6 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %39, align 8
  br label %40

40:                                               ; preds = %11, %12, %19, %27, %30, %35
  %41 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 3
  %42 = icmp eq %"class.std::__1::__map_iterator"* %41, %1
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.std::__1::__map_iterator"* %4 to i8*
  %45 = bitcast %"class.std::__1::__map_iterator"* %4 to i64*
  br label %47

46:                                               ; preds = %70, %40
  ret void

47:                                               ; preds = %43, %70
  %48 = phi %"class.std::__1::__map_iterator"* [ %41, %43 ], [ %71, %70 ]
  %49 = phi %"class.std::__1::__map_iterator"* [ %5, %43 ], [ %48, %70 ]
  %50 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %51 = call zeroext i1 %50(%"class.std::__1::__map_iterator"* dereferenceable(8) %48, %"class.std::__1::__map_iterator"* dereferenceable(8) %49) #19
  br i1 %51, label %52, label %70

52:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #19
  %53 = bitcast %"class.std::__1::__map_iterator"* %48 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %45, align 8
  br label %55

55:                                               ; preds = %62, %52
  %56 = phi %"class.std::__1::__map_iterator"* [ %48, %52 ], [ %57, %62 ]
  %57 = phi %"class.std::__1::__map_iterator"* [ %49, %52 ], [ %64, %62 ]
  %58 = bitcast %"class.std::__1::__map_iterator"* %57 to i64*
  %59 = bitcast %"class.std::__1::__map_iterator"* %56 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = icmp eq %"class.std::__1::__map_iterator"* %57, %0
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %64 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %57, i64 -1
  %65 = call zeroext i1 %63(%"class.std::__1::__map_iterator"* nonnull dereferenceable(8) %4, %"class.std::__1::__map_iterator"* dereferenceable(8) %64) #19
  br i1 %65, label %55, label %66

66:                                               ; preds = %55, %62
  %67 = phi %"class.std::__1::__map_iterator"* [ %57, %62 ], [ %0, %55 ]
  %68 = bitcast %"class.std::__1::__map_iterator"* %67 to i64*
  %69 = load i64, i64* %45, align 8
  store i64 %69, i64* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #19
  br label %70

70:                                               ; preds = %66, %47
  %71 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %48, i64 1
  %72 = icmp eq %"class.std::__1::__map_iterator"* %71, %1
  br i1 %72, label %46, label %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEbT0_ST_T_(%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::__map_iterator", align 8
  %5 = ptrtoint %"class.std::__1::__map_iterator"* %1 to i64
  %6 = ptrtoint %"class.std::__1::__map_iterator"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 3
  switch i64 %8, label %92 [
    i64 0, label %167
    i64 1, label %167
    i64 2, label %9
    i64 3, label %18
    i64 4, label %53
    i64 5, label %58
  ]

9:                                                ; preds = %3
  %10 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %11 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %1, i64 -1
  %12 = tail call zeroext i1 %10(%"class.std::__1::__map_iterator"* dereferenceable(8) %11, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %12, label %13, label %167

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::__map_iterator"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  br label %167

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 1
  %20 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %1, i64 -1
  %21 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %22 = tail call zeroext i1 %21(%"class.std::__1::__map_iterator"* dereferenceable(8) %19, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  %23 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %24 = tail call zeroext i1 %23(%"class.std::__1::__map_iterator"* dereferenceable(8) %20, %"class.std::__1::__map_iterator"* dereferenceable(8) %19) #19
  br i1 %22, label %38, label %25

25:                                               ; preds = %18
  br i1 %24, label %26, label %167

26:                                               ; preds = %25
  %27 = bitcast %"class.std::__1::__map_iterator"* %19 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::__map_iterator"* %20 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %32 = tail call zeroext i1 %31(%"class.std::__1::__map_iterator"* dereferenceable(8) %19, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %32, label %33, label %167

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = shufflevector <2 x i64> %35, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %37 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 8
  br label %167

38:                                               ; preds = %18
  %39 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %24, label %41, label %44

41:                                               ; preds = %38
  %42 = bitcast %"class.std::__1::__map_iterator"* %20 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %39, align 8
  store i64 %40, i64* %42, align 8
  br label %167

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::__map_iterator"* %19 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %39, align 8
  store i64 %40, i64* %45, align 8
  %47 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %48 = tail call zeroext i1 %47(%"class.std::__1::__map_iterator"* dereferenceable(8) %20, %"class.std::__1::__map_iterator"* dereferenceable(8) %19) #19
  br i1 %48, label %49, label %167

49:                                               ; preds = %44
  %50 = load i64, i64* %45, align 8
  %51 = bitcast %"class.std::__1::__map_iterator"* %20 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %45, align 8
  store i64 %50, i64* %51, align 8
  br label %167

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 1
  %55 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 2
  %56 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %1, i64 -1
  %57 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEjT0_ST_ST_ST_T_(%"class.std::__1::__map_iterator"* %0, %"class.std::__1::__map_iterator"* %54, %"class.std::__1::__map_iterator"* %55, %"class.std::__1::__map_iterator"* %56, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2)
  br label %167

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 1
  %60 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 2
  %61 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 3
  %62 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %1, i64 -1
  %63 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEESO_EPSM_EEjT0_ST_ST_ST_T_(%"class.std::__1::__map_iterator"* %0, %"class.std::__1::__map_iterator"* %59, %"class.std::__1::__map_iterator"* %60, %"class.std::__1::__map_iterator"* %61, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** dereferenceable(8) %2) #19
  %64 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %65 = tail call zeroext i1 %64(%"class.std::__1::__map_iterator"* dereferenceable(8) %62, %"class.std::__1::__map_iterator"* dereferenceable(8) %61) #19
  br i1 %65, label %66, label %167

66:                                               ; preds = %58
  %67 = bitcast %"class.std::__1::__map_iterator"* %61 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::__map_iterator"* %62 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %67, align 8
  store i64 %68, i64* %69, align 8
  %71 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %72 = tail call zeroext i1 %71(%"class.std::__1::__map_iterator"* dereferenceable(8) %61, %"class.std::__1::__map_iterator"* dereferenceable(8) %60) #19
  br i1 %72, label %73, label %167

73:                                               ; preds = %66
  %74 = bitcast %"class.std::__1::__map_iterator"* %60 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = shufflevector <2 x i64> %75, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %77 = bitcast %"class.std::__1::__map_iterator"* %60 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %77, align 8
  %78 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %79 = tail call zeroext i1 %78(%"class.std::__1::__map_iterator"* dereferenceable(8) %60, %"class.std::__1::__map_iterator"* dereferenceable(8) %59) #19
  br i1 %79, label %80, label %167

80:                                               ; preds = %73
  %81 = bitcast %"class.std::__1::__map_iterator"* %59 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = shufflevector <2 x i64> %82, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %84 = bitcast %"class.std::__1::__map_iterator"* %59 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 8
  %85 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %86 = tail call zeroext i1 %85(%"class.std::__1::__map_iterator"* dereferenceable(8) %59, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %86, label %87, label %167

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  %90 = shufflevector <2 x i64> %89, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %91 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %91, align 8
  br label %167

92:                                               ; preds = %3
  %93 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 2
  %94 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 1
  %95 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %96 = tail call zeroext i1 %95(%"class.std::__1::__map_iterator"* dereferenceable(8) %94, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  %97 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %98 = tail call zeroext i1 %97(%"class.std::__1::__map_iterator"* dereferenceable(8) %93, %"class.std::__1::__map_iterator"* dereferenceable(8) %94) #19
  br i1 %96, label %112, label %99

99:                                               ; preds = %92
  br i1 %98, label %100, label %128

100:                                              ; preds = %99
  %101 = bitcast %"class.std::__1::__map_iterator"* %94 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  %103 = shufflevector <2 x i64> %102, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %104 = bitcast %"class.std::__1::__map_iterator"* %94 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  %105 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %106 = tail call zeroext i1 %105(%"class.std::__1::__map_iterator"* dereferenceable(8) %94, %"class.std::__1::__map_iterator"* dereferenceable(8) %0) #19
  br i1 %106, label %107, label %128

107:                                              ; preds = %100
  %108 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8
  %110 = shufflevector <2 x i64> %109, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %111 = bitcast %"class.std::__1::__map_iterator"* %0 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %111, align 8
  br label %128

112:                                              ; preds = %92
  %113 = bitcast %"class.std::__1::__map_iterator"* %0 to i64*
  %114 = load i64, i64* %113, align 8
  br i1 %98, label %115, label %118

115:                                              ; preds = %112
  %116 = bitcast %"class.std::__1::__map_iterator"* %93 to i64*
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %113, align 8
  store i64 %114, i64* %116, align 8
  br label %128

118:                                              ; preds = %112
  %119 = bitcast %"class.std::__1::__map_iterator"* %94 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %113, align 8
  store i64 %114, i64* %119, align 8
  %121 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %122 = tail call zeroext i1 %121(%"class.std::__1::__map_iterator"* dereferenceable(8) %93, %"class.std::__1::__map_iterator"* dereferenceable(8) %94) #19
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = bitcast %"class.std::__1::__map_iterator"* %94 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8
  %126 = shufflevector <2 x i64> %125, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %127 = bitcast %"class.std::__1::__map_iterator"* %94 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %127, align 8
  br label %128

128:                                              ; preds = %99, %100, %107, %115, %118, %123
  %129 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %0, i64 3
  %130 = icmp eq %"class.std::__1::__map_iterator"* %129, %1
  br i1 %130, label %167, label %131

131:                                              ; preds = %128
  %132 = bitcast %"class.std::__1::__map_iterator"* %4 to i8*
  %133 = bitcast %"class.std::__1::__map_iterator"* %4 to i64*
  br label %134

134:                                              ; preds = %131, %160
  %135 = phi %"class.std::__1::__map_iterator"* [ %129, %131 ], [ %162, %160 ]
  %136 = phi i32 [ 0, %131 ], [ %161, %160 ]
  %137 = phi %"class.std::__1::__map_iterator"* [ %93, %131 ], [ %135, %160 ]
  %138 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %139 = call zeroext i1 %138(%"class.std::__1::__map_iterator"* dereferenceable(8) %135, %"class.std::__1::__map_iterator"* dereferenceable(8) %137) #19
  br i1 %139, label %140, label %160

140:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #19
  %141 = bitcast %"class.std::__1::__map_iterator"* %135 to i64*
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %133, align 8
  br label %143

143:                                              ; preds = %150, %140
  %144 = phi %"class.std::__1::__map_iterator"* [ %135, %140 ], [ %145, %150 ]
  %145 = phi %"class.std::__1::__map_iterator"* [ %137, %140 ], [ %152, %150 ]
  %146 = bitcast %"class.std::__1::__map_iterator"* %145 to i64*
  %147 = bitcast %"class.std::__1::__map_iterator"* %144 to i64*
  %148 = load i64, i64* %146, align 8
  store i64 %148, i64* %147, align 8
  %149 = icmp eq %"class.std::__1::__map_iterator"* %145, %0
  br i1 %149, label %154, label %150

150:                                              ; preds = %143
  %151 = load i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)*, i1 (%"class.std::__1::__map_iterator"*, %"class.std::__1::__map_iterator"*)** %2, align 8
  %152 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %145, i64 -1
  %153 = call zeroext i1 %151(%"class.std::__1::__map_iterator"* nonnull dereferenceable(8) %4, %"class.std::__1::__map_iterator"* dereferenceable(8) %152) #19
  br i1 %153, label %143, label %154

154:                                              ; preds = %143, %150
  %155 = phi %"class.std::__1::__map_iterator"* [ %145, %150 ], [ %0, %143 ]
  %156 = bitcast %"class.std::__1::__map_iterator"* %155 to i64*
  %157 = load i64, i64* %133, align 8
  store i64 %157, i64* %156, align 8
  %158 = add i32 %136, 1
  %159 = icmp eq i32 %158, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #19
  br i1 %159, label %164, label %160

160:                                              ; preds = %154, %134
  %161 = phi i32 [ %158, %154 ], [ %136, %134 ]
  %162 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %135, i64 1
  %163 = icmp eq %"class.std::__1::__map_iterator"* %162, %1
  br i1 %163, label %167, label %134

164:                                              ; preds = %154
  %165 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %135, i64 1
  %166 = icmp eq %"class.std::__1::__map_iterator"* %165, %1
  br label %167

167:                                              ; preds = %160, %164, %128, %87, %80, %73, %66, %58, %49, %44, %41, %33, %26, %25, %9, %13, %3, %3, %53
  %168 = phi i1 [ true, %53 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %9 ], [ true, %25 ], [ true, %26 ], [ true, %33 ], [ true, %41 ], [ true, %44 ], [ true, %49 ], [ true, %58 ], [ true, %66 ], [ true, %73 ], [ true, %80 ], [ true, %87 ], [ true, %128 ], [ %166, %164 ], [ true, %160 ]
  ret i1 %168
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.266"**
  %5 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.266"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node.266"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #19
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.266"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.266", %"class.std::__1::__tree_node.266"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node.266"* %22 to %"class.std::__1::__tree_node.266"**
  %53 = select i1 %48, %"class.std::__1::__tree_node.266"** %50, %"class.std::__1::__tree_node.266"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node.266"*, %"class.std::__1::__tree_node.266"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.266"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #19
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EESB_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseEOSL_(%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.173"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.std::__1::basic_string"*
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #19
  br i1 %9, label %10, label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.net::CookieMonster"**
  %13 = load %"class.net::CookieMonster"*, %"class.net::CookieMonster"** %12, align 8
  %14 = icmp eq %"class.net::CookieMonster"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %19 = bitcast void ()** %18 to i64*
  %20 = load i64, i64* %19, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_6vectorINS4_10unique_ptrINS2_15CanonicalCookieENS4_14default_deleteISF_EEEENS8_ISI_EEEEEvE6InvokeISM_NS_7WeakPtrIS3_EEJSA_SK_EEEvT_OT0_DpOT1_(i64 %17, i64 %20, %"class.base::WeakPtr"* dereferenceable(16) %5, %"class.std::__1::basic_string"* dereferenceable(24) %7, %"class.std::__1::vector.173"* dereferenceable(24) %1) #19
  br label %21

21:                                               ; preds = %2, %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_6vectorINS4_10unique_ptrINS2_15CanonicalCookieENS4_14default_deleteISF_EEEENS8_ISI_EEEEEvE6InvokeISM_NS_7WeakPtrIS3_EEJSA_SK_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.173"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.std::__1::vector.173", align 16
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #19
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0)) #19
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #19
  br label %13

13:                                               ; preds = %10, %5
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #19
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = bitcast i64* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = select i1 %14, i8* %17, i8* null
  %19 = getelementptr inbounds i8, i8* %18, i64 %1
  %20 = bitcast i8* %19 to %"class.net::CookieMonster"*
  %21 = and i64 %0, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %13
  %24 = bitcast i8* %19 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = add i64 %0, -1
  %27 = getelementptr i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to void (%"class.net::CookieMonster"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.173"*)**
  %29 = load void (%"class.net::CookieMonster"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.173"*)*, void (%"class.net::CookieMonster"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.173"*)** %28, align 8
  br label %32

30:                                               ; preds = %13
  %31 = inttoptr i64 %0 to void (%"class.net::CookieMonster"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.173"*)*
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi void (%"class.net::CookieMonster"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.173"*)* [ %29, %23 ], [ %31, %30 ]
  %34 = bitcast %"class.std::__1::vector.173"* %4 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %7, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::vector.173"* %7 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %37, align 16
  %38 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.78"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr.78"** %41 to i64*
  store i64 %40, i64* %42, align 16
  %43 = bitcast %"class.std::__1::vector.173"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #19
  call void %33(%"class.net::CookieMonster"* %20, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::vector.173"* nonnull %7) #19
  %44 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %7, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %44, align 16
  %46 = icmp eq %"class.std::__1::unique_ptr.78"* %45, null
  br i1 %46, label %66, label %47

47:                                               ; preds = %32
  %48 = bitcast %"class.std::__1::unique_ptr.78"* %45 to i8*
  %49 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %36, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.78"* %49, %45
  br i1 %50, label %64, label %51

51:                                               ; preds = %47, %59
  %52 = phi %"class.std::__1::unique_ptr.78"* [ %53, %59 ], [ %49, %47 ]
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %52, i64 -1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %54, align 8
  store %"class.net::CanonicalCookie"* null, %"class.net::CanonicalCookie"** %54, align 8
  %56 = icmp eq %"class.net::CanonicalCookie"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %51
  call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* nonnull %55) #19
  %58 = bitcast %"class.net::CanonicalCookie"* %55 to i8*
  call void @_ZdlPv(i8* %58) #21
  br label %59

59:                                               ; preds = %57, %51
  %60 = icmp eq %"class.std::__1::unique_ptr.78"* %53, %45
  br i1 %60, label %61, label %51

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector.173"* %7 to i8**
  %63 = load i8*, i8** %62, align 16
  br label %64

64:                                               ; preds = %61, %47
  %65 = phi i8* [ %63, %61 ], [ %48, %47 ]
  store %"class.std::__1::unique_ptr.78"* %45, %"class.std::__1::unique_ptr.78"** %36, align 8
  call void @_ZdlPv(i8* %65) #21
  br label %66

66:                                               ; preds = %32, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_6vectorINS4_10unique_ptrINS2_15CanonicalCookieENS4_14default_deleteISF_EEEENS8_ISI_EEEEEJNS_7WeakPtrIS3_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.base::internal::BindStateBase"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #21
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %14) #19
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #21
  br label %16

16:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EESB_EEEEEbPKNS0_13BindStateBaseENSR_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #19
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::CookieMonster"**
  %9 = load %"class.net::CookieMonster"*, %"class.net::CookieMonster"** %8, align 8
  %10 = icmp ne %"class.net::CookieMonster"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #19
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_SD_EEEEENSM_INS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.29"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.257"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node.267"**
  %8 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.267"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 88) #21, !noalias !194
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"struct.std::__1::pair.257"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #19, !noalias !194
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #19, !noalias !194
  %14 = getelementptr inbounds i8, i8* %11, i64 56
  %15 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %2, i64 0, i32 1
  %16 = bitcast %"class.base::circular_deque"* %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8, !noalias !194
  %18 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8, !noalias !194
  %19 = bitcast %"class.base::circular_deque"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #19, !noalias !194
  %20 = getelementptr inbounds i8, i8* %11, i64 72
  %21 = getelementptr inbounds %"struct.std::__1::pair.257", %"struct.std::__1::pair.257"* %2, i64 0, i32 1, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8, !noalias !194
  %24 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %24, align 8, !noalias !194
  %25 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #19, !noalias !194
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node.267"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #19
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %10
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree.29"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %10
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %10 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #19
  %46 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node.267"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree.29"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.267"**
  %6 = load %"class.std::__1::__tree_node.267"*, %"class.std::__1::__tree_node.267"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.267"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.267"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type.268"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type.268", %"struct.std::__1::__value_type.268"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type.268"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #19
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type.268", %"struct.std::__1::__value_type.268"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type.268"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #19
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.267", %"class.std::__1::__tree_node.267"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.267"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #18

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { cold noreturn nounwind }
attributes #18 = { nofree nounwind readonly }
attributes #19 = { nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEENS2_IFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EERKSA_SD_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEENS2_IFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EERKSA_SD_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNSt3__16vectorINS1_15CanonicalCookieENS3_9allocatorIS5_EEEENS_12OnceCallbackIFvNS1_18CookieAccessResultEEEEEJNS_8internal17UnretainedWrapperIS2_EERKS8_SC_EEENS9_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNSt3__16vectorINS1_15CanonicalCookieENS3_9allocatorIS5_EEEENS_12OnceCallbackIFvNS1_18CookieAccessResultEEEEEJNS_8internal17UnretainedWrapperIS2_EERKS8_SC_EEENS9_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNSt3__110unique_ptrINS3_15CanonicalCookieENS5_14default_deleteIS7_EEEERK4GURLRKNS3_13CookieOptionsENS2_IFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SD_SG_SJ_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNSt3__110unique_ptrINS3_15CanonicalCookieENS5_14default_deleteIS7_EEEERK4GURLRKNS3_13CookieOptionsENS2_IFvNS3_18CookieAccessResultEEEEEJNS0_17UnretainedWrapperIS4_EESA_SD_SG_SJ_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS1_15CanonicalCookieENS3_14default_deleteIS5_EEEERK4GURLRKNS1_13CookieOptionsENS_12OnceCallbackIFvNS1_18CookieAccessResultEEEEEJNS_8internal17UnretainedWrapperIS2_EES8_SB_SE_SI_EEENSF_INSL_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNSt3__110unique_ptrINS1_15CanonicalCookieENS3_14default_deleteIS5_EEEERK4GURLRKNS1_13CookieOptionsENS_12OnceCallbackIFvNS1_18CookieAccessResultEEEEEJNS_8internal17UnretainedWrapperIS2_EES8_SB_SE_SI_EEENSF_INSL_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EERSB_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS5_10unique_ptrINS3_15CanonicalCookieENS5_14default_deleteISG_EEEENS9_ISJ_EEEEEJNS_7WeakPtrIS4_EERSB_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_6vectorINS3_10unique_ptrINS1_15CanonicalCookieENS3_14default_deleteISE_EEEENS7_ISH_EEEEEJNS_7WeakPtrIS2_EERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_6vectorINS3_10unique_ptrINS1_15CanonicalCookieENS3_14default_deleteISE_EEEENS7_ISH_EEEEEJNS_7WeakPtrIS2_EERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRK4GURLRKNS3_13CookieOptionsENS2_IFvRKNSt3__16vectorINS3_22CookieWithAccessResultENSB_9allocatorISD_EEEESI_EEEEJNS0_17UnretainedWrapperIS4_EES7_SA_SK_EEEDcOT0_DpOT1_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRK4GURLRKNS3_13CookieOptionsENS2_IFvRKNSt3__16vectorINS3_22CookieWithAccessResultENSB_9allocatorISD_EEEESI_EEEEJNS0_17UnretainedWrapperIS4_EES7_SA_SK_EEEDcOT0_DpOT1_"}
!28 = distinct !{!28, !29, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRK4GURLRKNS1_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS1_22CookieWithAccessResultENSA_9allocatorISC_EEEESH_EEEEJNS_8internal17UnretainedWrapperIS2_EES5_S8_SJ_EEENS9_INSM_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRK4GURLRKNS1_13CookieOptionsENS_12OnceCallbackIFvRKNSt3__16vectorINS1_22CookieWithAccessResultENSA_9allocatorISC_EEEESH_EEEEJNS_8internal17UnretainedWrapperIS2_EES5_S8_SJ_EEENS9_INSM_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS2_IFvRKNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESE_EEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS2_IFvRKNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESE_EEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS1_15CanonicalCookieENS4_9allocatorIS6_EEEEEEEEJNS_8internal17UnretainedWrapperIS2_EESD_EEENS3_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS1_15CanonicalCookieENS4_9allocatorIS6_EEEEEEEEJNS_8internal17UnretainedWrapperIS2_EESD_EEENS3_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS2_IFvRKNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEERKNS6_INS3_21CookieAccessSemanticsENS8_ISD_EEEEEEESC_EJNS0_17UnretainedWrapperIS4_EESJ_EEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS2_IFvRKNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEERKNS6_INS3_21CookieAccessSemanticsENS8_ISD_EEEEEEESC_EJNS0_17UnretainedWrapperIS4_EESJ_EEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS1_15CanonicalCookieENS4_9allocatorIS6_EEEERKNS5_INS1_21CookieAccessSemanticsENS7_ISC_EEEEEEESB_EJNS_8internal17UnretainedWrapperIS2_EESI_EEENS3_INSL_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS1_15CanonicalCookieENS4_9allocatorIS6_EEEERKNS5_INS1_21CookieAccessSemanticsENS7_ISC_EEEEEEESB_EJNS_8internal17UnretainedWrapperIS2_EESI_EEENS3_INSL_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS2_IFvRKNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESE_EEEDcOT0_DpOT1_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS2_IFvRKNSt3__16vectorINS3_15CanonicalCookieENS5_9allocatorIS7_EEEEEEEEJNS0_17UnretainedWrapperIS4_EESE_EEEDcOT0_DpOT1_"}
!43 = distinct !{!43, !44, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS1_15CanonicalCookieENS4_9allocatorIS6_EEEEEEEEJNS_8internal17UnretainedWrapperIS2_EESD_EEENS3_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_12OnceCallbackIFvRKNSt3__16vectorINS1_15CanonicalCookieENS4_9allocatorIS6_EEEEEEEEJNS_8internal17UnretainedWrapperIS2_EESD_EEENS3_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRKNS3_15CanonicalCookieENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EES7_S9_EEEDcOT0_DpOT1_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRKNS3_15CanonicalCookieENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EES7_S9_EEEDcOT0_DpOT1_"}
!48 = distinct !{!48, !49, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRKNS1_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES5_S8_EEENS6_INSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRKNS1_15CanonicalCookieENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES5_S8_EEENS6_INSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv: argument 0"}
!52 = distinct !{!52, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv"}
!53 = !{!54, !56}
!54 = distinct !{!54, !55, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvjEEEJRjEEEDcOT0_DpOT1_: argument 0"}
!55 = distinct !{!55, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvjEEEJRjEEEDcOT0_DpOT1_"}
!56 = distinct !{!56, !57, !"_ZN4base8BindOnceINS_12OnceCallbackIFvjEEEJRjEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8BindOnceINS_12OnceCallbackIFvjEEEJRjEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_"}
!58 = !{!59, !61}
!59 = distinct !{!59, !60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net13CookieMonsterEEENS2_IFvvEEEEJS6_S8_EEEDcOT0_DpOT1_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net13CookieMonsterEEENS2_IFvvEEEEJS6_S8_EEEDcOT0_DpOT1_"}
!61 = distinct !{!61, !62, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS4_S7_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS4_S7_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRKNS3_18CookieDeletionInfo9TimeRangeENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EES8_SA_EEEDcOT0_DpOT1_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvRKNS3_18CookieDeletionInfo9TimeRangeENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EES8_SA_EEEDcOT0_DpOT1_"}
!66 = distinct !{!66, !67, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRKNS1_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES6_S9_EEENS7_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!67 = distinct !{!67, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvRKNS1_18CookieDeletionInfo9TimeRangeENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES6_S9_EEENS7_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv: argument 0"}
!70 = distinct !{!70, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv"}
!71 = !{!72, !74}
!72 = distinct !{!72, !73, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvjEEEJRjEEEDcOT0_DpOT1_: argument 0"}
!73 = distinct !{!73, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvjEEEJRjEEEDcOT0_DpOT1_"}
!74 = distinct !{!74, !75, !"_ZN4base8BindOnceINS_12OnceCallbackIFvjEEEJRjEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_: argument 0"}
!75 = distinct !{!75, !"_ZN4base8BindOnceINS_12OnceCallbackIFvjEEEJRjEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_"}
!76 = !{!77, !79}
!77 = distinct !{!77, !78, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net13CookieMonsterEEENS2_IFvvEEEEJS6_S8_EEEDcOT0_DpOT1_: argument 0"}
!78 = distinct !{!78, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net13CookieMonsterEEENS2_IFvvEEEEJS6_S8_EEEDcOT0_DpOT1_"}
!79 = distinct !{!79, !80, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS4_S7_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!80 = distinct !{!80, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS4_S7_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!81 = !{!82, !84}
!82 = distinct !{!82, !83, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net13CookieMonsterEFbRKNS3_18CookieDeletionInfoERKNS3_15CanonicalCookieEEJNS0_17UnretainedWrapperIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!83 = distinct !{!83, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net13CookieMonsterEFbRKNS3_18CookieDeletionInfoERKNS3_15CanonicalCookieEEJNS0_17UnretainedWrapperIS4_EES5_EEEDcOT0_DpOT1_"}
!84 = distinct !{!84, !85, !"_ZN4base13BindRepeatingIMN3net13CookieMonsterEFbRKNS1_18CookieDeletionInfoERKNS1_15CanonicalCookieEEJNS_8internal17UnretainedWrapperIS2_EES3_EEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!85 = distinct !{!85, !"_ZN4base13BindRepeatingIMN3net13CookieMonsterEFbRKNS1_18CookieDeletionInfoERKNS1_15CanonicalCookieEEJNS_8internal17UnretainedWrapperIS2_EES3_EEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!86 = !{!87, !89}
!87 = distinct !{!87, !88, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SD_EEEDcOT0_DpOT1_: argument 0"}
!88 = distinct !{!88, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SD_EEEDcOT0_DpOT1_"}
!89 = distinct !{!89, !90, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS1_15CanonicalCookieEEEENS2_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES8_S9_SC_EEENSA_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!90 = distinct !{!90, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS1_15CanonicalCookieEEEENS2_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES8_S9_SC_EEENSA_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv: argument 0"}
!93 = distinct !{!93, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv"}
!94 = !{!95, !97}
!95 = distinct !{!95, !96, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvjEEEJRjEEEDcOT0_DpOT1_: argument 0"}
!96 = distinct !{!96, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvjEEEJRjEEEDcOT0_DpOT1_"}
!97 = distinct !{!97, !98, !"_ZN4base8BindOnceINS_12OnceCallbackIFvjEEEJRjEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_: argument 0"}
!98 = distinct !{!98, !"_ZN4base8BindOnceINS_12OnceCallbackIFvjEEEJRjEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_"}
!99 = !{!100, !102}
!100 = distinct !{!100, !101, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net13CookieMonsterEEENS2_IFvvEEEEJS6_S8_EEEDcOT0_DpOT1_: argument 0"}
!101 = distinct !{!101, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net13CookieMonsterEEENS2_IFvvEEEEJS6_S8_EEEDcOT0_DpOT1_"}
!102 = distinct !{!102, !103, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS4_S7_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!103 = distinct !{!103, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net13CookieMonsterEEENS_12OnceCallbackIFvvEEEEJS4_S7_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!104 = !{!105, !107}
!105 = distinct !{!105, !106, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEEEDcOT0_DpOT1_: argument 0"}
!106 = distinct !{!106, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEEEDcOT0_DpOT1_"}
!107 = distinct !{!107, !108, !"_ZN4base13BindRepeatingIZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!108 = distinct !{!108, !"_ZN4base13BindRepeatingIZN3net13CookieMonster25DeleteSessionCookiesAsyncENS_12OnceCallbackIFvjEEEE3$_2JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!109 = !{!110, !112}
!110 = distinct !{!110, !111, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SD_EEEDcOT0_DpOT1_: argument 0"}
!111 = distinct !{!111, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SD_EEEDcOT0_DpOT1_"}
!112 = distinct !{!112, !113, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS1_15CanonicalCookieEEEENS2_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES8_S9_SC_EEENSA_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!113 = distinct !{!113, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS1_15CanonicalCookieEEEENS2_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES8_S9_SC_EEENSA_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!114 = !{!115, !117}
!115 = distinct !{!115, !116, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SD_EEEDcOT0_DpOT1_: argument 0"}
!116 = distinct !{!116, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS3_15CanonicalCookieEEEENS4_13DeletionCauseENS2_IFvjEEEEJNS0_17UnretainedWrapperIS4_EESA_SB_SD_EEEDcOT0_DpOT1_"}
!117 = distinct !{!117, !118, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS1_15CanonicalCookieEEEENS2_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES8_S9_SC_EEENSA_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!118 = distinct !{!118, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_17RepeatingCallbackIFbRKNS1_15CanonicalCookieEEEENS2_13DeletionCauseENS_12OnceCallbackIFvjEEEEJNS_8internal17UnretainedWrapperIS2_EES8_S9_SC_EEENSA_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!124 = distinct !{!124, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!136 = distinct !{!136, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!139 = distinct !{!139, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv: argument 0"}
!142 = distinct !{!142, !"_ZNK4base14WeakPtrFactoryIN3net13CookieMonsterEE10GetWeakPtrEv"}
!143 = !{!144, !146}
!144 = distinct !{!144, !145, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!145 = distinct !{!145, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS6_10unique_ptrINS3_15CanonicalCookieENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_"}
!146 = distinct !{!146, !147, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS4_10unique_ptrINS1_15CanonicalCookieENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!147 = distinct !{!147, !"_ZN4base8BindOnceIMN3net13CookieMonsterEFvNS_9TimeTicksENSt3__16vectorINS4_10unique_ptrINS1_15CanonicalCookieENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!148 = !{!149, !151}
!149 = distinct !{!149, !150, !"_ZNSt3__110make_tupleIJRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSB_: argument 0"}
!150 = distinct !{!150, !"_ZNSt3__110make_tupleIJRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSB_"}
!151 = distinct !{!151, !152, !"_ZNK3net15CanonicalCookie9UniqueKeyEv: argument 0"}
!152 = distinct !{!152, !"_ZNK3net15CanonicalCookie9UniqueKeyEv"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_8multisetINS_14__map_iteratorINS_15__tree_iteratorINS1_IS8_NS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISF_EEEEEEPNS_11__tree_nodeISJ_PvEElEEEENSE_12_GLOBAL__N_123OrderByCreationTimeDescENS6_ISP_EEEEEENS_19__map_value_compareIS9_SU_NS_4lessIS9_EELb1EEENS6_ISU_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS2_IJRKS9_EEENS2_IJEEEEEENSD_INSK_ISU_SL_EENS_22__tree_node_destructorINS6_IS19_EEEEEEDpOT_: argument 0"}
!155 = distinct !{!155, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_S8_EEENS_8multisetINS_14__map_iteratorINS_15__tree_iteratorINS1_IS8_NS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISF_EEEEEEPNS_11__tree_nodeISJ_PvEElEEEENSE_12_GLOBAL__N_123OrderByCreationTimeDescENS6_ISP_EEEEEENS_19__map_value_compareIS9_SU_NS_4lessIS9_EELb1EEENS6_ISU_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS2_IJRKS9_EEENS2_IJEEEEEENSD_INSK_ISU_SL_EENS_22__tree_node_destructorINS6_IS19_EEEEEEDpOT_"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNSt3__16__treeINS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEENSB_12_GLOBAL__N_123OrderByCreationTimeDescENS7_ISM_EEE16__construct_nodeIJRKSM_EEENSA_INSH_ISM_SI_EENS_22__tree_node_destructorINS7_ISU_EEEEEEDpOT_: argument 0"}
!158 = distinct !{!158, !"_ZNSt3__16__treeINS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISC_EEEEEEPNS_11__tree_nodeISG_PvEElEEEENSB_12_GLOBAL__N_123OrderByCreationTimeDescENS7_ISM_EEE16__construct_nodeIJRKSM_EEENSA_INSH_ISM_SI_EENS_22__tree_node_destructorINS7_ISU_EEEEEEDpOT_"}
!159 = !{!160, !162}
!160 = distinct !{!160, !161, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!161 = distinct !{!161, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!162 = distinct !{!162, !163, !"_ZNK4GURL6schemeEv: argument 0"}
!163 = distinct !{!163, !"_ZNK4GURL6schemeEv"}
!164 = !{!"branch_weights", i32 1, i32 2000}
!165 = distinct !{!165, !166}
!166 = !{!"llvm.loop.unroll.disable"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZNK3net13SchemefulSite26registrable_domain_or_hostEv: argument 0"}
!169 = distinct !{!169, !"_ZNK3net13SchemefulSite26registrable_domain_or_hostEv"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZNK3net13SchemefulSite26registrable_domain_or_hostEv: argument 0"}
!172 = distinct !{!172, !"_ZNK3net13SchemefulSite26registrable_domain_or_hostEv"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!175 = distinct !{!175, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEENK3$_3clENS_17NetLogCaptureModeE: argument 0"}
!178 = distinct !{!178, !"_ZZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEENK3$_3clENS_17NetLogCaptureModeE"}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEENK3$_4clENS_17NetLogCaptureModeE: argument 0"}
!181 = distinct !{!181, !"_ZZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEENK3$_4clENS_17NetLogCaptureModeE"}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEENK3$_5clENS_17NetLogCaptureModeE: argument 0"}
!184 = distinct !{!184, !"_ZZN3net13CookieMonster42MaybeDeleteEquivalentCookieAndUpdateStatusERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_15CanonicalCookieEbbbPN4base4TimeEPNS_21CookieInclusionStatusEENK3$_5clENS_17NetLogCaptureModeE"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"_ZZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEbENK3$_6clENS_17NetLogCaptureModeE: argument 0"}
!187 = distinct !{!187, !"_ZZN3net13CookieMonster20InternalInsertCookieERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISB_EEEEbRKNS_18CookieAccessResultEbENK3$_6clENS_17NetLogCaptureModeE"}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJNS_4pairIKS7_SD_EEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_: argument 0"}
!190 = distinct !{!190, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN3net15CanonicalCookieENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJNS_4pairIKS7_SD_EEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_"}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseEENK3$_7clENS_17NetLogCaptureModeE: argument 0"}
!193 = distinct !{!193, !"_ZZN3net13CookieMonster20InternalDeleteCookieENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_15CanonicalCookieENS1_14default_deleteISC_EEEEEEPNS1_11__tree_nodeISG_PvEElEEEEbNS0_13DeletionCauseEENK3$_7clENS_17NetLogCaptureModeE"}
!194 = !{!195}
!195 = distinct !{!195, !196, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJNS_4pairIS7_SD_EEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_: argument 0"}
!196 = distinct !{!196, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base14circular_dequeINS8_12OnceCallbackIFvvEEEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJNS_4pairIS7_SD_EEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_"}
