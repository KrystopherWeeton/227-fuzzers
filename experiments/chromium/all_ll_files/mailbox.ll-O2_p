; ModuleID = '../../gpu/command_buffer/common/mailbox.cc'
source_filename = "../../gpu/command_buffer/common/mailbox.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [5 x i8] c"%02X\00", align 1

@_ZN3gpu7MailboxC1Ev = hidden unnamed_addr alias void (%"struct.gpu::Mailbox"*), void (%"struct.gpu::Mailbox"*)* @_ZN3gpu7MailboxC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu7MailboxC2Ev(%"struct.gpu::Mailbox"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %58, %54, %50, %46, %42, %38, %34, %30, %26, %22, %18, %14, %10, %5, %1
  ret i1 false

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %9

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %9

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 4
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %9

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 5
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %9

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 6
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %9

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 7
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %9

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 8
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %9

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 9
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %9

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 10
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %9

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 11
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %9

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 12
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %9

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 13
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %9

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 14
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %9

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 15
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  ret i1 %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu7Mailbox7SetZeroEv(%"struct.gpu::Mailbox"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu7Mailbox7SetNameEPKa(%"struct.gpu::Mailbox"* nocapture, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %1, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu7Mailbox13IsSharedImageEv(%"struct.gpu::Mailbox"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %0, i64 0, i32 0, i64 15
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gpu7Mailbox8GenerateEv() local_unnamed_addr #0 align 2 {
  %1 = alloca { i64, i64 }, align 8
  %2 = bitcast { i64, i64 }* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false) #6
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %2, i64 16) #6
  %4 = getelementptr inbounds i8, i8* %2, i64 15
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, -2
  store i8 %6, i8* %4, align 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %8, 0
  %10 = load i64, i64* %3, align 8
  %11 = insertvalue { i64, i64 } %9, i64 %10, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  ret { i64, i64 } %11
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gpu7Mailbox22GenerateForSharedImageEv() local_unnamed_addr #0 align 2 {
  %1 = alloca { i64, i64 }, align 8
  %2 = bitcast { i64, i64 }* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false) #6
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %2, i64 16) #6
  %4 = getelementptr inbounds i8, i8* %2, i64 15
  %5 = load i8, i8* %4, align 1
  %6 = or i8 %5, 1
  store i8 %6, i8* %4, align 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %8, 0
  %10 = load i64, i64* %3, align 8
  %11 = insertvalue { i64, i64 } %9, i64 %10, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  ret { i64, i64 } %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3gpu7Mailbox6VerifyEv(%"struct.gpu::Mailbox"* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gpu7Mailbox13ToDebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.gpu::Mailbox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %10

10:                                               ; preds = %30, %2
  %11 = phi i64 [ 0, %2 ], [ %31, %30 ]
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 58) #6
  br label %14

14:                                               ; preds = %10, %13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6
  %15 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %1, i64 0, i32 0, i64 %11
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %17) #6
  %18 = load i8, i8* %7, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %8, align 8
  %21 = load i64, i64* %9, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i8* %20, i8* %5
  %24 = select i1 %19, i64 %21, i64 %22
  %25 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %23, i64 %24) #6
  %26 = load i8, i8* %7, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %14
  %29 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %29) #7
  br label %30

30:                                               ; preds = %14, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6
  %31 = add nuw nsw i64 %11, 1
  %32 = icmp eq i64 %31, 16
  br i1 %32, label %33, label %10

33:                                               ; preds = %30
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

declare void @_ZN4base9RandBytesEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
