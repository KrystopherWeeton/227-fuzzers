; ModuleID = '../../v8/src/heap/cppgc/object-allocator.cc'
source_filename = "../../v8/src/heap/cppgc/object-allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.83", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.199", i64, i8, [7 x i8] }>
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.66" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.76" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.69" }
%"class.std::__1::__tree.69" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::set.76" = type { %"class.std::__1::__tree.77" }
%"class.std::__1::__tree.77" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.110", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.157", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.110" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.111" }
%"class.std::__1::shared_ptr.111" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.138", %"class.heap::base::Worklist.139", %"class.heap::base::Worklist.140", %"class.heap::base::Worklist.141", %"class.heap::base::Worklist.142", %"class.heap::base::Worklist.142", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.138" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.139" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.140" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.141" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.142" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { float }
%"class.heap::base::Worklist.138" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.143", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.140"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.139"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.141"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.142"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.138"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist.146"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist.146" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.150", i64 }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.160", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.172", %"class.std::__1::unique_ptr.179", i8, i8, [6 x i8] }>
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.174" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist.146" }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.185" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.191", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { i32* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.cppgc::internal::PageBackend" = type { %"class.v8::PageAllocator"*, %"class.cppgc::internal::NormalPageMemoryPool", %"class.cppgc::internal::PageMemoryRegionTree", %"class.std::__1::vector.26", %"class.std::__1::unordered_map" }
%"class.cppgc::internal::NormalPageMemoryPool" = type { [16 x %"class.std::__1::vector.11"] }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::pair"* }
%"class.cppgc::internal::PageMemoryRegionTree" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::unique_ptr.28" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.34", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.53", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.60", %"class.cppgc::Platform"* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.cppgc::internal::LargePageSpace" = type { %"class.cppgc::internal::BaseSpace.base", [3 x i8] }
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>
%"class.cppgc::internal::NormalPage" = type { %"class.cppgc::internal::BasePage.base", i64, %"class.cppgc::internal::PlatformAwareObjectStartBitmap" }
%"class.cppgc::internal::PlatformAwareObjectStartBitmap" = type { %"class.cppgc::internal::ObjectStartBitmap" }
%"class.cppgc::internal::ObjectStartBitmap" = type { i8*, %"struct.std::__1::array.205" }
%"struct.std::__1::array.205" = type { [2048 x i8] }

@_ZN5cppgc8internal15ObjectAllocator18kSmallestSpaceSizeE = hidden local_unnamed_addr constant i64 32, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"!in_disallow_gc_scope()\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"result\00", align 1

@_ZN5cppgc8internal15ObjectAllocatorC1EPNS0_7RawHeapEPNS0_11PageBackendEPNS0_14StatsCollectorE = hidden unnamed_addr alias void (%"class.cppgc::internal::ObjectAllocator"*, %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"*), void (%"class.cppgc::internal::ObjectAllocator"*, %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"*)* @_ZN5cppgc8internal15ObjectAllocatorC2EPNS0_7RawHeapEPNS0_11PageBackendEPNS0_14StatsCollectorE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5cppgc8internal15ObjectAllocatorC2EPNS0_7RawHeapEPNS0_11PageBackendEPNS0_14StatsCollectorE(%"class.cppgc::internal::ObjectAllocator"* nocapture, %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 0
  store %"class.cppgc::internal::RawHeap"* %1, %"class.cppgc::internal::RawHeap"** %5, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 1
  store %"class.cppgc::internal::PageBackend"* %2, %"class.cppgc::internal::PageBackend"** %6, align 8
  %7 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 2
  store %"class.cppgc::internal::StatsCollector"* %3, %"class.cppgc::internal::StatsCollector"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5cppgc8internal15ObjectAllocator17OutOfLineAllocateERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"*, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384), i64, i16 zeroext) local_unnamed_addr #1 align 2 {
  %5 = tail call i8* @_ZN5cppgc8internal15ObjectAllocator21OutOfLineAllocateImplERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"* %0, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384) %1, i64 %2, i16 zeroext %3)
  %6 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 2
  %7 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %6, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector40NotifySafePointForConservativeCollectionEv(%"class.cppgc::internal::StatsCollector"* %7) #6
  %8 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 0
  %9 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %8, align 8
  %10 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %9, i64 0, i32 0
  %11 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %10, align 8
  tail call void @_ZN5cppgc8internal8HeapBase55AdvanceIncrementalGarbageCollectionOnAllocationIfNeededEv(%"class.cppgc::internal::HeapBase"* %11) #6
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5cppgc8internal15ObjectAllocator21OutOfLineAllocateImplERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"* nocapture readonly, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384), i64, i16 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 0
  %6 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %5, align 8
  %7 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %6, i64 0, i32 0
  %8 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %7, align 8
  %9 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %8, i64 0, i32 19
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

13:                                               ; preds = %4
  %14 = icmp ugt i64 %2, 65535
  br i1 %14, label %15, label %36

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %6, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 4, i32 0, i32 0, i32 0
  %19 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %18, align 8
  %20 = bitcast %"class.cppgc::internal::BaseSpace"* %19 to %"class.cppgc::internal::LargePageSpace"*
  %21 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 1
  %22 = load %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::PageBackend"** %21, align 8
  %23 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 2
  %24 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %23, align 8
  %25 = tail call %"class.cppgc::internal::LargePage"* @_ZN5cppgc8internal9LargePage6CreateERNS0_11PageBackendERNS0_14LargePageSpaceEm(%"class.cppgc::internal::PageBackend"* dereferenceable(480) %22, %"class.cppgc::internal::LargePageSpace"* dereferenceable(88) %20, i64 %2) #6
  %26 = bitcast %"class.cppgc::internal::LargePage"* %25 to %"class.cppgc::internal::BasePage"*
  tail call void @_ZN5cppgc8internal9BaseSpace7AddPageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"* %19, %"class.cppgc::internal::BasePage"* %26) #6
  %27 = tail call %"class.cppgc::internal::HeapObjectHeader"* @_ZN5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"* %25) #6
  %28 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %27, i64 0, i32 0
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %27, i64 0, i32 2
  store i16 0, i16* %29, align 2
  %30 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %27, i64 0, i32 1
  %31 = shl i16 %3, 2
  store atomic i16 %31, i16* %30 monotonic, align 2
  tail call void @_ZN5cppgc8internal14StatsCollector16NotifyAllocationEm(%"class.cppgc::internal::StatsCollector"* %24, i64 %2) #6
  %32 = tail call i8* @_ZN5cppgc8internal9LargePage12PayloadStartEv(%"class.cppgc::internal::LargePage"* %25) #6
  %33 = tail call i8* @_ZN5cppgc8internal9LargePage10PayloadEndEv(%"class.cppgc::internal::LargePage"* %25) #6
  %34 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %27, i64 1
  %35 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %34 to i8*
  br label %151

36:                                               ; preds = %13
  %37 = tail call i8* @_ZN5cppgc8internal15ObjectAllocator20AllocateFromFreeListERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"* %0, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384) %1, i64 %2, i16 zeroext %3)
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %151

39:                                               ; preds = %36
  %40 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %5, align 8
  %41 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %40, i64 0, i32 0
  %42 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %41, align 8
  %43 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %42, i64 0, i32 12
  %44 = tail call zeroext i1 @_ZN5cppgc8internal7Sweeper27SweepForAllocationIfRunningEPNS0_15NormalPageSpaceEm(%"class.cppgc::internal::Sweeper"* %43, %"class.cppgc::internal::NormalPageSpace"* %1, i64 %2) #6
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = tail call i8* @_ZN5cppgc8internal15ObjectAllocator20AllocateFromFreeListERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"* %0, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384) %1, i64 %2, i16 zeroext %3)
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %151

48:                                               ; preds = %45, %39
  tail call void @_ZN5cppgc8internal7Sweeper15FinishIfRunningEv(%"class.cppgc::internal::Sweeper"* %43) #6
  %49 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 1
  %50 = load %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::PageBackend"** %49, align 8
  %51 = tail call %"class.cppgc::internal::NormalPage"* @_ZN5cppgc8internal10NormalPage6CreateERNS0_11PageBackendERNS0_15NormalPageSpaceE(%"class.cppgc::internal::PageBackend"* dereferenceable(480) %50, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384) %1) #6
  %52 = bitcast %"class.cppgc::internal::NormalPageSpace"* %1 to %"class.cppgc::internal::BaseSpace"*
  %53 = bitcast %"class.cppgc::internal::NormalPage"* %51 to %"class.cppgc::internal::BasePage"*
  tail call void @_ZN5cppgc8internal9BaseSpace7AddPageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"* %52, %"class.cppgc::internal::BasePage"* %53) #6
  %54 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 2
  %55 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %54, align 8
  %56 = tail call i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"* %51) #6
  %57 = tail call i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() #6
  %58 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %1, i64 0, i32 1
  %59 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %1, i64 0, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %84, label %62

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer"* %58, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %1, i64 0, i32 2
  tail call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %65, i8* %64, i64 %60) #6
  %66 = ptrtoint i8* %64 to i64
  %67 = and i64 %66, -131072
  %68 = or i64 %67, 4096
  %69 = inttoptr i64 %68 to %"class.cppgc::internal::NormalPage"*
  %70 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %69, i64 0, i32 2
  %71 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %70 to i64*
  %72 = load i64, i64* %71, align 32
  %73 = sub i64 %66, %72
  %74 = lshr i64 %73, 3
  %75 = lshr i64 %73, 6
  %76 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %69, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = trunc i64 %74 to i32
  %79 = and i32 %78, 7
  %80 = shl i32 1, %79
  %81 = trunc i32 %80 to i8
  %82 = or i8 %77, %81
  store i8 %82, i8* %76, align 1
  %83 = load i64, i64* %59, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"* %55, i64 %83) #6
  br label %84

84:                                               ; preds = %62, %48
  %85 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer"* %58, i64 0, i32 0
  store i8* %56, i8** %85, align 8
  store i64 %57, i64* %59, align 8
  %86 = icmp eq i64 %57, 0
  br i1 %86, label %107, label %87

87:                                               ; preds = %84
  tail call void @_ZN5cppgc8internal14StatsCollector16NotifyAllocationEm(%"class.cppgc::internal::StatsCollector"* %55, i64 %57) #6
  %88 = ptrtoint i8* %56 to i64
  %89 = and i64 %88, -131072
  %90 = or i64 %89, 4096
  %91 = inttoptr i64 %90 to %"class.cppgc::internal::NormalPage"*
  %92 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %91, i64 0, i32 2
  %93 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %92 to i64*
  %94 = load i64, i64* %93, align 32
  %95 = sub i64 %88, %94
  %96 = lshr i64 %95, 3
  %97 = lshr i64 %95, 6
  %98 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %91, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = trunc i64 %96 to i32
  %101 = and i32 %100, 7
  %102 = shl i32 1, %101
  %103 = trunc i32 %102 to i8
  %104 = xor i8 %103, -1
  %105 = and i8 %99, %104
  store i8 %105, i8* %98, align 1
  %106 = load i64, i64* %59, align 8
  br label %107

107:                                              ; preds = %84, %87
  %108 = phi i64 [ 0, %84 ], [ %106, %87 ]
  %109 = icmp ult i64 %108, %2
  br i1 %109, label %110, label %116

110:                                              ; preds = %107
  %111 = tail call i8* @_ZN5cppgc8internal15ObjectAllocator21OutOfLineAllocateImplERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"* %0, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384) %1, i64 %2, i16 zeroext %3) #6
  %112 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %54, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector40NotifySafePointForConservativeCollectionEv(%"class.cppgc::internal::StatsCollector"* %112) #6
  %113 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %5, align 8
  %114 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %113, i64 0, i32 0
  %115 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %114, align 8
  tail call void @_ZN5cppgc8internal8HeapBase55AdvanceIncrementalGarbageCollectionOnAllocationIfNeededEv(%"class.cppgc::internal::HeapBase"* %115) #6
  br label %147

116:                                              ; preds = %107
  %117 = load i8*, i8** %85, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 %2
  store i8* %118, i8** %85, align 8
  %119 = sub i64 %108, %2
  store i64 %119, i64* %59, align 8
  %120 = bitcast i8* %117 to i32*
  store i32 0, i32* %120, align 4
  %121 = lshr i64 %2, 2
  %122 = trunc i64 %121 to i16
  %123 = and i16 %122, -2
  %124 = getelementptr inbounds i8, i8* %117, i64 6
  %125 = bitcast i8* %124 to i16*
  store i16 %123, i16* %125, align 2
  %126 = getelementptr inbounds i8, i8* %117, i64 4
  %127 = bitcast i8* %126 to i16*
  %128 = shl i16 %3, 2
  store atomic i16 %128, i16* %127 monotonic, align 2
  %129 = ptrtoint i8* %117 to i64
  %130 = and i64 %129, -131072
  %131 = or i64 %130, 4096
  %132 = inttoptr i64 %131 to %"class.cppgc::internal::NormalPage"*
  %133 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %132, i64 0, i32 2
  %134 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %133 to i64*
  %135 = load i64, i64* %134, align 32
  %136 = sub i64 %129, %135
  %137 = lshr i64 %136, 3
  %138 = lshr i64 %136, 6
  %139 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %132, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = trunc i64 %137 to i32
  %142 = and i32 %141, 7
  %143 = shl i32 1, %142
  %144 = trunc i32 %143 to i8
  %145 = or i8 %140, %144
  store atomic i8 %145, i8* %139 release, align 1
  %146 = getelementptr inbounds i8, i8* %117, i64 8
  br label %147

147:                                              ; preds = %110, %116
  %148 = phi i8* [ %111, %110 ], [ %146, %116 ]
  %149 = icmp eq i8* %148, null
  br i1 %149, label %150, label %151, !prof !3

150:                                              ; preds = %147
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

151:                                              ; preds = %45, %147, %36, %15
  %152 = phi i8* [ %35, %15 ], [ %37, %36 ], [ %46, %45 ], [ %148, %147 ]
  ret i8* %152
}

declare void @_ZN5cppgc8internal14StatsCollector40NotifySafePointForConservativeCollectionEv(%"class.cppgc::internal::StatsCollector"*) local_unnamed_addr #2

declare void @_ZN5cppgc8internal8HeapBase55AdvanceIncrementalGarbageCollectionOnAllocationIfNeededEv(%"class.cppgc::internal::HeapBase"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5cppgc8internal15ObjectAllocator20in_disallow_gc_scopeEv(%"class.cppgc::internal::ObjectAllocator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 0
  %3 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %2, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %3, i64 0, i32 0
  %5 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %4, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %5, i64 0, i32 19
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  ret i1 %8
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5cppgc8internal15ObjectAllocator20AllocateFromFreeListERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"* nocapture readonly, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384), i64, i16 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %1, i64 0, i32 2
  %6 = tail call { i8*, i64 } @_ZN5cppgc8internal8FreeList8AllocateEm(%"class.cppgc::internal::FreeList"* %5, i64 %2) #6
  %7 = extractvalue { i8*, i64 } %6, 0
  %8 = icmp eq i8* %7, null
  br i1 %8, label %102, label %9

9:                                                ; preds = %4
  %10 = extractvalue { i8*, i64 } %6, 1
  %11 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 2
  %12 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %11, align 8
  %13 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %1, i64 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %38, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer"* %13, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %5, i8* %19, i64 %15) #6
  %20 = ptrtoint i8* %19 to i64
  %21 = and i64 %20, -131072
  %22 = or i64 %21, 4096
  %23 = inttoptr i64 %22 to %"class.cppgc::internal::NormalPage"*
  %24 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %23, i64 0, i32 2
  %25 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %24 to i64*
  %26 = load i64, i64* %25, align 32
  %27 = sub i64 %20, %26
  %28 = lshr i64 %27, 3
  %29 = lshr i64 %27, 6
  %30 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %23, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = trunc i64 %28 to i32
  %33 = and i32 %32, 7
  %34 = shl i32 1, %33
  %35 = trunc i32 %34 to i8
  %36 = or i8 %31, %35
  store i8 %36, i8* %30, align 1
  %37 = load i64, i64* %14, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"* %12, i64 %37) #6
  br label %38

38:                                               ; preds = %17, %9
  %39 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer"* %13, i64 0, i32 0
  store i8* %7, i8** %39, align 8
  store i64 %10, i64* %14, align 8
  %40 = icmp eq i64 %10, 0
  br i1 %40, label %61, label %41

41:                                               ; preds = %38
  tail call void @_ZN5cppgc8internal14StatsCollector16NotifyAllocationEm(%"class.cppgc::internal::StatsCollector"* %12, i64 %10) #6
  %42 = ptrtoint i8* %7 to i64
  %43 = and i64 %42, -131072
  %44 = or i64 %43, 4096
  %45 = inttoptr i64 %44 to %"class.cppgc::internal::NormalPage"*
  %46 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %45, i64 0, i32 2
  %47 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %46 to i64*
  %48 = load i64, i64* %47, align 32
  %49 = sub i64 %42, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %45, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 1, %55
  %57 = trunc i32 %56 to i8
  %58 = xor i8 %57, -1
  %59 = and i8 %53, %58
  store i8 %59, i8* %52, align 1
  %60 = load i64, i64* %14, align 8
  br label %61

61:                                               ; preds = %38, %41
  %62 = phi i64 [ 0, %38 ], [ %60, %41 ]
  %63 = icmp ult i64 %62, %2
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = tail call i8* @_ZN5cppgc8internal15ObjectAllocator21OutOfLineAllocateImplERNS0_15NormalPageSpaceEmt(%"class.cppgc::internal::ObjectAllocator"* %0, %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384) %1, i64 %2, i16 zeroext %3) #6
  %66 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %11, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector40NotifySafePointForConservativeCollectionEv(%"class.cppgc::internal::StatsCollector"* %66) #6
  %67 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 0
  %68 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %67, align 8
  %69 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %68, i64 0, i32 0
  %70 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %69, align 8
  tail call void @_ZN5cppgc8internal8HeapBase55AdvanceIncrementalGarbageCollectionOnAllocationIfNeededEv(%"class.cppgc::internal::HeapBase"* %70) #6
  br label %102

71:                                               ; preds = %61
  %72 = load i8*, i8** %39, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %2
  store i8* %73, i8** %39, align 8
  %74 = sub i64 %62, %2
  store i64 %74, i64* %14, align 8
  %75 = bitcast i8* %72 to i32*
  store i32 0, i32* %75, align 4
  %76 = lshr i64 %2, 2
  %77 = trunc i64 %76 to i16
  %78 = and i16 %77, -2
  %79 = getelementptr inbounds i8, i8* %72, i64 6
  %80 = bitcast i8* %79 to i16*
  store i16 %78, i16* %80, align 2
  %81 = getelementptr inbounds i8, i8* %72, i64 4
  %82 = bitcast i8* %81 to i16*
  %83 = shl i16 %3, 2
  store atomic i16 %83, i16* %82 monotonic, align 2
  %84 = ptrtoint i8* %72 to i64
  %85 = and i64 %84, -131072
  %86 = or i64 %85, 4096
  %87 = inttoptr i64 %86 to %"class.cppgc::internal::NormalPage"*
  %88 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %87, i64 0, i32 2
  %89 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %88 to i64*
  %90 = load i64, i64* %89, align 32
  %91 = sub i64 %84, %90
  %92 = lshr i64 %91, 3
  %93 = lshr i64 %91, 6
  %94 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %87, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = trunc i64 %92 to i32
  %97 = and i32 %96, 7
  %98 = shl i32 1, %97
  %99 = trunc i32 %98 to i8
  %100 = or i8 %95, %99
  store atomic i8 %100, i8* %94 release, align 1
  %101 = getelementptr inbounds i8, i8* %72, i64 8
  br label %102

102:                                              ; preds = %71, %64, %4
  %103 = phi i8* [ null, %4 ], [ %65, %64 ], [ %101, %71 ]
  ret i8* %103
}

declare zeroext i1 @_ZN5cppgc8internal7Sweeper27SweepForAllocationIfRunningEPNS0_15NormalPageSpaceEm(%"class.cppgc::internal::Sweeper"*, %"class.cppgc::internal::NormalPageSpace"*, i64) local_unnamed_addr #2

declare void @_ZN5cppgc8internal7Sweeper15FinishIfRunningEv(%"class.cppgc::internal::Sweeper"*) local_unnamed_addr #2

declare %"class.cppgc::internal::NormalPage"* @_ZN5cppgc8internal10NormalPage6CreateERNS0_11PageBackendERNS0_15NormalPageSpaceE(%"class.cppgc::internal::PageBackend"* dereferenceable(480), %"class.cppgc::internal::NormalPageSpace"* dereferenceable(384)) local_unnamed_addr #2

declare void @_ZN5cppgc8internal9BaseSpace7AddPageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BasePage"*) local_unnamed_addr #2

declare i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"*) local_unnamed_addr #2

declare i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZN5cppgc8internal8FreeList8AllocateEm(%"class.cppgc::internal::FreeList"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal15ObjectAllocator28ResetLinearAllocationBuffersEv(%"class.cppgc::internal::ObjectAllocator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 2
  %3 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %2, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 0
  %5 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %4, align 8
  %6 = getelementptr %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %5, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %7, %9
  br i1 %10, label %52, label %11

11:                                               ; preds = %1, %49
  %12 = phi %"class.std::__1::unique_ptr"* [ %50, %49 ], [ %7, %1 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %13, align 8
  %15 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %49, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 1
  %20 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 1, i32 1
  %21 = bitcast %"class.std::__1::vector.0"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.cppgc::internal::BaseSpace"* %19 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 1, i32 1, i32 0, i32 1
  %28 = bitcast %"class.cppgc::internal::BasePage"*** %27 to %"class.cppgc::internal::FreeList"*
  tail call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %28, i8* %26, i64 %22) #6
  %29 = ptrtoint i8* %26 to i64
  %30 = and i64 %29, -131072
  %31 = or i64 %30, 4096
  %32 = inttoptr i64 %31 to %"class.cppgc::internal::NormalPage"*
  %33 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %32, i64 0, i32 2
  %34 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %33 to i64*
  %35 = load i64, i64* %34, align 32
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %32, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store i8 %45, i8* %39, align 1
  %46 = load i64, i64* %21, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"* %3, i64 %46) #6
  br label %47

47:                                               ; preds = %24, %18
  %48 = bitcast %"class.cppgc::internal::BaseSpace"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #6
  br label %49

49:                                               ; preds = %47, %11
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %9
  br i1 %51, label %52, label %11

52:                                               ; preds = %49, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal15ObjectAllocator9TerminateEv(%"class.cppgc::internal::ObjectAllocator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 2
  %3 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %2, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::ObjectAllocator"* %0, i64 0, i32 0
  %5 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %4, align 8
  %6 = getelementptr %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %5, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %7, %9
  br i1 %10, label %52, label %11

11:                                               ; preds = %1, %49
  %12 = phi %"class.std::__1::unique_ptr"* [ %50, %49 ], [ %7, %1 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %13, align 8
  %15 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %49, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 1
  %20 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 1, i32 1
  %21 = bitcast %"class.std::__1::vector.0"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.cppgc::internal::BaseSpace"* %19 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %14, i64 1, i32 1, i32 0, i32 1
  %28 = bitcast %"class.cppgc::internal::BasePage"*** %27 to %"class.cppgc::internal::FreeList"*
  tail call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %28, i8* %26, i64 %22) #6
  %29 = ptrtoint i8* %26 to i64
  %30 = and i64 %29, -131072
  %31 = or i64 %30, 4096
  %32 = inttoptr i64 %31 to %"class.cppgc::internal::NormalPage"*
  %33 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %32, i64 0, i32 2
  %34 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %33 to i64*
  %35 = load i64, i64* %34, align 32
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %32, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store i8 %45, i8* %39, align 1
  %46 = load i64, i64* %21, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"* %3, i64 %46) #6
  br label %47

47:                                               ; preds = %24, %18
  %48 = bitcast %"class.cppgc::internal::BaseSpace"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #6
  br label %49

49:                                               ; preds = %47, %11
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %9
  br i1 %51, label %52, label %11

52:                                               ; preds = %49, %1
  ret void
}

declare %"class.cppgc::internal::LargePage"* @_ZN5cppgc8internal9LargePage6CreateERNS0_11PageBackendERNS0_14LargePageSpaceEm(%"class.cppgc::internal::PageBackend"* dereferenceable(480), %"class.cppgc::internal::LargePageSpace"* dereferenceable(88), i64) local_unnamed_addr #2

declare %"class.cppgc::internal::HeapObjectHeader"* @_ZN5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"*) local_unnamed_addr #2

declare void @_ZN5cppgc8internal14StatsCollector16NotifyAllocationEm(%"class.cppgc::internal::StatsCollector"*, i64) local_unnamed_addr #2

declare i8* @_ZN5cppgc8internal9LargePage12PayloadStartEv(%"class.cppgc::internal::LargePage"*) local_unnamed_addr #2

declare i8* @_ZN5cppgc8internal9LargePage10PayloadEndEv(%"class.cppgc::internal::LargePage"*) local_unnamed_addr #2

declare void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"*, i64) local_unnamed_addr #2

declare void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
