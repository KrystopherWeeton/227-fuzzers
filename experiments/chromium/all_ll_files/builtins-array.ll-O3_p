; ModuleID = '../../v8/src/builtins/builtins-array.cc'
source_filename = "../../v8/src/builtins/builtins-array.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1133" = type { %"struct.std::__1::__atomic_base.1134" }
%"struct.std::__1::__atomic_base.1134" = type { %"struct.std::__1::__atomic_base.1135" }
%"struct.std::__1::__atomic_base.1135" = type { %"struct.std::__1::__cxx_atomic_impl.1136" }
%"struct.std::__1::__cxx_atomic_impl.1136" = type { %"struct.std::__1::__cxx_atomic_base_impl.1137" }
%"struct.std::__1::__cxx_atomic_base_impl.1137" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::ElementsAccessor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::BuiltinArguments" = type { %"class.v8::internal::Arguments" }
%"class.v8::internal::Arguments" = type { i64, i64* }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1170", %"class.v8::internal::Handle.1149", %"class.v8::internal::Handle.1149", %"class.v8::internal::Handle.1150", %"class.v8::internal::Handle.1149", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1170" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1150" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1149" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1175", i32, i32, i32, %"class.v8::internal::Handle.1176" }
%"class.v8::internal::Handle.1175" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1176" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PrototypeIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Object", %"class.v8::internal::Handle.969", i32, i8, [3 x i8], i32, [4 x i8] }>
%"struct.std::__1::__less.1207" = type { i8 }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.std::__1::vector.1192" = type { %"class.std::__1::__vector_base.1193" }
%"class.std::__1::__vector_base.1193" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { i32* }
%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1149", i32, i32 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1170", i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2v88internal6Object20SetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE = comdat any

$_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal17PrototypeIterator7AdvanceEv = comdat any

@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1133", align 4
@_ZZN2v88internalL37Builtin_Impl_Stats_ArrayPrototypeFillEiPmPNS0_7IsolateEE28trace_event_unique_atomic250 = internal global i64 0, align 8
@.str = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"V8.Builtin_ArrayPrototypeFill\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"DoubleToUint32IfEqualToSelf(start_index, &start)\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"DoubleToUint32IfEqualToSelf(end_index, &end)\00", align 1
@_ZN2v88internal16ElementsAccessor19elements_accessors_E = external local_unnamed_addr global %"class.v8::internal::ElementsAccessor"**, align 8
@_ZZN2v88internalL28Builtin_Impl_Stats_ArrayPushEiPmPNS0_7IsolateEE28trace_event_unique_atomic369 = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [21 x i8] c"V8.Builtin_ArrayPush\00", align 1
@_ZZN2v88internalL27Builtin_Impl_Stats_ArrayPopEiPmPNS0_7IsolateEE28trace_event_unique_atomic457 = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"V8.Builtin_ArrayPop\00", align 1
@_ZZN2v88internalL29Builtin_Impl_Stats_ArrayShiftEiPmPNS0_7IsolateEE28trace_event_unique_atomic581 = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [22 x i8] c"V8.Builtin_ArrayShift\00", align 1
@_ZZN2v88internalL31Builtin_Impl_Stats_ArrayUnshiftEiPmPNS0_7IsolateEE28trace_event_unique_atomic613 = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [24 x i8] c"V8.Builtin_ArrayUnshift\00", align 1
@_ZZN2v88internalL30Builtin_Impl_Stats_ArrayConcatEiPmPNS0_7IsolateEE29trace_event_unique_atomic1502 = internal global i64 0, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"V8.Builtin_ArrayConcat\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"Array.prototype.concat\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"!handle_.is_null()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal26Builtin_ArrayPrototypeFillEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL37Builtin_Impl_Stats_ArrayPrototypeFillEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

8:                                                ; preds = %3
  %9 = sext i32 %0 to i64
  %10 = tail call fastcc i64 @_ZN2v88internalL31Builtin_Impl_ArrayPrototypeFillENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %9, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  ret i64 %12
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL37Builtin_Impl_Stats_ArrayPrototypeFillEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = sext i32 %0 to i64
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 752) #4
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL37Builtin_Impl_Stats_ArrayPrototypeFillEiPmPNS0_7IsolateEE28trace_event_unique_atomic250 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #4
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL37Builtin_Impl_Stats_ArrayPrototypeFillEiPmPNS0_7IsolateEE28trace_event_unique_atomic250 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #4
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %38, i32 0) #4
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #4
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #4
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = call fastcc i64 @_ZN2v88internalL31Builtin_Impl_ArrayPrototypeFillENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %7, i64* %1, %"class.v8::internal::Isolate"* %2)
  %69 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %70 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %69, null
  br i1 %70, label %87, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %78 = load i8*, i8** %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.v8::TracingController"* %77 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %84 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %84, i64 5
  %86 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %85, align 8
  call void %86(%"class.v8::TracingController"* %77, i8* %78, i8* %80, i64 %82) #4
  br label %87

87:                                               ; preds = %67, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #4
  %88 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %89 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %88, align 8
  %90 = icmp eq %"class.v8::internal::RuntimeCallStats"* %89, null
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %89, %"class.v8::internal::RuntimeCallTimer"* %92) #4
  br label %93

93:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  ret i64 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL31Builtin_Impl_ArrayPrototypeFillENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::BuiltinArguments", align 8
  %5 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %4, i64 0, i32 0, i32 0
  store i64 %0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %4, i64 0, i32 0, i32 1
  store i64* %1, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 108
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 32
  %18 = ptrtoint i64* %1 to i64
  br i1 %17, label %24, label %19

19:                                               ; preds = %3
  %20 = mul i64 %0, -8
  %21 = add i64 %20, 40
  %22 = add i64 %21, %18
  %23 = inttoptr i64 %22 to i64*
  br label %34

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 68
  %26 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %25, align 8
  %27 = mul i64 %0, -8
  %28 = add i64 %27, 40
  %29 = add i64 %28, %18
  %30 = inttoptr i64 %29 to i64*
  %31 = tail call zeroext i1 @_ZN2v88internal5Debug31PerformSideEffectCheckForObjectENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Debug"* %26, i64* %30) #4
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %399

34:                                               ; preds = %19, %24
  %35 = phi i64* [ %23, %19 ], [ %30, %24 ]
  %36 = phi i64 [ %20, %19 ], [ %27, %24 ]
  %37 = load i64, i64* %35, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %34
  %41 = and i64 %37, -4294967296
  %42 = add i64 %37, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ugt i16 %49, 185
  br i1 %50, label %53, label %51

51:                                               ; preds = %40, %34
  %52 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* %35, i8* null) #4
  br label %53

53:                                               ; preds = %40, %51
  %54 = phi i64* [ %52, %51 ], [ %35, %40 ]
  %55 = icmp eq i64* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %399

58:                                               ; preds = %53
  %59 = load i64, i64* %54, align 8
  %60 = and i64 %59, -4294967296
  %61 = add i64 %59, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1085
  br i1 %69, label %70, label %85

70:                                               ; preds = %58
  %71 = add i64 %59, 11
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %70
  %78 = ashr i32 %73, 1
  %79 = sitofp i32 %78 to double
  br label %102

80:                                               ; preds = %70
  %81 = or i64 %60, %74
  %82 = add i64 %81, 3
  %83 = inttoptr i64 %82 to double*
  %84 = load double, double* %83, align 1
  br label %102

85:                                               ; preds = %58
  %86 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %54) #4
  %87 = icmp eq i64* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %86, align 8
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = trunc i64 %89 to i32
  %94 = ashr i32 %93, 1
  %95 = sitofp i32 %94 to double
  br label %102

96:                                               ; preds = %88
  %97 = add i64 %89, 3
  %98 = inttoptr i64 %97 to double*
  %99 = load double, double* %98, align 1
  br label %102

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %399

102:                                              ; preds = %96, %92, %80, %77
  %103 = phi double [ %79, %77 ], [ %84, %80 ], [ %95, %92 ], [ %99, %96 ]
  %104 = trunc i64 %0 to i32
  %105 = icmp sgt i32 %104, 6
  %106 = add i64 %36, 56
  %107 = add i64 %106, %18
  %108 = inttoptr i64 %107 to i64*
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %110 = select i1 %105, i64* %108, i64* %109
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %140, label %114

114:                                              ; preds = %102
  %115 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %116 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %115, i64 0, i32 0, i32 1
  %119 = load i8, i8* %118, align 8, !range !3
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %115, i64 0, i32 1, i64 0
  br label %131

123:                                              ; preds = %117, %114
  %124 = and i64 %111, -262144
  %125 = or i64 %124, 16
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 16
  %128 = add i64 %127, -41416
  %129 = inttoptr i64 %128 to %"class.v8::internal::Isolate"*
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %129, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %131

131:                                              ; preds = %123, %121
  %132 = phi i64* [ %130, %123 ], [ %122, %121 ]
  %133 = getelementptr inbounds i64, i64* %132, i64 4
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %111 to i32
  %136 = trunc i64 %134 to i32
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %162, label %138

138:                                              ; preds = %131
  %139 = tail call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %110) #4
  br label %140

140:                                              ; preds = %138, %102
  %141 = phi i64* [ %139, %138 ], [ %110, %102 ]
  %142 = icmp eq i64* %141, null
  br i1 %142, label %166, label %143

143:                                              ; preds = %140
  %144 = load i64, i64* %141, align 8
  %145 = and i64 %144, 1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = trunc i64 %144 to i32
  %149 = ashr i32 %148, 1
  %150 = sitofp i32 %149 to double
  br label %155

151:                                              ; preds = %143
  %152 = add i64 %144, 3
  %153 = inttoptr i64 %152 to double*
  %154 = load double, double* %153, align 1
  br label %155

155:                                              ; preds = %151, %147
  %156 = phi double [ %154, %151 ], [ %150, %147 ]
  %157 = fcmp olt double %156, 0.000000e+00
  br i1 %157, label %158, label %162

158:                                              ; preds = %155
  %159 = fadd double %103, %156
  %160 = fcmp olt double %159, 0.000000e+00
  %161 = select i1 %160, double 0.000000e+00, double %159
  br label %168

162:                                              ; preds = %131, %155
  %163 = phi double [ %156, %155 ], [ 0.000000e+00, %131 ]
  %164 = fcmp ogt double %163, %103
  %165 = select i1 %164, double %103, double %163
  br label %168

166:                                              ; preds = %140
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %399

168:                                              ; preds = %162, %158
  %169 = phi double [ %161, %158 ], [ %165, %162 ]
  %170 = icmp sgt i32 %104, 7
  %171 = add i64 %36, 64
  %172 = add i64 %171, %18
  %173 = inttoptr i64 %172 to i64*
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %175 = select i1 %170, i64* %173, i64* %174
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %205, label %179

179:                                              ; preds = %168
  %180 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %181 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %180, i64 0, i32 0, i32 1
  %184 = load i8, i8* %183, align 8, !range !3
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %180, i64 0, i32 1, i64 0
  br label %196

188:                                              ; preds = %182, %179
  %189 = and i64 %176, -262144
  %190 = or i64 %189, 16
  %191 = inttoptr i64 %190 to i64*
  %192 = load i64, i64* %191, align 16
  %193 = add i64 %192, -41416
  %194 = inttoptr i64 %193 to %"class.v8::internal::Isolate"*
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %194, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %196

196:                                              ; preds = %188, %186
  %197 = phi i64* [ %195, %188 ], [ %187, %186 ]
  %198 = getelementptr inbounds i64, i64* %197, i64 4
  %199 = load i64, i64* %198, align 8
  %200 = trunc i64 %176 to i32
  %201 = trunc i64 %199 to i32
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %220, label %203

203:                                              ; preds = %196
  %204 = tail call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %175) #4
  br label %205

205:                                              ; preds = %203, %168
  %206 = phi i64* [ %204, %203 ], [ %175, %168 ]
  %207 = icmp eq i64* %206, null
  br i1 %207, label %230, label %208

208:                                              ; preds = %205
  %209 = load i64, i64* %206, align 8
  %210 = and i64 %209, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %216

212:                                              ; preds = %208
  %213 = trunc i64 %209 to i32
  %214 = ashr i32 %213, 1
  %215 = sitofp i32 %214 to double
  br label %220

216:                                              ; preds = %208
  %217 = add i64 %209, 3
  %218 = inttoptr i64 %217 to double*
  %219 = load double, double* %218, align 1
  br label %220

220:                                              ; preds = %216, %212, %196
  %221 = phi double [ %103, %196 ], [ %219, %216 ], [ %215, %212 ]
  %222 = fcmp olt double %221, 0.000000e+00
  br i1 %222, label %223, label %227

223:                                              ; preds = %220
  %224 = fadd double %103, %221
  %225 = fcmp olt double %224, 0.000000e+00
  %226 = select i1 %225, double 0.000000e+00, double %224
  br label %232

227:                                              ; preds = %220
  %228 = fcmp ogt double %221, %103
  %229 = select i1 %228, double %103, double %221
  br label %232

230:                                              ; preds = %205
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %399

232:                                              ; preds = %227, %223
  %233 = phi double [ %226, %223 ], [ %229, %227 ]
  %234 = fcmp ult double %169, %233
  br i1 %234, label %235, label %399

235:                                              ; preds = %232
  %236 = icmp sgt i32 %104, 5
  %237 = add i64 %36, 48
  %238 = add i64 %237, %18
  %239 = inttoptr i64 %238 to i64*
  %240 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %241 = select i1 %236, i64* %239, i64* %240
  %242 = fcmp ogt double %233, 0x41EFFFFFFFE00000
  br i1 %242, label %347, label %243

243:                                              ; preds = %235
  %244 = load i64, i64* %54, align 8
  %245 = and i64 %244, -4294967296
  %246 = add i64 %244, -1
  %247 = inttoptr i64 %246 to i32*
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = zext i32 %248 to i64
  %250 = or i64 %245, %249
  %251 = add i64 %250, 7
  %252 = inttoptr i64 %251 to i16*
  %253 = load atomic i16, i16* %252 monotonic, align 2
  %254 = icmp ugt i16 %253, 188
  br i1 %254, label %255, label %347

255:                                              ; preds = %243
  %256 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_137EnsureJSArrayWithWritableFastElementsEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_16BuiltinArgumentsEii(%"class.v8::internal::Isolate"* %2, i64* nonnull %54, %"class.v8::internal::BuiltinArguments"* nonnull %4, i32 1, i32 1) #4
  br i1 %256, label %257, label %347

257:                                              ; preds = %255
  %258 = load i64, i64* %5, align 8
  %259 = trunc i64 %258 to i32
  %260 = icmp eq i32 %259, 5
  br i1 %260, label %261, label %293

261:                                              ; preds = %257
  %262 = load i64, i64* %54, align 8
  %263 = and i64 %262, -4294967296
  %264 = add i64 %262, -1
  %265 = inttoptr i64 %264 to i32*
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = zext i32 %266 to i64
  %268 = or i64 %263, %267
  %269 = add i64 %268, 10
  %270 = inttoptr i64 %269 to i8*
  %271 = load i8, i8* %270, align 1
  %272 = and i8 %271, -4
  %273 = icmp eq i8 %272, 8
  br i1 %273, label %293, label %274

274:                                              ; preds = %261
  %275 = load i64, i64* %8, align 8
  %276 = load i64*, i64** %10, align 8
  %277 = load i32, i32* %12, align 8
  %278 = add nsw i32 %277, 1
  store i32 %278, i32* %12, align 8
  call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* nonnull %54, i8 zeroext 2) #4
  %279 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %274
  %281 = inttoptr i64 %275 to i64*
  %282 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %283 = load i64*, i64** %282, align 8
  store i64 %275, i64* %8, align 8
  %284 = load i32, i32* %12, align 8
  %285 = add nsw i32 %284, -1
  store i32 %285, i32* %12, align 8
  %286 = load i64*, i64** %10, align 8
  %287 = icmp eq i64* %286, %276
  br i1 %287, label %290, label %288

288:                                              ; preds = %280
  store i64* %276, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %289 = load i64*, i64** %282, align 8
  br label %290

290:                                              ; preds = %288, %280
  %291 = phi i64* [ %289, %288 ], [ %281, %280 ]
  %292 = phi i64* [ %276, %288 ], [ %283, %280 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %291, i64* %292) #4
  br label %293

293:                                              ; preds = %290, %274, %261, %257
  %294 = fadd double %169, 0x4330000000000000
  %295 = bitcast double %294 to i64
  %296 = and i64 %295, -4294967296
  %297 = icmp eq i64 %296, 4841369599423283200
  br i1 %297, label %298, label %302, !prof !4

298:                                              ; preds = %293
  %299 = trunc i64 %295 to i32
  %300 = uitofp i32 %299 to double
  %301 = fcmp oeq double %169, %300
  br i1 %301, label %303, label %302, !prof !2

302:                                              ; preds = %298, %293
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

303:                                              ; preds = %298
  %304 = fadd double %233, 0x4330000000000000
  %305 = bitcast double %304 to i64
  %306 = and i64 %305, -4294967296
  %307 = icmp eq i64 %306, 4841369599423283200
  br i1 %307, label %308, label %312, !prof !4

308:                                              ; preds = %303
  %309 = trunc i64 %305 to i32
  %310 = uitofp i32 %309 to double
  %311 = fcmp oeq double %233, %310
  br i1 %311, label %313, label %312, !prof !2

312:                                              ; preds = %308, %303
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

313:                                              ; preds = %308
  %314 = load i64, i64* %54, align 8
  %315 = and i64 %314, -4294967296
  %316 = add i64 %314, -1
  %317 = inttoptr i64 %316 to i32*
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = zext i32 %318 to i64
  %320 = or i64 %315, %319
  %321 = add i64 %320, 10
  %322 = inttoptr i64 %321 to i8*
  %323 = load i8, i8* %322, align 1
  %324 = lshr i8 %323, 2
  %325 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %326 = zext i8 %324 to i64
  %327 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %325, i64 %326
  %328 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %327, align 8
  %329 = and i64 %295, 4294967295
  %330 = and i64 %305, 4294967295
  %331 = bitcast %"class.v8::internal::ElementsAccessor"* %328 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64)***
  %332 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64)*** %331, align 8
  %333 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64)** %332, i64 24
  %334 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64)** %333, align 8
  %335 = call i64* %334(%"class.v8::internal::ElementsAccessor"* %328, i64* nonnull %54, i64* %241, i64 %329, i64 %330) #4
  %336 = icmp eq i64* %335, null
  %337 = select i1 %336, i16 0, i16 257
  %338 = trunc i16 %337 to i8
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %340, label %342, !prof !5

340:                                              ; preds = %313
  %341 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %399

342:                                              ; preds = %313
  %343 = and i16 %337, 256
  %344 = icmp eq i16 %343, 0
  %345 = fcmp olt double %169, %233
  %346 = and i1 %345, %344
  br i1 %346, label %349, label %399

347:                                              ; preds = %255, %243, %235
  %348 = fcmp olt double %169, %233
  br i1 %348, label %349, label %399

349:                                              ; preds = %342, %347
  %350 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %351 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %353 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  br label %354

354:                                              ; preds = %396, %349
  %355 = phi double [ %169, %349 ], [ %397, %396 ]
  %356 = fcmp ult double %355, 0xC1D0000000000000
  %357 = fcmp ugt double %355, 0x41CFFFFFFF800000
  %358 = or i1 %357, %356
  %359 = bitcast double %355 to i64
  %360 = icmp eq i64 %359, -9223372036854775808
  %361 = or i1 %358, %360
  br i1 %361, label %384, label %362

362:                                              ; preds = %354
  %363 = fptosi double %355 to i32
  %364 = sitofp i32 %363 to double
  %365 = fcmp oeq double %355, %364
  br i1 %365, label %366, label %384

366:                                              ; preds = %362
  %367 = sext i32 %363 to i64
  %368 = shl nsw i64 %367, 1
  %369 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %352, align 8
  %370 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %366
  %372 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %369, i64 %368) #4
  br label %389

373:                                              ; preds = %366
  %374 = load i64*, i64** %353, align 8
  %375 = load i64*, i64** %10, align 8
  %376 = icmp eq i64* %374, %375
  br i1 %376, label %377, label %379

377:                                              ; preds = %373
  %378 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %379

379:                                              ; preds = %377, %373
  %380 = phi i64* [ %378, %377 ], [ %374, %373 ]
  %381 = ptrtoint i64* %380 to i64
  %382 = add i64 %381, 8
  %383 = inttoptr i64 %382 to i64*
  store i64* %383, i64** %353, align 8
  store i64 %368, i64* %380, align 8
  br label %389

384:                                              ; preds = %362, %354
  %385 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %351) #4
  %386 = load i64, i64* %385, align 8
  %387 = add i64 %386, 3
  %388 = inttoptr i64 %387 to double*
  store double %355, double* %388, align 1
  br label %389

389:                                              ; preds = %384, %379, %371
  %390 = phi i64* [ %385, %384 ], [ %372, %371 ], [ %380, %379 ]
  %391 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %350, i64* %390, i32 2) #4
  %392 = call i64* @_ZN2v88internal6Object20SetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::Isolate"* %2, i64* nonnull %54, i64* %391, i64* %241, i64 1, i32 0) #4
  %393 = icmp eq i64* %392, null
  br i1 %393, label %394, label %396

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %399

396:                                              ; preds = %389
  %397 = fadd double %355, 1.000000e+00
  %398 = fcmp olt double %397, %233
  br i1 %398, label %354, label %399

399:                                              ; preds = %396, %394, %347, %342, %232, %56, %166, %340, %230, %100, %32
  %400 = phi i64* [ %33, %32 ], [ %57, %56 ], [ %101, %100 ], [ %167, %166 ], [ %231, %230 ], [ %341, %340 ], [ %54, %232 ], [ %54, %342 ], [ %395, %394 ], [ %54, %347 ], [ %54, %396 ]
  %401 = load i64, i64* %400, align 8
  %402 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %402, label %416, label %403

403:                                              ; preds = %399
  %404 = inttoptr i64 %9 to i64*
  %405 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %406 = load i64*, i64** %405, align 8
  store i64 %9, i64* %8, align 8
  %407 = load i32, i32* %12, align 8
  %408 = add nsw i32 %407, -1
  store i32 %408, i32* %12, align 8
  %409 = load i64*, i64** %10, align 8
  %410 = icmp eq i64* %409, %11
  br i1 %410, label %413, label %411

411:                                              ; preds = %403
  store i64* %11, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %412 = load i64*, i64** %405, align 8
  br label %413

413:                                              ; preds = %411, %403
  %414 = phi i64* [ %412, %411 ], [ %404, %403 ]
  %415 = phi i64* [ %11, %411 ], [ %406, %403 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %414, i64* %415) #4
  br label %416

416:                                              ; preds = %399, %413
  ret i64 %401
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17Builtin_ArrayPushEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL28Builtin_Impl_Stats_ArrayPushEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

8:                                                ; preds = %3
  %9 = sext i32 %0 to i64
  %10 = tail call fastcc i64 @_ZN2v88internalL22Builtin_Impl_ArrayPushENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %9, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  ret i64 %12
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL28Builtin_Impl_Stats_ArrayPushEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = sext i32 %0 to i64
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 754) #4
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL28Builtin_Impl_Stats_ArrayPushEiPmPNS0_7IsolateEE28trace_event_unique_atomic369 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #4
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL28Builtin_Impl_Stats_ArrayPushEiPmPNS0_7IsolateEE28trace_event_unique_atomic369 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #4
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %38, i32 0) #4
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #4
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #4
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = call fastcc i64 @_ZN2v88internalL22Builtin_Impl_ArrayPushENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %7, i64* %1, %"class.v8::internal::Isolate"* %2)
  %69 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %70 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %69, null
  br i1 %70, label %87, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %78 = load i8*, i8** %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.v8::TracingController"* %77 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %84 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %84, i64 5
  %86 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %85, align 8
  call void %86(%"class.v8::TracingController"* %77, i8* %78, i8* %80, i64 %82) #4
  br label %87

87:                                               ; preds = %67, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #4
  %88 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %89 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %88, align 8
  %90 = icmp eq %"class.v8::internal::RuntimeCallStats"* %89, null
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %89, %"class.v8::internal::RuntimeCallTimer"* %92) #4
  br label %93

93:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL22Builtin_Impl_ArrayPushENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::BuiltinArguments", align 8
  %5 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %4, i64 0, i32 0, i32 0
  store i64 %0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %4, i64 0, i32 0, i32 1
  store i64* %1, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = ptrtoint i64* %1 to i64
  %16 = mul i64 %0, -8
  %17 = add i64 %16, 40
  %18 = add i64 %17, %15
  %19 = inttoptr i64 %18 to i64*
  %20 = trunc i64 %0 to i32
  %21 = add nsw i32 %20, -5
  %22 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_137EnsureJSArrayWithWritableFastElementsEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_16BuiltinArgumentsEii(%"class.v8::internal::Isolate"* %2, i64* %19, %"class.v8::internal::BuiltinArguments"* nonnull %4, i32 1, i32 %21)
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = call fastcc i64 @_ZN2v88internal12_GLOBAL__N_116GenericArrayPushEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::BuiltinArguments"* nonnull %4)
  br label %145

25:                                               ; preds = %3
  %26 = load i64, i64* %5, align 8
  %27 = trunc i64 %26 to i32
  %28 = add nsw i32 %27, -5
  %29 = load i64, i64* %19, align 8
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %25
  %37 = ashr i32 %32, 1
  %38 = sitofp i32 %37 to double
  br label %45

39:                                               ; preds = %25
  %40 = and i64 %29, -4294967296
  %41 = or i64 %40, %33
  %42 = add i64 %41, 3
  %43 = inttoptr i64 %42 to double*
  %44 = load double, double* %43, align 1
  br label %45

45:                                               ; preds = %36, %39
  %46 = phi double [ %38, %36 ], [ %44, %39 ]
  %47 = icmp eq i32 %28, 0
  br i1 %47, label %48, label %81

48:                                               ; preds = %45
  %49 = fptoui double %46 to i32
  %50 = icmp ult i32 %49, 1073741824
  br i1 %50, label %51, label %71

51:                                               ; preds = %48
  %52 = sext i32 %49 to i64
  %53 = shl nsw i64 %52, 1
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %55 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %54, align 8
  %56 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %51
  %58 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %55, i64 %53) #4
  br label %78

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64*, i64** %10, align 8
  %63 = icmp eq i64* %61, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i64* [ %65, %64 ], [ %61, %59 ]
  %68 = ptrtoint i64* %67 to i64
  %69 = add i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  store i64* %70, i64** %60, align 8
  store i64 %53, i64* %67, align 8
  br label %78

71:                                               ; preds = %48
  %72 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %73 = uitofp i32 %49 to double
  %74 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %72) #4
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 3
  %77 = inttoptr i64 %76 to double*
  store double %73, double* %77, align 1
  br label %78

78:                                               ; preds = %57, %66, %71
  %79 = phi i64* [ %74, %71 ], [ %58, %57 ], [ %67, %66 ]
  %80 = load i64, i64* %79, align 8
  br label %145

81:                                               ; preds = %45
  %82 = call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %19) #4
  br i1 %82, label %83, label %85

83:                                               ; preds = %81
  %84 = call fastcc i64 @_ZN2v88internal12_GLOBAL__N_116GenericArrayPushEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::BuiltinArguments"* nonnull %4)
  br label %145

85:                                               ; preds = %81
  %86 = load i64, i64* %19, align 8
  %87 = and i64 %86, -4294967296
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 10
  %94 = inttoptr i64 %93 to i8*
  %95 = load i8, i8* %94, align 1
  %96 = lshr i8 %95, 2
  %97 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %98 = zext i8 %96 to i64
  %99 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %97, i64 %98
  %100 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %99, align 8
  %101 = bitcast %"class.v8::internal::ElementsAccessor"* %100 to i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)***
  %102 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)**, i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)*** %101, align 8
  %103 = getelementptr inbounds i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)** %102, i64 18
  %104 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)** %103, align 8
  %105 = call i64 %104(%"class.v8::internal::ElementsAccessor"* %100, i64* %19, %"class.v8::internal::BuiltinArguments"* nonnull %4, i32 %28) #4
  %106 = trunc i64 %105 to i8
  %107 = lshr i64 %105, 32
  %108 = trunc i64 %107 to i32
  %109 = icmp eq i8 %106, 0
  br i1 %109, label %110, label %113, !prof !5

110:                                              ; preds = %85
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %112 = load i64, i64* %111, align 8
  br label %145

113:                                              ; preds = %85
  %114 = icmp ult i32 %108, 1073741824
  br i1 %114, label %115, label %135

115:                                              ; preds = %113
  %116 = ashr i64 %105, 32
  %117 = shl nsw i64 %116, 1
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %119 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %118, align 8
  %120 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  %122 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %119, i64 %117) #4
  br label %142

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %125 = load i64*, i64** %124, align 8
  %126 = load i64*, i64** %10, align 8
  %127 = icmp eq i64* %125, %126
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  %129 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %130

130:                                              ; preds = %128, %123
  %131 = phi i64* [ %129, %128 ], [ %125, %123 ]
  %132 = ptrtoint i64* %131 to i64
  %133 = add i64 %132, 8
  %134 = inttoptr i64 %133 to i64*
  store i64* %134, i64** %124, align 8
  store i64 %117, i64* %131, align 8
  br label %142

135:                                              ; preds = %113
  %136 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %137 = uitofp i32 %108 to double
  %138 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %136) #4
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 3
  %141 = inttoptr i64 %140 to double*
  store double %137, double* %141, align 1
  br label %142

142:                                              ; preds = %121, %130, %135
  %143 = phi i64* [ %138, %135 ], [ %122, %121 ], [ %131, %130 ]
  %144 = load i64, i64* %143, align 8
  br label %145

145:                                              ; preds = %78, %83, %110, %142, %23
  %146 = phi i64 [ %24, %23 ], [ %80, %78 ], [ %84, %83 ], [ %144, %142 ], [ %112, %110 ]
  %147 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = inttoptr i64 %9 to i64*
  %150 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %151 = load i64*, i64** %150, align 8
  store i64 %9, i64* %8, align 8
  %152 = load i32, i32* %12, align 8
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %12, align 8
  %154 = load i64*, i64** %10, align 8
  %155 = icmp eq i64* %154, %11
  br i1 %155, label %158, label %156

156:                                              ; preds = %148
  store i64* %11, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %157 = load i64*, i64** %150, align 8
  br label %158

158:                                              ; preds = %156, %148
  %159 = phi i64* [ %157, %156 ], [ %149, %148 ]
  %160 = phi i64* [ %11, %156 ], [ %151, %148 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %159, i64* %160) #4
  br label %161

161:                                              ; preds = %145, %158
  ret i64 %146
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal16Builtin_ArrayPopEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL27Builtin_Impl_Stats_ArrayPopEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

8:                                                ; preds = %3
  %9 = sext i32 %0 to i64
  %10 = tail call fastcc i64 @_ZN2v88internalL21Builtin_Impl_ArrayPopENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %9, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  ret i64 %12
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL27Builtin_Impl_Stats_ArrayPopEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = sext i32 %0 to i64
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 753) #4
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL27Builtin_Impl_Stats_ArrayPopEiPmPNS0_7IsolateEE28trace_event_unique_atomic457 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #4
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL27Builtin_Impl_Stats_ArrayPopEiPmPNS0_7IsolateEE28trace_event_unique_atomic457 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #4
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %38, i32 0) #4
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #4
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #4
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = call fastcc i64 @_ZN2v88internalL21Builtin_Impl_ArrayPopENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %7, i64* %1, %"class.v8::internal::Isolate"* %2)
  %69 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %70 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %69, null
  br i1 %70, label %87, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %78 = load i8*, i8** %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.v8::TracingController"* %77 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %84 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %84, i64 5
  %86 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %85, align 8
  call void %86(%"class.v8::TracingController"* %77, i8* %78, i8* %80, i64 %82) #4
  br label %87

87:                                               ; preds = %67, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #4
  %88 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %89 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %88, align 8
  %90 = icmp eq %"class.v8::internal::RuntimeCallStats"* %89, null
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %89, %"class.v8::internal::RuntimeCallTimer"* %92) #4
  br label %93

93:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL21Builtin_Impl_ArrayPopENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::BuiltinArguments", align 8
  %6 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %5, i64 0, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %5, i64 0, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %9 = bitcast %"struct.v8::internal::HandleScopeData"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = ptrtoint i64* %1 to i64
  %17 = mul i64 %0, -8
  %18 = add i64 %17, 40
  %19 = add i64 %18, %16
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %53, label %24

24:                                               ; preds = %3
  %25 = and i64 %21, -4294967296
  %26 = add i64 %21, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 1085
  br i1 %34, label %35, label %53

35:                                               ; preds = %24
  %36 = load atomic i32, i32* %27 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %25, %37
  %39 = add i64 %38, 10
  %40 = inttoptr i64 %39 to i8*
  %41 = load i8, i8* %40, align 1
  %42 = and i8 %41, -4
  %43 = icmp eq i8 %42, 48
  br i1 %43, label %53, label %44

44:                                               ; preds = %35
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %25, %46
  %48 = add i64 %47, 11
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 134217728
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %24, %35, %44, %3
  %54 = call fastcc i64 @_ZN2v88internal12_GLOBAL__N_115GenericArrayPopEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::BuiltinArguments"* nonnull %5)
  br label %192

55:                                               ; preds = %44
  %56 = add i64 %21, 11
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %55
  %63 = ashr i32 %58, 1
  %64 = sitofp i32 %63 to double
  br label %70

65:                                               ; preds = %55
  %66 = or i64 %25, %59
  %67 = add i64 %66, 3
  %68 = inttoptr i64 %67 to double*
  %69 = load double, double* %68, align 1
  br label %70

70:                                               ; preds = %62, %65
  %71 = phi double [ %64, %62 ], [ %69, %65 ]
  %72 = fptoui double %71 to i32
  %73 = tail call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %20) #4
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = call fastcc i64 @_ZN2v88internal12_GLOBAL__N_115GenericArrayPopEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::BuiltinArguments"* nonnull %5)
  br label %192

76:                                               ; preds = %70
  %77 = icmp eq i32 %72, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %80 = load i64, i64* %79, align 8
  br label %192

81:                                               ; preds = %76
  %82 = load i64, i64* %20, align 8
  %83 = and i64 %82, -4294967296
  %84 = add i64 %82, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 15
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i32
  %95 = icmp eq i32 %91, %94
  br i1 %95, label %131, label %96

96:                                               ; preds = %81
  %97 = zext i32 %91 to i64
  %98 = or i64 %83, %97
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 111
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  %102 = load i64, i64* %101, align 8
  %103 = trunc i64 %102 to i32
  %104 = trunc i64 %100 to i32
  br label %105

105:                                              ; preds = %124, %96
  %106 = phi i64 [ %98, %96 ], [ %129, %124 ]
  %107 = and i64 %106, -4294967296
  %108 = add i64 %106, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp ult i16 %115, 1042
  br i1 %116, label %152, label %117

117:                                              ; preds = %105
  %118 = add i64 %106, 7
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = icmp ne i32 %120, %103
  %122 = icmp ne i32 %120, %104
  %123 = and i1 %121, %122
  br i1 %123, label %152, label %124

124:                                              ; preds = %117
  %125 = add i64 %112, 15
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %107, %128
  %130 = icmp eq i32 %127, %94
  br i1 %130, label %131, label %105

131:                                              ; preds = %124, %81
  %132 = load atomic i32, i32* %85 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %83, %133
  %135 = add i64 %134, 10
  %136 = inttoptr i64 %135 to i8*
  %137 = load i8, i8* %136, align 1
  %138 = lshr i8 %137, 2
  %139 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %140 = zext i8 %138 to i64
  %141 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %139, i64 %140
  %142 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %141, align 8
  %143 = bitcast %"class.v8::internal::ElementsAccessor"* %142 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %144 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %143, align 8
  %145 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %144, i64 20
  %146 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %145, align 8
  %147 = tail call i64* %146(%"class.v8::internal::ElementsAccessor"* %142, i64* %20) #4
  %148 = icmp eq i64* %147, null
  br i1 %148, label %149, label %189

149:                                              ; preds = %131
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %151 = load i64, i64* %150, align 8
  br label %192

152:                                              ; preds = %117, %105
  %153 = add i32 %72, -1
  %154 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %154) #4
  %155 = zext i32 %153 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %2, i64* %20, i64* null, i64 %155, i64* %20, i32 3) #4
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 4
  br i1 %158, label %159, label %165

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  %161 = bitcast %"class.v8::internal::Isolate"** %160 to %"class.v8::internal::Factory"**
  %162 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %162, i64 160
  %164 = bitcast %"class.v8::internal::Factory"* %163 to i64*
  br label %167

165:                                              ; preds = %152
  %166 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #4
  br label %167

167:                                              ; preds = %159, %165
  %168 = phi i64* [ %166, %165 ], [ %164, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %154) #4
  %169 = icmp eq i64* %168, null
  br i1 %169, label %170, label %173

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %172 = load i64, i64* %171, align 8
  br label %192

173:                                              ; preds = %167
  %174 = call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %20) #4
  br i1 %174, label %175, label %182

175:                                              ; preds = %173
  %176 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %178 = call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %20) #4
  %179 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %176, i32 171, i64* %177, i64* %178, i64* %20) #4
  %180 = load i64, i64* %179, align 8
  %181 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %2, i64 %180, %"class.v8::internal::MessageLocation"* null) #4
  br label %192

182:                                              ; preds = %173
  %183 = call i16 @_ZN2v88internal7JSArray9SetLengthENS0_6HandleIS1_EEj(i64* %20, i32 %153) #4
  %184 = trunc i16 %183 to i8
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %189, !prof !5

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %188 = load i64, i64* %187, align 8
  br label %192

189:                                              ; preds = %131, %182
  %190 = phi i64* [ %168, %182 ], [ %147, %131 ]
  %191 = load i64, i64* %190, align 8
  br label %192

192:                                              ; preds = %170, %175, %74, %78, %186, %149, %189, %53
  %193 = phi i64 [ %54, %53 ], [ %75, %74 ], [ %80, %78 ], [ %191, %189 ], [ %151, %149 ], [ %188, %186 ], [ %172, %170 ], [ %181, %175 ]
  %194 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = inttoptr i64 %10 to i64*
  %197 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %8, i64 0, i32 0
  %198 = load i64*, i64** %197, align 8
  store i64 %10, i64* %9, align 8
  %199 = load i32, i32* %13, align 8
  %200 = add nsw i32 %199, -1
  store i32 %200, i32* %13, align 8
  %201 = load i64*, i64** %11, align 8
  %202 = icmp eq i64* %201, %12
  br i1 %202, label %205, label %203

203:                                              ; preds = %195
  store i64* %12, i64** %11, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %204 = load i64*, i64** %197, align 8
  br label %205

205:                                              ; preds = %203, %195
  %206 = phi i64* [ %204, %203 ], [ %196, %195 ]
  %207 = phi i64* [ %12, %203 ], [ %198, %195 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %206, i64* %207) #4
  br label %208

208:                                              ; preds = %192, %205
  ret i64 %193
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18Builtin_ArrayShiftEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL29Builtin_Impl_Stats_ArrayShiftEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

8:                                                ; preds = %3
  %9 = sext i32 %0 to i64
  %10 = tail call fastcc i64 @_ZN2v88internalL23Builtin_Impl_ArrayShiftENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %9, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  ret i64 %12
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL29Builtin_Impl_Stats_ArrayShiftEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = sext i32 %0 to i64
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 755) #4
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL29Builtin_Impl_Stats_ArrayShiftEiPmPNS0_7IsolateEE28trace_event_unique_atomic581 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #4
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL29Builtin_Impl_Stats_ArrayShiftEiPmPNS0_7IsolateEE28trace_event_unique_atomic581 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #4
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %38, i32 0) #4
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #4
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #4
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = call fastcc i64 @_ZN2v88internalL23Builtin_Impl_ArrayShiftENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %7, i64* %1, %"class.v8::internal::Isolate"* %2)
  %69 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %70 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %69, null
  br i1 %70, label %87, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %78 = load i8*, i8** %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.v8::TracingController"* %77 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %84 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %84, i64 5
  %86 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %85, align 8
  call void %86(%"class.v8::TracingController"* %77, i8* %78, i8* %80, i64 %82) #4
  br label %87

87:                                               ; preds = %67, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #4
  %88 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %89 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %88, align 8
  %90 = icmp eq %"class.v8::internal::RuntimeCallStats"* %89, null
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %89, %"class.v8::internal::RuntimeCallTimer"* %92) #4
  br label %93

93:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL23Builtin_Impl_ArrayShiftENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = ptrtoint i64* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %7 = bitcast %"struct.v8::internal::HandleScopeData"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = mul i64 %0, -8
  %15 = add i64 %14, 40
  %16 = add i64 %15, %5
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %3
  %22 = and i64 %18, -4294967296
  %23 = add i64 %18, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp ugt i16 %30, 185
  br i1 %31, label %34, label %32

32:                                               ; preds = %21, %3
  %33 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* %17, i8* null) #4
  br label %34

34:                                               ; preds = %21, %32
  %35 = phi i64* [ %33, %32 ], [ %17, %21 ]
  %36 = icmp eq i64* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

39:                                               ; preds = %34
  %40 = ptrtoint i64* %35 to i64
  %41 = load i64, i64* %35, align 8
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp eq i16 %50, 1085
  br i1 %51, label %52, label %67

52:                                               ; preds = %39
  %53 = add i64 %41, 11
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %52
  %60 = ashr i32 %55, 1
  %61 = sitofp i32 %60 to double
  br label %84

62:                                               ; preds = %52
  %63 = or i64 %42, %56
  %64 = add i64 %63, 3
  %65 = inttoptr i64 %64 to double*
  %66 = load double, double* %65, align 1
  br label %84

67:                                               ; preds = %39
  %68 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %35) #4
  %69 = icmp eq i64* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %68, align 8
  %72 = and i64 %71, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = trunc i64 %71 to i32
  %76 = ashr i32 %75, 1
  %77 = sitofp i32 %76 to double
  br label %84

78:                                               ; preds = %70
  %79 = add i64 %71, 3
  %80 = inttoptr i64 %79 to double*
  %81 = load double, double* %80, align 1
  br label %84

82:                                               ; preds = %67
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

84:                                               ; preds = %78, %74, %62, %59
  %85 = phi double [ %61, %59 ], [ %66, %62 ], [ %77, %74 ], [ %81, %78 ]
  %86 = fcmp oeq double %85, 0.000000e+00
  br i1 %86, label %87, label %94

87:                                               ; preds = %84
  %88 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_117SetLengthPropertyEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEd(%"class.v8::internal::Isolate"* %2, i64* nonnull %35, double %85)
  %89 = icmp eq i64* %88, null
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %387

94:                                               ; preds = %84
  %95 = load i64, i64* %35, align 8
  %96 = and i64 %95, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %199, label %98

98:                                               ; preds = %94
  %99 = and i64 %95, -4294967296
  %100 = add i64 %95, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp eq i16 %107, 1085
  br i1 %108, label %109, label %199

109:                                              ; preds = %98
  %110 = load atomic i32, i32* %101 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %99, %111
  %113 = add i64 %112, 10
  %114 = inttoptr i64 %113 to i8*
  %115 = load i8, i8* %114, align 1
  %116 = and i8 %115, -4
  %117 = icmp eq i8 %116, 48
  br i1 %117, label %199, label %118

118:                                              ; preds = %109
  %119 = load atomic i32, i32* %101 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %99, %120
  %122 = add i64 %121, 11
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 134217728
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %199, label %127

127:                                              ; preds = %118
  %128 = load atomic i32, i32* %101 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %99, %129
  %131 = add i64 %130, 15
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  %137 = icmp eq i32 %133, %136
  br i1 %137, label %173, label %138

138:                                              ; preds = %127
  %139 = zext i32 %133 to i64
  %140 = or i64 %99, %139
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 111
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  %144 = load i64, i64* %143, align 8
  %145 = trunc i64 %144 to i32
  %146 = trunc i64 %142 to i32
  br label %147

147:                                              ; preds = %166, %138
  %148 = phi i64 [ %140, %138 ], [ %171, %166 ]
  %149 = and i64 %148, -4294967296
  %150 = add i64 %148, -1
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %149, %153
  %155 = add i64 %154, 7
  %156 = inttoptr i64 %155 to i16*
  %157 = load atomic i16, i16* %156 monotonic, align 2
  %158 = icmp ult i16 %157, 1042
  br i1 %158, label %199, label %159

159:                                              ; preds = %147
  %160 = add i64 %148, 7
  %161 = inttoptr i64 %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = icmp ne i32 %162, %145
  %164 = icmp ne i32 %162, %146
  %165 = and i1 %163, %164
  br i1 %165, label %199, label %166

166:                                              ; preds = %159
  %167 = add i64 %154, 15
  %168 = inttoptr i64 %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = or i64 %149, %170
  %172 = icmp eq i32 %169, %136
  br i1 %172, label %173, label %147

173:                                              ; preds = %166, %127
  %174 = tail call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* nonnull %35) #4
  br i1 %174, label %199, label %175

175:                                              ; preds = %173
  %176 = load i64, i64* %35, align 8
  %177 = and i64 %176, -4294967296
  %178 = add i64 %176, -1
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = zext i32 %180 to i64
  %182 = or i64 %177, %181
  %183 = add i64 %182, 10
  %184 = inttoptr i64 %183 to i8*
  %185 = load i8, i8* %184, align 1
  %186 = lshr i8 %185, 2
  %187 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %188 = zext i8 %186 to i64
  %189 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %187, i64 %188
  %190 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %189, align 8
  %191 = bitcast %"class.v8::internal::ElementsAccessor"* %190 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %192 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %191, align 8
  %193 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %192, i64 21
  %194 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %193, align 8
  %195 = tail call i64* %194(%"class.v8::internal::ElementsAccessor"* %190, i64* nonnull %35) #4
  %196 = icmp eq i64* %195, null
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %198 = select i1 %196, i64* %197, i64* %195
  br label %387

199:                                              ; preds = %159, %147, %173, %94, %118, %109, %98
  %200 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %200) #4
  %201 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  store i32 3, i32* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %203, align 8
  %204 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  %208 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  %209 = bitcast i64** %207 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 16, i1 false) #4
  store i64* %35, i64** %208, align 8
  %210 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %212 = bitcast %"class.v8::internal::Handle.1149"* %211 to i64*
  store i64 %40, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %214 = bitcast i64* %213 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %214, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #4
  %215 = load i32, i32* %202, align 4
  %216 = icmp eq i32 %215, 4
  br i1 %216, label %217, label %222

217:                                              ; preds = %199
  %218 = bitcast %"class.v8::internal::Isolate"** %206 to %"class.v8::internal::Factory"**
  %219 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %219, i64 160
  %221 = bitcast %"class.v8::internal::Factory"* %220 to i64*
  br label %224

222:                                              ; preds = %199
  %223 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #4
  br label %224

224:                                              ; preds = %222, %217
  %225 = phi i64* [ %223, %222 ], [ %221, %217 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %200) #4
  %226 = icmp eq i64* %225, null
  br i1 %226, label %234, label %227

227:                                              ; preds = %224
  %228 = fcmp ogt double %85, 1.000000e+00
  %229 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %230 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  br i1 %228, label %231, label %337

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  br label %236

234:                                              ; preds = %224
  %235 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

236:                                              ; preds = %334, %231
  %237 = phi double [ 1.000000e+00, %231 ], [ %335, %334 ]
  %238 = fcmp ult double %237, 0xC1D0000000000000
  %239 = fcmp ugt double %237, 0x41CFFFFFFF800000
  %240 = or i1 %239, %238
  %241 = bitcast double %237 to i64
  %242 = icmp eq i64 %241, -9223372036854775808
  %243 = or i1 %240, %242
  br i1 %243, label %266, label %244

244:                                              ; preds = %236
  %245 = fptosi double %237 to i32
  %246 = sitofp i32 %245 to double
  %247 = fcmp oeq double %237, %246
  br i1 %247, label %248, label %266

248:                                              ; preds = %244
  %249 = sext i32 %245 to i64
  %250 = shl nsw i64 %249, 1
  %251 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %232, align 8
  %252 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %248
  %254 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %251, i64 %250) #4
  br label %271

255:                                              ; preds = %248
  %256 = load i64*, i64** %233, align 8
  %257 = load i64*, i64** %9, align 8
  %258 = icmp eq i64* %256, %257
  br i1 %258, label %259, label %261

259:                                              ; preds = %255
  %260 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %261

261:                                              ; preds = %259, %255
  %262 = phi i64* [ %260, %259 ], [ %256, %255 ]
  %263 = ptrtoint i64* %262 to i64
  %264 = add i64 %263, 8
  %265 = inttoptr i64 %264 to i64*
  store i64* %265, i64** %233, align 8
  store i64 %250, i64* %262, align 8
  br label %271

266:                                              ; preds = %244, %236
  %267 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %230) #4
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, 3
  %270 = inttoptr i64 %269 to double*
  store double %237, double* %270, align 1
  br label %271

271:                                              ; preds = %266, %261, %253
  %272 = phi i64* [ %267, %266 ], [ %254, %253 ], [ %262, %261 ]
  %273 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %229, i64* %272, i32 2) #4
  %274 = fadd double %237, -1.000000e+00
  %275 = fcmp ult double %274, 0xC1D0000000000000
  %276 = fcmp ugt double %274, 0x41CFFFFFFF800000
  %277 = or i1 %276, %275
  %278 = bitcast double %274 to i64
  %279 = icmp eq i64 %278, -9223372036854775808
  %280 = or i1 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %271
  %282 = fptosi double %274 to i32
  %283 = sitofp i32 %282 to double
  %284 = fcmp oeq double %274, %283
  br i1 %284, label %285, label %303

285:                                              ; preds = %281
  %286 = sext i32 %282 to i64
  %287 = shl nsw i64 %286, 1
  %288 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %232, align 8
  %289 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %285
  %291 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %288, i64 %287) #4
  br label %308

292:                                              ; preds = %285
  %293 = load i64*, i64** %233, align 8
  %294 = load i64*, i64** %9, align 8
  %295 = icmp eq i64* %293, %294
  br i1 %295, label %296, label %298

296:                                              ; preds = %292
  %297 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %298

298:                                              ; preds = %296, %292
  %299 = phi i64* [ %297, %296 ], [ %293, %292 ]
  %300 = ptrtoint i64* %299 to i64
  %301 = add i64 %300, 8
  %302 = inttoptr i64 %301 to i64*
  store i64* %302, i64** %233, align 8
  store i64 %287, i64* %299, align 8
  br label %308

303:                                              ; preds = %281, %271
  %304 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %230) #4
  %305 = load i64, i64* %304, align 8
  %306 = add i64 %305, 3
  %307 = inttoptr i64 %306 to double*
  store double %274, double* %307, align 1
  br label %308

308:                                              ; preds = %303, %298, %290
  %309 = phi i64* [ %304, %303 ], [ %291, %290 ], [ %299, %298 ]
  %310 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %229, i64* %309, i32 2) #4
  %311 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %35, i64* %273) #4
  %312 = trunc i16 %311 to i8
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %314, label %316, !prof !5

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

316:                                              ; preds = %308
  %317 = icmp ult i16 %311, 256
  br i1 %317, label %328, label %318

318:                                              ; preds = %316
  %319 = call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %35, i64* %273) #4
  %320 = icmp eq i64* %319, null
  br i1 %320, label %321, label %323

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

323:                                              ; preds = %318
  %324 = call i64* @_ZN2v88internal6Object20SetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::Isolate"* %2, i64* nonnull %35, i64* %310, i64* nonnull %319, i64 1, i32 0) #4
  %325 = icmp eq i64* %324, null
  br i1 %325, label %326, label %334

326:                                              ; preds = %323
  %327 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

328:                                              ; preds = %316
  %329 = call i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64* nonnull %35, i64* %310, i1 zeroext true) #4
  %330 = trunc i16 %329 to i8
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

334:                                              ; preds = %328, %323
  %335 = fadd double %237, 1.000000e+00
  %336 = fcmp olt double %335, %85
  br i1 %336, label %236, label %337

337:                                              ; preds = %334, %227
  %338 = fadd double %85, -1.000000e+00
  %339 = fcmp ult double %338, 0xC1D0000000000000
  %340 = fcmp ugt double %338, 0x41CFFFFFFF800000
  %341 = or i1 %340, %339
  %342 = bitcast double %338 to i64
  %343 = icmp eq i64 %342, -9223372036854775808
  %344 = or i1 %341, %343
  br i1 %344, label %369, label %345

345:                                              ; preds = %337
  %346 = fptosi double %338 to i32
  %347 = sitofp i32 %346 to double
  %348 = fcmp oeq double %338, %347
  br i1 %348, label %349, label %369

349:                                              ; preds = %345
  %350 = sext i32 %346 to i64
  %351 = shl nsw i64 %350, 1
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %353 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %352, align 8
  %354 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %353, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %349
  %356 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %353, i64 %351) #4
  br label %374

357:                                              ; preds = %349
  %358 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %359 = load i64*, i64** %358, align 8
  %360 = load i64*, i64** %9, align 8
  %361 = icmp eq i64* %359, %360
  br i1 %361, label %362, label %364

362:                                              ; preds = %357
  %363 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %364

364:                                              ; preds = %362, %357
  %365 = phi i64* [ %363, %362 ], [ %359, %357 ]
  %366 = ptrtoint i64* %365 to i64
  %367 = add i64 %366, 8
  %368 = inttoptr i64 %367 to i64*
  store i64* %368, i64** %358, align 8
  store i64 %351, i64* %365, align 8
  br label %374

369:                                              ; preds = %345, %337
  %370 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %230) #4
  %371 = load i64, i64* %370, align 8
  %372 = add i64 %371, 3
  %373 = inttoptr i64 %372 to double*
  store double %338, double* %373, align 1
  br label %374

374:                                              ; preds = %369, %364, %355
  %375 = phi i64* [ %370, %369 ], [ %356, %355 ], [ %365, %364 ]
  %376 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %229, i64* %375, i32 2) #4
  %377 = call i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64* nonnull %35, i64* %376, i1 zeroext true) #4
  %378 = trunc i16 %377 to i8
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %374
  %381 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %387

382:                                              ; preds = %374
  %383 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_117SetLengthPropertyEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEd(%"class.v8::internal::Isolate"* %2, i64* nonnull %35, double %338) #4
  %384 = icmp eq i64* %383, null
  %385 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %386 = select i1 %384, i64* %385, i64* %225
  br label %387

387:                                              ; preds = %175, %382, %380, %332, %326, %321, %314, %234, %92, %82, %90, %37
  %388 = phi i64* [ %38, %37 ], [ %93, %92 ], [ %91, %90 ], [ %83, %82 ], [ %381, %380 ], [ %235, %234 ], [ %322, %321 ], [ %315, %314 ], [ %333, %332 ], [ %327, %326 ], [ %386, %382 ], [ %198, %175 ]
  %389 = load i64, i64* %388, align 8
  %390 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %390, label %404, label %391

391:                                              ; preds = %387
  %392 = inttoptr i64 %8 to i64*
  %393 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %6, i64 0, i32 0
  %394 = load i64*, i64** %393, align 8
  store i64 %8, i64* %7, align 8
  %395 = load i32, i32* %11, align 8
  %396 = add nsw i32 %395, -1
  store i32 %396, i32* %11, align 8
  %397 = load i64*, i64** %9, align 8
  %398 = icmp eq i64* %397, %10
  br i1 %398, label %401, label %399

399:                                              ; preds = %391
  store i64* %10, i64** %9, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %400 = load i64*, i64** %393, align 8
  br label %401

401:                                              ; preds = %399, %391
  %402 = phi i64* [ %400, %399 ], [ %392, %391 ]
  %403 = phi i64* [ %10, %399 ], [ %394, %391 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %402, i64* %403) #4
  br label %404

404:                                              ; preds = %387, %401
  ret i64 %389
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal20Builtin_ArrayUnshiftEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL31Builtin_Impl_Stats_ArrayUnshiftEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

8:                                                ; preds = %3
  %9 = sext i32 %0 to i64
  %10 = tail call fastcc i64 @_ZN2v88internalL25Builtin_Impl_ArrayUnshiftENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %9, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  ret i64 %12
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL31Builtin_Impl_Stats_ArrayUnshiftEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = sext i32 %0 to i64
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 756) #4
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL31Builtin_Impl_Stats_ArrayUnshiftEiPmPNS0_7IsolateEE28trace_event_unique_atomic613 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #4
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL31Builtin_Impl_Stats_ArrayUnshiftEiPmPNS0_7IsolateEE28trace_event_unique_atomic613 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #4
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %38, i32 0) #4
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #4
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #4
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = call fastcc i64 @_ZN2v88internalL25Builtin_Impl_ArrayUnshiftENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %7, i64* %1, %"class.v8::internal::Isolate"* %2)
  %69 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %70 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %69, null
  br i1 %70, label %87, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %78 = load i8*, i8** %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.v8::TracingController"* %77 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %84 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %84, i64 5
  %86 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %85, align 8
  call void %86(%"class.v8::TracingController"* %77, i8* %78, i8* %80, i64 %82) #4
  br label %87

87:                                               ; preds = %67, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #4
  %88 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %89 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %88, align 8
  %90 = icmp eq %"class.v8::internal::RuntimeCallStats"* %89, null
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %89, %"class.v8::internal::RuntimeCallTimer"* %92) #4
  br label %93

93:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL25Builtin_Impl_ArrayUnshiftENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::BuiltinArguments", align 8
  %5 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %4, i64 0, i32 0, i32 0
  store i64 %0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %4, i64 0, i32 0, i32 1
  store i64* %1, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = ptrtoint i64* %1 to i64
  %16 = mul i64 %0, -8
  %17 = add i64 %16, 40
  %18 = add i64 %17, %15
  %19 = inttoptr i64 %18 to i64*
  %20 = trunc i64 %0 to i32
  %21 = add nsw i32 %20, -5
  call fastcc void @_ZN2v88internal12_GLOBAL__N_133MatchArrayElementsKindToArgumentsEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEEPNS0_16BuiltinArgumentsEii(%"class.v8::internal::Isolate"* %2, i64* %19, %"class.v8::internal::BuiltinArguments"* nonnull %4, i32 1, i32 %21)
  %22 = icmp eq i32 %21, 0
  %23 = load i64, i64* %19, align 8
  %24 = and i64 %23, -4294967296
  br i1 %22, label %25, label %31

25:                                               ; preds = %3
  %26 = add i64 %23, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %24, %29
  br label %58

31:                                               ; preds = %3
  %32 = add i64 %23, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %24, %35
  %37 = add i64 %36, 10
  %38 = inttoptr i64 %37 to i8*
  %39 = load i8, i8* %38, align 1
  %40 = lshr i8 %39, 2
  %41 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %42 = zext i8 %40 to i64
  %43 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %41, i64 %42
  %44 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %43, align 8
  %45 = bitcast %"class.v8::internal::ElementsAccessor"* %44 to i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)***
  %46 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)**, i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)** %46, i64 19
  %48 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::BuiltinArguments"*, i32)** %47, align 8
  %49 = call i64 %48(%"class.v8::internal::ElementsAccessor"* %44, i64* %19, %"class.v8::internal::BuiltinArguments"* nonnull %4, i32 %21) #4
  %50 = trunc i64 %49 to i8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %55, !prof !5

52:                                               ; preds = %31
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %54 = load i64, i64* %53, align 8
  br label %58

55:                                               ; preds = %31
  %56 = ashr i64 %49, 32
  %57 = shl nsw i64 %56, 1
  br label %58

58:                                               ; preds = %55, %52, %25
  %59 = phi i64 [ %30, %25 ], [ %57, %55 ], [ %54, %52 ]
  %60 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = inttoptr i64 %9 to i64*
  %63 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %64 = load i64*, i64** %63, align 8
  store i64 %9, i64* %8, align 8
  %65 = load i32, i32* %12, align 8
  %66 = add nsw i32 %65, -1
  store i32 %66, i32* %12, align 8
  %67 = load i64*, i64** %10, align 8
  %68 = icmp eq i64* %67, %11
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  store i64* %11, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %70 = load i64*, i64** %63, align 8
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi i64* [ %70, %69 ], [ %62, %61 ]
  %73 = phi i64* [ %11, %69 ], [ %64, %61 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %72, i64* %73) #4
  br label %74

74:                                               ; preds = %58, %71
  ret i64 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal19Builtin_ArrayConcatEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL30Builtin_Impl_Stats_ArrayConcatEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

8:                                                ; preds = %3
  %9 = sext i32 %0 to i64
  %10 = tail call fastcc i64 @_ZN2v88internalL24Builtin_Impl_ArrayConcatENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %9, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  ret i64 %12
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL30Builtin_Impl_Stats_ArrayConcatEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = sext i32 %0 to i64
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 751) #4
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL30Builtin_Impl_Stats_ArrayConcatEiPmPNS0_7IsolateEE29trace_event_unique_atomic1502 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #4
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL30Builtin_Impl_Stats_ArrayConcatEiPmPNS0_7IsolateEE29trace_event_unique_atomic1502 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #4
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %38, i32 0) #4
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #4
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #4
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = call fastcc i64 @_ZN2v88internalL24Builtin_Impl_ArrayConcatENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64 %7, i64* %1, %"class.v8::internal::Isolate"* %2)
  %69 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %70 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %69, null
  br i1 %70, label %87, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #4
  %78 = load i8*, i8** %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.v8::TracingController"* %77 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %84 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %84, i64 5
  %86 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %85, align 8
  call void %86(%"class.v8::TracingController"* %77, i8* %78, i8* %80, i64 %82) #4
  br label %87

87:                                               ; preds = %67, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #4
  %88 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %89 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %88, align 8
  %90 = icmp eq %"class.v8::internal::RuntimeCallStats"* %89, null
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %89, %"class.v8::internal::RuntimeCallTimer"* %92) #4
  br label %93

93:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL24Builtin_Impl_ArrayConcatENS0_16BuiltinArgumentsEPNS0_7IsolateE(i64, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %10 = alloca %"class.v8::internal::LookupIterator", align 8
  %11 = alloca %"struct.std::__1::__less.1207", align 1
  %12 = alloca %"class.v8::internal::LookupIterator", align 8
  %13 = alloca %"class.v8::internal::LookupIterator", align 8
  %14 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %15 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %16 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %17 = alloca %"class.std::__1::vector.1192", align 8
  %18 = alloca %"class.v8::internal::Handle.1149", align 8
  %19 = alloca %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", align 8
  %20 = alloca %"class.v8::internal::BuiltinArguments", align 8
  %21 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %20, i64 0, i32 0, i32 0
  store i64 %0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %20, i64 0, i32 0, i32 1
  store i64* %1, i64** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %24 = bitcast %"struct.v8::internal::HandleScopeData"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = bitcast i64** %22 to i64*
  %32 = ptrtoint i64* %1 to i64
  %33 = mul i64 %0, -8
  %34 = add i64 %33, 40
  %35 = add i64 %34, %32
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %3
  %41 = and i64 %37, -4294967296
  %42 = add i64 %37, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ugt i16 %49, 185
  br i1 %50, label %53, label %51

51:                                               ; preds = %40, %3
  %52 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* %36, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)) #4
  br label %53

53:                                               ; preds = %40, %51
  %54 = phi i64* [ %52, %51 ], [ %36, %40 ]
  %55 = icmp eq i64* %54, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %58 = load i64, i64* %57, align 8
  br label %1991

59:                                               ; preds = %53
  %60 = load i64, i64* %54, align 8
  store i64 %60, i64* %36, align 8
  %61 = load i64, i64* %54, align 8
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %145, label %64, !prof !6

64:                                               ; preds = %59
  %65 = and i64 %61, -4294967296
  %66 = add i64 %61, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 1085
  br i1 %74, label %75, label %145, !prof !2

75:                                               ; preds = %64
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %65, %77
  %79 = add i64 %78, 15
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, -4294967296
  %85 = add i64 %83, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = add i64 %89, 19
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %84, %93
  %95 = add i64 %94, 315
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %84, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %75
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #4
  %105 = load i64, i64* %104, align 8
  br label %118

106:                                              ; preds = %75
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = load i64*, i64** %26, align 8
  %110 = icmp eq i64* %108, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %113

113:                                              ; preds = %111, %106
  %114 = phi i64* [ %112, %111 ], [ %108, %106 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %107, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %103, %113
  %119 = phi i64 [ %105, %103 ], [ %99, %113 ]
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %81, %120
  br i1 %121, label %122, label %145, !prof !2

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 607
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 11
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 2
  br i1 %128, label %129, label %145, !prof !2

129:                                              ; preds = %122
  %130 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_116Fast_ArrayConcatEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::BuiltinArguments"* nonnull %20)
  %131 = icmp eq i64* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  %133 = load i64, i64* %130, align 8
  br label %1991

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 5
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = trunc i64 %138 to i32
  %140 = trunc i64 %136 to i32
  %141 = icmp eq i32 %139, %140
  br i1 %141, label %145, label %142

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %144 = load i64, i64* %143, align 8
  br label %1991

145:                                              ; preds = %134, %59, %64, %118, %122
  %146 = call i64* @_ZN2v88internal6Object23ArraySpeciesConstructorEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %54) #4
  %147 = icmp eq i64* %146, null
  br i1 %147, label %148, label %151

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %150 = load i64, i64* %149, align 8
  br label %1991

151:                                              ; preds = %145
  %152 = load i64, i64* %146, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, -4294967296
  %156 = add i64 %154, -1
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %155, %159
  %161 = add i64 %160, 19
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %155, %164
  %166 = add i64 %165, 179
  %167 = inttoptr i64 %166 to i32*
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = zext i32 %168 to i64
  %170 = or i64 %155, %169
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %172 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %173 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %172, null
  br i1 %173, label %177, label %174

174:                                              ; preds = %151
  %175 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %172, i64 %170) #4
  %176 = load i64, i64* %175, align 8
  br label %189

177:                                              ; preds = %151
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = load i64*, i64** %26, align 8
  %181 = icmp eq i64* %179, %180
  br i1 %181, label %182, label %184

182:                                              ; preds = %177
  %183 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %184

184:                                              ; preds = %182, %177
  %185 = phi i64* [ %183, %182 ], [ %179, %177 ]
  %186 = ptrtoint i64* %185 to i64
  %187 = add i64 %186, 8
  %188 = inttoptr i64 %187 to i64*
  store i64* %188, i64** %178, align 8
  store i64 %170, i64* %185, align 8
  br label %189

189:                                              ; preds = %174, %184
  %190 = phi i64 [ %176, %174 ], [ %170, %184 ]
  %191 = trunc i64 %152 to i32
  %192 = trunc i64 %190 to i32
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %194, label %210

194:                                              ; preds = %189
  %195 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_116Fast_ArrayConcatEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::BuiltinArguments"* nonnull %20)
  %196 = icmp eq i64* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %194
  %198 = load i64, i64* %195, align 8
  br label %1991

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 5
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %203 to i32
  %205 = trunc i64 %201 to i32
  %206 = icmp eq i32 %204, %205
  br i1 %206, label %210, label %207

207:                                              ; preds = %199
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %209 = load i64, i64* %208, align 8
  br label %1991

210:                                              ; preds = %199, %189
  %211 = load i64, i64* %21, align 8
  %212 = trunc i64 %211 to i32
  %213 = add i32 %212, -4
  %214 = load i64, i64* %146, align 8
  %215 = load i64, i64* %153, align 8
  %216 = add i64 %215, 179
  %217 = inttoptr i64 %216 to i32*
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = trunc i64 %214 to i32
  %220 = icmp eq i32 %218, %219
  %221 = icmp sgt i32 %213, 0
  br i1 %221, label %222, label %575

222:                                              ; preds = %210
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %224 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 5
  %225 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %226 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %23, i64 0, i32 0
  %227 = sext i32 %213 to i64
  br label %228

228:                                              ; preds = %573, %222
  %229 = phi i64 [ 0, %222 ], [ %234, %573 ]
  %230 = phi i8 [ 0, %222 ], [ %560, %573 ]
  %231 = phi i32 [ 0, %222 ], [ %559, %573 ]
  %232 = phi i32 [ 0, %222 ], [ %558, %573 ]
  %233 = phi i32 [ 0, %222 ], [ %557, %573 ]
  %234 = add nuw i64 %229, 1024
  %235 = load i64, i64* %24, align 8
  %236 = load i64*, i64** %26, align 8
  %237 = load i32, i32* %28, align 8
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %28, align 8
  %239 = icmp slt i32 %233, %213
  %240 = sext i32 %233 to i64
  %241 = icmp sgt i64 %234, %240
  %242 = and i1 %239, %241
  br i1 %242, label %243, label %556

243:                                              ; preds = %228, %544
  %244 = phi i64 [ %550, %544 ], [ %240, %228 ]
  %245 = phi i8 [ %547, %544 ], [ %230, %228 ]
  %246 = phi i32 [ %548, %544 ], [ %231, %228 ]
  %247 = phi i32 [ %549, %544 ], [ %232, %228 ]
  %248 = load i64, i64* %21, align 8
  %249 = shl i64 %244, 32
  %250 = sub i64 -21474836480, %249
  %251 = ashr exact i64 %250, 32
  %252 = add i64 %248, %251
  %253 = shl nsw i64 %252, 3
  %254 = load i64, i64* %31, align 8
  %255 = sub i64 %254, %253
  %256 = inttoptr i64 %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = and i64 %257, 1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %544, label %260

260:                                              ; preds = %243
  %261 = and i64 %257, -4294967296
  %262 = add i64 %257, -1
  %263 = inttoptr i64 %262 to i32*
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = zext i32 %264 to i64
  %266 = or i64 %261, %265
  %267 = add i64 %266, 7
  %268 = inttoptr i64 %267 to i16*
  %269 = load atomic i16, i16* %268 monotonic, align 2
  %270 = icmp eq i16 %269, 1085
  br i1 %270, label %271, label %533

271:                                              ; preds = %260
  %272 = add i64 %257, 11
  %273 = inttoptr i64 %272 to i32*
  %274 = load i32, i32* %273, align 4
  %275 = zext i32 %274 to i64
  %276 = and i64 %275, 1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %281

278:                                              ; preds = %271
  %279 = ashr i32 %274, 1
  %280 = sitofp i32 %279 to double
  br label %286

281:                                              ; preds = %271
  %282 = or i64 %261, %275
  %283 = add i64 %282, 3
  %284 = inttoptr i64 %283 to double*
  %285 = load double, double* %284, align 1
  br label %286

286:                                              ; preds = %281, %278
  %287 = phi double [ %280, %278 ], [ %285, %281 ]
  %288 = fptoui double %287 to i32
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %314, label %290

290:                                              ; preds = %286
  %291 = load atomic i32, i32* %263 monotonic, align 4
  %292 = zext i32 %291 to i64
  %293 = or i64 %261, %292
  %294 = add i64 %293, 10
  %295 = inttoptr i64 %294 to i8*
  %296 = load i8, i8* %295, align 1
  %297 = lshr i8 %296, 2
  switch i8 %297, label %300 [
    i8 1, label %301
    i8 5, label %298
    i8 3, label %299
  ]

298:                                              ; preds = %290
  br label %301

299:                                              ; preds = %290
  br label %301

300:                                              ; preds = %290
  br label %301

301:                                              ; preds = %300, %299, %298, %290
  %302 = phi i8 [ 4, %298 ], [ 2, %299 ], [ %297, %300 ], [ 0, %290 ]
  %303 = add nsw i8 %302, -6
  %304 = icmp ult i8 %303, 6
  %305 = select i1 %304, i8 2, i8 %302
  %306 = call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %245, i8 zeroext %305) #4
  %307 = select i1 %306, i8 %305, i8 %245
  %308 = load i64, i64* %256, align 8
  %309 = and i64 %308, -4294967296
  %310 = add i64 %308, 11
  %311 = inttoptr i64 %310 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = zext i32 %312 to i64
  br label %314

314:                                              ; preds = %301, %286
  %315 = phi i64 [ %313, %301 ], [ %275, %286 ]
  %316 = phi i32 [ %312, %301 ], [ %274, %286 ]
  %317 = phi i64 [ %309, %301 ], [ %261, %286 ]
  %318 = phi i64 [ %308, %301 ], [ %257, %286 ]
  %319 = phi i8 [ %307, %301 ], [ %245, %286 ]
  %320 = and i64 %315, 1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %325

322:                                              ; preds = %314
  %323 = ashr i32 %316, 1
  %324 = sitofp i32 %323 to double
  br label %330

325:                                              ; preds = %314
  %326 = or i64 %317, %315
  %327 = add i64 %326, 3
  %328 = inttoptr i64 %327 to double*
  %329 = load double, double* %328, align 1
  br label %330

330:                                              ; preds = %325, %322
  %331 = phi double [ %324, %322 ], [ %329, %325 ]
  %332 = fptoui double %331 to i32
  %333 = add i64 %318, -1
  %334 = inttoptr i64 %333 to i32*
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = zext i32 %335 to i64
  %337 = or i64 %317, %336
  %338 = add i64 %337, 10
  %339 = inttoptr i64 %338 to i8*
  %340 = load i8, i8* %339, align 1
  %341 = lshr i8 %340, 2
  switch i8 %341, label %531 [
    i8 0, label %342
    i8 1, label %342
    i8 2, label %342
    i8 10, label %342
    i8 8, label %342
    i8 6, label %342
    i8 11, label %342
    i8 9, label %342
    i8 7, label %342
    i8 3, label %342
    i8 4, label %384
    i8 5, label %384
    i8 12, label %433
    i8 17, label %544
    i8 18, label %544
    i8 19, label %544
    i8 20, label %544
    i8 21, label %544
    i8 22, label %544
    i8 23, label %544
    i8 24, label %544
    i8 25, label %544
    i8 26, label %544
    i8 27, label %544
    i8 28, label %544
    i8 29, label %544
    i8 30, label %544
    i8 31, label %544
    i8 32, label %544
    i8 33, label %544
    i8 34, label %544
    i8 35, label %544
    i8 36, label %544
    i8 37, label %544
    i8 38, label %544
    i8 39, label %480
    i8 13, label %481
    i8 14, label %481
    i8 15, label %481
    i8 16, label %481
  ]

342:                                              ; preds = %330, %330, %330, %330, %330, %330, %330, %330, %330, %330
  %343 = icmp sgt i32 %332, 0
  br i1 %343, label %344, label %531

344:                                              ; preds = %342
  %345 = add i64 %318, 7
  %346 = inttoptr i64 %345 to i32*
  %347 = load i32, i32* %346, align 4
  %348 = zext i32 %347 to i64
  %349 = or i64 %317, %348
  %350 = add i64 %349, 7
  %351 = load i64, i64* %224, align 8
  %352 = trunc i64 %351 to i32
  %353 = zext i32 %332 to i64
  %354 = and i64 %353, 1
  %355 = icmp eq i32 %332, 1
  br i1 %355, label %482, label %356

356:                                              ; preds = %344
  %357 = sub nsw i64 %353, %354
  br label %358

358:                                              ; preds = %358, %356
  %359 = phi i64 [ 0, %356 ], [ %381, %358 ]
  %360 = phi i32 [ 0, %356 ], [ %380, %358 ]
  %361 = phi i64 [ %357, %356 ], [ %382, %358 ]
  %362 = trunc i64 %359 to i32
  %363 = shl i32 %362, 2
  %364 = sext i32 %363 to i64
  %365 = add i64 %350, %364
  %366 = inttoptr i64 %365 to i32*
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = icmp ne i32 %367, %352
  %369 = zext i1 %368 to i32
  %370 = add nuw nsw i32 %360, %369
  %371 = trunc i64 %359 to i32
  %372 = shl i32 %371, 2
  %373 = or i32 %372, 4
  %374 = sext i32 %373 to i64
  %375 = add i64 %350, %374
  %376 = inttoptr i64 %375 to i32*
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = icmp ne i32 %377, %352
  %379 = zext i1 %378 to i32
  %380 = add nuw nsw i32 %370, %379
  %381 = add nuw nsw i64 %359, 2
  %382 = add i64 %361, -2
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %482, label %358

384:                                              ; preds = %330, %330
  %385 = add i64 %318, 7
  %386 = inttoptr i64 %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = zext i32 %387 to i64
  %389 = or i64 %317, %388
  %390 = add i64 %389, -1
  %391 = inttoptr i64 %390 to i32*
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = zext i32 %392 to i64
  %394 = or i64 %317, %393
  %395 = add i64 %394, 7
  %396 = inttoptr i64 %395 to i16*
  %397 = load atomic i16, i16* %396 monotonic, align 2
  %398 = add i16 %397, -119
  %399 = icmp ugt i16 %398, 12
  %400 = icmp sgt i32 %332, 0
  %401 = and i1 %400, %399
  br i1 %401, label %402, label %531

402:                                              ; preds = %384
  %403 = zext i32 %332 to i64
  %404 = and i64 %403, 1
  %405 = icmp eq i32 %332, 1
  br i1 %405, label %497, label %406

406:                                              ; preds = %402
  %407 = sub nsw i64 %403, %404
  br label %408

408:                                              ; preds = %408, %406
  %409 = phi i64 [ 0, %406 ], [ %430, %408 ]
  %410 = phi i32 [ 0, %406 ], [ %429, %408 ]
  %411 = phi i64 [ %407, %406 ], [ %431, %408 ]
  %412 = shl i64 %409, 3
  %413 = and i64 %412, 4294967280
  %414 = or i64 %413, 7
  %415 = add i64 %414, %389
  %416 = inttoptr i64 %415 to i64*
  %417 = load i64, i64* %416, align 1
  %418 = icmp ne i64 %417, -2251799814209537
  %419 = zext i1 %418 to i32
  %420 = add nuw nsw i32 %410, %419
  %421 = shl i64 %409, 3
  %422 = and i64 %421, 4294967280
  %423 = or i64 %422, 15
  %424 = add i64 %423, %389
  %425 = inttoptr i64 %424 to i64*
  %426 = load i64, i64* %425, align 1
  %427 = icmp ne i64 %426, -2251799814209537
  %428 = zext i1 %427 to i32
  %429 = add nuw nsw i32 %420, %428
  %430 = add nuw nsw i64 %409, 2
  %431 = add i64 %411, -2
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %497, label %408

433:                                              ; preds = %330
  %434 = add i64 %318, 7
  %435 = inttoptr i64 %434 to i32*
  %436 = load i32, i32* %435, align 4
  %437 = zext i32 %436 to i64
  %438 = or i64 %317, %437
  %439 = add i64 %438, 15
  %440 = inttoptr i64 %439 to i32*
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = ashr i32 %441, 1
  %443 = sext i32 %442 to i64
  %444 = icmp eq i32 %442, 0
  br i1 %444, label %531, label %445

445:                                              ; preds = %433
  %446 = add i64 %438, 7
  %447 = load i64, i64* %223, align 8
  %448 = trunc i64 %447 to i32
  %449 = and i64 %443, 1
  %450 = icmp eq i32 %442, 1
  br i1 %450, label %512, label %451

451:                                              ; preds = %445
  %452 = sub nsw i64 %443, %449
  br label %453

453:                                              ; preds = %2014, %451
  %454 = phi i32 [ 0, %451 ], [ %2015, %2014 ]
  %455 = phi i64 [ 0, %451 ], [ %2016, %2014 ]
  %456 = phi i64 [ %452, %451 ], [ %2017, %2014 ]
  %457 = mul i64 %455, 51539607552
  %458 = add i64 %457, 68719476736
  %459 = ashr exact i64 %458, 32
  %460 = add i64 %446, %459
  %461 = inttoptr i64 %460 to i32*
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = icmp eq i32 %462, %448
  br i1 %463, label %470, label %464

464:                                              ; preds = %453
  %465 = load i64, i64* %224, align 8
  %466 = trunc i64 %465 to i32
  %467 = icmp ne i32 %462, %466
  %468 = zext i1 %467 to i32
  %469 = add nsw i32 %454, %468
  br label %470

470:                                              ; preds = %464, %453
  %471 = phi i32 [ %454, %453 ], [ %469, %464 ]
  %472 = or i64 %455, 1
  %473 = mul i64 %472, 51539607552
  %474 = add i64 %473, 68719476736
  %475 = ashr exact i64 %474, 32
  %476 = add i64 %446, %475
  %477 = inttoptr i64 %476 to i32*
  %478 = load atomic i32, i32* %477 monotonic, align 4
  %479 = icmp eq i32 %478, %448
  br i1 %479, label %2014, label %2008

480:                                              ; preds = %330
  br label %544

481:                                              ; preds = %330, %330, %330, %330
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  unreachable

482:                                              ; preds = %358, %344
  %483 = phi i32 [ undef, %344 ], [ %380, %358 ]
  %484 = phi i64 [ 0, %344 ], [ %381, %358 ]
  %485 = phi i32 [ 0, %344 ], [ %380, %358 ]
  %486 = icmp eq i64 %354, 0
  br i1 %486, label %531, label %487

487:                                              ; preds = %482
  %488 = trunc i64 %484 to i32
  %489 = shl i32 %488, 2
  %490 = sext i32 %489 to i64
  %491 = add i64 %350, %490
  %492 = inttoptr i64 %491 to i32*
  %493 = load atomic i32, i32* %492 monotonic, align 4
  %494 = icmp ne i32 %493, %352
  %495 = zext i1 %494 to i32
  %496 = add nuw nsw i32 %485, %495
  br label %531

497:                                              ; preds = %408, %402
  %498 = phi i32 [ undef, %402 ], [ %429, %408 ]
  %499 = phi i64 [ 0, %402 ], [ %430, %408 ]
  %500 = phi i32 [ 0, %402 ], [ %429, %408 ]
  %501 = icmp eq i64 %404, 0
  br i1 %501, label %531, label %502

502:                                              ; preds = %497
  %503 = shl i64 %499, 3
  %504 = and i64 %503, 4294967288
  %505 = or i64 %504, 7
  %506 = add i64 %505, %389
  %507 = inttoptr i64 %506 to i64*
  %508 = load i64, i64* %507, align 1
  %509 = icmp ne i64 %508, -2251799814209537
  %510 = zext i1 %509 to i32
  %511 = add nuw nsw i32 %500, %510
  br label %531

512:                                              ; preds = %2014, %445
  %513 = phi i32 [ undef, %445 ], [ %2015, %2014 ]
  %514 = phi i32 [ 0, %445 ], [ %2015, %2014 ]
  %515 = phi i64 [ 0, %445 ], [ %2016, %2014 ]
  %516 = icmp eq i64 %449, 0
  br i1 %516, label %531, label %517

517:                                              ; preds = %512
  %518 = mul i64 %515, 51539607552
  %519 = add i64 %518, 68719476736
  %520 = ashr exact i64 %519, 32
  %521 = add i64 %446, %520
  %522 = inttoptr i64 %521 to i32*
  %523 = load atomic i32, i32* %522 monotonic, align 4
  %524 = icmp eq i32 %523, %448
  br i1 %524, label %531, label %525

525:                                              ; preds = %517
  %526 = load i64, i64* %224, align 8
  %527 = trunc i64 %526 to i32
  %528 = icmp ne i32 %523, %527
  %529 = zext i1 %528 to i32
  %530 = add nsw i32 %514, %529
  br label %531

531:                                              ; preds = %512, %517, %525, %502, %497, %487, %482, %433, %384, %342, %330
  %532 = phi i32 [ 0, %330 ], [ 0, %384 ], [ 0, %342 ], [ 0, %433 ], [ %483, %482 ], [ %496, %487 ], [ %498, %497 ], [ %511, %502 ], [ %513, %512 ], [ %514, %517 ], [ %530, %525 ]
  br label %544

533:                                              ; preds = %260
  %534 = load atomic i32, i32* %263 monotonic, align 4
  %535 = zext i32 %534 to i64
  %536 = or i64 %261, %535
  %537 = add i64 %536, 7
  %538 = inttoptr i64 %537 to i16*
  %539 = load atomic i16, i16* %538 monotonic, align 2
  %540 = icmp eq i16 %539, 66
  %541 = select i1 %540, i8 4, i8 2
  %542 = call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %245, i8 zeroext %541) #4
  %543 = select i1 %542, i8 %541, i8 %245
  br label %544

544:                                              ; preds = %533, %531, %480, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %330, %243
  %545 = phi i32 [ 1, %533 ], [ %532, %531 ], [ 0, %480 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ %332, %330 ], [ 1, %243 ]
  %546 = phi i32 [ 1, %533 ], [ %288, %531 ], [ %288, %480 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ %288, %330 ], [ 1, %243 ]
  %547 = phi i8 [ %543, %533 ], [ %319, %531 ], [ %319, %480 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %319, %330 ], [ %245, %243 ]
  %548 = call i32 @llvm.uadd.sat.i32(i32 %246, i32 %546) #4
  %549 = call i32 @llvm.uadd.sat.i32(i32 %247, i32 %545) #4
  %550 = add nsw i64 %244, 1
  %551 = icmp slt i64 %550, %227
  %552 = icmp slt i64 %550, %234
  %553 = and i1 %551, %552
  br i1 %553, label %243, label %554

554:                                              ; preds = %544
  %555 = trunc i64 %550 to i32
  br label %556

556:                                              ; preds = %554, %228
  %557 = phi i32 [ %233, %228 ], [ %555, %554 ]
  %558 = phi i32 [ %232, %228 ], [ %549, %554 ]
  %559 = phi i32 [ %231, %228 ], [ %548, %554 ]
  %560 = phi i8 [ %230, %228 ], [ %547, %554 ]
  br i1 %225, label %573, label %561

561:                                              ; preds = %556
  %562 = inttoptr i64 %235 to i64*
  %563 = load i64*, i64** %226, align 8
  store i64 %235, i64* %24, align 8
  %564 = load i32, i32* %28, align 8
  %565 = add nsw i32 %564, -1
  store i32 %565, i32* %28, align 8
  %566 = load i64*, i64** %26, align 8
  %567 = icmp eq i64* %566, %236
  br i1 %567, label %570, label %568

568:                                              ; preds = %561
  store i64* %236, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %569 = load i64*, i64** %226, align 8
  br label %570

570:                                              ; preds = %568, %561
  %571 = phi i64* [ %569, %568 ], [ %562, %561 ]
  %572 = phi i64* [ %236, %568 ], [ %563, %561 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %571, i64* %572) #4
  br label %573

573:                                              ; preds = %570, %556
  %574 = icmp slt i32 %557, %213
  br i1 %574, label %228, label %575

575:                                              ; preds = %573, %210
  %576 = phi i32 [ 0, %210 ], [ %558, %573 ]
  %577 = phi i32 [ 0, %210 ], [ %559, %573 ]
  %578 = phi i8 [ 0, %210 ], [ %560, %573 ]
  %579 = xor i1 %220, true
  %580 = shl i32 %576, 1
  %581 = icmp ult i32 %580, %577
  %582 = or i1 %581, %579
  br i1 %582, label %763, label %583

583:                                              ; preds = %575
  %584 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 606
  %585 = load i64, i64* %584, align 8
  %586 = add i64 %585, 11
  %587 = inttoptr i64 %586 to i32*
  %588 = load i32, i32* %587, align 4
  %589 = icmp eq i32 %588, 2
  %590 = icmp eq i8 %578, 4
  %591 = and i1 %590, %589
  br i1 %591, label %592, label %757

592:                                              ; preds = %583
  %593 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %594 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %595 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %594, i32 %577, i8 zeroext 0) #4
  %596 = icmp ne i32 %577, 0
  %597 = and i1 %221, %596
  br i1 %597, label %598, label %753

598:                                              ; preds = %592
  %599 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 5
  %600 = zext i32 %213 to i64
  br label %601

601:                                              ; preds = %749, %598
  %602 = phi i64 [ 0, %598 ], [ %751, %749 ]
  %603 = phi i32 [ 0, %598 ], [ %750, %749 ]
  %604 = load i64, i64* %21, align 8
  %605 = shl i64 %602, 32
  %606 = sub i64 -21474836480, %605
  %607 = ashr exact i64 %606, 32
  %608 = add i64 %607, %604
  %609 = shl nsw i64 %608, 3
  %610 = load i64, i64* %31, align 8
  %611 = sub i64 %610, %609
  %612 = inttoptr i64 %611 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = and i64 %613, 1
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %616, label %627

616:                                              ; preds = %601
  %617 = load i64, i64* %595, align 8
  %618 = trunc i64 %613 to i32
  %619 = ashr i32 %618, 1
  %620 = sitofp i32 %619 to double
  %621 = shl nsw i32 %603, 3
  %622 = or i32 %621, 7
  %623 = sext i32 %622 to i64
  %624 = add i64 %617, %623
  %625 = inttoptr i64 %624 to double*
  store double %620, double* %625, align 1
  %626 = add nsw i32 %603, 1
  br label %749

627:                                              ; preds = %601
  %628 = and i64 %613, -4294967296
  %629 = add i64 %613, -1
  %630 = inttoptr i64 %629 to i32*
  %631 = load atomic i32, i32* %630 monotonic, align 4
  %632 = zext i32 %631 to i64
  %633 = or i64 %628, %632
  %634 = add i64 %633, 7
  %635 = inttoptr i64 %634 to i16*
  %636 = load atomic i16, i16* %635 monotonic, align 2
  %637 = icmp eq i16 %636, 66
  br i1 %637, label %638, label %651

638:                                              ; preds = %627
  %639 = load i64, i64* %595, align 8
  %640 = add i64 %613, 3
  %641 = inttoptr i64 %640 to double*
  %642 = load double, double* %641, align 1
  %643 = shl nsw i32 %603, 3
  %644 = fcmp uno double %642, 0.000000e+00
  %645 = or i32 %643, 7
  %646 = sext i32 %645 to i64
  %647 = add i64 %639, %646
  %648 = inttoptr i64 %647 to double*
  %649 = select i1 %644, double 0x7FF8000000000000, double %642
  store double %649, double* %648, align 1
  %650 = add nsw i32 %603, 1
  br label %749

651:                                              ; preds = %627
  %652 = add i64 %613, 11
  %653 = inttoptr i64 %652 to i32*
  %654 = load i32, i32* %653, align 4
  %655 = zext i32 %654 to i64
  %656 = and i64 %655, 1
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %658, label %661

658:                                              ; preds = %651
  %659 = ashr i32 %654, 1
  %660 = sitofp i32 %659 to double
  br label %666

661:                                              ; preds = %651
  %662 = or i64 %628, %655
  %663 = add i64 %662, 3
  %664 = inttoptr i64 %663 to double*
  %665 = load double, double* %664, align 1
  br label %666

666:                                              ; preds = %661, %658
  %667 = phi double [ %660, %658 ], [ %665, %661 ]
  %668 = fptoui double %667 to i32
  %669 = load atomic i32, i32* %630 monotonic, align 4
  %670 = zext i32 %669 to i64
  %671 = or i64 %628, %670
  %672 = add i64 %671, 10
  %673 = inttoptr i64 %672 to i8*
  %674 = load i8, i8* %673, align 1
  %675 = lshr i8 %674, 2
  switch i8 %675, label %744 [
    i8 5, label %676
    i8 4, label %676
    i8 1, label %710
    i8 0, label %710
    i8 3, label %749
    i8 11, label %749
    i8 9, label %749
    i8 7, label %749
    i8 2, label %749
    i8 10, label %749
    i8 8, label %749
    i8 6, label %749
    i8 12, label %749
    i8 39, label %749
  ]

676:                                              ; preds = %666, %666
  %677 = icmp eq i32 %668, 0
  br i1 %677, label %749, label %678

678:                                              ; preds = %676
  %679 = add i64 %613, 7
  %680 = inttoptr i64 %679 to i32*
  %681 = load i32, i32* %680, align 4
  %682 = zext i32 %681 to i64
  %683 = or i64 %628, %682
  %684 = sext i32 %603 to i64
  br label %685

685:                                              ; preds = %695, %678
  %686 = phi i64 [ %684, %678 ], [ %707, %695 ]
  %687 = phi i32 [ 0, %678 ], [ %708, %695 ]
  %688 = shl nsw i32 %687, 3
  %689 = or i32 %688, 7
  %690 = sext i32 %689 to i64
  %691 = add i64 %683, %690
  %692 = inttoptr i64 %691 to i64*
  %693 = load i64, i64* %692, align 1
  %694 = icmp eq i64 %693, -2251799814209537
  br i1 %694, label %760, label %695

695:                                              ; preds = %685
  %696 = inttoptr i64 %691 to double*
  %697 = load double, double* %696, align 1
  %698 = load i64, i64* %595, align 8
  %699 = trunc i64 %686 to i32
  %700 = shl nsw i32 %699, 3
  %701 = fcmp uno double %697, 0.000000e+00
  %702 = or i32 %700, 7
  %703 = sext i32 %702 to i64
  %704 = add i64 %698, %703
  %705 = inttoptr i64 %704 to double*
  %706 = select i1 %701, double 0x7FF8000000000000, double %697
  store double %706, double* %705, align 1
  %707 = add nsw i64 %686, 1
  %708 = add nuw i32 %687, 1
  %709 = icmp eq i32 %708, %668
  br i1 %709, label %745, label %685

710:                                              ; preds = %666, %666
  %711 = icmp eq i32 %668, 0
  br i1 %711, label %749, label %712

712:                                              ; preds = %710
  %713 = add i64 %613, 7
  %714 = inttoptr i64 %713 to i32*
  %715 = load i32, i32* %714, align 4
  %716 = zext i32 %715 to i64
  %717 = or i64 %628, %716
  %718 = load i64, i64* %599, align 8
  %719 = add i64 %717, 7
  %720 = trunc i64 %718 to i32
  %721 = sext i32 %603 to i64
  br label %722

722:                                              ; preds = %731, %712
  %723 = phi i64 [ %721, %712 ], [ %741, %731 ]
  %724 = phi i32 [ 0, %712 ], [ %742, %731 ]
  %725 = shl i32 %724, 2
  %726 = sext i32 %725 to i64
  %727 = add i64 %719, %726
  %728 = inttoptr i64 %727 to i32*
  %729 = load atomic i32, i32* %728 monotonic, align 4
  %730 = icmp eq i32 %729, %720
  br i1 %730, label %760, label %731

731:                                              ; preds = %722
  %732 = ashr i32 %729, 1
  %733 = load i64, i64* %595, align 8
  %734 = sitofp i32 %732 to double
  %735 = trunc i64 %723 to i32
  %736 = shl nsw i32 %735, 3
  %737 = or i32 %736, 7
  %738 = sext i32 %737 to i64
  %739 = add i64 %733, %738
  %740 = inttoptr i64 %739 to double*
  store double %734, double* %740, align 1
  %741 = add nsw i64 %723, 1
  %742 = add nuw i32 %724, 1
  %743 = icmp eq i32 %742, %668
  br i1 %743, label %747, label %722

744:                                              ; preds = %666
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  unreachable

745:                                              ; preds = %695
  %746 = trunc i64 %707 to i32
  br label %749

747:                                              ; preds = %731
  %748 = trunc i64 %741 to i32
  br label %749

749:                                              ; preds = %747, %745, %710, %676, %666, %666, %666, %666, %666, %666, %666, %666, %666, %666, %638, %616
  %750 = phi i32 [ %626, %616 ], [ %650, %638 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %666 ], [ %603, %676 ], [ %603, %710 ], [ %746, %745 ], [ %748, %747 ]
  %751 = add nuw nsw i64 %602, 1
  %752 = icmp eq i64 %751, %600
  br i1 %752, label %753, label %601

753:                                              ; preds = %749, %592
  %754 = phi i32 [ 0, %592 ], [ %750, %749 ]
  %755 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %593, i64* %595, i8 zeroext 4, i32 %754, i8 zeroext 0) #4
  %756 = load i64, i64* %755, align 8
  br label %1991

757:                                              ; preds = %583
  br i1 %589, label %758, label %763

758:                                              ; preds = %757
  %759 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  br label %760

760:                                              ; preds = %722, %685, %758
  %761 = phi %"class.v8::internal::FactoryBase"* [ %759, %758 ], [ %594, %685 ], [ %594, %722 ]
  %762 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %761, i32 %577, i8 zeroext 0) #4
  br label %793

763:                                              ; preds = %757, %575
  br i1 %220, label %764, label %766

764:                                              ; preds = %763
  %765 = call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %2, i32 %576, i8 zeroext 0, i32 0) #4
  br label %793

766:                                              ; preds = %763
  %767 = bitcast %"class.v8::internal::Handle.1149"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %767) #4
  %768 = getelementptr inbounds %"class.v8::internal::Handle.1149", %"class.v8::internal::Handle.1149"* %18, i64 0, i32 0, i32 0
  %769 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %770 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %769, null
  br i1 %770, label %773, label %771

771:                                              ; preds = %766
  %772 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %769, i64 0) #4
  br label %785

773:                                              ; preds = %766
  %774 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %775 = load i64*, i64** %774, align 8
  %776 = load i64*, i64** %26, align 8
  %777 = icmp eq i64* %775, %776
  br i1 %777, label %778, label %780

778:                                              ; preds = %773
  %779 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %780

780:                                              ; preds = %778, %773
  %781 = phi i64* [ %779, %778 ], [ %775, %773 ]
  %782 = ptrtoint i64* %781 to i64
  %783 = add i64 %782, 8
  %784 = inttoptr i64 %783 to i64*
  store i64* %784, i64** %774, align 8
  store i64 0, i64* %781, align 8
  br label %785

785:                                              ; preds = %780, %771
  %786 = phi i64* [ %772, %771 ], [ %781, %780 ]
  store i64* %786, i64** %768, align 8
  %787 = call i64* @_ZN2v88internal9Execution3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %2, i64* nonnull %146, i64* nonnull %146, i32 1, %"class.v8::internal::Handle.1149"* nonnull %18) #4
  %788 = icmp eq i64* %787, null
  br i1 %788, label %790, label %789

789:                                              ; preds = %785
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %767) #4
  br label %793

790:                                              ; preds = %785
  %791 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %792 = load i64, i64* %791, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %767) #4
  br label %1991

793:                                              ; preds = %789, %764, %760
  %794 = phi i32 [ 1, %760 ], [ 0, %764 ], [ 0, %789 ]
  %795 = phi i64* [ %762, %760 ], [ %765, %764 ], [ %787, %789 ]
  %796 = bitcast %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %796) #4
  %797 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %797, align 8
  %798 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 36
  %799 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %798, align 8
  %800 = load i64, i64* %795, align 8
  %801 = call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %799, i64 %800) #4
  %802 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19, i64 0, i32 1, i32 0, i32 0
  store i64* %801, i64** %802, align 8
  %803 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19, i64 0, i32 2
  store i32 0, i32* %803, align 8
  %804 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19, i64 0, i32 3
  %805 = load i64, i64* %795, align 8
  %806 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %807 = load i64, i64* %806, align 8
  %808 = add i64 %805, -1
  %809 = inttoptr i64 %808 to i32*
  %810 = load atomic i32, i32* %809 monotonic, align 4
  %811 = and i64 %807, 4294967295
  %812 = icmp eq i64 %811, 0
  call void @llvm.assume(i1 %812) #4
  %813 = zext i32 %810 to i64
  %814 = or i64 %807, %813
  %815 = add i64 %814, 7
  %816 = inttoptr i64 %815 to i16*
  %817 = load atomic i16, i16* %816 monotonic, align 2
  %818 = add i16 %817, -119
  %819 = icmp ult i16 %818, 13
  %820 = zext i1 %819 to i32
  %821 = shl nuw nsw i32 %820, 2
  %822 = or i32 %821, %794
  %823 = load atomic i32, i32* %809 monotonic, align 4
  %824 = zext i32 %823 to i64
  %825 = or i64 %807, %824
  %826 = add i64 %825, 7
  %827 = inttoptr i64 %826 to i16*
  %828 = load atomic i16, i16* %827 monotonic, align 2
  %829 = add i16 %828, -119
  %830 = icmp ult i16 %829, 13
  br i1 %830, label %849, label %831

831:                                              ; preds = %793
  %832 = load atomic i32, i32* %809 monotonic, align 4
  %833 = zext i32 %832 to i64
  %834 = or i64 %807, %833
  %835 = add i64 %834, 7
  %836 = inttoptr i64 %835 to i16*
  %837 = load atomic i16, i16* %836 monotonic, align 2
  %838 = icmp ult i16 %837, 1042
  br i1 %838, label %849, label %839

839:                                              ; preds = %831
  %840 = load atomic i32, i32* %809 monotonic, align 4
  %841 = zext i32 %840 to i64
  %842 = or i64 %807, %841
  %843 = add i64 %842, 7
  %844 = inttoptr i64 %843 to i16*
  %845 = load atomic i16, i16* %844 monotonic, align 2
  %846 = icmp ne i16 %845, 1080
  %847 = zext i1 %846 to i32
  %848 = shl nuw nsw i32 %847, 3
  br label %849

849:                                              ; preds = %839, %831, %793
  %850 = phi i32 [ 8, %793 ], [ 0, %831 ], [ %848, %839 ]
  %851 = or i32 %822, %850
  store i32 %851, i32* %804, align 4
  br i1 %221, label %852, label %1782

852:                                              ; preds = %849
  %853 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 606
  %854 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %855 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %856 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 521
  %857 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %858 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5 to i8*
  %859 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %860 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0
  %861 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %862 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %23, i64 0, i32 0
  %863 = bitcast %"class.v8::internal::PrototypeIterator"* %9 to i8*
  %864 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %9, i64 0, i32 0
  %865 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %9, i64 0, i32 1, i32 0, i32 0
  %866 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %9, i64 0, i32 2, i32 0, i32 0
  %867 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %9, i64 0, i32 3
  %868 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %9, i64 0, i32 4
  %869 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %9, i64 0, i32 6
  %870 = bitcast %"class.v8::internal::LookupIterator"* %13 to i8*
  %871 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 1
  %872 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 5
  %873 = bitcast %"class.v8::internal::Isolate"** %872 to %"class.v8::internal::Factory"**
  %874 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %16 to i8*
  %875 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %876 = bitcast %"class.std::__1::vector.1192"* %17 to i8*
  %877 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %878 = bitcast i32** %877 to i64*
  %879 = bitcast %"class.std::__1::vector.1192"* %17 to i64*
  %880 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %17, i64 0, i32 0, i32 1
  %881 = bitcast i32** %880 to i64*
  %882 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %17, i64 0, i32 0, i32 0
  %883 = getelementptr inbounds %"struct.std::__1::__less.1207", %"struct.std::__1::__less.1207"* %11, i64 0, i32 0
  %884 = bitcast %"class.v8::internal::LookupIterator"* %12 to i8*
  %885 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 1
  %886 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 5
  %887 = bitcast %"class.v8::internal::Isolate"** %886 to %"class.v8::internal::Factory"**
  %888 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %15 to i8*
  %889 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  %890 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %891 = bitcast %"class.v8::internal::LookupIterator"* %10 to i8*
  %892 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 1
  %893 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 5
  %894 = bitcast %"class.v8::internal::Isolate"** %893 to %"class.v8::internal::Factory"**
  %895 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %14 to i8*
  %896 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  %897 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 5
  %898 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %899 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  %900 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  %901 = bitcast %"class.v8::internal::Isolate"** %900 to %"class.v8::internal::Factory"**
  %902 = zext i32 %213 to i64
  br label %903

903:                                              ; preds = %1777, %852
  %904 = phi i64 [ 0, %852 ], [ %1778, %1777 ]
  %905 = load i64, i64* %21, align 8
  %906 = shl i64 %904, 32
  %907 = sub i64 -21474836480, %906
  %908 = ashr exact i64 %907, 32
  %909 = add i64 %908, %905
  %910 = shl nsw i64 %909, 3
  %911 = load i64, i64* %31, align 8
  %912 = sub i64 %911, %910
  %913 = inttoptr i64 %912 to i64*
  %914 = load i64, i64* %24, align 8
  %915 = load i64*, i64** %26, align 8
  %916 = load i32, i32* %28, align 8
  %917 = add nsw i32 %916, 1
  store i32 %917, i32* %28, align 8
  %918 = load i64, i64* %913, align 8
  %919 = and i64 %918, 1
  %920 = icmp eq i64 %919, 0
  br i1 %920, label %980, label %921

921:                                              ; preds = %903
  %922 = and i64 %918, -4294967296
  %923 = add i64 %918, -1
  %924 = inttoptr i64 %923 to i32*
  %925 = load atomic i32, i32* %924 monotonic, align 4
  %926 = zext i32 %925 to i64
  %927 = or i64 %922, %926
  %928 = add i64 %927, 7
  %929 = inttoptr i64 %928 to i16*
  %930 = load atomic i16, i16* %929 monotonic, align 2
  %931 = icmp ugt i16 %930, 185
  br i1 %931, label %932, label %980

932:                                              ; preds = %921
  %933 = load i64, i64* %853, align 8
  %934 = add i64 %933, 11
  %935 = inttoptr i64 %934 to i32*
  %936 = load i32, i32* %935, align 4
  %937 = icmp eq i32 %936, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %854) #4
  br i1 %937, label %938, label %940

938:                                              ; preds = %932
  store i64 %918, i64* %855, align 8
  %939 = call zeroext i1 @_ZN2v88internal10JSReceiver19HasProxyInPrototypeEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nonnull %4, %"class.v8::internal::Isolate"* %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %854) #4
  br i1 %939, label %941, label %955

940:                                              ; preds = %932
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %854) #4
  br label %941

941:                                              ; preds = %940, %938
  %942 = call i64* @_ZN2v88internal7Runtime17GetObjectPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_Pb(%"class.v8::internal::Isolate"* %2, i64* %913, i64* %856, i64* null, i8* null) #4
  %943 = icmp eq i64* %942, null
  br i1 %943, label %980, label %944

944:                                              ; preds = %941
  %945 = load i64, i64* %942, align 8
  %946 = load i64, i64* %857, align 8
  %947 = trunc i64 %945 to i32
  %948 = trunc i64 %946 to i32
  %949 = icmp eq i32 %947, %948
  br i1 %949, label %955, label %950

950:                                              ; preds = %944
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %858) #4
  store i64 %945, i64* %859, align 8
  %951 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %860, %"class.v8::internal::Isolate"* %2) #4
  %952 = zext i1 %951 to i16
  %953 = shl nuw nsw i16 %952, 8
  %954 = or i16 %953, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %858) #4
  br label %980

955:                                              ; preds = %944, %938
  %956 = load i64, i64* %913, align 8
  %957 = and i64 %956, 1
  %958 = icmp eq i64 %957, 0
  br i1 %958, label %980, label %959

959:                                              ; preds = %955
  %960 = and i64 %956, -4294967296
  %961 = add i64 %956, -1
  %962 = inttoptr i64 %961 to i32*
  %963 = load atomic i32, i32* %962 monotonic, align 4
  %964 = zext i32 %963 to i64
  %965 = or i64 %960, %964
  %966 = add i64 %965, 7
  %967 = inttoptr i64 %966 to i16*
  %968 = load atomic i16, i16* %967 monotonic, align 2
  %969 = icmp eq i16 %968, 1085
  br i1 %969, label %980, label %970

970:                                              ; preds = %959
  %971 = load atomic i32, i32* %962 monotonic, align 4
  %972 = zext i32 %971 to i64
  %973 = or i64 %960, %972
  %974 = add i64 %973, 7
  %975 = inttoptr i64 %974 to i16*
  %976 = load atomic i16, i16* %975 monotonic, align 2
  %977 = icmp eq i16 %976, 188
  br i1 %977, label %978, label %980

978:                                              ; preds = %970
  %979 = call i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64* %913) #4
  br label %980

980:                                              ; preds = %978, %970, %959, %955, %950, %941, %921, %903
  %981 = phi i16 [ 1, %921 ], [ 1, %955 ], [ %979, %978 ], [ 257, %959 ], [ 1, %970 ], [ 1, %903 ], [ 0, %941 ], [ %954, %950 ]
  br i1 %861, label %994, label %982

982:                                              ; preds = %980
  %983 = inttoptr i64 %914 to i64*
  %984 = load i64*, i64** %862, align 8
  store i64 %914, i64* %24, align 8
  %985 = load i32, i32* %28, align 8
  %986 = add nsw i32 %985, -1
  store i32 %986, i32* %28, align 8
  %987 = load i64*, i64** %26, align 8
  %988 = icmp eq i64* %987, %915
  br i1 %988, label %991, label %989

989:                                              ; preds = %982
  store i64* %915, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %990 = load i64*, i64** %862, align 8
  br label %991

991:                                              ; preds = %989, %982
  %992 = phi i64* [ %990, %989 ], [ %983, %982 ]
  %993 = phi i64* [ %915, %989 ], [ %984, %982 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %992, i64* %993) #4
  br label %994

994:                                              ; preds = %991, %980
  %995 = trunc i16 %981 to i8
  %996 = icmp eq i8 %995, 0
  br i1 %996, label %997, label %1000

997:                                              ; preds = %994
  %998 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %999 = load i64, i64* %998, align 8
  br label %1988

1000:                                             ; preds = %994
  %1001 = icmp ugt i16 %981, 255
  br i1 %1001, label %1002, label %1757

1002:                                             ; preds = %1000
  %1003 = load i64, i64* %913, align 8
  %1004 = and i64 %1003, -4294967296
  %1005 = add i64 %1003, -1
  %1006 = inttoptr i64 %1005 to i32*
  %1007 = load atomic i32, i32* %1006 monotonic, align 4
  %1008 = zext i32 %1007 to i64
  %1009 = or i64 %1004, %1008
  %1010 = add i64 %1009, 7
  %1011 = inttoptr i64 %1010 to i16*
  %1012 = load atomic i16, i16* %1011 monotonic, align 2
  %1013 = icmp eq i16 %1012, 1085
  br i1 %1013, label %1014, label %1035

1014:                                             ; preds = %1002
  %1015 = add i64 %1003, 11
  %1016 = inttoptr i64 %1015 to i32*
  %1017 = load i32, i32* %1016, align 4
  %1018 = zext i32 %1017 to i64
  %1019 = and i64 %1018, 1
  %1020 = icmp eq i64 %1019, 0
  br i1 %1020, label %1021, label %1024

1021:                                             ; preds = %1014
  %1022 = ashr i32 %1017, 1
  %1023 = sitofp i32 %1022 to double
  br label %1029

1024:                                             ; preds = %1014
  %1025 = or i64 %1004, %1018
  %1026 = add i64 %1025, 3
  %1027 = inttoptr i64 %1026 to double*
  %1028 = load double, double* %1027, align 1
  br label %1029

1029:                                             ; preds = %1024, %1021
  %1030 = phi double [ %1023, %1021 ], [ %1028, %1024 ]
  %1031 = fptoui double %1030 to i32
  %1032 = load i32, i32* %804, align 4
  %1033 = and i32 %1032, 8
  %1034 = icmp eq i32 %1033, 0
  br i1 %1034, label %1146, label %1094

1035:                                             ; preds = %1002
  %1036 = call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %2, i64* %913) #4
  %1037 = icmp eq i64* %1036, null
  br i1 %1037, label %1754, label %1038

1038:                                             ; preds = %1035
  %1039 = load i32, i32* %803, align 8
  %1040 = uitofp i32 %1039 to double
  %1041 = load i64, i64* %1036, align 8
  %1042 = and i64 %1041, 1
  %1043 = icmp eq i64 %1042, 0
  br i1 %1043, label %1044, label %1048

1044:                                             ; preds = %1038
  %1045 = trunc i64 %1041 to i32
  %1046 = ashr i32 %1045, 1
  %1047 = sitofp i32 %1046 to double
  br label %1052

1048:                                             ; preds = %1038
  %1049 = add i64 %1041, 3
  %1050 = inttoptr i64 %1049 to double*
  %1051 = load double, double* %1050, align 1
  br label %1052

1052:                                             ; preds = %1048, %1044
  %1053 = phi double [ %1047, %1044 ], [ %1051, %1048 ]
  %1054 = fadd double %1053, %1040
  %1055 = fcmp ogt double %1054, 0x433FFFFFFFFFFFFF
  br i1 %1055, label %1056, label %1061

1056:                                             ; preds = %1052
  %1057 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %1058 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %1057, i32 199, i64* null, i64* null, i64* null) #4
  %1059 = load i64, i64* %1058, align 8
  %1060 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %2, i64 %1059, %"class.v8::internal::MessageLocation"* null) #4
  br label %1754

1061:                                             ; preds = %1052
  br i1 %1043, label %1062, label %1067

1062:                                             ; preds = %1061
  %1063 = trunc i64 %1041 to i32
  %1064 = icmp slt i32 %1063, 0
  br i1 %1064, label %1090, label %1065

1065:                                             ; preds = %1062
  %1066 = lshr i32 %1063, 1
  br label %1091

1067:                                             ; preds = %1061
  %1068 = and i64 %1041, -4294967296
  %1069 = add i64 %1041, -1
  %1070 = inttoptr i64 %1069 to i32*
  %1071 = load atomic i32, i32* %1070 monotonic, align 4
  %1072 = zext i32 %1071 to i64
  %1073 = or i64 %1068, %1072
  %1074 = add i64 %1073, 7
  %1075 = inttoptr i64 %1074 to i16*
  %1076 = load atomic i16, i16* %1075 monotonic, align 2
  %1077 = icmp eq i16 %1076, 66
  br i1 %1077, label %1078, label %1090

1078:                                             ; preds = %1067
  %1079 = add i64 %1041, 3
  %1080 = inttoptr i64 %1079 to double*
  %1081 = load double, double* %1080, align 1
  %1082 = fadd double %1081, 0x4330000000000000
  %1083 = bitcast double %1082 to i64
  %1084 = and i64 %1083, -4294967296
  %1085 = icmp eq i64 %1084, 4841369599423283200
  br i1 %1085, label %1086, label %1090

1086:                                             ; preds = %1078
  %1087 = trunc i64 %1083 to i32
  %1088 = uitofp i32 %1087 to double
  %1089 = fcmp oeq double %1081, %1088
  br i1 %1089, label %1091, label %1090

1090:                                             ; preds = %1086, %1078, %1067, %1062
  br label %1091

1091:                                             ; preds = %1090, %1086, %1065
  %1092 = phi i32 [ %1087, %1086 ], [ 0, %1090 ], [ %1066, %1065 ]
  %1093 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_119IterateElementsSlowEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEjPNS1_18ArrayConcatVisitorE(%"class.v8::internal::Isolate"* %2, i64* %913, i32 %1092, %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19) #4
  br i1 %1093, label %1777, label %1754

1094:                                             ; preds = %1029
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %863) #4
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %864, align 8
  store i64 %1003, i64* %865, align 8
  store i64* null, i64** %866, align 8
  store i32 0, i32* %867, align 8
  store i8 0, i8* %868, align 4
  store i32 0, i32* %869, align 8
  %1095 = load atomic i32, i32* %1006 monotonic, align 4
  %1096 = zext i32 %1095 to i64
  %1097 = or i64 %1004, %1096
  %1098 = add i64 %1097, 7
  %1099 = inttoptr i64 %1098 to i16*
  %1100 = load atomic i16, i16* %1099 monotonic, align 2
  %1101 = icmp eq i16 %1100, 188
  br i1 %1101, label %1145, label %1102

1102:                                             ; preds = %1094, %1133
  %1103 = phi i32* [ %1137, %1133 ], [ %1006, %1094 ]
  %1104 = phi i64 [ %1135, %1133 ], [ %1004, %1094 ]
  %1105 = phi i64 [ %1134, %1133 ], [ %1003, %1094 ]
  %1106 = load atomic i32, i32* %1103 monotonic, align 4
  %1107 = zext i32 %1106 to i64
  %1108 = or i64 %1104, %1107
  %1109 = add i64 %1108, 7
  %1110 = inttoptr i64 %1109 to i16*
  %1111 = load atomic i16, i16* %1110 monotonic, align 2
  %1112 = icmp ult i16 %1111, 1042
  br i1 %1112, label %1145, label %1113

1113:                                             ; preds = %1102
  %1114 = load atomic i32, i32* %1103 monotonic, align 4
  %1115 = zext i32 %1114 to i64
  %1116 = or i64 %1104, %1115
  %1117 = add i64 %1116, 10
  %1118 = inttoptr i64 %1117 to i8*
  %1119 = load i8, i8* %1118, align 1
  %1120 = lshr i8 %1119, 2
  %1121 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %1122 = zext i8 %1120 to i64
  %1123 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %1121, i64 %1122
  %1124 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %1123, align 8
  %1125 = bitcast %"class.v8::internal::ElementsAccessor"* %1124 to i1 (%"class.v8::internal::ElementsAccessor"*, i64)***
  %1126 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64)*** %1125, align 8
  %1127 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64)** %1126, i64 6
  %1128 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64)** %1127, align 8
  %1129 = call zeroext i1 %1128(%"class.v8::internal::ElementsAccessor"* %1124, i64 %1105) #4
  br i1 %1129, label %1145, label %1130

1130:                                             ; preds = %1113
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %9) #4
  %1131 = load i8, i8* %868, align 4
  %1132 = icmp eq i8 %1131, 0
  br i1 %1132, label %1133, label %1148

1133:                                             ; preds = %1130
  %1134 = load i64, i64* %865, align 8
  %1135 = and i64 %1134, -4294967296
  %1136 = add i64 %1134, -1
  %1137 = inttoptr i64 %1136 to i32*
  %1138 = load atomic i32, i32* %1137 monotonic, align 4
  %1139 = zext i32 %1138 to i64
  %1140 = or i64 %1135, %1139
  %1141 = add i64 %1140, 7
  %1142 = inttoptr i64 %1141 to i16*
  %1143 = load atomic i16, i16* %1142 monotonic, align 2
  %1144 = icmp eq i16 %1143, 188
  br i1 %1144, label %1145, label %1102

1145:                                             ; preds = %1133, %1113, %1102, %1094
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %863) #4
  br label %1146

1146:                                             ; preds = %1145, %1029
  %1147 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_119IterateElementsSlowEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEjPNS1_18ArrayConcatVisitorE(%"class.v8::internal::Isolate"* %2, i64* %913, i32 %1031, %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19) #4
  br i1 %1147, label %1777, label %1754

1148:                                             ; preds = %1130
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %863) #4
  %1149 = load i64, i64* %913, align 8
  %1150 = and i64 %1149, -4294967296
  %1151 = add i64 %1149, -1
  %1152 = inttoptr i64 %1151 to i32*
  %1153 = load atomic i32, i32* %1152 monotonic, align 4
  %1154 = zext i32 %1153 to i64
  %1155 = or i64 %1150, %1154
  %1156 = add i64 %1155, 10
  %1157 = inttoptr i64 %1156 to i8*
  %1158 = load i8, i8* %1157, align 1
  %1159 = lshr i8 %1158, 2
  switch i8 %1159, label %1735 [
    i8 0, label %1160
    i8 2, label %1160
    i8 10, label %1160
    i8 8, label %1160
    i8 6, label %1160
    i8 1, label %1160
    i8 11, label %1160
    i8 9, label %1160
    i8 7, label %1160
    i8 3, label %1160
    i8 5, label %1297
    i8 4, label %1297
    i8 12, label %1459
    i8 13, label %1632
    i8 14, label %1632
    i8 16, label %1732
    i8 17, label %1752
    i8 18, label %1752
    i8 19, label %1752
    i8 20, label %1752
    i8 21, label %1752
    i8 22, label %1752
    i8 23, label %1752
    i8 24, label %1752
    i8 25, label %1752
    i8 26, label %1752
    i8 27, label %1752
    i8 28, label %1731
    i8 29, label %1731
    i8 30, label %1731
    i8 31, label %1731
    i8 32, label %1731
    i8 33, label %1731
    i8 34, label %1731
    i8 35, label %1731
    i8 36, label %1731
    i8 37, label %1731
    i8 38, label %1731
    i8 15, label %1732
  ]

1160:                                             ; preds = %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %895) #4
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %14, %"class.v8::internal::Isolate"* %2) #4
  %1161 = load i64, i64* %913, align 8
  %1162 = and i64 %1161, -4294967296
  %1163 = add i64 %1161, 7
  %1164 = inttoptr i64 %1163 to i32*
  %1165 = load i32, i32* %1164, align 4
  %1166 = zext i32 %1165 to i64
  %1167 = or i64 %1162, %1166
  %1168 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %1169 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1168, null
  br i1 %1169, label %1172, label %1170

1170:                                             ; preds = %1160
  %1171 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1168, i64 %1167) #4
  br label %1183

1172:                                             ; preds = %1160
  %1173 = load i64*, i64** %875, align 8
  %1174 = load i64*, i64** %26, align 8
  %1175 = icmp eq i64* %1173, %1174
  br i1 %1175, label %1176, label %1178

1176:                                             ; preds = %1172
  %1177 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %1178

1178:                                             ; preds = %1176, %1172
  %1179 = phi i64* [ %1177, %1176 ], [ %1173, %1172 ]
  %1180 = ptrtoint i64* %1179 to i64
  %1181 = add i64 %1180, 8
  %1182 = inttoptr i64 %1181 to i64*
  store i64* %1182, i64** %875, align 8
  store i64 %1167, i64* %1179, align 8
  br label %1183

1183:                                             ; preds = %1178, %1170
  %1184 = phi i64* [ %1171, %1170 ], [ %1179, %1178 ]
  %1185 = sext i32 %1031 to i64
  br label %1186

1186:                                             ; preds = %1294, %1183
  %1187 = phi i64 [ %1191, %1294 ], [ 0, %1183 ]
  %1188 = phi i32 [ %1280, %1294 ], [ 0, %1183 ]
  %1189 = icmp slt i32 %1188, %1031
  br i1 %1189, label %1190, label %1296

1190:                                             ; preds = %1186
  %1191 = add nuw i64 %1187, 1024
  %1192 = load i64, i64* %24, align 8
  %1193 = load i64*, i64** %26, align 8
  %1194 = load i32, i32* %28, align 8
  %1195 = add nsw i32 %1194, 1
  store i32 %1195, i32* %28, align 8
  %1196 = sext i32 %1188 to i64
  %1197 = icmp sgt i64 %1191, %1196
  br i1 %1197, label %1198, label %1279

1198:                                             ; preds = %1190, %1265
  %1199 = phi i64 [ %1266, %1265 ], [ %1196, %1190 ]
  %1200 = phi i32 [ %1267, %1265 ], [ %1188, %1190 ]
  %1201 = load i64, i64* %1184, align 8
  %1202 = and i64 %1201, -4294967296
  %1203 = trunc i64 %1199 to i32
  %1204 = shl i32 %1203, 2
  %1205 = sext i32 %1204 to i64
  %1206 = add i64 %1201, 7
  %1207 = add i64 %1206, %1205
  %1208 = inttoptr i64 %1207 to i32*
  %1209 = load atomic i32, i32* %1208 monotonic, align 4
  %1210 = zext i32 %1209 to i64
  %1211 = or i64 %1202, %1210
  %1212 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %1213 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1212, null
  br i1 %1213, label %1217, label %1214

1214:                                             ; preds = %1198
  %1215 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1212, i64 %1211) #4
  %1216 = load i64, i64* %1215, align 8
  br label %1228

1217:                                             ; preds = %1198
  %1218 = load i64*, i64** %875, align 8
  %1219 = load i64*, i64** %26, align 8
  %1220 = icmp eq i64* %1218, %1219
  br i1 %1220, label %1221, label %1223

1221:                                             ; preds = %1217
  %1222 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %1223

1223:                                             ; preds = %1221, %1217
  %1224 = phi i64* [ %1222, %1221 ], [ %1218, %1217 ]
  %1225 = ptrtoint i64* %1224 to i64
  %1226 = add i64 %1225, 8
  %1227 = inttoptr i64 %1226 to i64*
  store i64* %1227, i64** %875, align 8
  store i64 %1211, i64* %1224, align 8
  br label %1228

1228:                                             ; preds = %1223, %1214
  %1229 = phi i64 [ %1216, %1214 ], [ %1211, %1223 ]
  %1230 = phi i64* [ %1215, %1214 ], [ %1224, %1223 ]
  %1231 = load i64, i64* %897, align 8
  %1232 = trunc i64 %1229 to i32
  %1233 = trunc i64 %1231 to i32
  %1234 = icmp eq i32 %1232, %1233
  br i1 %1234, label %1237, label %1235

1235:                                             ; preds = %1228
  %1236 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1203, i64* %1230) #4
  br i1 %1236, label %1265, label %1271

1237:                                             ; preds = %1228
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %896) #4
  %1238 = load i64, i64* %913, align 8
  %1239 = and i64 %1238, -262144
  %1240 = or i64 %1239, 16
  %1241 = inttoptr i64 %1240 to i64*
  %1242 = load i64, i64* %1241, align 16
  %1243 = add i64 %1242, -41416
  %1244 = inttoptr i64 %1243 to %"class.v8::internal::Isolate"*
  %1245 = and i64 %1199, 4294967295
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %1244, i64* %913, i64* null, i64 %1245, i64* %913, i32 3) #4
  %1246 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %896) #4
  %1247 = trunc i16 %1246 to i8
  %1248 = icmp eq i8 %1247, 0
  br i1 %1248, label %1273, label %1249

1249:                                             ; preds = %1237
  %1250 = icmp ugt i16 %1246, 255
  br i1 %1250, label %1251, label %1265

1251:                                             ; preds = %1249
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %898) #4
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %2, i64* %913, i64* null, i64 %1245, i64* %913, i32 3) #4
  %1252 = load i32, i32* %899, align 4
  %1253 = icmp eq i32 %1252, 4
  br i1 %1253, label %1254, label %1258

1254:                                             ; preds = %1251
  %1255 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %901, align 8
  %1256 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1255, i64 160
  %1257 = bitcast %"class.v8::internal::Factory"* %1256 to i64*
  br label %1260

1258:                                             ; preds = %1251
  %1259 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #4
  br label %1260

1260:                                             ; preds = %1258, %1254
  %1261 = phi i64* [ %1259, %1258 ], [ %1257, %1254 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %898) #4
  %1262 = icmp eq i64* %1261, null
  br i1 %1262, label %1275, label %1263

1263:                                             ; preds = %1260
  %1264 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1203, i64* nonnull %1261) #4
  br i1 %1264, label %1265, label %1277

1265:                                             ; preds = %1263, %1249, %1235
  %1266 = add nsw i64 %1199, 1
  %1267 = add nsw i32 %1200, 1
  %1268 = icmp slt i64 %1266, %1185
  %1269 = icmp slt i64 %1266, %1191
  %1270 = and i1 %1268, %1269
  br i1 %1270, label %1198, label %1279

1271:                                             ; preds = %1235
  %1272 = trunc i64 %1199 to i32
  br label %1279

1273:                                             ; preds = %1237
  %1274 = trunc i64 %1199 to i32
  br label %1279

1275:                                             ; preds = %1260
  %1276 = trunc i64 %1199 to i32
  br label %1279

1277:                                             ; preds = %1263
  %1278 = trunc i64 %1199 to i32
  br label %1279

1279:                                             ; preds = %1265, %1271, %1273, %1275, %1277, %1190
  %1280 = phi i32 [ %1188, %1190 ], [ %1272, %1271 ], [ %1274, %1273 ], [ %1276, %1275 ], [ %1278, %1277 ], [ %1267, %1265 ]
  %1281 = phi i32 [ 0, %1190 ], [ 1, %1271 ], [ 1, %1273 ], [ 1, %1275 ], [ 1, %1277 ], [ 0, %1265 ]
  br i1 %861, label %1294, label %1282

1282:                                             ; preds = %1279
  %1283 = inttoptr i64 %1192 to i64*
  %1284 = load i64*, i64** %862, align 8
  store i64 %1192, i64* %24, align 8
  %1285 = load i32, i32* %28, align 8
  %1286 = add nsw i32 %1285, -1
  store i32 %1286, i32* %28, align 8
  %1287 = load i64*, i64** %26, align 8
  %1288 = icmp eq i64* %1287, %1193
  br i1 %1288, label %1291, label %1289

1289:                                             ; preds = %1282
  store i64* %1193, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %1290 = load i64*, i64** %862, align 8
  br label %1291

1291:                                             ; preds = %1289, %1282
  %1292 = phi i64* [ %1290, %1289 ], [ %1283, %1282 ]
  %1293 = phi i64* [ %1193, %1289 ], [ %1284, %1282 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1292, i64* %1293) #4
  br label %1294

1294:                                             ; preds = %1291, %1279
  %1295 = icmp eq i32 %1281, 0
  br i1 %1295, label %1186, label %1750

1296:                                             ; preds = %1186
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %895) #4
  br label %1735

1297:                                             ; preds = %1148, %1148
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %888) #4
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %15, %"class.v8::internal::Isolate"* %2) #4
  %1298 = icmp eq i32 %1031, 0
  br i1 %1298, label %1733, label %1299

1299:                                             ; preds = %1297
  %1300 = load i64, i64* %913, align 8
  %1301 = and i64 %1300, -4294967296
  %1302 = add i64 %1300, 7
  %1303 = inttoptr i64 %1302 to i32*
  %1304 = load i32, i32* %1303, align 4
  %1305 = zext i32 %1304 to i64
  %1306 = or i64 %1301, %1305
  %1307 = add i64 %1306, -1
  %1308 = inttoptr i64 %1307 to i32*
  %1309 = load atomic i32, i32* %1308 monotonic, align 4
  %1310 = zext i32 %1309 to i64
  %1311 = or i64 %1301, %1310
  %1312 = add i64 %1311, 7
  %1313 = inttoptr i64 %1312 to i16*
  %1314 = load atomic i16, i16* %1313 monotonic, align 2
  %1315 = add i16 %1314, -119
  %1316 = icmp ult i16 %1315, 13
  br i1 %1316, label %1734, label %1317

1317:                                             ; preds = %1299
  %1318 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %1319 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1318, null
  br i1 %1319, label %1322, label %1320

1320:                                             ; preds = %1317
  %1321 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1318, i64 %1306) #4
  br label %1333

1322:                                             ; preds = %1317
  %1323 = load i64*, i64** %875, align 8
  %1324 = load i64*, i64** %26, align 8
  %1325 = icmp eq i64* %1323, %1324
  br i1 %1325, label %1326, label %1328

1326:                                             ; preds = %1322
  %1327 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %1328

1328:                                             ; preds = %1326, %1322
  %1329 = phi i64* [ %1327, %1326 ], [ %1323, %1322 ]
  %1330 = ptrtoint i64* %1329 to i64
  %1331 = add i64 %1330, 8
  %1332 = inttoptr i64 %1331 to i64*
  store i64* %1332, i64** %875, align 8
  store i64 %1306, i64* %1329, align 8
  br label %1333

1333:                                             ; preds = %1328, %1320
  %1334 = phi i64* [ %1321, %1320 ], [ %1329, %1328 ]
  %1335 = sext i32 %1031 to i64
  br label %1336

1336:                                             ; preds = %1456, %1333
  %1337 = phi i64 [ %1341, %1456 ], [ 0, %1333 ]
  %1338 = phi i32 [ %1442, %1456 ], [ 0, %1333 ]
  %1339 = icmp slt i32 %1338, %1031
  br i1 %1339, label %1340, label %1458

1340:                                             ; preds = %1336
  %1341 = add nuw i64 %1337, 1024
  %1342 = load i64, i64* %24, align 8
  %1343 = load i64*, i64** %26, align 8
  %1344 = load i32, i32* %28, align 8
  %1345 = add nsw i32 %1344, 1
  store i32 %1345, i32* %28, align 8
  %1346 = sext i32 %1338 to i64
  %1347 = icmp sgt i64 %1341, %1346
  br i1 %1347, label %1348, label %1441

1348:                                             ; preds = %1340, %1427
  %1349 = phi i64 [ %1428, %1427 ], [ %1346, %1340 ]
  %1350 = phi i32 [ %1429, %1427 ], [ %1338, %1340 ]
  %1351 = load i64, i64* %1334, align 8
  %1352 = trunc i64 %1349 to i32
  %1353 = shl nsw i32 %1352, 3
  %1354 = or i32 %1353, 7
  %1355 = sext i32 %1354 to i64
  %1356 = add i64 %1351, %1355
  %1357 = inttoptr i64 %1356 to i64*
  %1358 = load i64, i64* %1357, align 1
  %1359 = icmp eq i64 %1358, -2251799814209537
  br i1 %1359, label %1399, label %1360

1360:                                             ; preds = %1348
  %1361 = inttoptr i64 %1356 to double*
  %1362 = load double, double* %1361, align 1
  %1363 = fcmp ult double %1362, 0xC1D0000000000000
  %1364 = fcmp ugt double %1362, 0x41CFFFFFFF800000
  %1365 = or i1 %1364, %1363
  %1366 = bitcast double %1362 to i64
  %1367 = icmp eq i64 %1366, -9223372036854775808
  %1368 = or i1 %1365, %1367
  br i1 %1368, label %1391, label %1369

1369:                                             ; preds = %1360
  %1370 = fptosi double %1362 to i32
  %1371 = sitofp i32 %1370 to double
  %1372 = fcmp oeq double %1362, %1371
  br i1 %1372, label %1373, label %1391

1373:                                             ; preds = %1369
  %1374 = sext i32 %1370 to i64
  %1375 = shl nsw i64 %1374, 1
  %1376 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %1377 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1376, null
  br i1 %1377, label %1380, label %1378

1378:                                             ; preds = %1373
  %1379 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1376, i64 %1375) #4
  br label %1396

1380:                                             ; preds = %1373
  %1381 = load i64*, i64** %875, align 8
  %1382 = load i64*, i64** %26, align 8
  %1383 = icmp eq i64* %1381, %1382
  br i1 %1383, label %1384, label %1386

1384:                                             ; preds = %1380
  %1385 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %1386

1386:                                             ; preds = %1384, %1380
  %1387 = phi i64* [ %1385, %1384 ], [ %1381, %1380 ]
  %1388 = ptrtoint i64* %1387 to i64
  %1389 = add i64 %1388, 8
  %1390 = inttoptr i64 %1389 to i64*
  store i64* %1390, i64** %875, align 8
  store i64 %1375, i64* %1387, align 8
  br label %1396

1391:                                             ; preds = %1369, %1360
  %1392 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %890) #4
  %1393 = load i64, i64* %1392, align 8
  %1394 = add i64 %1393, 3
  %1395 = inttoptr i64 %1394 to double*
  store double %1362, double* %1395, align 1
  br label %1396

1396:                                             ; preds = %1391, %1386, %1378
  %1397 = phi i64* [ %1392, %1391 ], [ %1379, %1378 ], [ %1387, %1386 ]
  %1398 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1352, i64* %1397) #4
  br i1 %1398, label %1427, label %1439

1399:                                             ; preds = %1348
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %889) #4
  %1400 = load i64, i64* %913, align 8
  %1401 = and i64 %1400, -262144
  %1402 = or i64 %1401, 16
  %1403 = inttoptr i64 %1402 to i64*
  %1404 = load i64, i64* %1403, align 16
  %1405 = add i64 %1404, -41416
  %1406 = inttoptr i64 %1405 to %"class.v8::internal::Isolate"*
  %1407 = and i64 %1349, 4294967295
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %8, %"class.v8::internal::Isolate"* %1406, i64* %913, i64* null, i64 %1407, i64* %913, i32 3) #4
  %1408 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %889) #4
  %1409 = trunc i16 %1408 to i8
  %1410 = icmp eq i8 %1409, 0
  br i1 %1410, label %1437, label %1411

1411:                                             ; preds = %1399
  %1412 = icmp ugt i16 %1408, 255
  br i1 %1412, label %1413, label %1427

1413:                                             ; preds = %1411
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %891) #4
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %10, %"class.v8::internal::Isolate"* %2, i64* %913, i64* null, i64 %1407, i64* %913, i32 3) #4
  %1414 = load i32, i32* %892, align 4
  %1415 = icmp eq i32 %1414, 4
  br i1 %1415, label %1416, label %1420

1416:                                             ; preds = %1413
  %1417 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %894, align 8
  %1418 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1417, i64 160
  %1419 = bitcast %"class.v8::internal::Factory"* %1418 to i64*
  br label %1422

1420:                                             ; preds = %1413
  %1421 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %10, i1 zeroext false) #4
  br label %1422

1422:                                             ; preds = %1420, %1416
  %1423 = phi i64* [ %1421, %1420 ], [ %1419, %1416 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %891) #4
  %1424 = icmp eq i64* %1423, null
  br i1 %1424, label %1433, label %1425

1425:                                             ; preds = %1422
  %1426 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1352, i64* nonnull %1423) #4
  br i1 %1426, label %1427, label %1435

1427:                                             ; preds = %1425, %1411, %1396
  %1428 = add nsw i64 %1349, 1
  %1429 = add nsw i32 %1350, 1
  %1430 = icmp slt i64 %1428, %1335
  %1431 = icmp slt i64 %1428, %1341
  %1432 = and i1 %1430, %1431
  br i1 %1432, label %1348, label %1441

1433:                                             ; preds = %1422
  %1434 = trunc i64 %1349 to i32
  br label %1441

1435:                                             ; preds = %1425
  %1436 = trunc i64 %1349 to i32
  br label %1441

1437:                                             ; preds = %1399
  %1438 = trunc i64 %1349 to i32
  br label %1441

1439:                                             ; preds = %1396
  %1440 = trunc i64 %1349 to i32
  br label %1441

1441:                                             ; preds = %1427, %1433, %1435, %1437, %1439, %1340
  %1442 = phi i32 [ %1338, %1340 ], [ %1434, %1433 ], [ %1436, %1435 ], [ %1438, %1437 ], [ %1440, %1439 ], [ %1429, %1427 ]
  %1443 = phi i32 [ 0, %1340 ], [ 1, %1433 ], [ 1, %1435 ], [ 1, %1437 ], [ 1, %1439 ], [ 0, %1427 ]
  br i1 %861, label %1456, label %1444

1444:                                             ; preds = %1441
  %1445 = inttoptr i64 %1342 to i64*
  %1446 = load i64*, i64** %862, align 8
  store i64 %1342, i64* %24, align 8
  %1447 = load i32, i32* %28, align 8
  %1448 = add nsw i32 %1447, -1
  store i32 %1448, i32* %28, align 8
  %1449 = load i64*, i64** %26, align 8
  %1450 = icmp eq i64* %1449, %1343
  br i1 %1450, label %1453, label %1451

1451:                                             ; preds = %1444
  store i64* %1343, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %1452 = load i64*, i64** %862, align 8
  br label %1453

1453:                                             ; preds = %1451, %1444
  %1454 = phi i64* [ %1452, %1451 ], [ %1445, %1444 ]
  %1455 = phi i64* [ %1343, %1451 ], [ %1446, %1444 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1454, i64* %1455) #4
  br label %1456

1456:                                             ; preds = %1453, %1441
  %1457 = icmp eq i32 %1443, 0
  br i1 %1457, label %1336, label %1751

1458:                                             ; preds = %1336
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %888) #4
  br label %1735

1459:                                             ; preds = %1148
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %874) #4
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %16, %"class.v8::internal::Isolate"* %2) #4
  %1460 = load i64, i64* %913, align 8
  %1461 = and i64 %1460, -4294967296
  %1462 = add i64 %1460, 7
  %1463 = inttoptr i64 %1462 to i32*
  %1464 = load i32, i32* %1463, align 4
  %1465 = zext i32 %1464 to i64
  %1466 = or i64 %1461, %1465
  %1467 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %1468 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1467, null
  br i1 %1468, label %1471, label %1469

1469:                                             ; preds = %1459
  %1470 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1467, i64 %1466) #4
  br label %1482

1471:                                             ; preds = %1459
  %1472 = load i64*, i64** %875, align 8
  %1473 = load i64*, i64** %26, align 8
  %1474 = icmp eq i64* %1472, %1473
  br i1 %1474, label %1475, label %1477

1475:                                             ; preds = %1471
  %1476 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #4
  br label %1477

1477:                                             ; preds = %1475, %1471
  %1478 = phi i64* [ %1476, %1475 ], [ %1472, %1471 ]
  %1479 = ptrtoint i64* %1478 to i64
  %1480 = add i64 %1479, 8
  %1481 = inttoptr i64 %1480 to i64*
  store i64* %1481, i64** %875, align 8
  store i64 %1466, i64* %1478, align 8
  br label %1482

1482:                                             ; preds = %1477, %1469
  %1483 = phi i64* [ %1470, %1469 ], [ %1478, %1477 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %876) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %876, i8 0, i64 24, i1 false) #4
  %1484 = load i64, i64* %1483, align 8
  %1485 = add i64 %1484, 15
  %1486 = inttoptr i64 %1485 to i32*
  %1487 = load atomic i32, i32* %1486 monotonic, align 4
  %1488 = ashr i32 %1487, 1
  %1489 = sdiv i32 %1488, 2
  %1490 = sext i32 %1489 to i64
  %1491 = add nsw i32 %1488, 1
  %1492 = icmp ugt i32 %1491, 2
  br i1 %1492, label %1493, label %1503

1493:                                             ; preds = %1482
  %1494 = icmp slt i32 %1487, -2
  br i1 %1494, label %1495, label %1496

1495:                                             ; preds = %1493
  call void @abort() #12
  unreachable

1496:                                             ; preds = %1493
  %1497 = shl nsw i64 %1490, 2
  %1498 = call i8* @_Znwm(i64 %1497) #13
  %1499 = bitcast i8* %1498 to i32*
  %1500 = ptrtoint i8* %1498 to i64
  %1501 = getelementptr inbounds i32, i32* %1499, i64 %1490
  %1502 = ptrtoint i32* %1501 to i64
  store i64 %1500, i64* %879, align 8
  store i64 %1500, i64* %881, align 8
  store i64 %1502, i64* %878, align 8
  br label %1503

1503:                                             ; preds = %1496, %1482
  call fastcc void @_ZN2v88internal12_GLOBAL__N_121CollectElementIndicesEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEEjPNSt3__16vectorIjNS7_9allocatorIjEEEE(%"class.v8::internal::Isolate"* %2, i64* %913, i32 %1031, %"class.std::__1::vector.1192"* nonnull %17) #4
  %1504 = load i32*, i32** %882, align 8
  %1505 = load i32*, i32** %880, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %883) #4
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %1504, i32* %1505, %"struct.std::__1::__less.1207"* nonnull dereferenceable(1) %11) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %883) #4
  %1506 = load i64, i64* %881, align 8
  %1507 = load i64, i64* %879, align 8
  %1508 = sub i64 %1506, %1507
  %1509 = ashr exact i64 %1508, 2
  br i1 %861, label %1510, label %1559

1510:                                             ; preds = %1503
  %1511 = icmp eq i64 %1508, 0
  %1512 = inttoptr i64 %1507 to i32*
  br i1 %1511, label %1624, label %1513

1513:                                             ; preds = %1510
  %1514 = inttoptr i64 %1507 to i32*
  br label %1515

1515:                                             ; preds = %1513, %1553
  %1516 = phi i32* [ %1554, %1553 ], [ %1514, %1513 ]
  %1517 = phi i64 [ %1555, %1553 ], [ 0, %1513 ]
  %1518 = phi i64 [ %1519, %1553 ], [ 0, %1513 ]
  %1519 = add i64 %1518, 1024
  %1520 = load i32, i32* %28, align 8
  %1521 = add nsw i32 %1520, 1
  store i32 %1521, i32* %28, align 8
  %1522 = icmp ult i64 %1517, %1519
  br i1 %1522, label %1523, label %1553

1523:                                             ; preds = %1515
  %1524 = getelementptr inbounds i32, i32* %1516, i64 %1517
  %1525 = load i32, i32* %1524, align 4
  br label %1526

1526:                                             ; preds = %1551, %1523
  %1527 = phi i32 [ %1549, %1551 ], [ %1525, %1523 ]
  %1528 = phi i64 [ %1545, %1551 ], [ %1517, %1523 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %884) #4
  %1529 = zext i32 %1527 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %12, %"class.v8::internal::Isolate"* null, i64* %913, i64* null, i64 %1529, i64* %913, i32 3) #4
  %1530 = load i32, i32* %885, align 4
  %1531 = icmp eq i32 %1530, 4
  br i1 %1531, label %1534, label %1532

1532:                                             ; preds = %1526
  %1533 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %12, i1 zeroext false) #4
  br label %1538

1534:                                             ; preds = %1526
  %1535 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %887, align 8
  %1536 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1535, i64 160
  %1537 = bitcast %"class.v8::internal::Factory"* %1536 to i64*
  br label %1538

1538:                                             ; preds = %1534, %1532
  %1539 = phi i64* [ %1533, %1532 ], [ %1537, %1534 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %884) #4
  %1540 = icmp eq i64* %1539, null
  br i1 %1540, label %1621, label %1541

1541:                                             ; preds = %1538
  %1542 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1527, i64* nonnull %1539) #4
  br i1 %1542, label %1557, label %1621

1543:                                             ; preds = %1557, %1547
  %1544 = phi i64 [ %1545, %1547 ], [ %1528, %1557 ]
  %1545 = add nuw i64 %1544, 1
  %1546 = icmp ult i64 %1545, %1509
  br i1 %1546, label %1547, label %1553

1547:                                             ; preds = %1543
  %1548 = getelementptr inbounds i32, i32* %1558, i64 %1545
  %1549 = load i32, i32* %1548, align 4
  %1550 = icmp eq i32 %1549, %1527
  br i1 %1550, label %1543, label %1551

1551:                                             ; preds = %1547
  %1552 = icmp ult i64 %1545, %1519
  br i1 %1552, label %1526, label %1553

1553:                                             ; preds = %1551, %1543, %1515
  %1554 = phi i32* [ %1516, %1515 ], [ %1558, %1543 ], [ %1558, %1551 ]
  %1555 = phi i64 [ %1517, %1515 ], [ %1545, %1543 ], [ %1545, %1551 ]
  %1556 = icmp ult i64 %1555, %1509
  br i1 %1556, label %1515, label %1621

1557:                                             ; preds = %1541
  %1558 = load i32*, i32** %882, align 8
  br label %1543

1559:                                             ; preds = %1503, %1615
  %1560 = phi i64 [ %1564, %1615 ], [ 0, %1503 ]
  %1561 = phi i64 [ %1617, %1615 ], [ 0, %1503 ]
  %1562 = icmp ult i64 %1561, %1509
  br i1 %1562, label %1563, label %1621

1563:                                             ; preds = %1559
  %1564 = add i64 %1560, 1024
  %1565 = load i64, i64* %24, align 8
  %1566 = load i64*, i64** %26, align 8
  %1567 = load i32, i32* %28, align 8
  %1568 = add nsw i32 %1567, 1
  store i32 %1568, i32* %28, align 8
  %1569 = icmp ult i64 %1561, %1564
  %1570 = inttoptr i64 %1565 to i64*
  br i1 %1569, label %1572, label %1571

1571:                                             ; preds = %1563
  store i32 %1567, i32* %28, align 8
  br label %1615

1572:                                             ; preds = %1563
  %1573 = load i32*, i32** %882, align 8
  %1574 = getelementptr inbounds i32, i32* %1573, i64 %1561
  %1575 = load i32, i32* %1574, align 4
  br label %1576

1576:                                             ; preds = %1603, %1572
  %1577 = phi i32 [ %1601, %1603 ], [ %1575, %1572 ]
  %1578 = phi i64 [ %1597, %1603 ], [ %1561, %1572 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %884) #4
  %1579 = zext i32 %1577 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %12, %"class.v8::internal::Isolate"* nonnull %2, i64* %913, i64* null, i64 %1579, i64* %913, i32 3) #4
  %1580 = load i32, i32* %885, align 4
  %1581 = icmp eq i32 %1580, 4
  br i1 %1581, label %1582, label %1586

1582:                                             ; preds = %1576
  %1583 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %887, align 8
  %1584 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1583, i64 160
  %1585 = bitcast %"class.v8::internal::Factory"* %1584 to i64*
  br label %1588

1586:                                             ; preds = %1576
  %1587 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %12, i1 zeroext false) #4
  br label %1588

1588:                                             ; preds = %1586, %1582
  %1589 = phi i64* [ %1587, %1586 ], [ %1585, %1582 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %884) #4
  %1590 = icmp eq i64* %1589, null
  br i1 %1590, label %1605, label %1591

1591:                                             ; preds = %1588
  %1592 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1577, i64* nonnull %1589) #4
  br i1 %1592, label %1593, label %1605

1593:                                             ; preds = %1591
  %1594 = load i32*, i32** %882, align 8
  br label %1595

1595:                                             ; preds = %1599, %1593
  %1596 = phi i64 [ %1597, %1599 ], [ %1578, %1593 ]
  %1597 = add nuw i64 %1596, 1
  %1598 = icmp ult i64 %1597, %1509
  br i1 %1598, label %1599, label %1605

1599:                                             ; preds = %1595
  %1600 = getelementptr inbounds i32, i32* %1594, i64 %1597
  %1601 = load i32, i32* %1600, align 4
  %1602 = icmp eq i32 %1601, %1577
  br i1 %1602, label %1595, label %1603

1603:                                             ; preds = %1599
  %1604 = icmp ult i64 %1597, %1564
  br i1 %1604, label %1576, label %1605

1605:                                             ; preds = %1603, %1591, %1588, %1595
  %1606 = phi i64 [ %1597, %1595 ], [ %1578, %1588 ], [ %1578, %1591 ], [ %1597, %1603 ]
  %1607 = phi i32 [ 0, %1595 ], [ 1, %1588 ], [ 1, %1591 ], [ 0, %1603 ]
  %1608 = load i64*, i64** %862, align 8
  %1609 = load i32, i32* %28, align 8
  %1610 = load i64*, i64** %26, align 8
  store i64 %1565, i64* %24, align 8
  %1611 = add nsw i32 %1609, -1
  store i32 %1611, i32* %28, align 8
  %1612 = icmp eq i64* %1610, %1566
  br i1 %1612, label %1615, label %1613

1613:                                             ; preds = %1605
  store i64* %1566, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %1614 = load i64*, i64** %862, align 8
  br label %1615

1615:                                             ; preds = %1613, %1605, %1571
  %1616 = phi i32 [ %1607, %1613 ], [ %1607, %1605 ], [ 0, %1571 ]
  %1617 = phi i64 [ %1606, %1613 ], [ %1606, %1605 ], [ %1561, %1571 ]
  %1618 = phi i64* [ %1614, %1613 ], [ %1570, %1605 ], [ %1570, %1571 ]
  %1619 = phi i64* [ %1566, %1613 ], [ %1608, %1605 ], [ %1570, %1571 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1618, i64* %1619) #4
  %1620 = icmp eq i32 %1616, 0
  br i1 %1620, label %1559, label %1621

1621:                                             ; preds = %1559, %1615, %1553, %1538, %1541
  %1622 = phi i1 [ false, %1541 ], [ false, %1538 ], [ true, %1553 ], [ false, %1615 ], [ true, %1559 ]
  %1623 = load i32*, i32** %882, align 8
  br label %1624

1624:                                             ; preds = %1621, %1510
  %1625 = phi i32* [ %1623, %1621 ], [ %1512, %1510 ]
  %1626 = phi i1 [ %1622, %1621 ], [ true, %1510 ]
  %1627 = icmp eq i32* %1625, null
  br i1 %1627, label %1631, label %1628

1628:                                             ; preds = %1624
  %1629 = ptrtoint i32* %1625 to i64
  store i64 %1629, i64* %881, align 8
  %1630 = bitcast i32* %1625 to i8*
  call void @_ZdlPv(i8* %1630) #13
  br label %1631

1631:                                             ; preds = %1628, %1624
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %876) #4
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %874) #4
  br i1 %1626, label %1735, label %1754

1632:                                             ; preds = %1148, %1148
  %1633 = zext i32 %1031 to i64
  br i1 %861, label %1634, label %1672

1634:                                             ; preds = %1632
  %1635 = icmp eq i32 %1031, 0
  br i1 %1635, label %1735, label %1636

1636:                                             ; preds = %1634, %1669
  %1637 = phi i32 [ %1639, %1669 ], [ 0, %1634 ]
  %1638 = phi i32 [ %1670, %1669 ], [ 0, %1634 ]
  %1639 = add i32 %1637, 1024
  %1640 = load i32, i32* %28, align 8
  %1641 = add nsw i32 %1640, 1
  store i32 %1641, i32* %28, align 8
  %1642 = icmp ult i32 %1638, %1639
  br i1 %1642, label %1643, label %1669

1643:                                             ; preds = %1636
  %1644 = zext i32 %1638 to i64
  %1645 = zext i32 %1639 to i64
  br label %1646

1646:                                             ; preds = %1663, %1643
  %1647 = phi i64 [ %1644, %1643 ], [ %1664, %1663 ]
  %1648 = phi i32 [ %1638, %1643 ], [ %1665, %1663 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %870) #4
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %13, %"class.v8::internal::Isolate"* null, i64* %913, i64* null, i64 %1647, i64* %913, i32 3) #4
  %1649 = load i32, i32* %871, align 4
  %1650 = icmp eq i32 %1649, 4
  br i1 %1650, label %1653, label %1651

1651:                                             ; preds = %1646
  %1652 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %13, i1 zeroext false) #4
  br label %1657

1653:                                             ; preds = %1646
  %1654 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %873, align 8
  %1655 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1654, i64 160
  %1656 = bitcast %"class.v8::internal::Factory"* %1655 to i64*
  br label %1657

1657:                                             ; preds = %1653, %1651
  %1658 = phi i64* [ %1652, %1651 ], [ %1656, %1653 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %870) #4
  %1659 = icmp eq i64* %1658, null
  br i1 %1659, label %1754, label %1660

1660:                                             ; preds = %1657
  %1661 = trunc i64 %1647 to i32
  %1662 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1661, i64* nonnull %1658) #4
  br i1 %1662, label %1663, label %1754

1663:                                             ; preds = %1660
  %1664 = add nuw nsw i64 %1647, 1
  %1665 = add nuw i32 %1648, 1
  %1666 = icmp ult i64 %1664, %1633
  %1667 = icmp ult i64 %1664, %1645
  %1668 = and i1 %1666, %1667
  br i1 %1668, label %1646, label %1669

1669:                                             ; preds = %1663, %1636
  %1670 = phi i32 [ %1638, %1636 ], [ %1665, %1663 ]
  %1671 = icmp ult i32 %1670, %1031
  br i1 %1671, label %1636, label %1735

1672:                                             ; preds = %1632, %1725
  %1673 = phi i32 [ %1727, %1725 ], [ 0, %1632 ]
  %1674 = phi i32 [ %1677, %1725 ], [ 0, %1632 ]
  %1675 = icmp ult i32 %1673, %1031
  br i1 %1675, label %1676, label %1735

1676:                                             ; preds = %1672
  %1677 = add i32 %1674, 1024
  %1678 = load i64, i64* %24, align 8
  %1679 = load i64*, i64** %26, align 8
  %1680 = load i32, i32* %28, align 8
  %1681 = add nsw i32 %1680, 1
  store i32 %1681, i32* %28, align 8
  %1682 = icmp ult i32 %1673, %1677
  %1683 = inttoptr i64 %1678 to i64*
  br i1 %1682, label %1685, label %1684

1684:                                             ; preds = %1676
  store i32 %1680, i32* %28, align 8
  br label %1725

1685:                                             ; preds = %1676
  %1686 = zext i32 %1673 to i64
  %1687 = zext i32 %1677 to i64
  br label %1688

1688:                                             ; preds = %1705, %1685
  %1689 = phi i64 [ %1686, %1685 ], [ %1706, %1705 ]
  %1690 = phi i32 [ %1673, %1685 ], [ %1707, %1705 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %870) #4
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %13, %"class.v8::internal::Isolate"* nonnull %2, i64* %913, i64* null, i64 %1689, i64* %913, i32 3) #4
  %1691 = load i32, i32* %871, align 4
  %1692 = icmp eq i32 %1691, 4
  br i1 %1692, label %1693, label %1697

1693:                                             ; preds = %1688
  %1694 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %873, align 8
  %1695 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1694, i64 160
  %1696 = bitcast %"class.v8::internal::Factory"* %1695 to i64*
  br label %1699

1697:                                             ; preds = %1688
  %1698 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %13, i1 zeroext false) #4
  br label %1699

1699:                                             ; preds = %1697, %1693
  %1700 = phi i64* [ %1698, %1697 ], [ %1696, %1693 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %870) #4
  %1701 = icmp eq i64* %1700, null
  %1702 = trunc i64 %1689 to i32
  br i1 %1701, label %1713, label %1703

1703:                                             ; preds = %1699
  %1704 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 %1702, i64* nonnull %1700) #4
  br i1 %1704, label %1705, label %1711

1705:                                             ; preds = %1703
  %1706 = add nuw nsw i64 %1689, 1
  %1707 = add nuw i32 %1690, 1
  %1708 = icmp ult i64 %1706, %1633
  %1709 = icmp ult i64 %1706, %1687
  %1710 = and i1 %1708, %1709
  br i1 %1710, label %1688, label %1715

1711:                                             ; preds = %1703
  %1712 = trunc i64 %1689 to i32
  br label %1715

1713:                                             ; preds = %1699
  %1714 = trunc i64 %1689 to i32
  br label %1715

1715:                                             ; preds = %1713, %1705, %1711
  %1716 = phi i32 [ %1712, %1711 ], [ %1714, %1713 ], [ %1707, %1705 ]
  %1717 = phi i32 [ 1, %1711 ], [ 1, %1713 ], [ 0, %1705 ]
  %1718 = load i64*, i64** %862, align 8
  %1719 = load i32, i32* %28, align 8
  %1720 = load i64*, i64** %26, align 8
  store i64 %1678, i64* %24, align 8
  %1721 = add nsw i32 %1719, -1
  store i32 %1721, i32* %28, align 8
  %1722 = icmp eq i64* %1720, %1679
  br i1 %1722, label %1725, label %1723

1723:                                             ; preds = %1715
  store i64* %1679, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %1724 = load i64*, i64** %862, align 8
  br label %1725

1725:                                             ; preds = %1723, %1715, %1684
  %1726 = phi i32 [ %1717, %1723 ], [ %1717, %1715 ], [ 0, %1684 ]
  %1727 = phi i32 [ %1716, %1723 ], [ %1716, %1715 ], [ %1673, %1684 ]
  %1728 = phi i64* [ %1724, %1723 ], [ %1683, %1715 ], [ %1683, %1684 ]
  %1729 = phi i64* [ %1679, %1723 ], [ %1718, %1715 ], [ %1683, %1684 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1728, i64* %1729) #4
  %1730 = icmp eq i32 %1726, 0
  br i1 %1730, label %1672, label %1754

1731:                                             ; preds = %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  unreachable

1732:                                             ; preds = %1148, %1148
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  unreachable

1733:                                             ; preds = %1297
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %888) #4
  br label %1735

1734:                                             ; preds = %1299
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %888) #4
  br label %1735

1735:                                             ; preds = %1672, %1669, %1734, %1733, %1634, %1631, %1458, %1296, %1148
  %1736 = load i32, i32* %803, align 8
  %1737 = call i32 @llvm.uadd.sat.i32(i32 %1736, i32 %1031) #4
  store i32 %1737, i32* %803, align 8
  %1738 = load i32, i32* %804, align 4
  %1739 = and i32 %1738, 1
  %1740 = icmp eq i32 %1739, 0
  br i1 %1740, label %1777, label %1741

1741:                                             ; preds = %1735
  %1742 = load i64*, i64** %802, align 8
  %1743 = load i64, i64* %1742, align 8
  %1744 = add i64 %1743, 3
  %1745 = inttoptr i64 %1744 to i32*
  %1746 = load i32, i32* %1745, align 4
  %1747 = ashr i32 %1746, 1
  %1748 = icmp ugt i32 %1737, %1747
  br i1 %1748, label %1749, label %1777

1749:                                             ; preds = %1741
  call fastcc void @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor17SetDictionaryModeEv(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19) #4
  br label %1777

1750:                                             ; preds = %1294
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %895) #4
  br label %1754

1751:                                             ; preds = %1456
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %888) #4
  br label %1754

1752:                                             ; preds = %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148, %1148
  %1753 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_119IterateElementsSlowEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEjPNS1_18ArrayConcatVisitorE(%"class.v8::internal::Isolate"* %2, i64* %913, i32 %1031, %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19) #4
  br i1 %1753, label %1777, label %1754

1754:                                             ; preds = %1752, %1631, %1146, %1091, %1035, %1725, %1660, %1657, %1751, %1750, %1056
  %1755 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1756 = load i64, i64* %1755, align 8
  br label %1988

1757:                                             ; preds = %1000
  %1758 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19, i32 0, i64* %913) #4
  br i1 %1758, label %1762, label %1759

1759:                                             ; preds = %1757
  %1760 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1761 = load i64, i64* %1760, align 8
  br label %1988

1762:                                             ; preds = %1757
  %1763 = load i32, i32* %803, align 8
  %1764 = call i32 @llvm.uadd.sat.i32(i32 %1763, i32 1) #4
  store i32 %1764, i32* %803, align 8
  %1765 = load i32, i32* %804, align 4
  %1766 = and i32 %1765, 1
  %1767 = icmp eq i32 %1766, 0
  br i1 %1767, label %1777, label %1768

1768:                                             ; preds = %1762
  %1769 = load i64*, i64** %802, align 8
  %1770 = load i64, i64* %1769, align 8
  %1771 = add i64 %1770, 3
  %1772 = inttoptr i64 %1771 to i32*
  %1773 = load i32, i32* %1772, align 4
  %1774 = ashr i32 %1773, 1
  %1775 = icmp ugt i32 %1764, %1774
  br i1 %1775, label %1776, label %1777

1776:                                             ; preds = %1768
  call fastcc void @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor17SetDictionaryModeEv(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nonnull %19) #4
  br label %1777

1777:                                             ; preds = %1776, %1768, %1762, %1752, %1749, %1741, %1735, %1146, %1091
  %1778 = add nuw nsw i64 %904, 1
  %1779 = icmp eq i64 %1778, %902
  br i1 %1779, label %1780, label %903

1780:                                             ; preds = %1777
  %1781 = load i32, i32* %804, align 4
  br label %1782

1782:                                             ; preds = %1780, %849
  %1783 = phi i32 [ %1781, %1780 ], [ %851, %849 ]
  %1784 = and i32 %1783, 2
  %1785 = icmp eq i32 %1784, 0
  br i1 %1785, label %1791, label %1786

1786:                                             ; preds = %1782
  %1787 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %1788 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %1787, i32 199, i64* null, i64* null, i64* null) #4
  %1789 = load i64, i64* %1788, align 8
  %1790 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %2, i64 %1789, %"class.v8::internal::MessageLocation"* null) #4
  br label %1988

1791:                                             ; preds = %1782
  br i1 %220, label %1792, label %1932

1792:                                             ; preds = %1791
  %1793 = bitcast %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19 to %"class.v8::internal::Factory"**
  %1794 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1793, align 8
  %1795 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %1794, i8 zeroext 3, i32 0, i32 0, i32 1, i8 zeroext 0) #4
  %1796 = bitcast %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19 to %"class.v8::internal::FactoryBase"**
  %1797 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %1796, align 8
  %1798 = load i32, i32* %803, align 8
  %1799 = uitofp i32 %1798 to double
  %1800 = icmp ult i32 %1798, 1073741824
  %1801 = bitcast double %1799 to i64
  %1802 = icmp ne i64 %1801, -9223372036854775808
  %1803 = and i1 %1800, %1802
  %1804 = sitofp i32 %1798 to double
  %1805 = fcmp oeq double %1804, %1799
  %1806 = and i1 %1805, %1803
  br i1 %1806, label %1807, label %1832

1807:                                             ; preds = %1792
  %1808 = sext i32 %1798 to i64
  %1809 = shl nsw i64 %1808, 1
  %1810 = bitcast %"class.v8::internal::FactoryBase"* %1797 to %"class.v8::internal::Isolate"*
  %1811 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %1797, i64 45608
  %1812 = bitcast %"class.v8::internal::FactoryBase"* %1811 to %"class.v8::internal::CanonicalHandleScope"**
  %1813 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1812, align 8
  %1814 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1813, null
  br i1 %1814, label %1817, label %1815

1815:                                             ; preds = %1807
  %1816 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1813, i64 %1809) #4
  br label %1837

1817:                                             ; preds = %1807
  %1818 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %1797, i64 45584
  %1819 = bitcast %"class.v8::internal::FactoryBase"* %1818 to i64**
  %1820 = load i64*, i64** %1819, align 8
  %1821 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %1797, i64 45592
  %1822 = bitcast %"class.v8::internal::FactoryBase"* %1821 to i64**
  %1823 = load i64*, i64** %1822, align 8
  %1824 = icmp eq i64* %1820, %1823
  br i1 %1824, label %1825, label %1827

1825:                                             ; preds = %1817
  %1826 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1810) #4
  br label %1827

1827:                                             ; preds = %1825, %1817
  %1828 = phi i64* [ %1826, %1825 ], [ %1820, %1817 ]
  %1829 = ptrtoint i64* %1828 to i64
  %1830 = add i64 %1829, 8
  %1831 = inttoptr i64 %1830 to i64*
  store i64* %1831, i64** %1819, align 8
  store i64 %1809, i64* %1828, align 8
  br label %1837

1832:                                             ; preds = %1792
  %1833 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %1797) #4
  %1834 = load i64, i64* %1833, align 8
  %1835 = add i64 %1834, 3
  %1836 = inttoptr i64 %1835 to double*
  store double %1799, double* %1836, align 1
  br label %1837

1837:                                             ; preds = %1832, %1827, %1815
  %1838 = phi i64* [ %1833, %1832 ], [ %1816, %1815 ], [ %1828, %1827 ]
  %1839 = load i32, i32* %804, align 4
  %1840 = and i32 %1839, 1
  %1841 = icmp eq i32 %1840, 0
  %1842 = select i1 %1841, i8 12, i8 3
  %1843 = call i64* @_ZN2v88internal8JSObject24GetElementsTransitionMapENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %1795, i8 zeroext %1842) #4
  %1844 = load i64, i64* %1795, align 8
  %1845 = load i64, i64* %1838, align 8
  %1846 = add i64 %1844, 11
  %1847 = inttoptr i64 %1846 to i32*
  %1848 = trunc i64 %1845 to i32
  store atomic volatile i32 %1848, i32* %1847 monotonic, align 4
  %1849 = and i64 %1845, 1
  %1850 = icmp eq i64 %1849, 0
  br i1 %1850, label %1874, label %1851

1851:                                             ; preds = %1837
  %1852 = and i64 %1844, -262144
  %1853 = or i64 %1852, 8
  %1854 = inttoptr i64 %1853 to i64*
  %1855 = load i64, i64* %1854, align 8
  %1856 = and i64 %1855, 262144
  %1857 = icmp eq i64 %1856, 0
  br i1 %1857, label %1862, label %1858

1858:                                             ; preds = %1851
  %1859 = or i64 %1852, 16
  %1860 = inttoptr i64 %1859 to %"class.v8::internal::Heap"**
  %1861 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1860, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1861, i64 %1844, i64 %1846, i64 %1845) #4
  br label %1862

1862:                                             ; preds = %1858, %1851
  %1863 = and i64 %1845, -262144
  %1864 = or i64 %1863, 8
  %1865 = inttoptr i64 %1864 to i64*
  %1866 = load i64, i64* %1865, align 8
  %1867 = and i64 %1866, 24
  %1868 = icmp eq i64 %1867, 0
  br i1 %1868, label %1874, label %1869

1869:                                             ; preds = %1862
  %1870 = load i64, i64* %1854, align 8
  %1871 = and i64 %1870, 24
  %1872 = icmp eq i64 %1871, 0
  br i1 %1872, label %1873, label %1874

1873:                                             ; preds = %1869
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1844, i64 %1846, i64 %1845) #4
  br label %1874

1874:                                             ; preds = %1873, %1869, %1862, %1837
  %1875 = load i64, i64* %1795, align 8
  %1876 = load i64*, i64** %802, align 8
  %1877 = load i64, i64* %1876, align 8
  %1878 = add i64 %1875, 7
  %1879 = inttoptr i64 %1878 to i32*
  %1880 = trunc i64 %1877 to i32
  store atomic volatile i32 %1880, i32* %1879 monotonic, align 4
  %1881 = and i64 %1877, 1
  %1882 = icmp eq i64 %1881, 0
  br i1 %1882, label %1894, label %1883

1883:                                             ; preds = %1874
  %1884 = and i64 %1875, -262144
  %1885 = or i64 %1884, 8
  %1886 = inttoptr i64 %1885 to i64*
  %1887 = load i64, i64* %1886, align 8
  %1888 = and i64 %1887, 262144
  %1889 = icmp eq i64 %1888, 0
  br i1 %1889, label %1894, label %1890

1890:                                             ; preds = %1883
  %1891 = or i64 %1884, 16
  %1892 = inttoptr i64 %1891 to %"class.v8::internal::Heap"**
  %1893 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1892, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1893, i64 %1875, i64 %1878, i64 %1877) #4
  br label %1894

1894:                                             ; preds = %1890, %1883, %1874
  %1895 = and i64 %1877, -262144
  %1896 = or i64 %1895, 8
  %1897 = inttoptr i64 %1896 to i64*
  %1898 = load i64, i64* %1897, align 8
  %1899 = and i64 %1898, 24
  %1900 = icmp eq i64 %1899, 0
  br i1 %1900, label %1909, label %1901

1901:                                             ; preds = %1894
  %1902 = and i64 %1875, -262144
  %1903 = or i64 %1902, 8
  %1904 = inttoptr i64 %1903 to i64*
  %1905 = load i64, i64* %1904, align 8
  %1906 = and i64 %1905, 24
  %1907 = icmp eq i64 %1906, 0
  br i1 %1907, label %1908, label %1909

1908:                                             ; preds = %1901
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1875, i64 %1878, i64 %1877) #4
  br label %1909

1909:                                             ; preds = %1908, %1901, %1894
  %1910 = load i64, i64* %1795, align 8
  %1911 = load i64, i64* %1843, align 8
  %1912 = add i64 %1910, -1
  %1913 = inttoptr i64 %1912 to i32*
  %1914 = trunc i64 %1911 to i32
  store atomic volatile i32 %1914, i32* %1913 release, align 4
  %1915 = icmp eq i32 %1914, 0
  %1916 = and i64 %1911, 1
  %1917 = icmp eq i64 %1916, 0
  %1918 = or i1 %1915, %1917
  br i1 %1918, label %1930, label %1919

1919:                                             ; preds = %1909
  %1920 = and i64 %1910, -262144
  %1921 = or i64 %1920, 8
  %1922 = inttoptr i64 %1921 to i64*
  %1923 = load i64, i64* %1922, align 8
  %1924 = and i64 %1923, 262144
  %1925 = icmp eq i64 %1924, 0
  br i1 %1925, label %1930, label %1926

1926:                                             ; preds = %1919
  %1927 = or i64 %1920, 16
  %1928 = inttoptr i64 %1927 to %"class.v8::internal::Heap"**
  %1929 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1928, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1929, i64 %1910, i64 0, i64 %1911) #4
  br label %1930

1930:                                             ; preds = %1926, %1919, %1909
  %1931 = load i64, i64* %1795, align 8
  br label %1988

1932:                                             ; preds = %1791
  %1933 = load i64*, i64** %802, align 8
  %1934 = bitcast %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %19 to %"class.v8::internal::FactoryBase"**
  %1935 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %1934, align 8
  %1936 = load i32, i32* %803, align 8
  %1937 = uitofp i32 %1936 to double
  %1938 = icmp ult i32 %1936, 1073741824
  %1939 = bitcast double %1937 to i64
  %1940 = icmp ne i64 %1939, -9223372036854775808
  %1941 = and i1 %1938, %1940
  %1942 = sitofp i32 %1936 to double
  %1943 = fcmp oeq double %1942, %1937
  %1944 = and i1 %1943, %1941
  br i1 %1944, label %1945, label %1970

1945:                                             ; preds = %1932
  %1946 = sext i32 %1936 to i64
  %1947 = shl nsw i64 %1946, 1
  %1948 = bitcast %"class.v8::internal::FactoryBase"* %1935 to %"class.v8::internal::Isolate"*
  %1949 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %1935, i64 45608
  %1950 = bitcast %"class.v8::internal::FactoryBase"* %1949 to %"class.v8::internal::CanonicalHandleScope"**
  %1951 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1950, align 8
  %1952 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1951, null
  br i1 %1952, label %1955, label %1953

1953:                                             ; preds = %1945
  %1954 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1951, i64 %1947) #4
  br label %1975

1955:                                             ; preds = %1945
  %1956 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %1935, i64 45584
  %1957 = bitcast %"class.v8::internal::FactoryBase"* %1956 to i64**
  %1958 = load i64*, i64** %1957, align 8
  %1959 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %1935, i64 45592
  %1960 = bitcast %"class.v8::internal::FactoryBase"* %1959 to i64**
  %1961 = load i64*, i64** %1960, align 8
  %1962 = icmp eq i64* %1958, %1961
  br i1 %1962, label %1963, label %1965

1963:                                             ; preds = %1955
  %1964 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1948) #4
  br label %1965

1965:                                             ; preds = %1963, %1955
  %1966 = phi i64* [ %1964, %1963 ], [ %1958, %1955 ]
  %1967 = ptrtoint i64* %1966 to i64
  %1968 = add i64 %1967, 8
  %1969 = inttoptr i64 %1968 to i64*
  store i64* %1969, i64** %1957, align 8
  store i64 %1947, i64* %1966, align 8
  br label %1975

1970:                                             ; preds = %1932
  %1971 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %1935) #4
  %1972 = load i64, i64* %1971, align 8
  %1973 = add i64 %1972, 3
  %1974 = inttoptr i64 %1973 to double*
  store double %1937, double* %1974, align 1
  br label %1975

1975:                                             ; preds = %1970, %1965, %1953
  %1976 = phi i64* [ %1971, %1970 ], [ %1954, %1953 ], [ %1966, %1965 ]
  %1977 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %797, align 8
  %1978 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1977, i64 0, i32 0, i32 7, i32 0, i64 363
  %1979 = call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %1977, i64* %1933, i64* %1978, i64* %1976, i32 0, i64 1) #4
  %1980 = icmp eq i64* %1979, null
  %1981 = icmp eq i64* %1933, null
  %1982 = or i1 %1981, %1980
  br i1 %1982, label %1983, label %1986

1983:                                             ; preds = %1975
  %1984 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1985 = load i64, i64* %1984, align 8
  br label %1988

1986:                                             ; preds = %1975
  %1987 = load i64, i64* %1933, align 8
  br label %1988

1988:                                             ; preds = %1986, %1983, %1930, %1786, %1759, %1754, %997
  %1989 = phi i64 [ %1790, %1786 ], [ %1931, %1930 ], [ %1985, %1983 ], [ %1987, %1986 ], [ %1761, %1759 ], [ %1756, %1754 ], [ %999, %997 ]
  %1990 = load i64*, i64** %802, align 8
  call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %1990) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %796) #4
  br label %1991

1991:                                             ; preds = %132, %142, %1988, %790, %753, %148, %207, %197, %56
  %1992 = phi i64 [ %58, %56 ], [ %133, %132 ], [ %144, %142 ], [ %198, %197 ], [ %209, %207 ], [ %150, %148 ], [ %756, %753 ], [ %1989, %1988 ], [ %792, %790 ]
  %1993 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %1993, label %2007, label %1994

1994:                                             ; preds = %1991
  %1995 = inttoptr i64 %25 to i64*
  %1996 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %23, i64 0, i32 0
  %1997 = load i64*, i64** %1996, align 8
  store i64 %25, i64* %24, align 8
  %1998 = load i32, i32* %28, align 8
  %1999 = add nsw i32 %1998, -1
  store i32 %1999, i32* %28, align 8
  %2000 = load i64*, i64** %26, align 8
  %2001 = icmp eq i64* %2000, %27
  br i1 %2001, label %2004, label %2002

2002:                                             ; preds = %1994
  store i64* %27, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #4
  %2003 = load i64*, i64** %1996, align 8
  br label %2004

2004:                                             ; preds = %2002, %1994
  %2005 = phi i64* [ %2003, %2002 ], [ %1995, %1994 ]
  %2006 = phi i64* [ %27, %2002 ], [ %1997, %1994 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %2005, i64* %2006) #4
  br label %2007

2007:                                             ; preds = %1991, %2004
  ret i64 %1992

2008:                                             ; preds = %470
  %2009 = load i64, i64* %224, align 8
  %2010 = trunc i64 %2009 to i32
  %2011 = icmp ne i32 %478, %2010
  %2012 = zext i1 %2011 to i32
  %2013 = add nsw i32 %471, %2012
  br label %2014

2014:                                             ; preds = %2008, %470
  %2015 = phi i32 [ %471, %470 ], [ %2013, %2008 ]
  %2016 = add i64 %455, 2
  %2017 = add i64 %456, -2
  %2018 = icmp eq i64 %2017, 0
  br i1 %2018, label %512, label %453
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal5Debug31PerformSideEffectCheckForObjectENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #4

declare i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_137EnsureJSArrayWithWritableFastElementsEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_16BuiltinArgumentsEii(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::BuiltinArguments"* readonly, i32, i32) unnamed_addr #5 {
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %89, label %9

9:                                                ; preds = %5
  %10 = and i64 %6, -4294967296
  %11 = add i64 %6, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 1085
  br i1 %19, label %20, label %89

20:                                               ; preds = %9
  %21 = load atomic i32, i32* %12 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  %24 = add i64 %23, 10
  %25 = inttoptr i64 %24 to i8*
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, -4
  %28 = icmp eq i8 %27, 48
  br i1 %28, label %89, label %29

29:                                               ; preds = %20
  %30 = load atomic i32, i32* %12 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %10, %31
  %33 = add i64 %32, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 134217728
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %89, label %38

38:                                               ; preds = %29
  %39 = icmp eq %"class.v8::internal::BuiltinArguments"* %2, null
  br i1 %39, label %89, label %40

40:                                               ; preds = %38
  %41 = load atomic i32, i32* %12 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %10, %42
  %44 = add i64 %43, 15
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %86, label %51

51:                                               ; preds = %40
  %52 = zext i32 %46 to i64
  %53 = or i64 %10, %52
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 111
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  %59 = trunc i64 %55 to i32
  br label %60

60:                                               ; preds = %79, %51
  %61 = phi i64 [ %53, %51 ], [ %84, %79 ]
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp ult i16 %70, 1042
  br i1 %71, label %89, label %72

72:                                               ; preds = %60
  %73 = add i64 %61, 7
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp ne i32 %75, %58
  %77 = icmp ne i32 %75, %59
  %78 = and i1 %76, %77
  br i1 %78, label %89, label %79

79:                                               ; preds = %72
  %80 = add i64 %67, 15
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %62, %83
  %85 = icmp eq i32 %82, %49
  br i1 %85, label %86, label %60

86:                                               ; preds = %79, %40
  %87 = tail call zeroext i1 @_ZN2v88internal7Isolate14IsInAnyContextENS0_6ObjectEj(%"class.v8::internal::Isolate"* %0, i64 %6, i32 77) #4
  br i1 %87, label %89, label %88

88:                                               ; preds = %86
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_133MatchArrayElementsKindToArgumentsEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEEPNS0_16BuiltinArgumentsEii(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::BuiltinArguments"* nonnull %2, i32 %3, i32 %4)
  br label %89

89:                                               ; preds = %60, %72, %29, %5, %88, %20, %38, %86, %9
  %90 = phi i1 [ false, %9 ], [ true, %88 ], [ false, %20 ], [ false, %29 ], [ true, %38 ], [ false, %86 ], [ false, %5 ], [ false, %72 ], [ false, %60 ]
  ret i1 %90
}

declare void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_133MatchArrayElementsKindToArgumentsEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEEPNS0_16BuiltinArgumentsEii(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::BuiltinArguments"* nocapture readonly, i32, i32) unnamed_addr #0 {
  %6 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %2, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = add nsw i32 %8, -4
  %10 = icmp sgt i32 %9, %3
  br i1 %10, label %11, label %90

11:                                               ; preds = %5
  %12 = load i64, i64* %1, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 10
  %20 = inttoptr i64 %19 to i8*
  %21 = load i8, i8* %20, align 1
  %22 = lshr i8 %21, 2
  %23 = and i8 %21, -8
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %90, label %25

25:                                               ; preds = %11
  %26 = add nsw i32 %4, %3
  %27 = icmp slt i32 %9, %26
  %28 = select i1 %27, i32 %9, i32 %26
  %29 = icmp sgt i32 %28, %3
  br i1 %29, label %30, label %90

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %2, i64 0, i32 0, i32 1
  %32 = bitcast i64** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sext i32 %3 to i64
  %35 = sext i32 %28 to i64
  br label %36

36:                                               ; preds = %30, %60
  %37 = phi i64 [ %34, %30 ], [ %62, %60 ]
  %38 = phi i8 [ %22, %30 ], [ %61, %60 ]
  %39 = shl i64 %37, 32
  %40 = sub i64 -21474836480, %39
  %41 = ashr exact i64 %40, 32
  %42 = add i64 %7, %41
  %43 = shl nsw i64 %42, 3
  %44 = sub i64 %33, %43
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %36
  %50 = and i64 %46, -4294967296
  %51 = add i64 %46, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = icmp eq i16 %58, 66
  br i1 %59, label %60, label %64

60:                                               ; preds = %36, %49
  %61 = phi i8 [ %38, %36 ], [ 4, %49 ]
  %62 = add nsw i64 %37, 1
  %63 = icmp slt i64 %62, %35
  br i1 %63, label %36, label %64

64:                                               ; preds = %60, %49
  %65 = phi i8 [ %61, %60 ], [ 2, %49 ]
  %66 = icmp eq i8 %65, %22
  br i1 %66, label %90, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %1, i8 zeroext %65) #4
  %76 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = inttoptr i64 %70 to i64*
  %79 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %80 = load i64*, i64** %79, align 8
  store i64 %70, i64* %69, align 8
  %81 = load i32, i32* %73, align 8
  %82 = add nsw i32 %81, -1
  store i32 %82, i32* %73, align 8
  %83 = load i64*, i64** %71, align 8
  %84 = icmp eq i64* %83, %72
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  store i64* %72, i64** %71, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #4
  %86 = load i64*, i64** %79, align 8
  br label %87

87:                                               ; preds = %85, %77
  %88 = phi i64* [ %86, %85 ], [ %78, %77 ]
  %89 = phi i64* [ %72, %85 ], [ %80, %77 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %88, i64* %89) #4
  br label %90

90:                                               ; preds = %25, %87, %67, %11, %64, %5
  ret void
}

declare zeroext i1 @_ZN2v88internal7Isolate14IsInAnyContextENS0_6ObjectEj(%"class.v8::internal::Isolate"*, i64, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6Object20SetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %11 = ptrtoint i64* %2 to i64
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %12, align 8
  %13 = load i64, i64* %2, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 1
  %15 = and i64 %13, -4294967296
  %16 = add i64 %13, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ult i16 %23, 64
  %25 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  br i1 %24, label %26, label %40

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %27, align 8
  %28 = add i64 %13, 3
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -536870910
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = lshr i32 %30, 2
  %35 = and i32 %34, 16777215
  %36 = zext i32 %35 to i64
  store i64 %36, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br label %48

37:                                               ; preds = %26
  %38 = and i32 %30, 3
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br label %50

41:                                               ; preds = %37
  %42 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %7, i64* %14) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br i1 %42, label %48, label %43

43:                                               ; preds = %41
  %44 = load i64, i64* %2, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, -1
  %47 = inttoptr i64 %46 to i32*
  br label %50

48:                                               ; preds = %41, %33
  %49 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i64*
  store i64 %11, i64* %49, align 8
  br label %67

50:                                               ; preds = %43, %40
  %51 = phi i32* [ %47, %43 ], [ %17, %40 ]
  %52 = phi i64 [ %45, %43 ], [ %15, %40 ]
  store i64 -1, i64* %14, align 8
  %53 = load atomic i32, i32* %51 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %52, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = and i16 %58, -32
  %60 = icmp eq i16 %59, 32
  br i1 %60, label %61, label %65

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %63 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %62, align 8
  %64 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %63, %"class.v8::internal::Isolate"* %0, i64* %2) #4
  br label %65

65:                                               ; preds = %61, %50
  %66 = phi i64* [ %64, %61 ], [ %2, %50 ]
  store i64* %66, i64** %12, align 8
  br label %67

67:                                               ; preds = %48, %65
  %68 = phi i64* [ %2, %48 ], [ %66, %65 ]
  %69 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %69) #4
  %70 = load i64, i64* %14, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %9, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %68, i64 %70, i64* %1, i32 3) #4
  %71 = call i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %9, i64* %3, i32 %5, i64 %4) #4
  %72 = trunc i16 %71 to i8
  %73 = icmp eq i8 %72, 0
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %69) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  %74 = select i1 %73, i64* null, i64* %3
  ret i64* %74
}

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

declare i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #5 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #4
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1149"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1170"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #4
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1170"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #4
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1170"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1170"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #4
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #4
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #4
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internal12_GLOBAL__N_116GenericArrayPushEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"*, %"class.v8::internal::BuiltinArguments"* nocapture readonly) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %6, -8
  %11 = add i64 %10, 40
  %12 = add i64 %11, %9
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = and i64 %14, -4294967296
  %19 = add i64 %14, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ugt i16 %26, 185
  br i1 %27, label %30, label %28

28:                                               ; preds = %17, %2
  %29 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %13, i8* null) #4
  br label %30

30:                                               ; preds = %17, %28
  %31 = phi i64* [ %29, %28 ], [ %13, %17 ]
  %32 = icmp eq i64* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %35 = load i64, i64* %34, align 8
  br label %192

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %31) #4
  %38 = icmp eq i64* %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %41 = load i64, i64* %40, align 8
  br label %192

42:                                               ; preds = %36
  %43 = load i64, i64* %5, align 8
  %44 = trunc i64 %43 to i32
  %45 = add i32 %44, -5
  %46 = load i64, i64* %37, align 8
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %42
  %50 = trunc i64 %46 to i32
  %51 = ashr i32 %50, 1
  %52 = sitofp i32 %51 to double
  br label %57

53:                                               ; preds = %42
  %54 = add i64 %46, 3
  %55 = inttoptr i64 %54 to double*
  %56 = load double, double* %55, align 1
  br label %57

57:                                               ; preds = %49, %53
  %58 = phi double [ %52, %49 ], [ %56, %53 ]
  %59 = sitofp i32 %45 to double
  %60 = fsub double 0x433FFFFFFFFFFFFF, %58
  %61 = fcmp olt double %60, %59
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = icmp sgt i32 %45, 0
  br i1 %63, label %64, label %143

64:                                               ; preds = %62
  %65 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  %66 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  %67 = zext i32 %45 to i64
  br label %104

68:                                               ; preds = %57
  %69 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %70 = sext i32 %45 to i64
  %71 = add nsw i64 %70, 1073741824
  %72 = icmp ult i64 %71, 2147483648
  br i1 %72, label %73, label %93

73:                                               ; preds = %68
  %74 = shl nsw i64 %70, 1
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %76 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %75, align 8
  %77 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %76, i64 %74) #4
  br label %99

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = icmp eq i64* %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i64* [ %87, %86 ], [ %82, %80 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %81, align 8
  store i64 %74, i64* %89, align 8
  br label %99

93:                                               ; preds = %68
  %94 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %95 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %94) #4
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 3
  %98 = inttoptr i64 %97 to double*
  store double %59, double* %98, align 1
  br label %99

99:                                               ; preds = %78, %88, %93
  %100 = phi i64* [ %95, %93 ], [ %79, %78 ], [ %89, %88 ]
  %101 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %69, i32 298, i64* %100, i64* nonnull %37, i64* null) #4
  %102 = load i64, i64* %101, align 8
  %103 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %102, %"class.v8::internal::MessageLocation"* null) #4
  br label %192

104:                                              ; preds = %141, %64
  %105 = phi i64 [ %43, %64 ], [ %142, %141 ]
  %106 = phi i64 [ 0, %64 ], [ %108, %141 ]
  %107 = phi double [ %58, %64 ], [ %139, %141 ]
  %108 = add nuw nsw i64 %106, 1
  %109 = shl i64 %106, 32
  %110 = sub i64 -25769803776, %109
  %111 = ashr exact i64 %110, 32
  %112 = add i64 %105, %111
  %113 = shl nsw i64 %112, 3
  %114 = load i64, i64* %8, align 8
  %115 = sub i64 %114, %113
  %116 = inttoptr i64 %115 to i64*
  %117 = fcmp ugt double %107, 0x41EFFFFFFFC00000
  br i1 %117, label %129, label %118

118:                                              ; preds = %104
  %119 = fptoui double %107 to i32
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %65) #4
  %120 = zext i32 %119 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %3, %"class.v8::internal::Isolate"* %0, i64* nonnull %31, i64* null, i64 %120, i64* nonnull %31, i32 3) #4
  %121 = call i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %3, i64* %116, i32 0, i64 1) #4
  %122 = trunc i16 %121 to i8
  %123 = icmp eq i8 %122, 0
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %65) #4
  %124 = icmp eq i64 %115, 0
  %125 = or i1 %124, %123
  br i1 %125, label %126, label %138

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %128 = load i64, i64* %127, align 8
  br label %192

129:                                              ; preds = %104
  %130 = fptoui double %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %66) #4
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64* nonnull %31, i64* null, i64 %130, i64* nonnull %31, i32 3) #4
  %131 = call i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %4, i64* %116, i32 0, i64 1) #4
  %132 = trunc i16 %131 to i8
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %135, label %134

134:                                              ; preds = %129
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %66) #4
  br label %138

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %137 = load i64, i64* %136, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %66) #4
  br label %192

138:                                              ; preds = %118, %134
  %139 = fadd double %107, 1.000000e+00
  %140 = icmp eq i64 %108, %67
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = load i64, i64* %5, align 8
  br label %104

143:                                              ; preds = %138, %62
  %144 = phi double [ %58, %62 ], [ %139, %138 ]
  %145 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %146 = fcmp ult double %144, 0xC1D0000000000000
  %147 = fcmp ugt double %144, 0x41CFFFFFFF800000
  %148 = or i1 %147, %146
  %149 = bitcast double %144 to i64
  %150 = icmp eq i64 %149, -9223372036854775808
  %151 = or i1 %148, %150
  br i1 %151, label %177, label %152

152:                                              ; preds = %143
  %153 = fptosi double %144 to i32
  %154 = sitofp i32 %153 to double
  %155 = fcmp oeq double %144, %154
  br i1 %155, label %156, label %177

156:                                              ; preds = %152
  %157 = sext i32 %153 to i64
  %158 = shl nsw i64 %157, 1
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %160 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %159, align 8
  %161 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %156
  %163 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %160, i64 %158) #4
  br label %182

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %168 = load i64*, i64** %167, align 8
  %169 = icmp eq i64* %166, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %172

172:                                              ; preds = %170, %164
  %173 = phi i64* [ %171, %170 ], [ %166, %164 ]
  %174 = ptrtoint i64* %173 to i64
  %175 = add i64 %174, 8
  %176 = inttoptr i64 %175 to i64*
  store i64* %176, i64** %165, align 8
  store i64 %158, i64* %173, align 8
  br label %182

177:                                              ; preds = %152, %143
  %178 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %145) #4
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, 3
  %181 = inttoptr i64 %180 to double*
  store double %144, double* %181, align 1
  br label %182

182:                                              ; preds = %162, %172, %177
  %183 = phi i64* [ %178, %177 ], [ %163, %162 ], [ %173, %172 ]
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %185 = call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %31, i64* %184, i64* %183, i32 0, i64 1) #4
  %186 = icmp eq i64* %185, null
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %189 = load i64, i64* %188, align 8
  br label %192

190:                                              ; preds = %182
  %191 = load i64, i64* %183, align 8
  br label %192

192:                                              ; preds = %99, %39, %126, %135, %187, %190, %33
  %193 = phi i64 [ %35, %33 ], [ %41, %39 ], [ %103, %99 ], [ %137, %135 ], [ %128, %126 ], [ %191, %190 ], [ %189, %187 ]
  ret i64 %193
}

declare zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internal12_GLOBAL__N_115GenericArrayPopEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"*, %"class.v8::internal::BuiltinArguments"* nocapture readonly) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 1
  %6 = bitcast i64** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %4, -8
  %9 = add i64 %8, 40
  %10 = add i64 %9, %7
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  %16 = and i64 %12, -4294967296
  %17 = add i64 %12, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp ugt i16 %24, 185
  br i1 %25, label %28, label %26

26:                                               ; preds = %15, %2
  %27 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %11, i8* null) #4
  br label %28

28:                                               ; preds = %15, %26
  %29 = phi i64* [ %27, %26 ], [ %11, %15 ]
  %30 = icmp eq i64* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %140

33:                                               ; preds = %28
  %34 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %29) #4
  %35 = icmp eq i64* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %140

38:                                               ; preds = %33
  %39 = load i64, i64* %34, align 8
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = trunc i64 %39 to i32
  %44 = ashr i32 %43, 1
  %45 = sitofp i32 %44 to double
  br label %50

46:                                               ; preds = %38
  %47 = add i64 %39, 3
  %48 = inttoptr i64 %47 to double*
  %49 = load double, double* %48, align 1
  br label %50

50:                                               ; preds = %42, %46
  %51 = phi double [ %45, %42 ], [ %49, %46 ]
  %52 = fcmp oeq double %51, 0.000000e+00
  %53 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %52, label %54, label %82

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 0) #4
  br label %74

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 0, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  %76 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %29, i64* %55, i64* %75, i32 0, i64 1) #4
  %77 = icmp eq i64* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %140

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %140

82:                                               ; preds = %50
  %83 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %84 = fadd double %51, -1.000000e+00
  %85 = fcmp ult double %84, 0xC1D0000000000000
  %86 = fcmp ugt double %84, 0x41CFFFFFFF800000
  %87 = or i1 %86, %85
  %88 = bitcast double %84 to i64
  %89 = icmp eq i64 %88, -9223372036854775808
  %90 = or i1 %87, %89
  br i1 %90, label %116, label %91

91:                                               ; preds = %82
  %92 = fptosi double %84 to i32
  %93 = sitofp i32 %92 to double
  %94 = fcmp oeq double %84, %93
  br i1 %94, label %95, label %116

95:                                               ; preds = %91
  %96 = sext i32 %92 to i64
  %97 = shl nsw i64 %96, 1
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %99 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %98, align 8
  %100 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %95
  %102 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %99, i64 %97) #4
  br label %121

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %107 = load i64*, i64** %106, align 8
  %108 = icmp eq i64* %105, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %103
  %110 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %111

111:                                              ; preds = %109, %103
  %112 = phi i64* [ %110, %109 ], [ %105, %103 ]
  %113 = ptrtoint i64* %112 to i64
  %114 = add i64 %113, 8
  %115 = inttoptr i64 %114 to i64*
  store i64* %115, i64** %104, align 8
  store i64 %97, i64* %112, align 8
  br label %121

116:                                              ; preds = %91, %82
  %117 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %83) #4
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 3
  %120 = inttoptr i64 %119 to double*
  store double %84, double* %120, align 1
  br label %121

121:                                              ; preds = %101, %111, %116
  %122 = phi i64* [ %117, %116 ], [ %102, %101 ], [ %112, %111 ]
  %123 = tail call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %53, i64* %122, i32 2) #4
  %124 = tail call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %29, i64* %123)
  %125 = icmp eq i64* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %140

128:                                              ; preds = %121
  %129 = tail call i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64* nonnull %29, i64* %123, i1 zeroext true) #4
  %130 = trunc i16 %129 to i8
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %140

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %136 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %29, i64* %135, i64* %122, i32 0, i64 1) #4
  %137 = icmp eq i64* %136, null
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %139 = select i1 %137, i64* %138, i64* %124
  br label %140

140:                                              ; preds = %134, %80, %36, %78, %126, %132, %31
  %141 = phi i64* [ %32, %31 ], [ %37, %36 ], [ %81, %80 ], [ %79, %78 ], [ %133, %132 ], [ %127, %126 ], [ %139, %134 ]
  %142 = load i64, i64* %141, align 8
  ret i64 %142
}

declare i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i16 @_ZN2v88internal7JSArray9SetLengthENS0_6HandleIS1_EEj(i64*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = ptrtoint i64* %2 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %9, align 8
  %10 = load i64, i64* %2, align 8
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 1
  %12 = and i64 %10, -4294967296
  %13 = add i64 %10, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 64
  %22 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  br i1 %21, label %23, label %37

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %24, align 8
  %25 = add i64 %10, 3
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -536870910
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = lshr i32 %27, 2
  %32 = and i32 %31, 16777215
  %33 = zext i32 %32 to i64
  store i64 %33, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  br label %45

34:                                               ; preds = %23
  %35 = and i32 %27, 3
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %38

37:                                               ; preds = %34, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  br label %47

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %4, i64* %11) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = load i64, i64* %2, align 8
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, -1
  %44 = inttoptr i64 %43 to i32*
  br label %47

45:                                               ; preds = %38, %30
  %46 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i64*
  store i64 %8, i64* %46, align 8
  br label %64

47:                                               ; preds = %40, %37
  %48 = phi i32* [ %44, %40 ], [ %14, %37 ]
  %49 = phi i64 [ %42, %40 ], [ %12, %37 ]
  store i64 -1, i64* %11, align 8
  %50 = load atomic i32, i32* %48 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %49, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = and i16 %55, -32
  %57 = icmp eq i16 %56, 32
  br i1 %57, label %58, label %62

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %59, align 8
  %61 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %60, %"class.v8::internal::Isolate"* %0, i64* %2) #4
  br label %62

62:                                               ; preds = %58, %47
  %63 = phi i64* [ %61, %58 ], [ %2, %47 ]
  store i64* %63, i64** %9, align 8
  br label %64

64:                                               ; preds = %45, %62
  %65 = phi i64* [ %2, %45 ], [ %63, %62 ]
  %66 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %66) #4
  %67 = load i64, i64* %11, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %65, i64 %67, i64* %1, i32 3) #4
  %68 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %66) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret i64* %68
}

declare i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64*, i64*, i1 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_117SetLengthPropertyEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEd(%"class.v8::internal::Isolate"*, i64*, double) unnamed_addr #0 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp eq i16 %13, 1085
  br i1 %14, label %15, label %24

15:                                               ; preds = %3
  %16 = tail call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %1) #4
  br i1 %16, label %24, label %17

17:                                               ; preds = %15
  %18 = fptoui double %2 to i32
  %19 = tail call i16 @_ZN2v88internal7JSArray9SetLengthENS0_6HandleIS1_EEj(i64* %1, i32 %18) #4
  %20 = trunc i16 %19 to i8
  %21 = icmp eq i8 %20, 0
  %22 = ptrtoint i64* %1 to i64
  %23 = select i1 %21, i64 0, i64 %22
  br label %67

24:                                               ; preds = %15, %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %26 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %27 = fcmp ult double %2, 0xC1D0000000000000
  %28 = fcmp ugt double %2, 0x41CFFFFFFF800000
  %29 = or i1 %28, %27
  %30 = bitcast double %2 to i64
  %31 = icmp eq i64 %30, -9223372036854775808
  %32 = or i1 %29, %31
  br i1 %32, label %58, label %33

33:                                               ; preds = %24
  %34 = fptosi double %2 to i32
  %35 = sitofp i32 %34 to double
  %36 = fcmp oeq double %35, %2
  br i1 %36, label %37, label %58

37:                                               ; preds = %33
  %38 = sext i32 %34 to i64
  %39 = shl nsw i64 %38, 1
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %41 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %42 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %41, i64 %39) #4
  br label %63

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = icmp eq i64* %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %53

53:                                               ; preds = %51, %45
  %54 = phi i64* [ %52, %51 ], [ %47, %45 ]
  %55 = ptrtoint i64* %54 to i64
  %56 = add i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  store i64* %57, i64** %46, align 8
  store i64 %39, i64* %54, align 8
  br label %63

58:                                               ; preds = %33, %24
  %59 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %26) #4
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 3
  %62 = inttoptr i64 %61 to double*
  store double %2, double* %62, align 1
  br label %63

63:                                               ; preds = %43, %53, %58
  %64 = phi i64* [ %59, %58 ], [ %44, %43 ], [ %54, %53 ]
  %65 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %25, i64* %64, i32 0, i64 1) #4
  %66 = ptrtoint i64* %65 to i64
  br label %67

67:                                               ; preds = %17, %63
  %68 = phi i64 [ %66, %63 ], [ %23, %17 ]
  %69 = inttoptr i64 %68 to i64*
  ret i64* %69
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #4
  %14 = ptrtoint i64* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #4
  br i1 %27, label %29, label %43

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %30, align 8
  %31 = add i64 %16, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -536870910
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = lshr i32 %33, 2
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #4
  br label %51

40:                                               ; preds = %29
  %41 = and i32 %33, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #4
  br label %53

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %3, i64* %17) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #4
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  br label %53

51:                                               ; preds = %44, %36
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i64*
  store i64 %14, i64* %52, align 8
  br label %70

53:                                               ; preds = %46, %43
  %54 = phi i32* [ %50, %46 ], [ %20, %43 ]
  %55 = phi i64 [ %48, %46 ], [ %18, %43 ]
  store i64 -1, i64* %17, align 8
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %12, i64* %1) #4
  br label %68

68:                                               ; preds = %64, %53
  %69 = phi i64* [ %67, %64 ], [ %1, %53 ]
  store i64* %69, i64** %15, align 8
  br label %70

70:                                               ; preds = %51, %68
  %71 = phi i64* [ %1, %51 ], [ %69, %68 ]
  %72 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #4
  %73 = load i64, i64* %17, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* %71, i64 %73, i64* %0, i32 3) #4
  %74 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #4
  ret i16 %74
}

declare i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_116Fast_ArrayConcatEPNS0_7IsolateEPNS0_16BuiltinArgumentsE(%"class.v8::internal::Isolate"*, %"class.v8::internal::BuiltinArguments"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 606
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %226

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = add i32 %12, -4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %223

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 111
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = zext i32 %13 to i64
  %26 = shl i64 %11, 3
  %27 = add i64 %26, -40
  %28 = load i64, i64* %17, align 8
  %29 = sub i64 %28, %27
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %226, label %49

34:                                               ; preds = %209
  %35 = icmp eq i64 %217, %25
  br i1 %35, label %223, label %36

36:                                               ; preds = %34
  %37 = load i64, i64* %10, align 8
  %38 = shl i64 %217, 32
  %39 = sub i64 -21474836480, %38
  %40 = ashr exact i64 %39, 32
  %41 = add i64 %37, %40
  %42 = shl nsw i64 %41, 3
  %43 = load i64, i64* %17, align 8
  %44 = sub i64 %43, %42
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %226, label %49

49:                                               ; preds = %15, %36
  %50 = phi i64 [ %46, %36 ], [ %31, %15 ]
  %51 = phi i32 [ %215, %36 ], [ 0, %15 ]
  %52 = phi i64 [ %217, %36 ], [ 0, %15 ]
  %53 = and i64 %50, -4294967296
  %54 = add i64 %50, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %53, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = icmp eq i16 %61, 1085
  br i1 %62, label %63, label %226

63:                                               ; preds = %49
  %64 = load atomic i32, i32* %55 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %53, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp ult i16 %69, 1042
  br i1 %70, label %226, label %71

71:                                               ; preds = %63
  %72 = load atomic i32, i32* %55 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %53, %73
  %75 = add i64 %74, 10
  %76 = inttoptr i64 %75 to i8*
  %77 = load i8, i8* %76, align 1
  %78 = lshr i8 %77, 2
  %79 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %80 = zext i8 %78 to i64
  %81 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %79, i64 %80
  %82 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %81, align 8
  %83 = bitcast %"class.v8::internal::ElementsAccessor"* %82 to i1 (%"class.v8::internal::ElementsAccessor"*, i64)***
  %84 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64)*** %83, align 8
  %85 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64)** %84, i64 6
  %86 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64)** %85, align 8
  %87 = tail call zeroext i1 %86(%"class.v8::internal::ElementsAccessor"* %82, i64 %50) #4
  br i1 %87, label %226, label %88

88:                                               ; preds = %71
  %89 = load atomic i32, i32* %55 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %53, %90
  %92 = add i64 %91, 15
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = load i64, i64* %18, align 8
  %96 = trunc i64 %95 to i32
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %131, label %98

98:                                               ; preds = %88
  %99 = zext i32 %94 to i64
  %100 = or i64 %53, %99
  %101 = load i64, i64* %19, align 8
  %102 = load i64, i64* %20, align 8
  %103 = trunc i64 %102 to i32
  %104 = trunc i64 %101 to i32
  br label %105

105:                                              ; preds = %124, %98
  %106 = phi i64 [ %100, %98 ], [ %129, %124 ]
  %107 = and i64 %106, -4294967296
  %108 = add i64 %106, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp ult i16 %115, 1042
  br i1 %116, label %226, label %117

117:                                              ; preds = %105
  %118 = add i64 %106, 7
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = icmp ne i32 %120, %103
  %122 = icmp ne i32 %120, %104
  %123 = and i1 %121, %122
  br i1 %123, label %226, label %124

124:                                              ; preds = %117
  %125 = add i64 %112, 15
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %107, %128
  %130 = icmp eq i32 %127, %96
  br i1 %130, label %131, label %105

131:                                              ; preds = %124, %88
  %132 = load atomic i32, i32* %55 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %53, %133
  %135 = add i64 %134, 10
  %136 = inttoptr i64 %135 to i8*
  %137 = load i8, i8* %136, align 1
  %138 = icmp ult i8 %137, 24
  br i1 %138, label %139, label %226

139:                                              ; preds = %131
  %140 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %141 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %140, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %139
  %143 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %140, i64 %50) #4
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, -4294967296
  %146 = add i64 %144, -1
  %147 = inttoptr i64 %146 to i32*
  br label %159

148:                                              ; preds = %139
  %149 = load i64*, i64** %22, align 8
  %150 = load i64*, i64** %23, align 8
  %151 = icmp eq i64* %149, %150
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  %153 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %154

154:                                              ; preds = %152, %148
  %155 = phi i64* [ %153, %152 ], [ %149, %148 ]
  %156 = ptrtoint i64* %155 to i64
  %157 = add i64 %156, 8
  %158 = inttoptr i64 %157 to i64*
  store i64* %158, i64** %22, align 8
  store i64 %50, i64* %155, align 8
  br label %159

159:                                              ; preds = %142, %154
  %160 = phi i32* [ %147, %142 ], [ %55, %154 ]
  %161 = phi i64 [ %145, %142 ], [ %53, %154 ]
  %162 = phi i64* [ %143, %142 ], [ %155, %154 ]
  %163 = load atomic i32, i32* %160 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %161, %164
  %166 = add i64 %165, 15
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = load i64, i64* %24, align 8
  %170 = and i64 %169, -4294967296
  %171 = add i64 %169, -1
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = add i64 %175, 19
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %170, %179
  %181 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %182 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %159
  %184 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %181, i64 %180) #4
  %185 = load i64, i64* %184, align 8
  br label %197

186:                                              ; preds = %159
  %187 = load i64*, i64** %22, align 8
  %188 = load i64*, i64** %23, align 8
  %189 = icmp eq i64* %187, %188
  br i1 %189, label %190, label %192

190:                                              ; preds = %186
  %191 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %192

192:                                              ; preds = %190, %186
  %193 = phi i64* [ %191, %190 ], [ %187, %186 ]
  %194 = ptrtoint i64* %193 to i64
  %195 = add i64 %194, 8
  %196 = inttoptr i64 %195 to i64*
  store i64* %196, i64** %22, align 8
  store i64 %180, i64* %193, align 8
  br label %197

197:                                              ; preds = %192, %183
  %198 = phi i64 [ %185, %183 ], [ %180, %192 ]
  %199 = add i64 %198, 315
  %200 = inttoptr i64 %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = icmp eq i32 %168, %201
  br i1 %202, label %203, label %226

203:                                              ; preds = %197
  %204 = add i64 %165, 11
  %205 = inttoptr i64 %204 to i32*
  %206 = load atomic i32, i32* %205 acquire, align 4
  %207 = and i32 %206, 1047552
  %208 = icmp eq i32 %207, 1024
  br i1 %208, label %209, label %226

209:                                              ; preds = %203
  %210 = load i64, i64* %162, align 8
  %211 = add i64 %210, 11
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = ashr i32 %213, 1
  %215 = add nsw i32 %214, %51
  %216 = icmp sgt i32 %215, 67108862
  %217 = add nuw nsw i64 %52, 1
  br i1 %216, label %218, label %34

218:                                              ; preds = %209
  %219 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %220 = tail call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %219, i32 199, i64* null, i64* null, i64* null) #4
  %221 = load i64, i64* %220, align 8
  %222 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %221, %"class.v8::internal::MessageLocation"* null) #4
  br label %226

223:                                              ; preds = %34, %9
  %224 = phi i32 [ 0, %9 ], [ %215, %34 ]
  %225 = tail call i64* @_ZN2v88internal16ElementsAccessor6ConcatEPNS0_7IsolateEPNS0_16BuiltinArgumentsEjj(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::BuiltinArguments"* %1, i32 %13, i32 %224) #4
  br label %226

226:                                              ; preds = %49, %71, %63, %131, %203, %197, %36, %117, %105, %15, %218, %223, %2
  %227 = phi i64* [ null, %2 ], [ %225, %223 ], [ null, %218 ], [ null, %15 ], [ null, %105 ], [ null, %117 ], [ null, %36 ], [ null, %197 ], [ null, %203 ], [ null, %131 ], [ null, %63 ], [ null, %71 ], [ null, %49 ]
  ret i64* %227
}

declare i64* @_ZN2v88internal6Object23ArraySpeciesConstructorEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal16ElementsAccessor6ConcatEPNS0_7IsolateEPNS0_16BuiltinArgumentsEjj(%"class.v8::internal::Isolate"*, %"class.v8::internal::BuiltinArguments"*, i32, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal9Execution3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1149"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nocapture, i32, i64*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, %1
  %8 = xor i32 %6, -1
  %9 = icmp ugt i32 %8, %1
  %10 = getelementptr %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %14, label %12

12:                                               ; preds = %3
  %13 = or i32 %11, 2
  store i32 %13, i32* %10, align 4
  br label %123

14:                                               ; preds = %3
  %15 = and i32 %11, 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %18) #4
  %19 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 0
  %20 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = zext i32 %7 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %20, i64* %22, i64* null, i64 %23, i64* %22, i32 1) #4
  %24 = call i16 @_ZN2v88internal10JSReceiver18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %4, i64* %2, i64 1) #4
  %25 = trunc i16 %24 to i8
  %26 = icmp ne i8 %25, 0
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %18) #4
  br label %123

27:                                               ; preds = %14
  %28 = and i32 %11, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %73, label %30

30:                                               ; preds = %27
  %31 = getelementptr %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  %38 = icmp ult i32 %7, %37
  br i1 %38, label %39, label %72

39:                                               ; preds = %30
  %40 = load i64, i64* %2, align 8
  %41 = shl i32 %7, 2
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, 7
  %44 = add i64 %43, %33
  %45 = inttoptr i64 %44 to i32*
  %46 = trunc i64 %40 to i32
  store atomic volatile i32 %46, i32* %45 monotonic, align 4
  %47 = and i64 %40, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %123, label %49

49:                                               ; preds = %39
  %50 = and i64 %33, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 262144
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = or i64 %50, 16
  %58 = inttoptr i64 %57 to %"class.v8::internal::Heap"**
  %59 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %58, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %59, i64 %33, i64 %44, i64 %40) #4
  br label %60

60:                                               ; preds = %56, %49
  %61 = and i64 %40, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 24
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %123, label %67

67:                                               ; preds = %60
  %68 = load i64, i64* %52, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %123

71:                                               ; preds = %67
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %44, i64 %40) #4
  br label %123

72:                                               ; preds = %30
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor17SetDictionaryModeEv(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0)
  br label %73

73:                                               ; preds = %27, %72
  %74 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 1
  %75 = getelementptr inbounds %"class.v8::internal::Handle.1149", %"class.v8::internal::Handle.1149"* %74, i64 0, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 0
  %79 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 4
  %81 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %80, align 8
  %82 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %73
  %84 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %81, i64 %77) #4
  br label %98

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 1
  %89 = load i64*, i64** %88, align 8
  %90 = icmp eq i64* %87, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %85
  %92 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %79) #4
  br label %93

93:                                               ; preds = %91, %85
  %94 = phi i64* [ %92, %91 ], [ %87, %85 ]
  %95 = ptrtoint i64* %94 to i64
  %96 = add i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  store i64* %97, i64** %86, align 8
  store i64 %77, i64* %94, align 8
  br label %98

98:                                               ; preds = %83, %93
  %99 = phi i64* [ %84, %83 ], [ %94, %93 ]
  %100 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %78, align 8
  %101 = tail call i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %100, i64* %99, i32 %7, i64* %2, i64* null, i32 0) #4
  %102 = icmp eq i64* %101, %99
  br i1 %102, label %123, label %103

103:                                              ; preds = %98
  %104 = icmp eq i64* %101, null
  %105 = icmp eq i64* %99, null
  %106 = or i1 %105, %104
  br i1 %106, label %113, label %107

107:                                              ; preds = %103
  %108 = load i64, i64* %101, align 8
  %109 = load i64, i64* %99, align 8
  %110 = trunc i64 %108 to i32
  %111 = trunc i64 %109 to i32
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %123, label %113

113:                                              ; preds = %103, %107
  %114 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 1, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %115) #4
  %116 = load i64, i64* %101, align 8
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %78, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 36
  %119 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %118, align 8
  %120 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %119, i64 %116) #4
  %121 = ptrtoint i64* %120 to i64
  %122 = bitcast %"class.v8::internal::Handle.1149"* %74 to i64*
  store i64 %121, i64* %122, align 8
  br label %123

123:                                              ; preds = %98, %107, %113, %71, %67, %60, %39, %17, %12
  %124 = phi i1 [ true, %12 ], [ %26, %17 ], [ true, %39 ], [ true, %60 ], [ true, %67 ], [ true, %71 ], [ true, %113 ], [ true, %107 ], [ true, %98 ]
  ret i1 %124
}

declare zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal10JSReceiver19HasProxyInPrototypeEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Runtime17GetObjectPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_Pb(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_119IterateElementsSlowEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEjPNS1_18ArrayConcatVisitorE(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %11 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %12 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  %15 = bitcast %"class.v8::internal::Isolate"** %14 to %"class.v8::internal::Factory"**
  %16 = icmp eq %"class.v8::internal::Isolate"* %0, null
  %17 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %18 = zext i32 %2 to i64
  br i1 %16, label %19, label %70

19:                                               ; preds = %4
  %20 = icmp eq i32 %2, 0
  br i1 %20, label %144, label %21

21:                                               ; preds = %19, %67
  %22 = phi i32 [ %68, %67 ], [ 0, %19 ]
  %23 = phi i32 [ %24, %67 ], [ 0, %19 ]
  %24 = add i32 %23, 1024
  %25 = load i32, i32* %10, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %10, align 8
  %27 = icmp ult i32 %22, %24
  br i1 %27, label %28, label %67

28:                                               ; preds = %21
  %29 = zext i32 %22 to i64
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %28, %61
  %32 = phi i64 [ %29, %28 ], [ %62, %61 ]
  %33 = phi i32 [ %22, %28 ], [ %63, %61 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %11) #4
  %34 = load i64, i64* %1, align 8
  %35 = and i64 %34, -262144
  %36 = or i64 %35, 16
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 16
  %39 = add i64 %38, -41416
  %40 = inttoptr i64 %39 to %"class.v8::internal::Isolate"*
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %40, i64* %1, i64* null, i64 %32, i64* %1, i32 3) #4
  %41 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %11) #4
  %42 = trunc i16 %41 to i8
  %43 = icmp eq i8 %42, 0
  %44 = trunc i64 %32 to i32
  br i1 %43, label %162, label %45

45:                                               ; preds = %31
  %46 = icmp ugt i16 %41, 255
  br i1 %46, label %47, label %61

47:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #4
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* null, i64* %1, i64* null, i64 %32, i64* %1, i32 3) #4
  %48 = load i32, i32* %13, align 4
  %49 = icmp eq i32 %48, 4
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #4
  br label %56

52:                                               ; preds = %47
  %53 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %15, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %53, i64 160
  %55 = bitcast %"class.v8::internal::Factory"* %54 to i64*
  br label %56

56:                                               ; preds = %52, %50
  %57 = phi i64* [ %51, %50 ], [ %55, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #4
  %58 = icmp eq i64* %57, null
  br i1 %58, label %162, label %59

59:                                               ; preds = %56
  %60 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %3, i32 %44, i64* nonnull %57)
  br i1 %60, label %61, label %162

61:                                               ; preds = %59, %45
  %62 = add nuw nsw i64 %32, 1
  %63 = add nuw i32 %33, 1
  %64 = icmp ult i64 %62, %18
  %65 = icmp ult i64 %62, %30
  %66 = and i1 %64, %65
  br i1 %66, label %31, label %67

67:                                               ; preds = %61, %21
  %68 = phi i32 [ %22, %21 ], [ %63, %61 ]
  %69 = icmp ult i32 %68, %2
  br i1 %69, label %21, label %144

70:                                               ; preds = %4, %138
  %71 = phi i32 [ %75, %138 ], [ 0, %4 ]
  %72 = phi i32 [ %140, %138 ], [ 0, %4 ]
  %73 = icmp ult i32 %72, %2
  br i1 %73, label %74, label %144

74:                                               ; preds = %70
  %75 = add i32 %71, 1024
  %76 = load i64, i64* %8, align 8
  %77 = load i64*, i64** %9, align 8
  %78 = load i32, i32* %10, align 8
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %10, align 8
  %80 = icmp ult i32 %72, %75
  %81 = inttoptr i64 %76 to i64*
  br i1 %80, label %83, label %82

82:                                               ; preds = %74
  store i32 %78, i32* %10, align 8
  br label %138

83:                                               ; preds = %74
  %84 = zext i32 %72 to i64
  %85 = zext i32 %75 to i64
  br label %86

86:                                               ; preds = %83, %116
  %87 = phi i64 [ %84, %83 ], [ %117, %116 ]
  %88 = phi i32 [ %72, %83 ], [ %118, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %11) #4
  %89 = load i64, i64* %1, align 8
  %90 = and i64 %89, -262144
  %91 = or i64 %90, 16
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 16
  %94 = add i64 %93, -41416
  %95 = inttoptr i64 %94 to %"class.v8::internal::Isolate"*
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %95, i64* %1, i64* null, i64 %87, i64* %1, i32 3) #4
  %96 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %11) #4
  %97 = trunc i16 %96 to i8
  %98 = icmp eq i8 %97, 0
  %99 = trunc i64 %87 to i32
  br i1 %98, label %126, label %100

100:                                              ; preds = %86
  %101 = icmp ugt i16 %96, 255
  br i1 %101, label %102, label %116

102:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #4
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* nonnull %0, i64* %1, i64* null, i64 %87, i64* %1, i32 3) #4
  %103 = load i32, i32* %13, align 4
  %104 = icmp eq i32 %103, 4
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %15, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %106, i64 160
  %108 = bitcast %"class.v8::internal::Factory"* %107 to i64*
  br label %111

109:                                              ; preds = %102
  %110 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #4
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi i64* [ %110, %109 ], [ %108, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #4
  %113 = icmp eq i64* %112, null
  br i1 %113, label %122, label %114

114:                                              ; preds = %111
  %115 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor5visitEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %3, i32 %99, i64* nonnull %112)
  br i1 %115, label %116, label %124

116:                                              ; preds = %114, %100
  %117 = add nuw nsw i64 %87, 1
  %118 = add nuw i32 %88, 1
  %119 = icmp ult i64 %117, %18
  %120 = icmp ult i64 %117, %85
  %121 = and i1 %119, %120
  br i1 %121, label %86, label %128

122:                                              ; preds = %111
  %123 = trunc i64 %87 to i32
  br label %128

124:                                              ; preds = %114
  %125 = trunc i64 %87 to i32
  br label %128

126:                                              ; preds = %86
  %127 = trunc i64 %87 to i32
  br label %128

128:                                              ; preds = %116, %126, %124, %122
  %129 = phi i32 [ %123, %122 ], [ %125, %124 ], [ %127, %126 ], [ %118, %116 ]
  %130 = phi i32 [ 1, %122 ], [ 1, %124 ], [ 1, %126 ], [ 0, %116 ]
  %131 = load i64*, i64** %17, align 8
  %132 = load i32, i32* %10, align 8
  %133 = load i64*, i64** %9, align 8
  store i64 %76, i64* %8, align 8
  %134 = add nsw i32 %132, -1
  store i32 %134, i32* %10, align 8
  %135 = icmp eq i64* %133, %77
  br i1 %135, label %138, label %136

136:                                              ; preds = %128
  store i64* %77, i64** %9, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #4
  %137 = load i64*, i64** %17, align 8
  br label %138

138:                                              ; preds = %82, %136, %128
  %139 = phi i32 [ %130, %136 ], [ %130, %128 ], [ 0, %82 ]
  %140 = phi i32 [ %129, %136 ], [ %129, %128 ], [ %72, %82 ]
  %141 = phi i64* [ %137, %136 ], [ %81, %128 ], [ %81, %82 ]
  %142 = phi i64* [ %77, %136 ], [ %131, %128 ], [ %81, %82 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %141, i64* %142) #4
  %143 = icmp eq i32 %139, 0
  br i1 %143, label %70, label %162

144:                                              ; preds = %70, %67, %19
  %145 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %3, i64 0, i32 2
  %146 = load i32, i32* %145, align 8
  %147 = call i32 @llvm.uadd.sat.i32(i32 %146, i32 %2) #4
  store i32 %147, i32* %145, align 8
  %148 = getelementptr %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %3, i64 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %162, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %3, i64 0, i32 1, i32 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 3
  %157 = inttoptr i64 %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = ashr i32 %158, 1
  %160 = icmp ugt i32 %147, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %152
  call fastcc void @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor17SetDictionaryModeEv(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %3) #4
  br label %162

162:                                              ; preds = %138, %56, %59, %31, %161, %152, %144
  %163 = phi i1 [ true, %144 ], [ true, %152 ], [ true, %161 ], [ false, %31 ], [ false, %59 ], [ false, %56 ], [ false, %138 ]
  ret i1 %163
}

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_121CollectElementIndicesEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEEjPNSt3__16vectorIjNS7_9allocatorIjEEEE(%"class.v8::internal::Isolate"*, i64*, i32, %"class.std::__1::vector.1192"*) unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 10
  %14 = inttoptr i64 %13 to i8*
  %15 = load i8, i8* %14, align 1
  %16 = lshr i8 %15, 2
  switch i8 %16, label %788 [
    i8 0, label %17
    i8 2, label %17
    i8 10, label %17
    i8 8, label %17
    i8 6, label %17
    i8 1, label %17
    i8 11, label %17
    i8 9, label %17
    i8 7, label %17
    i8 3, label %17
    i8 5, label %112
    i8 4, label %112
    i8 12, label %240
    i8 17, label %396
    i8 18, label %396
    i8 19, label %396
    i8 20, label %396
    i8 21, label %396
    i8 22, label %396
    i8 23, label %396
    i8 24, label %396
    i8 25, label %396
    i8 26, label %396
    i8 27, label %396
    i8 28, label %484
    i8 29, label %484
    i8 30, label %484
    i8 31, label %484
    i8 32, label %484
    i8 33, label %484
    i8 34, label %484
    i8 35, label %484
    i8 36, label %484
    i8 37, label %484
    i8 38, label %484
    i8 13, label %485
    i8 14, label %485
    i8 15, label %580
    i8 16, label %580
  ]

17:                                               ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %18 = add i64 %6, 7
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = add i64 %22, 3
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = ashr i32 %25, 1
  %27 = icmp ugt i32 %26, %2
  %28 = select i1 %27, i32 %2, i32 %26
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %788, label %30

30:                                               ; preds = %17
  %31 = add i64 %22, 7
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %33 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast i32** %33 to i64*
  %36 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %37 = bitcast i32** %34 to i64*
  %38 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %30, %109
  %40 = phi i32 [ 0, %30 ], [ %110, %109 ]
  %41 = shl i32 %40, 2
  %42 = sext i32 %41 to i64
  %43 = add i64 %31, %42
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = load i64, i64* %32, align 8
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %109, label %49

49:                                               ; preds = %39
  %50 = load i32*, i32** %33, align 8
  %51 = load i32*, i32** %34, align 8
  %52 = icmp eq i32* %50, %51
  %53 = ptrtoint i32* %51 to i64
  br i1 %52, label %57, label %54

54:                                               ; preds = %49
  store i32 %40, i32* %50, align 4
  %55 = getelementptr inbounds i32, i32* %50, i64 1
  %56 = ptrtoint i32* %55 to i64
  store i64 %56, i64* %35, align 8
  br label %109

57:                                               ; preds = %49
  %58 = ptrtoint i32* %50 to i64
  %59 = load i64, i64* %36, align 8
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 2
  %62 = add nsw i64 %61, 1
  %63 = icmp ugt i64 %62, 4611686018427387903
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::vector.1192"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %65) #12
  unreachable

66:                                               ; preds = %57
  %67 = sub i64 %53, %59
  %68 = ashr exact i64 %67, 2
  %69 = icmp ult i64 %68, 2305843009213693951
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = ashr exact i64 %67, 1
  %72 = icmp ult i64 %71, %62
  %73 = select i1 %72, i64 %62, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = icmp ugt i64 %73, 4611686018427387903
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  tail call void @abort() #12
  unreachable

78:                                               ; preds = %75, %66
  %79 = phi i64 [ %73, %75 ], [ 4611686018427387903, %66 ]
  %80 = shl i64 %79, 2
  %81 = tail call i8* @_Znwm(i64 %80) #13
  %82 = bitcast i8* %81 to i32*
  br label %83

83:                                               ; preds = %78, %70
  %84 = phi i64 [ %79, %78 ], [ 0, %70 ]
  %85 = phi i32* [ %82, %78 ], [ null, %70 ]
  %86 = getelementptr inbounds i32, i32* %85, i64 %61
  %87 = getelementptr inbounds i32, i32* %85, i64 %84
  %88 = ptrtoint i32* %87 to i64
  store i32 %40, i32* %86, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 1
  %90 = ptrtoint i32* %89 to i64
  %91 = load i32*, i32** %38, align 8
  %92 = load i64, i64* %35, align 8
  %93 = ptrtoint i32* %91 to i64
  %94 = sub i64 %92, %93
  %95 = ashr exact i64 %94, 2
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds i32, i32* %86, i64 %96
  %98 = ptrtoint i32* %97 to i64
  %99 = icmp sgt i64 %94, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %83
  %101 = bitcast i32* %97 to i8*
  %102 = bitcast i32* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 %94, i1 false) #4
  %103 = load i32*, i32** %38, align 8
  br label %104

104:                                              ; preds = %100, %83
  %105 = phi i32* [ %91, %83 ], [ %103, %100 ]
  store i64 %98, i64* %36, align 8
  store i64 %90, i64* %35, align 8
  store i64 %88, i64* %37, align 8
  %106 = icmp eq i32* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = bitcast i32* %105 to i8*
  tail call void @_ZdlPv(i8* %108) #13
  br label %109

109:                                              ; preds = %107, %104, %54, %39
  %110 = add nuw i32 %40, 1
  %111 = icmp ult i32 %110, %28
  br i1 %111, label %39, label %788

112:                                              ; preds = %4, %4
  %113 = add i64 %6, 7
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %7, %116
  %118 = add i64 %117, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %7, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = add i16 %125, -119
  %127 = icmp ult i16 %126, 13
  br i1 %127, label %788, label %128

128:                                              ; preds = %112
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %129, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %117) #4
  %134 = load i64, i64* %133, align 8
  br label %148

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %137 = load i64*, i64** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %139 = load i64*, i64** %138, align 8
  %140 = icmp eq i64* %137, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %135
  %142 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %143

143:                                              ; preds = %141, %135
  %144 = phi i64* [ %142, %141 ], [ %137, %135 ]
  %145 = ptrtoint i64* %144 to i64
  %146 = add i64 %145, 8
  %147 = inttoptr i64 %146 to i64*
  store i64* %147, i64** %136, align 8
  store i64 %117, i64* %144, align 8
  br label %148

148:                                              ; preds = %132, %143
  %149 = phi i64 [ %134, %132 ], [ %117, %143 ]
  %150 = phi i64* [ %133, %132 ], [ %144, %143 ]
  %151 = add i64 %149, 3
  %152 = inttoptr i64 %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = ashr i32 %153, 1
  %155 = icmp ugt i32 %154, %2
  %156 = select i1 %155, i32 %2, i32 %154
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %788, label %158

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %160 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %161 = bitcast i32** %159 to i64*
  %162 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %163 = bitcast i32** %160 to i64*
  %164 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 0
  br label %165

165:                                              ; preds = %238, %158
  %166 = phi i64 [ %149, %158 ], [ %239, %238 ]
  %167 = phi i32 [ 0, %158 ], [ %236, %238 ]
  %168 = shl nsw i32 %167, 3
  %169 = or i32 %168, 7
  %170 = sext i32 %169 to i64
  %171 = add i64 %166, %170
  %172 = inttoptr i64 %171 to i64*
  %173 = load i64, i64* %172, align 1
  %174 = icmp eq i64 %173, -2251799814209537
  br i1 %174, label %235, label %175

175:                                              ; preds = %165
  %176 = load i32*, i32** %159, align 8
  %177 = load i32*, i32** %160, align 8
  %178 = icmp eq i32* %176, %177
  %179 = ptrtoint i32* %177 to i64
  br i1 %178, label %183, label %180

180:                                              ; preds = %175
  store i32 %167, i32* %176, align 4
  %181 = getelementptr inbounds i32, i32* %176, i64 1
  %182 = ptrtoint i32* %181 to i64
  store i64 %182, i64* %161, align 8
  br label %235

183:                                              ; preds = %175
  %184 = ptrtoint i32* %176 to i64
  %185 = load i64, i64* %162, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = add nsw i64 %187, 1
  %189 = icmp ugt i64 %188, 4611686018427387903
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = bitcast %"class.std::__1::vector.1192"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %191) #12
  unreachable

192:                                              ; preds = %183
  %193 = sub i64 %179, %185
  %194 = ashr exact i64 %193, 2
  %195 = icmp ult i64 %194, 2305843009213693951
  br i1 %195, label %196, label %204

196:                                              ; preds = %192
  %197 = ashr exact i64 %193, 1
  %198 = icmp ult i64 %197, %188
  %199 = select i1 %198, i64 %188, i64 %197
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %196
  %202 = icmp ugt i64 %199, 4611686018427387903
  br i1 %202, label %203, label %204

203:                                              ; preds = %201
  tail call void @abort() #12
  unreachable

204:                                              ; preds = %201, %192
  %205 = phi i64 [ %199, %201 ], [ 4611686018427387903, %192 ]
  %206 = shl i64 %205, 2
  %207 = tail call i8* @_Znwm(i64 %206) #13
  %208 = bitcast i8* %207 to i32*
  br label %209

209:                                              ; preds = %204, %196
  %210 = phi i64 [ %205, %204 ], [ 0, %196 ]
  %211 = phi i32* [ %208, %204 ], [ null, %196 ]
  %212 = getelementptr inbounds i32, i32* %211, i64 %187
  %213 = getelementptr inbounds i32, i32* %211, i64 %210
  %214 = ptrtoint i32* %213 to i64
  store i32 %167, i32* %212, align 4
  %215 = getelementptr inbounds i32, i32* %212, i64 1
  %216 = ptrtoint i32* %215 to i64
  %217 = load i32*, i32** %164, align 8
  %218 = load i64, i64* %161, align 8
  %219 = ptrtoint i32* %217 to i64
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 2
  %222 = sub nsw i64 0, %221
  %223 = getelementptr inbounds i32, i32* %212, i64 %222
  %224 = ptrtoint i32* %223 to i64
  %225 = icmp sgt i64 %220, 0
  br i1 %225, label %226, label %230

226:                                              ; preds = %209
  %227 = bitcast i32* %223 to i8*
  %228 = bitcast i32* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %227, i8* align 4 %228, i64 %220, i1 false) #4
  %229 = load i32*, i32** %164, align 8
  br label %230

230:                                              ; preds = %226, %209
  %231 = phi i32* [ %217, %209 ], [ %229, %226 ]
  store i64 %224, i64* %162, align 8
  store i64 %216, i64* %161, align 8
  store i64 %214, i64* %163, align 8
  %232 = icmp eq i32* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %230
  %234 = bitcast i32* %231 to i8*
  tail call void @_ZdlPv(i8* %234) #13
  br label %235

235:                                              ; preds = %233, %230, %180, %165
  %236 = add nuw i32 %167, 1
  %237 = icmp ult i32 %236, %156
  br i1 %237, label %238, label %788

238:                                              ; preds = %235
  %239 = load i64, i64* %150, align 8
  br label %165

240:                                              ; preds = %4
  %241 = add i64 %6, 7
  %242 = inttoptr i64 %241 to i32*
  %243 = load i32, i32* %242, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %7, %244
  %246 = add i64 %245, 15
  %247 = inttoptr i64 %246 to i32*
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = ashr i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %788, label %251

251:                                              ; preds = %240
  %252 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %253 = bitcast %"struct.v8::internal::HandleScopeData"* %252 to i64*
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %255 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %256 = add i64 %245, 7
  %257 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %258 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %259 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %260 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %261 = bitcast i32** %259 to i64*
  %262 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %263 = bitcast i32** %260 to i64*
  %264 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 0
  %265 = icmp eq %"class.v8::internal::Isolate"* %0, null
  %266 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %252, i64 0, i32 0
  %267 = zext i32 %249 to i64
  br label %268

268:                                              ; preds = %251, %394
  %269 = phi i32 [ 0, %251 ], [ %381, %394 ]
  %270 = phi i32 [ 0, %251 ], [ %271, %394 ]
  %271 = add i32 %270, 1024
  %272 = load i64, i64* %253, align 8
  %273 = load i64*, i64** %254, align 8
  %274 = load i32, i32* %255, align 8
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %255, align 8
  %276 = icmp ult i32 %269, %249
  %277 = icmp ult i32 %269, %271
  %278 = and i1 %276, %277
  br i1 %278, label %279, label %380

279:                                              ; preds = %268
  %280 = zext i32 %269 to i64
  %281 = zext i32 %271 to i64
  br label %282

282:                                              ; preds = %279, %373
  %283 = phi i64 [ %280, %279 ], [ %374, %373 ]
  %284 = mul i64 %283, 51539607552
  %285 = add i64 %284, 68719476736
  %286 = ashr exact i64 %285, 32
  %287 = add i64 %256, %286
  %288 = inttoptr i64 %287 to i32*
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = zext i32 %289 to i64
  %291 = or i64 %7, %290
  %292 = load i64, i64* %257, align 8
  %293 = trunc i64 %292 to i32
  %294 = icmp eq i32 %289, %293
  br i1 %294, label %373, label %295

295:                                              ; preds = %282
  %296 = load i64, i64* %258, align 8
  %297 = trunc i64 %296 to i32
  %298 = icmp eq i32 %289, %297
  br i1 %298, label %373, label %299

299:                                              ; preds = %295
  %300 = and i64 %290, 1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %299
  %303 = ashr i32 %289, 1
  %304 = sitofp i32 %303 to double
  br label %309

305:                                              ; preds = %299
  %306 = add i64 %291, 3
  %307 = inttoptr i64 %306 to double*
  %308 = load double, double* %307, align 1
  br label %309

309:                                              ; preds = %302, %305
  %310 = phi double [ %304, %302 ], [ %308, %305 ]
  %311 = fptoui double %310 to i32
  %312 = icmp ult i32 %311, %2
  br i1 %312, label %313, label %373

313:                                              ; preds = %309
  %314 = load i32*, i32** %259, align 8
  %315 = load i32*, i32** %260, align 8
  %316 = icmp eq i32* %314, %315
  %317 = ptrtoint i32* %315 to i64
  br i1 %316, label %321, label %318

318:                                              ; preds = %313
  store i32 %311, i32* %314, align 4
  %319 = getelementptr inbounds i32, i32* %314, i64 1
  %320 = ptrtoint i32* %319 to i64
  store i64 %320, i64* %261, align 8
  br label %373

321:                                              ; preds = %313
  %322 = ptrtoint i32* %314 to i64
  %323 = load i64, i64* %262, align 8
  %324 = sub i64 %322, %323
  %325 = ashr exact i64 %324, 2
  %326 = add nsw i64 %325, 1
  %327 = icmp ugt i64 %326, 4611686018427387903
  br i1 %327, label %328, label %330

328:                                              ; preds = %321
  %329 = bitcast %"class.std::__1::vector.1192"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %329) #12
  unreachable

330:                                              ; preds = %321
  %331 = sub i64 %317, %323
  %332 = ashr exact i64 %331, 2
  %333 = icmp ult i64 %332, 2305843009213693951
  br i1 %333, label %334, label %342

334:                                              ; preds = %330
  %335 = ashr exact i64 %331, 1
  %336 = icmp ult i64 %335, %326
  %337 = select i1 %336, i64 %326, i64 %335
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %347, label %339

339:                                              ; preds = %334
  %340 = icmp ugt i64 %337, 4611686018427387903
  br i1 %340, label %341, label %342

341:                                              ; preds = %339
  tail call void @abort() #12
  unreachable

342:                                              ; preds = %339, %330
  %343 = phi i64 [ %337, %339 ], [ 4611686018427387903, %330 ]
  %344 = shl i64 %343, 2
  %345 = tail call i8* @_Znwm(i64 %344) #13
  %346 = bitcast i8* %345 to i32*
  br label %347

347:                                              ; preds = %342, %334
  %348 = phi i64 [ %343, %342 ], [ 0, %334 ]
  %349 = phi i32* [ %346, %342 ], [ null, %334 ]
  %350 = getelementptr inbounds i32, i32* %349, i64 %325
  %351 = getelementptr inbounds i32, i32* %349, i64 %348
  %352 = ptrtoint i32* %351 to i64
  store i32 %311, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %350, i64 1
  %354 = ptrtoint i32* %353 to i64
  %355 = load i32*, i32** %264, align 8
  %356 = load i64, i64* %261, align 8
  %357 = ptrtoint i32* %355 to i64
  %358 = sub i64 %356, %357
  %359 = ashr exact i64 %358, 2
  %360 = sub nsw i64 0, %359
  %361 = getelementptr inbounds i32, i32* %350, i64 %360
  %362 = ptrtoint i32* %361 to i64
  %363 = icmp sgt i64 %358, 0
  br i1 %363, label %364, label %368

364:                                              ; preds = %347
  %365 = bitcast i32* %361 to i8*
  %366 = bitcast i32* %355 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %365, i8* align 4 %366, i64 %358, i1 false) #4
  %367 = load i32*, i32** %264, align 8
  br label %368

368:                                              ; preds = %364, %347
  %369 = phi i32* [ %355, %347 ], [ %367, %364 ]
  store i64 %362, i64* %262, align 8
  store i64 %354, i64* %261, align 8
  store i64 %352, i64* %263, align 8
  %370 = icmp eq i32* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %368
  %372 = bitcast i32* %369 to i8*
  tail call void @_ZdlPv(i8* %372) #13
  br label %373

373:                                              ; preds = %295, %282, %309, %318, %368, %371
  %374 = add nuw nsw i64 %283, 1
  %375 = icmp ult i64 %374, %267
  %376 = icmp ult i64 %374, %281
  %377 = and i1 %375, %376
  br i1 %377, label %282, label %378

378:                                              ; preds = %373
  %379 = trunc i64 %374 to i32
  br label %380

380:                                              ; preds = %378, %268
  %381 = phi i32 [ %269, %268 ], [ %379, %378 ]
  br i1 %265, label %394, label %382

382:                                              ; preds = %380
  %383 = inttoptr i64 %272 to i64*
  %384 = load i64*, i64** %266, align 8
  store i64 %272, i64* %253, align 8
  %385 = load i32, i32* %255, align 8
  %386 = add nsw i32 %385, -1
  store i32 %386, i32* %255, align 8
  %387 = load i64*, i64** %254, align 8
  %388 = icmp eq i64* %387, %273
  br i1 %388, label %391, label %389

389:                                              ; preds = %382
  store i64* %273, i64** %254, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #4
  %390 = load i64*, i64** %266, align 8
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i64* [ %390, %389 ], [ %383, %382 ]
  %393 = phi i64* [ %273, %389 ], [ %384, %382 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %392, i64* %393) #4
  br label %394

394:                                              ; preds = %380, %391
  %395 = icmp ult i32 %381, %249
  br i1 %395, label %268, label %788

396:                                              ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %397 = add i64 %6, 31
  %398 = inttoptr i64 %397 to i64*
  %399 = load i64, i64* %398, align 1
  %400 = zext i32 %2 to i64
  %401 = icmp ult i64 %399, %400
  br i1 %401, label %407, label %402

402:                                              ; preds = %396
  %403 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %406 = bitcast i32** %405 to i64*
  store i64 %404, i64* %406, align 8
  br label %407

407:                                              ; preds = %396, %402
  %408 = phi i64 [ %400, %402 ], [ %399, %396 ]
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %417, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %412 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %413 = bitcast i32** %411 to i64*
  %414 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %415 = bitcast i32** %412 to i64*
  %416 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 0
  br label %419

417:                                              ; preds = %480, %407
  %418 = icmp eq i64 %408, %400
  br i1 %418, label %804, label %788

419:                                              ; preds = %410, %480
  %420 = phi i32 [ 0, %410 ], [ %481, %480 ]
  %421 = load i32*, i32** %411, align 8
  %422 = load i32*, i32** %412, align 8
  %423 = icmp eq i32* %421, %422
  %424 = ptrtoint i32* %422 to i64
  br i1 %423, label %428, label %425

425:                                              ; preds = %419
  store i32 %420, i32* %421, align 4
  %426 = getelementptr inbounds i32, i32* %421, i64 1
  %427 = ptrtoint i32* %426 to i64
  store i64 %427, i64* %413, align 8
  br label %480

428:                                              ; preds = %419
  %429 = ptrtoint i32* %421 to i64
  %430 = load i64, i64* %414, align 8
  %431 = sub i64 %429, %430
  %432 = ashr exact i64 %431, 2
  %433 = add nsw i64 %432, 1
  %434 = icmp ugt i64 %433, 4611686018427387903
  br i1 %434, label %435, label %437

435:                                              ; preds = %428
  %436 = bitcast %"class.std::__1::vector.1192"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %436) #12
  unreachable

437:                                              ; preds = %428
  %438 = sub i64 %424, %430
  %439 = ashr exact i64 %438, 2
  %440 = icmp ult i64 %439, 2305843009213693951
  br i1 %440, label %441, label %449

441:                                              ; preds = %437
  %442 = ashr exact i64 %438, 1
  %443 = icmp ult i64 %442, %433
  %444 = select i1 %443, i64 %433, i64 %442
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %454, label %446

446:                                              ; preds = %441
  %447 = icmp ugt i64 %444, 4611686018427387903
  br i1 %447, label %448, label %449

448:                                              ; preds = %446
  tail call void @abort() #12
  unreachable

449:                                              ; preds = %446, %437
  %450 = phi i64 [ %444, %446 ], [ 4611686018427387903, %437 ]
  %451 = shl i64 %450, 2
  %452 = tail call i8* @_Znwm(i64 %451) #13
  %453 = bitcast i8* %452 to i32*
  br label %454

454:                                              ; preds = %449, %441
  %455 = phi i64 [ %450, %449 ], [ 0, %441 ]
  %456 = phi i32* [ %453, %449 ], [ null, %441 ]
  %457 = getelementptr inbounds i32, i32* %456, i64 %432
  %458 = getelementptr inbounds i32, i32* %456, i64 %455
  %459 = ptrtoint i32* %458 to i64
  store i32 %420, i32* %457, align 4
  %460 = getelementptr inbounds i32, i32* %457, i64 1
  %461 = ptrtoint i32* %460 to i64
  %462 = load i32*, i32** %416, align 8
  %463 = load i64, i64* %413, align 8
  %464 = ptrtoint i32* %462 to i64
  %465 = sub i64 %463, %464
  %466 = ashr exact i64 %465, 2
  %467 = sub nsw i64 0, %466
  %468 = getelementptr inbounds i32, i32* %457, i64 %467
  %469 = ptrtoint i32* %468 to i64
  %470 = icmp sgt i64 %465, 0
  br i1 %470, label %471, label %475

471:                                              ; preds = %454
  %472 = bitcast i32* %468 to i8*
  %473 = bitcast i32* %462 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %472, i8* align 4 %473, i64 %465, i1 false) #4
  %474 = load i32*, i32** %416, align 8
  br label %475

475:                                              ; preds = %471, %454
  %476 = phi i32* [ %462, %454 ], [ %474, %471 ]
  store i64 %469, i64* %414, align 8
  store i64 %461, i64* %413, align 8
  store i64 %459, i64* %415, align 8
  %477 = icmp eq i32* %476, null
  br i1 %477, label %480, label %478

478:                                              ; preds = %475
  %479 = bitcast i32* %476 to i8*
  tail call void @_ZdlPv(i8* %479) #13
  br label %480

480:                                              ; preds = %425, %475, %478
  %481 = add i32 %420, 1
  %482 = zext i32 %481 to i64
  %483 = icmp ugt i64 %408, %482
  br i1 %483, label %419, label %417

484:                                              ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  unreachable

485:                                              ; preds = %4, %4
  %486 = add i64 %6, 7
  %487 = inttoptr i64 %486 to i32*
  %488 = load i32, i32* %487, align 4
  %489 = zext i32 %488 to i64
  %490 = or i64 %7, %489
  %491 = load atomic i32, i32* %9 monotonic, align 4
  %492 = zext i32 %491 to i64
  %493 = or i64 %7, %492
  %494 = add i64 %493, 10
  %495 = inttoptr i64 %494 to i8*
  %496 = load i8, i8* %495, align 1
  %497 = lshr i8 %496, 2
  %498 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %499 = zext i8 %497 to i64
  %500 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %498, i64 %499
  %501 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %500, align 8
  %502 = icmp eq i32 %2, 0
  br i1 %502, label %788, label %503

503:                                              ; preds = %485
  %504 = bitcast %"class.v8::internal::ElementsAccessor"* %501 to i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)***
  %505 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %506 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %507 = bitcast i32** %505 to i64*
  %508 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %509 = bitcast i32** %506 to i64*
  %510 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 0
  br label %511

511:                                              ; preds = %577, %503
  %512 = phi i32 [ 0, %503 ], [ %578, %577 ]
  %513 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)*** %504, align 8
  %514 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)** %513, i64 3
  %515 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)** %514, align 8
  %516 = tail call zeroext i1 %515(%"class.v8::internal::ElementsAccessor"* %501, i64 %6, i32 %512, i64 %490, i32 0) #4
  br i1 %516, label %517, label %577

517:                                              ; preds = %511
  %518 = load i32*, i32** %505, align 8
  %519 = load i32*, i32** %506, align 8
  %520 = icmp eq i32* %518, %519
  %521 = ptrtoint i32* %519 to i64
  br i1 %520, label %525, label %522

522:                                              ; preds = %517
  store i32 %512, i32* %518, align 4
  %523 = getelementptr inbounds i32, i32* %518, i64 1
  %524 = ptrtoint i32* %523 to i64
  store i64 %524, i64* %507, align 8
  br label %577

525:                                              ; preds = %517
  %526 = ptrtoint i32* %518 to i64
  %527 = load i64, i64* %508, align 8
  %528 = sub i64 %526, %527
  %529 = ashr exact i64 %528, 2
  %530 = add nsw i64 %529, 1
  %531 = icmp ugt i64 %530, 4611686018427387903
  br i1 %531, label %532, label %534

532:                                              ; preds = %525
  %533 = bitcast %"class.std::__1::vector.1192"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %533) #12
  unreachable

534:                                              ; preds = %525
  %535 = sub i64 %521, %527
  %536 = ashr exact i64 %535, 2
  %537 = icmp ult i64 %536, 2305843009213693951
  br i1 %537, label %538, label %546

538:                                              ; preds = %534
  %539 = ashr exact i64 %535, 1
  %540 = icmp ult i64 %539, %530
  %541 = select i1 %540, i64 %530, i64 %539
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %551, label %543

543:                                              ; preds = %538
  %544 = icmp ugt i64 %541, 4611686018427387903
  br i1 %544, label %545, label %546

545:                                              ; preds = %543
  tail call void @abort() #12
  unreachable

546:                                              ; preds = %543, %534
  %547 = phi i64 [ %541, %543 ], [ 4611686018427387903, %534 ]
  %548 = shl i64 %547, 2
  %549 = tail call i8* @_Znwm(i64 %548) #13
  %550 = bitcast i8* %549 to i32*
  br label %551

551:                                              ; preds = %546, %538
  %552 = phi i64 [ %547, %546 ], [ 0, %538 ]
  %553 = phi i32* [ %550, %546 ], [ null, %538 ]
  %554 = getelementptr inbounds i32, i32* %553, i64 %529
  %555 = getelementptr inbounds i32, i32* %553, i64 %552
  %556 = ptrtoint i32* %555 to i64
  store i32 %512, i32* %554, align 4
  %557 = getelementptr inbounds i32, i32* %554, i64 1
  %558 = ptrtoint i32* %557 to i64
  %559 = load i32*, i32** %510, align 8
  %560 = load i64, i64* %507, align 8
  %561 = ptrtoint i32* %559 to i64
  %562 = sub i64 %560, %561
  %563 = ashr exact i64 %562, 2
  %564 = sub nsw i64 0, %563
  %565 = getelementptr inbounds i32, i32* %554, i64 %564
  %566 = ptrtoint i32* %565 to i64
  %567 = icmp sgt i64 %562, 0
  br i1 %567, label %568, label %572

568:                                              ; preds = %551
  %569 = bitcast i32* %565 to i8*
  %570 = bitcast i32* %559 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %569, i8* align 4 %570, i64 %562, i1 false) #4
  %571 = load i32*, i32** %510, align 8
  br label %572

572:                                              ; preds = %568, %551
  %573 = phi i32* [ %559, %551 ], [ %571, %568 ]
  store i64 %566, i64* %508, align 8
  store i64 %558, i64* %507, align 8
  store i64 %556, i64* %509, align 8
  %574 = icmp eq i32* %573, null
  br i1 %574, label %577, label %575

575:                                              ; preds = %572
  %576 = bitcast i32* %573 to i8*
  tail call void @_ZdlPv(i8* %576) #13
  br label %577

577:                                              ; preds = %575, %572, %522, %511
  %578 = add nuw i32 %512, 1
  %579 = icmp eq i32 %578, %2
  br i1 %579, label %788, label %511

580:                                              ; preds = %4, %4
  %581 = add i64 %6, 11
  %582 = inttoptr i64 %581 to i32*
  %583 = load i32, i32* %582, align 4
  %584 = zext i32 %583 to i64
  %585 = or i64 %7, %584
  %586 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %587 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %586, align 8
  %588 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %587, null
  br i1 %588, label %592, label %589

589:                                              ; preds = %580
  %590 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %587, i64 %585) #4
  %591 = load i64, i64* %590, align 8
  br label %605

592:                                              ; preds = %580
  %593 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %594 = load i64*, i64** %593, align 8
  %595 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %596 = load i64*, i64** %595, align 8
  %597 = icmp eq i64* %594, %596
  br i1 %597, label %598, label %600

598:                                              ; preds = %592
  %599 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %600

600:                                              ; preds = %598, %592
  %601 = phi i64* [ %599, %598 ], [ %594, %592 ]
  %602 = ptrtoint i64* %601 to i64
  %603 = add i64 %602, 8
  %604 = inttoptr i64 %603 to i64*
  store i64* %604, i64** %593, align 8
  store i64 %585, i64* %601, align 8
  br label %605

605:                                              ; preds = %589, %600
  %606 = phi i64 [ %591, %589 ], [ %585, %600 ]
  %607 = add i64 %606, 7
  %608 = inttoptr i64 %607 to i32*
  %609 = load i32, i32* %608, align 4
  %610 = icmp ugt i32 %609, %2
  %611 = select i1 %610, i32 %2, i32 %609
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %684, label %613

613:                                              ; preds = %605
  %614 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %615 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %616 = bitcast i32** %614 to i64*
  %617 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %618 = bitcast i32** %615 to i64*
  %619 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 0
  br label %620

620:                                              ; preds = %613, %681
  %621 = phi i32 [ 0, %613 ], [ %682, %681 ]
  %622 = load i32*, i32** %614, align 8
  %623 = load i32*, i32** %615, align 8
  %624 = icmp eq i32* %622, %623
  %625 = ptrtoint i32* %623 to i64
  br i1 %624, label %629, label %626

626:                                              ; preds = %620
  store i32 %621, i32* %622, align 4
  %627 = getelementptr inbounds i32, i32* %622, i64 1
  %628 = ptrtoint i32* %627 to i64
  store i64 %628, i64* %616, align 8
  br label %681

629:                                              ; preds = %620
  %630 = ptrtoint i32* %622 to i64
  %631 = load i64, i64* %617, align 8
  %632 = sub i64 %630, %631
  %633 = ashr exact i64 %632, 2
  %634 = add nsw i64 %633, 1
  %635 = icmp ugt i64 %634, 4611686018427387903
  br i1 %635, label %636, label %638

636:                                              ; preds = %629
  %637 = bitcast %"class.std::__1::vector.1192"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %637) #12
  unreachable

638:                                              ; preds = %629
  %639 = sub i64 %625, %631
  %640 = ashr exact i64 %639, 2
  %641 = icmp ult i64 %640, 2305843009213693951
  br i1 %641, label %642, label %650

642:                                              ; preds = %638
  %643 = ashr exact i64 %639, 1
  %644 = icmp ult i64 %643, %634
  %645 = select i1 %644, i64 %634, i64 %643
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %655, label %647

647:                                              ; preds = %642
  %648 = icmp ugt i64 %645, 4611686018427387903
  br i1 %648, label %649, label %650

649:                                              ; preds = %647
  tail call void @abort() #12
  unreachable

650:                                              ; preds = %647, %638
  %651 = phi i64 [ %645, %647 ], [ 4611686018427387903, %638 ]
  %652 = shl i64 %651, 2
  %653 = tail call i8* @_Znwm(i64 %652) #13
  %654 = bitcast i8* %653 to i32*
  br label %655

655:                                              ; preds = %650, %642
  %656 = phi i64 [ %651, %650 ], [ 0, %642 ]
  %657 = phi i32* [ %654, %650 ], [ null, %642 ]
  %658 = getelementptr inbounds i32, i32* %657, i64 %633
  %659 = getelementptr inbounds i32, i32* %657, i64 %656
  %660 = ptrtoint i32* %659 to i64
  store i32 %621, i32* %658, align 4
  %661 = getelementptr inbounds i32, i32* %658, i64 1
  %662 = ptrtoint i32* %661 to i64
  %663 = load i32*, i32** %619, align 8
  %664 = load i64, i64* %616, align 8
  %665 = ptrtoint i32* %663 to i64
  %666 = sub i64 %664, %665
  %667 = ashr exact i64 %666, 2
  %668 = sub nsw i64 0, %667
  %669 = getelementptr inbounds i32, i32* %658, i64 %668
  %670 = ptrtoint i32* %669 to i64
  %671 = icmp sgt i64 %666, 0
  br i1 %671, label %672, label %676

672:                                              ; preds = %655
  %673 = bitcast i32* %669 to i8*
  %674 = bitcast i32* %663 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %673, i8* align 4 %674, i64 %666, i1 false) #4
  %675 = load i32*, i32** %619, align 8
  br label %676

676:                                              ; preds = %672, %655
  %677 = phi i32* [ %663, %655 ], [ %675, %672 ]
  store i64 %670, i64* %617, align 8
  store i64 %662, i64* %616, align 8
  store i64 %660, i64* %618, align 8
  %678 = icmp eq i32* %677, null
  br i1 %678, label %681, label %679

679:                                              ; preds = %676
  %680 = bitcast i32* %677 to i8*
  tail call void @_ZdlPv(i8* %680) #13
  br label %681

681:                                              ; preds = %626, %676, %679
  %682 = add nuw i32 %621, 1
  %683 = icmp ult i32 %682, %611
  br i1 %683, label %620, label %684

684:                                              ; preds = %681, %605
  %685 = phi i32 [ 0, %605 ], [ %682, %681 ]
  %686 = load i64, i64* %1, align 8
  %687 = and i64 %686, -4294967296
  %688 = add i64 %686, -1
  %689 = inttoptr i64 %688 to i32*
  %690 = load atomic i32, i32* %689 monotonic, align 4
  %691 = zext i32 %690 to i64
  %692 = or i64 %687, %691
  %693 = add i64 %692, 10
  %694 = inttoptr i64 %693 to i8*
  %695 = load i8, i8* %694, align 1
  %696 = lshr i8 %695, 2
  %697 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %698 = zext i8 %696 to i64
  %699 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %697, i64 %698
  %700 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %699, align 8
  %701 = icmp ult i32 %685, %2
  br i1 %701, label %702, label %788

702:                                              ; preds = %684
  %703 = bitcast %"class.v8::internal::ElementsAccessor"* %700 to i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)***
  %704 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 1
  %705 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %706 = bitcast i32** %704 to i64*
  %707 = bitcast %"class.std::__1::vector.1192"* %3 to i64*
  %708 = bitcast i32** %705 to i64*
  %709 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %3, i64 0, i32 0, i32 0
  br label %710

710:                                              ; preds = %786, %702
  %711 = phi i64 [ %686, %702 ], [ %787, %786 ]
  %712 = phi i32 [ %685, %702 ], [ %784, %786 ]
  %713 = and i64 %711, -4294967296
  %714 = add i64 %711, 7
  %715 = inttoptr i64 %714 to i32*
  %716 = load i32, i32* %715, align 4
  %717 = zext i32 %716 to i64
  %718 = or i64 %713, %717
  %719 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)*** %703, align 8
  %720 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)** %719, i64 3
  %721 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i32, i64, i32)** %720, align 8
  %722 = tail call zeroext i1 %721(%"class.v8::internal::ElementsAccessor"* %700, i64 %711, i32 %712, i64 %718, i32 0) #4
  br i1 %722, label %723, label %783

723:                                              ; preds = %710
  %724 = load i32*, i32** %704, align 8
  %725 = load i32*, i32** %705, align 8
  %726 = icmp eq i32* %724, %725
  %727 = ptrtoint i32* %725 to i64
  br i1 %726, label %731, label %728

728:                                              ; preds = %723
  store i32 %712, i32* %724, align 4
  %729 = getelementptr inbounds i32, i32* %724, i64 1
  %730 = ptrtoint i32* %729 to i64
  store i64 %730, i64* %706, align 8
  br label %783

731:                                              ; preds = %723
  %732 = ptrtoint i32* %724 to i64
  %733 = load i64, i64* %707, align 8
  %734 = sub i64 %732, %733
  %735 = ashr exact i64 %734, 2
  %736 = add nsw i64 %735, 1
  %737 = icmp ugt i64 %736, 4611686018427387903
  br i1 %737, label %738, label %740

738:                                              ; preds = %731
  %739 = bitcast %"class.std::__1::vector.1192"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %739) #12
  unreachable

740:                                              ; preds = %731
  %741 = sub i64 %727, %733
  %742 = ashr exact i64 %741, 2
  %743 = icmp ult i64 %742, 2305843009213693951
  br i1 %743, label %744, label %752

744:                                              ; preds = %740
  %745 = ashr exact i64 %741, 1
  %746 = icmp ult i64 %745, %736
  %747 = select i1 %746, i64 %736, i64 %745
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %757, label %749

749:                                              ; preds = %744
  %750 = icmp ugt i64 %747, 4611686018427387903
  br i1 %750, label %751, label %752

751:                                              ; preds = %749
  tail call void @abort() #12
  unreachable

752:                                              ; preds = %749, %740
  %753 = phi i64 [ %747, %749 ], [ 4611686018427387903, %740 ]
  %754 = shl i64 %753, 2
  %755 = tail call i8* @_Znwm(i64 %754) #13
  %756 = bitcast i8* %755 to i32*
  br label %757

757:                                              ; preds = %752, %744
  %758 = phi i64 [ %753, %752 ], [ 0, %744 ]
  %759 = phi i32* [ %756, %752 ], [ null, %744 ]
  %760 = getelementptr inbounds i32, i32* %759, i64 %735
  %761 = getelementptr inbounds i32, i32* %759, i64 %758
  %762 = ptrtoint i32* %761 to i64
  store i32 %712, i32* %760, align 4
  %763 = getelementptr inbounds i32, i32* %760, i64 1
  %764 = ptrtoint i32* %763 to i64
  %765 = load i32*, i32** %709, align 8
  %766 = load i64, i64* %706, align 8
  %767 = ptrtoint i32* %765 to i64
  %768 = sub i64 %766, %767
  %769 = ashr exact i64 %768, 2
  %770 = sub nsw i64 0, %769
  %771 = getelementptr inbounds i32, i32* %760, i64 %770
  %772 = ptrtoint i32* %771 to i64
  %773 = icmp sgt i64 %768, 0
  br i1 %773, label %774, label %778

774:                                              ; preds = %757
  %775 = bitcast i32* %771 to i8*
  %776 = bitcast i32* %765 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %775, i8* align 4 %776, i64 %768, i1 false) #4
  %777 = load i32*, i32** %709, align 8
  br label %778

778:                                              ; preds = %774, %757
  %779 = phi i32* [ %765, %757 ], [ %777, %774 ]
  store i64 %772, i64* %707, align 8
  store i64 %764, i64* %706, align 8
  store i64 %762, i64* %708, align 8
  %780 = icmp eq i32* %779, null
  br i1 %780, label %783, label %781

781:                                              ; preds = %778
  %782 = bitcast i32* %779 to i8*
  tail call void @_ZdlPv(i8* %782) #13
  br label %783

783:                                              ; preds = %781, %778, %728, %710
  %784 = add i32 %712, 1
  %785 = icmp eq i32 %784, %2
  br i1 %785, label %788, label %786

786:                                              ; preds = %783
  %787 = load i64, i64* %1, align 8
  br label %710

788:                                              ; preds = %783, %577, %394, %235, %109, %17, %148, %240, %485, %684, %417, %112, %4
  %789 = bitcast %"class.v8::internal::PrototypeIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %789) #4
  %790 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %790, align 8
  %791 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %791, align 8
  %792 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 2, i32 0, i32 0
  store i64* %1, i64** %792, align 8
  %793 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 3
  store i32 0, i32* %793, align 8
  %794 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 4
  store i8 0, i8* %794, align 4
  %795 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 6
  store i32 0, i32* %795, align 8
  %796 = icmp eq i64* %1, null
  br i1 %796, label %797, label %798, !prof !5

797:                                              ; preds = %788
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0)) #12
  unreachable

798:                                              ; preds = %788
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %5) #4
  %799 = load i8, i8* %794, align 4, !range !3
  %800 = icmp eq i8 %799, 0
  br i1 %800, label %801, label %803

801:                                              ; preds = %798
  %802 = load i64*, i64** %792, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_121CollectElementIndicesEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEEjPNSt3__16vectorIjNS7_9allocatorIjEEEE(%"class.v8::internal::Isolate"* %0, i64* %802, i32 %2, %"class.std::__1::vector.1192"* %3)
  br label %803

803:                                              ; preds = %798, %801
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %789) #4
  br label %804

804:                                              ; preds = %417, %803
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.969", %"class.v8::internal::Handle.969"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 188
  br i1 %21, label %22, label %47

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 6
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %7, align 8
  br label %104

28:                                               ; preds = %1
  %29 = load i64, i64* %4, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 188
  br i1 %39, label %40, label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %41, align 4
  %42 = bitcast %"class.v8::internal::PrototypeIterator"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %43, i64 176
  %45 = ptrtoint %"class.v8::internal::Factory"* %44 to i64
  %46 = bitcast %"class.v8::internal::Handle.969"* %2 to i64*
  store i64 %45, i64* %46, align 8
  br label %104

47:                                               ; preds = %6, %11, %28
  %48 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = select i1 %5, i64* %49, i64* %4
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %52, %61
  %63 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 6
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %60, %67
  br i1 %68, label %79, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = add i64 %57, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp ne i16 %76, 190
  %78 = zext i1 %77 to i8
  br label %79

79:                                               ; preds = %73, %69, %47
  %80 = phi i8 [ 1, %47 ], [ 0, %69 ], [ %78, %73 ]
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %80, i8* %81, align 4
  br i1 %5, label %82, label %83

82:                                               ; preds = %79
  store i64 %62, i64* %49, align 8
  br label %104

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %62) #4
  br label %102

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %91, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #4
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %96, %95 ], [ %91, %89 ]
  %99 = ptrtoint i64* %98 to i64
  %100 = add i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  store i64* %101, i64** %90, align 8
  store i64 %62, i64* %98, align 8
  br label %102

102:                                              ; preds = %97, %87
  %103 = phi i64* [ %88, %87 ], [ %98, %97 ]
  store i64* %103, i64** %48, align 8
  br label %104

104:                                              ; preds = %102, %82, %40, %22
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.1207"* dereferenceable(1)) local_unnamed_addr #3

declare i16 @_ZN2v88internal10JSReceiver18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_118ArrayConcatVisitor17SetDictionaryModeEv(%"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = load i64, i64* %3, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %5, i32 %10, i8 zeroext 0, i32 0) #4
  %12 = load i64, i64* %3, align 8
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %15, 1
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %18 = icmp eq i32 %16, 0
  br i1 %18, label %160, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31
  %21 = bitcast %"struct.v8::internal::HandleScopeData"* %20 to i64*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %23 = bitcast i64** %22 to i64*
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 2
  %25 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %20, i64 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %28 = icmp eq %"class.v8::internal::Isolate"* %17, null
  br label %29

29:                                               ; preds = %19, %158
  %30 = phi i32 [ 0, %19 ], [ %144, %158 ]
  %31 = phi i32 [ 0, %19 ], [ %33, %158 ]
  %32 = phi i64* [ %11, %19 ], [ %143, %158 ]
  %33 = add i32 %31, 1024
  %34 = load i64, i64* %21, align 8
  %35 = load i64, i64* %23, align 8
  %36 = load i32, i32* %24, align 8
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %24, align 8
  %38 = icmp ult i32 %30, %16
  %39 = icmp ult i32 %30, %33
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %140

41:                                               ; preds = %29, %132
  %42 = phi i32 [ %136, %132 ], [ %30, %29 ]
  %43 = phi i64* [ %135, %132 ], [ %32, %29 ]
  %44 = phi i64 [ %134, %132 ], [ %35, %29 ]
  %45 = phi i64 [ %133, %132 ], [ %34, %29 ]
  %46 = load i64, i64* %3, align 8
  %47 = and i64 %46, -4294967296
  %48 = shl i32 %42, 2
  %49 = sext i32 %48 to i64
  %50 = add nsw i64 %49, 7
  %51 = add i64 %50, %46
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %47, %54
  %56 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %41
  %61 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %55) #4
  %62 = load i64, i64* %61, align 8
  br label %76

63:                                               ; preds = %41
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %56) #4
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %55, i64* %72, align 8
  br label %76

76:                                               ; preds = %60, %71
  %77 = phi i64 [ %62, %60 ], [ %55, %71 ]
  %78 = phi i64* [ %61, %60 ], [ %72, %71 ]
  %79 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 0, i32 7, i32 0, i64 5
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %77 to i32
  %83 = trunc i64 %81 to i32
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %132, label %85

85:                                               ; preds = %76
  %86 = tail call i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %79, i64* %43, i32 %42, i64* %78, i64* null, i32 0) #4
  %87 = icmp eq i64* %86, %43
  br i1 %87, label %132, label %88

88:                                               ; preds = %85
  %89 = icmp eq i64* %86, null
  %90 = icmp eq i64* %43, null
  %91 = or i1 %90, %89
  %92 = load i64, i64* %86, align 8
  br i1 %91, label %98, label %93

93:                                               ; preds = %88
  %94 = load i64, i64* %43, align 8
  %95 = trunc i64 %92 to i32
  %96 = trunc i64 %94 to i32
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %132, label %98

98:                                               ; preds = %88, %93
  %99 = inttoptr i64 %45 to i64*
  %100 = inttoptr i64 %44 to i64*
  %101 = load i64*, i64** %25, align 8
  store i64 %45, i64* %21, align 8
  %102 = load i32, i32* %24, align 8
  %103 = add nsw i32 %102, -1
  store i32 %103, i32* %24, align 8
  %104 = load i64*, i64** %22, align 8
  %105 = icmp eq i64* %104, %100
  br i1 %105, label %108, label %106

106:                                              ; preds = %98
  store i64* %100, i64** %22, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #4
  %107 = load i64*, i64** %25, align 8
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i64* [ %107, %106 ], [ %99, %98 ]
  %110 = phi i64* [ %100, %106 ], [ %101, %98 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %109, i64* %110) #4
  %111 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %112 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %111, i64 %92) #4
  br label %126

115:                                              ; preds = %108
  %116 = load i64*, i64** %27, align 8
  %117 = load i64*, i64** %22, align 8
  %118 = icmp eq i64* %116, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #4
  br label %121

121:                                              ; preds = %119, %115
  %122 = phi i64* [ %120, %119 ], [ %116, %115 ]
  %123 = ptrtoint i64* %122 to i64
  %124 = add i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  store i64* %125, i64** %27, align 8
  store i64 %92, i64* %122, align 8
  br label %126

126:                                              ; preds = %113, %121
  %127 = phi i64* [ %114, %113 ], [ %122, %121 ]
  %128 = load i64, i64* %21, align 8
  %129 = load i64, i64* %23, align 8
  %130 = load i32, i32* %24, align 8
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %24, align 8
  br label %132

132:                                              ; preds = %85, %93, %126, %76
  %133 = phi i64 [ %45, %76 ], [ %45, %93 ], [ %128, %126 ], [ %45, %85 ]
  %134 = phi i64 [ %44, %76 ], [ %44, %93 ], [ %129, %126 ], [ %44, %85 ]
  %135 = phi i64* [ %43, %76 ], [ %43, %93 ], [ %127, %126 ], [ %43, %85 ]
  %136 = add nuw i32 %42, 1
  %137 = icmp ult i32 %136, %16
  %138 = icmp ult i32 %136, %33
  %139 = and i1 %137, %138
  br i1 %139, label %41, label %140

140:                                              ; preds = %132, %29
  %141 = phi i64 [ %34, %29 ], [ %133, %132 ]
  %142 = phi i64 [ %35, %29 ], [ %134, %132 ]
  %143 = phi i64* [ %32, %29 ], [ %135, %132 ]
  %144 = phi i32 [ %30, %29 ], [ %136, %132 ]
  br i1 %28, label %158, label %145

145:                                              ; preds = %140
  %146 = inttoptr i64 %141 to i64*
  %147 = inttoptr i64 %142 to i64*
  %148 = load i64*, i64** %25, align 8
  store i64 %141, i64* %21, align 8
  %149 = load i32, i32* %24, align 8
  %150 = add nsw i32 %149, -1
  store i32 %150, i32* %24, align 8
  %151 = load i64*, i64** %22, align 8
  %152 = icmp eq i64* %151, %147
  br i1 %152, label %155, label %153

153:                                              ; preds = %145
  store i64* %147, i64** %22, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %17) #4
  %154 = load i64*, i64** %25, align 8
  br label %155

155:                                              ; preds = %153, %145
  %156 = phi i64* [ %154, %153 ], [ %146, %145 ]
  %157 = phi i64* [ %147, %153 ], [ %148, %145 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %156, i64* %157) #4
  br label %158

158:                                              ; preds = %140, %155
  %159 = icmp ult i32 %144, %16
  br i1 %159, label %29, label %160

160:                                              ; preds = %158, %1
  %161 = phi i64* [ %11, %1 ], [ %143, %158 ]
  %162 = load i64*, i64** %2, align 8
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %162) #4
  %163 = load i64, i64* %161, align 8
  %164 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 36
  %166 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %165, align 8
  %167 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %166, i64 %163) #4
  %168 = ptrtoint i64* %167 to i64
  %169 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 1
  %170 = bitcast %"class.v8::internal::Handle.1149"* %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor", %"class.v8::internal::(anonymous namespace)::ArrayConcatVisitor"* %0, i64 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, -2
  store i32 %173, i32* %171, align 4
  ret void
}

declare i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i64*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal8JSObject24GetElementsTransitionMapENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i8 zeroext, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.uadd.sat.i32(i32, i32) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 1073205, i32 2146410443}
