; ModuleID = '../../v8/src/objects/backing-store.cc'
source_filename = "../../v8/src/objects/backing-store.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i8 }
%"struct.std::__1::aligned_storage<80, 8>::type" = type { [80 x i8] }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.v8::internal::SharedWasmMemoryData" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"**, %"class.std::__1::__compressed_pair.1257" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.647", %"class.std::__1::unique_ptr.668", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.678", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.817", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.830", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.840", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.851", %"struct.std::__1::atomic.154", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.977", i32, i8, i8, i32, i32, %"class.std::__1::vector.983", %"class.std::__1::vector.983", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.990", i64, %"class.std::__1::unordered_map.991", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.543", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1047", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1212", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1246", %"class.std::__1::vector.1250", %"class.std::__1::vector.1250", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.1", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.29", %"class.std::__1::vector.33", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.163", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.167", %"class.std::__1::vector.167", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::shared_ptr.482", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.505", %"class.std::__1::unique_ptr.531", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.537", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.550", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.332", i8, [7 x i8], %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.582", %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.606", %"class.std::__1::vector.634", i8, %"class.std::__1::unique_ptr.641", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.7", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.105" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.99" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.40", %"class.std::__1::vector.40", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.42" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.65", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.88", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.70", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.76" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.92", i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i64*, i64*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair.107"*, %"struct.std::__1::pair.107"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair.107" = type { i32, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair.107"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.113" }
%"class.std::__1::unordered_map.113" = type { %"class.std::__1::__hash_table.114" }
%"class.std::__1::__hash_table.114" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.118"** }
%"struct.std::__1::__hash_node_base.118" = type { %"struct.std::__1::__hash_node_base.118"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator.120" }
%"class.std::__1::__bucket_list_deallocator.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base.118" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.141", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.143" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1052", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1056", %"class.std::__1::unique_ptr.1062", %"class.std::__1::unique_ptr.476", %"class.std::__1::vector.1068", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1052" = type { %"struct.std::__1::__atomic_base.1053" }
%"struct.std::__1::__atomic_base.1053" = type { %"struct.std::__1::__cxx_atomic_impl.1054" }
%"struct.std::__1::__cxx_atomic_impl.1054" = type { %"struct.std::__1::__cxx_atomic_base_impl.1055" }
%"struct.std::__1::__cxx_atomic_base_impl.1055" = type { i32 }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.810" }
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { i64**, i64**, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { i64** }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.810", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1068" = type { %"class.std::__1::__vector_base.1069" }
%"class.std::__1::__vector_base.1069" = type { %"struct.std::__1::pair.1070"*, %"struct.std::__1::pair.1070"*, %"class.std::__1::__compressed_pair.1071" }
%"struct.std::__1::pair.1070" = type opaque
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.std::__1::pair.1070"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.154", %"struct.std::__1::atomic.158", %"class.std::__1::shared_ptr.162", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i8 }
%"class.std::__1::shared_ptr.162" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.169" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.154", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.332", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.325"], %"class.std::__1::unique_ptr.297" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.364", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.368", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.373" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.154", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.403", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.482" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.501", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.483", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.486", %"class.std::__1::set.494" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.486" = type { %"class.std::__1::__tree.487" }
%"class.std::__1::__tree.487" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.505" = type { %"class.std::__1::__hash_table.506" }
%"class.std::__1::__hash_table.506" = type <{ %"class.std::__1::unique_ptr.507", %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.525", [4 x i8] }>
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509", %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.std::__1::__hash_node_base.510"** }
%"struct.std::__1::__hash_node_base.510" = type { %"struct.std::__1::__hash_node_base.510"* }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.std::__1::__bucket_list_deallocator.512" }
%"class.std::__1::__bucket_list_deallocator.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.510" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.543", %"class.std::__1::vector.543" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.332" = type { %"class.std::__1::__hash_table.333" }
%"class.std::__1::__hash_table.333" = type <{ %"class.std::__1::unique_ptr.334", %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336", %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::__hash_node_base.337"** }
%"struct.std::__1::__hash_node_base.337" = type { %"struct.std::__1::__hash_node_base.337"* }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.std::__1::__bucket_list_deallocator.339" }
%"class.std::__1::__bucket_list_deallocator.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.337" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.582" = type { %"class.std::__1::__hash_table.583" }
%"class.std::__1::__hash_table.583" = type <{ %"class.std::__1::unique_ptr.584", %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.602", [4 x i8] }>
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586", %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.587"** }
%"struct.std::__1::__hash_node_base.587" = type { %"struct.std::__1::__hash_node_base.587"* }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::__bucket_list_deallocator.589" }
%"class.std::__1::__bucket_list_deallocator.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.587" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.606" = type { %"class.std::__1::__hash_table.607" }
%"class.std::__1::__hash_table.607" = type <{ %"class.std::__1::unique_ptr.608", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.611"** }
%"struct.std::__1::__hash_node_base.611" = type { %"struct.std::__1::__hash_node_base.611"* }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__bucket_list_deallocator.613" }
%"class.std::__1::__bucket_list_deallocator.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.611" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.636" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.543" }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.141", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.std::__1::unique_ptr.653"*, %"class.std::__1::unique_ptr.653"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.653"* }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.671", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.671" = type { %"struct.std::__1::__atomic_base.672" }
%"struct.std::__1::__atomic_base.672" = type { %"struct.std::__1::__cxx_atomic_impl.673" }
%"struct.std::__1::__cxx_atomic_impl.673" = type { %"struct.std::__1::__cxx_atomic_base_impl.674" }
%"struct.std::__1::__cxx_atomic_base_impl.674" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.679", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.679" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.680", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"class.std::__1::unique_ptr.682"*, %"class.std::__1::unique_ptr.682"*, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::unique_ptr.682" = type opaque
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::unique_ptr.682"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"struct.std::__1::atomic.154", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.724", %"class.std::__1::set.730", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.746", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.752", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.483" }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.754", %"class.std::__1::vector.760", %"class.std::__1::unique_ptr.767", %"class.std::__1::vector.774", %"class.std::__1::unique_ptr.781", i64, %"class.std::__1::vector.787", %"class.std::__1::vector.795", %"class.std::__1::vector.803", i8, i8, i32 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.762" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::GlobalHandles::NodeSpace.770"* }
%"class.v8::internal::GlobalHandles::NodeSpace.770" = type opaque
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.776" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { %"struct.std::__1::pair.789"*, %"struct.std::__1::pair.789"*, %"class.std::__1::__compressed_pair.790" }
%"struct.std::__1::pair.789" = type opaque
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"struct.std::__1::pair.789"* }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.810", %"class.std::__1::vector.817" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.824" }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { i32*, i32*, %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.830" = type { %"struct.std::__1::__atomic_base.831" }
%"struct.std::__1::__atomic_base.831" = type { %"struct.std::__1::__cxx_atomic_impl.832" }
%"struct.std::__1::__cxx_atomic_impl.832" = type { %"struct.std::__1::__cxx_atomic_base_impl.833" }
%"struct.std::__1::__cxx_atomic_base_impl.833" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.840" = type { %"struct.std::__1::__atomic_base.841" }
%"struct.std::__1::__atomic_base.841" = type { %"struct.std::__1::__cxx_atomic_impl.842" }
%"struct.std::__1::__cxx_atomic_impl.842" = type { %"struct.std::__1::__cxx_atomic_base_impl.843" }
%"struct.std::__1::__cxx_atomic_base_impl.843" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.847 }
%union.anon.847 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.851" = type { %"class.std::__1::__hash_table.852" }
%"class.std::__1::__hash_table.852" = type <{ %"class.std::__1::unique_ptr.853", %"class.std::__1::__compressed_pair.863", %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.871", [4 x i8] }>
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855", %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.std::__1::__hash_node_base.856"** }
%"struct.std::__1::__hash_node_base.856" = type { %"struct.std::__1::__hash_node_base.856"* }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.std::__1::__bucket_list_deallocator.858" }
%"class.std::__1::__bucket_list_deallocator.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.856" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.877", %"class.v8::internal::Handle.883", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.884", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.884" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.885", %"class.std::__1::vector.891", %"class.std::__1::unique_ptr.899", %"class.std::__1::unique_ptr.905", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.911", %"class.std::__1::vector.917", %"struct.std::__1::pair.925" }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"class.std::__1::unique_ptr.893"*, %"class.std::__1::unique_ptr.893"*, %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::unique_ptr.893" = type opaque
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.std::__1::unique_ptr.893"* }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.917" = type { %"class.std::__1::__vector_base.918" }
%"class.std::__1::__vector_base.918" = type { %"struct.std::__1::pair.919"*, %"struct.std::__1::pair.919"*, %"class.std::__1::__compressed_pair.920" }
%"struct.std::__1::pair.919" = type opaque
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::pair.919"* }
%"struct.std::__1::pair.925" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.5"*, i16, i8*)*, i8* }
%"class.v8::Local.5" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.929", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.929" = type { %"class.std::__1::__hash_table.930" }
%"class.std::__1::__hash_table.930" = type <{ %"class.std::__1::unique_ptr.931", %"class.std::__1::__compressed_pair.941", %"class.std::__1::__compressed_pair.946", %"class.std::__1::__compressed_pair.950", [4 x i8] }>
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933", %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"struct.std::__1::__hash_node_base.934"** }
%"struct.std::__1::__hash_node_base.934" = type { %"struct.std::__1::__hash_node_base.934"* }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.std::__1::__bucket_list_deallocator.936" }
%"class.std::__1::__bucket_list_deallocator.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::__hash_node_base.934" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.835", i32, %"class.v8::Local.5" }
%"class.v8::Local.835" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.983" = type { %"class.std::__1::__vector_base.984" }
%"class.std::__1::__vector_base.984" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.990" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.991" = type { %"class.std::__1::__hash_table.992" }
%"class.std::__1::__hash_table.992" = type <{ %"class.std::__1::unique_ptr.993", %"class.std::__1::__compressed_pair.1003", %"class.std::__1::__compressed_pair.1008", %"class.std::__1::__compressed_pair.1011", [4 x i8] }>
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995", %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::__hash_node_base.996"** }
%"struct.std::__1::__hash_node_base.996" = type { %"struct.std::__1::__hash_node_base.996"* }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.std::__1::__bucket_list_deallocator.998" }
%"class.std::__1::__bucket_list_deallocator.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"struct.std::__1::__hash_node_base.996" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1015", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1044", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1045", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1015" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1040, %union.anon.1042, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1040 = type { i64 }
%union.anon.1042 = type { i64 }
%"class.std::__1::weak_ptr.1044" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1045" = type { %"class.v8::PersistentBase.1046" }
%"class.v8::PersistentBase.1046" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1016", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1016" = type { %"class.std::__1::__hash_table.1017" }
%"class.std::__1::__hash_table.1017" = type <{ %"class.std::__1::unique_ptr.1018", %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1036", [4 x i8] }>
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020", %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"struct.std::__1::__hash_node_base.1021"** }
%"struct.std::__1::__hash_node_base.1021" = type { %"struct.std::__1::__hash_node_base.1021"* }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.std::__1::__bucket_list_deallocator.1023" }
%"class.std::__1::__bucket_list_deallocator.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"struct.std::__1::__hash_node_base.1021" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1076", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type { %"class.v8::internal::wasm::WasmCodeManager", %"class.v8::internal::AccountingAllocator", %"struct.std::__1::atomic.1093", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.1098", %"class.std::__1::unique_ptr.1126", %"class.std::__1::unique_ptr.1132", %"class.std::__1::unordered_map.1138", %"class.std::__1::unordered_map.1166", %"class.std::__1::shared_ptr.1194", i64, %"class.std::__1::unique_ptr.1195", %"class.v8::internal::wasm::NativeModuleCache" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1085" }
%"class.std::__1::__tree.1085" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1086", %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1093" = type { %"struct.std::__1::__atomic_base.1094" }
%"struct.std::__1::__atomic_base.1094" = type { %"struct.std::__1::__atomic_base.1095" }
%"struct.std::__1::__atomic_base.1095" = type { %"struct.std::__1::__cxx_atomic_impl.1096" }
%"struct.std::__1::__cxx_atomic_impl.1096" = type { %"struct.std::__1::__cxx_atomic_base_impl.1097" }
%"struct.std::__1::__cxx_atomic_base_impl.1097" = type { i32 }
%"class.std::__1::unordered_map.1098" = type { %"class.std::__1::__hash_table.1099" }
%"class.std::__1::__hash_table.1099" = type <{ %"class.std::__1::unique_ptr.1100", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1120", [4 x i8] }>
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102", %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::__hash_node_base.1103"** }
%"struct.std::__1::__hash_node_base.1103" = type { %"struct.std::__1::__hash_node_base.1103"* }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.std::__1::__bucket_list_deallocator.1105" }
%"class.std::__1::__bucket_list_deallocator.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1103" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.v8::internal::CompilationStatistics"* }
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.v8::internal::CodeTracer"* }
%"class.std::__1::unordered_map.1138" = type { %"class.std::__1::__hash_table.1139" }
%"class.std::__1::__hash_table.1139" = type <{ %"class.std::__1::unique_ptr.1140", %"class.std::__1::__compressed_pair.1150", %"class.std::__1::__compressed_pair.1155", %"class.std::__1::__compressed_pair.1160", [4 x i8] }>
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142", %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"struct.std::__1::__hash_node_base.1143"** }
%"struct.std::__1::__hash_node_base.1143" = type { %"struct.std::__1::__hash_node_base.1143"* }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.std::__1::__bucket_list_deallocator.1145" }
%"class.std::__1::__bucket_list_deallocator.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::__hash_node_base.1143" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.1166" = type { %"class.std::__1::__hash_table.1167" }
%"class.std::__1::__hash_table.1167" = type <{ %"class.std::__1::unique_ptr.1168", %"class.std::__1::__compressed_pair.1178", %"class.std::__1::__compressed_pair.1183", %"class.std::__1::__compressed_pair.1188", [4 x i8] }>
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170", %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.std::__1::__hash_node_base.1171"** }
%"struct.std::__1::__hash_node_base.1171" = type { %"struct.std::__1::__hash_node_base.1171"* }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.std::__1::__bucket_list_deallocator.1173" }
%"class.std::__1::__bucket_list_deallocator.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.std::__1::__hash_node_base.1171" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::shared_ptr.1194" = type { %"class.v8::internal::OperationsBarrier"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.std::__1::unique_ptr.1195" = type { %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo"* }
%"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo" = type opaque
%"class.v8::internal::wasm::NativeModuleCache" = type { %"class.std::__1::map.1201", %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable" }
%"class.std::__1::map.1201" = type { %"class.std::__1::__tree.1202" }
%"class.std::__1::__tree.1202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1203", %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.836", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.836" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1220" }
%"class.std::__1::unordered_map.1220" = type { %"class.std::__1::__hash_table.1221" }
%"class.std::__1::__hash_table.1221" = type <{ %"class.std::__1::unique_ptr.1222", %"class.std::__1::__compressed_pair.1232", %"class.std::__1::__compressed_pair.1237", %"class.std::__1::__compressed_pair.1240", [4 x i8] }>
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224", %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.std::__1::__hash_node_base.1225"** }
%"struct.std::__1::__hash_node_base.1225" = type { %"struct.std::__1::__hash_node_base.1225"* }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.std::__1::__bucket_list_deallocator.1227" }
%"class.std::__1::__bucket_list_deallocator.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"struct.std::__1::__hash_node_base.1225" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1246" = type { %"struct.std::__1::__atomic_base.1247" }
%"struct.std::__1::__atomic_base.1247" = type { %"struct.std::__1::__cxx_atomic_impl.1248" }
%"struct.std::__1::__cxx_atomic_impl.1248" = type { %"struct.std::__1::__cxx_atomic_base_impl.1249" }
%"struct.std::__1::__cxx_atomic_base_impl.1249" = type { %"class.std::__1::vector.1250"* }
%"class.std::__1::vector.1250" = type { %"class.std::__1::__vector_base.1251" }
%"class.std::__1::__vector_base.1251" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1252" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.v8::internal::Isolate"** }
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356", %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1289", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_node_base.1289" = type { %"struct.std::__1::__hash_node_base.1289"* }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1313" }
%"struct.std::__1::pair.1313" = type { i8*, %"class.std::__1::weak_ptr.1044" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.1299"*, i8, [7 x i8] }>
%"class.std::__1::allocator.1299" = type { i8 }
%"class.std::__1::function.1333" = type { %"class.std::__1::__function::__policy_func.1336" }
%"class.std::__1::__function::__policy_func.1336" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1337", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker.1337" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::atomic.1328" = type { %"struct.std::__1::__atomic_base.1329" }
%"struct.std::__1::__atomic_base.1329" = type { %"struct.std::__1::__atomic_base.1330" }
%"struct.std::__1::__atomic_base.1330" = type { %"struct.std::__1::__cxx_atomic_impl.1331" }
%"struct.std::__1::__cxx_atomic_impl.1331" = type { %"struct.std::__1::__cxx_atomic_base_impl.1332" }
%"struct.std::__1::__cxx_atomic_base_impl.1332" = type { i8 }
%"class.std::__1::__hash_table.1285" = type <{ %"class.std::__1::unique_ptr.1286", %"class.std::__1::__compressed_pair.1296", %"class.std::__1::__compressed_pair.1301", %"class.std::__1::__compressed_pair.1306", [4 x i8] }>
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288", %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"struct.std::__1::__hash_node_base.1289"** }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.std::__1::__bucket_list_deallocator.1291" }
%"class.std::__1::__bucket_list_deallocator.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"struct.std::__1::__hash_node_base.1289" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker" = type { i8* (%"union.std::__1::__function::__policy_storage"*, i64)* }
%"class.std::__1::function.1271" = type { %"class.std::__1::__function::__policy_func.1274" }
%"class.std::__1::__function::__policy_func.1274" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1275", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1275" = type { i1 (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.1314" = type { %"class.std::__1::__vector_base.1315" }
%"class.std::__1::__vector_base.1315" = type { %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"*, %"class.std::__1::__compressed_pair.1316" }
%"class.std::__1::__compressed_pair.1316" = type { %"struct.std::__1::__compressed_pair_elem.1317" }
%"struct.std::__1::__compressed_pair_elem.1317" = type { %"class.std::__1::shared_ptr.162"* }
%"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef" = type { %"class.v8::internal::JSArrayBuffer" }
%"class.v8::internal::JSArrayBuffer" = type { %"class.v8::internal::TorqueGeneratedJSArrayBuffer" }
%"class.v8::internal::TorqueGeneratedJSArrayBuffer" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef" = type { %"class.v8::internal::WasmMemoryObject" }
%"class.v8::internal::WasmMemoryObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::Factory" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1347" = type { %class.anon.1276 }
%class.anon.1276 = type { i8**, i64*, i64* }

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S8_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE = comdat any

$_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS5_EEEvDpOT_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"pages_were_freed\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"(allocator) != nullptr\00", align 1
@_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"could not allocate wasm memory backing store\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"BackingStore::AllocateMemory()\00", align 1
@.str.5 = private unnamed_addr constant [83 x i8] c"!is_wasm_memory_ && !custom_deleter_ && !globally_registered_ && free_on_destruct_\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"isolate->array_buffer_allocator() == allocator\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"byte_length_ == byte_capacity_\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"!is_wasm_memory_\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"(array_buffer_allocator) != nullptr\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"is_wasm_memory_ && is_shared_\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"shared_wasm_memory_data\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"backing_store->is_wasm_memory()\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"result.second\00", align 1
@_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E = internal global { { i64 } } zeroinitializer, align 8
@_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE = external local_unnamed_addr global %"struct.std::__1::atomic.154", align 1
@_ZN2v88internal12trap_handler25g_is_trap_handler_enabledE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E = internal global { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" } { { { i8 } } zeroinitializer, [7 x i8] undef, %"struct.std::__1::aligned_storage<80, 8>::type" zeroinitializer }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12BackingStore8AllocateEPNS5_7IsolateEmNS5_10SharedFlagENS5_15InitializedFlagEE3$_0FPvmEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_2FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

@_ZN2v88internal12BackingStoreD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::BackingStore"*), void (%"class.v8::internal::BackingStore"*)* @_ZN2v88internal12BackingStoreD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStore5ClearEv(%"class.v8::internal::BackingStore"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  store i8* null, i8** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %3 seq_cst, align 8
  %4 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, -33
  store i16 %6, i16* %4, align 8
  %7 = and i16 %5, 8
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %10, align 8
  %12 = icmp eq %"class.std::__1::__shared_weak_count"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %15 = atomicrmw add i64* %14, i64 -1 acq_rel
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0
  %19 = bitcast %"class.std::__1::__shared_weak_count"* %11 to void (%"class.std::__1::__shared_count"*)***
  %20 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %20, i64 2
  %22 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %21, align 8
  tail call void %22(%"class.std::__1::__shared_count"* %18) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %11) #12
  br label %23

23:                                               ; preds = %9, %13, %17
  %24 = load i16, i16* %4, align 8
  %25 = and i16 %24, -9
  store i16 %25, i16* %4, align 8
  br label %26

26:                                               ; preds = %1, %23
  %27 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::ArrayBuffer::Allocator"* null, %"class.v8::ArrayBuffer::Allocator"** %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStoreD2Ev(%"class.v8::internal::BackingStore"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal26GlobalBackingStoreRegistry10UnregisterEPNS0_12BackingStoreE(%"class.v8::internal::BackingStore"* %0)
  %2 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  %5 = ptrtoint i8* %3 to i64
  br i1 %4, label %6, label %30

6:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %7 seq_cst, align 8
  %8 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %9 = load i16, i16* %8, align 8
  %10 = and i16 %9, -33
  store i16 %10, i16* %8, align 8
  %11 = and i16 %9, 8
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %218, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %15, i64 0, i32 0, i32 1
  %19 = atomicrmw add i64* %18, i64 -1 acq_rel
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %15, i64 0, i32 0
  %23 = bitcast %"class.std::__1::__shared_weak_count"* %15 to void (%"class.std::__1::__shared_count"*)***
  %24 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %24, i64 2
  %26 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %25, align 8
  tail call void %26(%"class.std::__1::__shared_count"* %22) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %15) #12
  br label %27

27:                                               ; preds = %21, %17, %13
  %28 = load i16, i16* %8, align 8
  %29 = and i16 %28, -9
  store i16 %29, i16* %8, align 8
  br label %218

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %32 = load i16, i16* %31, align 8
  %33 = and i16 %32, 4
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %107, label %35

35:                                               ; preds = %30
  %36 = and i16 %32, 32
  %37 = icmp eq i16 %36, 0
  %38 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = select i1 %37, i64 %39, i64 10737418240
  %41 = and i16 %32, 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %69, label %43

43:                                               ; preds = %35
  %44 = and i16 %32, 5
  %45 = icmp eq i16 %44, 5
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %43
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3
  %49 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %48 to %"struct.v8::internal::SharedWasmMemoryData"**
  %50 = load %"struct.v8::internal::SharedWasmMemoryData"*, %"struct.v8::internal::SharedWasmMemoryData"** %49, align 8
  %51 = icmp eq %"struct.v8::internal::SharedWasmMemoryData"* %50, null
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %47
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #13
  unreachable

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %50, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %54, align 8
  %56 = icmp eq %"class.v8::internal::Isolate"** %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"class.v8::internal::Isolate"** %55 to i64
  %59 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %50, i64 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.v8::internal::Isolate"*** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"class.v8::internal::Isolate"** %55 to i8*
  tail call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %57, %53
  %63 = bitcast %"struct.v8::internal::SharedWasmMemoryData"* %50 to i8*
  tail call void @_ZdlPv(i8* %63) #14
  store %"struct.v8::internal::SharedWasmMemoryData"* null, %"struct.v8::internal::SharedWasmMemoryData"** %49, align 8
  %64 = load i16, i16* %31, align 8
  %65 = bitcast %"class.v8::internal::BackingStore"* %0 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %38, align 8
  %68 = and i16 %64, 32
  br label %69

69:                                               ; preds = %35, %62
  %70 = phi i16 [ %68, %62 ], [ %36, %35 ]
  %71 = phi i64 [ %67, %62 ], [ %39, %35 ]
  %72 = phi i64 [ %66, %62 ], [ %5, %35 ]
  %73 = icmp ne i16 %70, 0
  %74 = select i1 %73, i64 10737418240, i64 %71
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %69
  %77 = add i64 %72, -2147483648
  %78 = select i1 %73, i64 %77, i64 %72
  %79 = tail call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %80 = inttoptr i64 %78 to i8*
  %81 = tail call zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"* %79, i8* %80, i64 %74) #12
  br i1 %81, label %83, label %82, !prof !2

82:                                               ; preds = %76
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

83:                                               ; preds = %76, %69
  %84 = atomicrmw sub i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0), i64 %40 seq_cst
  store i8* null, i8** %2, align 8
  %85 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %85 seq_cst, align 8
  %86 = load i16, i16* %31, align 8
  %87 = and i16 %86, -33
  store i16 %87, i16* %31, align 8
  %88 = and i16 %86, 8
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %218, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 1
  %92 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %91, align 8
  %93 = icmp eq %"class.std::__1::__shared_weak_count"* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %92, i64 0, i32 0, i32 1
  %96 = atomicrmw add i64* %95, i64 -1 acq_rel
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %92, i64 0, i32 0
  %100 = bitcast %"class.std::__1::__shared_weak_count"* %92 to void (%"class.std::__1::__shared_count"*)***
  %101 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %101, i64 2
  %103 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %102, align 8
  tail call void %103(%"class.std::__1::__shared_count"* %99) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %92) #12
  br label %104

104:                                              ; preds = %98, %94, %90
  %105 = load i16, i16* %31, align 8
  %106 = and i16 %105, -9
  store i16 %106, i16* %31, align 8
  br label %218

107:                                              ; preds = %30
  %108 = and i16 %32, 2
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %148, label %110

110:                                              ; preds = %107
  %111 = and i16 %32, 32
  %112 = icmp ne i16 %111, 0
  %113 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = select i1 %112, i64 10737418240, i64 %114
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %110
  %118 = add i64 %5, -2147483648
  %119 = select i1 %112, i64 %118, i64 %5
  %120 = tail call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %121 = inttoptr i64 %119 to i8*
  %122 = tail call zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"* %120, i8* %121, i64 %115) #12
  br i1 %122, label %124, label %123, !prof !2

123:                                              ; preds = %117
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

124:                                              ; preds = %117, %110
  %125 = atomicrmw sub i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0), i64 %115 seq_cst
  store i8* null, i8** %2, align 8
  %126 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %126 seq_cst, align 8
  %127 = load i16, i16* %31, align 8
  %128 = and i16 %127, -33
  store i16 %128, i16* %31, align 8
  %129 = and i16 %127, 8
  %130 = icmp eq i16 %129, 0
  br i1 %130, label %218, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 1
  %133 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %132, align 8
  %134 = icmp eq %"class.std::__1::__shared_weak_count"* %133, null
  br i1 %134, label %145, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %133, i64 0, i32 0, i32 1
  %137 = atomicrmw add i64* %136, i64 -1 acq_rel
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %133, i64 0, i32 0
  %141 = bitcast %"class.std::__1::__shared_weak_count"* %133 to void (%"class.std::__1::__shared_count"*)***
  %142 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %142, i64 2
  %144 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %143, align 8
  tail call void %144(%"class.std::__1::__shared_count"* %140) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %133) #12
  br label %145

145:                                              ; preds = %139, %135, %131
  %146 = load i16, i16* %31, align 8
  %147 = and i16 %146, -9
  store i16 %147, i16* %31, align 8
  br label %218

148:                                              ; preds = %107
  %149 = trunc i16 %32 to i8
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %180

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3
  %153 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %152 to void (i8*, i64, i8*)**
  %154 = load void (i8*, i64, i8*)*, void (i8*, i64, i8*)** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i64, i64* %155 seq_cst, align 8
  %157 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 1
  %158 = bitcast %"class.std::__1::__shared_weak_count"** %157 to i8**
  %159 = load i8*, i8** %158, align 8
  tail call void %154(i8* nonnull %3, i64 %156, i8* %159) #12
  store i8* null, i8** %2, align 8
  store atomic i64 0, i64* %155 seq_cst, align 8
  %160 = load i16, i16* %31, align 8
  %161 = and i16 %160, -33
  store i16 %161, i16* %31, align 8
  %162 = and i16 %160, 8
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %218, label %164

164:                                              ; preds = %151
  %165 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %157, align 8
  %166 = icmp eq %"class.std::__1::__shared_weak_count"* %165, null
  br i1 %166, label %177, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %165, i64 0, i32 0, i32 1
  %169 = atomicrmw add i64* %168, i64 -1 acq_rel
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %177

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %165, i64 0, i32 0
  %173 = bitcast %"class.std::__1::__shared_weak_count"* %165 to void (%"class.std::__1::__shared_count"*)***
  %174 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %174, i64 2
  %176 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %175, align 8
  tail call void %176(%"class.std::__1::__shared_count"* %172) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %165) #12
  br label %177

177:                                              ; preds = %171, %167, %164
  %178 = load i16, i16* %31, align 8
  %179 = and i16 %178, -9
  store i16 %179, i16* %31, align 8
  br label %218

180:                                              ; preds = %148
  %181 = and i16 %32, 16
  %182 = icmp eq i16 %181, 0
  br i1 %182, label %195, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 0
  %185 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %184, align 8
  %186 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %185, null
  br i1 %186, label %187, label %188, !prof !3

187:                                              ; preds = %183
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0)) #13
  unreachable

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i64, i64* %189 seq_cst, align 8
  %191 = bitcast %"class.v8::ArrayBuffer::Allocator"* %185 to void (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64)***
  %192 = load void (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64)**, void (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64)*, void (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64)** %192, i64 4
  %194 = load void (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64)*, void (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64)** %193, align 8
  tail call void %194(%"class.v8::ArrayBuffer::Allocator"* nonnull %185, i8* nonnull %3, i64 %190) #12
  br label %195

195:                                              ; preds = %180, %188
  store i8* null, i8** %2, align 8
  %196 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %196 seq_cst, align 8
  %197 = load i16, i16* %31, align 8
  %198 = and i16 %197, -33
  store i16 %198, i16* %31, align 8
  %199 = and i16 %197, 8
  %200 = icmp eq i16 %199, 0
  br i1 %200, label %218, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 1
  %203 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %202, align 8
  %204 = icmp eq %"class.std::__1::__shared_weak_count"* %203, null
  br i1 %204, label %215, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %203, i64 0, i32 0, i32 1
  %207 = atomicrmw add i64* %206, i64 -1 acq_rel
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %215

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %203, i64 0, i32 0
  %211 = bitcast %"class.std::__1::__shared_weak_count"* %203 to void (%"class.std::__1::__shared_count"*)***
  %212 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %212, i64 2
  %214 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %213, align 8
  tail call void %214(%"class.std::__1::__shared_count"* %210) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %203) #12
  br label %215

215:                                              ; preds = %209, %205, %201
  %216 = load i16, i16* %31, align 8
  %217 = and i16 %216, -9
  store i16 %217, i16* %31, align 8
  br label %218

218:                                              ; preds = %215, %195, %177, %151, %145, %124, %104, %83, %27, %6
  %219 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::ArrayBuffer::Allocator"* null, %"class.v8::ArrayBuffer::Allocator"** %219, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26GlobalBackingStoreRegistry10UnregisterEPNS0_12BackingStoreE(%"class.v8::internal::BackingStore"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1354", align 8
  %3 = alloca %"class.std::__1::function.1333", align 8
  %4 = alloca %"class.std::__1::function.1333", align 8
  %5 = alloca %"class.std::__1::function.1333", align 8
  %6 = alloca %"class.std::__1::function.1333", align 8
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %9 = load i16, i16* %8, align 8
  %10 = and i16 %9, 64
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %111, label %12

12:                                               ; preds = %1
  %13 = and i16 %9, 4
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %16, !prof !3

15:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0)) #13
  unreachable

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::function.1333"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #12
  %18 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %19 = icmp eq i8 %18, 2
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %6, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %21, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %22, align 8
  %23 = bitcast %"class.std::__1::function.1333"* %6 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %6, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast [8 x i8]* %24 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %25, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %6) #12
  %26 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %26, i64 0, i32 1
  %28 = load void (i8*)*, void (i8*)** %27, align 8
  %29 = icmp eq void (i8*)* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %6, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void %28(i8* %32) #12
  br label %33

33:                                               ; preds = %16, %20, %30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #12
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  %34 = bitcast %"class.std::__1::function.1333"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #12
  %35 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %5, i64 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %38, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %39, align 8
  %40 = bitcast %"class.std::__1::function.1333"* %5 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %5, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast [8 x i8]* %41 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %42, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %5) #12
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %43, i64 0, i32 1
  %45 = load void (i8*)*, void (i8*)** %44, align 8
  %46 = icmp eq void (i8*)* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %5, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void %45(i8* %49) #12
  br label %50

50:                                               ; preds = %33, %37, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #12
  %51 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  %52 = bitcast %"class.v8::internal::BackingStore"* %0 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast i8** %7 to i64*
  store i64 %53, i64* %54, align 8
  %55 = call %"struct.std::__1::__hash_node_base.1289"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_(%"class.std::__1::__hash_table.1285"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 40) to %"class.std::__1::__hash_table.1285"*), i8** nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  %56 = bitcast %"class.std::__1::function.1333"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #12
  %57 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %58 = icmp eq i8 %57, 2
  br i1 %58, label %72, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %60, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %61, align 8
  %62 = bitcast %"class.std::__1::function.1333"* %4 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 1
  %64 = bitcast [8 x i8]* %63 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %64, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %4) #12
  %65 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %61, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %65, i64 0, i32 1
  %67 = load void (i8*)*, void (i8*)** %66, align 8
  %68 = icmp eq void (i8*)* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void %67(i8* %71) #12
  br label %72

72:                                               ; preds = %50, %59, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #12
  %73 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %55, null
  br i1 %73, label %108, label %74

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::function.1333"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #12
  %76 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %77 = icmp eq i8 %76, 2
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %79, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %80, align 8
  %81 = bitcast %"class.std::__1::function.1333"* %3 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 0, i32 1
  %83 = bitcast [8 x i8]* %82 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %83, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %3) #12
  %84 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %80, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %84, i64 0, i32 1
  %86 = load void (i8*)*, void (i8*)** %85, align 8
  %87 = icmp eq void (i8*)* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void %86(i8* %90) #12
  br label %91

91:                                               ; preds = %74, %78, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #12
  %92 = bitcast %"class.std::__1::unique_ptr.1354"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.1354"* nonnull sret %2, %"class.std::__1::__hash_table.1285"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 40) to %"class.std::__1::__hash_table.1285"*), %"struct.std::__1::__hash_node_base.1289"* nonnull %55) #12
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1354", %"class.std::__1::unique_ptr.1354"* %2, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %93, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1354", %"class.std::__1::unique_ptr.1354"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %98 = load i8, i8* %97, align 8, !range !4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %94, i64 0, i32 2, i32 0, i32 1, i32 1
  %102 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %101, align 8
  %103 = icmp eq %"class.std::__1::__shared_weak_count"* %102, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %102) #12
  br label %105

105:                                              ; preds = %104, %100, %96
  %106 = bitcast %"struct.std::__1::__hash_node"* %94 to i8*
  call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %91, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  br label %108

108:                                              ; preds = %72, %107
  %109 = load i16, i16* %8, align 8
  %110 = and i16 %109, -65
  store i16 %110, i16* %8, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  br label %111

111:                                              ; preds = %1, %108
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::SharedWasmMemoryData"* @_ZN2v88internal12BackingStore27get_shared_wasm_memory_dataEv(%"class.v8::internal::BackingStore"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 5
  %5 = icmp eq i16 %4, 5
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3
  %9 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %8 to %"struct.v8::internal::SharedWasmMemoryData"**
  %10 = load %"struct.v8::internal::SharedWasmMemoryData"*, %"struct.v8::internal::SharedWasmMemoryData"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::SharedWasmMemoryData"* %10, null
  br i1 %11, label %12, label %13, !prof !3

12:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #13
  unreachable

13:                                               ; preds = %7
  ret %"struct.v8::internal::SharedWasmMemoryData"* %10
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"*, i8*, i64) local_unnamed_addr #3

declare %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStore18ReleaseReservationEm(i64) local_unnamed_addr #0 align 2 {
  %2 = atomicrmw sub i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0), i64 %0 seq_cst
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::ArrayBuffer::Allocator"* @_ZN2v88internal12BackingStore33get_v8_api_array_buffer_allocatorEv(%"class.v8::internal::BackingStore"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 4
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #13
  unreachable

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %8, align 8
  %10 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %9, null
  br i1 %10, label %11, label %12, !prof !3

11:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0)) #13
  unreachable

12:                                               ; preds = %7
  ret %"class.v8::ArrayBuffer::Allocator"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore8AllocateEPNS0_7IsolateEmNS0_10SharedFlagENS0_15InitializedFlagE(%"class.v8::internal::Isolate"*, i64, i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 145
  %7 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %6, align 8
  %8 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %7, null
  br i1 %8, label %9, label %10, !prof !3

9:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

10:                                               ; preds = %4
  %11 = icmp eq i64 %1, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %10
  %13 = tail call i8* @_Znwm(i64 48) #14
  %14 = getelementptr inbounds i8, i8* %13, i64 40
  %15 = bitcast i8* %14 to i16*
  %16 = icmp eq i8 %2, 1
  %17 = zext i1 %16 to i16
  %18 = or i16 %17, 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false)
  store i16 %18, i16* %15, align 8
  br label %63

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %21 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %20, align 8
  %22 = lshr i64 %1, 20
  %23 = trunc i64 %22 to i32
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 26
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %26, i32 %23) #12
  br label %27

27:                                               ; preds = %25, %19
  %28 = icmp eq i8 %2, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 28
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %30, i32 %23) #12
  br label %31

31:                                               ; preds = %29, %27
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %33 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  store i8* (%"union.std::__1::__function::__policy_storage"*, i64)* @"_ZNSt3__110__function16__policy_invokerIFPvmEE11__call_implINS0_20__default_alloc_funcIZN2v88internal12BackingStore8AllocateEPNS8_7IsolateEmNS8_10SharedFlagENS8_15InitializedFlagEE3$_0S3_EEEES2_PKNS0_16__policy_storageEm", i8* (%"union.std::__1::__function::__policy_storage"*, i64)** %34, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12BackingStore8AllocateEPNS5_7IsolateEmNS5_10SharedFlagENS5_15InitializedFlagEE3$_0FPvmEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %35, align 8
  %36 = bitcast %"class.std::__1::function"* %5 to %"class.v8::ArrayBuffer::Allocator"**
  store %"class.v8::ArrayBuffer::Allocator"* %7, %"class.v8::ArrayBuffer::Allocator"** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  store i8 %3, i8* %37, align 8
  %38 = call i8* @_ZN2v88internal4Heap28AllocateExternalBackingStoreERKNSt3__18functionIFPvmEEEm(%"class.v8::internal::Heap"* %32, %"class.std::__1::function"* nonnull dereferenceable(32) %5, i64 %1) #12
  %39 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %35, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 1
  %41 = load void (i8*)*, void (i8*)** %40, align 8
  %42 = icmp eq void (i8*)* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void %41(i8* %45) #12
  br label %46

46:                                               ; preds = %31, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #12
  %47 = icmp eq i8* %38, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 27
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %49, i32 %23) #12
  br label %102

50:                                               ; preds = %46
  %51 = call i8* @_Znwm(i64 48) #14
  %52 = bitcast i8* %51 to i8**
  store i8* %38, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 8
  %54 = bitcast i8* %53 to i64*
  store i64 %1, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %51, i64 16
  %56 = bitcast i8* %55 to i64*
  store i64 %1, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %51, i64 24
  %58 = bitcast i8* %57 to %"class.v8::ArrayBuffer::Allocator"**
  store %"class.v8::ArrayBuffer::Allocator"* null, %"class.v8::ArrayBuffer::Allocator"** %58, align 8
  %59 = getelementptr inbounds i8, i8* %51, i64 40
  %60 = bitcast i8* %59 to i16*
  %61 = zext i1 %28 to i16
  %62 = or i16 %61, 16
  store i16 %62, i16* %60, align 8
  br label %63

63:                                               ; preds = %50, %12
  %64 = phi i16 [ %18, %12 ], [ %62, %50 ]
  %65 = phi i8* [ %13, %12 ], [ %51, %50 ]
  %66 = bitcast i8* %65 to %"class.v8::internal::BackingStore"*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 146, i32 0
  %68 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 146, i32 1
  %70 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %69, align 8
  %71 = icmp eq %"class.std::__1::__shared_weak_count"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %70, i64 0, i32 0, i32 1
  %74 = atomicrmw add i64* %73, i64 1 monotonic
  br label %75

75:                                               ; preds = %72, %63
  %76 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %68, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %75
  %78 = ptrtoint %"class.std::__1::__shared_weak_count"* %70 to i64
  %79 = ptrtoint %"class.v8::ArrayBuffer::Allocator"* %68 to i64
  %80 = getelementptr inbounds i8, i8* %65, i64 40
  %81 = bitcast i8* %80 to i16*
  %82 = or i16 %64, 8
  store i16 %82, i16* %81, align 8
  %83 = getelementptr inbounds i8, i8* %65, i64 24
  %84 = bitcast i8* %83 to i64*
  store i64 %79, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %65, i64 32
  %86 = bitcast i8* %85 to i64*
  store i64 %78, i64* %86, align 8
  br label %102

87:                                               ; preds = %75
  %88 = bitcast %"class.v8::ArrayBuffer::Allocator"** %6 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds i8, i8* %65, i64 24
  %91 = bitcast i8* %90 to i64*
  store i64 %89, i64* %91, align 8
  br i1 %71, label %102, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %70, i64 0, i32 0, i32 1
  %94 = atomicrmw add i64* %93, i64 -1 acq_rel
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %70, i64 0, i32 0
  %98 = bitcast %"class.std::__1::__shared_weak_count"* %70 to void (%"class.std::__1::__shared_count"*)***
  %99 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %99, i64 2
  %101 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %100, align 8
  call void %101(%"class.std::__1::__shared_count"* %97) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %70) #12
  br label %102

102:                                              ; preds = %96, %92, %87, %77, %48
  %103 = phi %"class.v8::internal::BackingStore"* [ null, %48 ], [ %66, %77 ], [ %66, %87 ], [ %66, %92 ], [ %66, %96 ]
  ret %"class.v8::internal::BackingStore"* %103
}

declare void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"*, i32) local_unnamed_addr #3

declare i8* @_ZN2v88internal4Heap28AllocateExternalBackingStoreERKNSt3__18functionIFPvmEEEm(%"class.v8::internal::Heap"*, %"class.std::__1::function"* dereferenceable(32), i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStore23SetAllocatorFromIsolateEPNS0_7IsolateE(%"class.v8::internal::BackingStore"* nocapture, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 146, i32 0
  %4 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 146, i32 1
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %10 = atomicrmw add i64* %9, i64 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  %12 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %4, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %11
  %14 = ptrtoint %"class.std::__1::__shared_weak_count"* %6 to i64
  %15 = ptrtoint %"class.v8::ArrayBuffer::Allocator"* %4 to i64
  %16 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %17 = load i16, i16* %16, align 8
  %18 = or i16 %17, 8
  store i16 %18, i16* %16, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0
  %20 = bitcast %"class.std::__1::shared_ptr"* %19 to i64*
  store i64 %15, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__shared_weak_count"** %21 to i64*
  store i64 %14, i64* %22, align 8
  br label %39

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 145
  %25 = bitcast %"class.v8::ArrayBuffer::Allocator"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = bitcast %"class.v8::ArrayBuffer::Allocator"** %27 to i64*
  store i64 %26, i64* %28, align 8
  br i1 %7, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %31 = atomicrmw add i64* %30, i64 -1 acq_rel
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %35 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %36 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %36, i64 2
  %38 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %37, align 8
  tail call void %38(%"class.std::__1::__shared_count"* %34) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #12
  br label %39

39:                                               ; preds = %13, %23, %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore21TryAllocateWasmMemoryEPNS0_7IsolateEmmNS0_10SharedFlagE(%"class.v8::internal::Isolate"*, i64, i64, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #12
  %6 = zext i32 %5 to i64
  %7 = icmp ugt i64 %6, %2
  %8 = select i1 %7, i64 %2, i64 %6
  %9 = shl i64 %1, 16
  %10 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS0_7IsolateEmmmmbNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 %9, i64 65536, i64 %1, i64 %8, i1 zeroext true, i8 zeroext %3)
  %11 = icmp ne %"class.v8::internal::BackingStore"* %10, null
  %12 = icmp eq i8 %3, 1
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %18

14:                                               ; preds = %4
  %15 = tail call i8* @_Znwm(i64 24) #14
  %16 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %10, i64 0, i32 3
  %17 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %16 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false)
  store i8* %15, i8** %17, align 8
  br label %18

18:                                               ; preds = %4, %14
  ret %"class.v8::internal::BackingStore"* %10
}

declare i32 @_ZN2v88internal4wasm13max_mem_pagesEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS0_7IsolateEmmmmbNS0_10SharedFlagE(%"class.v8::internal::Isolate"*, i64, i64, i64, i64, i1 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__1::function.1271", align 8
  %11 = alloca i8*, align 8
  %12 = alloca %"class.std::__1::function.1271", align 8
  store i64 %2, i64* %8, align 8
  %13 = udiv i64 -1, %2
  %14 = icmp ult i64 %13, %4
  br i1 %14, label %188, label %15

15:                                               ; preds = %7
  %16 = icmp eq i64 %4, 0
  %17 = select i1 %16, i64 1, i64 %4
  br i1 %5, label %21, label %18

18:                                               ; preds = %15
  %19 = mul i64 %17, %2
  %20 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  br label %32

21:                                               ; preds = %15
  %22 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.154", %"struct.std::__1::atomic.154"* @_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  store atomic i8 0, i8* getelementptr inbounds (%"struct.std::__1::atomic.154", %"struct.std::__1::atomic.154"* @_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  br label %26

26:                                               ; preds = %25, %21
  %27 = load i8, i8* @_ZN2v88internal12trap_handler25g_is_trap_handler_enabledE, align 1, !range !4
  %28 = icmp ne i8 %27, 0
  %29 = mul i64 %17, %2
  %30 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = select i1 %28, i64 10737418240, i64 %29
  br label %32

32:                                               ; preds = %26, %18
  %33 = phi i8* [ %20, %18 ], [ %30, %26 ]
  %34 = phi i64 [ %19, %18 ], [ %29, %26 ]
  %35 = phi i1 [ false, %18 ], [ %28, %26 ]
  %36 = phi i64 [ %19, %18 ], [ %31, %26 ]
  store i64 %36, i64* %9, align 8
  %37 = bitcast %"class.std::__1::function.1271"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #12
  %38 = ptrtoint i64* %9 to i64
  %39 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %10, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %10, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS7_7IsolateEmmmmbNS7_10SharedFlagEE3$_2S2_EEEEbPKNS0_16__policy_storageE", i1 (%"union.std::__1::__function::__policy_storage"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_2FbvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.1271"* %10 to i64*
  store i64 %38, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %10, i64 0, i32 0, i32 0
  %43 = load atomic i64, i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0) monotonic, align 8
  %44 = icmp ugt i64 %43, 1103806595072
  %45 = sub i64 1103806595072, %43
  %46 = icmp ult i64 %45, %36
  %47 = or i1 %44, %46
  br i1 %47, label %61, label %48

48:                                               ; preds = %32, %53
  %49 = phi i64 [ %54, %53 ], [ %43, %32 ]
  %50 = add i64 %49, %36
  %51 = cmpxchg weak i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0), i64 %49, i64 %50 acq_rel monotonic
  %52 = extractvalue { i64, i1 } %51, 1
  br i1 %52, label %69, label %53

53:                                               ; preds = %48
  %54 = extractvalue { i64, i1 } %51, 0
  %55 = icmp ugt i64 %54, 1103806595072
  %56 = sub i64 1103806595072, %54
  %57 = icmp ult i64 %56, %36
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %48

59:                                               ; preds = %53
  %60 = load i1 (%"union.std::__1::__function::__policy_storage"*)*, i1 (%"union.std::__1::__function::__policy_storage"*)** %39, align 8
  br label %61

61:                                               ; preds = %59, %32
  %62 = phi i1 (%"union.std::__1::__function::__policy_storage"*)* [ %60, %59 ], [ @"_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS7_7IsolateEmmmmbNS7_10SharedFlagEE3$_2S2_EEEEbPKNS0_16__policy_storageE", %32 ]
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %63, i32 2, i1 zeroext true) #12
  %64 = call zeroext i1 %62(%"union.std::__1::__function::__policy_storage"* nonnull %42) #12
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %63, i32 2, i1 zeroext true) #12
  %66 = load i1 (%"union.std::__1::__function::__policy_storage"*)*, i1 (%"union.std::__1::__function::__policy_storage"*)** %39, align 8
  %67 = call zeroext i1 %66(%"union.std::__1::__function::__policy_storage"* nonnull %42) #12
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %63, i32 2, i1 zeroext true) #12
  br label %69

69:                                               ; preds = %48, %61, %65, %68
  %70 = phi i32 [ 1, %61 ], [ 1, %65 ], [ 1, %68 ], [ 0, %48 ]
  %71 = phi i1 [ true, %61 ], [ true, %65 ], [ false, %68 ], [ true, %48 ]
  %72 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %72, i64 0, i32 1
  %74 = load void (i8*)*, void (i8*)** %73, align 8
  %75 = icmp eq void (i8*)* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %10, i64 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void %74(i8* %78) #12
  br label %79

79:                                               ; preds = %69, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #12
  br i1 %71, label %88, label %80

80:                                               ; preds = %79
  %81 = load i8, i8* @_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE, align 1, !range !4
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

84:                                               ; preds = %80
  %85 = getelementptr %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %86 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %86, i64 0, i32 39
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %87, i32 2) #12
  br label %186

88:                                               ; preds = %79
  %89 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  store i8* null, i8** %11, align 8
  %90 = bitcast %"class.std::__1::function.1271"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %12, i64 0, i32 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %12, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS7_7IsolateEmmmmbNS7_10SharedFlagEE3$_3S2_EEEEbPKNS0_16__policy_storageE", i1 (%"union.std::__1::__function::__policy_storage"*)** %91, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %92, align 8
  %93 = call i8* @_Znwm(i64 24) #14, !noalias !5
  %94 = bitcast i8* %93 to i8***
  store i8** %11, i8*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to i64**
  store i64* %9, i64** %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to i64**
  store i64* %8, i64** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %12, i64 0, i32 0, i32 0, i32 0
  store i8* %93, i8** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::function.1271", %"class.std::__1::function.1271"* %12, i64 0, i32 0, i32 0
  %101 = call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %102 = load i64*, i64** %96, align 8
  %103 = load i64, i64* %102, align 8
  %104 = load i64*, i64** %98, align 8
  %105 = load i64, i64* %104, align 8
  %106 = call i8* @_ZN2v88internal13AllocatePagesEPNS_13PageAllocatorEPvmmNS1_10PermissionE(%"class.v8::PageAllocator"* %101, i8* null, i64 %103, i64 %105, i32 0) #12
  %107 = load i8**, i8*** %94, align 8
  store i8* %106, i8** %107, align 8
  %108 = load i8**, i8*** %94, align 8
  %109 = load i8*, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %111, label %119

111:                                              ; preds = %88
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %112, i32 2, i1 zeroext true) #12
  %113 = load i1 (%"union.std::__1::__function::__policy_storage"*)*, i1 (%"union.std::__1::__function::__policy_storage"*)** %91, align 8
  %114 = call zeroext i1 %113(%"union.std::__1::__function::__policy_storage"* nonnull %100) #12
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %112, i32 2, i1 zeroext true) #12
  %116 = load i1 (%"union.std::__1::__function::__policy_storage"*)*, i1 (%"union.std::__1::__function::__policy_storage"*)** %91, align 8
  %117 = call zeroext i1 %116(%"union.std::__1::__function::__policy_storage"* nonnull %100) #12
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %112, i32 2, i1 zeroext true) #12
  br label %119

119:                                              ; preds = %88, %111, %115, %118
  %120 = phi i32 [ %70, %88 ], [ 1, %111 ], [ 1, %115 ], [ 1, %118 ]
  %121 = phi i1 [ true, %88 ], [ true, %111 ], [ true, %115 ], [ false, %118 ]
  %122 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %92, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %122, i64 0, i32 1
  %124 = load void (i8*)*, void (i8*)** %123, align 8
  %125 = icmp eq void (i8*)* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %119
  %127 = load i8*, i8** %99, align 8
  call void %124(i8* %127) #12
  br label %128

128:                                              ; preds = %119, %126
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #12
  br i1 %121, label %135, label %129

129:                                              ; preds = %128
  %130 = load i64, i64* %9, align 8
  %131 = atomicrmw sub i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0), i64 %130 seq_cst
  %132 = getelementptr %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %133 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %133, i64 0, i32 39
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %134, i32 3) #12
  br label %184

135:                                              ; preds = %128
  %136 = load i8*, i8** %11, align 8
  %137 = select i1 %35, i64 2147483648, i64 0
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = ptrtoint i8* %138 to i64
  %140 = load i64, i64* %8, align 8
  %141 = mul i64 %140, %3
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %135
  %144 = call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %145 = call zeroext i1 @_ZN2v88internal14SetPermissionsEPNS_13PageAllocatorEPvmNS1_10PermissionE(%"class.v8::PageAllocator"* %144, i8* %138, i64 %141, i32 2) #12
  br i1 %145, label %154, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %147, i32 2, i1 zeroext true) #12
  %148 = call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %149 = call zeroext i1 @_ZN2v88internal14SetPermissionsEPNS_13PageAllocatorEPvmNS1_10PermissionE(%"class.v8::PageAllocator"* %148, i8* %138, i64 %141, i32 2) #12
  br i1 %149, label %154, label %150

150:                                              ; preds = %146
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %147, i32 2, i1 zeroext true) #12
  %151 = call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %152 = call zeroext i1 @_ZN2v88internal14SetPermissionsEPNS_13PageAllocatorEPvmNS1_10PermissionE(%"class.v8::PageAllocator"* %151, i8* %138, i64 %141, i32 2) #12
  br i1 %152, label %154, label %153

153:                                              ; preds = %150
  call void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"* %147, i32 2, i1 zeroext true) #12
  call void @_ZN2v88internal2V823FatalProcessOutOfMemoryEPNS0_7IsolateEPKcb(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i1 zeroext false) #13
  unreachable

154:                                              ; preds = %143, %146, %150, %135
  %155 = phi i32 [ %120, %135 ], [ 1, %150 ], [ 1, %146 ], [ %120, %143 ]
  %156 = and i32 %155, 255
  %157 = getelementptr %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %158 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %158, i64 0, i32 39
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %159, i32 %156) #12
  %160 = xor i1 %5, true
  %161 = call i8* @_Znwm(i64 48) #14
  %162 = bitcast i8* %161 to i64*
  store i64 %139, i64* %162, align 8
  %163 = getelementptr inbounds i8, i8* %161, i64 8
  %164 = bitcast i8* %163 to i64*
  store i64 %1, i64* %164, align 8
  %165 = getelementptr inbounds i8, i8* %161, i64 16
  %166 = bitcast i8* %165 to i64*
  store i64 %34, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %161, i64 24
  %168 = bitcast i8* %167 to %"class.v8::ArrayBuffer::Allocator"**
  store %"class.v8::ArrayBuffer::Allocator"* null, %"class.v8::ArrayBuffer::Allocator"** %168, align 8
  %169 = getelementptr inbounds i8, i8* %161, i64 40
  %170 = bitcast i8* %169 to i16*
  %171 = icmp eq i8 %6, 1
  %172 = zext i1 %171 to i16
  %173 = zext i1 %160 to i16
  %174 = shl nuw nsw i16 %173, 1
  %175 = zext i1 %5 to i16
  %176 = shl nuw nsw i16 %175, 2
  %177 = zext i1 %35 to i16
  %178 = shl nuw nsw i16 %177, 5
  %179 = or i16 %176, %174
  %180 = or i16 %179, %172
  %181 = or i16 %180, %178
  %182 = or i16 %181, 16
  store i16 %182, i16* %170, align 8
  %183 = ptrtoint i8* %161 to i64
  br label %184

184:                                              ; preds = %154, %129
  %185 = phi i64 [ %183, %154 ], [ 0, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  br label %186

186:                                              ; preds = %184, %84
  %187 = phi i64 [ %185, %184 ], [ 0, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %188

188:                                              ; preds = %7, %186
  %189 = phi i64 [ %187, %186 ], [ 0, %7 ]
  %190 = inttoptr i64 %189 to %"class.v8::internal::BackingStore"*
  ret %"class.v8::internal::BackingStore"* %190
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12BackingStore19ReserveAddressSpaceEm(i64) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0) monotonic, align 8
  %3 = icmp ugt i64 %2, 1103806595072
  %4 = sub i64 1103806595072, %2
  %5 = icmp ult i64 %4, %0
  %6 = or i1 %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %12
  %8 = phi i64 [ %13, %12 ], [ %2, %1 ]
  %9 = add i64 %8, %0
  %10 = cmpxchg weak i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0), i64 %8, i64 %9 acq_rel monotonic
  %11 = extractvalue { i64, i1 } %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = extractvalue { i64, i1 } %10, 0
  %14 = icmp ugt i64 %13, 1103806595072
  %15 = sub i64 1103806595072, %13
  %16 = icmp ult i64 %15, %0
  %17 = or i1 %14, %16
  br i1 %17, label %18, label %7

18:                                               ; preds = %12, %7, %1
  %19 = phi i1 [ false, %1 ], [ true, %7 ], [ false, %12 ]
  ret i1 %19
}

; Function Attrs: noreturn
declare void @_ZN2v88internal2V823FatalProcessOutOfMemoryEPNS0_7IsolateEPKcb(%"class.v8::internal::Isolate"*, i8*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore18AllocateWasmMemoryEPNS0_7IsolateEmmNS0_10SharedFlagE(%"class.v8::internal::Isolate"*, i64, i64, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x i64], align 16
  %6 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #12
  %7 = zext i32 %6 to i64
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %87, label %9

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #12
  %11 = zext i32 %10 to i64
  %12 = icmp ugt i64 %11, %2
  %13 = select i1 %12, i64 %2, i64 %11
  %14 = shl i64 %1, 16
  %15 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS0_7IsolateEmmmmbNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 %14, i64 65536, i64 %1, i64 %13, i1 zeroext true, i8 zeroext %3) #12
  %16 = icmp ne %"class.v8::internal::BackingStore"* %15, null
  %17 = icmp eq i8 %3, 1
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %23

19:                                               ; preds = %9
  %20 = tail call i8* @_Znwm(i64 24) #14
  %21 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %15, i64 0, i32 3
  %22 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %21 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #12
  store i8* %20, i8** %22, align 8
  br label %23

23:                                               ; preds = %9, %19
  %24 = ptrtoint %"class.v8::internal::BackingStore"* %15 to i64
  %25 = icmp eq i64 %2, %1
  br i1 %25, label %87, label %26

26:                                               ; preds = %23
  %27 = sub i64 %2, %1
  %28 = lshr i64 %27, 2
  %29 = bitcast [4 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #12
  %30 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 0
  %31 = sub i64 %2, %28
  store i64 %31, i64* %30, align 16
  %32 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 1
  %33 = shl nuw nsw i64 %28, 1
  %34 = sub i64 %2, %33
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 2
  %36 = mul i64 %28, -3
  %37 = add i64 %36, %2
  store i64 %37, i64* %35, align 16
  %38 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 3
  store i64 %1, i64* %38, align 8
  %39 = icmp eq %"class.v8::internal::BackingStore"* %15, null
  br i1 %39, label %40, label %72

40:                                               ; preds = %26
  %41 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #12
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %31, %42
  %44 = select i1 %43, i64 %31, i64 %42
  br i1 %17, label %48, label %45

45:                                               ; preds = %40
  %46 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS0_7IsolateEmmmmbNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 %14, i64 65536, i64 %1, i64 %44, i1 zeroext true, i8 zeroext %3) #12
  %47 = icmp eq %"class.v8::internal::BackingStore"* %46, null
  br i1 %47, label %74, label %69

48:                                               ; preds = %40
  %49 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS0_7IsolateEmmmmbNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 %14, i64 65536, i64 %1, i64 %44, i1 zeroext true, i8 zeroext 1) #12
  %50 = icmp eq %"class.v8::internal::BackingStore"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %60, %48
  %52 = phi %"class.v8::internal::BackingStore"* [ %49, %48 ], [ %67, %60 ]
  %53 = tail call i8* @_Znwm(i64 24) #14
  %54 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %52, i64 0, i32 3
  %55 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %54 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #12
  store i8* %53, i8** %55, align 8
  br label %69

56:                                               ; preds = %48, %60
  %57 = phi i64 [ %58, %60 ], [ 0, %48 ]
  %58 = add nuw nsw i64 %57, 1
  %59 = icmp ugt i64 %57, 2
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 %58
  %62 = load i64, i64* %61, align 8
  %63 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #12
  %64 = zext i32 %63 to i64
  %65 = icmp ult i64 %62, %64
  %66 = select i1 %65, i64 %62, i64 %64
  %67 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS0_7IsolateEmmmmbNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 %14, i64 65536, i64 %1, i64 %66, i1 zeroext true, i8 zeroext 1) #12
  %68 = icmp eq %"class.v8::internal::BackingStore"* %67, null
  br i1 %68, label %56, label %51

69:                                               ; preds = %74, %56, %45, %51
  %70 = phi %"class.v8::internal::BackingStore"* [ %52, %51 ], [ %46, %45 ], [ null, %56 ], [ %82, %74 ]
  %71 = ptrtoint %"class.v8::internal::BackingStore"* %70 to i64
  br label %72

72:                                               ; preds = %26, %69
  %73 = phi i64 [ %71, %69 ], [ %24, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #12
  br label %87

74:                                               ; preds = %45, %74
  %75 = phi i64 [ %83, %74 ], [ 1, %45 ]
  %76 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 %75
  %77 = load i64, i64* %76, align 8
  %78 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #12
  %79 = zext i32 %78 to i64
  %80 = icmp ult i64 %77, %79
  %81 = select i1 %80, i64 %77, i64 %79
  %82 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS0_7IsolateEmmmmbNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 %14, i64 65536, i64 %1, i64 %81, i1 zeroext true, i8 zeroext %3) #12
  %83 = add nuw nsw i64 %75, 1
  %84 = icmp ugt i64 %75, 2
  %85 = icmp ne %"class.v8::internal::BackingStore"* %82, null
  %86 = or i1 %85, %84
  br i1 %86, label %69, label %74

87:                                               ; preds = %23, %72, %4
  %88 = phi i64 [ 0, %4 ], [ %73, %72 ], [ %24, %23 ]
  %89 = inttoptr i64 %88 to %"class.v8::internal::BackingStore"*
  ret %"class.v8::internal::BackingStore"* %89
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore14CopyWasmMemoryEPNS0_7IsolateEm(%"class.v8::internal::BackingStore"* nocapture readonly, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %5 = load i16, i16* %4, align 8
  %6 = trunc i16 %5 to i8
  %7 = and i8 %6, 1
  %8 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore18AllocateWasmMemoryEPNS0_7IsolateEmmNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %1, i64 %2, i64 %2, i8 zeroext %7)
  %9 = ptrtoint %"class.v8::internal::BackingStore"* %8 to i64
  %10 = icmp eq %"class.v8::internal::BackingStore"* %8, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %8, i64 0, i32 4
  %13 = load i16, i16* %12, align 8
  %14 = load i16, i16* %4, align 8
  %15 = xor i16 %14, %13
  %16 = and i16 %15, 32
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i64, i64* %19 seq_cst, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %8, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = load atomic i64, i64* %19 seq_cst, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %26, i64 %27, i1 false) #12
  br label %30

28:                                               ; preds = %11
  tail call void @_ZN2v88internal12BackingStoreD2Ev(%"class.v8::internal::BackingStore"* nonnull %8) #12
  %29 = bitcast %"class.v8::internal::BackingStore"* %8 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %3, %22, %18, %28
  %31 = phi i64 [ 0, %28 ], [ %9, %18 ], [ %9, %22 ], [ 0, %3 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::BackingStore"*
  ret %"class.v8::internal::BackingStore"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2v88internal12BackingStore21GrowWasmMemoryInPlaceEPNS0_7IsolateEmm(%"class.v8::internal::BackingStore"* nocapture, %"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 16
  %8 = icmp ult i64 %7, %3
  %9 = select i1 %8, i64 %7, i64 %3
  %10 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = lshr i64 %11, 16
  br label %49

15:                                               ; preds = %4
  %16 = icmp ult i64 %9, %2
  br i1 %16, label %49, label %17

17:                                               ; preds = %15
  %18 = lshr i64 %11, 16
  %19 = sub i64 %9, %2
  %20 = icmp ugt i64 %18, %19
  br i1 %20, label %49, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  br label %23

23:                                               ; preds = %21, %34
  %24 = phi i64 [ %18, %21 ], [ %36, %34 ]
  %25 = phi i64 [ %11, %21 ], [ %35, %34 ]
  %26 = add i64 %24, %2
  %27 = shl i64 %26, 16
  %28 = tail call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %29 = load i8*, i8** %22, align 8
  %30 = tail call zeroext i1 @_ZN2v88internal14SetPermissionsEPNS_13PageAllocatorEPvmNS1_10PermissionE(%"class.v8::PageAllocator"* %28, i8* %29, i64 %27, i32 2) #12
  br i1 %30, label %31, label %49

31:                                               ; preds = %23
  %32 = cmpxchg weak i64* %10, i64 %25, i64 %27 acq_rel monotonic
  %33 = extractvalue { i64, i1 } %32, 1
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = extractvalue { i64, i1 } %32, 0
  %36 = lshr i64 %35, 16
  %37 = icmp ugt i64 %36, %19
  br i1 %37, label %49, label %23

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %40 = load i16, i16* %39, align 8
  %41 = and i16 %40, 17
  %42 = icmp eq i16 %41, 16
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::Isolate"*
  %45 = sub i64 %27, %25
  %46 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %44, i64 %45) #12
  br label %47

47:                                               ; preds = %38, %43
  %48 = lshr i64 %25, 16
  br label %49

49:                                               ; preds = %34, %23, %17, %15, %47, %13
  %50 = phi i64 [ %14, %13 ], [ %48, %47 ], [ 0, %15 ], [ 0, %17 ], [ 0, %23 ], [ 0, %34 ]
  %51 = phi i8 [ 1, %13 ], [ 1, %47 ], [ 0, %15 ], [ 0, %17 ], [ 0, %23 ], [ 0, %34 ]
  %52 = insertvalue { i8, i64 } undef, i8 %51, 0
  %53 = insertvalue { i8, i64 } %52, i64 %50, 1
  ret { i8, i64 } %53
}

declare zeroext i1 @_ZN2v88internal14SetPermissionsEPNS_13PageAllocatorEPvmNS1_10PermissionE(%"class.v8::PageAllocator"*, i8*, i64, i32) local_unnamed_addr #3

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStore28AttachSharedWasmMemoryObjectEPNS0_7IsolateENS0_6HandleINS0_16WasmMemoryObjectEEE(%"class.v8::internal::BackingStore"* nocapture readonly, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal26GlobalBackingStoreRegistry25AddSharedWasmMemoryObjectEPNS0_7IsolateEPNS0_12BackingStoreENS0_6HandleINS0_16WasmMemoryObjectEEE(%"class.v8::internal::Isolate"* %1, %"class.v8::internal::BackingStore"* %0, i64* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26GlobalBackingStoreRegistry25AddSharedWasmMemoryObjectEPNS0_7IsolateEPNS0_12BackingStoreENS0_6HandleINS0_16WasmMemoryObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::BackingStore"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.1333", align 8
  %5 = ptrtoint %"class.v8::internal::Isolate"* %0 to i64
  tail call void @_ZN2v88internal7Isolate19AddSharedWasmMemoryENS0_6HandleINS0_16WasmMemoryObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %2) #12
  %6 = bitcast %"class.std::__1::function.1333"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %11, align 8
  %12 = bitcast %"class.std::__1::function.1333"* %4 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast [8 x i8]* %13 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %14, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %4) #12
  %15 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %15, i64 0, i32 1
  %17 = load void (i8*)*, void (i8*)** %16, align 8
  %18 = icmp eq void (i8*)* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void %17(i8* %21) #12
  br label %22

22:                                               ; preds = %3, %9, %19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  %23 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %1, i64 0, i32 4
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 5
  %26 = icmp eq i16 %25, 5
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %22
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %1, i64 0, i32 3
  %30 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %29 to %"struct.v8::internal::SharedWasmMemoryData"**
  %31 = load %"struct.v8::internal::SharedWasmMemoryData"*, %"struct.v8::internal::SharedWasmMemoryData"** %30, align 8
  %32 = icmp eq %"struct.v8::internal::SharedWasmMemoryData"* %31, null
  br i1 %32, label %45, label %33, !prof !3

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %31, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.v8::internal::Isolate"*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.v8::internal::SharedWasmMemoryData"* %31 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  %40 = inttoptr i64 %38 to %"class.v8::internal::Isolate"**
  %41 = inttoptr i64 %36 to %"class.v8::internal::Isolate"**
  br i1 %39, label %64, label %42

42:                                               ; preds = %33
  %43 = sub i64 %36, %38
  %44 = ashr exact i64 %43, 3
  br label %46

45:                                               ; preds = %28
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #13
  unreachable

46:                                               ; preds = %42, %52
  %47 = phi i64 [ 0, %42 ], [ %56, %52 ]
  %48 = phi i32 [ -1, %42 ], [ %55, %52 ]
  %49 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, i64 %47
  %50 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %51 = icmp eq %"class.v8::internal::Isolate"* %50, %0
  br i1 %51, label %125, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.v8::internal::Isolate"* %50, null
  %54 = trunc i64 %47 to i32
  %55 = select i1 %53, i32 %54, i32 %48
  %56 = add nuw i64 %47, 1
  %57 = icmp ult i64 %56, %44
  br i1 %57, label %46, label %58

58:                                               ; preds = %52
  %59 = icmp sgt i32 %55, -1
  br i1 %59, label %60, label %64

60:                                               ; preds = %58
  %61 = sext i32 %55 to i64
  %62 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, i64 %61
  %63 = bitcast %"class.v8::internal::Isolate"** %62 to i64*
  store i64 %5, i64* %63, align 8
  br label %125

64:                                               ; preds = %33, %58
  %65 = phi i64 [ %38, %58 ], [ %36, %33 ]
  %66 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %31, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %66, align 8
  %68 = icmp eq %"class.v8::internal::Isolate"** %67, %41
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = inttoptr i64 %36 to i64*
  store i64 %5, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, i64 1
  %72 = ptrtoint %"class.v8::internal::Isolate"** %71 to i64
  store i64 %72, i64* %35, align 8
  br label %125

73:                                               ; preds = %64
  %74 = ptrtoint %"class.v8::internal::Isolate"** %67 to i64
  %75 = sub i64 %74, %65
  %76 = ashr exact i64 %75, 3
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %73
  %80 = bitcast %"struct.v8::internal::SharedWasmMemoryData"* %31 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %80) #13
  unreachable

81:                                               ; preds = %73
  %82 = bitcast %"class.v8::internal::Isolate"*** %66 to i64*
  %83 = icmp ult i64 %76, 1152921504606846975
  br i1 %83, label %84, label %92

84:                                               ; preds = %81
  %85 = ashr exact i64 %75, 2
  %86 = icmp ult i64 %85, %77
  %87 = select i1 %86, i64 %77, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 2305843009213693951
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  call void @abort() #13
  unreachable

92:                                               ; preds = %89, %81
  %93 = phi i64 [ %87, %89 ], [ 2305843009213693951, %81 ]
  %94 = shl i64 %93, 3
  %95 = call i8* @_Znwm(i64 %94) #14
  %96 = bitcast i8* %95 to %"class.v8::internal::Isolate"**
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi %"class.v8::internal::Isolate"** [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %99, i64 %76
  %101 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %99, i64 %98
  %102 = ptrtoint %"class.v8::internal::Isolate"** %101 to i64
  %103 = bitcast %"class.v8::internal::Isolate"** %100 to i64*
  store i64 %5, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %100, i64 1
  %105 = ptrtoint %"class.v8::internal::Isolate"** %104 to i64
  %106 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %31, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %106, align 8
  %108 = load i64, i64* %35, align 8
  %109 = ptrtoint %"class.v8::internal::Isolate"** %107 to i64
  %110 = sub i64 %108, %109
  %111 = ashr exact i64 %110, 3
  %112 = sub nsw i64 0, %111
  %113 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %100, i64 %112
  %114 = ptrtoint %"class.v8::internal::Isolate"** %113 to i64
  %115 = icmp sgt i64 %110, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %97
  %117 = bitcast %"class.v8::internal::Isolate"** %113 to i8*
  %118 = bitcast %"class.v8::internal::Isolate"** %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 %110, i1 false) #12
  %119 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %106, align 8
  br label %120

120:                                              ; preds = %116, %97
  %121 = phi %"class.v8::internal::Isolate"** [ %107, %97 ], [ %119, %116 ]
  store i64 %114, i64* %37, align 8
  store i64 %105, i64* %35, align 8
  store i64 %102, i64* %82, align 8
  %122 = icmp eq %"class.v8::internal::Isolate"** %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  %124 = bitcast %"class.v8::internal::Isolate"** %121 to i8*
  call void @_ZdlPv(i8* %124) #14
  br label %125

125:                                              ; preds = %46, %123, %120, %69, %60
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStore29BroadcastSharedWasmMemoryGrowEPNS0_7IsolateENSt3__110shared_ptrIS1_EE(%"class.v8::internal::Isolate"*, %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %2, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN2v88internal26GlobalBackingStoreRegistry29BroadcastSharedWasmMemoryGrowEPNS0_7IsolateENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::BackingStore"* %1, %"class.std::__1::__shared_weak_count"* null)
  br label %17

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 1 monotonic
  tail call void @_ZN2v88internal26GlobalBackingStoreRegistry29BroadcastSharedWasmMemoryGrowEPNS0_7IsolateENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::BackingStore"* %1, %"class.std::__1::__shared_weak_count"* nonnull %2)
  %9 = atomicrmw add i64* %7, i64 -1 acq_rel
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0
  %13 = bitcast %"class.std::__1::__shared_weak_count"* %2 to void (%"class.std::__1::__shared_count"*)***
  %14 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, i64 2
  %16 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %15, align 8
  tail call void %16(%"class.std::__1::__shared_count"* %12) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %2) #12
  br label %17

17:                                               ; preds = %5, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26GlobalBackingStoreRegistry29BroadcastSharedWasmMemoryGrowEPNS0_7IsolateENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.1333", align 8
  %5 = bitcast %"class.std::__1::function.1333"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %9, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %10, align 8
  %11 = bitcast %"class.std::__1::function.1333"* %4 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast [8 x i8]* %12 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %13, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %4) #12
  %14 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %14, i64 0, i32 1
  %16 = load void (i8*)*, void (i8*)** %15, align 8
  %17 = icmp eq void (i8*)* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void %16(i8* %20) #12
  br label %21

21:                                               ; preds = %3, %8, %18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  %22 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %1, i64 0, i32 4
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 5
  %25 = icmp eq i16 %24, 5
  br i1 %25, label %27, label %26, !prof !2

26:                                               ; preds = %21
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %1, i64 0, i32 3
  %29 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %28 to %"struct.v8::internal::SharedWasmMemoryData"**
  %30 = load %"struct.v8::internal::SharedWasmMemoryData"*, %"struct.v8::internal::SharedWasmMemoryData"** %29, align 8
  %31 = icmp eq %"struct.v8::internal::SharedWasmMemoryData"* %30, null
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %27
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %30, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %34, align 8
  %36 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %30, i64 0, i32 0, i32 0, i32 1
  %37 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %36, align 8
  %38 = icmp eq %"class.v8::internal::Isolate"** %35, %37
  br i1 %38, label %39, label %52

39:                                               ; preds = %60, %33
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  call void @_ZN2v88internal26GlobalBackingStoreRegistry29UpdateSharedWasmMemoryObjectsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0)
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %2, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %2 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  call void %50(%"class.std::__1::__shared_count"* %46) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %2) #12
  br label %51

51:                                               ; preds = %39, %41, %45
  ret void

52:                                               ; preds = %33, %60
  %53 = phi %"class.v8::internal::Isolate"** [ %61, %60 ], [ %35, %33 ]
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %55 = icmp eq %"class.v8::internal::Isolate"* %54, null
  %56 = icmp eq %"class.v8::internal::Isolate"* %54, %0
  %57 = or i1 %55, %56
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 0, i32 6
  call void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %59, i32 32) #12
  br label %60

60:                                               ; preds = %52, %58
  %61 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, i64 1
  %62 = icmp eq %"class.v8::internal::Isolate"** %61, %37
  br i1 %62, label %39, label %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStore29RemoveSharedWasmMemoryObjectsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* readnone) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal26GlobalBackingStoreRegistry5PurgeEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26GlobalBackingStoreRegistry5PurgeEPNS0_7IsolateE(%"class.v8::internal::Isolate"* readnone) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.1333", align 8
  %3 = alloca %"class.std::__1::function.1333", align 8
  %4 = alloca %"class.std::__1::vector.1314", align 8
  %5 = alloca %"class.std::__1::shared_ptr.162", align 8
  %6 = bitcast %"class.std::__1::vector.1314"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = bitcast %"class.std::__1::function.1333"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %8 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %9 = icmp eq i8 %8, 2
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %12, align 8
  %13 = bitcast %"class.std::__1::function.1333"* %3 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast [8 x i8]* %14 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %15, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %3) #12
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void %18(i8* %22) #12
  br label %23

23:                                               ; preds = %1, %10, %20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  %24 = bitcast %"class.std::__1::function.1333"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  %25 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %2, i64 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %28, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %29, align 8
  %30 = bitcast %"class.std::__1::function.1333"* %2 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %2, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast [8 x i8]* %31 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %32, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %2) #12
  %33 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %33, i64 0, i32 1
  %35 = load void (i8*)*, void (i8*)** %34, align 8
  %36 = icmp eq void (i8*)* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %2, i64 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void %35(i8* %39) #12
  br label %40

40:                                               ; preds = %23, %27, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  %41 = load i64, i64* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 56) to i64*), align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.std::__1::shared_ptr.162"* %5 to i8*
  %45 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %5, i64 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %5, i64 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector.1314", %"class.std::__1::vector.1314"* %4, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector.1314", %"class.std::__1::vector.1314"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.std::__1::shared_ptr.162"** %47 to i64*
  br label %83

50:                                               ; preds = %200, %40
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  %51 = getelementptr inbounds %"class.std::__1::vector.1314", %"class.std::__1::vector.1314"* %4, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"** %51, align 8
  %53 = icmp eq %"class.std::__1::shared_ptr.162"* %52, null
  br i1 %53, label %82, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::shared_ptr.162"* %52 to i8*
  %56 = getelementptr inbounds %"class.std::__1::vector.1314", %"class.std::__1::vector.1314"* %4, i64 0, i32 0, i32 1
  %57 = load %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"** %56, align 8
  %58 = icmp eq %"class.std::__1::shared_ptr.162"* %57, %52
  br i1 %58, label %80, label %59

59:                                               ; preds = %54, %75
  %60 = phi %"class.std::__1::shared_ptr.162"* [ %61, %75 ], [ %57, %54 ]
  %61 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %60, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %60, i64 -1, i32 1
  %63 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %62, align 8
  %64 = icmp eq %"class.std::__1::__shared_weak_count"* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %63, i64 0, i32 0, i32 1
  %67 = atomicrmw add i64* %66, i64 -1 acq_rel
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %63, i64 0, i32 0
  %71 = bitcast %"class.std::__1::__shared_weak_count"* %63 to void (%"class.std::__1::__shared_count"*)***
  %72 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %72, i64 2
  %74 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %73, align 8
  call void %74(%"class.std::__1::__shared_count"* %70) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %63) #12
  br label %75

75:                                               ; preds = %69, %65, %59
  %76 = icmp eq %"class.std::__1::shared_ptr.162"* %61, %52
  br i1 %76, label %77, label %59

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.1314"* %4 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %54
  %81 = phi i8* [ %79, %77 ], [ %55, %54 ]
  store %"class.std::__1::shared_ptr.162"* %52, %"class.std::__1::shared_ptr.162"** %56, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %50, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void

83:                                               ; preds = %43, %200
  %84 = phi i64 [ %41, %43 ], [ %202, %200 ]
  %85 = inttoptr i64 %84 to %"struct.std::__1::__hash_node"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 2, i32 0, i32 1, i32 1
  %87 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %86, align 8
  %88 = icmp eq %"class.std::__1::__shared_weak_count"* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %83
  %90 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %87) #12
  %91 = icmp eq %"class.std::__1::__shared_weak_count"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 2, i32 0, i32 1, i32 0
  %94 = load %"class.v8::internal::BackingStore"*, %"class.v8::internal::BackingStore"** %93, align 8
  br label %95

95:                                               ; preds = %83, %89, %92
  %96 = phi %"class.std::__1::__shared_weak_count"* [ null, %89 ], [ %90, %92 ], [ null, %83 ]
  %97 = phi %"class.v8::internal::BackingStore"* [ null, %89 ], [ %94, %92 ], [ null, %83 ]
  store %"class.v8::internal::BackingStore"* %97, %"class.v8::internal::BackingStore"** %45, align 8
  store %"class.std::__1::__shared_weak_count"* %96, %"class.std::__1::__shared_weak_count"** %46, align 8
  %98 = load %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"** %47, align 8
  %99 = load %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"** %48, align 8
  %100 = icmp ult %"class.std::__1::shared_ptr.162"* %98, %99
  br i1 %100, label %101, label %113

101:                                              ; preds = %95
  %102 = ptrtoint %"class.v8::internal::BackingStore"* %97 to i64
  %103 = bitcast %"class.std::__1::shared_ptr.162"* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %98, i64 0, i32 1
  %105 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  store %"class.std::__1::__shared_weak_count"* %105, %"class.std::__1::__shared_weak_count"** %104, align 8
  %106 = icmp eq %"class.std::__1::__shared_weak_count"* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %105, i64 0, i32 0, i32 1
  %109 = atomicrmw add i64* %108, i64 1 monotonic
  br label %110

110:                                              ; preds = %107, %101
  %111 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %98, i64 1
  %112 = ptrtoint %"class.std::__1::shared_ptr.162"* %111 to i64
  store i64 %112, i64* %49, align 8
  br label %114

113:                                              ; preds = %95
  call void @_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS5_EEEvDpOT_(%"class.std::__1::vector.1314"* nonnull %4, %"class.std::__1::shared_ptr.162"* nonnull dereferenceable(16) %5) #12
  br label %114

114:                                              ; preds = %110, %113
  %115 = load %"class.v8::internal::BackingStore"*, %"class.v8::internal::BackingStore"** %45, align 8
  %116 = icmp eq %"class.v8::internal::BackingStore"* %115, null
  br i1 %116, label %174, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %115, i64 0, i32 4
  %119 = load i16, i16* %118, align 8
  %120 = and i16 %119, 4
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %117
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0)) #13
  unreachable

123:                                              ; preds = %117
  %124 = and i16 %119, 1
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %187, label %126

126:                                              ; preds = %123
  %127 = and i16 %119, 5
  %128 = icmp eq i16 %127, 5
  br i1 %128, label %130, label %129, !prof !2

129:                                              ; preds = %126
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %115, i64 0, i32 3
  %132 = bitcast %"union.v8::internal::BackingStore::TypeSpecificData"* %131 to %"struct.v8::internal::SharedWasmMemoryData"**
  %133 = load %"struct.v8::internal::SharedWasmMemoryData"*, %"struct.v8::internal::SharedWasmMemoryData"** %132, align 8
  %134 = icmp eq %"struct.v8::internal::SharedWasmMemoryData"* %133, null
  br i1 %134, label %142, label %135, !prof !3

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::SharedWasmMemoryData", %"struct.v8::internal::SharedWasmMemoryData"* %133, i64 0, i32 0, i32 0, i32 1
  %137 = bitcast %"class.v8::internal::Isolate"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.v8::internal::SharedWasmMemoryData"* %133 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %138, %140
  br i1 %141, label %161, label %143

142:                                              ; preds = %130
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #13
  unreachable

143:                                              ; preds = %135, %154
  %144 = phi i64 [ %155, %154 ], [ %140, %135 ]
  %145 = phi i64 [ %156, %154 ], [ %138, %135 ]
  %146 = phi i64 [ %157, %154 ], [ 0, %135 ]
  %147 = inttoptr i64 %144 to %"class.v8::internal::Isolate"**
  %148 = getelementptr inbounds %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %147, i64 %146
  %149 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %148, align 8
  %150 = icmp eq %"class.v8::internal::Isolate"* %149, %0
  br i1 %150, label %151, label %154

151:                                              ; preds = %143
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %148, align 8
  %152 = load i64, i64* %137, align 8
  %153 = load i64, i64* %139, align 8
  br label %154

154:                                              ; preds = %143, %151
  %155 = phi i64 [ %144, %143 ], [ %153, %151 ]
  %156 = phi i64 [ %145, %143 ], [ %152, %151 ]
  %157 = add nuw i64 %146, 1
  %158 = sub i64 %156, %155
  %159 = ashr exact i64 %158, 3
  %160 = icmp ult i64 %157, %159
  br i1 %160, label %143, label %161

161:                                              ; preds = %154, %135
  %162 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  %163 = icmp eq %"class.std::__1::__shared_weak_count"* %162, null
  br i1 %163, label %200, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %162, i64 0, i32 0, i32 1
  %166 = atomicrmw add i64* %165, i64 -1 acq_rel
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %200

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %162, i64 0, i32 0
  %170 = bitcast %"class.std::__1::__shared_weak_count"* %162 to void (%"class.std::__1::__shared_count"*)***
  %171 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %171, i64 2
  %173 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %172, align 8
  call void %173(%"class.std::__1::__shared_count"* %169) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %162) #12
  br label %200

174:                                              ; preds = %114
  %175 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  %176 = icmp eq %"class.std::__1::__shared_weak_count"* %175, null
  br i1 %176, label %200, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %175, i64 0, i32 0, i32 1
  %179 = atomicrmw add i64* %178, i64 -1 acq_rel
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %200

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %175, i64 0, i32 0
  %183 = bitcast %"class.std::__1::__shared_weak_count"* %175 to void (%"class.std::__1::__shared_count"*)***
  %184 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %184, i64 2
  %186 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %185, align 8
  call void %186(%"class.std::__1::__shared_count"* %182) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %175) #12
  br label %200

187:                                              ; preds = %123
  %188 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  %189 = icmp eq %"class.std::__1::__shared_weak_count"* %188, null
  br i1 %189, label %200, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %188, i64 0, i32 0, i32 1
  %192 = atomicrmw add i64* %191, i64 -1 acq_rel
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %200

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %188, i64 0, i32 0
  %196 = bitcast %"class.std::__1::__shared_weak_count"* %188 to void (%"class.std::__1::__shared_count"*)***
  %197 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %197, i64 2
  %199 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %198, align 8
  call void %199(%"class.std::__1::__shared_count"* %195) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %188) #12
  br label %200

200:                                              ; preds = %194, %190, %187, %181, %177, %174, %168, %164, %161
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  %201 = inttoptr i64 %84 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %50, label %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12BackingStore29UpdateSharedWasmMemoryObjectsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal26GlobalBackingStoreRegistry29UpdateSharedWasmMemoryObjectsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26GlobalBackingStoreRegistry29UpdateSharedWasmMemoryObjectsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %5 = bitcast %"struct.v8::internal::HandleScopeData"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 662
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 1
  br i1 %18, label %19, label %28

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %22 = bitcast %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %2 to i8*
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %2, i64 0, i32 0
  %25 = bitcast %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %3 to i8*
  %26 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %3, i64 0, i32 0
  br label %44

28:                                               ; preds = %112, %1
  %29 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %28
  %31 = inttoptr i64 %6 to i64*
  %32 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %4, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  store i64 %6, i64* %5, align 8
  %34 = load i32, i32* %9, align 8
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %9, align 8
  %36 = load i64*, i64** %7, align 8
  %37 = icmp eq i64* %36, %8
  br i1 %37, label %40, label %38

38:                                               ; preds = %30
  store i64* %8, i64** %7, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #12
  %39 = load i64*, i64** %32, align 8
  br label %40

40:                                               ; preds = %38, %30
  %41 = phi i64* [ %39, %38 ], [ %31, %30 ]
  %42 = phi i64* [ %8, %38 ], [ %33, %30 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %41, i64* %42) #12
  br label %43

43:                                               ; preds = %28, %40
  ret void

44:                                               ; preds = %19, %112
  %45 = phi i64 [ %14, %19 ], [ %113, %112 ]
  %46 = phi i64 [ 0, %19 ], [ %114, %112 ]
  %47 = trunc i64 %46 to i32
  %48 = shl i32 %47, 2
  %49 = sext i32 %48 to i64
  %50 = add i64 %45, 11
  %51 = add i64 %50, %49
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = and i64 %54, 1
  %56 = icmp ne i64 %55, 0
  %57 = icmp ne i32 %53, 3
  %58 = and i1 %57, %56
  br i1 %58, label %59, label %112

59:                                               ; preds = %44
  %60 = and i64 %45, -4294967296
  %61 = and i64 %54, 4294967293
  %62 = or i64 %61, %60
  %63 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %64 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %63, i64 %62) #12
  %67 = load i64, i64* %66, align 8
  br label %79

68:                                               ; preds = %59
  %69 = load i64*, i64** %21, align 8
  %70 = load i64*, i64** %7, align 8
  %71 = icmp eq i64* %69, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %74

74:                                               ; preds = %72, %68
  %75 = phi i64* [ %73, %72 ], [ %69, %68 ]
  %76 = ptrtoint i64* %75 to i64
  %77 = add i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  store i64* %78, i64** %21, align 8
  store i64 %62, i64* %75, align 8
  br label %79

79:                                               ; preds = %65, %74
  %80 = phi i64 [ %67, %65 ], [ %62, %74 ]
  %81 = phi i64* [ %66, %65 ], [ %75, %74 ]
  %82 = and i64 %80, -4294967296
  %83 = add i64 %80, 11
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %89 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %79
  %91 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %88, i64 %87) #12
  %92 = load i64, i64* %91, align 8
  br label %104

93:                                               ; preds = %79
  %94 = load i64*, i64** %21, align 8
  %95 = load i64*, i64** %7, align 8
  %96 = icmp eq i64* %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %99

99:                                               ; preds = %97, %93
  %100 = phi i64* [ %98, %97 ], [ %94, %93 ]
  %101 = ptrtoint i64* %100 to i64
  %102 = add i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  store i64* %103, i64** %21, align 8
  store i64 %87, i64* %100, align 8
  br label %104

104:                                              ; preds = %99, %90
  %105 = phi i64 [ %92, %90 ], [ %87, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i64 %105, i64* %23, align 8
  %106 = call { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"* nonnull %24) #12
  %107 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %106, 0
  %108 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %106, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %109 = call i64* @_ZN2v88internal7Factory22NewJSSharedArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::BackingStore"* %107, %"class.std::__1::__shared_weak_count"* %108) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %110 = load i64, i64* %81, align 8
  store i64 %110, i64* %26, align 8
  call void @_ZN2v88internal16WasmMemoryObject16update_instancesEPNS0_7IsolateENS0_6HandleINS0_13JSArrayBufferEEE(%"class.v8::internal::WasmMemoryObject"* nonnull %27, %"class.v8::internal::Isolate"* %0, i64* %109) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %111 = load i64, i64* %13, align 8
  br label %112

112:                                              ; preds = %44, %104
  %113 = phi i64 [ %45, %44 ], [ %111, %104 ]
  %114 = add nuw nsw i64 %46, 1
  %115 = add i64 %113, 7
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = ashr i32 %117, 1
  %119 = sext i32 %118 to i64
  %120 = icmp slt i64 %114, %119
  br i1 %120, label %44, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal12BackingStore13ResizeInPlaceEPNS0_7IsolateEmm(%"class.v8::internal::BackingStore"* nocapture, %"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i64, i64* %5 seq_cst, align 8
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %2
  %12 = load atomic i64, i64* %5 seq_cst, align 8
  %13 = sub i64 %12, %2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %13, i1 false)
  store atomic i64 %2, i64* %5 seq_cst, align 8
  br label %27

14:                                               ; preds = %4
  %15 = load atomic i64, i64* %5 seq_cst, align 8
  %16 = icmp eq i64 %15, %2
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = tail call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %19 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = tail call zeroext i1 @_ZN2v88internal14SetPermissionsEPNS_13PageAllocatorEPvmNS1_10PermissionE(%"class.v8::PageAllocator"* %18, i8* %20, i64 %3, i32 2) #12
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::Isolate"*
  %24 = load atomic i64, i64* %5 seq_cst, align 8
  %25 = sub i64 %2, %24
  %26 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %23, i64 %25) #12
  store atomic i64 %2, i64* %5 seq_cst, align 8
  br label %27

27:                                               ; preds = %17, %14, %22, %8
  %28 = phi i32 [ 0, %8 ], [ 0, %22 ], [ 0, %14 ], [ 1, %17 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal12BackingStore11GrowInPlaceEPNS0_7IsolateEmm(%"class.v8::internal::BackingStore"* nocapture, %"class.v8::internal::Isolate"* nocapture readnone, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i64, i64* %5 seq_cst, align 8
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %20
  %11 = phi i64 [ %6, %8 ], [ %21, %20 ]
  %12 = icmp eq i64 %11, %2
  br i1 %12, label %23, label %13

13:                                               ; preds = %10
  %14 = tail call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %15 = load i8*, i8** %9, align 8
  %16 = tail call zeroext i1 @_ZN2v88internal14SetPermissionsEPNS_13PageAllocatorEPvmNS1_10PermissionE(%"class.v8::PageAllocator"* %14, i8* %15, i64 %3, i32 2) #12
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = cmpxchg weak i64* %5, i64 %11, i64 %2 seq_cst seq_cst
  %19 = extractvalue { i64, i1 } %18, 1
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = extractvalue { i64, i1 } %18, 0
  %22 = icmp ugt i64 %21, %2
  br i1 %22, label %23, label %10

23:                                               ; preds = %20, %10, %13, %17, %4
  %24 = phi i32 [ 2, %4 ], [ 0, %17 ], [ 1, %13 ], [ 0, %10 ], [ 2, %20 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore14WrapAllocationEPNS0_7IsolateEPvmNS0_10SharedFlagEb(%"class.v8::internal::Isolate"* nocapture readonly, i8*, i64, i8 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 48) #14
  %7 = bitcast i8* %6 to %"class.v8::internal::BackingStore"*
  %8 = bitcast i8* %6 to i8**
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 24
  %14 = bitcast i8* %13 to %"class.v8::ArrayBuffer::Allocator"**
  store %"class.v8::ArrayBuffer::Allocator"* null, %"class.v8::ArrayBuffer::Allocator"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 40
  %16 = bitcast i8* %15 to i16*
  %17 = icmp eq i8 %3, 1
  %18 = zext i1 %17 to i16
  %19 = zext i1 %4 to i16
  %20 = shl nuw nsw i16 %19, 4
  %21 = or i16 %20, %18
  store i16 %21, i16* %16, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 146, i32 0
  %23 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 146, i32 1
  %25 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %24, align 8
  %26 = icmp eq %"class.std::__1::__shared_weak_count"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %25, i64 0, i32 0, i32 1
  %29 = atomicrmw add i64* %28, i64 1 monotonic
  br label %30

30:                                               ; preds = %27, %5
  %31 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %23, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = ptrtoint %"class.std::__1::__shared_weak_count"* %25 to i64
  %34 = ptrtoint %"class.v8::ArrayBuffer::Allocator"* %23 to i64
  %35 = or i16 %21, 8
  store i16 %35, i16* %16, align 8
  %36 = bitcast i8* %13 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %6, i64 32
  %38 = bitcast i8* %37 to i64*
  store i64 %33, i64* %38, align 8
  br label %54

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 145
  %41 = bitcast %"class.v8::ArrayBuffer::Allocator"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i8* %13 to i64*
  store i64 %42, i64* %43, align 8
  br i1 %26, label %54, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %25, i64 0, i32 0, i32 1
  %46 = atomicrmw add i64* %45, i64 -1 acq_rel
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %25, i64 0, i32 0
  %50 = bitcast %"class.std::__1::__shared_weak_count"* %25 to void (%"class.std::__1::__shared_count"*)***
  %51 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %51, i64 2
  %53 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %52, align 8
  tail call void %53(%"class.std::__1::__shared_count"* %49) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %25) #12
  br label %54

54:                                               ; preds = %32, %39, %44, %48
  ret %"class.v8::internal::BackingStore"* %7
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore14WrapAllocationEPvmPFvS2_mS2_ES2_NS0_10SharedFlagE(i8*, i64, void (i8*, i64, i8*)*, i8*, i8 zeroext) local_unnamed_addr #6 align 2 {
  %6 = icmp eq void (i8*, i64, i8*)* %2, @_ZN2v812BackingStore12EmptyDeleterEPvmS1_
  %7 = tail call i8* @_Znwm(i64 48) #14
  %8 = bitcast i8* %7 to %"class.v8::internal::BackingStore"*
  %9 = bitcast i8* %7 to i8**
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %1, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  %15 = getelementptr inbounds i8, i8* %7, i64 40
  %16 = bitcast i8* %15 to i16*
  %17 = icmp eq i8 %4, 1
  %18 = zext i1 %17 to i16
  %19 = zext i1 %6 to i16
  %20 = shl nuw nsw i16 %19, 8
  %21 = or i16 %20, %18
  %22 = or i16 %21, 144
  store i16 %22, i16* %16, align 8
  %23 = bitcast i8* %14 to void (i8*, i64, i8*)**
  store void (i8*, i64, i8*)* %2, void (i8*, i64, i8*)** %23, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 32
  %25 = bitcast i8* %24 to i8**
  store i8* %3, i8** %25, align 8
  ret %"class.v8::internal::BackingStore"* %8
}

declare void @_ZN2v812BackingStore12EmptyDeleterEPvmS1_(i8*, i64, i8*) #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore17EmptyBackingStoreENS0_10SharedFlagE(i8 zeroext) local_unnamed_addr #6 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #14
  %3 = bitcast i8* %2 to %"class.v8::internal::BackingStore"*
  %4 = getelementptr inbounds i8, i8* %2, i64 40
  %5 = bitcast i8* %4 to i16*
  %6 = icmp eq i8 %0, 1
  %7 = zext i1 %6 to i16
  %8 = or i16 %7, 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false)
  store i16 %8, i16* %5, align 8
  ret %"class.v8::internal::BackingStore"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12BackingStore10ReallocateEPNS0_7IsolateEm(%"class.v8::internal::BackingStore"* nocapture, %"class.v8::internal::Isolate"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 212
  %7 = icmp eq i16 %6, 16
  br i1 %7, label %9, label %8, !prof !10

8:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

9:                                                ; preds = %3
  %10 = and i16 %5, 4
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #13
  unreachable

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %14, align 8
  %16 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %15, null
  br i1 %16, label %17, label %18, !prof !3

17:                                               ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 145
  %20 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %19, align 8
  %21 = icmp eq %"class.v8::ArrayBuffer::Allocator"* %20, %15
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %18
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0)) #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i64, i64* %26 seq_cst, align 8
  %28 = icmp eq i64 %27, %25
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = load atomic i64, i64* %26 seq_cst, align 8
  %34 = bitcast %"class.v8::ArrayBuffer::Allocator"* %15 to i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)***
  %35 = load i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)**, i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)*** %34, align 8
  %36 = getelementptr inbounds i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)*, i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)** %35, i64 5
  %37 = load i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)*, i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)** %36, align 8
  %38 = tail call i8* %37(%"class.v8::ArrayBuffer::Allocator"* nonnull %15, i8* %32, i64 %33, i64 %2) #12
  %39 = icmp eq i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %30
  store i8* %38, i8** %31, align 8
  store i64 %2, i64* %24, align 8
  store atomic i64 %2, i64* %26 seq_cst, align 8
  br label %41

41:                                               ; preds = %30, %40
  %42 = phi i1 [ true, %40 ], [ false, %30 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26GlobalBackingStoreRegistry8RegisterENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1333", align 8
  %4 = alloca %"class.std::__1::function.1333", align 8
  %5 = alloca %"struct.std::__1::pair.1313", align 8
  %6 = ptrtoint %"class.v8::internal::BackingStore"* %0 to i64
  %7 = icmp eq %"class.v8::internal::BackingStore"* %0, null
  br i1 %7, label %88, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %88, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %0, i64 0, i32 4
  %14 = load i16, i16* %13, align 8
  %15 = and i16 %14, 4
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %18, !prof !3

17:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %12
  %19 = bitcast %"class.std::__1::function.1333"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #12
  %20 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %21 = icmp eq i8 %20, 2
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %23, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %24, align 8
  %25 = bitcast %"class.std::__1::function.1333"* %4 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast [8 x i8]* %26 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %27, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %4) #12
  %28 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %28, i64 0, i32 1
  %30 = load void (i8*)*, void (i8*)** %29, align 8
  %31 = icmp eq void (i8*)* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void %30(i8* %34) #12
  br label %35

35:                                               ; preds = %18, %22, %32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #12
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  %36 = load i16, i16* %13, align 8
  %37 = and i16 %36, 64
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %87

39:                                               ; preds = %35
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 1
  %43 = atomicrmw add i64* %42, i64 1 monotonic
  br label %44

44:                                               ; preds = %39, %41
  %45 = bitcast %"class.std::__1::function.1333"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #12
  %46 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %49, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %50, align 8
  %51 = bitcast %"class.std::__1::function.1333"* %3 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv, void (i8*)** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast [8 x i8]* %52 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0), i8** %53, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E to %"struct.std::__1::atomic.1328"*), %"class.std::__1::function.1333"* nonnull %3) #12
  %54 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %54, i64 0, i32 1
  %56 = load void (i8*)*, void (i8*)** %55, align 8
  %57 = icmp eq void (i8*)* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::function.1333", %"class.std::__1::function.1333"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void %56(i8* %60) #12
  br label %61

61:                                               ; preds = %44, %48, %58
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #12
  %62 = bitcast %"struct.std::__1::pair.1313"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #12
  %63 = bitcast %"class.v8::internal::BackingStore"* %0 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"struct.std::__1::pair.1313"* %5 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.1313", %"struct.std::__1::pair.1313"* %5, i64 0, i32 1
  %67 = bitcast %"class.std::__1::weak_ptr.1044"* %66 to i64*
  store i64 %6, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.1313", %"struct.std::__1::pair.1313"* %5, i64 0, i32 1, i32 1
  store %"class.std::__1::__shared_weak_count"* %1, %"class.std::__1::__shared_weak_count"** %68, align 8
  br i1 %40, label %72, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 1
  %71 = atomicrmw add i64* %70, i64 1 monotonic
  br label %72

72:                                               ; preds = %61, %69
  %73 = getelementptr inbounds %"struct.std::__1::pair.1313", %"struct.std::__1::pair.1313"* %5, i64 0, i32 0
  %74 = call { %"struct.std::__1::__hash_node_base.1289"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S8_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1285"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 40) to %"class.std::__1::__hash_table.1285"*), i8** nonnull dereferenceable(8) %73, %"struct.std::__1::pair.1313"* nonnull dereferenceable(24) %5) #12
  %75 = extractvalue { %"struct.std::__1::__hash_node_base.1289"*, i8 } %74, 1
  %76 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %68, align 8
  %77 = icmp eq %"class.std::__1::__shared_weak_count"* %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %72
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %76) #12
  br label %79

79:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #12
  %80 = and i8 %75, 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #13
  unreachable

83:                                               ; preds = %79
  %84 = load i16, i16* %13, align 8
  %85 = or i16 %84, 64
  store i16 %85, i16* %13, align 8
  br i1 %40, label %87, label %86

86:                                               ; preds = %83
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #12
  br label %87

87:                                               ; preds = %86, %83, %35
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<80, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_121global_registry_impl_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::base::Mutex"*)) #12
  br label %88

88:                                               ; preds = %2, %8, %87
  %89 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %92 = atomicrmw add i64* %91, i64 -1 acq_rel
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %96 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %97 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %97, i64 2
  %99 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %98, align 8
  call void %99(%"class.std::__1::__shared_count"* %95) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #12
  br label %100

100:                                              ; preds = %88, %90, %94
  ret void
}

declare void @_ZN2v88internal7Isolate19AddSharedWasmMemoryENS0_6HandleINS0_16WasmMemoryObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory22NewJSSharedArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::Factory"*, %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

declare void @_ZN2v88internal16WasmMemoryObject16update_instancesEPNS0_7IsolateENS0_6HandleINS0_13JSArrayBufferEEE(%"class.v8::internal::WasmMemoryObject"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal4Heap26MemoryPressureNotificationENS_19MemoryPressureLevelEb(%"class.v8::internal::Heap"*, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v84base16LazyInstanceImplINS_8internal12_GLOBAL__N_130GlobalBackingStoreRegistryImplENS0_32StaticallyAllocatedInstanceTraitIS4_EENS0_21DefaultConstructTraitIS4_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPv(i8*) #0 align 2 {
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 80, i1 false) #12
  %2 = bitcast i8* %0 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %2) #12
  %3 = getelementptr inbounds i8, i8* %0, i64 40
  %4 = getelementptr inbounds i8, i8* %0, i64 72
  %5 = bitcast i8* %4 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %5, align 4
  ret void
}

declare void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1328"*, %"class.std::__1::function.1333"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to void (i8*)**
  %3 = load void (i8*)*, void (i8*)** %2, align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void %3(i8* %6) #12
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

declare void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal i8* @"_ZNSt3__110__function16__policy_invokerIFPvmEE11__call_implINS0_20__default_alloc_funcIZN2v88internal12BackingStore8AllocateEPNS8_7IsolateEmNS8_10SharedFlagENS8_15InitializedFlagEE3$_0S3_EEEES2_PKNS0_16__policy_storageEm"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i64) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::ArrayBuffer::Allocator"**
  %4 = load %"class.v8::ArrayBuffer::Allocator"*, %"class.v8::ArrayBuffer::Allocator"** %3, align 8
  %5 = getelementptr %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1, i64 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  %8 = bitcast %"class.v8::ArrayBuffer::Allocator"* %4 to i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)***
  %9 = load i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)**, i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)*** %8, align 8
  br i1 %7, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)*, i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)** %9, i64 3
  %12 = load i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)*, i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)** %11, align 8
  %13 = tail call i8* %12(%"class.v8::ArrayBuffer::Allocator"* %4, i64 %1) #12
  br label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)*, i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)** %9, i64 2
  %16 = load i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)*, i8* (%"class.v8::ArrayBuffer::Allocator"*, i64)** %15, align 8
  %17 = tail call i8* %16(%"class.v8::ArrayBuffer::Allocator"* %4, i64 %1) #12
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi i8* [ %13, %10 ], [ %17, %14 ]
  ret i8* %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS7_7IsolateEmmmmbNS7_10SharedFlagEE3$_2S2_EEEEbPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #9 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = load atomic i64, i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0) monotonic, align 8
  %6 = icmp ugt i64 %5, 1103806595072
  %7 = sub i64 1103806595072, %5
  %8 = icmp ult i64 %7, %4
  %9 = or i1 %6, %8
  br i1 %9, label %21, label %10

10:                                               ; preds = %1, %15
  %11 = phi i64 [ %16, %15 ], [ %5, %1 ]
  %12 = add i64 %11, %4
  %13 = cmpxchg weak i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZN2v88internal12_GLOBAL__N_123reserved_address_space_E, i64 0, i32 0, i32 0), i64 %11, i64 %12 acq_rel monotonic
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = extractvalue { i64, i1 } %13, 0
  %17 = icmp ugt i64 %16, 1103806595072
  %18 = sub i64 1103806595072, %16
  %19 = icmp ult i64 %18, %4
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %10

21:                                               ; preds = %10, %15, %1
  %22 = phi i1 [ false, %1 ], [ false, %15 ], [ true, %10 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS7_7IsolateEmmmmbNS7_10SharedFlagEE3$_3S2_EEEEbPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1347"**
  %3 = load %"class.std::__1::__function::__default_alloc_func.1347"*, %"class.std::__1::__function::__default_alloc_func.1347"** %2, align 8
  %4 = tail call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #12
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %3, i64 0, i32 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %3, i64 0, i32 0, i32 2
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = tail call i8* @_ZN2v88internal13AllocatePagesEPNS_13PageAllocatorEPvmmNS1_10PermissionE(%"class.v8::PageAllocator"* %4, i8* null, i64 %7, i64 %10, i32 0) #12
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %3, i64 0, i32 0, i32 0
  %13 = load i8**, i8*** %12, align 8
  store i8* %11, i8** %13, align 8
  %14 = load i8**, i8*** %12, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ne i8* %15, null
  ret i1 %16
}

declare i8* @_ZN2v88internal13AllocatePagesEPNS_13PageAllocatorEPvmmNS1_10PermissionE(%"class.v8::PageAllocator"*, i8*, i64, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #14, !noalias !11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1289"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S8_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1285"*, i8** dereferenceable(8), %"struct.std::__1::pair.1313"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i8** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to i8*
  br i1 %21, label %82, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !16
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %38, null
  br i1 %39, label %82, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br i1 %25, label %42, label %64

42:                                               ; preds = %40, %59
  %43 = phi %"struct.std::__1::__hash_node_base.1289"* [ %45, %59 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %45, null
  br i1 %46, label %82, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.1289"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = icmp ult i64 %50, %20
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = urem i64 %50, %20
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i64 [ %55, %54 ], [ %50, %52 ]
  %58 = icmp eq i64 %57, %34
  br i1 %58, label %59, label %82

59:                                               ; preds = %56, %47
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %45, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base.1289"* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, %22
  br i1 %63, label %177, label %42

64:                                               ; preds = %40, %77
  %65 = phi %"struct.std::__1::__hash_node_base.1289"* [ %67, %77 ], [ %38, %40 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %65, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %67, i64 1
  %71 = bitcast %"struct.std::__1::__hash_node_base.1289"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %18
  %74 = and i64 %72, %41
  %75 = icmp eq i64 %74, %34
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %67, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.1289"* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, %22
  br i1 %81, label %177, label %64

82:                                               ; preds = %69, %64, %56, %42, %33, %3
  %83 = phi i64 [ %34, %33 ], [ undef, %3 ], [ %34, %42 ], [ %34, %56 ], [ %34, %64 ], [ %34, %69 ]
  %84 = tail call i8* @_Znwm(i64 40) #14, !noalias !17
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = getelementptr inbounds %"struct.std::__1::pair.1313", %"struct.std::__1::pair.1313"* %2, i64 0, i32 1
  %87 = bitcast %"struct.std::__1::pair.1313"* %2 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !noalias !17
  %89 = bitcast i8* %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %89, align 8, !noalias !17
  %90 = getelementptr inbounds i8, i8* %84, i64 32
  %91 = getelementptr inbounds %"struct.std::__1::pair.1313", %"struct.std::__1::pair.1313"* %2, i64 0, i32 1, i32 1
  %92 = bitcast %"class.std::__1::__shared_weak_count"** %91 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !17
  %94 = bitcast i8* %90 to i64*
  store i64 %93, i64* %94, align 8, !noalias !17
  %95 = bitcast %"class.std::__1::weak_ptr.1044"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #12, !noalias !17
  %96 = getelementptr inbounds i8, i8* %84, i64 8
  %97 = bitcast i8* %96 to i64*
  store i64 %18, i64* %97, align 8, !noalias !17
  %98 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base.1289"**
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %98, align 8, !noalias !17
  %99 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 2, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  %102 = uitofp i64 %101 to float
  %103 = uitofp i64 %20 to float
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 3, i32 0, i32 0
  %105 = load float, float* %104, align 4
  %106 = fmul float %105, %103
  %107 = fcmp olt float %106, %102
  %108 = or i1 %21, %107
  br i1 %108, label %109, label %132

109:                                              ; preds = %82
  %110 = shl i64 %20, 1
  %111 = icmp ult i64 %20, 3
  %112 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !16
  %113 = icmp ugt i64 %112, 1
  %114 = or i1 %111, %113
  %115 = zext i1 %114 to i64
  %116 = or i64 %110, %115
  %117 = fdiv float %102, %105
  %118 = tail call float @llvm.ceil.f32(float %117) #12
  %119 = fptoui float %118 to i64
  %120 = icmp ult i64 %116, %119
  %121 = select i1 %120, i64 %119, i64 %116
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1285"* %0, i64 %121)
  %122 = load i64, i64* %19, align 8
  %123 = tail call i64 @llvm.ctpop.i64(i64 %122) #12, !range !16
  %124 = icmp ugt i64 %123, 1
  br i1 %124, label %128, label %125

125:                                              ; preds = %109
  %126 = add i64 %122, -1
  %127 = and i64 %126, %18
  br label %132

128:                                              ; preds = %109
  %129 = icmp ult i64 %18, %122
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = urem i64 %18, %122
  br label %132

132:                                              ; preds = %130, %128, %125, %82
  %133 = phi i64 [ %20, %82 ], [ %122, %125 ], [ %122, %128 ], [ %122, %130 ]
  %134 = phi i64 [ %83, %82 ], [ %127, %125 ], [ %18, %128 ], [ %131, %130 ]
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %136, i64 %134
  %138 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %137, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %138, null
  br i1 %139, label %140, label %166

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 1, i32 0, i32 0
  %142 = bitcast %"struct.std::__1::__hash_node_base.1289"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i8* %84 to i64*
  store i64 %143, i64* %144, align 8
  %145 = bitcast %"struct.std::__1::__hash_node_base.1289"* %141 to i8**
  store i8* %84, i8** %145, align 8
  store %"struct.std::__1::__hash_node_base.1289"* %141, %"struct.std::__1::__hash_node_base.1289"** %137, align 8
  %146 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %98, align 8
  %147 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %146, null
  br i1 %147, label %173, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %146, i64 1
  %150 = bitcast %"struct.std::__1::__hash_node_base.1289"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = tail call i64 @llvm.ctpop.i64(i64 %133) #12, !range !16
  %153 = icmp ugt i64 %152, 1
  br i1 %153, label %157, label %154

154:                                              ; preds = %148
  %155 = add i64 %133, -1
  %156 = and i64 %151, %155
  br label %161

157:                                              ; preds = %148
  %158 = icmp ult i64 %151, %133
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = urem i64 %151, %133
  br label %161

161:                                              ; preds = %154, %157, %159
  %162 = phi i64 [ %156, %154 ], [ %160, %159 ], [ %151, %157 ]
  %163 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %135, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %163, i64 %162
  %165 = bitcast %"struct.std::__1::__hash_node_base.1289"** %164 to i8**
  br label %171

166:                                              ; preds = %132
  %167 = bitcast %"struct.std::__1::__hash_node_base.1289"* %138 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast i8* %84 to i64*
  store i64 %168, i64* %169, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.1289"* %138 to i8**
  br label %171

171:                                              ; preds = %161, %166
  %172 = phi i8** [ %170, %166 ], [ %165, %161 ]
  store i8* %84, i8** %172, align 8
  br label %173

173:                                              ; preds = %171, %140
  %174 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base.1289"*
  %175 = load i64, i64* %99, align 8
  %176 = add i64 %175, 1
  store i64 %176, i64* %99, align 8
  br label %177

177:                                              ; preds = %77, %59, %173
  %178 = phi i8 [ 1, %173 ], [ 0, %59 ], [ 0, %77 ]
  %179 = phi %"struct.std::__1::__hash_node_base.1289"* [ %174, %173 ], [ %45, %59 ], [ %67, %77 ]
  %180 = insertvalue { %"struct.std::__1::__hash_node_base.1289"*, i8 } undef, %"struct.std::__1::__hash_node_base.1289"* %179, 0
  %181 = insertvalue { %"struct.std::__1::__hash_node_base.1289"*, i8 } %180, i8 %178, 1
  ret { %"struct.std::__1::__hash_node_base.1289"*, i8 } %181
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1285"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !16
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1285"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !16
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !16
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1285"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1285"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1285"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1289"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1289"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1291", %"class.std::__1::__bucket_list_deallocator.1291"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !20

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1289"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !16
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1289"* %36, %"struct.std::__1::__hash_node_base.1289"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1289"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1289"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1289"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1289"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1289"* %103 to i8**
  %105 = load i8*, i8** %130, align 8
  %106 = load i8*, i8** %104, align 8
  %107 = icmp eq i8* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1289"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1289"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1289"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1289"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1289"* %80, %"struct.std::__1::__hash_node_base.1289"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1289"* %82, %"struct.std::__1::__hash_node_base.1289"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1289"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1289"* %129 to i8**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1289"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1289"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1289"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1289"* %146 to i8**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1289"* %134, %"struct.std::__1::__hash_node_base.1289"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1289"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1289"* %155 to i8**
  %157 = load i8*, i8** %147, align 8
  %158 = load i8*, i8** %156, align 8
  %159 = icmp eq i8* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1289"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1289"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1289"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1289"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1289"* %132, %"struct.std::__1::__hash_node_base.1289"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1289"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1289"** null, %"struct.std::__1::__hash_node_base.1289"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1289"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1289"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1291", %"class.std::__1::__bucket_list_deallocator.1291"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1289"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_(%"class.std::__1::__hash_table.1285"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to i8*
  br i1 %20, label %85, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #12, !range !16
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br i1 %24, label %45, label %67

45:                                               ; preds = %43, %63
  %46 = phi %"struct.std::__1::__hash_node_base.1289"* [ %65, %63 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1289"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = icmp ult i64 %49, %19
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %19
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %63, label %85

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %46, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.1289"* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, %21
  br i1 %62, label %85, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %46, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %65, null
  br i1 %66, label %85, label %45

67:                                               ; preds = %43, %81
  %68 = phi %"struct.std::__1::__hash_node_base.1289"* [ %83, %81 ], [ %41, %43 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.1289"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %17
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = and i64 %71, %44
  %75 = icmp eq i64 %74, %33
  br i1 %75, label %81, label %85

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %68, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.1289"* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, %21
  br i1 %80, label %85, label %81

81:                                               ; preds = %73, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %68, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %76, %81, %73, %58, %63, %55, %39, %2, %32
  %86 = phi %"struct.std::__1::__hash_node_base.1289"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %58 ], [ null, %63 ], [ null, %55 ], [ %68, %76 ], [ null, %81 ], [ null, %73 ]
  ret %"struct.std::__1::__hash_node_base.1289"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.1354"* noalias sret, %"class.std::__1::__hash_table.1285"*, %"struct.std::__1::__hash_node_base.1289"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.1289"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !16
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.1289"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.1296", %"class.std::__1::__compressed_pair.1296"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1289"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.1289"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1289"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.1289"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289", %"struct.std::__1::__hash_node_base.1289"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.1289"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.1289"**, %"struct.std::__1::__hash_node_base.1289"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1289"*, %"struct.std::__1::__hash_node_base.1289"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.1289"* %25, %"struct.std::__1::__hash_node_base.1289"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.1289"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.1289"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.1289"* null, %"struct.std::__1::__hash_node_base.1289"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1285", %"class.std::__1::__hash_table.1285"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.1289"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1354"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1354", %"class.std::__1::unique_ptr.1354"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.1299"** %98 to %"class.std::__1::__compressed_pair.1296"**
  store %"class.std::__1::__compressed_pair.1296"* %30, %"class.std::__1::__compressed_pair.1296"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1354", %"class.std::__1::unique_ptr.1354"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind
declare %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS5_EEEvDpOT_(%"class.std::__1::vector.1314"*, %"class.std::__1::shared_ptr.162"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1314", %"class.std::__1::vector.1314"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::shared_ptr.162"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1314"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1314"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1314", %"class.std::__1::vector.1314"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::shared_ptr.162"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::shared_ptr.162"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::shared_ptr.162"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::shared_ptr.162"* %38 to i64
  %40 = bitcast %"class.std::__1::shared_ptr.162"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::shared_ptr.162"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %1, i64 0, i32 1
  %45 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %44, align 8
  store %"class.std::__1::__shared_weak_count"* %45, %"class.std::__1::__shared_weak_count"** %43, align 8
  %46 = icmp eq %"class.std::__1::__shared_weak_count"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0, i32 1
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  br label %50

50:                                               ; preds = %34, %47
  %51 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %37, i64 1
  %52 = ptrtoint %"class.std::__1::shared_ptr.162"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.1314", %"class.std::__1::vector.1314"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"** %53, align 8
  %55 = ptrtoint %"class.std::__1::shared_ptr.162"* %54 to i64
  %56 = load %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"** %3, align 8
  %57 = icmp eq %"class.std::__1::shared_ptr.162"* %56, %54
  br i1 %57, label %140, label %58

58:                                               ; preds = %50
  %59 = getelementptr %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %56, i64 -1, i32 0
  %60 = ptrtoint %"class.v8::internal::BackingStore"** %59 to i64
  %61 = sub i64 %60, %55
  %62 = lshr i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %83, label %66

66:                                               ; preds = %58, %66
  %67 = phi %"class.std::__1::shared_ptr.162"* [ %70, %66 ], [ %37, %58 ]
  %68 = phi %"class.std::__1::shared_ptr.162"* [ %71, %66 ], [ %56, %58 ]
  %69 = phi i64 [ %81, %66 ], [ %64, %58 ]
  %70 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %68, i64 -1
  %72 = bitcast %"class.std::__1::shared_ptr.162"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::shared_ptr.162"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %67, i64 -1, i32 1
  %76 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %68, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::__shared_weak_count"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::__shared_weak_count"** %75 to i64*
  store i64 %78, i64* %79, align 8
  %80 = bitcast %"class.std::__1::shared_ptr.162"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #12
  %81 = add i64 %69, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %66, !llvm.loop !22

83:                                               ; preds = %66, %58
  %84 = phi %"class.std::__1::shared_ptr.162"* [ undef, %58 ], [ %70, %66 ]
  %85 = phi %"class.std::__1::shared_ptr.162"* [ %37, %58 ], [ %70, %66 ]
  %86 = phi %"class.std::__1::shared_ptr.162"* [ %56, %58 ], [ %71, %66 ]
  %87 = icmp ult i64 %61, 48
  br i1 %87, label %136, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::shared_ptr.162"* [ %124, %88 ], [ %85, %83 ]
  %90 = phi %"class.std::__1::shared_ptr.162"* [ %125, %88 ], [ %86, %83 ]
  %91 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -1
  %93 = bitcast %"class.std::__1::shared_ptr.162"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::shared_ptr.162"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -1, i32 1
  %97 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -1, i32 1
  %98 = bitcast %"class.std::__1::__shared_weak_count"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::__shared_weak_count"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = bitcast %"class.std::__1::shared_ptr.162"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #12
  %102 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -2
  %103 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -2
  %104 = bitcast %"class.std::__1::shared_ptr.162"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::shared_ptr.162"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -2, i32 1
  %108 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -2, i32 1
  %109 = bitcast %"class.std::__1::__shared_weak_count"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::__shared_weak_count"** %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = bitcast %"class.std::__1::shared_ptr.162"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #12
  %113 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -3
  %114 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -3
  %115 = bitcast %"class.std::__1::shared_ptr.162"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::shared_ptr.162"* %113 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -3, i32 1
  %119 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -3, i32 1
  %120 = bitcast %"class.std::__1::__shared_weak_count"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::__shared_weak_count"** %118 to i64*
  store i64 %121, i64* %122, align 8
  %123 = bitcast %"class.std::__1::shared_ptr.162"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #12
  %124 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -4
  %125 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -4
  %126 = bitcast %"class.std::__1::shared_ptr.162"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::shared_ptr.162"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %89, i64 -4, i32 1
  %130 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %90, i64 -4, i32 1
  %131 = bitcast %"class.std::__1::__shared_weak_count"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.std::__1::__shared_weak_count"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = bitcast %"class.std::__1::shared_ptr.162"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #12
  %135 = icmp eq %"class.std::__1::shared_ptr.162"* %125, %54
  br i1 %135, label %136, label %88

136:                                              ; preds = %88, %83
  %137 = phi %"class.std::__1::shared_ptr.162"* [ %84, %83 ], [ %124, %88 ]
  %138 = load i64, i64* %6, align 8
  %139 = load %"class.std::__1::shared_ptr.162"*, %"class.std::__1::shared_ptr.162"** %3, align 8
  br label %140

140:                                              ; preds = %50, %136
  %141 = phi %"class.std::__1::shared_ptr.162"* [ %139, %136 ], [ %54, %50 ]
  %142 = phi %"class.std::__1::shared_ptr.162"* [ %137, %136 ], [ %37, %50 ]
  %143 = phi i64 [ %138, %136 ], [ %55, %50 ]
  %144 = ptrtoint %"class.std::__1::shared_ptr.162"* %142 to i64
  store i64 %144, i64* %6, align 8
  store i64 %52, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %145 = inttoptr i64 %143 to %"class.std::__1::shared_ptr.162"*
  %146 = icmp eq %"class.std::__1::shared_ptr.162"* %141, %145
  br i1 %146, label %165, label %147

147:                                              ; preds = %140, %163
  %148 = phi %"class.std::__1::shared_ptr.162"* [ %149, %163 ], [ %141, %140 ]
  %149 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %148, i64 -1
  %150 = getelementptr inbounds %"class.std::__1::shared_ptr.162", %"class.std::__1::shared_ptr.162"* %148, i64 -1, i32 1
  %151 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %150, align 8
  %152 = icmp eq %"class.std::__1::__shared_weak_count"* %151, null
  br i1 %152, label %163, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %151, i64 0, i32 0, i32 1
  %155 = atomicrmw add i64* %154, i64 -1 acq_rel
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %163

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %151, i64 0, i32 0
  %159 = bitcast %"class.std::__1::__shared_weak_count"* %151 to void (%"class.std::__1::__shared_count"*)***
  %160 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %160, i64 2
  %162 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %161, align 8
  tail call void %162(%"class.std::__1::__shared_count"* %158) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %151) #12
  br label %163

163:                                              ; preds = %157, %153, %147
  %164 = icmp eq %"class.std::__1::shared_ptr.162"* %149, %145
  br i1 %164, label %165, label %147

165:                                              ; preds = %163, %140
  %166 = icmp eq i64 %143, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %143 to i8*
  tail call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %165, %167
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!8 = distinct !{!8, !9, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!10 = !{!"branch_weights", i32 -388717296, i32 7818360}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN2v88internal12BackingStore35TryAllocateAndPartiallyCommitMemoryEPNS5_7IsolateEmmmmbNS5_10SharedFlagEE3$_3FbvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!16 = !{i64 0, i64 65}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashINS_4pairIKS3_S8_EEJEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvNS_8weak_ptrIN2v88internal12BackingStoreEEEEENS_22__unordered_map_hasherIS3_S9_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashINS_4pairIKS3_S8_EEJEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISS_EEEEEEmOT_DpOT0_"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !21}
