; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/thread_type.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/thread_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [12 x i8] c"Main thread\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"unspecified worker thread\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"Compositor\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"DedicatedWorker thread\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"SharedWorker thread\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"AnimationWorklet thread\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"ServiceWorker thread\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"File thread\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"Database thread\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"OfflineAudioRender thread\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"Reverb convolution background thread\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"HRTF database loader thread\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"test thread\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"Audio encoder thread\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"Video encoder thread\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"Offline AudioWorklet thread\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"Realtime AudioWorklet thread\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"Semi-Realtime AudioWorklet thread\00", align 1
@switch.table._ZN5blink20GetNameForThreadTypeENS_10ThreadTypeE = private unnamed_addr constant [22 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i8* null, i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i8* null], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN5blink20GetNameForThreadTypeENS_10ThreadTypeE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 22
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [22 x i8*], [22 x i8*]* @switch.table._ZN5blink20GetNameForThreadTypeENS_10ThreadTypeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
