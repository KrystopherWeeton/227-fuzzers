; ModuleID = '../../third_party/blink/renderer/platform/graphics/graphics_context_state.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/graphics_context_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.40, %class.sk_sp.41, %class.sk_sp.42, %class.sk_sp.43, i32, float, float, i32, %union.anon.44, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.9, i32, %"class.absl::optional.16", %"class.std::__1::vector.21", %"class.std::__1::vector.28", %class.sk_sp.35, %class.sk_sp.2, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.2, %class.sk_sp.9, %"class.gfx::Rect", i32, %class.sk_sp.11, %class.sk_sp.15, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.11 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3, i32, i32 }
%class.sk_sp.3 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.12" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.15 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.9 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { float*, float*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float* }
%class.sk_sp.35 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.36", [7 x i8] }>
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%class.sk_sp.2 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.40 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.41 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.42 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.43 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.44 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::Color" = type { i32 }
%"class.WTF::Vector" = type opaque

@_ZN5blink20GraphicsContextStateC1Ev = hidden unnamed_addr alias void (%"class.blink::GraphicsContextState"*), void (%"class.blink::GraphicsContextState"*)* @_ZN5blink20GraphicsContextStateC2Ev
@_ZN5blink20GraphicsContextStateC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"*), void (%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"*)* @_ZN5blink20GraphicsContextStateC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextStateC2Ev(%"class.blink::GraphicsContextState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* %2) #6
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* %3) #6
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 4
  store float 4.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 5, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %9, align 8
  %10 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 3
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 4
  store i32 2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 5
  store i16 0, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 6
  %14 = load i8, i8* %13, align 2
  %15 = or i8 %14, 1
  store i8 %15, i8* %13, align 2
  %16 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 10
  %17 = bitcast %union.anon.44* %16 to i16*
  %18 = load i16, i16* %17, align 8
  %19 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 7
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 8
  store float 4.000000e+00, float* %20, align 8
  %21 = and i16 %18, -1022
  %22 = or i16 %21, 321
  store i16 %22, i16* %17, align 8
  %23 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1, i32 10
  %24 = bitcast %union.anon.44* %23 to i16*
  %25 = load i16, i16* %24, align 8
  %26 = and i16 %25, -770
  %27 = or i16 %26, 257
  store i16 %27, i16* %24, align 8
  ret void
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextStateC2ERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 0
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %3, %"class.cc::PaintFlags"* dereferenceable(72) %4) #6
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 1
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %5, %"class.cc::PaintFlags"* dereferenceable(72) %6) #6
  %7 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 2
  %9 = bitcast %"class.blink::StrokeData"* %7 to i8*
  %10 = bitcast %"class.blink::StrokeData"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 20, i1 false) #6
  %11 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 5, i32 0
  %12 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 2, i32 5, i32 0
  %13 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  %14 = icmp eq %class.SkPathEffect* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %2, %15
  store %class.SkPathEffect* %13, %class.SkPathEffect** %11, align 8
  %19 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 5
  store i16 0, i16* %25, align 8
  %26 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 2
  %29 = and i8 %28, 1
  %30 = load i8, i8* %26, align 2
  %31 = and i8 %30, -2
  %32 = or i8 %31, %29
  store i8 %32, i8* %26, align 2
  ret void
}

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState4CopyERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 5, i32 0
  %4 = load %class.SkPathEffect*, %class.SkPathEffect** %3, align 8
  %5 = icmp eq %class.SkPathEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPathEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPathEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #6
  br label %16

16:                                               ; preds = %2, %6, %10
  %17 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %17) #6
  %18 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %18) #6
  %19 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 0
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %18, %"class.cc::PaintFlags"* dereferenceable(72) %19) #6
  %20 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 1
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %17, %"class.cc::PaintFlags"* dereferenceable(72) %20) #6
  %21 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 2
  %23 = bitcast %"class.blink::StrokeData"* %21 to i8*
  %24 = bitcast %"class.blink::StrokeData"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 20, i1 false) #6
  %25 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 2, i32 5, i32 0
  %26 = load %class.SkPathEffect*, %class.SkPathEffect** %25, align 8
  %27 = icmp eq %class.SkPathEffect* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %16, %28
  store %class.SkPathEffect* %26, %class.SkPathEffect** %3, align 8
  %32 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 3
  %33 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 5
  store i16 0, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 6
  %40 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %1, i64 0, i32 6
  %41 = load i8, i8* %40, align 2
  %42 = and i8 %41, 1
  %43 = load i8, i8* %39, align 2
  %44 = and i8 %43, -2
  %45 = or i8 %44, %42
  store i8 %45, i8* %39, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.cc::PaintFlags"* @_ZNK5blink20GraphicsContextState11StrokeFlagsEii(%"class.blink::GraphicsContextState"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0
  tail call void @_ZNK5blink10StrokeData24SetupPaintDashPathEffectEPN2cc10PaintFlagsEii(%"class.blink::StrokeData"* %4, %"class.cc::PaintFlags"* %5, i32 %1, i32 %2) #6
  ret %"class.cc::PaintFlags"* %5
}

declare void @_ZNK5blink10StrokeData24SetupPaintDashPathEffectEPN2cc10PaintFlagsEii(%"class.blink::StrokeData"*, %"class.cc::PaintFlags"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 0
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink20GraphicsContextState18SetStrokeThicknessEf(%"class.blink::GraphicsContextState"* nocapture, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 1
  store float %1, float* %3, align 4
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 7
  store float %1, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState14SetStrokeColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* nocapture, %"class.blink::Color"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 6
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  %8 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %7, align 8
  %9 = bitcast %class.sk_sp.1* %6 to i64*
  store i64 0, i64* %9, align 8
  %10 = icmp eq %"class.cc::PaintShader"* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::PaintShader"* %8 to %class.SkRefCntBase*
  %17 = bitcast %"class.cc::PaintShader"* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #6
  br label %21

21:                                               ; preds = %15, %11, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState10SetLineCapENS_7LineCapE(%"class.blink::GraphicsContextState"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 2
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 10
  %5 = bitcast %union.anon.44* %4 to i16*
  %6 = trunc i32 %1 to i16
  %7 = load i16, i16* %5, align 8
  %8 = shl i16 %6, 2
  %9 = and i16 %8, 12
  %10 = and i16 %7, -13
  %11 = or i16 %10, %9
  store i16 %11, i16* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState11SetLineJoinENS_8LineJoinE(%"class.blink::GraphicsContextState"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 3
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 10
  %5 = bitcast %union.anon.44* %4 to i16*
  %6 = trunc i32 %1 to i16
  %7 = load i16, i16* %5, align 8
  %8 = shl i16 %6, 4
  %9 = and i16 %8, 48
  %10 = and i16 %7, -49
  %11 = or i16 %10, %9
  store i16 %11, i16* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink20GraphicsContextState13SetMiterLimitEf(%"class.blink::GraphicsContextState"* nocapture, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2, i32 4
  store float %1, float* %3, align 8
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 8
  store float %1, float* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState12SetFillColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* nocapture, %"class.blink::Color"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1, i32 6
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1, i32 1
  %7 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  %8 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %7, align 8
  %9 = bitcast %class.sk_sp.1* %6 to i64*
  store i64 0, i64* %9, align 8
  %10 = icmp eq %"class.cc::PaintShader"* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::PaintShader"* %8 to %class.SkRefCntBase*
  %17 = bitcast %"class.cc::PaintShader"* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #6
  br label %21

21:                                               ; preds = %15, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState13SetDrawLooperE5sk_spI12SkDrawLooperE(%"class.blink::GraphicsContextState"* nocapture, %class.sk_sp.42* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %1, i64 0, i32 0
  %4 = load %class.SkDrawLooper*, %class.SkDrawLooper** %3, align 8
  %5 = icmp eq %class.SkDrawLooper* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  %10 = ptrtoint %class.SkDrawLooper* %4 to i64
  %11 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 4
  %12 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %11, i64 0, i32 0
  %13 = load %class.SkDrawLooper*, %class.SkDrawLooper** %12, align 8
  %14 = bitcast %class.sk_sp.42* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %class.SkDrawLooper* %13, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkDrawLooper* %13 to %class.SkRefCntBase*
  %22 = bitcast %class.SkDrawLooper* %13 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #6
  br label %26

26:                                               ; preds = %20, %16, %9
  %27 = bitcast %class.sk_sp.42* %1 to i64*
  %28 = load i64, i64* %27, align 8
  store %class.SkDrawLooper* null, %class.SkDrawLooper** %3, align 8
  %29 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1, i32 4
  %30 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %29, i64 0, i32 0
  %31 = load %class.SkDrawLooper*, %class.SkDrawLooper** %30, align 8
  %32 = bitcast %class.sk_sp.42* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %class.SkDrawLooper* %31, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkDrawLooper* %31 to %class.SkRefCntBase*
  %40 = bitcast %class.SkDrawLooper* %31 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #6
  br label %44

44:                                               ; preds = %38, %34, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState11SetLineDashERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEEf(%"class.blink::GraphicsContextState"*, %"class.WTF::Vector"*, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 2
  tail call void @_ZN5blink10StrokeData11SetLineDashERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEEf(%"class.blink::StrokeData"* %4, %"class.WTF::Vector"* %1, float %2) #6
  ret void
}

declare void @_ZN5blink10StrokeData11SetLineDashERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEEf(%"class.blink::StrokeData"*, %"class.WTF::Vector"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState14SetColorFilterE5sk_spI13SkColorFilterE(%"class.blink::GraphicsContextState"* nocapture, %class.sk_sp.41* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %1, i64 0, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  %10 = ptrtoint %class.SkColorFilter* %4 to i64
  %11 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 3
  %12 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %11, i64 0, i32 0
  %13 = load %class.SkColorFilter*, %class.SkColorFilter** %12, align 8
  %14 = bitcast %class.sk_sp.41* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %class.SkColorFilter* %13, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorFilter* %13 to %class.SkRefCntBase*
  %22 = bitcast %class.SkColorFilter* %13 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #6
  br label %26

26:                                               ; preds = %20, %16, %9
  %27 = bitcast %class.sk_sp.41* %1 to i64*
  %28 = load i64, i64* %27, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %3, align 8
  %29 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1, i32 3
  %30 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %29, i64 0, i32 0
  %31 = load %class.SkColorFilter*, %class.SkColorFilter** %30, align 8
  %32 = bitcast %class.sk_sp.41* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %class.SkColorFilter* %31, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorFilter* %31 to %class.SkRefCntBase*
  %40 = bitcast %class.SkColorFilter* %31 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #6
  br label %44

44:                                               ; preds = %38, %34, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState23SetInterpolationQualityENS_20InterpolationQualityE(%"class.blink::GraphicsContextState"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 4
  %4 = icmp ne i32 %1, 0
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 10
  %6 = bitcast %union.anon.44* %5 to i16*
  %7 = zext i1 %4 to i16
  %8 = load i16, i16* %6, align 8
  %9 = shl nuw nsw i16 %7, 8
  %10 = and i16 %8, -769
  %11 = or i16 %10, %9
  store i16 %11, i16* %6, align 8
  %12 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1, i32 10
  %13 = bitcast %union.anon.44* %12 to i16*
  %14 = load i16, i16* %13, align 8
  %15 = and i16 %14, -769
  %16 = or i16 %15, %9
  store i16 %16, i16* %13, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20GraphicsContextState18SetShouldAntialiasEb(%"class.blink::GraphicsContextState"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 2
  %6 = and i8 %5, -2
  %7 = or i8 %6, %3
  store i8 %7, i8* %4, align 2
  %8 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 0, i32 10
  %9 = bitcast %union.anon.44* %8 to i16*
  %10 = zext i1 %1 to i16
  %11 = load i16, i16* %9, align 8
  %12 = and i16 %11, -2
  %13 = or i16 %12, %10
  store i16 %13, i16* %9, align 8
  %14 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %0, i64 0, i32 1, i32 10
  %15 = bitcast %union.anon.44* %14 to i16*
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, -2
  %18 = or i16 %17, %10
  store i16 %18, i16* %15, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
