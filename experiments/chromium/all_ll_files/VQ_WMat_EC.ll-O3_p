; ModuleID = '../../third_party/opus/src/silk/VQ_WMat_EC.c'
source_filename = "../../third_party/opus/src/silk/VQ_WMat_EC.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_VQ_WMat_EC_c(i8* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture readonly, i32* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %13 = load i32, i32* %5, align 4
  %14 = getelementptr inbounds i32, i32* %5, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i32, i32* %5, i64 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds i32, i32* %5, i64 3
  %19 = load i32, i32* %18, align 4
  %20 = shl i32 %19, 7
  %21 = getelementptr inbounds i32, i32* %5, i64 4
  %22 = load i32, i32* %21, align 4
  %23 = shl i32 %22, 8
  store i32 2147483647, i32* %2, align 4
  store i32 2147483647, i32* %1, align 4
  store i8 0, i8* %0, align 1
  %24 = icmp sgt i32 %11, 0
  br i1 %24, label %25, label %166

25:                                               ; preds = %12
  %26 = shl i32 %17, 7
  %27 = shl i32 %15, 7
  %28 = shl i32 %13, 7
  %29 = getelementptr inbounds i32, i32* %4, i64 1
  %30 = getelementptr inbounds i32, i32* %4, i64 2
  %31 = getelementptr inbounds i32, i32* %4, i64 3
  %32 = getelementptr inbounds i32, i32* %4, i64 4
  %33 = getelementptr inbounds i32, i32* %4, i64 7
  %34 = getelementptr inbounds i32, i32* %4, i64 8
  %35 = getelementptr inbounds i32, i32* %4, i64 9
  %36 = getelementptr inbounds i32, i32* %4, i64 6
  %37 = getelementptr inbounds i32, i32* %4, i64 13
  %38 = getelementptr inbounds i32, i32* %4, i64 14
  %39 = getelementptr inbounds i32, i32* %4, i64 12
  %40 = getelementptr inbounds i32, i32* %4, i64 19
  %41 = getelementptr inbounds i32, i32* %4, i64 18
  %42 = getelementptr inbounds i32, i32* %4, i64 24
  %43 = shl i32 %9, 16
  %44 = ashr exact i32 %43, 16
  %45 = zext i32 %11 to i64
  br label %46

46:                                               ; preds = %162, %25
  %47 = phi i64 [ 0, %25 ], [ %164, %162 ]
  %48 = phi i8* [ %6, %25 ], [ %163, %162 ]
  %49 = getelementptr inbounds i8, i8* %7, i64 %47
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = sub nsw i32 %51, %10
  %53 = load i32, i32* %29, align 4
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = mul nsw i32 %53, %56
  %58 = sub i32 %57, %28
  %59 = load i32, i32* %30, align 4
  %60 = getelementptr inbounds i8, i8* %48, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = mul nsw i32 %59, %62
  %64 = add nsw i32 %58, %63
  %65 = load i32, i32* %31, align 4
  %66 = getelementptr inbounds i8, i8* %48, i64 3
  %67 = load i8, i8* %66, align 1
  %68 = sext i8 %67 to i32
  %69 = mul nsw i32 %65, %68
  %70 = add nsw i32 %64, %69
  %71 = load i32, i32* %32, align 4
  %72 = getelementptr inbounds i8, i8* %48, i64 4
  %73 = load i8, i8* %72, align 1
  %74 = sext i8 %73 to i32
  %75 = mul nsw i32 %71, %74
  %76 = add nsw i32 %70, %75
  %77 = shl i32 %76, 1
  %78 = load i32, i32* %4, align 4
  %79 = load i8, i8* %48, align 1
  %80 = sext i8 %79 to i32
  %81 = mul nsw i32 %78, %80
  %82 = add nsw i32 %77, %81
  %83 = sext i32 %82 to i64
  %84 = sext i8 %79 to i64
  %85 = mul nsw i64 %83, %84
  %86 = lshr i64 %85, 16
  %87 = add nuw nsw i64 %86, 32801
  %88 = load i32, i32* %33, align 4
  %89 = mul nsw i32 %88, %62
  %90 = sub i32 %89, %27
  %91 = load i32, i32* %34, align 4
  %92 = mul nsw i32 %91, %68
  %93 = add nsw i32 %90, %92
  %94 = load i32, i32* %35, align 4
  %95 = mul nsw i32 %94, %74
  %96 = add nsw i32 %93, %95
  %97 = shl i32 %96, 1
  %98 = load i32, i32* %36, align 4
  %99 = mul nsw i32 %98, %56
  %100 = add nsw i32 %97, %99
  %101 = sext i32 %100 to i64
  %102 = sext i8 %55 to i64
  %103 = mul nsw i64 %101, %102
  %104 = lshr i64 %103, 16
  %105 = add nuw nsw i64 %87, %104
  %106 = load i32, i32* %37, align 4
  %107 = mul nsw i32 %106, %68
  %108 = sub i32 %107, %26
  %109 = load i32, i32* %38, align 4
  %110 = mul nsw i32 %109, %74
  %111 = add nsw i32 %108, %110
  %112 = shl i32 %111, 1
  %113 = load i32, i32* %39, align 4
  %114 = mul nsw i32 %113, %62
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = sext i8 %61 to i64
  %118 = mul nsw i64 %116, %117
  %119 = lshr i64 %118, 16
  %120 = add nuw nsw i64 %105, %119
  %121 = load i32, i32* %40, align 4
  %122 = mul nsw i32 %121, %74
  %123 = sub i32 %122, %20
  %124 = shl i32 %123, 1
  %125 = load i32, i32* %41, align 4
  %126 = mul nsw i32 %125, %68
  %127 = add nsw i32 %124, %126
  %128 = sext i32 %127 to i64
  %129 = sext i8 %67 to i64
  %130 = mul nsw i64 %128, %129
  %131 = lshr i64 %130, 16
  %132 = add nuw nsw i64 %120, %131
  %133 = load i32, i32* %42, align 4
  %134 = mul nsw i32 %133, %74
  %135 = sub i32 %134, %23
  %136 = sext i32 %135 to i64
  %137 = sext i8 %73 to i64
  %138 = mul nsw i64 %136, %137
  %139 = ashr i64 %138, 16
  %140 = add nsw i64 %132, %139
  %141 = trunc i64 %140 to i32
  %142 = icmp sgt i32 %141, -1
  br i1 %142, label %143, label %162

143:                                              ; preds = %46
  %144 = icmp sgt i32 %52, 0
  %145 = select i1 %144, i32 %52, i32 0
  %146 = shl i32 %145, 11
  %147 = add nsw i32 %146, %141
  %148 = tail call i32 @silk_lin2log(i32 %147) #2
  %149 = shl i32 %148, 16
  %150 = add i32 %149, -125829120
  %151 = ashr exact i32 %150, 16
  %152 = mul nsw i32 %151, %44
  %153 = getelementptr inbounds i8, i8* %8, i64 %47
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = shl nuw nsw i32 %155, 2
  %157 = add nsw i32 %152, %156
  %158 = load i32, i32* %2, align 4
  %159 = icmp sgt i32 %157, %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %143
  store i32 %157, i32* %2, align 4
  store i32 %147, i32* %1, align 4
  %161 = trunc i64 %47 to i8
  store i8 %161, i8* %0, align 1
  store i32 %51, i32* %3, align 4
  br label %162

162:                                              ; preds = %143, %160, %46
  %163 = getelementptr inbounds i8, i8* %48, i64 5
  %164 = add nuw nsw i64 %47, 1
  %165 = icmp eq i64 %164, %45
  br i1 %165, label %166, label %46

166:                                              ; preds = %162, %12
  ret void
}

declare i32 @silk_lin2log(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
