; ModuleID = '../../third_party/blink/renderer/core/html/forms/range_input_type.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/range_input_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::StepRange::StepDescription>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::StepRange::StepDescription>::InstanceStorage" = type { [16 x i8] }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.177", i32, [4 x i8], %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.313", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.347", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.354", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.293", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__cxx_atomic_impl.216" }
%"struct.std::__1::__cxx_atomic_impl.216" = type { %"struct.std::__1::__cxx_atomic_base_impl.217" }
%"struct.std::__1::__cxx_atomic_base_impl.217" = type { i64 }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::Worklist.266"* }
%"class.blink::Worklist.266" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.273", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { i64 }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { float }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.296", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.305" }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.335" }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.224"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.231"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.252"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.594" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.353 }
%class.scoped_refptr.353 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.354" = type { %"struct.std::__1::__atomic_base.355" }
%"struct.std::__1::__atomic_base.355" = type { %"struct.std::__1::__cxx_atomic_impl.356" }
%"struct.std::__1::__cxx_atomic_impl.356" = type { %"struct.std::__1::__cxx_atomic_base_impl.357" }
%"struct.std::__1::__cxx_atomic_base_impl.357" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::RangeInputType" = type { %"class.blink::InputType", %"class.blink::InputTypeView", i8, %"class.WTF::Vector.39" }
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::Decimal"*, i32, i32 }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.37", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.29", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.4", %"class.blink::Member.48", %"class.blink::Member.48", %"class.blink::Member.67", %"class.blink::Member.69", %"class.blink::Member.71", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.76", %"class.blink::HeapVector.78" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.125", %"class.WTF::Vector.125", i8, i32, %"class.blink::Member.136", %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.149", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.155", %"class.blink::Member.157", %"class.blink::Member.84", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.160", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.59", %"class.blink::Member.370", %"class.blink::Member.59", %"class.blink::Member.59", %"class.blink::Member.59", %"class.blink::UserActionElementSet", %"class.blink::Member.379", double, double, i64, i64, %"class.blink::HeapHashSet.381", %"class.blink::HeapHashSet.388", i16, i8, %"class.blink::Member.395", %"class.blink::Member.397", %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::TextLinkColors", %"class.blink::Member.403", i8, [7 x i8], %"class.blink::HeapHashMap.405", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.59", %"class.WTF::Vector.412", %"class.blink::Member.417", %"class.blink::Member.421", i8, %"class.blink::Member.59", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.423", %"class.blink::HeapVector.425", %"class.std::__1::unique_ptr.433", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.439", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.452", %"class.WTF::Vector.454", i8, i8, %"class.std::__1::unique_ptr.459", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.465", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.473", i8, i32, %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.481", %"class.WTF::HashMap.483", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.46", %"class.blink::Member.46", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.496", i8, i32, %"class.blink::Member.503", %"class.blink::Member.505", i32, %"class.blink::Member.507", %"class.blink::Member.509", %"class.blink::Member.511", %"class.std::__1::unique_ptr.513", i64, %"class.std::__1::unique_ptr.519", i32, i32, %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.536", %"class.WTF::Vector.538", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.543", %"class.blink::Member.550", %"class.std::__1::unique_ptr.552", %"class.blink::Member.558", i8, i8, %"class.WTF::String", %"class.blink::Member.560", i8, [7 x i8], %"class.blink::HeapHashMap.562", %"class.blink::HeapObserverSet", %"class.blink::Member.576", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.578", i32, i8, i8, %"class.blink::WeakMember.580", %"class.blink::Member.581" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.118" }
%"class.blink::HeapHashMap.118" = type { %"class.WTF::HashMap.121" }
%"class.WTF::HashMap.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"struct.WTF::KeyValuePair.124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.124" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.125" = type { %"class.WTF::VectorBuffer.126" }
%"class.WTF::VectorBuffer.126" = type { %"class.WTF::VectorBufferBase.127" }
%"class.WTF::VectorBufferBase.127" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.128 }
%class.scoped_refptr.128 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.129" }
%"struct.std::__1::atomic.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__cxx_atomic_impl.132" }
%"struct.std::__1::__cxx_atomic_impl.132" = type { %"struct.std::__1::__cxx_atomic_base_impl.133" }
%"struct.std::__1::__cxx_atomic_base_impl.133" = type { i32 }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.599", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.640", i32, i8, [3 x i8], %"class.blink::HeapVector.642", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.650", %"class.blink::Member.652", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.661", %"class.blink::Member.667", %"class.blink::Member.669", i8, [7 x i8] }>
%"class.blink::Supplementable.599" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.600" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.615" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.607" }
%"class.blink::HeapObserverSet.607" = type { i32, [4 x i8], %"class.blink::HeapHashSet.608" }
%"class.blink::HeapHashSet.608" = type { %"class.WTF::HashSet.611" }
%"class.WTF::HashSet.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"class.blink::WeakMember.614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.614" = type opaque
%"class.blink::Supplementable.615" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.616" }
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type { i8*, %"class.blink::Member.1610" }
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1612" }
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.623, %"class.std::__1::unique_ptr.624", %"class.std::__1::unique_ptr.624", %"class.std::__1::unique_ptr.630", %"class.std::__1::unique_ptr.630", %"class.blink::Member.138", i32, [4 x i8], %"class.WTF::HashSet.636", i32, i32 }
%class.scoped_refptr.623 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.642" = type { %"class.WTF::Vector.645" }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { %"class.blink::Member.648"*, i32, i32 }
%"class.blink::Member.648" = type opaque
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.654", i32, i32 }
%"class.blink::HeapHashMap.654" = type { %"class.WTF::HashMap.657" }
%"class.WTF::HashMap.657" = type { %"class.WTF::HashTable.658" }
%"class.WTF::HashTable.658" = type <{ %"struct.WTF::KeyValuePair.660"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.660" = type opaque
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.155" = type { %"class.blink::MemberBase.156" }
%"class.blink::MemberBase.156" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.86", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.88, %"class.WTF::Vector.89", %"class.WTF::Vector.89", %"class.blink::Member.2", %"class.blink::Member.94", %"class.blink::HeapHashSet", %"class.blink::Member.46", %"class.WTF::HashSet.102", %"class.WTF::TextPosition", %"class.blink::Member.106", %"class.blink::HeapVector.108", %"class.blink::Member.115" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.88 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.96" }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.100" }
%"class.WTF::HashTable.100" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet.102" = type { %"class.WTF::HashTable.103" }
%"class.WTF::HashTable.103" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.108" = type { %"class.WTF::Vector.111" }
%"class.WTF::Vector.111" = type { %"class.WTF::VectorBuffer.112" }
%"class.WTF::VectorBuffer.112" = type { %"class.WTF::VectorBufferBase.113" }
%"class.WTF::VectorBufferBase.113" = type { %"class.blink::Member.94"*, i32, i32 }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.159 }
%class.scoped_refptr.159 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.160" = type { %"class.WTF::VectorBuffer.161" }
%"class.WTF::VectorBuffer.161" = type { %"class.WTF::VectorBufferBase.162" }
%"class.WTF::VectorBufferBase.162" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.163 }
%class.scoped_refptr.163 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.164", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.164" = type { %"class.base::RefCounted.165" }
%"class.base::RefCounted.165" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.168" }
%"class.blink::HeapHashMap.168" = type { %"class.WTF::HashMap.171" }
%"class.WTF::HashMap.171" = type { %"class.WTF::HashTable.172" }
%"class.WTF::HashTable.172" = type <{ %"struct.WTF::KeyValuePair.174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.174" = type { %"class.blink::WeakMember.175", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.175" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.46", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.2", %"class.blink::Member.2", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.372" }
%"class.blink::HeapHashMap.372" = type { %"class.WTF::HashMap.375" }
%"class.WTF::HashMap.375" = type { %"class.WTF::HashTable.376" }
%"class.WTF::HashTable.376" = type <{ %"struct.WTF::KeyValuePair.378"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.378" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.381" = type { %"class.WTF::HashSet.384" }
%"class.WTF::HashSet.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"class.blink::WeakMember.387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.387" = type opaque
%"class.blink::HeapHashSet.388" = type { %"class.WTF::HashSet.391" }
%"class.WTF::HashSet.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.78" }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.405" = type { %"class.WTF::HashMap.408" }
%"class.WTF::HashMap.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"struct.WTF::KeyValuePair.411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.411" = type opaque
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.425" = type { %"class.WTF::Vector.428" }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"class.blink::Member.431"*, i32, i32 }
%"class.blink::Member.431" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.439" = type { %"class.WTF::HashSet.442" }
%"class.WTF::HashSet.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"class.blink::WeakMember.445"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.445" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.446", i32, [4 x i8] }>
%"class.WTF::Vector.446" = type { %"class.WTF::VectorBuffer.447" }
%"class.WTF::VectorBuffer.447" = type { %"class.WTF::VectorBufferBase.448" }
%"class.WTF::VectorBufferBase.448" = type { %"struct.std::__1::pair.449"*, i32, i32 }
%"struct.std::__1::pair.449" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.454" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.63" }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::HeapVector.465" = type { %"class.WTF::Vector.468" }
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase.470" }
%"class.WTF::VectorBufferBase.470" = type { %"class.blink::Member.471"*, i32, i32 }
%"class.blink::Member.471" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.46" }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.487" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.369", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.360, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.360 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.361" }>
%"class.base::RefCountedThreadSafe.361" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.362 }
%class.scoped_refptr.362 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.363", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.363" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.364" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i8 }
%"class.blink::WeakMember.369" = type { %"class.blink::MemberBase.47" }
%"class.blink::HeapHashSet.496" = type { %"class.WTF::HashSet.499" }
%"class.WTF::HashSet.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"class.blink::Member.502"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.502" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.102", %"class.WTF::HashSet.102", %"class.WTF::HashSet.102", %"class.WTF::HashSet.102", %"class.WTF::HashSet.102", %"class.WTF::HashSet.102", i32, [4 x i8], %"class.WTF::HashMap.522", %"class.WTF::HashMap.522", %"class.WTF::HashMap.522", %"class.WTF::HashMap.522", %"class.WTF::HashMap.522", %"class.WTF::HashMap.522", %"class.WTF::HashMap.522", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.522" = type { %"class.WTF::HashTable.523" }
%"class.WTF::HashTable.523" = type <{ %"struct.WTF::KeyValuePair.526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.526" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.562" = type { %"class.WTF::HashMap.565" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.569" }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::WeakMember.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.46", %"class.blink::HeapHashSet.585", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.592", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.585" = type { %"class.WTF::HashSet.588" }
%"class.WTF::HashSet.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"class.blink::Member.591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.591" = type opaque
%"class.blink::HeapTaskRunnerTimer.592" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.593", { i64, i64 } }
%"class.blink::WeakMember.593" = type { %"class.blink::MemberBase.579" }
%"class.blink::WeakMember.580" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.55" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.59", i32, %"class.blink::HeapVector" }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::HeapHashMap.75"* }
%"class.blink::HeapHashMap.75" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.78" = type { %"class.WTF::Vector.81" }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.27", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::InputType"* }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::InputTypeView"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1638", %"class.blink::Member.1640", %"class.blink::Member.1642", %"class.blink::Member.1661", %"class.blink::Member.1663" }
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1388 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1388, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1390" }
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1393", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1399", %"class.std::__1::unique_ptr.1523", i8, %"class.absl::optional.1529", %class.scoped_refptr.1505, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1534" }
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1402, %class.scoped_refptr.1402, %class.scoped_refptr.1402, %class.scoped_refptr.1402, %class.scoped_refptr.1402, %class.scoped_refptr.1402, %class.scoped_refptr.1437, %class.scoped_refptr.1453, %class.scoped_refptr.1454, %class.scoped_refptr.1454, %class.scoped_refptr.1454, %class.scoped_refptr.1454, %class.scoped_refptr.1454, %class.scoped_refptr.1454, %class.scoped_refptr.1495, %class.scoped_refptr.1496, %class.scoped_refptr.1496, %class.scoped_refptr.1496, %class.scoped_refptr.1496, %class.scoped_refptr.1496, %class.scoped_refptr.1496, %class.scoped_refptr.1496, %class.scoped_refptr.1496, %class.scoped_refptr.1519 }
%class.scoped_refptr.1402 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1419" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1403", i8, i8, %class.scoped_refptr.1405, i32, i32 }
%"class.WTF::RefCounted.1403" = type { %"class.base::RefCounted.1404" }
%"class.base::RefCounted.1404" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1405 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1412, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1413", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1406" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1412 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1438", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1438" = type { %"class.WTF::RefCounted.1439", i8, i8, %class.scoped_refptr.1412, i32, i32 }
%"class.WTF::RefCounted.1439" = type { %"class.base::RefCounted.1440" }
%"class.base::RefCounted.1440" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1441" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1441" = type { %"class.absl::optional_internal::optional_data.1442" }
%"class.absl::optional_internal::optional_data.1442" = type { %"class.absl::optional_internal::optional_data_base.1443" }
%"class.absl::optional_internal::optional_data_base.1443" = type { %"class.absl::optional_internal::optional_data_dtor_base.1444" }
%"class.absl::optional_internal::optional_data_dtor_base.1444" = type { i8, %union.anon.1445 }
%union.anon.1445 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1446", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1446" = type { %"class.std::__1::__vector_base.1447" }
%"class.std::__1::__vector_base.1447" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1448" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1422", %"class.std::__1::unique_ptr.1428", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1422" = type { %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1428" = type { %"class.std::__1::__compressed_pair.1429" }
%"class.std::__1::__compressed_pair.1429" = type { %"struct.std::__1::__compressed_pair_elem.1430" }
%"struct.std::__1::__compressed_pair_elem.1430" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1437 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1453 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1454 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1455" }
%"class.blink::PaintPropertyNode.1455" = type { %"class.WTF::RefCounted.1456", i8, i8, %class.scoped_refptr.1458, i32, i32 }
%"class.WTF::RefCounted.1456" = type { %"class.base::RefCounted.1457" }
%"class.base::RefCounted.1457" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1458 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1405, %class.scoped_refptr.1459, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1481", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1459 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1497" }
%"class.blink::PaintPropertyNode.1497" = type { %"class.WTF::RefCounted.1498", i8, i8, %class.scoped_refptr.1459, i32, i32 }
%"class.WTF::RefCounted.1498" = type { %"class.base::RefCounted.1499" }
%"class.base::RefCounted.1499" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1460" }
%"class.std::__1::vector.1460" = type { %"class.std::__1::__vector_base.1461" }
%"class.std::__1::__vector_base.1461" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1476" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1462, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1469", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1462 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1463, i32, %"class.absl::optional.1464", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.129" }>
%class.sk_sp.1463 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1464" = type { %"class.absl::optional_internal::optional_data.1465" }
%"class.absl::optional_internal::optional_data.1465" = type { %"class.absl::optional_internal::optional_data_base.1466" }
%"class.absl::optional_internal::optional_data_base.1466" = type { %"class.absl::optional_internal::optional_data_dtor_base.1467" }
%"class.absl::optional_internal::optional_data_dtor_base.1467" = type { i8, %union.anon.1468 }
%union.anon.1468 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1469" = type { %"class.std::__1::__vector_base.1470" }
%"class.std::__1::__vector_base.1470" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1471" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1476" = type { %"struct.std::__1::__compressed_pair_elem.1477" }
%"struct.std::__1::__compressed_pair_elem.1477" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1487" }
%"class.base::internal::flat_tree.1487" = type { %"class.std::__1::vector.1488" }
%"class.std::__1::vector.1488" = type { %"class.std::__1::__vector_base.1489" }
%"class.std::__1::__vector_base.1489" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1490" }
%"class.std::__1::__compressed_pair.1490" = type { %"struct.std::__1::__compressed_pair_elem.1491" }
%"struct.std::__1::__compressed_pair_elem.1491" = type { i32* }
%class.scoped_refptr.1495 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1496 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1508" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1405, %"class.absl::optional.1500", %class.scoped_refptr.1505, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1500" = type { %"class.absl::optional_internal::optional_data.1501" }
%"class.absl::optional_internal::optional_data.1501" = type { %"class.absl::optional_internal::optional_data_base.1502" }
%"class.absl::optional_internal::optional_data_base.1502" = type { %"class.absl::optional_internal::optional_data_dtor_base.1503" }
%"class.absl::optional_internal::optional_data_dtor_base.1503" = type { i8, [3 x i8], %union.anon.1504 }
%union.anon.1504 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1508" = type { %"class.std::__1::__compressed_pair.1509" }
%"class.std::__1::__compressed_pair.1509" = type { %"struct.std::__1::__compressed_pair_elem.1510" }
%"struct.std::__1::__compressed_pair_elem.1510" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1511", i32, [4 x i8] }>
%"class.WTF::Vector.1511" = type { %"class.WTF::VectorBuffer.1512" }
%"class.WTF::VectorBuffer.1512" = type { %"class.WTF::VectorBufferBase.1513" }
%"class.WTF::VectorBufferBase.1513" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1519 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1523" = type { %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1405, %class.scoped_refptr.1459, %class.scoped_refptr.1458 }
%"class.absl::optional.1529" = type { %"class.absl::optional_internal::optional_data.1530" }
%"class.absl::optional_internal::optional_data.1530" = type { %"class.absl::optional_internal::optional_data_base.1531" }
%"class.absl::optional_internal::optional_data_base.1531" = type { %"class.absl::optional_internal::optional_data_dtor_base.1532" }
%"class.absl::optional_internal::optional_data_dtor_base.1532" = type { i8, %union.anon.1533 }
%union.anon.1533 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1505 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1506", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1042, i32, %"struct.std::__1::atomic.364", %"struct.std::__1::atomic.364", i8, i8 }>
%class.sk_sp.1042 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1043, %class.SkTDArray.1044, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.129" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1043 = type { i8*, i32, i32 }
%class.SkTDArray.1044 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1045 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.129", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.364" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1045 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.354", [3 x i8] }
%"class.WTF::RefCounted.1506" = type { %"class.base::RefCounted.1507" }
%"class.base::RefCounted.1507" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1534" = type { %"class.std::__1::__compressed_pair.1535" }
%"class.std::__1::__compressed_pair.1535" = type { %"struct.std::__1::__compressed_pair_elem.1536" }
%"struct.std::__1::__compressed_pair_elem.1536" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1388 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1104", %"class.std::__1::unique_ptr.1106" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.736", %"class.blink::DataRef.816", %"class.blink::DataRef.820", %"class.blink::DataRef.1020", %"class.blink::DataRef.1087", %"class.blink::DataRef.1091", %"class.blink::DataRef.1095", %"class.blink::DataRef.1099", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.671 }
%class.scoped_refptr.671 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.672", %"class.blink::DataRef.674", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.672" = type { %"class.base::RefCounted.673" }
%"class.base::RefCounted.673" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.674" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.676", %"class.blink::Font" }
%"class.WTF::RefCounted.676" = type { %"class.base::RefCounted.677" }
%"class.base::RefCounted.677" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.709 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.679, %class.scoped_refptr.687, %class.scoped_refptr.697, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.708 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.678 }
%class.scoped_refptr.678 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1121", [4 x i8] }>
%"class.WTF::RefCounted.1121" = type { %"class.base::RefCounted.1122" }
%"class.base::RefCounted.1122" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.679 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.685", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.680" }
%"class.WTF::Vector.680" = type { %"class.WTF::VectorBuffer.681" }
%"class.WTF::VectorBuffer.681" = type { %"class.WTF::VectorBufferBase.682" }
%"class.WTF::VectorBufferBase.682" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.685" = type { %"class.base::RefCounted.686" }
%"class.base::RefCounted.686" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.687 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.688", %"class.WTF::RefCounted.695", [4 x i8] }>
%"class.blink::FontSettings.688" = type { %"class.WTF::Vector.689" }
%"class.WTF::Vector.689" = type { %"class.WTF::VectorBuffer.690" }
%"class.WTF::VectorBuffer.690" = type { %"class.WTF::VectorBufferBase.691" }
%"class.WTF::VectorBufferBase.691" = type { %"class.blink::FontTagValuePair.692"*, i32, i32 }
%"class.blink::FontTagValuePair.692" = type { i32, float }
%"class.WTF::RefCounted.695" = type { %"class.base::RefCounted.696" }
%"class.base::RefCounted.696" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.697 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.698", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.705, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.698" = type { %"class.base::RefCounted.699" }
%"class.base::RefCounted.699" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.705 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.706", [4 x i8] }>
%"class.WTF::RefCounted.706" = type { %"class.base::RefCounted.707" }
%"class.base::RefCounted.707" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.708 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.709 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.710", %"class.WTF::Vector.712", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.710" = type { %"class.base::RefCounted.711" }
%"class.base::RefCounted.711" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.712" = type { %"class.WTF::VectorBuffer.713" }
%"class.WTF::VectorBuffer.713" = type { %"class.WTF::VectorBufferBase.714", [8 x i8] }
%"class.WTF::VectorBufferBase.714" = type { %class.scoped_refptr.715*, i32, i32 }
%class.scoped_refptr.715 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.716", [4 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.722", %class.scoped_refptr.729, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.716" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.720 }
%union.anon.720 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.721, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.129" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.721 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.725, %class.scoped_refptr.725 }
%class.scoped_refptr.725 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.729 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.730", [4 x i8] }>
%"class.WTF::RefCounted.730" = type { %"class.base::RefCounted.731" }
%"class.base::RefCounted.731" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.732" }
%"class.blink::PersistentBase.732" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.733" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.733" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.735, i8, i8, i8, i8 }>
%union.anon.735 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.736" = type { %class.scoped_refptr.737 }
%class.scoped_refptr.737 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.738", [4 x i8], %"class.blink::DataRef.740", %"class.blink::DataRef.781", %"class.WTF::Vector.785", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.789, %class.scoped_refptr.798, %"class.blink::Persistent.806", %"class.blink::Persistent.808", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.738" = type { %"class.base::RefCounted.739" }
%"class.base::RefCounted.739" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.740" = type { %class.scoped_refptr.741 }
%class.scoped_refptr.741 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.742", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.744, %class.scoped_refptr.751, %"class.blink::Persistent.768", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.742" = type { %"class.base::RefCounted.743" }
%"class.base::RefCounted.743" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.744 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.745", %"class.WTF::Vector.746" }
%"class.base::RefCountedThreadSafe.745" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.746" = type { %"class.WTF::VectorBuffer.747" }
%"class.WTF::VectorBuffer.747" = type { %"class.WTF::VectorBufferBase.748" }
%"class.WTF::VectorBufferBase.748" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.751 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.752", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.752" = type { %"class.base::RefCounted.753" }
%"class.base::RefCounted.753" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.754", %"class.blink::Persistent.759" }
%"class.WTF::HashMap.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"struct.WTF::KeyValuePair.758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.758" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1624 }
%class.scoped_refptr.1624 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1625", %"class.WTF::Vector.1003", %"class.WTF::Vector.1627", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1625" = type { %"class.base::RefCounted.1626" }
%"class.base::RefCounted.1626" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1003" = type { %"class.WTF::VectorBuffer.1004" }
%"class.WTF::VectorBuffer.1004" = type { %"class.WTF::VectorBufferBase.1005" }
%"class.WTF::VectorBufferBase.1005" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1627" = type { %"class.WTF::VectorBuffer.1628" }
%"class.WTF::VectorBuffer.1628" = type { %"class.WTF::VectorBufferBase.1629" }
%"class.WTF::VectorBufferBase.1629" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1630 }
%union.anon.1630 = type { double }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::HeapHashMap.761"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.761" = type { %"class.WTF::HashMap.764" }
%"class.WTF::HashMap.764" = type { %"class.WTF::HashTable.765" }
%"class.WTF::HashTable.765" = type <{ %"struct.WTF::KeyValuePair.767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.767" = type opaque
%"class.blink::Persistent.768" = type { %"class.blink::PersistentBase.769" }
%"class.blink::PersistentBase.769" = type { %"class.blink::HeapVector.770"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.770" = type { %"class.WTF::Vector.773" }
%"class.WTF::Vector.773" = type { %"class.WTF::VectorBuffer.774" }
%"class.WTF::VectorBuffer.774" = type { %"class.WTF::VectorBufferBase.775" }
%"class.WTF::VectorBufferBase.775" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.776", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.781" = type { %class.scoped_refptr.782 }
%class.scoped_refptr.782 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.783", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.789 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.790", %"class.WTF::Vector.792" }
%"class.WTF::RefCounted.790" = type { %"class.base::RefCounted.791" }
%"class.base::RefCounted.791" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.792" = type { %"class.WTF::VectorBuffer.793" }
%"class.WTF::VectorBuffer.793" = type { %"class.WTF::VectorBufferBase.794" }
%"class.WTF::VectorBufferBase.794" = type { %"struct.std::__1::pair.795"*, i32, i32 }
%"struct.std::__1::pair.795" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.798 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.799", [4 x i8], %"class.WTF::Vector.801" }
%"class.WTF::RefCounted.799" = type { %"class.base::RefCounted.800" }
%"class.base::RefCounted.800" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.801" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.803", [28 x i8] }>
%"class.WTF::VectorBufferBase.803" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.806" = type { %"class.blink::PersistentBase.807" }
%"class.blink::PersistentBase.807" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.808" = type { %"class.blink::PersistentBase.809" }
%"class.blink::PersistentBase.809" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.812", %"class.blink::Member.814" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.816" = type { %class.scoped_refptr.817 }
%class.scoped_refptr.817 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.818", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.818" = type { %"class.base::RefCounted.819" }
%"class.base::RefCounted.819" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.820" = type { %class.scoped_refptr.821 }
%class.scoped_refptr.821 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.822", [4 x i8], %"class.blink::DataRef.824", %"class.blink::DataRef.890", %"class.blink::TransformOperations", %class.scoped_refptr.798, %"class.blink::Persistent.1014", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.822" = type { %"class.base::RefCounted.823" }
%"class.base::RefCounted.823" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.824" = type { %class.scoped_refptr.825 }
%class.scoped_refptr.825 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.826", [4 x i8], %"class.blink::DataRef.828", %"class.blink::Persistent.866", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.826" = type { %"class.base::RefCounted.827" }
%"class.base::RefCounted.827" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.828" = type { %class.scoped_refptr.829 }
%class.scoped_refptr.829 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.830", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.848, %class.scoped_refptr.851, %class.scoped_refptr.854, %class.scoped_refptr.857, %class.scoped_refptr.858, %class.scoped_refptr.859, %"class.blink::Persistent.866", %"class.blink::Persistent.881", %"class.absl::optional.885", %"class.absl::optional.885", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.830" = type { %"class.base::RefCounted.831" }
%"class.base::RefCounted.831" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.832", %"class.std::__1::unique_ptr.837" }
%"class.WTF::Vector.832" = type { %"class.WTF::VectorBuffer.833" }
%"class.WTF::VectorBuffer.833" = type { %"class.WTF::VectorBufferBase.834" }
%"class.WTF::VectorBufferBase.834" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.840", %"class.WTF::Vector.832", i32, i32 }
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842" }
%"class.WTF::VectorBufferBase.842" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.848 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.849", [4 x i8] }>
%"class.WTF::RefCounted.849" = type { %"class.base::RefCounted.850" }
%"class.base::RefCounted.850" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.851 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.852", [4 x i8] }>
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.854 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.855" }>
%"class.WTF::RefCounted.855" = type { %"class.base::RefCounted.856" }
%"class.base::RefCounted.856" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.857 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.858 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.859 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.860", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.862" }
%"class.blink::DataRef.862" = type { %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.806", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.864" }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.881" = type { %"class.blink::PersistentBase.882" }
%"class.blink::PersistentBase.882" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.851, %"class.blink::Member.776", i32, [4 x i8] }>
%"class.absl::optional.885" = type { %"class.absl::optional_internal::optional_data.886" }
%"class.absl::optional_internal::optional_data.886" = type { %"class.absl::optional_internal::optional_data_base.887" }
%"class.absl::optional_internal::optional_data_base.887" = type { %"class.absl::optional_internal::optional_data_dtor_base.888" }
%"class.absl::optional_internal::optional_data_dtor_base.888" = type { i8, [3 x i8], %union.anon.889 }
%union.anon.889 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.866" = type { %"class.blink::PersistentBase.867" }
%"class.blink::PersistentBase.867" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.870" }
%"class.blink::HeapVector.870" = type { %"class.WTF::Vector.873" }
%"class.WTF::Vector.873" = type { %"class.WTF::VectorBuffer.874" }
%"class.WTF::VectorBuffer.874" = type { %"class.WTF::VectorBufferBase.875" }
%"class.WTF::VectorBufferBase.875" = type { %"class.blink::Member.876"*, i32, i32 }
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.890" = type { %class.scoped_refptr.891 }
%class.scoped_refptr.891 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.892", %"class.blink::DataRef.894", %"class.blink::DataRef.898", %"class.blink::DataRef.907", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.926", %"class.std::__1::unique_ptr.937", %"class.std::__1::unique_ptr.975", %"class.std::__1::unique_ptr.986", %"class.std::__1::unique_ptr.997", %"class.WTF::Vector.1003", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.892" = type { %"class.base::RefCounted.893" }
%"class.base::RefCounted.893" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.894" = type { %class.scoped_refptr.895 }
%class.scoped_refptr.895 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.896", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.896" = type { %"class.base::RefCounted.897" }
%"class.base::RefCounted.897" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.898" = type { %class.scoped_refptr.899 }
%class.scoped_refptr.899 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.900", [4 x i8], %"class.WTF::Vector.902", i8, [7 x i8] }>
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.902" = type { %"class.WTF::VectorBuffer.903" }
%"class.WTF::VectorBuffer.903" = type { %"class.WTF::VectorBufferBase.904" }
%"class.WTF::VectorBufferBase.904" = type { i32*, i32, i32 }
%"class.blink::DataRef.907" = type { %class.scoped_refptr.908 }
%class.scoped_refptr.908 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.909", [4 x i8], %"class.WTF::HashMap.911", %"class.WTF::HashMap.911", %"class.WTF::HashMap.911", %"class.WTF::HashMap.911", %"class.WTF::HashMap.911", %"class.WTF::HashMap.911", %"class.WTF::HashMap.916", %"class.WTF::HashMap.916", %"class.WTF::HashMap.916", %"class.WTF::HashMap.916", %"class.WTF::HashMap.921", %"class.WTF::Vector.832", %"class.WTF::Vector.832", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.909" = type { %"class.base::RefCounted.910" }
%"class.base::RefCounted.910" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.911" = type { %"class.WTF::HashTable.912" }
%"class.WTF::HashTable.912" = type <{ %"struct.WTF::KeyValuePair.915"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.915" = type { %"class.WTF::String", %"class.WTF::Vector.1614" }
%"class.WTF::Vector.1614" = type { %"class.WTF::VectorBuffer.1615" }
%"class.WTF::VectorBuffer.1615" = type { %"class.WTF::VectorBufferBase.1616" }
%"class.WTF::VectorBufferBase.1616" = type { i64*, i32, i32 }
%"class.WTF::HashMap.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"struct.WTF::KeyValuePair.920"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.920" = type { i64, %"class.WTF::Vector.1003" }
%"class.WTF::HashMap.921" = type { %"class.WTF::HashTable.922" }
%"class.WTF::HashTable.922" = type <{ %"struct.WTF::KeyValuePair.925"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.925" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.929" }
%"class.WTF::HashMap.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"struct.WTF::KeyValuePair.933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.933" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1619", %"class.absl::optional.1619", %"class.absl::optional.1619" }
%"class.absl::optional.1619" = type { %"class.absl::optional_internal::optional_data.1620" }
%"class.absl::optional_internal::optional_data.1620" = type { %"class.absl::optional_internal::optional_data_base.1621" }
%"class.absl::optional_internal::optional_data_base.1621" = type { %"class.absl::optional_internal::optional_data_dtor_base.1622" }
%"class.absl::optional_internal::optional_data_dtor_base.1622" = type { i8, %union.anon.1623 }
%union.anon.1623 = type { i32 }
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.785", %"class.WTF::Vector.952", %"class.WTF::Vector.940", %"class.WTF::Vector.957", %"class.WTF::Vector.962", %"class.WTF::Vector.967" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.940", %"class.WTF::Vector.940", %"class.WTF::Vector.945" }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %class.scoped_refptr.948*, i32, i32 }
%class.scoped_refptr.948 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.949" }
%"class.base::RefCountedThreadSafe.949" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.952" = type { %"class.WTF::VectorBuffer.953" }
%"class.WTF::VectorBuffer.953" = type { %"class.WTF::VectorBufferBase.954" }
%"class.WTF::VectorBufferBase.954" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.940" = type { %"class.WTF::VectorBuffer.941" }
%"class.WTF::VectorBuffer.941" = type { %"class.WTF::VectorBufferBase.942" }
%"class.WTF::VectorBufferBase.942" = type { double*, i32, i32 }
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959" }
%"class.WTF::VectorBufferBase.959" = type { i32*, i32, i32 }
%"class.WTF::Vector.962" = type { %"class.WTF::VectorBuffer.963" }
%"class.WTF::VectorBuffer.963" = type { %"class.WTF::VectorBufferBase.964" }
%"class.WTF::VectorBufferBase.964" = type { i32*, i32, i32 }
%"class.WTF::Vector.967" = type { %"class.WTF::VectorBuffer.968" }
%"class.WTF::VectorBuffer.968" = type { %"class.WTF::VectorBufferBase.969" }
%"class.WTF::VectorBufferBase.969" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.978" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.986" = type { %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.989" }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991" }
%"class.WTF::VectorBufferBase.991" = type { %"class.blink::Persistent.806"*, i32, i32 }
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.806", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1008" }
%"class.WTF::Vector.1008" = type { %"class.WTF::VectorBuffer.1009" }
%"class.WTF::VectorBuffer.1009" = type { %"class.WTF::VectorBufferBase.1010" }
%"class.WTF::VectorBufferBase.1010" = type { %class.scoped_refptr.1011*, i32, i32 }
%class.scoped_refptr.1011 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.855", [4 x i8] }>
%"class.blink::Persistent.1014" = type { %"class.blink::PersistentBase.1015" }
%"class.blink::PersistentBase.1015" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1018" }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1020" = type { %class.scoped_refptr.1021 }
%class.scoped_refptr.1021 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1022", [4 x i8], %"class.blink::DataRef.1024", %"class.blink::DataRef.1028", %"class.blink::DataRef.1049", %"class.blink::DataRef.1067", %"class.blink::DataRef.1079", %"class.blink::DataRef.1083", %class.scoped_refptr.1053, i32, [4 x i8] }>
%"class.WTF::RefCounted.1022" = type { %"class.base::RefCounted.1023" }
%"class.base::RefCounted.1023" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1024" = type { %class.scoped_refptr.1025 }
%class.scoped_refptr.1025 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1026", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1026" = type { %"class.base::RefCounted.1027" }
%"class.base::RefCounted.1027" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1028" = type { %class.scoped_refptr.1029 }
%class.scoped_refptr.1029 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1030", %class.scoped_refptr.1032, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1030" = type { %"class.base::RefCounted.1031" }
%"class.base::RefCounted.1031" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1032 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1033", %"class.std::__1::unique_ptr.1039", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.852" }>
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1049" = type { %class.scoped_refptr.1050 }
%class.scoped_refptr.1050 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1051", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1051" = type { %"class.base::RefCounted.1052" }
%"class.base::RefCounted.1052" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1053, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1067" = type { %class.scoped_refptr.1068 }
%class.scoped_refptr.1068 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1069", [4 x i8], %class.scoped_refptr.1071, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1069" = type { %"class.base::RefCounted.1070" }
%"class.base::RefCounted.1070" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1071 = type { %"class.base::RefCountedData.1072"* }
%"class.base::RefCountedData.1072" = type { %"class.base::RefCountedThreadSafe.1073", %"class.WTF::Vector.1074" }
%"class.base::RefCountedThreadSafe.1073" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1079" = type { %class.scoped_refptr.1080 }
%class.scoped_refptr.1080 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1081", %class.scoped_refptr.1053, %class.scoped_refptr.1053, %class.scoped_refptr.1053 }
%"class.WTF::RefCounted.1081" = type { %"class.base::RefCounted.1082" }
%"class.base::RefCounted.1082" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1083" = type { %class.scoped_refptr.1084 }
%class.scoped_refptr.1084 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1085", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1085" = type { %"class.base::RefCounted.1086" }
%"class.base::RefCounted.1086" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1053 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1054", %"class.blink::Persistent.1056", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1054" = type { %"class.base::RefCounted.1055" }
%"class.base::RefCounted.1055" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1056" = type { %"class.blink::PersistentBase.1057" }
%"class.blink::PersistentBase.1057" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.59", %"class.blink::HeapHashMap.1060" }
%"class.blink::HeapHashMap.1060" = type { %"class.WTF::HashMap.1063" }
%"class.WTF::HashMap.1063" = type { %"class.WTF::HashTable.1064" }
%"class.WTF::HashTable.1064" = type <{ %"struct.WTF::KeyValuePair.1066"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1066" = type opaque
%"class.blink::DataRef.1087" = type { %class.scoped_refptr.1088 }
%class.scoped_refptr.1088 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1089", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1089" = type { %"class.base::RefCounted.1090" }
%"class.base::RefCounted.1090" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1091" = type { %class.scoped_refptr.1092 }
%class.scoped_refptr.1092 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1093", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1093" = type { %"class.base::RefCounted.1094" }
%"class.base::RefCounted.1094" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1095" = type { %class.scoped_refptr.1096 }
%class.scoped_refptr.1096 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1097", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1097" = type { %"class.base::RefCounted.1098" }
%"class.base::RefCounted.1098" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1099" = type { %class.scoped_refptr.1100 }
%class.scoped_refptr.1100 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1101", %class.scoped_refptr.1103 }
%"class.WTF::RefCounted.1101" = type { %"class.base::RefCounted.1102" }
%"class.base::RefCounted.1102" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1103 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1119", %"class.blink::StyleVariables", %class.scoped_refptr.1103 }
%"class.WTF::RefCounted.1119" = type { %"class.base::RefCounted.1120" }
%"class.base::RefCounted.1120" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1109" }
%"class.std::__1::unique_ptr.1109" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"class.WTF::Vector.1112"* }
%"class.WTF::Vector.1112" = type { %"class.WTF::VectorBuffer.1634" }
%"class.WTF::VectorBuffer.1634" = type { %"class.WTF::VectorBufferBase.1635", [32 x i8] }
%"class.WTF::VectorBufferBase.1635" = type { %class.scoped_refptr.1388*, i32, i32 }
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1646", %"class.blink::HeapHashSet.1655" }
%"class.blink::HeapVector.1646" = type { %"class.WTF::Vector.1649" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"class.blink::Member.1652"*, i32, i32 }
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1655" = type { %"class.WTF::HashSet.1658" }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::Member.1652"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::HeapHashSet.1665"* }
%"class.blink::HeapHashSet.1665" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1123" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1123" = type { %"class.v8::TracedReference.1124" }
%"class.v8::TracedReference.1124" = type { %"class.v8::BasicTracedReference.1125" }
%"class.v8::BasicTracedReference.1125" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.1666" }
%"class.WTF::Vector.1666" = type { %"class.WTF::VectorBuffer.1667" }
%"class.WTF::VectorBuffer.1667" = type { %"class.WTF::VectorBufferBase.1668", [64 x i8] }
%"class.WTF::VectorBufferBase.1668" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::MouseEvent" = type <{ %"class.blink::UIEventWithKeyState.base", [4 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i8, [7 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i32, i16, i16, %"class.blink::Member.1133", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.1139", i32, %"class.blink::Member.1340" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1133", %"class.blink::Member.1133", %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1128" }
%"class.absl::optional.1128" = type { %"class.absl::optional_internal::optional_data.1129" }
%"class.absl::optional_internal::optional_data.1129" = type { %"class.absl::optional_internal::optional_data_base.1130" }
%"class.absl::optional_internal::optional_data_base.1130" = type { %"class.absl::optional_internal::optional_data_dtor_base.1131" }
%"class.absl::optional_internal::optional_data_dtor_base.1131" = type { i8, %union.anon.1132 }
%union.anon.1132 = type { i64 }
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::Event"* }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1162", %"class.blink::Member.1164", %"class.blink::Member.1166", %"class.blink::Member.1168", i8, %"class.WTF::Vector.1170" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1155" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1143" }
%"class.blink::HeapVector.1143" = type { %"class.WTF::Vector.1146" }
%"class.WTF::Vector.1146" = type { %"class.WTF::VectorBuffer.1147" }
%"class.WTF::VectorBuffer.1147" = type { %"class.WTF::VectorBufferBase.1148", [32 x i8] }
%"class.WTF::VectorBufferBase.1148" = type { %"struct.std::__1::pair.1149"*, i32, i32 }
%"struct.std::__1::pair.1149" = type { %"class.WTF::AtomicString", %"class.blink::Member.1150" }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::HeapVector.1152"* }
%"class.blink::HeapVector.1152" = type opaque
%"class.std::__1::unique_ptr.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.WTF::Vector.1158"* }
%"class.WTF::Vector.1158" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1345", %"class.blink::Member.1347", %"class.blink::Member.1139", i8, i32, i8, i32, %"class.blink::Member.1349", %"class.blink::Member.1164", %"class.blink::FrameLifecycle", %"class.blink::Member.1162", %"class.blink::Member.1162", %"class.blink::Member.1162", %"class.blink::Member.1162", %"class.blink::Member.1162", %"class.blink::Member.1162", %"class.blink::Member.1351", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1361", i8, %"class.base::UnguessableToken", %"class.absl::optional.1363", %"class.absl::optional.1368", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1162", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1162", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1353" }
%"class.std::__1::vector.1353" = type { %"class.std::__1::__vector_base.1354" }
%"class.std::__1::__vector_base.1354" = type { %"struct.std::__1::pair.1355"*, %"struct.std::__1::pair.1355"*, %"class.std::__1::__compressed_pair.1356" }
%"struct.std::__1::pair.1355" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"struct.std::__1::pair.1355"* }
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1363" = type { %"class.absl::optional_internal::optional_data.1364" }
%"class.absl::optional_internal::optional_data.1364" = type { %"class.absl::optional_internal::optional_data_base.1365" }
%"class.absl::optional_internal::optional_data_base.1365" = type { %"class.absl::optional_internal::optional_data_dtor_base.1366" }
%"class.absl::optional_internal::optional_data_dtor_base.1366" = type { i8, %union.anon.1367 }
%union.anon.1367 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1368" = type { %"class.absl::optional_internal::optional_data.1369" }
%"class.absl::optional_internal::optional_data.1369" = type { %"class.absl::optional_internal::optional_data_base.1370" }
%"class.absl::optional_internal::optional_data_base.1370" = type { %"class.absl::optional_internal::optional_data_dtor_base.1371" }
%"class.absl::optional_internal::optional_data_dtor_base.1371" = type { i8, %union.anon.1372 }
%union.anon.1372 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1373" }
%"class.blink::HeapHashSet.1373" = type { %"class.WTF::HashSet.1376" }
%"class.WTF::HashSet.1376" = type { %"class.WTF::HashTable.1377" }
%"class.WTF::HashTable.1377" = type <{ %"class.blink::WeakMember.1379"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1379" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1170" = type { %"class.WTF::VectorBuffer.1171" }
%"class.WTF::VectorBuffer.1171" = type { %"class.WTF::VectorBufferBase.1172" }
%"class.WTF::VectorBufferBase.1172" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1332" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1173, %"class.std::__1::unique_ptr.1282", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1175, i32 }>
%class.scoped_refptr.1173 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1175, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1248", %"class.absl::optional.1253", %"class.absl::optional.1208", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1273", i8, [7 x i8], %class.scoped_refptr.1175, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1174" }>
%"class.base::RefCountedThreadSafe.1174" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1176", %"class.std::__1::unique_ptr.1182", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1188" }
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1182" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1188" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1175, %"class.std::__1::unique_ptr.1189", %"class.absl::optional.1198", %"struct.std::__1::atomic.354", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1208", %"class.std::__1::unique_ptr.1213", i8, i64, %class.scoped_refptr.1244, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1246", %"class.base::WeakPtrFactory.1247" }
%"class.std::__1::unique_ptr.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1175, i8, %"class.mojo::ScopedHandleBase.1192", %class.scoped_refptr.1193, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.1194" }
%"class.mojo::ScopedHandleBase.1192" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1193 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.1194" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1198" = type { %"class.absl::optional_internal::optional_data.1199" }
%"class.absl::optional_internal::optional_data.1199" = type { %"class.absl::optional_internal::optional_data_base.1200" }
%"class.absl::optional_internal::optional_data_base.1200" = type { %"class.absl::optional_internal::optional_data_dtor_base.1201" }
%"class.absl::optional_internal::optional_data_dtor_base.1201" = type { i8, %union.anon.1202 }
%union.anon.1202 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1203", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1203" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1216", i8, i64, %class.scoped_refptr.1217, %class.scoped_refptr.1239 }
%"class.base::RepeatingCallback.1216" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1217 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1218", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.1228", i8, [7 x i8] }>
%"class.base::RefCounted.1218" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1219 }
%class.scoped_refptr.1219 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1220", %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.std::__1::map.1228" = type { %"class.std::__1::__tree.1229" }
%"class.std::__1::__tree.1229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1230", %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%class.scoped_refptr.1239 = type { %"class.base::RefCountedData.1240"* }
%"class.base::RefCountedData.1240" = type opaque
%class.scoped_refptr.1244 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1245 }
%class.scoped_refptr.1245 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1342", [4 x i8], %"class.base::RepeatingCallback.1285", %class.scoped_refptr.1175, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1342" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.1285" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.1246" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1247" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1248" = type { %"class.absl::optional_internal::optional_data.1249" }
%"class.absl::optional_internal::optional_data.1249" = type { %"class.absl::optional_internal::optional_data_base.1250" }
%"class.absl::optional_internal::optional_data_base.1250" = type { %"class.absl::optional_internal::optional_data_dtor_base.1251" }
%"class.absl::optional_internal::optional_data_dtor_base.1251" = type { i8, %union.anon.1252 }
%union.anon.1252 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1253" = type { %"class.absl::optional_internal::optional_data.1254" }
%"class.absl::optional_internal::optional_data.1254" = type { %"class.absl::optional_internal::optional_data_base.1255" }
%"class.absl::optional_internal::optional_data_base.1255" = type { %"class.absl::optional_internal::optional_data_dtor_base.1256" }
%"class.absl::optional_internal::optional_data_dtor_base.1256" = type { i8, [7 x i8], %union.anon.1257 }
%union.anon.1257 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1208" = type { %"class.absl::optional_internal::optional_data.1209" }
%"class.absl::optional_internal::optional_data.1209" = type { %"class.absl::optional_internal::optional_data_base.1210" }
%"class.absl::optional_internal::optional_data_base.1210" = type { %"class.absl::optional_internal::optional_data_dtor_base.1211" }
%"class.absl::optional_internal::optional_data_dtor_base.1211" = type { i8, %union.anon.1212 }
%union.anon.1212 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1258 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1258 = type { %"class.std::__1::map.1261" }
%"class.std::__1::map.1261" = type { %"class.std::__1::__tree.1262" }
%"class.std::__1::__tree.1262" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1263", %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1272"*, i64 }
%"class.std::__1::unique_ptr.1272" = type opaque
%"class.std::__1::map.1273" = type { %"class.std::__1::__tree.1274" }
%"class.std::__1::__tree.1274" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1275", %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.1285", %"class.base::OnceCallback.1286", %"class.absl::optional.1287", %"class.absl::optional.1292", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1299", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1307", %"class.std::__1::map.1318", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1327", i8, %class.scoped_refptr.1175, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1328" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.1286" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1287" = type { %"class.absl::optional_internal::optional_data.1288" }
%"class.absl::optional_internal::optional_data.1288" = type { %"class.absl::optional_internal::optional_data_base.1289" }
%"class.absl::optional_internal::optional_data_base.1289" = type { %"class.absl::optional_internal::optional_data_dtor_base.1290" }
%"class.absl::optional_internal::optional_data_dtor_base.1290" = type { i8, %union.anon.1291 }
%union.anon.1291 = type { %"class.base::TimeDelta" }
%"class.absl::optional.1292" = type { %"class.absl::optional_internal::optional_data.1293" }
%"class.absl::optional_internal::optional_data.1293" = type { %"class.absl::optional_internal::optional_data_base.1294" }
%"class.absl::optional_internal::optional_data_base.1294" = type { %"class.absl::optional_internal::optional_data_dtor_base.1295" }
%"class.absl::optional_internal::optional_data_dtor_base.1295" = type { i8, %union.anon.1296 }
%union.anon.1296 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1175, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1297" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.1297" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1298 }
%class.scoped_refptr.1298 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1299" = type { %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1302", %class.scoped_refptr.1303 }
%"class.base::RepeatingCallback.1302" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1303 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1174", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.1307" = type { %"class.std::__1::__tree.1308" }
%"class.std::__1::__tree.1308" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1309", %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.std::__1::map.1318" = type { %"class.std::__1::__tree.1319" }
%"class.std::__1::__tree.1319" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1320", %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.base::OnceCallback.1327" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1328" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1175 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::DoublePoint" = type { double, double }
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::EventTarget"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.399", %"class.blink::Member.1380", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.1380" = type { %"class.blink::MemberBase.1381" }
%"class.blink::MemberBase.1381" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::SliderThumbElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.1382", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.std::__1::unique_ptr.1382" = type { %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ScopedEventQueue" = type <{ %"class.blink::Persistent.1672", i32, [4 x i8] }>
%"class.blink::Persistent.1672" = type { %"class.blink::PersistentBase.1673" }
%"class.blink::PersistentBase.1673" = type { %"class.blink::HeapVector.1674"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1674" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::SliderTrackElement" = type { %"class.blink::HTMLDivElement" }
%"class.blink::SliderContainerElement" = type { %"class.blink::HTMLDivElement", i8, i8, i32, %"class.blink::LayoutPoint" }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1543, %"class.WTF::Vector.1544", %"class.std::__1::unique_ptr.1549", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1570, %"class.blink::Persistent.1571" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1543 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1544" = type { %"class.WTF::VectorBuffer.1545" }
%"class.WTF::VectorBuffer.1545" = type { %"class.WTF::VectorBufferBase.1546", [8 x i8] }
%"class.WTF::VectorBufferBase.1546" = type { %class.scoped_refptr.1543*, i32, i32 }
%"class.std::__1::unique_ptr.1549" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1552", %"class.absl::optional.1557", %"class.absl::optional.1562" }
%"class.absl::optional.1552" = type { %"class.absl::optional_internal::optional_data.1553" }
%"class.absl::optional_internal::optional_data.1553" = type { %"class.absl::optional_internal::optional_data_base.1554" }
%"class.absl::optional_internal::optional_data_base.1554" = type { %"class.absl::optional_internal::optional_data_dtor_base.1555" }
%"class.absl::optional_internal::optional_data_dtor_base.1555" = type { i8, %union.anon.1556 }
%union.anon.1556 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1557" = type { %"class.absl::optional_internal::optional_data.1558" }
%"class.absl::optional_internal::optional_data.1558" = type { %"class.absl::optional_internal::optional_data_base.1559" }
%"class.absl::optional_internal::optional_data_base.1559" = type { %"class.absl::optional_internal::optional_data_dtor_base.1560" }
%"class.absl::optional_internal::optional_data_dtor_base.1560" = type { i8, [3 x i8], %union.anon.1561 }
%union.anon.1561 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1562" = type { %"class.absl::optional_internal::optional_data.1563" }
%"class.absl::optional_internal::optional_data.1563" = type { %"class.absl::optional_internal::optional_data_base.1564" }
%"class.absl::optional_internal::optional_data_base.1564" = type { %"class.absl::optional_internal::optional_data_dtor_base.1565" }
%"class.absl::optional_internal::optional_data_dtor_base.1565" = type { i8, %union.anon.1566 }
%union.anon.1566 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1570 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.1571" = type { %"class.blink::PersistentBase.1572" }
%"class.blink::PersistentBase.1572" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1575", %"struct.blink::PhysicalRect", %"class.blink::Member.1585" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.std::__1::unique_ptr.1575" = type { %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.1577" }
%"struct.std::__1::__compressed_pair_elem.1577" = type { %"class.WTF::HashSet.1578"* }
%"class.WTF::HashSet.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%class.anon.1675 = type { %"class.blink::LayoutObject"*, i8** }
%"class.blink::HTMLDataListElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLDataListOptionsCollection" = type { %"class.blink::HTMLCollection" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.1587", %"class.blink::CollectionItemsCache" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.44", i16 }>
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.1591", %"class.blink::HeapHashMap.1591" }
%"class.blink::HeapHashMap.1591" = type { %"class.WTF::HashMap.1594" }
%"class.WTF::HashMap.1594" = type { %"class.WTF::HashTable.1595" }
%"class.WTF::HashTable.1595" = type <{ %"struct.WTF::KeyValuePair.1597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1597" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.1598" }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::HeapVector"* }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.59", i32, i32 }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.1600", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::FormData" = type opaque
%"class.absl::optional.1602" = type { %"class.absl::optional_internal::optional_data.1603" }
%"class.absl::optional_internal::optional_data.1603" = type { %"class.absl::optional_internal::optional_data_base.1604" }
%"class.absl::optional_internal::optional_data_base.1604" = type { %"class.absl::optional_internal::optional_data_dtor_base.1605" }
%"class.absl::optional_internal::optional_data_dtor_base.1605" = type { i8, %union.anon.1606 }
%union.anon.1606 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1607" }
%"class.base::time_internal::TimeBase.1607" = type { i64 }
%"class.blink::FileList" = type opaque
%"class.blink::DragData" = type opaque
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ClickHandlingState" = type { %"class.blink::EventDispatchHandlingState", i8, i8, %"class.blink::Member" }
%"class.blink::EventDispatchHandlingState" = type { i32 (...)** }
%"class.blink::BeforeTextInsertedEvent" = type opaque
%"class.blink::AXObject" = type opaque
%"class.blink::FormControlState" = type opaque
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1689" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1676", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.1676" = type { %"class.std::__1::__vector_base.1677" }
%"class.std::__1::__vector_base.1677" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1684" }
%"class.std::__1::__compressed_pair.1684" = type { %"struct.std::__1::__compressed_pair_elem.1685" }
%"struct.std::__1::__compressed_pair_elem.1685" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1678", i64, i64 }
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN5blink14RangeInputTypeD2Ev = comdat any

$_ZN5blink14RangeInputTypeD0Ev = comdat any

$_ZThn16_N5blink14RangeInputTypeD1Ev = comdat any

$_ZThn16_N5blink14RangeInputTypeD0Ev = comdat any

$_ZN5blink13InputTypeView21EnsureFallbackContentEv = comdat any

$_ZN5blink13InputTypeView20EnsurePrimaryContentEv = comdat any

$_ZNK5blink13InputTypeView18HasFallbackContentEv = comdat any

$_ZNK5blink13InputTypeView17FocusedFieldIndexEv = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_18SliderThumbElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_18SliderTrackElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_22SliderContainerElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm = comdat any

$_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNSt3__16__sortIRPFbRKN5blink7DecimalES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink7DecimalES4_EPS2_EEbT0_S9_T_ = comdat any

$_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14RangeInputTypeE = hidden unnamed_addr constant { [102 x i8*], [60 x i8*] } { [102 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.blink::Visitor"*)* @_ZNK5blink14RangeInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::InputTypeView"* (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType10CreateViewEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::RangeInputType"*)* @_ZNK5blink14RangeInputType15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsInteractiveContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12IsTextButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsTextFieldEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsFormDataAppendableEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FormData"*)* @_ZNK5blink9InputType16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType21ResultForDialogSubmitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24ValueInFilenameValueModeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12DefaultLabelEv to i8*), i8* bitcast (i32 (%"class.blink::RangeInputType"*)* @_ZNK5blink14RangeInputType12GetValueModeEv to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType11ValueAsDateEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.absl::optional.1602"*, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE to i8*), i8* bitcast (double (%"class.blink::RangeInputType"*)* @_ZNK5blink14RangeInputType13ValueAsDoubleEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, double, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink14RangeInputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZNK5blink9InputType14ReadingCheckedEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, i1)* @_ZN5blink9InputType21WillUpdateCheckednessEb to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType18SupportsValidationEv to i8*), i8* bitcast (i1 (%"class.blink::RangeInputType"*, %"class.WTF::String"*)* @_ZNK5blink14RangeInputType15TypeMismatchForERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::RangeInputType"*)* @_ZNK5blink14RangeInputType16SupportsRequiredEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType12ValueMissingERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*)* @_ZNK5blink9InputType21DefaultValueForStepUpEv to i8*), i8* bitcast (void (%"class.blink::StepRange"*, %"class.blink::RangeInputType"*, i32)* @_ZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12BadInputTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16TypeMismatchTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16ValueMissingTextEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType17CanSetStringValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12VisibleValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::RangeInputType"*, %"class.WTF::String"*)* @_ZNK5blink14RangeInputType13SanitizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.WTF::String"*)* @_ZNK5blink14RangeInputType20WarnIfValueIsInvalidERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20LayoutObjectIsNeededEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType10CountUsageEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27ShouldRespectAlignAttributeEv to i8*), i8* bitcast (%"class.blink::FileList"* (%"class.blink::InputType"*)* @_ZN5blink9InputType5FilesEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType8SetFilesEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::Vector.1003"*)* @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)* @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZN5blink9InputType19DroppedFileSystemIdEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20CanSetSuggestedValueEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)* @_ZN5blink9InputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (i1 (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType26ShouldRespectListAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType14IsEnumeratableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType11IsCheckableEv to i8*), i8* bitcast (i1 (%"class.blink::RangeInputType"*)* @_ZNK5blink14RangeInputType11IsSteppableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MaxLengthEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MinLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19SupportsPlaceholderEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsReadOnlyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::RangeInputType"*, %"class.blink::Decimal"*)* @_ZN5blink14RangeInputType24FindClosestTickMarkValueERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)* @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType24OnAttachWithLayoutObjectEv to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::RangeInputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)* @_ZNK5blink14RangeInputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::RangeInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink14RangeInputType9SerializeERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType26SupportsInputModeAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20SupportsSelectionAPIEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType6HeightEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType5WidthEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType19DispatchSearchEventEv to i8*), i8* bitcast (%"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)* @_ZN5blink9InputType21GetColorChooserClientEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.blink::MouseEvent"*)* @_ZN5blink14RangeInputType20HandleMouseDownEventERNS_10MouseEventE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink14RangeInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::RangeInputType"*, %"class.blink::ComputedStyle"*, i32)* @_ZNK5blink14RangeInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType19CreateShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, i32)* @_ZN5blink14RangeInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType20StepAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.WTF::String"*, i1)* @_ZN5blink14RangeInputType11DidSetValueERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType26ListAttributeTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType10UpdateViewEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZN5blink14RangeInputType21ValueAttributeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::RangeInputType"*)* @_ZNK5blink14RangeInputType15IsDraggedSliderEv to i8*)], [60 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink14RangeInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputTypeD1Ev to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputTypeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, i32, i32*)* @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.blink::MouseEvent"*)* @_ZThn16_N5blink14RangeInputType20HandleMouseDownEventERNS_10MouseEventE to i8*), i8* bitcast (%"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17WillDispatchClickEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)* @_ZN5blink13InputTypeView16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink14RangeInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink13InputTypeView19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink13InputTypeView16HandleKeyupEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)* @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FormForSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)* @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, i32)* @_ZThn16_N5blink14RangeInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView4BlurEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17SubtreeHasChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::RangeInputType"*, %"class.blink::ComputedStyle"*, i32)* @_ZThn16_NK5blink14RangeInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)* @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE to i8*), i8* bitcast (i8 (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ComputedTextDirectionEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView14ClosePopupViewEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14HasOpenedPopupEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView18NeedsShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputType19CreateShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv to i8*), i8* bitcast (%"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView12UploadButtonEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14FileStatusTextEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputType20StepAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19AltAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19SrcAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputType10UpdateViewEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MultipleAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputType24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputType21ValueAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*, %"class.WTF::String"*, i1)* @_ZThn16_N5blink14RangeInputType11DidSetValueERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::RangeInputType"*)* @_ZThn16_N5blink14RangeInputType26ListAttributeTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, i1)* @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17PopupRootAXObjectEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21EnsureFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20EnsurePrimaryContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView18HasFallbackContentEv to i8*), i8* bitcast (void ()* @_ZNK5blink13InputTypeView20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)* @_ZN5blink13InputTypeView23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (i1 (%"class.blink::RangeInputType"*)* @_ZThn16_NK5blink14RangeInputType15IsDraggedSliderEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView11HasBadInputEv to i8*), i8* bitcast (i32 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FocusedFieldIndexEv to i8*)] }, align 8
@_ZN5blink16input_type_names6kRangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 16
@_ZGVZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description = internal global i64 0, align 8
@_ZN5blink10html_names8kMinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kStepAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [8 x i8] c"ArrowUp\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"ArrowDown\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"ArrowLeft\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"ArrowRight\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"PageUp\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"PageDown\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"Home\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"End\00", align 1
@_ZN5blink20shadow_element_names18kPseudoSliderTrackE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink20shadow_element_names14kIdSliderTrackE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.9 = private unnamed_addr constant [61 x i8] c"The specified value %s cannot be parsed, or is out of range.\00", align 1
@_ZN5blink26layout_invalidation_reason17kAttributeChangedE = external constant [0 x i8], align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink20shadow_element_names14kIdSliderThumbE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.10 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7DecimalEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Decimal]\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink14RangeInputTypeC1ERNS_16HTMLInputElementE = hidden unnamed_addr alias void (%"class.blink::RangeInputType"*, %"class.blink::HTMLInputElement"*), void (%"class.blink::RangeInputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink14RangeInputTypeC2ERNS_16HTMLInputElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::RangeInputType"* nocapture, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::HTMLInputElement"* %1, %"class.blink::HTMLInputElement"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  store %"class.blink::HTMLInputElement"* %1, %"class.blink::HTMLInputElement"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 2
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3
  %10 = bitcast %"class.WTF::Vector.39"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14RangeInputType5TraceEPNS_7VisitorE(%"class.blink::RangeInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1
  tail call void @_ZNK5blink13InputTypeView5TraceEPNS_7VisitorE(%"class.blink::InputTypeView"* %3, %"class.blink::Visitor"* %1) #11
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0
  tail call void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"* %4, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink13InputTypeView5TraceEPNS_7VisitorE(%"class.blink::InputTypeView"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink14RangeInputType5TraceEPNS_7VisitorE(%"class.blink::RangeInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %4 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %3, i64 1
  %5 = bitcast %"class.WTF::Vector.39"* %4 to %"class.blink::InputTypeView"*
  tail call void @_ZNK5blink13InputTypeView5TraceEPNS_7VisitorE(%"class.blink::InputTypeView"* %5, %"class.blink::Visitor"* %1) #11
  %6 = bitcast %"class.WTF::Vector.39"* %3 to %"class.blink::InputType"*
  tail call void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"* %6, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::InputTypeView"* @_ZN5blink14RangeInputType10CreateViewEv(%"class.blink::RangeInputType"* readnone) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1
  ret %"class.blink::InputTypeView"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink14RangeInputType12GetValueModeEv(%"class.blink::RangeInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType10CountUsageEv(%"class.blink::RangeInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0
  tail call void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"* %2, i32 34) #11
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 0
  %9 = and i32 %6, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %12, label %23

12:                                               ; preds = %1
  br i1 %10, label %19, label %13

13:                                               ; preds = %12
  %14 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %15 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 2, i32 0
  br label %38

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  %21 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %21, i64 0, i32 2, i32 0
  br label %38

23:                                               ; preds = %1
  br i1 %10, label %28, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %61, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 5, i32 0
  br label %38

38:                                               ; preds = %13, %19, %36
  %39 = phi %"class.blink::ComputedStyle"** [ %37, %36 ], [ %18, %13 ], [ %22, %19 ]
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = icmp eq %"class.blink::ComputedStyle"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %46, i64 0, i32 39
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 31
  %50 = icmp eq i32 %49, 19
  br i1 %50, label %51, label %61

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %55, i64 0, i32 2
  %57 = bitcast %"class.blink::UseCounter"* %56 to void (%"class.blink::UseCounter"*, i32)***
  %58 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %58, i64 3
  %60 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %59, align 8
  tail call void %60(%"class.blink::UseCounter"* %56, i32 1013) #11
  br label %61

61:                                               ; preds = %30, %38, %42, %51
  ret void
}

declare void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14RangeInputType15FormControlTypeEv(%"class.blink::RangeInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14RangeInputType13ValueAsDoubleEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = bitcast %"class.blink::HTMLInputElement"* %5 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %5) #11
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* nonnull dereferenceable(8) %2, double 0x7FF8000000000000) #11
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #11
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret double %12
}

declare double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14RangeInputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::RangeInputType"*, double, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  call void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* nonnull sret %5, double %1) #11
  call void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"* %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %5, i32 %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

declare void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* sret, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14RangeInputType15TypeMismatchForERKN3WTF6StringE(%"class.blink::RangeInputType"* nocapture readnone, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = tail call double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* dereferenceable(8) %1, double 0x7FF8000000000000) #11
  %12 = tail call double @llvm.fabs.f64(double %11) #12
  %13 = fcmp ueq double %12, 0x7FF0000000000000
  br label %14

14:                                               ; preds = %2, %10, %6
  %15 = phi i1 [ false, %6 ], [ %13, %10 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink14RangeInputType16SupportsRequiredEv(%"class.blink::RangeInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* noalias sret, %"class.blink::RangeInputType"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %18, !prof !2

14:                                               ; preds = %3
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  store <4 x i32> <i32 1, i32 0, i32 1, i32 0>, <4 x i32>* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to <4 x i32>*), align 16
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description) #11
  br label %18

18:                                               ; preds = %14, %17, %3
  %19 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %1, i64 0, i32 0
  %21 = bitcast %"class.blink::Decimal"* %5 to i8*
  %22 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %5, i32 0) #11
  call void @_ZNK5blink9InputType12FindStepBaseERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::InputType"* %20, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %23 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %24, align 8
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %28, align 8
  %30 = icmp eq %"class.blink::ElementData"* %29, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::UniqueElementData"*
  %38 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1, i32 1
  %39 = bitcast %"class.blink::Member.18"* %38 to %"class.blink::Attribute"**
  %40 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %37, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  br label %48

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1
  %45 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::Attribute"*
  %46 = lshr i32 %33, 1
  %47 = and i32 %46, 268435455
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi %"class.blink::Attribute"* [ %45, %43 ], [ %40, %36 ]
  %50 = phi i32 [ %47, %43 ], [ %42, %36 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %49, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %81, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %74, %54
  %60 = phi %"class.blink::Attribute"* [ %49, %54 ], [ %75, %74 ]
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %56
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %69, %64
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %76 = icmp eq %"class.blink::Attribute"* %75, %52
  br i1 %76, label %81, label %59

77:                                               ; preds = %69, %59
  %78 = icmp eq %"class.blink::Attribute"* %60, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  br label %83

81:                                               ; preds = %74, %77, %48, %18
  %82 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi %"class.WTF::AtomicString"* [ %82, %81 ], [ %80, %79 ]
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0
  %86 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %7, i32 0) #11
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %85, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %87 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %88 = bitcast %"class.blink::Decimal"* %9 to i8*
  %89 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #11
  %90 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %24, align 8
  %91 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMaxAttrE, align 8
  %92 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %93 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %92, align 8
  %94 = icmp eq %"class.blink::ElementData"* %93, null
  br i1 %94, label %145, label %95

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.blink::ElementData"* %93 to %"class.blink::UniqueElementData"*
  %102 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %93, i64 1, i32 1
  %103 = bitcast %"class.blink::Member.18"* %102 to %"class.blink::Attribute"**
  %104 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %101, i64 0, i32 2, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  br label %112

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %93, i64 1
  %109 = bitcast %"class.blink::ElementData"* %108 to %"class.blink::Attribute"*
  %110 = lshr i32 %97, 1
  %111 = and i32 %110, 268435455
  br label %112

112:                                              ; preds = %107, %100
  %113 = phi %"class.blink::Attribute"* [ %109, %107 ], [ %104, %100 ]
  %114 = phi i32 [ %111, %107 ], [ %106, %100 ]
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %145, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %91, i64 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %123

123:                                              ; preds = %138, %118
  %124 = phi %"class.blink::Attribute"* [ %113, %118 ], [ %139, %138 ]
  %125 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %126, %120
  br i1 %127, label %141, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %130, %131
  br i1 %132, label %133, label %138

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 4, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %135, %136
  br i1 %137, label %141, label %138

138:                                              ; preds = %133, %128
  %139 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %124, i64 1
  %140 = icmp eq %"class.blink::Attribute"* %139, %116
  br i1 %140, label %145, label %123

141:                                              ; preds = %133, %123
  %142 = icmp eq %"class.blink::Attribute"* %124, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %124, i64 0, i32 1
  br label %147

145:                                              ; preds = %138, %141, %112, %83
  %146 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %147

147:                                              ; preds = %143, %145
  %148 = phi %"class.WTF::AtomicString"* [ %146, %145 ], [ %144, %143 ]
  %149 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %148, i64 0, i32 0
  %150 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #11
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %10, i32 100) #11
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %149, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #11
  %151 = call zeroext i1 @_ZNK5blink7DecimalgeERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #11, !noalias !3
  %152 = select i1 %151, %"class.blink::Decimal"* %9, %"class.blink::Decimal"* %6
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %152) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #11
  %153 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #11
  %154 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 24, i1 false)
  %155 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %24, align 8
  %156 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %157 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %158 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %157, align 8
  %159 = icmp eq %"class.blink::ElementData"* %158, null
  br i1 %159, label %210, label %160

160:                                              ; preds = %147
  %161 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %158, i64 0, i32 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %172, label %165

165:                                              ; preds = %160
  %166 = bitcast %"class.blink::ElementData"* %158 to %"class.blink::UniqueElementData"*
  %167 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %158, i64 1, i32 1
  %168 = bitcast %"class.blink::Member.18"* %167 to %"class.blink::Attribute"**
  %169 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %166, i64 0, i32 2, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  br label %177

172:                                              ; preds = %160
  %173 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %158, i64 1
  %174 = bitcast %"class.blink::ElementData"* %173 to %"class.blink::Attribute"*
  %175 = lshr i32 %162, 1
  %176 = and i32 %175, 268435455
  br label %177

177:                                              ; preds = %172, %165
  %178 = phi %"class.blink::Attribute"* [ %174, %172 ], [ %169, %165 ]
  %179 = phi i32 [ %176, %172 ], [ %171, %165 ]
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %178, i64 %180
  %182 = icmp eq i32 %179, 0
  br i1 %182, label %210, label %183

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %156, i64 0, i32 0, i32 0
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %188

188:                                              ; preds = %203, %183
  %189 = phi %"class.blink::Attribute"* [ %178, %183 ], [ %204, %203 ]
  %190 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %189, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %190, align 8
  %192 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %191, %185
  br i1 %192, label %206, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %191, i64 0, i32 3, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %195, %196
  br i1 %197, label %198, label %203

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %191, i64 0, i32 4, i32 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %200, %201
  br i1 %202, label %206, label %203

203:                                              ; preds = %198, %193
  %204 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %189, i64 1
  %205 = icmp eq %"class.blink::Attribute"* %204, %181
  br i1 %205, label %210, label %188

206:                                              ; preds = %198, %188
  %207 = icmp eq %"class.blink::Attribute"* %189, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %206
  %209 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %189, i64 0, i32 1
  br label %212

210:                                              ; preds = %203, %206, %177, %147
  %211 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %212

212:                                              ; preds = %208, %210
  %213 = phi %"class.WTF::AtomicString"* [ %211, %210 ], [ %209, %208 ]
  %214 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %213, i64 0, i32 0
  call void @_ZN5blink9StepRange9ParseStepENS_15AnyStepHandlingERKNS0_15StepDescriptionERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %11, i32 %2, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to %"struct.blink::StepRange::StepDescription"*), %"class.WTF::String"* dereferenceable(8) %214) #11
  call void @_ZN5blink9StepRangeC1ERKNS_7DecimalES3_S3_bbS3_RKNS0_15StepDescriptionE(%"class.blink::StepRange"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %8, i1 zeroext true, i1 zeroext false, %"class.blink::Decimal"* nonnull dereferenceable(24) %11, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to %"struct.blink::StepRange::StepDescription"*)) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZNK5blink9InputType12FindStepBaseERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14RangeInputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* noalias sret, %"class.blink::RangeInputType"* nocapture readnone, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret %0, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Decimal"* dereferenceable(24) %3) #11
  ret void
}

declare void @_ZN5blink9StepRange9ParseStepENS_15AnyStepHandlingERKNS0_15StepDescriptionERKN3WTF6StringE(%"class.blink::Decimal"* sret, i32, %"struct.blink::StepRange::StepDescription"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9StepRangeC1ERKNS_7DecimalES3_S3_bbS3_RKNS0_15StepDescriptionE(%"class.blink::StepRange"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), i1 zeroext, i1 zeroext, %"class.blink::Decimal"* dereferenceable(24), %"struct.blink::StepRange::StepDescription"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink14RangeInputType11IsSteppableEv(%"class.blink::RangeInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType20HandleMouseDownEventERNS_10MouseEventE(%"class.blink::RangeInputType"* nocapture readonly, %"class.blink::MouseEvent"* dereferenceable(296)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutPoint", align 4
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = bitcast %"class.blink::HTMLInputElement"* %5 to %"class.blink::HTMLFormControlElement"*
  %7 = bitcast %"class.blink::HTMLInputElement"* %5 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %8 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %8, i64 138
  %10 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::HTMLFormControlElement"* %6) #11
  br i1 %11, label %73, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::MouseEvent", %"class.blink::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 7, i32 0, i32 0
  %14 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %13, align 8
  %15 = bitcast %"class.blink::EventTarget"* %14 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %16 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %16, i64 11
  %18 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %17, align 8
  %19 = tail call %"class.blink::Node"* %18(%"class.blink::EventTarget"* %14) #11
  %20 = bitcast %"class.blink::MouseEvent"* %1 to i16 (%"class.blink::MouseEvent"*)***
  %21 = load i16 (%"class.blink::MouseEvent"*)**, i16 (%"class.blink::MouseEvent"*)*** %20, align 8
  %22 = getelementptr inbounds i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %21, i64 33
  %23 = load i16 (%"class.blink::MouseEvent"*)*, i16 (%"class.blink::MouseEvent"*)** %22, align 8
  %24 = tail call signext i16 %23(%"class.blink::MouseEvent"* %1) #11
  %25 = icmp eq i16 %24, 0
  %26 = icmp ne %"class.blink::Node"* %19, null
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %73

28:                                               ; preds = %12
  %29 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = icmp eq %"class.blink::Node"* %19, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %33) #11
  %35 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %19, %"class.blink::Node"* %35) #11
  br i1 %36, label %37, label %73

37:                                               ; preds = %32
  %38 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  br label %39

39:                                               ; preds = %37, %28
  %40 = phi %"class.blink::HTMLInputElement"* [ %38, %37 ], [ %29, %28 ]
  %41 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %41) #11
  %43 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %42, i64 0, i32 1
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %45 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %43, %"class.WTF::AtomicString"* dereferenceable(8) %44) #11
  %46 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %45, i64 0, i32 0, i32 0
  %47 = icmp eq %"class.blink::Node"* %19, %46
  br i1 %47, label %73, label %48

48:                                               ; preds = %39
  %49 = bitcast %"class.blink::Element"* %45 to %"class.blink::SliderThumbElement"*
  %50 = bitcast %"class.blink::LayoutPoint"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.blink::MouseEvent", %"class.blink::MouseEvent"* %1, i64 0, i32 10, i32 0
  %52 = load double, double* %51, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 0, i32 0
  %54 = fmul double %52, 6.400000e+01
  %55 = fcmp ult double %54, 0xC1E0000000000000
  %56 = fcmp ugt double %54, 0x41DFFFFFFFC00000
  %57 = fcmp ogt double %54, 0xC1E0000000000000
  %58 = select i1 %57, double %54, double 0xC1E0000000000000
  %59 = fptosi double %58 to i32
  %60 = select i1 %55, i32 0, i32 2147483647
  %61 = select i1 %56, i32 %60, i32 %59
  store i32 %61, i32* %53, align 4
  %62 = getelementptr inbounds %"class.blink::MouseEvent", %"class.blink::MouseEvent"* %1, i64 0, i32 10, i32 1
  %63 = load double, double* %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 1, i32 0
  %65 = fmul double %63, 6.400000e+01
  %66 = fcmp ult double %65, 0xC1E0000000000000
  %67 = fcmp ugt double %65, 0x41DFFFFFFFC00000
  %68 = fcmp ogt double %65, 0xC1E0000000000000
  %69 = select i1 %68, double %65, double 0xC1E0000000000000
  %70 = fptosi double %69 to i32
  %71 = select i1 %66, i32 0, i32 2147483647
  %72 = select i1 %67, i32 %71, i32 %70
  store i32 %72, i32* %64, align 4
  call void @_ZN5blink18SliderThumbElement8DragFromERKNS_11LayoutPointE(%"class.blink::SliderThumbElement"* %49, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %73

73:                                               ; preds = %12, %32, %39, %48, %2
  ret void
}

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink18SliderThumbElement8DragFromERKNS_11LayoutPointE(%"class.blink::SliderThumbElement"*, %"class.blink::LayoutPoint"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType20HandleMouseDownEventERNS_10MouseEventE(%"class.blink::RangeInputType"* nocapture readonly, %"class.blink::MouseEvent"* dereferenceable(296)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %4 = bitcast %"class.WTF::Vector.39"* %3 to %"class.blink::RangeInputType"*
  tail call void @_ZN5blink14RangeInputType20HandleMouseDownEventERNS_10MouseEventE(%"class.blink::RangeInputType"* %4, %"class.blink::MouseEvent"* dereferenceable(296) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::RangeInputType"*, %"class.blink::KeyboardEvent"* nocapture dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.blink::Decimal", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.blink::StepRange", align 8
  %22 = alloca %"class.blink::Decimal", align 8
  %23 = alloca %"class.blink::Decimal", align 8
  %24 = alloca %"class.blink::Decimal", align 8
  %25 = alloca %"class.blink::Decimal", align 8
  %26 = alloca %"class.blink::Decimal", align 8
  %27 = alloca %"class.blink::Decimal", align 8
  %28 = alloca %"class.blink::Decimal", align 8
  %29 = alloca %"class.blink::Decimal", align 8
  %30 = alloca %"class.blink::Decimal", align 8
  %31 = alloca %"class.blink::Decimal", align 8
  %32 = alloca %"class.blink::Decimal", align 8
  %33 = alloca %"class.blink::Decimal", align 8
  %34 = alloca %"class.blink::Decimal", align 8
  %35 = alloca %"class.blink::Decimal", align 8
  %36 = alloca %"class.blink::Decimal", align 8
  %37 = alloca %"class.blink::Decimal", align 8
  %38 = alloca %"class.blink::Decimal", align 8
  %39 = alloca %"class.blink::Decimal", align 8
  %40 = alloca %"class.blink::Decimal", align 8
  %41 = alloca %"class.blink::Decimal", align 8
  %42 = alloca %"class.blink::Decimal", align 8
  %43 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %44 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %45, align 8
  %47 = bitcast %"class.blink::HTMLInputElement"* %46 to %"class.blink::HTMLFormControlElement"*
  %48 = bitcast %"class.blink::HTMLInputElement"* %46 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %49 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %49, i64 138
  %51 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::HTMLFormControlElement"* %47) #11
  br i1 %52, label %566, label %53

53:                                               ; preds = %2
  %54 = bitcast %"class.blink::Decimal"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  %55 = bitcast %"class.WTF::String"* %20 to i8*
  %56 = bitcast %"class.blink::Decimal"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %57 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %45, align 8
  %58 = bitcast %"class.blink::HTMLInputElement"* %57 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %59 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %59, i64 195
  %61 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %60, align 8
  %62 = tail call %"class.WTF::StringImpl"* %61(%"class.blink::HTMLInputElement"* %57) #11
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  call void @_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %19, %"class.blink::InputType"* %44, %"class.WTF::String"* nonnull dereferenceable(8) %20) #11
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %53
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #11
  br label %79

79:                                               ; preds = %53, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %80 = bitcast %"class.blink::StepRange"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %80) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 120, i1 false)
  call void @_ZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* nonnull sret %21, %"class.blink::RangeInputType"* %0, i32 0)
  %81 = bitcast %"class.blink::Decimal"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  %82 = bitcast %"class.blink::Decimal"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  %83 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %45, align 8
  %84 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %85 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %85, align 8
  %87 = icmp eq %"class.blink::ElementData"* %86, null
  br i1 %87, label %138, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %86, i64 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %88
  %94 = bitcast %"class.blink::ElementData"* %86 to %"class.blink::UniqueElementData"*
  %95 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %86, i64 1, i32 1
  %96 = bitcast %"class.blink::Member.18"* %95 to %"class.blink::Attribute"**
  %97 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %94, i64 0, i32 2, i32 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  br label %105

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %86, i64 1
  %102 = bitcast %"class.blink::ElementData"* %101 to %"class.blink::Attribute"*
  %103 = lshr i32 %90, 1
  %104 = and i32 %103, 268435455
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi %"class.blink::Attribute"* [ %102, %100 ], [ %97, %93 ]
  %107 = phi i32 [ %104, %100 ], [ %99, %93 ]
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %106, i64 %108
  %110 = icmp eq i32 %107, 0
  br i1 %110, label %138, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %84, i64 0, i32 0, i32 0
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %116

116:                                              ; preds = %131, %111
  %117 = phi %"class.blink::Attribute"* [ %106, %111 ], [ %132, %131 ]
  %118 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %118, align 8
  %120 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %119, %113
  br i1 %120, label %134, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %123, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %119, i64 0, i32 4, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %128, %129
  br i1 %130, label %134, label %131

131:                                              ; preds = %126, %121
  %132 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %117, i64 1
  %133 = icmp eq %"class.blink::Attribute"* %132, %109
  br i1 %133, label %138, label %116

134:                                              ; preds = %126, %116
  %135 = icmp eq %"class.blink::Attribute"* %117, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %117, i64 0, i32 1
  br label %140

138:                                              ; preds = %131, %134, %105, %79
  %139 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %140

140:                                              ; preds = %136, %138
  %141 = phi %"class.WTF::AtomicString"* [ %139, %138 ], [ %137, %136 ]
  %142 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %222, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 1
  %149 = bitcast %"class.WTF::StringImpl"* %148 to i8*
  %150 = icmp eq i32 %147, 3
  br i1 %150, label %151, label %222

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %175, label %156

156:                                              ; preds = %151
  %157 = load i8, i8* %149, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %163 = sext i8 %162 to i32
  %164 = icmp eq i32 %161, %163
  br i1 %164, label %165, label %222

165:                                              ; preds = %156
  %166 = getelementptr inbounds i8, i8* %149, i64 1
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %173 = sext i8 %172 to i32
  %174 = icmp eq i32 %171, %173
  br i1 %174, label %212, label %222

175:                                              ; preds = %151
  %176 = bitcast %"class.WTF::StringImpl"* %148 to i16*
  %177 = load i16, i16* %176, align 2
  %178 = add i16 %177, -65
  %179 = icmp ult i16 %178, 26
  %180 = zext i1 %179 to i16
  %181 = shl nuw nsw i16 %180, 5
  %182 = or i16 %181, %177
  %183 = zext i16 %182 to i32
  %184 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %183, %185
  br i1 %186, label %187, label %222

187:                                              ; preds = %175
  %188 = getelementptr inbounds i16, i16* %176, i64 1
  %189 = load i16, i16* %188, align 2
  %190 = add i16 %189, -65
  %191 = icmp ult i16 %190, 26
  %192 = zext i1 %191 to i16
  %193 = shl nuw nsw i16 %192, 5
  %194 = or i16 %193, %189
  %195 = zext i16 %194 to i32
  %196 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %199, label %222

199:                                              ; preds = %187
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 1, i32 1
  %201 = bitcast i32* %200 to i16*
  %202 = load i16, i16* %201, align 2
  %203 = add i16 %202, -65
  %204 = icmp ult i16 %203, 26
  %205 = zext i1 %204 to i16
  %206 = shl nuw nsw i16 %205, 5
  %207 = or i16 %206, %202
  %208 = zext i16 %207 to i32
  %209 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %210 = sext i8 %209 to i32
  %211 = icmp eq i32 %208, %210
  br label %222

212:                                              ; preds = %165
  %213 = getelementptr inbounds i8, i8* %149, i64 2
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i64
  %216 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %218, %220
  br label %222

222:                                              ; preds = %140, %145, %156, %165, %175, %187, %212, %199
  %223 = phi i1 [ %211, %199 ], [ false, %145 ], [ false, %175 ], [ false, %187 ], [ false, %156 ], [ false, %165 ], [ %221, %212 ], [ false, %140 ]
  %224 = bitcast %"class.blink::Decimal"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #11
  %225 = bitcast %"class.blink::Decimal"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #11
  %226 = bitcast %"class.blink::Decimal"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #11
  %227 = bitcast %"class.blink::Decimal"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #11
  br i1 %223, label %228, label %231

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %21, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %24, %"class.blink::Decimal"* nonnull dereferenceable(24) %229) #11
  %230 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %21, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %25, %"class.blink::Decimal"* dereferenceable(24) %230) #11
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %23, %"class.blink::Decimal"* nonnull %24, %"class.blink::Decimal"* nonnull dereferenceable(24) %25) #11
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %26, i32 100) #11
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* nonnull sret %22, %"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %26) #11
  br label %233

231:                                              ; preds = %222
  %232 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %21, i64 0, i32 2
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %22, %"class.blink::Decimal"* dereferenceable(24) %232) #11
  br label %233

233:                                              ; preds = %231, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #11
  %234 = bitcast %"class.blink::Decimal"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #11
  %235 = bitcast %"class.blink::Decimal"* %28 to i8*
  %236 = bitcast %"class.blink::Decimal"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #11
  %237 = bitcast %"class.blink::Decimal"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #11
  %238 = bitcast %"class.blink::Decimal"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #11
  %239 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %21, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %30, %"class.blink::Decimal"* nonnull dereferenceable(24) %239) #11
  %240 = bitcast %"class.blink::Decimal"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #11
  %241 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %21, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %31, %"class.blink::Decimal"* dereferenceable(24) %241) #11
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %29, %"class.blink::Decimal"* nonnull %30, %"class.blink::Decimal"* nonnull dereferenceable(24) %31) #11
  %242 = bitcast %"class.blink::Decimal"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #11
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %32, i32 10) #11
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* nonnull sret %28, %"class.blink::Decimal"* nonnull %29, %"class.blink::Decimal"* nonnull dereferenceable(24) %32) #11
  %243 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %28, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #11
  %244 = select i1 %243, %"class.blink::Decimal"* %22, %"class.blink::Decimal"* %28
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %27, %"class.blink::Decimal"* nonnull dereferenceable(24) %244) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #11
  %245 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %45, align 8
  %246 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %249, label %255, label %251

251:                                              ; preds = %233
  %252 = bitcast %"class.blink::NodeData"** %250 to %"class.blink::NodeRareData"**
  %253 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %253, i64 0, i32 1, i32 0, i32 0
  br label %257

255:                                              ; preds = %233
  %256 = bitcast %"class.blink::NodeData"** %250 to %"class.blink::NodeRenderingData"**
  br label %257

257:                                              ; preds = %251, %255
  %258 = phi %"class.blink::NodeRenderingData"** [ %254, %251 ], [ %256, %255 ]
  %259 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %259, i64 0, i32 1
  %261 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %260, align 8
  %262 = icmp eq %"class.blink::LayoutObject"* %261, null
  br i1 %262, label %266, label %263

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1
  %265 = call zeroext i8 @_ZN5blink13InputTypeView21ComputedTextDirectionEv(%"class.blink::InputTypeView"* %264) #11
  br label %266

266:                                              ; preds = %257, %263
  %267 = phi i8 [ %265, %263 ], [ 0, %257 ]
  %268 = bitcast %"class.blink::Decimal"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #11
  %269 = bitcast %"class.blink::Decimal"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %33, i32 0) #11
  %270 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %270) #11
  %271 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %273, label %274, label %278

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %275, align 8
  %276 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %277 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %276, i64* %277, align 8
  br label %286

278:                                              ; preds = %266
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %272, %"class.WTF::StringImpl"** %279, align 8
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 1
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %284 = bitcast i8** %283 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %282, %"class.WTF::StringImpl"** %284, align 8
  %285 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %286

286:                                              ; preds = %278, %274
  %287 = phi i64 [ %285, %278 ], [ %276, %274 ]
  %288 = phi i32 [ %281, %278 ], [ 0, %274 ]
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %288, i32* %289, align 8
  %290 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #11
  %291 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %287, i64* %291, align 8
  %292 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %292, align 8
  %293 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 7, i32* %293, align 8
  %294 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %270) #11
  br i1 %294, label %295, label %297

295:                                              ; preds = %286
  %296 = bitcast %"class.blink::Decimal"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #11
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %34, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #11
  br label %492

297:                                              ; preds = %286
  %298 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #11
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %301, label %305

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %302, align 8
  %303 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %304 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %303, i64* %304, align 8
  br label %313

305:                                              ; preds = %297
  %306 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %299, %"class.WTF::StringImpl"** %306, align 8
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 1
  %310 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %311 = bitcast i8** %310 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %309, %"class.WTF::StringImpl"** %311, align 8
  %312 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %313

313:                                              ; preds = %305, %301
  %314 = phi i64 [ %312, %305 ], [ %303, %301 ]
  %315 = phi i32 [ %308, %305 ], [ 0, %301 ]
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %315, i32* %316, align 8
  %317 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #11
  %318 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %314, i64* %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %319, align 8
  %320 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 9, i32* %320, align 8
  %321 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #11
  br i1 %321, label %322, label %324

322:                                              ; preds = %313
  %323 = bitcast %"class.blink::Decimal"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #11
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %35, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #11
  br label %492

324:                                              ; preds = %313
  %325 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #11
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %328, label %332

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %329, align 8
  %330 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %331 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %330, i64* %331, align 8
  br label %340

332:                                              ; preds = %324
  %333 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %326, %"class.WTF::StringImpl"** %333, align 8
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 1
  %337 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %338 = bitcast i8** %337 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %336, %"class.WTF::StringImpl"** %338, align 8
  %339 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %340

340:                                              ; preds = %332, %328
  %341 = phi i64 [ %339, %332 ], [ %330, %328 ]
  %342 = phi i32 [ %335, %332 ], [ 0, %328 ]
  %343 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %342, i32* %343, align 8
  %344 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %344) #11
  %345 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %341, i64* %345, align 8
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8** %346, align 8
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 9, i32* %347, align 8
  %348 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %344) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #11
  br i1 %348, label %349, label %354

349:                                              ; preds = %340
  %350 = bitcast %"class.blink::Decimal"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %350) #11
  %351 = icmp eq i8 %267, 1
  br i1 %351, label %352, label %353

352:                                              ; preds = %349
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %36, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #11
  br label %492

353:                                              ; preds = %349
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %36, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #11
  br label %492

354:                                              ; preds = %340
  %355 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %355) #11
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %358, label %362

358:                                              ; preds = %354
  %359 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %359, align 8
  %360 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %361 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %360, i64* %361, align 8
  br label %370

362:                                              ; preds = %354
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %356, %"class.WTF::StringImpl"** %363, align 8
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 1
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %368 = bitcast i8** %367 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %366, %"class.WTF::StringImpl"** %368, align 8
  %369 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %370

370:                                              ; preds = %362, %358
  %371 = phi i64 [ %369, %362 ], [ %360, %358 ]
  %372 = phi i32 [ %365, %362 ], [ 0, %358 ]
  %373 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %372, i32* %373, align 8
  %374 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %374) #11
  %375 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %371, i64* %375, align 8
  %376 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8** %376, align 8
  %377 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 10, i32* %377, align 8
  %378 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %374) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %355) #11
  br i1 %378, label %379, label %384

379:                                              ; preds = %370
  %380 = bitcast %"class.blink::Decimal"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %380) #11
  %381 = icmp eq i8 %267, 1
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %37, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #11
  br label %492

383:                                              ; preds = %379
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %37, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #11
  br label %492

384:                                              ; preds = %370
  %385 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %385) #11
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %388, label %392

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %389, align 8
  %390 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %391 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %390, i64* %391, align 8
  br label %400

392:                                              ; preds = %384
  %393 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %386, %"class.WTF::StringImpl"** %393, align 8
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 1
  %395 = load i32, i32* %394, align 4
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 1
  %397 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %398 = bitcast i8** %397 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %396, %"class.WTF::StringImpl"** %398, align 8
  %399 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %400

400:                                              ; preds = %392, %388
  %401 = phi i64 [ %399, %392 ], [ %390, %388 ]
  %402 = phi i32 [ %395, %392 ], [ 0, %388 ]
  %403 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %402, i32* %403, align 8
  %404 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %404) #11
  %405 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %401, i64* %405, align 8
  %406 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %406, align 8
  %407 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 6, i32* %407, align 8
  %408 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %404) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %385) #11
  br i1 %408, label %409, label %411

409:                                              ; preds = %400
  %410 = bitcast %"class.blink::Decimal"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %410) #11
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %38, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %27) #11
  br label %492

411:                                              ; preds = %400
  %412 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %412) #11
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %415, label %419

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %416, align 8
  %417 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %418 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %417, i64* %418, align 8
  br label %427

419:                                              ; preds = %411
  %420 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %413, %"class.WTF::StringImpl"** %420, align 8
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 1
  %422 = load i32, i32* %421, align 4
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 1
  %424 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %425 = bitcast i8** %424 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %423, %"class.WTF::StringImpl"** %425, align 8
  %426 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %427

427:                                              ; preds = %419, %415
  %428 = phi i64 [ %426, %419 ], [ %417, %415 ]
  %429 = phi i32 [ %422, %419 ], [ 0, %415 ]
  %430 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %429, i32* %430, align 8
  %431 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %431) #11
  %432 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %428, i64* %432, align 8
  %433 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8** %433, align 8
  %434 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 8, i32* %434, align 8
  %435 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %431) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %412) #11
  br i1 %435, label %436, label %438

436:                                              ; preds = %427
  %437 = bitcast %"class.blink::Decimal"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %437) #11
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %39, %"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %27) #11
  br label %492

438:                                              ; preds = %427
  %439 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #11
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %440, null
  br i1 %441, label %442, label %446

442:                                              ; preds = %438
  %443 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %443, align 8
  %444 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %445 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %444, i64* %445, align 8
  br label %454

446:                                              ; preds = %438
  %447 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %440, %"class.WTF::StringImpl"** %447, align 8
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 1
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %452 = bitcast i8** %451 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %450, %"class.WTF::StringImpl"** %452, align 8
  %453 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %454

454:                                              ; preds = %446, %442
  %455 = phi i64 [ %453, %446 ], [ %444, %442 ]
  %456 = phi i32 [ %449, %446 ], [ 0, %442 ]
  %457 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %456, i32* %457, align 8
  %458 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %458) #11
  %459 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %455, i64* %459, align 8
  %460 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8** %460, align 8
  %461 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %461, align 8
  %462 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %458) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #11
  br i1 %462, label %463, label %465

463:                                              ; preds = %454
  %464 = bitcast %"class.blink::Decimal"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %464) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %40, %"class.blink::Decimal"* dereferenceable(24) %241) #11
  br label %492

465:                                              ; preds = %454
  %466 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %466) #11
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %469, label %473

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %470, align 8
  %471 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %472 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %471, i64* %472, align 8
  br label %481

473:                                              ; preds = %465
  %474 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %467, %"class.WTF::StringImpl"** %474, align 8
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 1
  %476 = load i32, i32* %475, align 4
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 1
  %478 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %479 = bitcast i8** %478 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %477, %"class.WTF::StringImpl"** %479, align 8
  %480 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %481

481:                                              ; preds = %473, %469
  %482 = phi i64 [ %480, %473 ], [ %471, %469 ]
  %483 = phi i32 [ %476, %473 ], [ 0, %469 ]
  %484 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %483, i32* %484, align 8
  %485 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %485) #11
  %486 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %482, i64* %486, align 8
  %487 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %487, align 8
  %488 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %488, align 8
  %489 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %485) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %466) #11
  br i1 %489, label %490, label %565

490:                                              ; preds = %481
  %491 = bitcast %"class.blink::Decimal"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %491) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %41, %"class.blink::Decimal"* nonnull dereferenceable(24) %239) #11
  br label %492

492:                                              ; preds = %382, %383, %352, %353, %322, %436, %490, %463, %409, %295
  %493 = phi %"class.blink::Decimal"* [ %35, %322 ], [ %39, %436 ], [ %41, %490 ], [ %40, %463 ], [ %38, %409 ], [ %34, %295 ], [ %36, %353 ], [ %36, %352 ], [ %37, %383 ], [ %37, %382 ]
  %494 = phi i8* [ %323, %322 ], [ %437, %436 ], [ %491, %490 ], [ %464, %463 ], [ %410, %409 ], [ %296, %295 ], [ %350, %353 ], [ %350, %352 ], [ %380, %383 ], [ %380, %382 ]
  %495 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %33, %"class.blink::Decimal"* nonnull dereferenceable(24) %493) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %494) #11
  %496 = bitcast %"class.blink::Decimal"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %496) #11
  call void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %42, %"class.blink::StepRange"* nonnull %21, %"class.blink::Decimal"* nonnull dereferenceable(24) %33) #11
  %497 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %33, %"class.blink::Decimal"* nonnull dereferenceable(24) %42) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %496) #11
  %498 = call zeroext i1 @_ZNK5blink7DecimalneERKS0_(%"class.blink::Decimal"* nonnull %33, %"class.blink::Decimal"* nonnull dereferenceable(24) %19) #11
  br i1 %498, label %499, label %561

499:                                              ; preds = %492
  %500 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #11
  call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %500) #11
  %501 = bitcast %"class.blink::DummyExceptionStateForTesting"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %501) #11
  %502 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 0
  %503 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %503, align 8
  %504 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %504, align 2
  %505 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 1, i32 2
  %506 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 5, i32 0, i32 0
  %507 = bitcast %"class.WTF::StringImpl"** %506 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %507, i8 0, i64 16, i1 false) #11
  %508 = bitcast i8** %505 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %508, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %502, align 8
  %509 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0
  call void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"* %44, %"class.blink::Decimal"* nonnull dereferenceable(24) %33, i32 3, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %509) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %502, align 8
  %510 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 4
  %511 = load i32, i32* %510, align 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %514, label %513

513:                                              ; preds = %499
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %509) #11
  br label %514

514:                                              ; preds = %499, %513
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %502, align 8
  %515 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %516 = load i64*, i64** %515, align 8
  %517 = icmp eq i64* %516, null
  br i1 %517, label %528, label %518

518:                                              ; preds = %514
  %519 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %43, i64 0, i32 0, i32 3
  %520 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %519, align 8
  %521 = bitcast %"class.v8::Isolate"* %520 to %"class.v8::internal::Isolate"*
  %522 = load i64, i64* %516, align 8
  %523 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %521, i64 %522) #11
  %524 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %520) #11
  br i1 %524, label %528, label %525

525:                                              ; preds = %518
  %526 = bitcast i64* %523 to %"class.v8::Value"*
  %527 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %520, %"class.v8::Value"* %526) #11
  br label %528

528:                                              ; preds = %525, %518, %514
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %506, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %529, null
  br i1 %530, label %544, label %531

531:                                              ; preds = %528
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load atomic i32, i32* %532 monotonic, align 4
  %534 = and i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 0
  %537 = load i32, i32* %536, align 4
  br i1 %535, label %538, label %540

538:                                              ; preds = %531
  %539 = add i32 %537, -1
  store i32 %539, i32* %536, align 4
  br label %540

540:                                              ; preds = %538, %531
  %541 = phi i32 [ %539, %538 ], [ %537, %531 ]
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %544

543:                                              ; preds = %540
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %529) #11
  br label %544

544:                                              ; preds = %528, %540, %543
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %501) #11
  %545 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %45, align 8
  %546 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %545, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %547 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %546, align 8
  %548 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %547, i64 0, i32 2, i32 0, i32 0
  %549 = load %"class.blink::Document"*, %"class.blink::Document"** %548, align 8
  %550 = call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %549) #11
  %551 = icmp eq %"class.blink::AXObjectCache"* %550, null
  br i1 %551, label %559, label %552

552:                                              ; preds = %544
  %553 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %45, align 8
  %554 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %553, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = bitcast %"class.blink::AXObjectCache"* %550 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %556 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %555, align 8
  %557 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %556, i64 37
  %558 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %557, align 8
  call void %558(%"class.blink::AXObjectCache"* nonnull %550, %"class.blink::Node"* %554) #11
  br label %559

559:                                              ; preds = %544, %552
  %560 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #11
  call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %560) #11
  br label %561

561:                                              ; preds = %559, %492
  %562 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %563 = load i16, i16* %562, align 8
  %564 = or i16 %563, 64
  store i16 %564, i16* %562, align 8
  br label %565

565:                                              ; preds = %481, %561
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  br label %566

566:                                              ; preds = %2, %565
  ret void
}

declare void @_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZN5blink13InputTypeView21ComputedTextDirectionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::StepRange"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7DecimalneERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::RangeInputType"*, %"class.blink::KeyboardEvent"* nocapture dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %4 = bitcast %"class.WTF::Vector.39"* %3 to %"class.blink::RangeInputType"*
  tail call void @_ZN5blink14RangeInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::RangeInputType"* %4, %"class.blink::KeyboardEvent"* dereferenceable(176) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType19CreateShadowSubtreeEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::SliderTrackElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18SliderTrackElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %7) #11
  %9 = getelementptr inbounds %"class.blink::SliderTrackElement", %"class.blink::SliderTrackElement"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names18kPseudoSliderTrackE, align 8
  tail call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %9, %"class.WTF::AtomicString"* dereferenceable(8) %10) #11
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderTrackE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %9, %"class.blink::QualifiedName"* dereferenceable(8) %11, %"class.WTF::AtomicString"* dereferenceable(8) %12) #11
  %13 = getelementptr inbounds %"class.blink::SliderTrackElement", %"class.blink::SliderTrackElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = tail call %"class.blink::SliderThumbElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18SliderThumbElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %7) #11
  %15 = getelementptr inbounds %"class.blink::SliderThumbElement", %"class.blink::SliderThumbElement"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %13, %"class.blink::Node"* %15) #11
  %17 = tail call %"class.blink::SliderContainerElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_22SliderContainerElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %7) #11
  %18 = getelementptr inbounds %"class.blink::SliderContainerElement", %"class.blink::SliderContainerElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::SliderTrackElement", %"class.blink::SliderTrackElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %18, %"class.blink::Node"* %19) #11
  %21 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %22) #11
  %24 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::SliderContainerElement", %"class.blink::SliderContainerElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %24, %"class.blink::Node"* %25) #11
  ret void
}

declare void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType19CreateShadowSubtreeEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %3 = bitcast %"class.WTF::Vector.39"* %2 to %"class.blink::RangeInputType"*
  tail call void @_ZN5blink14RangeInputType19CreateShadowSubtreeEv(%"class.blink::RangeInputType"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZNK5blink14RangeInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::RangeInputType"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = tail call %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory17CreateFlexibleBoxERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %6, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #11
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %7, i64 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %8
}

declare %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory17CreateFlexibleBoxERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZThn16_NK5blink14RangeInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::RangeInputType"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %5 = bitcast i32* %4 to %"class.blink::HTMLInputElement"**
  %6 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory17CreateFlexibleBoxERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %7, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #11
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %8, i64 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %9
}

declare void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14RangeInputType9SerializeERKNS_7DecimalE(%"class.blink::RangeInputType"* nocapture readnone, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 0, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24) %1) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %10
}

declare %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::RangeInputType"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1
  tail call void @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::InputTypeView"* %3, i32 %1) #11
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %6, %"class.blink::Event"* null, i32 %1) #11
  ret void
}

declare void @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::InputTypeView"*, i32) unnamed_addr #1

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::RangeInputType"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %4 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %3, i64 1
  %5 = bitcast %"class.WTF::Vector.39"* %4 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::InputTypeView"* %5, i32 %1) #11
  %6 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to %"class.blink::HTMLInputElement"**
  %8 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %9, %"class.blink::Event"* null, i32 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement13HasDirtyValueEv(%"class.blink::HTMLInputElement"* %5) #11
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  br i1 %6, label %8, label %35

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = bitcast %"class.blink::HTMLInputElement"* %7 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %11 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, i64 195
  %13 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %12, align 8
  %14 = tail call %"class.WTF::StringImpl"* %13(%"class.blink::HTMLInputElement"* %7) #11
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.blink::HTMLInputElement"* %7 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %17 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %17, i64 196
  %19 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %18, align 8
  call void %19(%"class.blink::HTMLInputElement"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0, i32 0) #11
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %58, label %22

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %58

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %58

35:                                               ; preds = %1
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = bitcast %"class.blink::HTMLInputElement"* %7 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %38 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %38, i64 195
  %40 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %39, align 8
  %41 = tail call %"class.WTF::StringImpl"* %40(%"class.blink::HTMLInputElement"* %7) #11
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink16HTMLInputElement16SetNonDirtyValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %58

58:                                               ; preds = %57, %54, %35, %34, %31, %8
  %59 = phi i8* [ %9, %8 ], [ %9, %31 ], [ %9, %34 ], [ %36, %35 ], [ %36, %54 ], [ %36, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  %60 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  call void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"* %60) #11
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLInputElement13HasDirtyValueEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLInputElement16SetNonDirtyValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType20StepAttributeChangedEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement13HasDirtyValueEv(%"class.blink::HTMLInputElement"* %5) #11
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  br i1 %6, label %8, label %35

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = bitcast %"class.blink::HTMLInputElement"* %7 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %11 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, i64 195
  %13 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %12, align 8
  %14 = tail call %"class.WTF::StringImpl"* %13(%"class.blink::HTMLInputElement"* %7) #11
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.blink::HTMLInputElement"* %7 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %17 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %17, i64 196
  %19 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %18, align 8
  call void %19(%"class.blink::HTMLInputElement"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0, i32 0) #11
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %58, label %22

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %58

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %58

35:                                               ; preds = %1
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = bitcast %"class.blink::HTMLInputElement"* %7 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %38 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %38, i64 195
  %40 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %39, align 8
  %41 = tail call %"class.WTF::StringImpl"* %40(%"class.blink::HTMLInputElement"* %7) #11
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink16HTMLInputElement16SetNonDirtyValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %58

58:                                               ; preds = %57, %54, %35, %34, %31, %8
  %59 = phi i8* [ %9, %8 ], [ %9, %31 ], [ %9, %34 ], [ %36, %35 ], [ %36, %54 ], [ %36, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  %60 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  call void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"* %60) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType20StepAttributeChangedEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %3 = bitcast %"class.WTF::Vector.39"* %2 to %"class.blink::RangeInputType"*
  tail call void @_ZN5blink14RangeInputType20StepAttributeChangedEv(%"class.blink::RangeInputType"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType11DidSetValueERKN3WTF6StringEb(%"class.blink::RangeInputType"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %7

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  tail call void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"* %6) #11
  br label %7

7:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType11DidSetValueERKN3WTF6StringEb(%"class.blink::RangeInputType"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %8

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %6 = bitcast i32* %5 to %"class.blink::HTMLInputElement"**
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8
  tail call void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"* %7) #11
  br label %8

8:                                                ; preds = %3, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType10UpdateViewEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %4) #11
  %6 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 1
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %8 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %7) #11
  %9 = bitcast %"class.blink::Element"* %8 to %"class.blink::SliderThumbElement"*
  tail call void @_ZN5blink18SliderThumbElement20SetPositionFromValueEv(%"class.blink::SliderThumbElement"* %9) #11
  ret void
}

declare void @_ZN5blink18SliderThumbElement20SetPositionFromValueEv(%"class.blink::SliderThumbElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType10UpdateViewEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::HTMLInputElement"**
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %5) #11
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 1
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %9 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %8) #11
  %10 = bitcast %"class.blink::Element"* %9 to %"class.blink::SliderThumbElement"*
  tail call void @_ZN5blink18SliderThumbElement20SetPositionFromValueEv(%"class.blink::SliderThumbElement"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14RangeInputType13SanitizeValueERKN3WTF6StringE(%"class.blink::RangeInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::StepRange", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = bitcast %"class.blink::StepRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 120, i1 false)
  call void @_ZNK5blink14RangeInputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* nonnull sret %6, %"class.blink::RangeInputType"* %0, i32 0)
  %11 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = bitcast %"class.blink::Decimal"* %8 to i8*
  %13 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %14 = bitcast %"class.blink::Decimal"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11, !noalias !6
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11, !noalias !6
  %16 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %6, i64 0, i32 0
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::Decimal"* %16, %"class.blink::Decimal"* nonnull dereferenceable(24) %17) #11, !noalias !6
  %18 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11, !noalias !6
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %5, i32 2) #11, !noalias !6
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* nonnull sret %3, %"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #11, !noalias !6
  call void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %8, %"class.blink::StepRange"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11, !noalias !6
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %19 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  call void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %9, %"class.blink::StepRange"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #11
  %20 = call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* nonnull dereferenceable(24) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #11
  ret %"class.WTF::StringImpl"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14RangeInputType20WarnIfValueIsInvalidERKN3WTF6StringE(%"class.blink::RangeInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13SanitizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %12, %"class.WTF::String"* dereferenceable(8) %1) #11
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %15
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %15
  %28 = phi i32 [ %26, %25 ], [ %24, %15 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #11
  br i1 %18, label %34, label %32

31:                                               ; preds = %27
  br i1 %18, label %34, label %32

32:                                               ; preds = %10, %30, %31
  %33 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0
  tail call void @_ZNK5blink9InputType19AddWarningToConsoleEPKcRKN3WTF6StringE(%"class.blink::InputType"* %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9, i64 0, i64 0), %"class.WTF::String"* dereferenceable(8) %1) #11
  br label %34

34:                                               ; preds = %6, %2, %30, %31, %32
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13SanitizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink9InputType19AddWarningToConsoleEPKcRKN3WTF6StringE(%"class.blink::InputType"*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType24DisabledAttributeChangedEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = bitcast %"class.blink::HTMLInputElement"* %3 to %"class.blink::HTMLFormControlElement"*
  %5 = bitcast %"class.blink::HTMLInputElement"* %3 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %6 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %6, i64 138
  %8 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::HTMLFormControlElement"* %4) #11
  br i1 %9, label %10, label %18

10:                                               ; preds = %1
  %11 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %12) #11
  %14 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %13, i64 0, i32 1
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %16 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %15) #11
  %17 = bitcast %"class.blink::Element"* %16 to %"class.blink::SliderThumbElement"*
  tail call void @_ZN5blink18SliderThumbElement12StopDraggingEv(%"class.blink::SliderThumbElement"* %17) #11
  br label %18

18:                                               ; preds = %10, %1
  ret void
}

declare void @_ZN5blink18SliderThumbElement12StopDraggingEv(%"class.blink::SliderThumbElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType24DisabledAttributeChangedEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::HTMLInputElement"**
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = bitcast %"class.blink::HTMLInputElement"* %4 to %"class.blink::HTMLFormControlElement"*
  %6 = bitcast %"class.blink::HTMLInputElement"* %4 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %7 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %7, i64 138
  %9 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::HTMLFormControlElement"* %5) #11
  br i1 %10, label %11, label %19

11:                                               ; preds = %1
  %12 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %13) #11
  %15 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %14, i64 0, i32 1
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %17 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %15, %"class.WTF::AtomicString"* dereferenceable(8) %16) #11
  %18 = bitcast %"class.blink::Element"* %17 to %"class.blink::SliderThumbElement"*
  tail call void @_ZN5blink18SliderThumbElement12StopDraggingEv(%"class.blink::SliderThumbElement"* %18) #11
  br label %19

19:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink14RangeInputType26ShouldRespectListAttributeEv(%"class.blink::RangeInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType26ListAttributeTargetChangedEv(%"class.blink::RangeInputType"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  tail call void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %20, i8 zeroext 14) #11
  %23 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  br label %24

24:                                               ; preds = %16, %22
  %25 = phi %"class.blink::HTMLInputElement"* [ %4, %16 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %26) #11
  %28 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %27, i64 0, i32 1
  %29 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderTrackE, align 8
  %30 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %28, %"class.WTF::AtomicString"* dereferenceable(8) %29) #11
  %31 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %34, label %40, label %36

36:                                               ; preds = %24
  %37 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRareData"**
  %38 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  br label %42

40:                                               ; preds = %24
  %41 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRenderingData"**
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi %"class.blink::NodeRenderingData"** [ %39, %36 ], [ %41, %40 ]
  %44 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %44, i64 0, i32 1
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutObject"* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %42
  br i1 %34, label %53, label %49

49:                                               ; preds = %48
  %50 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRareData"**
  %51 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %51, i64 0, i32 1, i32 0, i32 0
  br label %55

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRenderingData"**
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi %"class.blink::NodeRenderingData"** [ %52, %49 ], [ %54, %53 ]
  %57 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %57, i64 0, i32 1
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %59, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null)
  br label %60

60:                                               ; preds = %42, %55
  ret void
}

declare void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.1675, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #11
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !9

23:                                               ; preds = %19
  %24 = bitcast %class.anon.1675* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = getelementptr inbounds %class.anon.1675, %class.anon.1675* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.1675, %class.anon.1675* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), %class.anon.1675* nonnull dereferenceable(16) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #11
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #11
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType26ListAttributeTargetChangedEv(%"class.blink::RangeInputType"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %3 = bitcast %"class.WTF::Vector.39"* %2 to %"class.blink::RangeInputType"*
  tail call void @_ZN5blink14RangeInputType26ListAttributeTargetChangedEv(%"class.blink::RangeInputType"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType20UpdateTickMarkValuesEv(%"class.blink::RangeInputType"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %134, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %19

19:                                               ; preds = %18, %14
  %20 = bitcast %"class.WTF::Vector.39"* %10 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.WTF::Vector.39"* %10 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %11, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #11
  br label %23

23:                                               ; preds = %9, %19
  store i8 0, i8* %6, align 8
  %24 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %24, align 8
  %26 = tail call %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* %25) #11
  %27 = icmp eq %"class.blink::HTMLDataListElement"* %26, null
  br i1 %27, label %134, label %28

28:                                               ; preds = %23
  %29 = tail call %"class.blink::HTMLDataListOptionsCollection"* @_ZN5blink19HTMLDataListElement7optionsEv(%"class.blink::HTMLDataListElement"* nonnull %26) #11
  %30 = getelementptr inbounds %"class.blink::HTMLDataListOptionsCollection", %"class.blink::HTMLDataListOptionsCollection"* %29, i64 0, i32 0
  %31 = tail call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %30) #11
  %32 = load i32, i32* %11, align 8
  %33 = icmp ult i32 %32, %31
  br i1 %33, label %34, label %47, !prof !9

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %10, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %35, align 8
  %37 = icmp eq %"class.blink::Decimal"* %36, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %34
  %39 = zext i32 %31 to i64
  %40 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm(i64 %39) #11
  %41 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %40, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7DecimalEEEPKcv, i64 0, i64 0)) #11
  %42 = ptrtoint i8* %41 to i64
  %43 = bitcast %"class.WTF::Vector.39"* %10 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = udiv i64 %40, 24
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %11, align 8
  br label %47

46:                                               ; preds = %34
  tail call void @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.39"* %10, i32 %31) #11
  br label %47

47:                                               ; preds = %28, %38, %46
  %48 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %30) #11
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.WTF::String"* %3 to i8*
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::Decimal"* %4 to i8*
  %54 = bitcast %"class.blink::Decimal"* %5 to i8*
  %55 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %10, i64 0, i32 0, i32 0, i32 0
  br label %86

57:                                               ; preds = %130, %47
  %58 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %11, align 8
  %61 = icmp ugt i32 %60, %59
  br i1 %61, label %62, label %79

62:                                               ; preds = %57
  %63 = icmp eq i32 %59, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %62
  %65 = zext i32 %59 to i64
  %66 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm(i64 %65) #11
  %67 = load i32, i32* %11, align 8
  %68 = zext i32 %67 to i64
  %69 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm(i64 %68) #11
  %70 = icmp eq i64 %69, %66
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = udiv i64 %66, 24
  %73 = trunc i64 %72 to i32
  store i32 %73, i32* %11, align 8
  br label %79

74:                                               ; preds = %64
  call void @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.39"* %10, i32 %59) #11
  br label %79

75:                                               ; preds = %62
  %76 = bitcast %"class.WTF::Vector.39"* %10 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.WTF::Vector.39"* %10 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  store i32 0, i32* %11, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %57, %71, %74, %75
  %80 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %10, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %80, align 8
  %82 = load i32, i32* %58, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %81, i64 %83
  %85 = bitcast i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  store i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZN5blinkL14DecimalCompareERKNS_7DecimalES2_, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  call void @_ZNSt3__16__sortIRPFbRKN5blink7DecimalES4_EPS2_EEvT0_S9_T_(%"class.blink::Decimal"* %81, %"class.blink::Decimal"* %84, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** nonnull dereferenceable(8) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  br label %134

86:                                               ; preds = %50, %130
  %87 = phi i32 [ 0, %50 ], [ %131, %130 ]
  %88 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %30, i32 %87) #11
  %89 = bitcast %"class.blink::Element"* %88 to %"class.blink::HTMLOptionElement"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %52, align 8
  %90 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* %89) #11
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %52, align 8
  %91 = call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* %89) #11
  br i1 %91, label %114, label %92

92:                                               ; preds = %86
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %130, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %95
  %100 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %24, align 8
  %101 = call zeroext i1 @_ZNK5blink16HTMLInputElement12IsValidValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %100, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  br i1 %101, label %102, label %114

102:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %5) #11
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %4, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #11
  %103 = load i32, i32* %55, align 4
  %104 = load i32, i32* %11, align 8
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %112, label %106, !prof !11

106:                                              ; preds = %102
  %107 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %56, align 8
  %108 = zext i32 %103 to i64
  %109 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %107, i64 %108
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* %109, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #11
  %110 = load i32, i32* %55, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %55, align 4
  br label %113

112:                                              ; preds = %102
  call void @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.39"* %10, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #11
  br label %113

113:                                              ; preds = %106, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #11
  br label %114

114:                                              ; preds = %99, %86, %95, %113
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #11
  br label %130

130:                                              ; preds = %92, %114, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %131 = add nuw i32 %87, 1
  %132 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %30) #11
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %86, label %57

134:                                              ; preds = %79, %23, %1
  ret void
}

declare %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLDataListOptionsCollection"* @_ZN5blink19HTMLDataListElement7optionsEv(%"class.blink::HTMLDataListElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement12IsValidValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL14DecimalCompareERKNS_7DecimalES2_(%"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) #0 {
  %3 = tail call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* noalias sret, %"class.blink::RangeInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  tail call void @_ZN5blink14RangeInputType20UpdateTickMarkValuesEv(%"class.blink::RangeInputType"* %1)
  %8 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = lshr i32 %10, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %46, label %16

15:                                               ; preds = %3
  tail call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* sret %0) #11
  br label %74

16:                                               ; preds = %12, %44
  %17 = phi i32 [ %45, %44 ], [ %10, %12 ]
  %18 = phi i32 [ %42, %44 ], [ %13, %12 ]
  %19 = phi i32 [ %39, %44 ], [ %10, %12 ]
  %20 = phi i32 [ %38, %44 ], [ 0, %12 ]
  %21 = add i32 %17, -1
  %22 = icmp eq i32 %18, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = tail call dereferenceable(24) %"class.blink::Decimal"* @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"* %8, i32 %18) #11
  %25 = tail call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* %24, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = add i32 %18, 1
  br label %49

28:                                               ; preds = %23, %16
  %29 = add i32 %18, -1
  %30 = tail call dereferenceable(24) %"class.blink::Decimal"* @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"* %8, i32 %29) #11
  %31 = tail call zeroext i1 @_ZNK5blink7DecimalleERKS0_(%"class.blink::Decimal"* %30, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = tail call dereferenceable(24) %"class.blink::Decimal"* @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"* %8, i32 %18) #11
  %34 = tail call zeroext i1 @_ZNK5blink7DecimalgeERKS0_(%"class.blink::Decimal"* %33, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  br i1 %34, label %49, label %35

35:                                               ; preds = %32, %28
  %36 = tail call dereferenceable(24) %"class.blink::Decimal"* @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"* %8, i32 %18) #11
  %37 = tail call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* %36, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %38 = select i1 %37, i32 %18, i32 %20
  %39 = select i1 %37, i32 %19, i32 %18
  %40 = sub i32 %39, %38
  %41 = lshr i32 %40, 1
  %42 = add i32 %41, %38
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %35
  %45 = load i32, i32* %9, align 4
  br label %16

46:                                               ; preds = %35, %12
  %47 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  br label %57

49:                                               ; preds = %32, %26
  %50 = phi i32 [ %27, %26 ], [ %18, %32 ]
  %51 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = icmp eq i32 %50, 0
  %53 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  br i1 %52, label %57, label %54

54:                                               ; preds = %49
  %55 = add i32 %50, -1
  %56 = tail call dereferenceable(24) %"class.blink::Decimal"* @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"* %8, i32 %55) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* dereferenceable(24) %56) #11
  br label %59

57:                                               ; preds = %46, %49
  %58 = phi i8* [ %47, %46 ], [ %51, %49 ]
  call void @_ZN5blink7Decimal8InfinityENS0_4SignE(%"class.blink::Decimal"* nonnull sret %4, i32 1) #11
  br label %59

59:                                               ; preds = %57, %54
  %60 = phi i8* [ %58, %57 ], [ %51, %54 ]
  %61 = phi i32 [ 0, %57 ], [ %50, %54 ]
  %62 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  %63 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %64 = load i32, i32* %9, align 4
  %65 = icmp eq i32 %61, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  %67 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"* %8, i32 %61) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* dereferenceable(24) %67) #11
  br label %69

68:                                               ; preds = %59
  call void @_ZN5blink7Decimal8InfinityENS0_4SignE(%"class.blink::Decimal"* nonnull sret %5, i32 0) #11
  br label %69

69:                                               ; preds = %68, %66
  %70 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %6, %"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %71 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %7, %"class.blink::Decimal"* %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #11
  %72 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  %73 = select i1 %72, %"class.blink::Decimal"* %5, %"class.blink::Decimal"* %4
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %73) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #11
  br label %74

74:                                               ; preds = %69, %15
  ret void
}

declare zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7DecimalleERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7DecimalgeERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink7Decimal8InfinityENS0_4SignE(%"class.blink::Decimal"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RangeInputType21ValueAttributeChangedEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %4) #11
  %6 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 1
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %8 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %7) #11
  %9 = bitcast %"class.blink::Element"* %8 to %"class.blink::SliderThumbElement"*
  tail call void @_ZN5blink18SliderThumbElement20SetPositionFromValueEv(%"class.blink::SliderThumbElement"* %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RangeInputType21ValueAttributeChangedEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::HTMLInputElement"**
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %5) #11
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 1
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %9 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %8) #11
  %10 = bitcast %"class.blink::Element"* %9 to %"class.blink::SliderThumbElement"*
  tail call void @_ZN5blink18SliderThumbElement20SetPositionFromValueEv(%"class.blink::SliderThumbElement"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14RangeInputType15IsDraggedSliderEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %4) #11
  %6 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 1
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %8 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %7) #11
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i8
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK5blink4Node25IsUserActionElementActiveEv(%"class.blink::Node"* %14) #11
  br label %16

16:                                               ; preds = %1, %13
  %17 = phi i1 [ false, %1 ], [ %15, %13 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink14RangeInputType15IsDraggedSliderEv(%"class.blink::RangeInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::HTMLInputElement"**
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %5) #11
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 1
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdSliderThumbE, align 8
  %9 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %8) #11
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = trunc i32 %11 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5blink4Node25IsUserActionElementActiveEv(%"class.blink::Node"* %15) #11
  br label %17

17:                                               ; preds = %1, %14
  %18 = phi i1 [ false, %1 ], [ %16, %14 ]
  ret i1 %18
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14RangeInputTypeD2Ev(%"class.blink::RangeInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::InputTypeView", %"class.blink::InputTypeView"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %5, align 8
  %7 = icmp eq %"class.blink::Decimal"* %6, null
  %8 = bitcast %"class.blink::Decimal"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !11

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #11
  store %"class.blink::Decimal"* null, %"class.blink::Decimal"** %5, align 8
  br label %15

15:                                               ; preds = %1, %14
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %3) #11
  %16 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %16) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14RangeInputTypeD0Ev(%"class.blink::RangeInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::InputTypeView", %"class.blink::InputTypeView"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %5, align 8
  %7 = icmp eq %"class.blink::Decimal"* %6, null
  %8 = bitcast %"class.blink::Decimal"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !11

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #11
  store %"class.blink::Decimal"* null, %"class.blink::Decimal"** %5, align 8
  br label %15

15:                                               ; preds = %1, %14
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %3) #11
  %16 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %16) #11
  ret void
}

declare zeroext i1 @_ZNK5blink9InputType20IsInteractiveContentEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12IsTextButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsTextFieldEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsFormDataAppendableEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType16AppendToFormDataERNS_8FormDataE(%"class.blink::InputType"*, %"class.blink::FormData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType21ResultForDialogSubmitEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType24ValueInFilenameValueModeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12DefaultLabelEv(%"class.blink::InputType"*) unnamed_addr #1

declare double @_ZNK5blink9InputType11ValueAsDateEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.absl::optional.1602"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink9InputType14ReadingCheckedEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType21WillUpdateCheckednessEb(%"class.blink::InputType"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType18SupportsValidationEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12TypeMismatchEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12ValueMissingERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9InputType21DefaultValueForStepUpEv(%"class.blink::Decimal"* sret, %"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12BadInputTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16TypeMismatchTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16ValueMissingTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType17CanSetStringValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12VisibleValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType25MatchesDefaultPseudoClassEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20LayoutObjectIsNeededEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27ShouldRespectAlignAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::FileList"* @_ZN5blink9InputType5FilesEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType8SetFilesEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InputType"*, %"class.WTF::Vector.1003"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::InputType"*, %"class.blink::DragData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9InputType19DroppedFileSystemIdEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20CanSetSuggestedValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink9InputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType14IsEnumeratableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11IsCheckableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MaxLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MinLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19SupportsPlaceholderEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsReadOnlyEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::InputType"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink9InputType24SubResourceAttributeNameEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE(%"class.blink::InputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN5blink9InputType24OnAttachWithLayoutObjectEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25ShouldAppearIndeterminateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType26SupportsInputModeAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20SupportsSelectionAPIEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType6HeightEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType5WidthEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType19DispatchSearchEventEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::ColorChooserClient"* @_ZN5blink9InputType21GetColorChooserClientEv(%"class.blink::InputType"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink14RangeInputTypeD1Ev(%"class.blink::RangeInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %3 = bitcast %"class.WTF::Vector.39"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %2, i64 1
  %5 = bitcast %"class.WTF::Vector.39"* %4 to %"class.blink::InputTypeView"*
  %6 = bitcast %"class.WTF::Vector.39"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %2, i64 3, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %7, align 8
  %9 = icmp eq %"class.blink::Decimal"* %8, null
  %10 = bitcast %"class.blink::Decimal"* %8 to i8*
  br i1 %9, label %17, label %11, !prof !9

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %2, i64 3, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !11

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #11
  store %"class.blink::Decimal"* null, %"class.blink::Decimal"** %7, align 8
  br label %17

17:                                               ; preds = %1, %16
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %5) #11
  %18 = bitcast %"class.WTF::Vector.39"* %2 to %"class.blink::InputType"*
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %18) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink14RangeInputTypeD0Ev(%"class.blink::RangeInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RangeInputType", %"class.blink::RangeInputType"* %0, i64 -1, i32 3
  %3 = bitcast %"class.WTF::Vector.39"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %2, i64 1
  %5 = bitcast %"class.WTF::Vector.39"* %4 to %"class.blink::InputTypeView"*
  %6 = bitcast %"class.WTF::Vector.39"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [102 x i8*], [60 x i8*] }, { [102 x i8*], [60 x i8*] }* @_ZTVN5blink14RangeInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %2, i64 3, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %7, align 8
  %9 = icmp eq %"class.blink::Decimal"* %8, null
  %10 = bitcast %"class.blink::Decimal"* %8 to i8*
  br i1 %9, label %17, label %11, !prof !9

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %2, i64 3, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !11

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #11
  store %"class.blink::Decimal"* null, %"class.blink::Decimal"** %7, align 8
  br label %17

17:                                               ; preds = %1, %16
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %5) #11
  %18 = bitcast %"class.WTF::Vector.39"* %2 to %"class.blink::InputType"*
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %18) #11
  ret void
}

declare zeroext i1 @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi(%"class.blink::InputTypeView"*, i32, i32* dereferenceable(4)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"* dereferenceable(296)) unnamed_addr #1

declare %"class.blink::ClickHandlingState"* @_ZN5blink13InputTypeView17WillDispatchClickEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::ClickHandlingState"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE(%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink13InputTypeView17FormForSubmissionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32) unnamed_addr #1

declare void @_ZN5blink13InputTypeView15HandleBlurEventEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView4BlurEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView17SubtreeHasChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE(%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView14ClosePopupViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView14HasOpenedPopupEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView18NeedsShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.blink::HTMLInputElement"* @_ZNK5blink13InputTypeView12UploadButtonEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13InputTypeView14FileStatusTextEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19AltAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19SrcAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MultipleAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24RequiredAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb(%"class.blink::InputTypeView"*, i1 zeroext) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink13InputTypeView17PopupRootAXObjectEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView21EnsureFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView20EnsurePrimaryContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13InputTypeView18HasFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink13InputTypeView20SaveFormControlStateEv() unnamed_addr

declare void @_ZN5blink13InputTypeView23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView11HasBadInputEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink13InputTypeView17FocusedFieldIndexEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.1675* dereferenceable(16)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = tail call i8* @_Znwm(i64 192) #13
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #11
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #11
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #11
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #11
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #11
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #11
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #11
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %38 = getelementptr inbounds %class.anon.1675, %class.anon.1675* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #11
  %40 = getelementptr inbounds %class.anon.1675, %class.anon.1675* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #11
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #11
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #11
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #11
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #11
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #11
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !12

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !14

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !15

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #13
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #13, !noalias !16
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !16
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #13
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #8

declare %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25IsUserActionElementActiveEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"*) unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SliderThumbElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18SliderThumbElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 120
  br i1 %15, label %46, label %16, !prof !11

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 120
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -120
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 60, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 120, i64 %47) #11
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::SliderThumbElement"*
  tail call void @_ZN5blink18SliderThumbElementC1ERNS_8DocumentE(%"class.blink::SliderThumbElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::SliderThumbElement"* %51
}

declare void @_ZN5blink18SliderThumbElementC1ERNS_8DocumentE(%"class.blink::SliderThumbElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SliderTrackElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18SliderTrackElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !11

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #11
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::SliderTrackElement"*
  tail call void @_ZN5blink18SliderTrackElementC1ERNS_8DocumentE(%"class.blink::SliderTrackElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::SliderTrackElement"* %51
}

declare void @_ZN5blink18SliderTrackElementC1ERNS_8DocumentE(%"class.blink::SliderTrackElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SliderContainerElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_22SliderContainerElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 128
  br i1 %15, label %46, label %16, !prof !11

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 128
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -128
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 64, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 128, i64 %47) #11
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::SliderContainerElement"*
  tail call void @_ZN5blink22SliderContainerElementC1ERNS_8DocumentE(%"class.blink::SliderContainerElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::SliderContainerElement"* %51
}

declare void @_ZN5blink22SliderContainerElementC1ERNS_8DocumentE(%"class.blink::SliderContainerElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.39"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::Decimal"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::Decimal"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* %16, %"class.blink::Decimal"* dereferenceable(24) %15) #11
  %17 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %16, i64 1
  %18 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %15, i64 1
  %19 = icmp eq %"class.blink::Decimal"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %"class.blink::Decimal"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #11
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm(i64 %23) #11
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7DecimalEEEPKcv, i64 0, i64 0)) #11
  %26 = udiv i64 %24, 24
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"class.blink::Decimal"* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %"class.blink::Decimal"*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %"class.blink::Decimal"* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %"class.blink::Decimal"* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* %41, %"class.blink::Decimal"* dereferenceable(24) %40) #11
  %42 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %41, i64 1
  %43 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %40, i64 1
  %44 = icmp eq %"class.blink::Decimal"* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector.39"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.39"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %6, align 8
  %8 = icmp ugt %"class.blink::Decimal"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Decimal"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !9

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Decimal"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7DecimalEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Decimal"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.39"* %0, i32 %22) #11
  %36 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Decimal"* %1 to i64
  %39 = ptrtoint %"class.blink::Decimal"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 24
  %42 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !9

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Decimal"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7DecimalEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7DecimalEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.39"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 24
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Decimal"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.39"* %0, i32 %50) #11
  %64 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Decimal"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Decimal"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Decimal"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %69, i64 %72
  tail call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* %73, %"class.blink::Decimal"* dereferenceable(24) %70) #11
  %74 = load i32, i32* %3, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN5blink7DecimalES4_EPS2_EEvT0_S9_T_(%"class.blink::Decimal"*, %"class.blink::Decimal"*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = bitcast %"class.blink::Decimal"* %6 to i8*
  %12 = bitcast %"class.blink::Decimal"* %8 to i8*
  %13 = bitcast %"class.blink::Decimal"* %7 to i8*
  %14 = bitcast %"class.blink::Decimal"* %5 to i8*
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  br label %16

16:                                               ; preds = %196, %3
  %17 = phi %"class.blink::Decimal"* [ %1, %3 ], [ %179, %196 ]
  %18 = phi %"class.blink::Decimal"* [ %0, %3 ], [ %25, %196 ]
  %19 = ptrtoint %"class.blink::Decimal"* %17 to i64
  %20 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %17, i64 -1
  %21 = ptrtoint %"class.blink::Decimal"* %17 to i64
  br label %22

22:                                               ; preds = %207, %16
  %23 = phi %"class.blink::Decimal"* [ %18, %16 ], [ %208, %207 ]
  br label %24

24:                                               ; preds = %135, %22
  %25 = phi %"class.blink::Decimal"* [ %23, %22 ], [ %126, %135 ]
  %26 = ptrtoint %"class.blink::Decimal"* %25 to i64
  %27 = sub i64 %19, %26
  %28 = sdiv exact i64 %27, 24
  switch i64 %28, label %52 [
    i64 0, label %211
    i64 1, label %211
    i64 2, label %29
    i64 3, label %37
    i64 4, label %41
    i64 5, label %46
  ]

29:                                               ; preds = %24
  %30 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %31 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %17, i64 -1
  %32 = call zeroext i1 %30(%"class.blink::Decimal"* dereferenceable(24) %31, %"class.blink::Decimal"* dereferenceable(24) %25) #11
  br i1 %32, label %33, label %211

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %10, %"class.blink::Decimal"* dereferenceable(24) %25) #11
  %35 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* dereferenceable(24) %31) #11
  %36 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %31, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  br label %211

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 1
  %39 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %17, i64 -1
  %40 = call i32 @_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %38, %"class.blink::Decimal"* %39, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %211

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 1
  %43 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 2
  %44 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %17, i64 -1
  %45 = call i32 @_ZNSt3__17__sort4IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %42, %"class.blink::Decimal"* %43, %"class.blink::Decimal"* %44, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %211

46:                                               ; preds = %24
  %47 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 1
  %48 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 2
  %49 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 3
  %50 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %17, i64 -1
  %51 = call i32 @_ZNSt3__17__sort5IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %47, %"class.blink::Decimal"* %48, %"class.blink::Decimal"* %49, %"class.blink::Decimal"* %50, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %211

52:                                               ; preds = %24
  %53 = icmp slt i64 %27, 168
  br i1 %53, label %54, label %83

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 2
  %56 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 1
  %57 = call i32 @_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %56, %"class.blink::Decimal"* %55, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2) #11
  %58 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 3
  %59 = icmp eq %"class.blink::Decimal"* %58, %17
  br i1 %59, label %211, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.blink::Decimal"* %9 to i8*
  br label %62

62:                                               ; preds = %80, %60
  %63 = phi %"class.blink::Decimal"* [ %58, %60 ], [ %81, %80 ]
  %64 = phi %"class.blink::Decimal"* [ %55, %60 ], [ %63, %80 ]
  %65 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %66 = call zeroext i1 %65(%"class.blink::Decimal"* dereferenceable(24) %63, %"class.blink::Decimal"* dereferenceable(24) %64) #11
  br i1 %66, label %67, label %80

67:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* dereferenceable(24) %63) #11
  br label %68

68:                                               ; preds = %73, %67
  %69 = phi %"class.blink::Decimal"* [ %63, %67 ], [ %70, %73 ]
  %70 = phi %"class.blink::Decimal"* [ %64, %67 ], [ %75, %73 ]
  %71 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %69, %"class.blink::Decimal"* dereferenceable(24) %70) #11
  %72 = icmp eq %"class.blink::Decimal"* %70, %25
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %75 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %70, i64 -1
  %76 = call zeroext i1 %74(%"class.blink::Decimal"* nonnull dereferenceable(24) %9, %"class.blink::Decimal"* dereferenceable(24) %75) #11
  br i1 %76, label %68, label %77

77:                                               ; preds = %73, %68
  %78 = phi %"class.blink::Decimal"* [ %25, %68 ], [ %70, %73 ]
  %79 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %78, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #11
  br label %80

80:                                               ; preds = %77, %62
  %81 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %63, i64 1
  %82 = icmp eq %"class.blink::Decimal"* %81, %17
  br i1 %82, label %211, label %62

83:                                               ; preds = %52
  %84 = icmp sgt i64 %27, 23976
  %85 = udiv i64 %27, 48
  %86 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 %85
  br i1 %84, label %87, label %92

87:                                               ; preds = %83
  %88 = udiv i64 %27, 96
  %89 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 %88
  %90 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %86, i64 %88
  %91 = call i32 @_ZNSt3__17__sort5IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %89, %"class.blink::Decimal"* %86, %"class.blink::Decimal"* %90, %"class.blink::Decimal"* %20, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %94

92:                                               ; preds = %83
  %93 = call i32 @_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %86, %"class.blink::Decimal"* %20, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %94

94:                                               ; preds = %92, %87
  %95 = phi i32 [ %91, %87 ], [ %93, %92 ]
  %96 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %97 = call zeroext i1 %96(%"class.blink::Decimal"* dereferenceable(24) %25, %"class.blink::Decimal"* dereferenceable(24) %86) #11
  br i1 %97, label %147, label %98

98:                                               ; preds = %94, %140
  %99 = phi %"class.blink::Decimal"* [ %100, %140 ], [ %20, %94 ]
  %100 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %99, i64 -1
  %101 = icmp eq %"class.blink::Decimal"* %25, %100
  br i1 %101, label %102, label %140

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 1
  %104 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %105 = call zeroext i1 %104(%"class.blink::Decimal"* dereferenceable(24) %25, %"class.blink::Decimal"* dereferenceable(24) %20) #11
  br i1 %105, label %119, label %106

106:                                              ; preds = %102
  %107 = icmp eq %"class.blink::Decimal"* %103, %20
  br i1 %107, label %211, label %108

108:                                              ; preds = %106, %116
  %109 = phi %"class.blink::Decimal"* [ %117, %116 ], [ %103, %106 ]
  %110 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %111 = call zeroext i1 %110(%"class.blink::Decimal"* dereferenceable(24) %25, %"class.blink::Decimal"* dereferenceable(24) %109) #11
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* dereferenceable(24) %109) #11
  %113 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %109, %"class.blink::Decimal"* dereferenceable(24) %20) #11
  %114 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %20, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %115 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %109, i64 1
  br label %119

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %109, i64 1
  %118 = icmp eq %"class.blink::Decimal"* %117, %20
  br i1 %118, label %211, label %108

119:                                              ; preds = %112, %102
  %120 = phi %"class.blink::Decimal"* [ %103, %102 ], [ %115, %112 ]
  %121 = icmp eq %"class.blink::Decimal"* %120, %20
  br i1 %121, label %211, label %122

122:                                              ; preds = %119, %137
  %123 = phi %"class.blink::Decimal"* [ %129, %137 ], [ %120, %119 ]
  %124 = phi %"class.blink::Decimal"* [ %133, %137 ], [ %20, %119 ]
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi %"class.blink::Decimal"* [ %123, %122 ], [ %129, %125 ]
  %127 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %128 = call zeroext i1 %127(%"class.blink::Decimal"* dereferenceable(24) %25, %"class.blink::Decimal"* dereferenceable(24) %126) #11
  %129 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %126, i64 1
  br i1 %128, label %130, label %125

130:                                              ; preds = %125, %130
  %131 = phi %"class.blink::Decimal"* [ %133, %130 ], [ %124, %125 ]
  %132 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %133 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %131, i64 -1
  %134 = call zeroext i1 %132(%"class.blink::Decimal"* dereferenceable(24) %25, %"class.blink::Decimal"* dereferenceable(24) %133) #11
  br i1 %134, label %130, label %135

135:                                              ; preds = %130
  %136 = icmp ult %"class.blink::Decimal"* %126, %133
  br i1 %136, label %137, label %24

137:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %126) #11
  %138 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %126, %"class.blink::Decimal"* dereferenceable(24) %133) #11
  %139 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %133, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br label %122

140:                                              ; preds = %98
  %141 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %142 = call zeroext i1 %141(%"class.blink::Decimal"* dereferenceable(24) %100, %"class.blink::Decimal"* dereferenceable(24) %86) #11
  br i1 %142, label %143, label %98

143:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* dereferenceable(24) %25) #11
  %144 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* dereferenceable(24) %100) #11
  %145 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %100, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %146 = add i32 %95, 1
  br label %147

147:                                              ; preds = %94, %143
  %148 = phi i32 [ %146, %143 ], [ %95, %94 ]
  %149 = phi %"class.blink::Decimal"* [ %100, %143 ], [ %20, %94 ]
  %150 = ptrtoint %"class.blink::Decimal"* %25 to i64
  %151 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %25, i64 1
  %152 = icmp ult %"class.blink::Decimal"* %151, %149
  br i1 %152, label %153, label %176

153:                                              ; preds = %147, %170
  %154 = phi %"class.blink::Decimal"* [ %175, %170 ], [ %86, %147 ]
  %155 = phi i32 [ %173, %170 ], [ %148, %147 ]
  %156 = phi %"class.blink::Decimal"* [ %162, %170 ], [ %151, %147 ]
  %157 = phi %"class.blink::Decimal"* [ %166, %170 ], [ %149, %147 ]
  br label %158

158:                                              ; preds = %158, %153
  %159 = phi %"class.blink::Decimal"* [ %156, %153 ], [ %162, %158 ]
  %160 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %161 = call zeroext i1 %160(%"class.blink::Decimal"* dereferenceable(24) %159, %"class.blink::Decimal"* dereferenceable(24) %154) #11
  %162 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %159, i64 1
  br i1 %161, label %158, label %163

163:                                              ; preds = %158, %163
  %164 = phi %"class.blink::Decimal"* [ %166, %163 ], [ %157, %158 ]
  %165 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %166 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %164, i64 -1
  %167 = call zeroext i1 %165(%"class.blink::Decimal"* dereferenceable(24) %166, %"class.blink::Decimal"* dereferenceable(24) %154) #11
  br i1 %167, label %168, label %163

168:                                              ; preds = %163
  %169 = icmp ugt %"class.blink::Decimal"* %159, %166
  br i1 %169, label %176, label %170

170:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* dereferenceable(24) %159) #11
  %171 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %159, %"class.blink::Decimal"* dereferenceable(24) %166) #11
  %172 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %166, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %173 = add i32 %155, 1
  %174 = icmp eq %"class.blink::Decimal"* %154, %159
  %175 = select i1 %174, %"class.blink::Decimal"* %166, %"class.blink::Decimal"* %154
  br label %153

176:                                              ; preds = %168, %147
  %177 = phi %"class.blink::Decimal"* [ %86, %147 ], [ %154, %168 ]
  %178 = phi i32 [ %148, %147 ], [ %155, %168 ]
  %179 = phi %"class.blink::Decimal"* [ %151, %147 ], [ %159, %168 ]
  %180 = icmp eq %"class.blink::Decimal"* %179, %177
  br i1 %180, label %188, label %181

181:                                              ; preds = %176
  %182 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %183 = call zeroext i1 %182(%"class.blink::Decimal"* dereferenceable(24) %177, %"class.blink::Decimal"* dereferenceable(24) %179) #11
  br i1 %183, label %184, label %188

184:                                              ; preds = %181
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* dereferenceable(24) %179) #11
  %185 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %179, %"class.blink::Decimal"* dereferenceable(24) %177) #11
  %186 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %177, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  %187 = add i32 %178, 1
  br label %188

188:                                              ; preds = %176, %184, %181
  %189 = phi i32 [ %187, %184 ], [ %178, %181 ], [ %178, %176 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %188
  %192 = call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink7DecimalES4_EPS2_EEbT0_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %179, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  %193 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %179, i64 1
  %194 = call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink7DecimalES4_EPS2_EEbT0_S9_T_(%"class.blink::Decimal"* %193, %"class.blink::Decimal"* %17, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  br i1 %192, label %211, label %196

196:                                              ; preds = %195, %209
  br label %16

197:                                              ; preds = %191
  br i1 %192, label %207, label %198

198:                                              ; preds = %197, %188
  %199 = ptrtoint %"class.blink::Decimal"* %179 to i64
  %200 = sub i64 %199, %150
  %201 = sdiv exact i64 %200, 24
  %202 = sub i64 %21, %199
  %203 = sdiv exact i64 %202, 24
  %204 = icmp slt i64 %201, %203
  br i1 %204, label %205, label %209

205:                                              ; preds = %198
  call void @_ZNSt3__16__sortIRPFbRKN5blink7DecimalES4_EPS2_EEvT0_S9_T_(%"class.blink::Decimal"* %25, %"class.blink::Decimal"* %179, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  %206 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %179, i64 1
  br label %207

207:                                              ; preds = %205, %197
  %208 = phi %"class.blink::Decimal"* [ %193, %197 ], [ %206, %205 ]
  br label %22

209:                                              ; preds = %198
  %210 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %179, i64 1
  call void @_ZNSt3__16__sortIRPFbRKN5blink7DecimalES4_EPS2_EEvT0_S9_T_(%"class.blink::Decimal"* %210, %"class.blink::Decimal"* %17, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %196

211:                                              ; preds = %195, %119, %24, %24, %106, %116, %80, %54, %29, %33, %37, %41, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_(%"class.blink::Decimal"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %3, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Decimal"* dereferenceable(24) %1, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  %12 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %3, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Decimal"* dereferenceable(24) %2, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  br i1 %11, label %25, label %14

14:                                               ; preds = %4
  br i1 %13, label %15, label %40

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %17 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %18 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  %19 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %3, align 8
  %20 = call zeroext i1 %19(%"class.blink::Decimal"* dereferenceable(24) %1, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  br i1 %20, label %21, label %40

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  %23 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %24 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br label %40

25:                                               ; preds = %4
  br i1 %13, label %26, label %30

26:                                               ; preds = %25
  %27 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  %28 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %29 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %40

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  %32 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %33 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %34 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %3, align 8
  %35 = call zeroext i1 %34(%"class.blink::Decimal"* dereferenceable(24) %2, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %38 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %39 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  br label %40

40:                                               ; preds = %30, %36, %15, %21, %14, %26
  %41 = phi i32 [ 1, %26 ], [ 0, %14 ], [ 2, %21 ], [ 1, %15 ], [ 2, %36 ], [ 1, %30 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.blink::Decimal"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* %1, %"class.blink::Decimal"* %2, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %4)
  %10 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %4, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Decimal"* dereferenceable(24) %3, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  br i1 %11, label %12, label %31

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %14 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %2, %"class.blink::Decimal"* dereferenceable(24) %3) #11
  %15 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %3, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %16 = add i32 %9, 1
  %17 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %4, align 8
  %18 = call zeroext i1 %17(%"class.blink::Decimal"* dereferenceable(24) %2, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %21 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %22 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  %23 = add i32 %9, 2
  %24 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %4, align 8
  %25 = call zeroext i1 %24(%"class.blink::Decimal"* dereferenceable(24) %1, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  %28 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %29 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %30 = add i32 %9, 3
  br label %31

31:                                               ; preds = %12, %26, %19, %5
  %32 = phi i32 [ %30, %26 ], [ %23, %19 ], [ %16, %12 ], [ %9, %5 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"class.blink::Decimal"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* %1, %"class.blink::Decimal"* %2, %"class.blink::Decimal"* %3, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %5)
  %12 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %5, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Decimal"* dereferenceable(24) %4, %"class.blink::Decimal"* dereferenceable(24) %3) #11
  br i1 %13, label %14, label %40

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %10, %"class.blink::Decimal"* dereferenceable(24) %3) #11
  %16 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %3, %"class.blink::Decimal"* dereferenceable(24) %4) #11
  %17 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  %18 = add i32 %11, 1
  %19 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %5, align 8
  %20 = call zeroext i1 %19(%"class.blink::Decimal"* dereferenceable(24) %3, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  br i1 %20, label %21, label %40

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %23 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %2, %"class.blink::Decimal"* dereferenceable(24) %3) #11
  %24 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %3, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %25 = add i32 %11, 2
  %26 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %5, align 8
  %27 = call zeroext i1 %26(%"class.blink::Decimal"* dereferenceable(24) %2, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  br i1 %27, label %28, label %40

28:                                               ; preds = %21
  %29 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %30 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* dereferenceable(24) %2) #11
  %31 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %32 = add i32 %11, 3
  %33 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %5, align 8
  %34 = call zeroext i1 %33(%"class.blink::Decimal"* dereferenceable(24) %1, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  br i1 %34, label %35, label %40

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  %37 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %1) #11
  %38 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %39 = add i32 %11, 4
  br label %40

40:                                               ; preds = %14, %28, %35, %21, %6
  %41 = phi i32 [ %39, %35 ], [ %32, %28 ], [ %25, %21 ], [ %18, %14 ], [ %11, %6 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink7DecimalES4_EPS2_EEbT0_S9_T_(%"class.blink::Decimal"*, %"class.blink::Decimal"*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = ptrtoint %"class.blink::Decimal"* %1 to i64
  %7 = ptrtoint %"class.blink::Decimal"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 24
  switch i64 %9, label %33 [
    i64 0, label %70
    i64 1, label %70
    i64 2, label %10
    i64 3, label %18
    i64 4, label %22
    i64 5, label %27
  ]

10:                                               ; preds = %3
  %11 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %12 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 -1
  %13 = tail call zeroext i1 %11(%"class.blink::Decimal"* dereferenceable(24) %12, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  br i1 %13, label %14, label %70

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* dereferenceable(24) %0) #11
  %16 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %12) #11
  %17 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %12, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  br label %70

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 1
  %20 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 -1
  %21 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* %19, %"class.blink::Decimal"* %20, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %70

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 1
  %24 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 2
  %25 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 -1
  %26 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* %23, %"class.blink::Decimal"* %24, %"class.blink::Decimal"* %25, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %70

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 1
  %29 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 2
  %30 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 3
  %31 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 -1
  %32 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* %28, %"class.blink::Decimal"* %29, %"class.blink::Decimal"* %30, %"class.blink::Decimal"* %31, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  br label %70

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 2
  %35 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 1
  %36 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink7DecimalES4_EPS2_EEjT0_S9_S9_T_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* %35, %"class.blink::Decimal"* %34, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** dereferenceable(8) %2)
  %37 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 3
  %38 = icmp eq %"class.blink::Decimal"* %37, %1
  br i1 %38, label %70, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::Decimal"* %5 to i8*
  %41 = bitcast %"class.blink::Decimal"* %5 to i8*
  br label %42

42:                                               ; preds = %39, %63
  %43 = phi %"class.blink::Decimal"* [ %37, %39 ], [ %65, %63 ]
  %44 = phi i32 [ 0, %39 ], [ %64, %63 ]
  %45 = phi %"class.blink::Decimal"* [ %34, %39 ], [ %43, %63 ]
  %46 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %47 = call zeroext i1 %46(%"class.blink::Decimal"* dereferenceable(24) %43, %"class.blink::Decimal"* dereferenceable(24) %45) #11
  br i1 %47, label %48, label %63

48:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* dereferenceable(24) %43) #11
  br label %49

49:                                               ; preds = %54, %48
  %50 = phi %"class.blink::Decimal"* [ %43, %48 ], [ %51, %54 ]
  %51 = phi %"class.blink::Decimal"* [ %45, %48 ], [ %56, %54 ]
  %52 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %50, %"class.blink::Decimal"* dereferenceable(24) %51) #11
  %53 = icmp eq %"class.blink::Decimal"* %51, %0
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = load i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)*, i1 (%"class.blink::Decimal"*, %"class.blink::Decimal"*)** %2, align 8
  %56 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %51, i64 -1
  %57 = call zeroext i1 %55(%"class.blink::Decimal"* nonnull dereferenceable(24) %5, %"class.blink::Decimal"* dereferenceable(24) %56) #11
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %54
  %59 = phi %"class.blink::Decimal"* [ %0, %49 ], [ %51, %54 ]
  %60 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %59, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #11
  %61 = add i32 %44, 1
  %62 = icmp eq i32 %61, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  br i1 %62, label %67, label %63

63:                                               ; preds = %58, %42
  %64 = phi i32 [ %61, %58 ], [ %44, %42 ]
  %65 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %43, i64 1
  %66 = icmp eq %"class.blink::Decimal"* %65, %1
  br i1 %66, label %70, label %42

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %43, i64 1
  %69 = icmp eq %"class.blink::Decimal"* %68, %1
  br label %70

70:                                               ; preds = %63, %67, %33, %10, %14, %3, %3, %27, %22, %18
  %71 = phi i1 [ true, %27 ], [ true, %22 ], [ true, %18 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %10 ], [ true, %33 ], [ %69, %67 ], [ true, %63 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::Decimal"* @_ZN3WTF6VectorIN5blink7DecimalELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Decimal"*, %"class.blink::Decimal"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %24, i64 %25
  ret %"class.blink::Decimal"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blinkL13EnsureMaximumERKNS_7DecimalES2_: argument 0"}
!5 = distinct !{!5, !"_ZN5blinkL13EnsureMaximumERKNS_7DecimalES2_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink9StepRange12DefaultValueEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink9StepRange12DefaultValueEv"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{i8 0, i8 2}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
