; ModuleID = '../../extensions/common/feature_switch.cc'
source_filename = "../../extensions/common/feature_switch.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [160 x i8] }
%"class.extensions::FeatureSwitch::ScopedOverride" = type <{ %"class.extensions::FeatureSwitch"*, i32, [4 x i8] }>
%"class.extensions::FeatureSwitch" = type <{ %"class.base::CommandLine"*, i8*, i8, [3 x i8], i32, %"class.absl::optional", [6 x i8] }>
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.14 }
%union.anon.14 = type { i8 }
%"class.extensions::(anonymous namespace)::CommonSwitches" = type { %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions12_GLOBAL__N_117g_common_switchesE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"enable-\00", align 1
@_ZN10extensions8switches25kForceDevModeHighlightingE = external constant [0 x i8], align 1
@_ZN10extensions8switches25kEmbeddedExtensionOptionsE = external constant [0 x i8], align 1
@_ZN10extensions8switches15kTraceAppSourceE = external constant [0 x i8], align 1
@_ZN10extensions12_GLOBAL__N_138kLoadMediaRouterComponentExtensionFlagE = internal constant [38 x i8] c"load-media-router-component-extension\00", align 16

@_ZN10extensions13FeatureSwitch14ScopedOverrideC1EPS0_b = hidden unnamed_addr alias void (%"class.extensions::FeatureSwitch::ScopedOverride"*, %"class.extensions::FeatureSwitch"*, i1), void (%"class.extensions::FeatureSwitch::ScopedOverride"*, %"class.extensions::FeatureSwitch"*, i1)* @_ZN10extensions13FeatureSwitch14ScopedOverrideC2EPS0_b
@_ZN10extensions13FeatureSwitch14ScopedOverrideD1Ev = hidden unnamed_addr alias void (%"class.extensions::FeatureSwitch::ScopedOverride"*), void (%"class.extensions::FeatureSwitch::ScopedOverride"*)* @_ZN10extensions13FeatureSwitch14ScopedOverrideD2Ev
@_ZN10extensions13FeatureSwitchC1EPKcNS0_12DefaultValueE = hidden unnamed_addr alias void (%"class.extensions::FeatureSwitch"*, i8*, i32), void (%"class.extensions::FeatureSwitch"*, i8*, i32)* @_ZN10extensions13FeatureSwitchC2EPKcNS0_12DefaultValueE
@_ZN10extensions13FeatureSwitchC1EPKN4base11CommandLineEPKcNS0_12DefaultValueE = hidden unnamed_addr alias void (%"class.extensions::FeatureSwitch"*, %"class.base::CommandLine"*, i8*, i32), void (%"class.extensions::FeatureSwitch"*, %"class.base::CommandLine"*, i8*, i32)* @_ZN10extensions13FeatureSwitchC2EPKN4base11CommandLineEPKcNS0_12DefaultValueE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::FeatureSwitch"* @_ZN10extensions13FeatureSwitch27force_dev_mode_highlightingEv() local_unnamed_addr #0 align 2 {
  %1 = tail call fastcc dereferenceable(160) %"class.extensions::(anonymous namespace)::CommonSwitches"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE3GetEv()
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::CommonSwitches", %"class.extensions::(anonymous namespace)::CommonSwitches"* %1, i64 0, i32 0
  ret %"class.extensions::FeatureSwitch"* %2
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(160) %"class.extensions::(anonymous namespace)::CommonSwitches"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE3GetEv() unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %13, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 0)) #8
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  store %"class.base::CommandLine"* %6, %"class.base::CommandLine"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 0) to %"class.base::CommandLine"**), align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions8switches25kForceDevModeHighlightingE, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 8) to i8**), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 16), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 20) to i32*), align 4
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 24), align 8
  %7 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  store %"class.base::CommandLine"* %7, %"class.base::CommandLine"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 32) to %"class.base::CommandLine"**), align 8
  store i8* null, i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 40) to i8**), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 48), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 52) to i32*), align 4
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 56), align 8
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  store %"class.base::CommandLine"* %8, %"class.base::CommandLine"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 64) to %"class.base::CommandLine"**), align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions8switches25kEmbeddedExtensionOptionsE, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 72) to i8**), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 80), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 84) to i32*), align 4
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 88), align 8
  %9 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  store %"class.base::CommandLine"* %9, %"class.base::CommandLine"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 96) to %"class.base::CommandLine"**), align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions8switches15kTraceAppSourceE, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 104) to i8**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 112), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 116) to i32*), align 4
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 120), align 8
  %10 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  store %"class.base::CommandLine"* %10, %"class.base::CommandLine"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 128) to %"class.base::CommandLine"**), align 8
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZN10extensions12_GLOBAL__N_138kLoadMediaRouterComponentExtensionFlagE, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 136) to i8**), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 144), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 148) to i32*), align 4
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 152), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE to i8*)) #8
  br label %13

11:                                               ; preds = %3
  %12 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 0) acquire, align 8
  br label %13

13:                                               ; preds = %0, %5, %11
  %14 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_117g_common_switchesE, i64 0, i32 1, i64 0) to i64), %5 ], [ %12, %11 ]
  %15 = inttoptr i64 %14 to %"class.extensions::(anonymous namespace)::CommonSwitches"*
  ret %"class.extensions::(anonymous namespace)::CommonSwitches"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::FeatureSwitch"* @_ZN10extensions13FeatureSwitch30prompt_for_external_extensionsEv() local_unnamed_addr #0 align 2 {
  %1 = tail call fastcc dereferenceable(160) %"class.extensions::(anonymous namespace)::CommonSwitches"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE3GetEv()
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::CommonSwitches", %"class.extensions::(anonymous namespace)::CommonSwitches"* %1, i64 0, i32 1
  ret %"class.extensions::FeatureSwitch"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::FeatureSwitch"* @_ZN10extensions13FeatureSwitch26embedded_extension_optionsEv() local_unnamed_addr #0 align 2 {
  %1 = tail call fastcc dereferenceable(160) %"class.extensions::(anonymous namespace)::CommonSwitches"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE3GetEv()
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::CommonSwitches", %"class.extensions::(anonymous namespace)::CommonSwitches"* %1, i64 0, i32 2
  ret %"class.extensions::FeatureSwitch"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::FeatureSwitch"* @_ZN10extensions13FeatureSwitch16trace_app_sourceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call fastcc dereferenceable(160) %"class.extensions::(anonymous namespace)::CommonSwitches"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE3GetEv()
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::CommonSwitches", %"class.extensions::(anonymous namespace)::CommonSwitches"* %1, i64 0, i32 3
  ret %"class.extensions::FeatureSwitch"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::FeatureSwitch"* @_ZN10extensions13FeatureSwitch37load_media_router_component_extensionEv() local_unnamed_addr #0 align 2 {
  %1 = tail call fastcc dereferenceable(160) %"class.extensions::(anonymous namespace)::CommonSwitches"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE3GetEv()
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::CommonSwitches", %"class.extensions::(anonymous namespace)::CommonSwitches"* %1, i64 0, i32 4
  ret %"class.extensions::FeatureSwitch"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions13FeatureSwitch14ScopedOverrideC2EPS0_b(%"class.extensions::FeatureSwitch::ScopedOverride"* nocapture, %"class.extensions::FeatureSwitch"*, i1 zeroext) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.extensions::FeatureSwitch::ScopedOverride", %"class.extensions::FeatureSwitch::ScopedOverride"* %0, i64 0, i32 0
  store %"class.extensions::FeatureSwitch"* %1, %"class.extensions::FeatureSwitch"** %4, align 8
  %5 = getelementptr inbounds %"class.extensions::FeatureSwitch::ScopedOverride", %"class.extensions::FeatureSwitch::ScopedOverride"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %5, align 8
  %8 = select i1 %2, i32 1, i32 2
  store i32 %8, i32* %6, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10extensions13FeatureSwitch16GetOverrideValueEv(%"class.extensions::FeatureSwitch"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions13FeatureSwitch16SetOverrideValueENS0_13OverrideValueE(%"class.extensions::FeatureSwitch"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions13FeatureSwitch14ScopedOverrideD2Ev(%"class.extensions::FeatureSwitch::ScopedOverride"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FeatureSwitch::ScopedOverride", %"class.extensions::FeatureSwitch::ScopedOverride"* %0, i64 0, i32 0
  %3 = load %"class.extensions::FeatureSwitch"*, %"class.extensions::FeatureSwitch"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::FeatureSwitch::ScopedOverride", %"class.extensions::FeatureSwitch::ScopedOverride"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %3, i64 0, i32 4
  store i32 %5, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13FeatureSwitchC2EPKcNS0_12DefaultValueE(%"class.extensions::FeatureSwitch"* nocapture, i8*, i32) unnamed_addr #0 align 2 {
  %4 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %5 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 0
  store %"class.base::CommandLine"* %4, %"class.base::CommandLine"** %5, align 8
  %6 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 1
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 2
  %8 = icmp eq i32 %2, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %7, align 8
  %10 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 1
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions13FeatureSwitchC2EPKN4base11CommandLineEPKcNS0_12DefaultValueE(%"class.extensions::FeatureSwitch"* nocapture, %"class.base::CommandLine"*, i8*, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 0
  store %"class.base::CommandLine"* %1, %"class.base::CommandLine"** %5, align 8
  %6 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 1
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 2
  %8 = icmp eq i32 %3, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %7, align 8
  %10 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13FeatureSwitch9IsEnabledEv(%"class.extensions::FeatureSwitch"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = icmp eq i32 %3, 1
  br label %25

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1, !range !2
  br label %22

15:                                               ; preds = %7
  %16 = tail call zeroext i1 @_ZNK10extensions13FeatureSwitch12ComputeValueEv(%"class.extensions::FeatureSwitch"* %0)
  %17 = bitcast %"class.absl::optional"* %8 to i16*
  %18 = zext i1 %16 to i16
  %19 = shl nuw nsw i16 %18, 8
  %20 = or i16 %19, 1
  store i16 %20, i16* %17, align 8
  %21 = zext i1 %16 to i8
  br label %22

22:                                               ; preds = %15, %12
  %23 = phi i8 [ %14, %12 ], [ %21, %15 ]
  %24 = icmp ne i8 %23, 0
  br label %25

25:                                               ; preds = %22, %5
  %26 = phi i1 [ %6, %5 ], [ %24, %22 ]
  ret i1 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13FeatureSwitch12ComputeValueEv(%"class.extensions::FeatureSwitch"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp ne i8 %13, 0
  br label %145

15:                                               ; preds = %1
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %19, align 8
  %22 = tail call i64 @strlen(i8* nonnull %9) #8
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::CommandLine"* %21, i8* nonnull %9, i64 %22) #8
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #8
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i8*, i8** %17, align 8
  %31 = select i1 %29, i8* %30, i8* %16
  %32 = load i64, i64* %18, align 8
  %33 = zext i8 %28 to i64
  %34 = select i1 %29, i64 %32, i64 %33
  %35 = call i32 @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %31, i64 %34, i32 3, %"class.std::__1::basic_string"* nonnull %5) #8
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i64, i64* %25, align 8
  %41 = zext i8 %38 to i64
  %42 = select i1 %39, i64 %40, i64 %41
  %43 = icmp eq i64 %42, 1
  br i1 %43, label %44, label %51

44:                                               ; preds = %15
  %45 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %133, label %47

47:                                               ; preds = %44
  %48 = load i8, i8* %37, align 1
  %49 = load i64, i64* %25, align 8
  %50 = zext i8 %48 to i64
  br label %51

51:                                               ; preds = %47, %15
  %52 = phi i64 [ %50, %47 ], [ %41, %15 ]
  %53 = phi i64 [ %49, %47 ], [ %40, %15 ]
  %54 = phi i8 [ %48, %47 ], [ %38, %15 ]
  %55 = icmp slt i8 %54, 0
  %56 = select i1 %55, i64 %53, i64 %52
  %57 = icmp eq i64 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %133, label %61

61:                                               ; preds = %51, %58
  %62 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %19, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #8
  %64 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #8, !noalias !3
  %65 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  store i8 7, i8* %66, align 1, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7, i1 false) #8, !noalias !3
  %67 = getelementptr inbounds i8, i8* %64, i64 7
  store i8 0, i8* %67, align 1, !noalias !3
  %68 = load i8*, i8** %8, align 8, !noalias !3
  %69 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %68) #8, !noalias !6
  %70 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 8 %70, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #8, !noalias !6
  %71 = load i8, i8* %66, align 1, !noalias !3
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8, !noalias !3
  call void @_ZdlPv(i8* %75) #9, !noalias !3
  br label %76

76:                                               ; preds = %61, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #8, !noalias !3
  %77 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = select i1 %80, i8* %82, i8* %63
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %79 to i64
  %87 = select i1 %80, i64 %85, i64 %86
  %88 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %62, i8* %83, i64 %87) #8
  %89 = load i8, i8* %78, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %76
  %92 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %76, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #8
  br i1 %88, label %133, label %94

94:                                               ; preds = %93
  %95 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %19, align 8
  %96 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #8
  %97 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #8, !noalias !9
  %98 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  store i8 8, i8* %99, align 1, !noalias !9
  %100 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 3271139874152081764, i64* %100, align 8, !noalias !9
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast i64* %101 to i8*
  store i8 0, i8* %102, align 8, !noalias !9
  %103 = load i8*, i8** %8, align 8, !noalias !9
  %104 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* %103) #8, !noalias !12
  %105 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %96, i8* align 8 %105, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #8, !noalias !12
  %106 = load i8, i8* %99, align 1, !noalias !9
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %94
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8, !noalias !9
  call void @_ZdlPv(i8* %110) #9, !noalias !9
  br label %111

111:                                              ; preds = %94, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #8, !noalias !9
  %112 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = select i1 %115, i8* %117, i8* %96
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = zext i8 %114 to i64
  %122 = select i1 %115, i64 %120, i64 %121
  %123 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %95, i8* %118, i64 %122) #8
  %124 = load i8, i8* %113, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %111
  %127 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %127) #9
  br label %128

128:                                              ; preds = %111, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #8
  br i1 %123, label %133, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 2
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = icmp ne i8 %131, 0
  br label %133

133:                                              ; preds = %128, %93, %58, %44, %129
  %134 = phi i1 [ %132, %129 ], [ true, %44 ], [ false, %58 ], [ true, %93 ], [ false, %128 ]
  %135 = load i8, i8* %37, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %138) #9
  br label %139

139:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  %140 = load i8, i8* %27, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %143) #9
  br label %144

144:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  br label %145

145:                                              ; preds = %144, %11
  %146 = phi i1 [ %134, %144 ], [ %14, %11 ]
  ret i1 %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #4

declare i32 @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13FeatureSwitch19GetLegacyEnableFlagEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.extensions::FeatureSwitch"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 7, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7, i1 false) #8
  %7 = getelementptr inbounds i8, i8* %4, i64 7
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %1, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %9) #8, !noalias !15
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #8, !noalias !15
  %13 = load i8, i8* %6, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %2, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13FeatureSwitch20GetLegacyDisableFlagEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.extensions::FeatureSwitch"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 8, i8* %6, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i64*
  store i64 3271139874152081764, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to i8*
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %1, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %11) #8, !noalias !18
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #8, !noalias !18
  %15 = load i8, i8* %6, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13FeatureSwitch8HasValueEv(%"class.extensions::FeatureSwitch"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %85

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 0
  %11 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %10, align 8
  %12 = getelementptr inbounds %"class.extensions::FeatureSwitch", %"class.extensions::FeatureSwitch"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %11, i8* %13) #8
  br i1 %14, label %85, label %15

15:                                               ; preds = %9
  %16 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %10, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8, !noalias !21
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 7, i8* %20, align 1, !noalias !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7, i1 false) #8, !noalias !21
  %21 = getelementptr inbounds i8, i8* %18, i64 7
  store i8 0, i8* %21, align 1, !noalias !21
  %22 = load i8*, i8** %12, align 8, !noalias !21
  %23 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %22) #8, !noalias !24
  %24 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %24, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #8, !noalias !24
  %25 = load i8, i8* %20, align 1, !noalias !21
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !noalias !21
  call void @_ZdlPv(i8* %29) #9, !noalias !21
  br label %30

30:                                               ; preds = %15, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8, !noalias !21
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %17
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %33 to i64
  %41 = select i1 %34, i64 %39, i64 %40
  %42 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %16, i8* %37, i64 %41) #8
  br i1 %42, label %78, label %43

43:                                               ; preds = %30
  %44 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %10, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8, !noalias !27
  %47 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 8, i8* %48, align 1, !noalias !27
  %49 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 3271139874152081764, i64* %49, align 8, !noalias !27
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast i64* %50 to i8*
  store i8 0, i8* %51, align 8, !noalias !27
  %52 = load i8*, i8** %12, align 8, !noalias !27
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* %52) #8, !noalias !30
  %54 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %54, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #8, !noalias !30
  %55 = load i8, i8* %48, align 1, !noalias !27
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8, !noalias !27
  call void @_ZdlPv(i8* %59) #9, !noalias !27
  br label %60

60:                                               ; preds = %43, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8, !noalias !27
  %61 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = select i1 %64, i8* %66, i8* %45
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %63 to i64
  %71 = select i1 %64, i64 %69, i64 %70
  %72 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %44, i8* %67, i64 %71) #8
  %73 = load i8, i8* %62, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %60
  %76 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %75, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  br label %78

78:                                               ; preds = %30, %77
  %79 = phi i1 [ %72, %77 ], [ true, %30 ]
  %80 = load i8, i8* %32, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %78, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  br label %85

85:                                               ; preds = %1, %9, %84
  %86 = phi i1 [ %79, %84 ], [ true, %9 ], [ true, %1 ]
  ret i1 %86
}

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_114CommonSwitchesENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv(i8*) #1 align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #4

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK10extensions13FeatureSwitch19GetLegacyEnableFlagEv: argument 0"}
!5 = distinct !{!5, !"_ZNK10extensions13FeatureSwitch19GetLegacyEnableFlagEv"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK10extensions13FeatureSwitch20GetLegacyDisableFlagEv: argument 0"}
!11 = distinct !{!11, !"_ZNK10extensions13FeatureSwitch20GetLegacyDisableFlagEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK10extensions13FeatureSwitch19GetLegacyEnableFlagEv: argument 0"}
!23 = distinct !{!23, !"_ZNK10extensions13FeatureSwitch19GetLegacyEnableFlagEv"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK10extensions13FeatureSwitch20GetLegacyDisableFlagEv: argument 0"}
!29 = distinct !{!29, !"_ZNK10extensions13FeatureSwitch20GetLegacyDisableFlagEv"}
!30 = !{!31, !28}
!31 = distinct !{!31, !32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
