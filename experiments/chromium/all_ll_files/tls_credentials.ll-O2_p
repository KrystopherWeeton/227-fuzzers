; ModuleID = '../../third_party/openscreen/src/platform/base/tls_credentials.cc'
source_filename = "../../third_party/openscreen/src/platform/base/tls_credentials.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.openscreen::TlsCredentials" = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

@_ZN10openscreen14TlsCredentialsC1Ev = hidden unnamed_addr alias void (%"struct.openscreen::TlsCredentials"*), void (%"struct.openscreen::TlsCredentials"*)* @_ZN10openscreen14TlsCredentialsC2Ev
@_ZN10openscreen14TlsCredentialsC1ENSt3__16vectorIhNS1_9allocatorIhEEEES5_S5_ = hidden unnamed_addr alias void (%"struct.openscreen::TlsCredentials"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*), void (%"struct.openscreen::TlsCredentials"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*)* @_ZN10openscreen14TlsCredentialsC2ENSt3__16vectorIhNS1_9allocatorIhEEEES5_S5_
@_ZN10openscreen14TlsCredentialsD1Ev = hidden unnamed_addr alias void (%"struct.openscreen::TlsCredentials"*), void (%"struct.openscreen::TlsCredentials"*)* @_ZN10openscreen14TlsCredentialsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen14TlsCredentialsC2Ev(%"struct.openscreen::TlsCredentials"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.openscreen::TlsCredentials"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen14TlsCredentialsC2ENSt3__16vectorIhNS1_9allocatorIhEEEES5_S5_(%"struct.openscreen::TlsCredentials"* nocapture, %"class.std::__1::vector"* nocapture, %"class.std::__1::vector"* nocapture, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.openscreen::TlsCredentials"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #3
  %6 = bitcast %"class.std::__1::vector"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.openscreen::TlsCredentials"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i8** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #3
  %20 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 1
  %21 = bitcast %"class.std::__1::vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #3
  %22 = bitcast %"class.std::__1::vector"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 1, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i8** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #3
  %36 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 2
  %37 = bitcast %"class.std::__1::vector"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #3
  %38 = bitcast %"class.std::__1::vector"* %3 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 2, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast i8** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen14TlsCredentialsD2Ev(%"struct.openscreen::TlsCredentials"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #4
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  tail call void @_ZdlPv(i8* nonnull %11) #4
  br label %17

17:                                               ; preds = %9, %13
  %18 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = ptrtoint i8* %19 to i64
  %23 = getelementptr inbounds %"struct.openscreen::TlsCredentials", %"struct.openscreen::TlsCredentials"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  tail call void @_ZdlPv(i8* nonnull %19) #4
  br label %25

25:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
