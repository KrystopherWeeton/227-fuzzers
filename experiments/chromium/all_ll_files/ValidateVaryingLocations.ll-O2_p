; ModuleID = '../../third_party/angle/src/compiler/translator/ValidateVaryingLocations.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/ValidateVaryingLocations.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.0"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.0" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sh::TField"**, %"class.sh::TField"**, %"class.std::__1::__compressed_pair" }
%"class.sh::TField" = type <{ %"class.sh::TType"*, %"class.sh::ImmutableString", %"struct.sh::TSourceLoc", i8, [7 x i8] }>
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TField"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.7", i8, [7 x i8] }>
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector.7" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.sh::TIntermNode"** }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string.15", %"class.std::__1::vector.21" }
%"class.std::__1::basic_string.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser" = type <{ %"class.sh::TIntermTraverser", %"class.std::__1::vector.80", %"class.std::__1::vector.80", i32, [4 x i8] }>
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.28", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.59", %"class.std::__1::vector.66", %"class.sh::TVector.7", %"class.std::__1::vector.73" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.30" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector.7" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.35", %"class.std::__1::vector.42", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::unique_ptr.44" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::unique_ptr.44"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i64 }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TConstantUnion" = type { %union.anon.58, i32 }
%union.anon.58 = type { i32 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.61" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector.7", %"class.sh::TVector.7" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.68" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.75" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"**, %"class.std::__1::__compressed_pair.82" }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.sh::TIntermSymbol"** }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.87", i8, [7 x i8] }>
%"class.sh::TVector.87" = type { %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { i32*, i32*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i32* }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.95"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.95" = type opaque
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.7", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.7" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.std::__1::map.98" = type { %"class.std::__1::__tree.99" }
%"class.std::__1::__tree.99" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"struct.sh::(anonymous namespace)::SymbolAndField" }
%"struct.sh::(anonymous namespace)::SymbolAndField" = type { %"class.sh::TIntermSymbol"*, %"class.sh::TField"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.15", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.19 }
%struct.anon.19 = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2sh10IsShaderInENS_10TQualifierE = comdat any

$_ZN2sh11IsShaderOutENS_10TQualifierE = comdat any

$_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE = comdat any

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE = comdat any

$_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"*)* @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"*)* @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"' conflicting location with '\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2sh29CalculateVaryingLocationCountERKNS_5TTypeEj(%"class.sh::TType"* dereferenceable(184), i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = tail call zeroext i1 @_ZN2sh10IsShaderInENS_10TQualifierE(i32 %4) #10
  %6 = icmp ne i32 %4, 80
  %7 = and i1 %6, %5
  switch i32 %1, label %13 [
    i32 36313, label %14
    i32 36487, label %14
    i32 36488, label %8
  ]

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN2sh11IsShaderOutENS_10TQualifierE(i32 %4) #10
  %10 = icmp ne i32 %4, 81
  %11 = and i1 %10, %9
  %12 = or i1 %7, %11
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %2, %2, %8, %13
  %15 = phi i1 [ false, %13 ], [ %12, %8 ], [ %7, %2 ], [ %7, %2 ]
  %16 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 91
  br i1 %18, label %19, label %46

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 12
  %21 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %20, align 8
  %22 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %21, i64 0, i32 1, i32 0
  %23 = load %"class.sh::TVector.0"*, %"class.sh::TVector.0"** %22, align 8
  %24 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.sh::TField"**, %"class.sh::TField"*** %24, align 8
  %26 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load %"class.sh::TField"**, %"class.sh::TField"*** %26, align 8
  %28 = icmp eq %"class.sh::TField"** %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %31, %19
  %30 = phi i32 [ 0, %19 ], [ %36, %31 ]
  br i1 %15, label %81, label %39

31:                                               ; preds = %19, %31
  %32 = phi i32 [ %36, %31 ], [ 0, %19 ]
  %33 = phi %"class.sh::TField"** [ %37, %31 ], [ %25, %19 ]
  %34 = load %"class.sh::TField"*, %"class.sh::TField"** %33, align 8
  %35 = tail call fastcc i32 @_ZN2sh12_GLOBAL__N_121GetFieldLocationCountEPKNS_6TFieldE(%"class.sh::TField"* %34) #10
  %36 = add nsw i32 %35, %32
  %37 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %33, i64 1
  %38 = icmp eq %"class.sh::TField"** %37, %27
  br i1 %38, label %29, label %31

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 10, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %81, label %43

43:                                               ; preds = %39
  %44 = tail call i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"* %0) #10
  %45 = mul i32 %44, %30
  br label %81

46:                                               ; preds = %14
  %47 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 13
  %48 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %47, align 8
  %49 = icmp eq %"class.sh::TStructure"* %48, null
  br i1 %49, label %66, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %48, i64 0, i32 2, i32 0
  %52 = load %"class.sh::TVector.0"*, %"class.sh::TVector.0"** %51, align 8
  %53 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.sh::TField"**, %"class.sh::TField"*** %53, align 8
  %55 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %52, i64 0, i32 0, i32 0, i32 1
  %56 = load %"class.sh::TField"**, %"class.sh::TField"*** %55, align 8
  %57 = icmp eq %"class.sh::TField"** %54, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %50, %58
  %59 = phi i32 [ %63, %58 ], [ 0, %50 ]
  %60 = phi %"class.sh::TField"** [ %64, %58 ], [ %54, %50 ]
  %61 = load %"class.sh::TField"*, %"class.sh::TField"** %60, align 8
  %62 = tail call fastcc i32 @_ZN2sh12_GLOBAL__N_121GetFieldLocationCountEPKNS_6TFieldE(%"class.sh::TField"* %61) #10
  %63 = add nsw i32 %62, %59
  %64 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %60, i64 1
  %65 = icmp eq %"class.sh::TField"** %64, %56
  br i1 %65, label %81, label %58

66:                                               ; preds = %46
  %67 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 8
  %68 = load i8, i8* %67, align 8
  %69 = icmp ugt i8 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 9
  %72 = load i8, i8* %71, align 1
  %73 = icmp ugt i8 %72, 1
  %74 = select i1 %73, i8 %68, i8 1
  %75 = zext i8 %74 to i32
  br label %76

76:                                               ; preds = %70, %66
  %77 = phi i32 [ 1, %66 ], [ %75, %70 ]
  br i1 %15, label %81, label %78

78:                                               ; preds = %76
  %79 = tail call i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"* %0) #10
  %80 = mul i32 %79, %77
  br label %81

81:                                               ; preds = %58, %78, %76, %50, %43, %39, %29
  %82 = phi i32 [ %30, %29 ], [ %45, %43 ], [ %30, %39 ], [ %80, %78 ], [ %77, %76 ], [ 0, %50 ], [ %63, %58 ]
  ret i32 %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24ValidateVaryingLocationsEPNS_12TIntermBlockEPNS_12TDiagnosticsEj(%"class.sh::TIntermBlock"*, %"class.sh::TDiagnostics"*, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", align 8
  %5 = bitcast %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 208, i1 false)
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %6, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #10
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 1
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector.80"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #10
  store i32 %2, i32* %9, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermTraverser"* nonnull %6) #10
  %11 = getelementptr inbounds %"class.sh::TDiagnostics", %"class.sh::TDiagnostics"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = load i32, i32* %9, align 8
  call fastcc void @_ZN2sh12_GLOBAL__N_141ValidateShaderInterfaceAndAssignLocationsEPNS_12TDiagnosticsERKNSt3__16vectorIPKNS_13TIntermSymbolENS3_9allocatorIS7_EEEEj(%"class.sh::TDiagnostics"* %1, %"class.std::__1::vector.80"* dereferenceable(24) %8, i32 %13) #10
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 2
  %15 = load i32, i32* %9, align 8
  call fastcc void @_ZN2sh12_GLOBAL__N_141ValidateShaderInterfaceAndAssignLocationsEPNS_12TDiagnosticsERKNSt3__16vectorIPKNS_13TIntermSymbolENS3_9allocatorIS7_EEEEj(%"class.sh::TDiagnostics"* %1, %"class.std::__1::vector.80"* dereferenceable(24) %14, i32 %15) #10
  %16 = load i32, i32* %11, align 8
  %17 = icmp eq i32 %16, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %18 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %18, align 8
  %20 = icmp eq %"class.sh::TIntermSymbol"** %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %3
  %22 = ptrtoint %"class.sh::TIntermSymbol"** %19 to i64
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %"class.sh::TIntermSymbol"*** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.sh::TIntermSymbol"** %19 to i8*
  call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %21, %3
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 1, i32 0, i32 0
  %28 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %27, align 8
  %29 = icmp eq %"class.sh::TIntermSymbol"** %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"class.sh::TIntermSymbol"** %28 to i64
  %32 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %4, i64 0, i32 1, i32 0, i32 1
  %33 = bitcast %"class.sh::TIntermSymbol"*** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.sh::TIntermSymbol"** %28 to i8*
  call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %26, %30
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %5) #10
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserD2Ev(%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %3, align 8
  %5 = icmp eq %"class.sh::TIntermSymbol"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.sh::TIntermSymbol"** %4 to i64
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.sh::TIntermSymbol"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.sh::TIntermSymbol"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %12, align 8
  %14 = icmp eq %"class.sh::TIntermSymbol"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.sh::TIntermSymbol"** %13 to i64
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.sh::TIntermSymbol"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.sh::TIntermSymbol"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %21) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh10IsShaderInENS_10TQualifierE(i32) local_unnamed_addr #3 comdat {
  switch i32 %0, label %2 [
    i32 9, label %3
    i32 82, label %3
    i32 88, label %3
    i32 72, label %3
    i32 12, label %3
    i32 74, label %3
    i32 3, label %3
    i32 4, label %3
    i32 49, label %3
    i32 50, label %3
    i32 51, label %3
    i32 52, label %3
    i32 53, label %3
    i32 80, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh11IsShaderOutENS_10TQualifierE(i32) local_unnamed_addr #3 comdat {
  switch i32 %0, label %2 [
    i32 11, label %3
    i32 83, label %3
    i32 89, label %3
    i32 73, label %3
    i32 10, label %3
    i32 84, label %3
    i32 5, label %3
    i32 44, label %3
    i32 45, label %3
    i32 46, label %3
    i32 47, label %3
    i32 48, label %3
    i32 81, label %3
    i32 13, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2sh12_GLOBAL__N_121GetFieldLocationCountEPKNS_6TFieldE(%"class.sh::TField"* nocapture readonly) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %0, i64 0, i32 0
  %3 = load %"class.sh::TType"*, %"class.sh::TType"** %2, align 8
  %4 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 13
  %5 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %4, align 8
  %6 = icmp eq %"class.sh::TStructure"* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %5, i64 0, i32 2, i32 0
  %9 = load %"class.sh::TVector.0"*, %"class.sh::TVector.0"** %8, align 8
  %10 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.sh::TField"**, %"class.sh::TField"*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %9, i64 0, i32 0, i32 0, i32 1
  %13 = load %"class.sh::TField"**, %"class.sh::TField"*** %12, align 8
  %14 = icmp eq %"class.sh::TField"** %11, %13
  br i1 %14, label %33, label %15

15:                                               ; preds = %7, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %7 ]
  %17 = phi %"class.sh::TField"** [ %21, %15 ], [ %11, %7 ]
  %18 = load %"class.sh::TField"*, %"class.sh::TField"** %17, align 8
  %19 = tail call fastcc i32 @_ZN2sh12_GLOBAL__N_121GetFieldLocationCountEPKNS_6TFieldE(%"class.sh::TField"* %18) #10
  %20 = add nsw i32 %19, %16
  %21 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %17, i64 1
  %22 = icmp eq %"class.sh::TField"** %21, %13
  br i1 %22, label %33, label %15

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %25 = load i8, i8* %24, align 8
  %26 = icmp ugt i8 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %29 = load i8, i8* %28, align 1
  %30 = icmp ugt i8 %29, 1
  %31 = select i1 %30, i8 %25, i8 1
  %32 = zext i8 %31 to i32
  br label %33

33:                                               ; preds = %15, %7, %27, %23
  %34 = phi i32 [ 1, %23 ], [ %32, %27 ], [ 0, %7 ], [ %20, %15 ]
  %35 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = tail call i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"* %3) #10
  %40 = mul i32 %39, %34
  br label %41

41:                                               ; preds = %33, %38
  %42 = phi i32 [ %40, %38 ], [ %34, %33 ]
  ret i32 %42
}

declare i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"*) local_unnamed_addr #2

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserD0Ev(%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %3, align 8
  %5 = icmp eq %"class.sh::TIntermSymbol"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.sh::TIntermSymbol"** %4 to i64
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.sh::TIntermSymbol"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.sh::TIntermSymbol"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %12, align 8
  %14 = icmp eq %"class.sh::TIntermSymbol"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.sh::TIntermSymbol"** %13 to i64
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.sh::TIntermSymbol"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.sh::TIntermSymbol"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %21) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* nocapture readnone, i32, %"class.sh::TIntermFunctionDefinition"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_133ValidateVaryingLocationsTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.sh::TIntermDeclaration"* %2 to %"class.sh::TVector.7"* (%"class.sh::TIntermDeclaration"*)***
  %5 = load %"class.sh::TVector.7"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.7"* (%"class.sh::TIntermDeclaration"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TVector.7"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.7"* (%"class.sh::TIntermDeclaration"*)** %5, i64 27
  %7 = load %"class.sh::TVector.7"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.7"* (%"class.sh::TIntermDeclaration"*)** %6, align 8
  %8 = tail call %"class.sh::TVector.7"* %7(%"class.sh::TIntermDeclaration"* %2) #10
  %9 = getelementptr inbounds %"class.sh::TVector.7", %"class.sh::TVector.7"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %9, align 8
  %11 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %10, align 8
  %12 = bitcast %"class.sh::TIntermNode"* %11 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %13 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %13, i64 19
  %15 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %14, align 8
  %16 = tail call %"class.sh::TIntermSymbol"* %15(%"class.sh::TIntermNode"* %11) #10
  %17 = ptrtoint %"class.sh::TIntermSymbol"* %16 to i64
  %18 = icmp eq %"class.sh::TIntermSymbol"* %16, null
  br i1 %18, label %187, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %16, i64 0, i32 1
  %21 = bitcast %"class.sh::TVariable"** %20 to %"class.sh::TSymbol"**
  %22 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %21, align 8
  %23 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %22, i64 0, i32 2
  %24 = load i8, i8* %23, align 4
  %25 = icmp eq i8 %24, 3
  br i1 %25, label %187, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %16, i64 0, i32 0
  %28 = bitcast %"class.sh::TIntermSymbol"* %16 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %29 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %29, i64 31
  %31 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %30, align 8
  %32 = tail call dereferenceable(184) %"class.sh::TType"* %31(%"class.sh::TIntermTyped"* %27) #10
  %33 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %32, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"class.sh::TIntermSymbol"* %16 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %36 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %36, i64 31
  %38 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %37, align 8
  %39 = tail call dereferenceable(184) %"class.sh::TType"* %38(%"class.sh::TIntermSymbol"* nonnull %16) #10
  %40 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %39, i64 0, i32 7, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %187, label %43

43:                                               ; preds = %26
  %44 = tail call zeroext i1 @_ZN2sh11IsVaryingInENS_10TQualifierE(i32 %34) #10
  br i1 %44, label %45, label %115

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 1, i32 0, i32 1
  %48 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %47, align 8
  %49 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %50 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %49, align 8
  %51 = icmp eq %"class.sh::TIntermSymbol"** %48, %50
  %52 = ptrtoint %"class.sh::TIntermSymbol"** %50 to i64
  br i1 %51, label %58, label %53

53:                                               ; preds = %45
  %54 = bitcast %"class.sh::TIntermSymbol"** %48 to i64*
  store i64 %17, i64* %54, align 8
  %55 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %48, i64 1
  %56 = ptrtoint %"class.sh::TIntermSymbol"** %55 to i64
  %57 = bitcast %"class.sh::TIntermSymbol"*** %47 to i64*
  store i64 %56, i64* %57, align 8
  br label %187

58:                                               ; preds = %45
  %59 = ptrtoint %"class.sh::TIntermSymbol"** %48 to i64
  %60 = bitcast %"class.sh::TIntermSymbol"*** %47 to i64*
  %61 = bitcast %"class.std::__1::vector.80"* %46 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %59, %62
  %64 = ashr exact i64 %63, 3
  %65 = add nsw i64 %64, 1
  %66 = icmp ugt i64 %65, 2305843009213693951
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = bitcast %"class.std::__1::vector.80"* %46 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %68) #12
  unreachable

69:                                               ; preds = %58
  %70 = bitcast %"class.sh::TIntermSymbol"*** %49 to i64*
  %71 = sub i64 %52, %62
  %72 = ashr exact i64 %71, 3
  %73 = icmp ult i64 %72, 1152921504606846975
  br i1 %73, label %74, label %82

74:                                               ; preds = %69
  %75 = ashr exact i64 %71, 2
  %76 = icmp ult i64 %75, %65
  %77 = select i1 %76, i64 %65, i64 %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = icmp ugt i64 %77, 2305843009213693951
  br i1 %80, label %81, label %82

81:                                               ; preds = %79
  tail call void @abort() #12
  unreachable

82:                                               ; preds = %79, %69
  %83 = phi i64 [ %77, %79 ], [ 2305843009213693951, %69 ]
  %84 = shl i64 %83, 3
  %85 = tail call i8* @_Znwm(i64 %84) #11
  %86 = bitcast i8* %85 to %"class.sh::TIntermSymbol"**
  br label %87

87:                                               ; preds = %82, %74
  %88 = phi i64 [ %83, %82 ], [ 0, %74 ]
  %89 = phi %"class.sh::TIntermSymbol"** [ %86, %82 ], [ null, %74 ]
  %90 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %89, i64 %64
  %91 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %89, i64 %88
  %92 = ptrtoint %"class.sh::TIntermSymbol"** %91 to i64
  %93 = bitcast %"class.sh::TIntermSymbol"** %90 to i64*
  store i64 %17, i64* %93, align 8
  %94 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %90, i64 1
  %95 = ptrtoint %"class.sh::TIntermSymbol"** %94 to i64
  %96 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %46, i64 0, i32 0, i32 0
  %97 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %96, align 8
  %98 = load i64, i64* %60, align 8
  %99 = ptrtoint %"class.sh::TIntermSymbol"** %97 to i64
  %100 = sub i64 %98, %99
  %101 = ashr exact i64 %100, 3
  %102 = sub nsw i64 0, %101
  %103 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %90, i64 %102
  %104 = ptrtoint %"class.sh::TIntermSymbol"** %103 to i64
  %105 = icmp sgt i64 %100, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %87
  %107 = bitcast %"class.sh::TIntermSymbol"** %103 to i8*
  %108 = bitcast %"class.sh::TIntermSymbol"** %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 %100, i1 false) #10
  %109 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %96, align 8
  br label %110

110:                                              ; preds = %106, %87
  %111 = phi %"class.sh::TIntermSymbol"** [ %97, %87 ], [ %109, %106 ]
  store i64 %104, i64* %61, align 8
  store i64 %95, i64* %60, align 8
  store i64 %92, i64* %70, align 8
  %112 = icmp eq %"class.sh::TIntermSymbol"** %111, null
  br i1 %112, label %187, label %113

113:                                              ; preds = %110
  %114 = bitcast %"class.sh::TIntermSymbol"** %111 to i8*
  tail call void @_ZdlPv(i8* %114) #11
  br label %187

115:                                              ; preds = %43
  %116 = tail call zeroext i1 @_ZN2sh12IsVaryingOutENS_10TQualifierE(i32 %34) #10
  br i1 %116, label %117, label %187

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 2
  %119 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 2, i32 0, i32 1
  %120 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %119, align 8
  %121 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser", %"class.sh::(anonymous namespace)::ValidateVaryingLocationsTraverser"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %122 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %121, align 8
  %123 = icmp eq %"class.sh::TIntermSymbol"** %120, %122
  %124 = ptrtoint %"class.sh::TIntermSymbol"** %122 to i64
  br i1 %123, label %130, label %125

125:                                              ; preds = %117
  %126 = bitcast %"class.sh::TIntermSymbol"** %120 to i64*
  store i64 %17, i64* %126, align 8
  %127 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %120, i64 1
  %128 = ptrtoint %"class.sh::TIntermSymbol"** %127 to i64
  %129 = bitcast %"class.sh::TIntermSymbol"*** %119 to i64*
  store i64 %128, i64* %129, align 8
  br label %187

130:                                              ; preds = %117
  %131 = ptrtoint %"class.sh::TIntermSymbol"** %120 to i64
  %132 = bitcast %"class.sh::TIntermSymbol"*** %119 to i64*
  %133 = bitcast %"class.std::__1::vector.80"* %118 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %131, %134
  %136 = ashr exact i64 %135, 3
  %137 = add nsw i64 %136, 1
  %138 = icmp ugt i64 %137, 2305843009213693951
  br i1 %138, label %139, label %141

139:                                              ; preds = %130
  %140 = bitcast %"class.std::__1::vector.80"* %118 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %140) #12
  unreachable

141:                                              ; preds = %130
  %142 = bitcast %"class.sh::TIntermSymbol"*** %121 to i64*
  %143 = sub i64 %124, %134
  %144 = ashr exact i64 %143, 3
  %145 = icmp ult i64 %144, 1152921504606846975
  br i1 %145, label %146, label %154

146:                                              ; preds = %141
  %147 = ashr exact i64 %143, 2
  %148 = icmp ult i64 %147, %137
  %149 = select i1 %148, i64 %137, i64 %147
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %159, label %151

151:                                              ; preds = %146
  %152 = icmp ugt i64 %149, 2305843009213693951
  br i1 %152, label %153, label %154

153:                                              ; preds = %151
  tail call void @abort() #12
  unreachable

154:                                              ; preds = %151, %141
  %155 = phi i64 [ %149, %151 ], [ 2305843009213693951, %141 ]
  %156 = shl i64 %155, 3
  %157 = tail call i8* @_Znwm(i64 %156) #11
  %158 = bitcast i8* %157 to %"class.sh::TIntermSymbol"**
  br label %159

159:                                              ; preds = %154, %146
  %160 = phi i64 [ %155, %154 ], [ 0, %146 ]
  %161 = phi %"class.sh::TIntermSymbol"** [ %158, %154 ], [ null, %146 ]
  %162 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %161, i64 %136
  %163 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %161, i64 %160
  %164 = ptrtoint %"class.sh::TIntermSymbol"** %163 to i64
  %165 = bitcast %"class.sh::TIntermSymbol"** %162 to i64*
  store i64 %17, i64* %165, align 8
  %166 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %162, i64 1
  %167 = ptrtoint %"class.sh::TIntermSymbol"** %166 to i64
  %168 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %118, i64 0, i32 0, i32 0
  %169 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %168, align 8
  %170 = load i64, i64* %132, align 8
  %171 = ptrtoint %"class.sh::TIntermSymbol"** %169 to i64
  %172 = sub i64 %170, %171
  %173 = ashr exact i64 %172, 3
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %162, i64 %174
  %176 = ptrtoint %"class.sh::TIntermSymbol"** %175 to i64
  %177 = icmp sgt i64 %172, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %159
  %179 = bitcast %"class.sh::TIntermSymbol"** %175 to i8*
  %180 = bitcast %"class.sh::TIntermSymbol"** %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %180, i64 %172, i1 false) #10
  %181 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %168, align 8
  br label %182

182:                                              ; preds = %178, %159
  %183 = phi %"class.sh::TIntermSymbol"** [ %169, %159 ], [ %181, %178 ]
  store i64 %176, i64* %133, align 8
  store i64 %167, i64* %132, align 8
  store i64 %164, i64* %142, align 8
  %184 = icmp eq %"class.sh::TIntermSymbol"** %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %182
  %186 = bitcast %"class.sh::TIntermSymbol"** %183 to i8*
  tail call void @_ZdlPv(i8* %186) #11
  br label %187

187:                                              ; preds = %185, %182, %125, %113, %110, %53, %115, %26, %19, %3
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

declare zeroext i1 @_ZN2sh11IsVaryingInENS_10TQualifierE(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2sh12IsVaryingOutENS_10TQualifierE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_141ValidateShaderInterfaceAndAssignLocationsEPNS_12TDiagnosticsERKNSt3__16vectorIPKNS_13TIntermSymbolENS3_9allocatorIS7_EEEEj(%"class.sh::TDiagnostics"*, %"class.std::__1::vector.80"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::map.98", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"class.sh::TIntermSymbol"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.80"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, 2
  %13 = inttoptr i64 %9 to %"class.sh::TIntermSymbol"**
  %14 = inttoptr i64 %7 to %"class.sh::TIntermSymbol"**
  br i1 %12, label %138, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::map.98"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node_base"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %17, align 8
  %21 = icmp eq %"class.sh::TIntermSymbol"** %13, %14
  br i1 %21, label %25, label %28

22:                                               ; preds = %135
  %23 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  br label %25

25:                                               ; preds = %15, %22
  %26 = phi %"class.std::__1::__tree_node"* [ %24, %22 ], [ null, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %4, i64 0, i32 0
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeIiN2sh12_GLOBAL__N_114SymbolAndFieldEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.99"* nonnull %27, %"class.std::__1::__tree_node"* %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  br label %138

28:                                               ; preds = %15, %135
  %29 = phi %"class.sh::TIntermSymbol"** [ %136, %135 ], [ %13, %15 ]
  %30 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %29, align 8
  %31 = bitcast %"class.sh::TIntermSymbol"* %30 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %32 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %32, i64 31
  %34 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %33, align 8
  %35 = call dereferenceable(184) %"class.sh::TType"* %34(%"class.sh::TIntermSymbol"* %30) #10
  %36 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %35, i64 0, i32 7, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %30, i64 0, i32 0
  %39 = bitcast %"class.sh::TIntermSymbol"* %30 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %40 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %40, i64 31
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %41, align 8
  %43 = call dereferenceable(184) %"class.sh::TType"* %42(%"class.sh::TIntermTyped"* %38) #10
  %44 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = call zeroext i1 @_ZN2sh10IsShaderInENS_10TQualifierE(i32 %45) #10
  %47 = icmp ne i32 %45, 80
  %48 = and i1 %47, %46
  switch i32 %2, label %54 [
    i32 36313, label %55
    i32 36487, label %55
    i32 36488, label %49
  ]

49:                                               ; preds = %28
  %50 = call zeroext i1 @_ZN2sh11IsShaderOutENS_10TQualifierE(i32 %45) #10
  %51 = icmp ne i32 %45, 81
  %52 = and i1 %51, %50
  %53 = or i1 %48, %52
  br label %55

54:                                               ; preds = %28
  br label %55

55:                                               ; preds = %28, %28, %49, %54
  %56 = phi i1 [ false, %54 ], [ %53, %49 ], [ %48, %28 ], [ %48, %28 ]
  %57 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %35, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 91
  br i1 %59, label %60, label %94

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %35, i64 0, i32 12
  %62 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %61, align 8
  %63 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %62, i64 0, i32 1, i32 0
  %64 = load %"class.sh::TVector.0"*, %"class.sh::TVector.0"** %63, align 8
  %65 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.sh::TField"**, %"class.sh::TField"*** %65, align 8
  %67 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %64, i64 0, i32 0, i32 0, i32 1
  %68 = load %"class.sh::TField"**, %"class.sh::TField"*** %67, align 8
  %69 = icmp eq %"class.sh::TField"** %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %72, %60
  %71 = phi i32 [ %37, %60 ], [ %83, %72 ]
  br i1 %56, label %135, label %86

72:                                               ; preds = %60, %72
  %73 = phi i32 [ %83, %72 ], [ %37, %60 ]
  %74 = phi %"class.sh::TField"** [ %84, %72 ], [ %66, %60 ]
  %75 = load %"class.sh::TField"*, %"class.sh::TField"** %74, align 8
  %76 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %75, i64 0, i32 0
  %77 = load %"class.sh::TType"*, %"class.sh::TType"** %76, align 8
  %78 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 7, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, -1
  %81 = select i1 %80, i32 %79, i32 %73
  %82 = call fastcc i32 @_ZN2sh12_GLOBAL__N_121GetFieldLocationCountEPKNS_6TFieldE(%"class.sh::TField"* %75)
  call fastcc void @_ZN2sh12_GLOBAL__N_120MarkVaryingLocationsEPNS_12TDiagnosticsEPKNS_13TIntermSymbolEPKNS_6TFieldEiiPNSt3__13mapIiNS0_14SymbolAndFieldENS9_4lessIiEENS9_9allocatorINS9_4pairIKiSB_EEEEEE(%"class.sh::TDiagnostics"* %0, %"class.sh::TIntermSymbol"* %30, %"class.sh::TField"* %75, i32 %81, i32 %82, %"class.std::__1::map.98"* nonnull %4)
  %83 = add nsw i32 %81, %82
  %84 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %74, i64 1
  %85 = icmp eq %"class.sh::TField"** %84, %68
  br i1 %85, label %70, label %72

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %35, i64 0, i32 10, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %135, label %90

90:                                               ; preds = %86
  %91 = call i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"* %35) #10
  %92 = add i32 %91, -1
  %93 = mul i32 %92, %71
  call fastcc void @_ZN2sh12_GLOBAL__N_120MarkVaryingLocationsEPNS_12TDiagnosticsEPKNS_13TIntermSymbolEPKNS_6TFieldEiiPNSt3__13mapIiNS0_14SymbolAndFieldENS9_4lessIiEENS9_9allocatorINS9_4pairIKiSB_EEEEEE(%"class.sh::TDiagnostics"* %0, %"class.sh::TIntermSymbol"* %30, %"class.sh::TField"* null, i32 %71, i32 %93, %"class.std::__1::map.98"* nonnull %4)
  br label %135

94:                                               ; preds = %55
  %95 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %31, align 8
  %96 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %95, i64 31
  %97 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %96, align 8
  %98 = call dereferenceable(184) %"class.sh::TType"* %97(%"class.sh::TIntermSymbol"* %30) #10
  %99 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %98, i64 0, i32 13
  %100 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %99, align 8
  %101 = icmp eq %"class.sh::TStructure"* %100, null
  br i1 %101, label %118, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %100, i64 0, i32 2, i32 0
  %104 = load %"class.sh::TVector.0"*, %"class.sh::TVector.0"** %103, align 8
  %105 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.sh::TField"**, %"class.sh::TField"*** %105, align 8
  %107 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %104, i64 0, i32 0, i32 0, i32 1
  %108 = load %"class.sh::TField"**, %"class.sh::TField"*** %107, align 8
  %109 = icmp eq %"class.sh::TField"** %106, %108
  br i1 %109, label %133, label %110

110:                                              ; preds = %102, %110
  %111 = phi i32 [ %115, %110 ], [ 0, %102 ]
  %112 = phi %"class.sh::TField"** [ %116, %110 ], [ %106, %102 ]
  %113 = load %"class.sh::TField"*, %"class.sh::TField"** %112, align 8
  %114 = call fastcc i32 @_ZN2sh12_GLOBAL__N_121GetFieldLocationCountEPKNS_6TFieldE(%"class.sh::TField"* %113) #10
  %115 = add nsw i32 %114, %111
  %116 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %112, i64 1
  %117 = icmp eq %"class.sh::TField"** %116, %108
  br i1 %117, label %133, label %110

118:                                              ; preds = %94
  %119 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %98, i64 0, i32 8
  %120 = load i8, i8* %119, align 8
  %121 = icmp ugt i8 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %98, i64 0, i32 9
  %124 = load i8, i8* %123, align 1
  %125 = icmp ugt i8 %124, 1
  %126 = select i1 %125, i8 %120, i8 1
  %127 = zext i8 %126 to i32
  br label %128

128:                                              ; preds = %122, %118
  %129 = phi i32 [ 1, %118 ], [ %127, %122 ]
  br i1 %56, label %133, label %130

130:                                              ; preds = %128
  %131 = call i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"* %98) #10
  %132 = mul i32 %131, %129
  br label %133

133:                                              ; preds = %110, %102, %128, %130
  %134 = phi i32 [ %132, %130 ], [ %129, %128 ], [ 0, %102 ], [ %115, %110 ]
  call fastcc void @_ZN2sh12_GLOBAL__N_120MarkVaryingLocationsEPNS_12TDiagnosticsEPKNS_13TIntermSymbolEPKNS_6TFieldEiiPNSt3__13mapIiNS0_14SymbolAndFieldENS9_4lessIiEENS9_9allocatorINS9_4pairIKiSB_EEEEEE(%"class.sh::TDiagnostics"* %0, %"class.sh::TIntermSymbol"* %30, %"class.sh::TField"* null, i32 %37, i32 %134, %"class.std::__1::map.98"* nonnull %4)
  br label %135

135:                                              ; preds = %86, %70, %90, %133
  %136 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %29, i64 1
  %137 = icmp eq %"class.sh::TIntermSymbol"** %136, %14
  br i1 %137, label %22, label %28

138:                                              ; preds = %3, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_120MarkVaryingLocationsEPNS_12TDiagnosticsEPKNS_13TIntermSymbolEPKNS_6TFieldEiiPNSt3__13mapIiNS0_14SymbolAndFieldENS9_4lessIiEENS9_9allocatorINS9_4pairIKiSB_EEEEEE(%"class.sh::TDiagnostics"*, %"class.sh::TIntermSymbol"*, %"class.sh::TField"*, i32, i32, %"class.std::__1::map.98"*) unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = alloca %"class.sh::ImmutableString", align 8
  %9 = alloca %"class.sh::ImmutableString", align 8
  %10 = alloca %"class.std::__1::basic_string.15", align 8
  %11 = icmp sgt i32 %4, 0
  br i1 %11, label %12, label %54

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  %16 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_ostream.base"* %16 to %"class.std::__1::basic_ostream"*
  %18 = bitcast %"class.sh::ImmutableString"* %8 to i8*
  %19 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %8, i64 0, i32 0
  %20 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %8, i64 0, i32 1
  %21 = icmp eq %"class.sh::TField"* %2, null
  %22 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %2, i64 0, i32 1
  %23 = bitcast %"class.sh::ImmutableString"* %9 to i8*
  %24 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %9, i64 0, i32 0
  %25 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %9, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string.15"* %10 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string.15"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %39 = bitcast %"class.std::__1::basic_ostream.base"* %16 to i64*
  %40 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %27, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %42 = bitcast %"class.std::__1::basic_string.15"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %27, i64 0, i32 0
  %46 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  %47 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_ios.base"* %47 to %"class.std::__1::basic_ios"*
  %49 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %5, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::map.98"* %5 to i64*
  %53 = getelementptr inbounds %"class.std::__1::map.98", %"class.std::__1::map.98"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %55

54:                                               ; preds = %190, %6
  ret void

55:                                               ; preds = %190, %12
  %56 = phi i32 [ 0, %12 ], [ %191, %190 ]
  %57 = add nsw i32 %56, %3
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %59 = icmp eq %"class.std::__1::__tree_node"* %58, null
  br i1 %59, label %158, label %60

60:                                               ; preds = %55, %60
  %61 = phi %"class.std::__1::__tree_end_node"* [ %71, %60 ], [ %13, %55 ]
  %62 = phi %"class.std::__1::__tree_node"* [ %72, %60 ], [ %58, %55 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 1, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %57
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::__tree_node_base"** %66 to %"class.std::__1::__tree_node"**
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__tree_node"* %62 to %"class.std::__1::__tree_node"**
  %70 = select i1 %65, %"class.std::__1::__tree_node"** %67, %"class.std::__1::__tree_node"** %69
  %71 = select i1 %65, %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"* %68
  %72 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %70, align 8
  %73 = icmp eq %"class.std::__1::__tree_node"* %72, null
  br i1 %73, label %74, label %60

74:                                               ; preds = %60
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %71, %13
  br i1 %75, label %81, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 4
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %57, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %74, %76
  br label %132

82:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %7)
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %84 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #10
  %85 = extractvalue { i8*, i64 } %84, 0
  store i8* %85, i8** %19, align 8
  %86 = extractvalue { i8*, i64 } %84, 1
  store i64 %86, i64* %20, align 8
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %83, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  br i1 %21, label %91, label %88

88:                                               ; preds = %82
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %89, %"class.sh::ImmutableString"* dereferenceable(16) %22) #10
  br label %91

91:                                               ; preds = %82, %88
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i64 29) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 5
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.sh::TIntermSymbol"**
  %95 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %94, align 8
  %96 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %95) #10
  %97 = extractvalue { i8*, i64 } %96, 0
  store i8* %97, i8** %24, align 8
  %98 = extractvalue { i8*, i64 } %96, 1
  store i64 %98, i64* %25, align 8
  %99 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %92, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 6
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.sh::TField"**
  %102 = load %"class.sh::TField"*, %"class.sh::TField"** %101, align 8
  %103 = icmp eq %"class.sh::TField"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %91
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  %106 = load %"class.sh::TField"*, %"class.sh::TField"** %101, align 8
  %107 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %106, i64 0, i32 1
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %105, %"class.sh::ImmutableString"* dereferenceable(16) %107) #10
  br label %109

109:                                              ; preds = %91, %104
  %110 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.15"* nonnull sret %10, %"class.std::__1::basic_stringbuf"* %27) #10
  %111 = load i8, i8* %29, align 1
  %112 = icmp slt i8 %111, 0
  %113 = load i8*, i8** %30, align 8
  %114 = select i1 %112, i8* %113, i8* %26
  %115 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #10
  %116 = extractvalue { i8*, i64 } %115, 0
  %117 = icmp eq i8* %116, null
  %118 = select i1 %117, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* %116
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* %114, i8* %118) #10
  %119 = load i8, i8* %29, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %109
  %122 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %109, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  store i64 %32, i64* %33, align 8
  %124 = load i64, i64* %37, align 8
  %125 = getelementptr inbounds i8, i8* %15, i64 %124
  %126 = bitcast i8* %125 to i64*
  store i64 %34, i64* %126, align 8
  store i64 %38, i64* %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %127 = load i8, i8* %43, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %123
  %130 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %130) #11
  br label %131

131:                                              ; preds = %123, %129
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %45) #10
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %46, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #10
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %48) #10
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %15) #10
  br label %190

132:                                              ; preds = %81, %154
  %133 = phi %"class.std::__1::__tree_node"* [ %157, %154 ], [ %58, %81 ]
  %134 = phi %"class.std::__1::__tree_node_base"** [ %156, %154 ], [ %49, %81 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 1, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp slt i32 %57, %136
  br i1 %137, label %138, label %144

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %154

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0
  br label %158

144:                                              ; preds = %132
  %145 = icmp slt i32 %136, %57
  br i1 %145, label %146, label %152

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 1
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, null
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0
  br label %158

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0
  br label %158

154:                                              ; preds = %146, %138
  %155 = phi %"class.std::__1::__tree_node_base"* [ %140, %138 ], [ %148, %146 ]
  %156 = phi %"class.std::__1::__tree_node_base"** [ %139, %138 ], [ %147, %146 ]
  %157 = bitcast %"class.std::__1::__tree_node_base"* %155 to %"class.std::__1::__tree_node"*
  br label %132

158:                                              ; preds = %55, %152, %150, %142
  %159 = phi %"class.std::__1::__tree_end_node"* [ %143, %142 ], [ %151, %150 ], [ %153, %152 ], [ %13, %55 ]
  %160 = phi %"class.std::__1::__tree_node_base"** [ %139, %142 ], [ %147, %150 ], [ %134, %152 ], [ %50, %55 ]
  %161 = bitcast %"class.std::__1::__tree_node_base"** %160 to %"class.std::__1::__tree_node"**
  %162 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node"* %162, null
  br i1 %163, label %164, label %186

164:                                              ; preds = %158
  %165 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %166 = getelementptr inbounds i8, i8* %165, i64 32
  %167 = bitcast i8* %166 to i32*
  store i32 %57, i32* %167, align 8, !noalias !2
  %168 = getelementptr inbounds i8, i8* %165, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false) #10, !noalias !2
  %169 = bitcast i8* %165 to %"class.std::__1::__tree_node"*
  %170 = bitcast i8* %165 to %"class.std::__1::__tree_node_base"*
  %171 = getelementptr inbounds i8, i8* %165, i64 16
  %172 = bitcast i8* %171 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %159, %"class.std::__1::__tree_end_node"** %172, align 8
  %173 = bitcast %"class.std::__1::__tree_node_base"** %160 to i8**
  store i8* %165, i8** %173, align 8
  %174 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %181, label %178

178:                                              ; preds = %164
  %179 = ptrtoint %"class.std::__1::__tree_node_base"* %176 to i64
  store i64 %179, i64* %52, align 8
  %180 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  br label %181

181:                                              ; preds = %178, %164
  %182 = phi %"class.std::__1::__tree_node_base"* [ %170, %164 ], [ %180, %178 ]
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %183, %"class.std::__1::__tree_node_base"* %182) #10
  %184 = load i64, i64* %53, align 8
  %185 = add i64 %184, 1
  store i64 %185, i64* %53, align 8
  br label %186

186:                                              ; preds = %158, %181
  %187 = phi %"class.std::__1::__tree_node"* [ %169, %181 ], [ %162, %158 ]
  %188 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"class.sh::TIntermSymbol"* %1, %"class.sh::TIntermSymbol"** %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 1, i32 0, i32 1, i32 1
  store %"class.sh::TField"* %2, %"class.sh::TField"** %189, align 8
  br label %190

190:                                              ; preds = %186, %131
  %191 = add nuw nsw i32 %56, 1
  %192 = icmp eq i32 %191, %4
  br i1 %192, label %54, label %55
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* noalias sret) local_unnamed_addr #0 comdat {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 272, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #10
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %14, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %5, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #10
  %54 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %57 = bitcast %"class.std::__1::basic_string.15"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #10
  store i32 24, i32* %56, align 8
  %58 = load i8*, i8** %16, align 8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = tail call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #10
  %64 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %66, align 8, !alias.scope !5
  %67 = bitcast i8* %62 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %67) #10
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %67, %"class.std::__1::locale"* dereferenceable(8) %63) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #10
  %68 = getelementptr inbounds i8, i8* %62, i64 40
  %69 = bitcast i8* %68 to %"class.std::__1::basic_streambuf"**
  %70 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %69, align 8, !noalias !5
  %71 = icmp eq %"class.std::__1::basic_streambuf"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %1
  %73 = bitcast %"class.std::__1::basic_streambuf"* %70 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %74 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %73, align 8, !noalias !8
  %75 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %74, i64 2
  %76 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %75, align 8, !noalias !8
  call void %76(%"class.std::__1::basic_streambuf"* nonnull %70, %"class.std::__1::locale"* dereferenceable(8) %63) #10, !noalias !8
  %77 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %3, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %77, align 8, !alias.scope !8, !noalias !5
  %78 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %70, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale"* dereferenceable(8) %78) #10
  %79 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %78, %"class.std::__1::locale"* dereferenceable(8) %63) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #10
  br label %80

80:                                               ; preds = %1, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #9

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.15", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.15"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.15"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.15"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.15"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.15"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeIiN2sh12_GLOBAL__N_114SymbolAndFieldEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.99"* readnone, %"class.std::__1::__tree_node"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIiN2sh12_GLOBAL__N_114SymbolAndFieldEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.99"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIiN2sh12_GLOBAL__N_114SymbolAndFieldEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.99"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIiN2sh12_GLOBAL__N_114SymbolAndFieldEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIiN2sh12_GLOBAL__N_114SymbolAndFieldEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
!11 = !{i8 0, i8 2}
