; ModuleID = 'gen/ui/base/cursor/mojom/cursor.mojom.cc'
source_filename = "gen/ui/base/cursor/mojom/cursor.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::mojom::Cursor" = type <{ i32, %"class.gfx::Point", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.20", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.14"*, %"class.mojo::ScopedHandleBase.14"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::ScopedHandleBase.14" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::ScopedHandleBase.14"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.22" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.30, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.32", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.29", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.30 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.31" }>
%"class.base::RefCountedThreadSafe.31" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%"class.ui::mojom::internal::Cursor_Data" = type { %"struct.mojo::internal::StructHeader", i32, float, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.37" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.37" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.ui::mojom::Cursor"* }
%"class.skia::mojom::internal::BitmapN32_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.45", %"class.mojo_base::mojom::internal::BigBuffer_Data" }
%"struct.mojo::internal::Pointer.45" = type { i64 }
%"class.mojo_base::mojom::internal::BigBuffer_Data" = type { i32, i32, %"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" }
%"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" = type { %"struct.mojo::internal::Pointer.46" }
%"struct.mojo::internal::Pointer.46" = type { i64 }

@.str = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"hotspot\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"bitmap\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"image_scale_factor\00", align 1

@_ZN2ui5mojom6CursorC1Ev = hidden unnamed_addr alias void (%"class.ui::mojom::Cursor"*), void (%"class.ui::mojom::Cursor"*)* @_ZN2ui5mojom6CursorC2Ev
@_ZN2ui5mojom6CursorC1ENS0_10CursorTypeERKN3gfx5PointERK8SkBitmapf = hidden unnamed_addr alias void (%"class.ui::mojom::Cursor"*, i32, %"class.gfx::Point"*, %class.SkBitmap*, float), void (%"class.ui::mojom::Cursor"*, i32, %"class.gfx::Point"*, %class.SkBitmap*, float)* @_ZN2ui5mojom6CursorC2ENS0_10CursorTypeERKN3gfx5PointERK8SkBitmapf
@_ZN2ui5mojom6CursorD1Ev = hidden unnamed_addr alias void (%"class.ui::mojom::Cursor"*), void (%"class.ui::mojom::Cursor"*)* @_ZN2ui5mojom6CursorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui5mojom6CursorC2Ev(%"class.ui::mojom::Cursor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 3
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %5) #6
  %6 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %6, align 8
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui5mojom6CursorC2ENS0_10CursorTypeERKN3gfx5PointERK8SkBitmapf(%"class.ui::mojom::Cursor"*, i32, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %class.SkBitmap* dereferenceable(56), float) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Point"* %2 to i64*
  %9 = bitcast %"class.gfx::Point"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 3
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %11, %class.SkBitmap* dereferenceable(56) %3) #6
  %12 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 4
  store float %4, float* %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui5mojom6CursorD2Ev(%"class.ui::mojom::Cursor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 3
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui5mojom6Cursor14WriteIntoTraceEN8perfetto11TracedValueE(%"class.ui::mojom::Cursor"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedDictionary", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #6
  %13 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %5, %"class.perfetto::TracedValue"* %1) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #6
  %14 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 0
  %15 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  %16 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %15, i64 16, i1 false) #6
  %17 = load i32, i32* %14, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ui5mojom10CursorTypeEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %3, i32 %17) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #6
  %19 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 7, i8* %20, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %21 = getelementptr inbounds i8, i8* %18, i64 7
  store i8 0, i8* %21, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #6
  %22 = load i8, i8* %20, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #7
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %9, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #6
  %28 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #6
  %29 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 7, i8* %30, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %31 = getelementptr inbounds i8, i8* %28, i64 7
  store i8 0, i8* %31, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #6
  %32 = load i8, i8* %30, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #7
  br label %37

37:                                               ; preds = %34, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #6
  %38 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %0, i64 0, i32 4
  %39 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %40 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %39, i64 16, i1 false) #6
  %41 = load float, float* %38, align 4
  %42 = fpext float %41 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %4, double %42) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #1

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui5mojom6Cursor8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2ui5mojom8internal11Cursor_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #6
  ret i1 %3
}

declare zeroext i1 @_ZN2ui5mojom8internal11Cursor_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ui5mojom14CursorDataViewENS_9StructPtrINS2_6CursorEEEE4ReadES3_PS6_(%"class.ui::mojom::internal::Cursor_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 80) #7, !noalias !2
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 8, !noalias !2
  %6 = getelementptr inbounds i8, i8* %4, i64 4
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 4, !noalias !2
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4, !noalias !2
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast i8* %10 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %11) #6, !noalias !2
  %12 = getelementptr inbounds i8, i8* %4, i64 72
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 8, !noalias !2
  %14 = ptrtoint i8* %4 to i64
  %15 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 1
  store i32 %16, i32* %5, align 4
  %17 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = bitcast %"struct.mojo::internal::Pointer"* %17 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %19
  br i1 %20, label %30, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 1
  %27 = getelementptr inbounds i8, i8* %22, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  store i32 %26, i32* %7, align 4
  store i32 %29, i32* %9, align 4
  br label %30

30:                                               ; preds = %3, %23
  %31 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 4
  %32 = getelementptr inbounds %"struct.mojo::internal::Pointer.37", %"struct.mojo::internal::Pointer.37"* %31, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %11) #6
  br label %41

36:                                               ; preds = %30
  %37 = bitcast %"struct.mojo::internal::Pointer.37"* %31 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %33
  %39 = bitcast i8* %38 to %"class.skia::mojom::internal::BitmapN32_Data"*
  %40 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"* nonnull %39, %"class.mojo::Message"* %1, %class.SkBitmap* %11) #6
  br i1 %40, label %41, label %46

41:                                               ; preds = %36, %35
  %42 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 2
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = bitcast i8* %12 to i32*
  store i32 %44, i32* %45, align 8
  br label %46

46:                                               ; preds = %36, %41
  %47 = phi i1 [ true, %41 ], [ false, %36 ]
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.ui::mojom::Cursor"*, %"class.ui::mojom::Cursor"** %48, align 8
  store %"class.ui::mojom::Cursor"* null, %"class.ui::mojom::Cursor"** %48, align 8
  %50 = icmp eq %"class.ui::mojom::Cursor"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %14, i64* %52, align 8
  br label %62

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %49, i64 0, i32 3
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %54) #6
  %55 = bitcast %"class.ui::mojom::Cursor"* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #7
  %56 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %57 = load %"class.ui::mojom::Cursor"*, %"class.ui::mojom::Cursor"** %48, align 8
  store i64 %14, i64* %56, align 8
  %58 = icmp eq %"class.ui::mojom::Cursor"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.ui::mojom::Cursor", %"class.ui::mojom::Cursor"* %57, i64 0, i32 3
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %60) #6
  %61 = bitcast %"class.ui::mojom::Cursor"* %57 to i8*
  tail call void @_ZdlPv(i8* %61) #7
  br label %62

62:                                               ; preds = %51, %53, %59
  ret i1 %47
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN8perfetto17TraceFormatTraitsIN2ui5mojom10CursorTypeEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #1

declare zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"*, %"class.mojo::Message"*, %class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2ui5mojom6Cursor3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN2ui5mojom6Cursor3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
