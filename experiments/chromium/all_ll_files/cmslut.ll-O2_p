; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmslut.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmslut.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._cmsStage_struct = type { %struct._cmsContext_struct*, i32, i32, i32, i32, void (float*, float*, %struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)*, i8*, %struct._cmsStage_struct* }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct._cmsPipeline_struct = type { %struct._cmsStage_struct*, i32, i32, i8*, void (i16*, i16*, i8*)*, void (float*, float*, i8*)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._cms_curve_struct = type { %struct._cms_interp_struc*, i32, %struct.cmsCurveSegment*, %struct._cms_interp_struc**, double (i32, double*, double)**, i32, i16* }
%struct._cms_interp_struc = type { %struct._cmsContext_struct*, i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i8*, %union.cmsInterpFunction }
%union.cmsInterpFunction = type { void (i16*, i16*, %struct._cms_interp_struc*)* }
%struct.cmsCurveSegment = type { float, float, i32, [10 x double], i32, float* }
%struct._cmsStageToneCurvesData = type { i32, %struct._cms_curve_struct** }
%struct._cmsStageMatrixData = type { double*, double* }
%struct._cmsStageCLutData = type { %union.anon, %struct._cms_interp_struc*, i32, i32 }
%union.anon = type { i16* }
%struct.cmsCIELab = type { double, double, double }
%struct.cmsCIEXYZ = type { double, double, double }
%struct.cmsVEC3 = type { [3 x double] }
%struct.cmsMAT3 = type { [3 x %struct.cmsVEC3] }

@.str = private unnamed_addr constant [46 x i8] c"Too many input channels (%d channels, max=%d)\00", align 1
@_cmsStageAllocLabV2ToV4.V2ToV4 = internal constant [9 x double] [double 0x3FF0100000000000, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FF0100000000000, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FF0100000000000], align 16
@_cmsStageAllocLabV4ToV2.V4ToV2 = internal constant [9 x double] [double 0x3FEFE01FE01FE020, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FEFE01FE01FE020, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FEFE01FE01FE020], align 16
@_cmsStageNormalizeFromLabFloat.a1 = internal constant [9 x double] [double 1.000000e-02, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3F70101010101010, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3F70101010101010], align 16
@_cmsStageNormalizeFromLabFloat.o1 = internal constant [3 x double] [double 0.000000e+00, double 0x3FE0101010101010, double 0x3FE0101010101010], align 16
@_cmsStageNormalizeFromXyzFloat.a1 = internal constant [9 x double] [double 0x3FE0001000100010, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FE0001000100010, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FE0001000100010], align 16
@_cmsStageNormalizeToLabFloat.a1 = internal constant [9 x double] [double 1.000000e+02, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 2.550000e+02, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 2.550000e+02], align 16
@_cmsStageNormalizeToLabFloat.o1 = internal constant [3 x double] [double 0.000000e+00, double -1.280000e+02, double -1.280000e+02], align 16
@_cmsStageNormalizeToXyzFloat.a1 = internal constant [9 x double] [double 0x3FFFFFE000000000, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FFFFFE000000000, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x3FFFFFE000000000], align 16

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocPlaceholder(%struct._cmsContext_struct*, i32, i32, i32, void (float*, float*, %struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)*, i8*) local_unnamed_addr #0 {
  %9 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %10 = icmp eq i8* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %8
  %12 = bitcast i8* %9 to %struct._cmsStage_struct*
  %13 = bitcast i8* %9 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %9, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 20
  %21 = bitcast i8* %20 to i32*
  store i32 %3, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %9, i64 24
  %23 = bitcast i8* %22 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* %4, void (float*, float*, %struct._cmsStage_struct*)** %23, align 8
  %24 = getelementptr inbounds i8, i8* %9, i64 32
  %25 = bitcast i8* %24 to i8* (%struct._cmsStage_struct*)**
  store i8* (%struct._cmsStage_struct*)* %5, i8* (%struct._cmsStage_struct*)** %25, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 40
  %27 = bitcast i8* %26 to void (%struct._cmsStage_struct*)**
  store void (%struct._cmsStage_struct*)* %6, void (%struct._cmsStage_struct*)** %27, align 8
  %28 = getelementptr inbounds i8, i8* %9, i64 48
  %29 = bitcast i8* %28 to i8**
  store i8* %7, i8** %29, align 8
  br label %30

30:                                               ; preds = %8, %11
  %31 = phi %struct._cmsStage_struct* [ %12, %11 ], [ null, %8 ]
  ret %struct._cmsStage_struct* %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_cmsMallocZero(%struct._cmsContext_struct*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageAllocIdentity(%struct._cmsContext_struct*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %4 = icmp eq i8* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cmsStage_struct*
  %7 = bitcast i8* %3 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 1768189472, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 1768189472, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %3, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 20
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %3, i64 24
  %17 = bitcast i8* %16 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @EvaluateIdentity, void (float*, float*, %struct._cmsStage_struct*)** %17, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  br label %19

19:                                               ; preds = %2, %5
  %20 = phi %struct._cmsStage_struct* [ %6, %5 ], [ null, %2 ]
  ret %struct._cmsStage_struct* %20
}

; Function Attrs: nounwind ssp uwtable
define internal void @EvaluateIdentity(float* nocapture readonly, float* nocapture, %struct._cmsStage_struct* nocapture readonly) #0 {
  %4 = bitcast float* %1 to i8*
  %5 = bitcast float* %0 to i8*
  %6 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = shl nuw nsw i64 %8, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 %9, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* nocapture readonly, i32, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %8 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %9 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 24, i1 false)
  %10 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %8, align 8
  %11 = icmp eq %struct._cmsStage_struct* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %2, %12
  %13 = phi %struct._cmsStage_struct* [ %17, %12 ], [ %10, %2 ]
  %14 = phi i32 [ %15, %12 ], [ 0, %2 ]
  %15 = add i32 %14, 1
  %16 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %13, i64 0, i32 9
  %17 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %16, align 8
  %18 = icmp eq %struct._cmsStage_struct* %17, null
  br i1 %18, label %19, label %12

19:                                               ; preds = %12, %2
  %20 = phi i32 [ 0, %2 ], [ %15, %12 ]
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %22, label %80

22:                                               ; preds = %19
  call void @llvm.va_start(i8* nonnull %4)
  %23 = icmp eq i32 %1, 0
  br i1 %23, label %78, label %24

24:                                               ; preds = %22
  %25 = load i32, i32* %5, align 16
  br label %27

26:                                               ; preds = %49
  br i1 %23, label %78, label %53

27:                                               ; preds = %49, %24
  %28 = phi i32 [ %42, %49 ], [ %25, %24 ]
  %29 = phi %struct._cmsStage_struct** [ %50, %49 ], [ %8, %24 ]
  %30 = phi i32 [ %51, %49 ], [ 0, %24 ]
  %31 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %29, align 8
  %32 = icmp ult i32 %28, 41
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = load i8*, i8** %7, align 16
  %35 = sext i32 %28 to i64
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = add nuw nsw i32 %28, 8
  store i32 %37, i32* %5, align 16
  br label %41

38:                                               ; preds = %27
  %39 = load i8*, i8** %6, align 8
  %40 = getelementptr i8, i8* %39, i64 8
  store i8* %40, i8** %6, align 8
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i32 [ %37, %33 ], [ %28, %38 ]
  %43 = phi i8* [ %36, %33 ], [ %39, %38 ]
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, %45
  br i1 %48, label %49, label %78

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 9
  %51 = add nuw i32 %30, 1
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %26, label %27

53:                                               ; preds = %26, %74
  %54 = phi %struct._cmsStage_struct** [ %75, %74 ], [ %8, %26 ]
  %55 = phi i32 [ %76, %74 ], [ 0, %26 ]
  %56 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %54, align 8
  %57 = load i32, i32* %5, align 16
  %58 = icmp ult i32 %57, 41
  br i1 %58, label %59, label %64

59:                                               ; preds = %53
  %60 = load i8*, i8** %7, align 16
  %61 = sext i32 %57 to i64
  %62 = getelementptr i8, i8* %60, i64 %61
  %63 = add nuw nsw i32 %57, 8
  store i32 %63, i32* %5, align 16
  br label %67

64:                                               ; preds = %53
  %65 = load i8*, i8** %6, align 8
  %66 = getelementptr i8, i8* %65, i64 8
  store i8* %66, i8** %6, align 8
  br label %67

67:                                               ; preds = %64, %59
  %68 = phi i8* [ %62, %59 ], [ %65, %64 ]
  %69 = bitcast i8* %68 to i8***
  %70 = load i8**, i8*** %69, align 8
  %71 = icmp eq i8** %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %67
  %73 = bitcast i8** %70 to %struct._cmsStage_struct**
  store %struct._cmsStage_struct* %56, %struct._cmsStage_struct** %73, align 8
  br label %74

74:                                               ; preds = %67, %72
  %75 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %56, i64 0, i32 9
  %76 = add nuw i32 %55, 1
  %77 = icmp eq i32 %76, %1
  br i1 %77, label %78, label %53

78:                                               ; preds = %41, %74, %26, %22
  %79 = phi i32 [ 1, %22 ], [ 1, %26 ], [ 1, %74 ], [ 0, %41 ]
  call void @llvm.va_end(i8* nonnull %4)
  br label %80

80:                                               ; preds = %78, %19
  %81 = phi i32 [ 0, %19 ], [ %79, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret i32 %81
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsPipelineStageCount(%struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %3 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %2, align 8
  %4 = icmp eq %struct._cmsStage_struct* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1, %5
  %6 = phi %struct._cmsStage_struct* [ %10, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %8, %5 ], [ 0, %1 ]
  %8 = add i32 %7, 1
  %9 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %6, i64 0, i32 9
  %10 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %9, align 8
  %11 = icmp eq %struct._cmsStage_struct* %10, null
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %1
  %13 = phi i32 [ 0, %1 ], [ %8, %5 ]
  ret i32 %13
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct._cmsStageToneCurvesData**
  %4 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %3, align 8
  %5 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %4, i64 0, i32 1
  %6 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %5, align 8
  ret %struct._cms_curve_struct** %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct*, i32, %struct._cms_curve_struct** readonly) local_unnamed_addr #0 {
  %4 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %5 = icmp eq i8* %4, null
  br i1 %5, label %76, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %4 to %struct._cmsStage_struct*
  %8 = bitcast i8* %4 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1668707188, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 1668707188, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %4, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 20
  %16 = bitcast i8* %15 to i32*
  store i32 %1, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %4, i64 24
  %18 = bitcast i8* %17 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @EvaluateCurves, void (float*, float*, %struct._cmsStage_struct*)** %18, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 32
  %20 = bitcast i8* %19 to i8* (%struct._cmsStage_struct*)**
  store i8* (%struct._cmsStage_struct*)* @CurveSetDup, i8* (%struct._cmsStage_struct*)** %20, align 8
  %21 = getelementptr inbounds i8, i8* %4, i64 40
  %22 = bitcast i8* %21 to void (%struct._cmsStage_struct*)**
  store void (%struct._cmsStage_struct*)* @CurveSetElemTypeFree, void (%struct._cmsStage_struct*)** %22, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 48
  %24 = bitcast i8* %23 to i8**
  store i8* null, i8** %24, align 8
  %25 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 16) #4
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %6
  %28 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %22, align 8
  %29 = icmp eq void (%struct._cmsStage_struct*)* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void %28(%struct._cmsStage_struct* nonnull %7) #4
  br label %31

31:                                               ; preds = %27, %30
  %32 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %8, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %32, i8* nonnull %4) #4
  br label %76

33:                                               ; preds = %6
  store i8* %25, i8** %24, align 8
  %34 = bitcast i8* %25 to i32*
  store i32 %1, i32* %34, align 8
  %35 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %1, i32 8) #4
  %36 = getelementptr inbounds i8, i8* %25, i64 8
  %37 = bitcast i8* %36 to %struct._cms_curve_struct***
  %38 = bitcast i8* %36 to i8**
  store i8* %35, i8** %38, align 8
  %39 = icmp eq i8* %35, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = icmp eq i32 %1, 0
  br i1 %41, label %76, label %42

42:                                               ; preds = %40
  %43 = icmp eq %struct._cms_curve_struct** %2, null
  %44 = zext i32 %1 to i64
  br label %53

45:                                               ; preds = %33
  %46 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %22, align 8
  %47 = icmp eq void (%struct._cmsStage_struct*)* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  tail call void %46(%struct._cmsStage_struct* nonnull %7) #4
  br label %49

49:                                               ; preds = %45, %48
  %50 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %8, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %50, i8* nonnull %4) #4
  br label %76

51:                                               ; preds = %61
  %52 = icmp eq i64 %69, %44
  br i1 %52, label %76, label %53

53:                                               ; preds = %51, %42
  %54 = phi i64 [ 0, %42 ], [ %69, %51 ]
  br i1 %43, label %55, label %57

55:                                               ; preds = %53
  %56 = tail call %struct._cms_curve_struct* @cmsBuildGamma(%struct._cmsContext_struct* %0, double 1.000000e+00) #4
  br label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %2, i64 %54
  %59 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %58, align 8
  %60 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %59) #4
  br label %61

61:                                               ; preds = %57, %55
  %62 = phi %struct._cms_curve_struct* [ %60, %57 ], [ %56, %55 ]
  %63 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %37, align 8
  %64 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %63, i64 %54
  store %struct._cms_curve_struct* %62, %struct._cms_curve_struct** %64, align 8
  %65 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %37, align 8
  %66 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %65, i64 %54
  %67 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %66, align 8
  %68 = icmp eq %struct._cms_curve_struct* %67, null
  %69 = add nuw nsw i64 %54, 1
  br i1 %68, label %70, label %51

70:                                               ; preds = %61
  %71 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %22, align 8
  %72 = icmp eq void (%struct._cmsStage_struct*)* %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  tail call void %71(%struct._cmsStage_struct* nonnull %7) #4
  br label %74

74:                                               ; preds = %70, %73
  %75 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %8, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %75, i8* nonnull %4) #4
  br label %76

76:                                               ; preds = %51, %40, %3, %74, %49, %31
  %77 = phi %struct._cmsStage_struct* [ null, %31 ], [ null, %49 ], [ null, %74 ], [ null, %3 ], [ %7, %40 ], [ %7, %51 ]
  ret %struct._cmsStage_struct* %77
}

; Function Attrs: nounwind ssp uwtable
define internal void @EvaluateCurves(float* nocapture readonly, float* nocapture, %struct._cmsStage_struct* nocapture readonly) #0 {
  %4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 8
  %5 = bitcast i8** %4 to %struct._cmsStageToneCurvesData**
  %6 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %5, align 8
  %7 = icmp eq %struct._cmsStageToneCurvesData* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %6, i64 0, i32 1
  %10 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %9, align 8
  %11 = icmp eq %struct._cms_curve_struct** %10, null
  br i1 %11, label %35, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %12
  %17 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %10, align 8
  %18 = load float, float* %0, align 4
  %19 = tail call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %17, float %18) #4
  store float %19, float* %1, align 4
  %20 = load i32, i32* %13, align 8
  %21 = icmp ugt i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %16, %22
  %23 = phi i64 [ %31, %22 ], [ 1, %16 ]
  %24 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %9, align 8
  %25 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %24, i64 %23
  %26 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %25, align 8
  %27 = getelementptr inbounds float, float* %0, i64 %23
  %28 = load float, float* %27, align 4
  %29 = tail call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %26, float %28) #4
  %30 = getelementptr inbounds float, float* %1, i64 %23
  store float %29, float* %30, align 4
  %31 = add nuw nsw i64 %23, 1
  %32 = load i32, i32* %13, align 8
  %33 = zext i32 %32 to i64
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %22, label %35

35:                                               ; preds = %22, %16, %12, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @CurveSetDup(%struct._cmsStage_struct* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct._cmsStageToneCurvesData**
  %4 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %3, align 8
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %6, i32 16) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %73, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i8* %7 to i32*
  store i32 %11, i32* %12, align 8
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %14 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %13, i32 %11, i32 8) #4
  %15 = getelementptr inbounds i8, i8* %7, i64 8
  %16 = bitcast i8* %15 to %struct._cms_curve_struct***
  %17 = bitcast i8* %15 to i8**
  store i8* %14, i8** %17, align 8
  %18 = icmp eq i8* %14, null
  %19 = bitcast i8* %14 to %struct._cms_curve_struct**
  br i1 %18, label %44, label %20

20:                                               ; preds = %9
  %21 = load i32, i32* %12, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %73, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %4, i64 0, i32 1
  br label %29

25:                                               ; preds = %29
  %26 = load i32, i32* %12, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %41, %27
  br i1 %28, label %29, label %73

29:                                               ; preds = %23, %25
  %30 = phi i64 [ 0, %23 ], [ %41, %25 ]
  %31 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %24, align 8
  %32 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %31, i64 %30
  %33 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %32, align 8
  %34 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %33) #4
  %35 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %16, align 8
  %36 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %35, i64 %30
  store %struct._cms_curve_struct* %34, %struct._cms_curve_struct** %36, align 8
  %37 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %16, align 8
  %38 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %37, i64 %30
  %39 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %38, align 8
  %40 = icmp eq %struct._cms_curve_struct* %39, null
  %41 = add nuw nsw i64 %30, 1
  br i1 %40, label %42, label %25

42:                                               ; preds = %29
  %43 = bitcast %struct._cms_curve_struct** %37 to i8*
  br label %44

44:                                               ; preds = %42, %9
  %45 = phi i8* [ null, %9 ], [ %43, %42 ]
  %46 = phi %struct._cms_curve_struct** [ %19, %9 ], [ %37, %42 ]
  %47 = icmp eq %struct._cms_curve_struct** %46, null
  br i1 %47, label %69, label %48

48:                                               ; preds = %44
  %49 = load i32, i32* %12, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %69, label %51

51:                                               ; preds = %48, %65
  %52 = phi i32 [ %61, %65 ], [ %49, %48 ]
  %53 = phi %struct._cms_curve_struct** [ %66, %65 ], [ %46, %48 ]
  %54 = phi i64 [ %62, %65 ], [ 0, %48 ]
  %55 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %53, i64 %54
  %56 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %55, align 8
  %57 = icmp eq %struct._cms_curve_struct* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %51
  tail call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %56) #4
  %59 = load i32, i32* %12, align 8
  br label %60

60:                                               ; preds = %51, %58
  %61 = phi i32 [ %52, %51 ], [ %59, %58 ]
  %62 = add nuw nsw i64 %54, 1
  %63 = zext i32 %61 to i64
  %64 = icmp ult i64 %62, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %16, align 8
  br label %51

67:                                               ; preds = %60
  %68 = load i8*, i8** %17, align 8
  br label %69

69:                                               ; preds = %67, %48, %44
  %70 = phi i8* [ %68, %67 ], [ %45, %48 ], [ %45, %44 ]
  %71 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %71, i8* %70) #4
  %72 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %72, i8* nonnull %7) #4
  br label %73

73:                                               ; preds = %25, %20, %1, %69
  %74 = phi i8* [ null, %69 ], [ null, %1 ], [ %7, %20 ], [ %7, %25 ]
  ret i8* %74
}

; Function Attrs: nounwind ssp uwtable
define internal void @CurveSetElemTypeFree(%struct._cmsStage_struct* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to %struct._cms_curve_struct***
  %8 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %7, align 8
  %9 = icmp eq %struct._cms_curve_struct** %8, null
  %10 = bitcast %struct._cms_curve_struct** %8 to i8*
  br i1 %9, label %34, label %11

11:                                               ; preds = %5
  %12 = bitcast i8* %3 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %11, %29
  %16 = phi i32 [ %25, %29 ], [ %13, %11 ]
  %17 = phi %struct._cms_curve_struct** [ %30, %29 ], [ %8, %11 ]
  %18 = phi i64 [ %26, %29 ], [ 0, %11 ]
  %19 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %17, i64 %18
  %20 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %19, align 8
  %21 = icmp eq %struct._cms_curve_struct* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  tail call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %20) #4
  %23 = load i32, i32* %12, align 8
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi i32 [ %16, %15 ], [ %23, %22 ]
  %26 = add nuw nsw i64 %18, 1
  %27 = zext i32 %25 to i64
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %7, align 8
  br label %15

31:                                               ; preds = %24
  %32 = bitcast i8* %6 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %11, %5
  %35 = phi i8* [ %33, %31 ], [ %10, %11 ], [ %10, %5 ]
  %36 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %37 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %37, i8* %35) #4
  %38 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %38, i8* nonnull %3) #4
  br label %39

39:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsStageFree(%struct._cmsStage_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 7
  %3 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %2, align 8
  %4 = icmp eq void (%struct._cmsStage_struct*)* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void %3(%struct._cmsStage_struct* %0) #4
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %9 = bitcast %struct._cmsStage_struct* %0 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %8, i8* %9) #4
  ret void
}

declare i8* @_cmsCalloc(%struct._cmsContext_struct*, i32, i32) local_unnamed_addr #2

declare %struct._cms_curve_struct* @cmsBuildGamma(%struct._cmsContext_struct*, double) local_unnamed_addr #2

declare %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocIdentityCurves(%struct._cmsContext_struct*, i32) local_unnamed_addr #0 {
  %3 = tail call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %0, i32 %1, %struct._cms_curve_struct** null)
  %4 = icmp eq %struct._cmsStage_struct* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %3, i64 0, i32 2
  store i32 1768189472, i32* %6, align 4
  br label %7

7:                                                ; preds = %2, %5
  ret %struct._cmsStage_struct* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct*, i32, i32, double* nocapture readonly, double* readonly) local_unnamed_addr #0 {
  %6 = mul i32 %2, %1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %185, label %8

8:                                                ; preds = %5
  %9 = udiv i32 -1, %2
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %185

11:                                               ; preds = %8
  %12 = udiv i32 -1, %1
  %13 = icmp ult i32 %6, %12
  br i1 %13, label %14, label %185

14:                                               ; preds = %11
  %15 = icmp ult i32 %6, %1
  %16 = icmp ult i32 %6, %2
  %17 = or i1 %15, %16
  br i1 %17, label %185, label %18

18:                                               ; preds = %14
  %19 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %20 = icmp eq i8* %19, null
  br i1 %20, label %185, label %21

21:                                               ; preds = %18
  %22 = bitcast i8* %19 to %struct._cmsStage_struct*
  %23 = bitcast i8* %19 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %23, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 1835103334, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 1835103334, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %19, i64 16
  %29 = bitcast i8* %28 to i32*
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %19, i64 20
  %31 = bitcast i8* %30 to i32*
  store i32 %1, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %19, i64 24
  %33 = bitcast i8* %32 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @EvaluateMatrix, void (float*, float*, %struct._cmsStage_struct*)** %33, align 8
  %34 = getelementptr inbounds i8, i8* %19, i64 32
  %35 = bitcast i8* %34 to i8* (%struct._cmsStage_struct*)**
  store i8* (%struct._cmsStage_struct*)* @MatrixElemDup, i8* (%struct._cmsStage_struct*)** %35, align 8
  %36 = getelementptr inbounds i8, i8* %19, i64 40
  %37 = bitcast i8* %36 to void (%struct._cmsStage_struct*)**
  store void (%struct._cmsStage_struct*)* @MatrixElemTypeFree, void (%struct._cmsStage_struct*)** %37, align 8
  %38 = getelementptr inbounds i8, i8* %19, i64 48
  %39 = bitcast i8* %38 to i8**
  store i8* null, i8** %39, align 8
  %40 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 16) #4
  %41 = icmp eq i8* %40, null
  br i1 %41, label %164, label %42

42:                                               ; preds = %21
  store i8* %40, i8** %39, align 8
  %43 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %6, i32 8) #4
  %44 = bitcast i8* %40 to double**
  %45 = bitcast i8* %40 to i8**
  store i8* %43, i8** %45, align 8
  %46 = icmp eq i8* %43, null
  br i1 %46, label %164, label %47

47:                                               ; preds = %42
  %48 = zext i32 %6 to i64
  %49 = bitcast double* %3 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8* %43 to i64*
  store i64 %50, i64* %51, align 8
  %52 = icmp eq i32 %6, 1
  br i1 %52, label %108, label %53

53:                                               ; preds = %47
  %54 = add nsw i64 %48, -1
  %55 = add nsw i64 %48, -2
  %56 = and i64 %54, 3
  %57 = icmp ult i64 %55, 3
  br i1 %57, label %93, label %58

58:                                               ; preds = %53
  %59 = sub nsw i64 %54, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 1, %58 ], [ %90, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %91, %60 ]
  %63 = load double*, double** %44, align 8
  %64 = getelementptr inbounds double, double* %3, i64 %61
  %65 = bitcast double* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds double, double* %63, i64 %61
  %68 = bitcast double* %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = add nuw nsw i64 %61, 1
  %70 = load double*, double** %44, align 8
  %71 = getelementptr inbounds double, double* %3, i64 %69
  %72 = bitcast double* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds double, double* %70, i64 %69
  %75 = bitcast double* %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = add nuw nsw i64 %61, 2
  %77 = load double*, double** %44, align 8
  %78 = getelementptr inbounds double, double* %3, i64 %76
  %79 = bitcast double* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds double, double* %77, i64 %76
  %82 = bitcast double* %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = add nuw nsw i64 %61, 3
  %84 = load double*, double** %44, align 8
  %85 = getelementptr inbounds double, double* %3, i64 %83
  %86 = bitcast double* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds double, double* %84, i64 %83
  %89 = bitcast double* %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = add nuw nsw i64 %61, 4
  %91 = add i64 %62, -4
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %60

93:                                               ; preds = %60, %53
  %94 = phi i64 [ 1, %53 ], [ %90, %60 ]
  %95 = icmp eq i64 %56, 0
  br i1 %95, label %108, label %96

96:                                               ; preds = %93, %96
  %97 = phi i64 [ %105, %96 ], [ %94, %93 ]
  %98 = phi i64 [ %106, %96 ], [ %56, %93 ]
  %99 = load double*, double** %44, align 8
  %100 = getelementptr inbounds double, double* %3, i64 %97
  %101 = bitcast double* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds double, double* %99, i64 %97
  %104 = bitcast double* %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = add nuw nsw i64 %97, 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %96, !llvm.loop !2

108:                                              ; preds = %93, %96, %47
  %109 = icmp eq double* %4, null
  br i1 %109, label %185, label %110

110:                                              ; preds = %108
  %111 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %1, i32 8) #4
  %112 = getelementptr inbounds i8, i8* %40, i64 8
  %113 = bitcast i8* %112 to double**
  %114 = bitcast i8* %112 to i8**
  store i8* %111, i8** %114, align 8
  %115 = icmp eq i8* %111, null
  br i1 %115, label %164, label %116

116:                                              ; preds = %110
  %117 = icmp eq i32 %1, 0
  br i1 %117, label %185, label %118

118:                                              ; preds = %116
  %119 = zext i32 %1 to i64
  %120 = bitcast double* %4 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast i8* %111 to i64*
  store i64 %121, i64* %122, align 8
  %123 = icmp eq i32 %1, 1
  br i1 %123, label %185, label %124

124:                                              ; preds = %118
  %125 = add nsw i64 %119, -1
  %126 = add nsw i64 %119, -2
  %127 = and i64 %125, 3
  %128 = icmp ult i64 %126, 3
  br i1 %128, label %170, label %129

129:                                              ; preds = %124
  %130 = sub nsw i64 %125, %127
  br label %131

131:                                              ; preds = %131, %129
  %132 = phi i64 [ 1, %129 ], [ %161, %131 ]
  %133 = phi i64 [ %130, %129 ], [ %162, %131 ]
  %134 = load double*, double** %113, align 8
  %135 = getelementptr inbounds double, double* %4, i64 %132
  %136 = bitcast double* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds double, double* %134, i64 %132
  %139 = bitcast double* %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = add nuw nsw i64 %132, 1
  %141 = load double*, double** %113, align 8
  %142 = getelementptr inbounds double, double* %4, i64 %140
  %143 = bitcast double* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds double, double* %141, i64 %140
  %146 = bitcast double* %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = add nuw nsw i64 %132, 2
  %148 = load double*, double** %113, align 8
  %149 = getelementptr inbounds double, double* %4, i64 %147
  %150 = bitcast double* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds double, double* %148, i64 %147
  %153 = bitcast double* %152 to i64*
  store i64 %151, i64* %153, align 8
  %154 = add nuw nsw i64 %132, 3
  %155 = load double*, double** %113, align 8
  %156 = getelementptr inbounds double, double* %4, i64 %154
  %157 = bitcast double* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds double, double* %155, i64 %154
  %160 = bitcast double* %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = add nuw nsw i64 %132, 4
  %162 = add i64 %133, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %170, label %131

164:                                              ; preds = %110, %42, %21
  %165 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %37, align 8
  %166 = icmp eq void (%struct._cmsStage_struct*)* %165, null
  br i1 %166, label %168, label %167

167:                                              ; preds = %164
  tail call void %165(%struct._cmsStage_struct* nonnull %22) #4
  br label %168

168:                                              ; preds = %164, %167
  %169 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %23, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %169, i8* nonnull %19) #4
  br label %185

170:                                              ; preds = %131, %124
  %171 = phi i64 [ 1, %124 ], [ %161, %131 ]
  %172 = icmp eq i64 %127, 0
  br i1 %172, label %185, label %173

173:                                              ; preds = %170, %173
  %174 = phi i64 [ %182, %173 ], [ %171, %170 ]
  %175 = phi i64 [ %183, %173 ], [ %127, %170 ]
  %176 = load double*, double** %113, align 8
  %177 = getelementptr inbounds double, double* %4, i64 %174
  %178 = bitcast double* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds double, double* %176, i64 %174
  %181 = bitcast double* %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = add nuw nsw i64 %174, 1
  %183 = add i64 %175, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %173, !llvm.loop !4

185:                                              ; preds = %170, %173, %118, %116, %18, %108, %14, %11, %8, %5, %168
  %186 = phi %struct._cmsStage_struct* [ null, %168 ], [ null, %5 ], [ null, %8 ], [ null, %11 ], [ null, %14 ], [ %22, %108 ], [ null, %18 ], [ %22, %116 ], [ %22, %118 ], [ %22, %173 ], [ %22, %170 ]
  ret %struct._cmsStage_struct* %186
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @EvaluateMatrix(float* nocapture readonly, float* nocapture, %struct._cmsStage_struct* nocapture readonly) #5 {
  %4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 8
  %5 = bitcast i8** %4 to %struct._cmsStageMatrixData**
  %6 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %5, align 8
  %7 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %87, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 3
  %12 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %6, i64 0, i32 0
  %13 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %6, i64 0, i32 1
  br label %14

14:                                               ; preds = %10, %79
  %15 = phi i64 [ 0, %10 ], [ %83, %79 ]
  %16 = load i32, i32* %11, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %71, label %18

18:                                               ; preds = %14
  %19 = load double*, double** %12, align 8
  %20 = zext i32 %16 to i64
  %21 = trunc i64 %15 to i32
  %22 = mul i32 %16, %21
  %23 = and i64 %20, 1
  %24 = icmp eq i32 %16, 1
  br i1 %24, label %55, label %25

25:                                               ; preds = %18
  %26 = sub nsw i64 %20, %23
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 0, %25 ], [ %52, %27 ]
  %29 = phi double [ 0.000000e+00, %25 ], [ %51, %27 ]
  %30 = phi i64 [ %26, %25 ], [ %53, %27 ]
  %31 = getelementptr inbounds float, float* %0, i64 %28
  %32 = load float, float* %31, align 4
  %33 = fpext float %32 to double
  %34 = trunc i64 %28 to i32
  %35 = add i32 %22, %34
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds double, double* %19, i64 %36
  %38 = load double, double* %37, align 8
  %39 = fmul double %38, %33
  %40 = fadd double %29, %39
  %41 = or i64 %28, 1
  %42 = getelementptr inbounds float, float* %0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fpext float %43 to double
  %45 = trunc i64 %41 to i32
  %46 = add i32 %22, %45
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds double, double* %19, i64 %47
  %49 = load double, double* %48, align 8
  %50 = fmul double %49, %44
  %51 = fadd double %40, %50
  %52 = add nuw nsw i64 %28, 2
  %53 = add i64 %30, -2
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %27

55:                                               ; preds = %27, %18
  %56 = phi double [ undef, %18 ], [ %51, %27 ]
  %57 = phi i64 [ 0, %18 ], [ %52, %27 ]
  %58 = phi double [ 0.000000e+00, %18 ], [ %51, %27 ]
  %59 = icmp eq i64 %23, 0
  br i1 %59, label %71, label %60

60:                                               ; preds = %55
  %61 = trunc i64 %57 to i32
  %62 = add i32 %22, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds double, double* %19, i64 %63
  %65 = load double, double* %64, align 8
  %66 = getelementptr inbounds float, float* %0, i64 %57
  %67 = load float, float* %66, align 4
  %68 = fpext float %67 to double
  %69 = fmul double %65, %68
  %70 = fadd double %58, %69
  br label %71

71:                                               ; preds = %60, %55, %14
  %72 = phi double [ 0.000000e+00, %14 ], [ %56, %55 ], [ %70, %60 ]
  %73 = load double*, double** %13, align 8
  %74 = icmp eq double* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds double, double* %73, i64 %15
  %77 = load double, double* %76, align 8
  %78 = fadd double %72, %77
  br label %79

79:                                               ; preds = %71, %75
  %80 = phi double [ %78, %75 ], [ %72, %71 ]
  %81 = fptrunc double %80 to float
  %82 = getelementptr inbounds float, float* %1, i64 %15
  store float %81, float* %82, align 4
  %83 = add nuw nsw i64 %15, 1
  %84 = load i32, i32* %7, align 4
  %85 = zext i32 %84 to i64
  %86 = icmp ult i64 %83, %85
  br i1 %86, label %14, label %87

87:                                               ; preds = %79, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @MatrixElemDup(%struct._cmsStage_struct* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct._cmsStageMatrixData**
  %4 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %3, align 8
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %6, i32 16) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %15 = bitcast %struct._cmsStageMatrixData* %4 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = shl i32 %11, 3
  %18 = mul i32 %17, %13
  %19 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %14, i8* %16, i32 %18) #4
  %20 = bitcast i8* %7 to i8**
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %4, i64 0, i32 1
  %22 = load double*, double** %21, align 8
  %23 = icmp eq double* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %9
  %25 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %26 = bitcast double* %22 to i8*
  %27 = load i32, i32* %12, align 4
  %28 = shl i32 %27, 3
  %29 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %25, i8* nonnull %26, i32 %28) #4
  %30 = getelementptr inbounds i8, i8* %7, i64 8
  %31 = bitcast i8* %30 to i8**
  store i8* %29, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %9, %1
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @MatrixElemTypeFree(%struct._cmsStage_struct* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct._cmsStageMatrixData**
  %4 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %3, align 8
  %5 = icmp eq %struct._cmsStageMatrixData* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %4, i64 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = icmp eq double* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %11, align 8
  %13 = bitcast double* %8 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %12, i8* nonnull %13) #4
  br label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %4, i64 0, i32 1
  %16 = load double*, double** %15, align 8
  %17 = icmp eq double* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %19, align 8
  %21 = bitcast double* %16 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %20, i8* nonnull %21) #4
  br label %22

22:                                               ; preds = %14, %18
  %23 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %24 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %23, align 8
  %25 = load i8*, i8** %2, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %24, i8* %25) #4
  br label %26

26:                                               ; preds = %1, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageAllocCLut16bitGranular(%struct._cmsContext_struct*, i32*, i32, i32, i16* readonly) local_unnamed_addr #0 {
  %6 = icmp ugt i32 %2, 8
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 %2, i32 8) #4
  br label %146

8:                                                ; preds = %5
  %9 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %10 = icmp eq i8* %9, null
  br i1 %10, label %146, label %11

11:                                               ; preds = %8
  %12 = bitcast i8* %9 to %struct._cmsStage_struct*
  %13 = bitcast i8* %9 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1668052340, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 1668052340, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %9, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 20
  %21 = bitcast i8* %20 to i32*
  store i32 %3, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %9, i64 24
  %23 = bitcast i8* %22 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @EvaluateCLUTfloatIn16, void (float*, float*, %struct._cmsStage_struct*)** %23, align 8
  %24 = getelementptr inbounds i8, i8* %9, i64 32
  %25 = bitcast i8* %24 to i8* (%struct._cmsStage_struct*)**
  store i8* (%struct._cmsStage_struct*)* @CLUTElemDup, i8* (%struct._cmsStage_struct*)** %25, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 40
  %27 = bitcast i8* %26 to void (%struct._cmsStage_struct*)**
  store void (%struct._cmsStage_struct*)* @CLutElemTypeFree, void (%struct._cmsStage_struct*)** %27, align 8
  %28 = getelementptr inbounds i8, i8* %9, i64 48
  %29 = bitcast i8* %28 to i8**
  store i8* null, i8** %29, align 8
  %30 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 24) #4
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %11
  %33 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %34 = icmp eq void (%struct._cmsStage_struct*)* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void %33(%struct._cmsStage_struct* nonnull %12) #4
  br label %36

36:                                               ; preds = %32, %35
  %37 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %37, i8* nonnull %9) #4
  br label %146

38:                                               ; preds = %11
  store i8* %30, i8** %29, align 8
  %39 = zext i32 %2 to i64
  br label %40

40:                                               ; preds = %50, %38
  %41 = phi i64 [ %54, %50 ], [ %39, %38 ]
  %42 = phi i32 [ %51, %50 ], [ 1, %38 ]
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %41, 4294967295
  %46 = and i64 %45, 4294967295
  %47 = getelementptr inbounds i32, i32* %1, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %44
  %51 = mul i32 %48, %42
  %52 = udiv i32 -1, %48
  %53 = icmp ugt i32 %51, %52
  %54 = add nsw i64 %41, -1
  br i1 %53, label %55, label %40

55:                                               ; preds = %40, %44, %50
  %56 = phi i32 [ 0, %44 ], [ 0, %50 ], [ %42, %40 ]
  %57 = mul i32 %56, %3
  %58 = getelementptr inbounds i8, i8* %30, i64 16
  %59 = bitcast i8* %58 to i32*
  store i32 %57, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %30, i64 20
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 4
  %62 = icmp eq i32 %57, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %55
  %64 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %65 = icmp eq void (%struct._cmsStage_struct*)* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  tail call void %64(%struct._cmsStage_struct* nonnull %12) #4
  br label %67

67:                                               ; preds = %63, %66
  %68 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %68, i8* nonnull %9) #4
  br label %146

69:                                               ; preds = %55
  %70 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %57, i32 2) #4
  %71 = bitcast i8* %30 to i16**
  %72 = bitcast i8* %30 to i8**
  store i8* %70, i8** %72, align 8
  %73 = icmp eq i8* %70, null
  %74 = bitcast i8* %70 to i16*
  br i1 %73, label %75, label %81

75:                                               ; preds = %69
  %76 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %77 = icmp eq void (%struct._cmsStage_struct*)* %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  tail call void %76(%struct._cmsStage_struct* nonnull %12) #4
  br label %79

79:                                               ; preds = %75, %78
  %80 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %80, i8* nonnull %9) #4
  br label %146

81:                                               ; preds = %69
  %82 = icmp eq i16* %4, null
  br i1 %82, label %134, label %83

83:                                               ; preds = %81
  %84 = zext i32 %57 to i64
  %85 = load i16, i16* %4, align 2
  store i16 %85, i16* %74, align 2
  %86 = icmp eq i32 %57, 1
  br i1 %86, label %132, label %87

87:                                               ; preds = %83
  %88 = add nsw i64 %84, -1
  %89 = add nsw i64 %84, -2
  %90 = and i64 %88, 3
  %91 = icmp ult i64 %89, 3
  br i1 %91, label %119, label %92

92:                                               ; preds = %87
  %93 = sub nsw i64 %88, %90
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 1, %92 ], [ %116, %94 ]
  %96 = phi i64 [ %93, %92 ], [ %117, %94 ]
  %97 = load i16*, i16** %71, align 8
  %98 = getelementptr inbounds i16, i16* %4, i64 %95
  %99 = load i16, i16* %98, align 2
  %100 = getelementptr inbounds i16, i16* %97, i64 %95
  store i16 %99, i16* %100, align 2
  %101 = add nuw nsw i64 %95, 1
  %102 = load i16*, i16** %71, align 8
  %103 = getelementptr inbounds i16, i16* %4, i64 %101
  %104 = load i16, i16* %103, align 2
  %105 = getelementptr inbounds i16, i16* %102, i64 %101
  store i16 %104, i16* %105, align 2
  %106 = add nuw nsw i64 %95, 2
  %107 = load i16*, i16** %71, align 8
  %108 = getelementptr inbounds i16, i16* %4, i64 %106
  %109 = load i16, i16* %108, align 2
  %110 = getelementptr inbounds i16, i16* %107, i64 %106
  store i16 %109, i16* %110, align 2
  %111 = add nuw nsw i64 %95, 3
  %112 = load i16*, i16** %71, align 8
  %113 = getelementptr inbounds i16, i16* %4, i64 %111
  %114 = load i16, i16* %113, align 2
  %115 = getelementptr inbounds i16, i16* %112, i64 %111
  store i16 %114, i16* %115, align 2
  %116 = add nuw nsw i64 %95, 4
  %117 = add i64 %96, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %94

119:                                              ; preds = %94, %87
  %120 = phi i64 [ 1, %87 ], [ %116, %94 ]
  %121 = icmp eq i64 %90, 0
  br i1 %121, label %132, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %129, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %130, %122 ], [ %90, %119 ]
  %125 = load i16*, i16** %71, align 8
  %126 = getelementptr inbounds i16, i16* %4, i64 %123
  %127 = load i16, i16* %126, align 2
  %128 = getelementptr inbounds i16, i16* %125, i64 %123
  store i16 %127, i16* %128, align 2
  %129 = add nuw nsw i64 %123, 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %122, !llvm.loop !5

132:                                              ; preds = %119, %122, %83
  %133 = load i8*, i8** %72, align 8
  br label %134

134:                                              ; preds = %81, %132
  %135 = phi i8* [ %133, %132 ], [ %70, %81 ]
  %136 = tail call %struct._cms_interp_struc* @_cmsComputeInterpParamsEx(%struct._cmsContext_struct* %0, i32* %1, i32 %2, i32 %3, i8* %135, i32 0) #4
  %137 = getelementptr inbounds i8, i8* %30, i64 8
  %138 = bitcast i8* %137 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %136, %struct._cms_interp_struc** %138, align 8
  %139 = icmp eq %struct._cms_interp_struc* %136, null
  br i1 %139, label %140, label %146

140:                                              ; preds = %134
  %141 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %142 = icmp eq void (%struct._cmsStage_struct*)* %141, null
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  tail call void %141(%struct._cmsStage_struct* nonnull %12) #4
  br label %144

144:                                              ; preds = %140, %143
  %145 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %145, i8* nonnull %9) #4
  br label %146

146:                                              ; preds = %8, %134, %144, %79, %67, %36, %7
  %147 = phi %struct._cmsStage_struct* [ null, %7 ], [ null, %36 ], [ null, %67 ], [ null, %79 ], [ null, %144 ], [ %12, %134 ], [ null, %8 ]
  ret %struct._cmsStage_struct* %147
}

declare void @cmsSignalError(%struct._cmsContext_struct*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @EvaluateCLUTfloatIn16(float* nocapture readonly, float* nocapture, %struct._cmsStage_struct* nocapture readonly) #0 {
  %4 = alloca [128 x i16], align 16
  %5 = alloca [128 x i16], align 16
  %6 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 8
  %7 = bitcast i8** %6 to %struct._cmsStageCLutData**
  %8 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %7, align 8
  %9 = bitcast [128 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 256, i1 false)
  %10 = bitcast [128 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 256, i1 false)
  %11 = getelementptr inbounds [128 x i16], [128 x i16]* %4, i64 0, i64 0
  %12 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %3
  %16 = zext i32 %13 to i64
  br label %17

17:                                               ; preds = %33, %15
  %18 = phi i64 [ 0, %15 ], [ %36, %33 ]
  %19 = getelementptr inbounds float, float* %0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  %22 = fmul double %21, 6.553500e+04
  %23 = fadd double %22, 5.000000e-01
  %24 = fcmp ugt double %23, 0.000000e+00
  br i1 %24, label %25, label %33

25:                                               ; preds = %17
  %26 = fcmp ult double %23, 6.553500e+04
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = fadd double %23, -3.276700e+04
  %29 = tail call double @llvm.floor.f64(double %28) #4
  %30 = fptosi double %29 to i32
  %31 = trunc i32 %30 to i16
  %32 = add i16 %31, 32767
  br label %33

33:                                               ; preds = %27, %25, %17
  %34 = phi i16 [ %32, %27 ], [ 0, %17 ], [ -1, %25 ]
  %35 = getelementptr inbounds [128 x i16], [128 x i16]* %4, i64 0, i64 %18
  store i16 %34, i16* %35, align 2
  %36 = add nuw nsw i64 %18, 1
  %37 = icmp eq i64 %36, %16
  br i1 %37, label %38, label %17

38:                                               ; preds = %33, %3
  %39 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %8, i64 0, i32 1
  %40 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %39, align 8
  %41 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %40, i64 0, i32 8, i32 0
  %42 = load void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %41, align 8
  %43 = getelementptr inbounds [128 x i16], [128 x i16]* %5, i64 0, i64 0
  call void %42(i16* nonnull %11, i16* nonnull %43, %struct._cms_interp_struc* %40) #4
  %44 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %104, label %47

47:                                               ; preds = %38
  %48 = zext i32 %45 to i64
  %49 = icmp ult i32 %45, 4
  br i1 %49, label %93, label %50

50:                                               ; preds = %47
  %51 = and i64 %48, 4294967292
  %52 = add nsw i64 %51, -4
  %53 = lshr exact i64 %52, 2
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %52, 0
  br i1 %56, label %80, label %57

57:                                               ; preds = %50
  %58 = sub nuw nsw i64 %54, %55
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i64 [ 0, %57 ], [ %77, %59 ]
  %61 = phi i64 [ %58, %57 ], [ %78, %59 ]
  %62 = getelementptr inbounds [128 x i16], [128 x i16]* %5, i64 0, i64 %60
  %63 = bitcast i16* %62 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 16
  %65 = uitofp <4 x i16> %64 to <4 x float>
  %66 = fdiv <4 x float> %65, <float 6.553500e+04, float 6.553500e+04, float 6.553500e+04, float 6.553500e+04>
  %67 = getelementptr inbounds float, float* %1, i64 %60
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> %66, <4 x float>* %68, align 4
  %69 = or i64 %60, 4
  %70 = getelementptr inbounds [128 x i16], [128 x i16]* %5, i64 0, i64 %69
  %71 = bitcast i16* %70 to <4 x i16>*
  %72 = load <4 x i16>, <4 x i16>* %71, align 8
  %73 = uitofp <4 x i16> %72 to <4 x float>
  %74 = fdiv <4 x float> %73, <float 6.553500e+04, float 6.553500e+04, float 6.553500e+04, float 6.553500e+04>
  %75 = getelementptr inbounds float, float* %1, i64 %69
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> %74, <4 x float>* %76, align 4
  %77 = add i64 %60, 8
  %78 = add i64 %61, -2
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %59, !llvm.loop !6

80:                                               ; preds = %59, %50
  %81 = phi i64 [ 0, %50 ], [ %77, %59 ]
  %82 = icmp eq i64 %55, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds [128 x i16], [128 x i16]* %5, i64 0, i64 %81
  %85 = bitcast i16* %84 to <4 x i16>*
  %86 = load <4 x i16>, <4 x i16>* %85, align 8
  %87 = uitofp <4 x i16> %86 to <4 x float>
  %88 = fdiv <4 x float> %87, <float 6.553500e+04, float 6.553500e+04, float 6.553500e+04, float 6.553500e+04>
  %89 = getelementptr inbounds float, float* %1, i64 %81
  %90 = bitcast float* %89 to <4 x float>*
  store <4 x float> %88, <4 x float>* %90, align 4
  br label %91

91:                                               ; preds = %80, %83
  %92 = icmp eq i64 %51, %48
  br i1 %92, label %104, label %93

93:                                               ; preds = %91, %47
  %94 = phi i64 [ 0, %47 ], [ %51, %91 ]
  br label %95

95:                                               ; preds = %93, %95
  %96 = phi i64 [ %102, %95 ], [ %94, %93 ]
  %97 = getelementptr inbounds [128 x i16], [128 x i16]* %5, i64 0, i64 %96
  %98 = load i16, i16* %97, align 2
  %99 = uitofp i16 %98 to float
  %100 = fdiv float %99, 6.553500e+04
  %101 = getelementptr inbounds float, float* %1, i64 %96
  store float %100, float* %101, align 4
  %102 = add nuw nsw i64 %96, 1
  %103 = icmp eq i64 %102, %48
  br i1 %103, label %104, label %95, !llvm.loop !8

104:                                              ; preds = %95, %91, %38
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @CLUTElemDup(%struct._cmsStage_struct* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct._cmsStageCLutData**
  %4 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %3, align 8
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %6, i32 24) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %70, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %4, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %11, i32* %13, align 8
  %14 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %4, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i8, i8* %7, i64 20
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %4, i64 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = icmp eq i16* %19, null
  %21 = bitcast i16* %19 to i8*
  br i1 %20, label %22, label %25

22:                                               ; preds = %9
  %23 = bitcast i8* %7 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %42

25:                                               ; preds = %9
  %26 = load i32, i32* %14, align 4
  %27 = icmp eq i32 %26, 0
  %28 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %29 = load i32, i32* %10, align 8
  br i1 %27, label %36, label %30

30:                                               ; preds = %25
  %31 = shl i32 %29, 2
  %32 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %28, i8* nonnull %21, i32 %31) #4
  %33 = bitcast i8* %7 to i8**
  store i8* %32, i8** %33, align 8
  %34 = icmp eq i8* %32, null
  %35 = bitcast i8* %32 to i16*
  br i1 %34, label %62, label %42

36:                                               ; preds = %25
  %37 = shl i32 %29, 1
  %38 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %28, i8* nonnull %21, i32 %37) #4
  %39 = bitcast i8* %7 to i8**
  store i8* %38, i8** %39, align 8
  %40 = icmp eq i8* %38, null
  %41 = bitcast i8* %38 to i16*
  br i1 %40, label %62, label %42

42:                                               ; preds = %22, %30, %36
  %43 = phi i8* [ %24, %22 ], [ %32, %30 ], [ %38, %36 ]
  %44 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %45 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %4, i64 0, i32 1
  %46 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %45, align 8
  %47 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %46, i64 0, i32 4, i64 0
  %48 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %46, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %46, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %46, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = tail call %struct._cms_interp_struc* @_cmsComputeInterpParamsEx(%struct._cmsContext_struct* %44, i32* %47, i32 %49, i32 %51, i8* %43, i32 %53) #4
  %55 = getelementptr inbounds i8, i8* %7, i64 8
  %56 = bitcast i8* %55 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %54, %struct._cms_interp_struc** %56, align 8
  %57 = icmp eq %struct._cms_interp_struc* %54, null
  br i1 %57, label %58, label %70

58:                                               ; preds = %42
  %59 = bitcast i8* %7 to i16**
  %60 = load i16*, i16** %59, align 8
  %61 = bitcast i16* %60 to i8*
  br label %62

62:                                               ; preds = %58, %36, %30
  %63 = phi i8* [ %61, %58 ], [ null, %36 ], [ null, %30 ]
  %64 = phi i16* [ %60, %58 ], [ %41, %36 ], [ %35, %30 ]
  %65 = icmp eq i16* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %67, i8* nonnull %63) #4
  br label %68

68:                                               ; preds = %62, %66
  %69 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %69, i8* nonnull %7) #4
  br label %70

70:                                               ; preds = %42, %1, %68
  %71 = phi i8* [ null, %68 ], [ null, %1 ], [ %7, %42 ]
  ret i8* %71
}

; Function Attrs: nounwind ssp uwtable
define internal void @CLutElemTypeFree(%struct._cmsStage_struct* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = bitcast i8** %2 to %struct._cmsStageCLutData**
  %4 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %3, align 8
  %5 = icmp eq %struct._cmsStageCLutData* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %4, i64 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = icmp eq i16* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %11, align 8
  %13 = bitcast i16* %8 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %12, i8* nonnull %13) #4
  br label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %4, i64 0, i32 1
  %16 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %15, align 8
  tail call void @_cmsFreeInterpParams(%struct._cms_interp_struc* %16) #4
  %17 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %17, align 8
  %19 = load i8*, i8** %2, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %18, i8* %19) #4
  br label %20

20:                                               ; preds = %1, %14
  ret void
}

declare %struct._cms_interp_struc* @_cmsComputeInterpParamsEx(%struct._cmsContext_struct*, i32*, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct*, i32, i32, i32, i16* readonly) local_unnamed_addr #0 {
  %6 = alloca [8 x i32], align 16
  %7 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %10 = insertelement <4 x i32> undef, i32 %1, i32 0
  %11 = shufflevector <4 x i32> %10, <4 x i32> undef, <4 x i32> zeroinitializer
  %12 = bitcast [8 x i32]* %6 to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %12, align 16
  %13 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %13, align 16
  %14 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bitGranular(%struct._cmsContext_struct* %0, i32* nonnull %8, i32 %2, i32 %3, i16* %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret %struct._cmsStage_struct* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageAllocCLutFloat(%struct._cmsContext_struct*, i32, i32, i32, float* readonly) local_unnamed_addr #0 {
  %6 = alloca [8 x i32], align 16
  %7 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %10 = insertelement <4 x i32> undef, i32 %1, i32 0
  %11 = shufflevector <4 x i32> %10, <4 x i32> undef, <4 x i32> zeroinitializer
  %12 = bitcast [8 x i32]* %6 to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %12, align 16
  %13 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %13, align 16
  %14 = call %struct._cmsStage_struct* @cmsStageAllocCLutFloatGranular(%struct._cmsContext_struct* %0, i32* nonnull %8, i32 %2, i32 %3, float* %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret %struct._cmsStage_struct* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageAllocCLutFloatGranular(%struct._cmsContext_struct*, i32*, i32, i32, float* readonly) local_unnamed_addr #0 {
  %6 = icmp ugt i32 %2, 8
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 %2, i32 8) #4
  br label %157

8:                                                ; preds = %5
  %9 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %10 = icmp eq i8* %9, null
  br i1 %10, label %157, label %11

11:                                               ; preds = %8
  %12 = bitcast i8* %9 to %struct._cmsStage_struct*
  %13 = bitcast i8* %9 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1668052340, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 1668052340, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %9, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 20
  %21 = bitcast i8* %20 to i32*
  store i32 %3, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %9, i64 24
  %23 = bitcast i8* %22 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @EvaluateCLUTfloat, void (float*, float*, %struct._cmsStage_struct*)** %23, align 8
  %24 = getelementptr inbounds i8, i8* %9, i64 32
  %25 = bitcast i8* %24 to i8* (%struct._cmsStage_struct*)**
  store i8* (%struct._cmsStage_struct*)* @CLUTElemDup, i8* (%struct._cmsStage_struct*)** %25, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 40
  %27 = bitcast i8* %26 to void (%struct._cmsStage_struct*)**
  store void (%struct._cmsStage_struct*)* @CLutElemTypeFree, void (%struct._cmsStage_struct*)** %27, align 8
  %28 = getelementptr inbounds i8, i8* %9, i64 48
  %29 = bitcast i8* %28 to i8**
  store i8* null, i8** %29, align 8
  %30 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 24) #4
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %11
  %33 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %34 = icmp eq void (%struct._cmsStage_struct*)* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void %33(%struct._cmsStage_struct* nonnull %12) #4
  br label %36

36:                                               ; preds = %32, %35
  %37 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %37, i8* nonnull %9) #4
  br label %157

38:                                               ; preds = %11
  store i8* %30, i8** %29, align 8
  %39 = zext i32 %2 to i64
  br label %40

40:                                               ; preds = %50, %38
  %41 = phi i64 [ %54, %50 ], [ %39, %38 ]
  %42 = phi i32 [ %51, %50 ], [ 1, %38 ]
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %41, 4294967295
  %46 = and i64 %45, 4294967295
  %47 = getelementptr inbounds i32, i32* %1, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %44
  %51 = mul i32 %48, %42
  %52 = udiv i32 -1, %48
  %53 = icmp ugt i32 %51, %52
  %54 = add nsw i64 %41, -1
  br i1 %53, label %55, label %40

55:                                               ; preds = %40, %44, %50
  %56 = phi i32 [ 0, %44 ], [ 0, %50 ], [ %42, %40 ]
  %57 = mul i32 %56, %3
  %58 = getelementptr inbounds i8, i8* %30, i64 16
  %59 = bitcast i8* %58 to i32*
  store i32 %57, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %30, i64 20
  %61 = bitcast i8* %60 to i32*
  store i32 1, i32* %61, align 4
  %62 = icmp eq i32 %57, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %55
  %64 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %65 = icmp eq void (%struct._cmsStage_struct*)* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  tail call void %64(%struct._cmsStage_struct* nonnull %12) #4
  br label %67

67:                                               ; preds = %63, %66
  %68 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %68, i8* nonnull %9) #4
  br label %157

69:                                               ; preds = %55
  %70 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %57, i32 4) #4
  %71 = bitcast i8* %30 to float**
  %72 = bitcast i8* %30 to i8**
  store i8* %70, i8** %72, align 8
  %73 = icmp eq i8* %70, null
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %76 = icmp eq void (%struct._cmsStage_struct*)* %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %74
  tail call void %75(%struct._cmsStage_struct* nonnull %12) #4
  br label %78

78:                                               ; preds = %74, %77
  %79 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %79, i8* nonnull %9) #4
  br label %157

80:                                               ; preds = %69
  %81 = icmp eq float* %4, null
  br i1 %81, label %145, label %82

82:                                               ; preds = %80
  %83 = zext i32 %57 to i64
  %84 = bitcast float* %4 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = bitcast i8* %70 to i32*
  store i32 %85, i32* %86, align 4
  %87 = icmp eq i32 %57, 1
  br i1 %87, label %143, label %88

88:                                               ; preds = %82
  %89 = add nsw i64 %83, -1
  %90 = add nsw i64 %83, -2
  %91 = and i64 %89, 3
  %92 = icmp ult i64 %90, 3
  br i1 %92, label %128, label %93

93:                                               ; preds = %88
  %94 = sub nsw i64 %89, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 1, %93 ], [ %125, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %126, %95 ]
  %98 = load float*, float** %71, align 8
  %99 = getelementptr inbounds float, float* %4, i64 %96
  %100 = bitcast float* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds float, float* %98, i64 %96
  %103 = bitcast float* %102 to i32*
  store i32 %101, i32* %103, align 4
  %104 = add nuw nsw i64 %96, 1
  %105 = load float*, float** %71, align 8
  %106 = getelementptr inbounds float, float* %4, i64 %104
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds float, float* %105, i64 %104
  %110 = bitcast float* %109 to i32*
  store i32 %108, i32* %110, align 4
  %111 = add nuw nsw i64 %96, 2
  %112 = load float*, float** %71, align 8
  %113 = getelementptr inbounds float, float* %4, i64 %111
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds float, float* %112, i64 %111
  %117 = bitcast float* %116 to i32*
  store i32 %115, i32* %117, align 4
  %118 = add nuw nsw i64 %96, 3
  %119 = load float*, float** %71, align 8
  %120 = getelementptr inbounds float, float* %4, i64 %118
  %121 = bitcast float* %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds float, float* %119, i64 %118
  %124 = bitcast float* %123 to i32*
  store i32 %122, i32* %124, align 4
  %125 = add nuw nsw i64 %96, 4
  %126 = add i64 %97, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %95

128:                                              ; preds = %95, %88
  %129 = phi i64 [ 1, %88 ], [ %125, %95 ]
  %130 = icmp eq i64 %91, 0
  br i1 %130, label %143, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %140, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %141, %131 ], [ %91, %128 ]
  %134 = load float*, float** %71, align 8
  %135 = getelementptr inbounds float, float* %4, i64 %132
  %136 = bitcast float* %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds float, float* %134, i64 %132
  %139 = bitcast float* %138 to i32*
  store i32 %137, i32* %139, align 4
  %140 = add nuw nsw i64 %132, 1
  %141 = add i64 %133, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %131, !llvm.loop !10

143:                                              ; preds = %128, %131, %82
  %144 = load i8*, i8** %72, align 8
  br label %145

145:                                              ; preds = %80, %143
  %146 = phi i8* [ %144, %143 ], [ %70, %80 ]
  %147 = tail call %struct._cms_interp_struc* @_cmsComputeInterpParamsEx(%struct._cmsContext_struct* %0, i32* %1, i32 %2, i32 %3, i8* %146, i32 1) #4
  %148 = getelementptr inbounds i8, i8* %30, i64 8
  %149 = bitcast i8* %148 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %147, %struct._cms_interp_struc** %149, align 8
  %150 = icmp eq %struct._cms_interp_struc* %147, null
  br i1 %150, label %151, label %157

151:                                              ; preds = %145
  %152 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %27, align 8
  %153 = icmp eq void (%struct._cmsStage_struct*)* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  tail call void %152(%struct._cmsStage_struct* nonnull %12) #4
  br label %155

155:                                              ; preds = %151, %154
  %156 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %156, i8* nonnull %9) #4
  br label %157

157:                                              ; preds = %8, %145, %155, %78, %67, %36, %7
  %158 = phi %struct._cmsStage_struct* [ null, %7 ], [ null, %36 ], [ null, %67 ], [ null, %78 ], [ null, %155 ], [ %12, %145 ], [ null, %8 ]
  ret %struct._cmsStage_struct* %158
}

; Function Attrs: nounwind ssp uwtable
define internal void @EvaluateCLUTfloat(float*, float*, %struct._cmsStage_struct* nocapture readonly) #0 {
  %4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 8
  %5 = bitcast i8** %4 to %struct._cmsStageCLutData**
  %6 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %5, align 8
  %7 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %6, i64 0, i32 1
  %8 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %7, align 8
  %9 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %8, i64 0, i32 8
  %10 = bitcast %union.cmsInterpFunction* %9 to void (float*, float*, %struct._cms_interp_struc*)**
  %11 = load void (float*, float*, %struct._cms_interp_struc*)*, void (float*, float*, %struct._cms_interp_struc*)** %10, align 8
  tail call void %11(float* %0, float* %1, %struct._cms_interp_struc* %8) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocIdentityCLut(%struct._cmsContext_struct*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca [8 x i32], align 16
  store i32 %1, i32* %3, align 4
  %5 = bitcast [8 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 4
  %8 = bitcast [8 x i32]* %4 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %8, align 16
  %9 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %9, align 16
  %10 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bitGranular(%struct._cmsContext_struct* %0, i32* nonnull %6, i32 %1, i32 %1, i16* null)
  %11 = icmp eq %struct._cmsStage_struct* %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = bitcast i32* %3 to i8*
  %14 = call i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct* nonnull %10, i32 (i16*, i16*, i8*)* nonnull @IdentitySampler, i8* nonnull %13, i32 0)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %10, i64 0, i32 7
  %18 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %17, align 8
  %19 = icmp eq void (%struct._cmsStage_struct*)* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call void %18(%struct._cmsStage_struct* nonnull %10) #4
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %10, i64 0, i32 0
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %22, align 8
  %24 = bitcast %struct._cmsStage_struct* %10 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %23, i8* nonnull %24) #4
  br label %27

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %10, i64 0, i32 2
  store i32 1768189472, i32* %26, align 4
  br label %27

27:                                               ; preds = %2, %25, %21
  %28 = phi %struct._cmsStage_struct* [ %10, %25 ], [ null, %21 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret %struct._cmsStage_struct* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct* readonly, i32 (i16*, i16*, i8*)* nocapture, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca [9 x i16], align 16
  %6 = alloca [128 x i16], align 16
  %7 = bitcast [9 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %7) #4
  %8 = getelementptr inbounds [9 x i16], [9 x i16]* %5, i64 0, i64 0
  %9 = bitcast [128 x i16]* %6 to i8*
  %10 = bitcast [9 x i16]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 18, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 256, i1 false)
  %11 = icmp eq %struct._cmsStage_struct* %0, null
  br i1 %11, label %213, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %14 = bitcast i8** %13 to %struct._cmsStageCLutData**
  %15 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %14, align 8
  %16 = icmp eq %struct._cmsStageCLutData* %15, null
  br i1 %16, label %213, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %15, i64 0, i32 1
  %19 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %18, align 8
  %20 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %19, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %21, -1
  %25 = icmp ugt i32 %24, 7
  %26 = add i32 %23, -1
  %27 = icmp ugt i32 %26, 126
  %28 = or i1 %25, %27
  br i1 %28, label %213, label %29

29:                                               ; preds = %17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 18, i1 false)
  %30 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 256, i1 false)
  %31 = zext i32 %21 to i64
  br label %32

32:                                               ; preds = %42, %29
  %33 = phi i64 [ %46, %42 ], [ %31, %29 ]
  %34 = phi i32 [ %43, %42 ], [ 1, %29 ]
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = add nuw nsw i64 %33, 4294967295
  %38 = and i64 %37, 4294967295
  %39 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %19, i64 0, i32 4, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %213, label %42

42:                                               ; preds = %36
  %43 = mul i32 %40, %34
  %44 = udiv i32 -1, %40
  %45 = icmp ugt i32 %43, %44
  %46 = add nsw i64 %33, -1
  br i1 %45, label %213, label %32

47:                                               ; preds = %32
  %48 = icmp eq i32 %34, 0
  br i1 %48, label %213, label %49

49:                                               ; preds = %47
  %50 = icmp sgt i32 %34, 0
  br i1 %50, label %51, label %213

51:                                               ; preds = %49
  %52 = icmp sgt i32 %21, 0
  %53 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %15, i64 0, i32 0, i32 0
  %54 = icmp slt i32 %23, 1
  %55 = and i32 %3, 16777216
  %56 = icmp eq i32 %55, 0
  %57 = sext i32 %21 to i64
  %58 = zext i32 %23 to i64
  %59 = add nsw i64 %58, -1
  %60 = add nsw i64 %58, -2
  %61 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 0
  %62 = icmp eq i32 %23, 1
  %63 = and i64 %59, 3
  %64 = icmp ult i64 %60, 3
  %65 = sub nsw i64 %59, %63
  %66 = icmp eq i64 %63, 0
  %67 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 0
  %68 = icmp eq i32 %23, 1
  %69 = and i64 %59, 3
  %70 = icmp ult i64 %60, 3
  %71 = sub nsw i64 %59, %69
  %72 = icmp eq i64 %69, 0
  br label %73

73:                                               ; preds = %209, %51
  %74 = phi i32 [ 0, %51 ], [ %210, %209 ]
  %75 = phi i32 [ 0, %51 ], [ %211, %209 ]
  br i1 %52, label %76, label %103

76:                                               ; preds = %73, %99
  %77 = phi i64 [ %79, %99 ], [ %57, %73 ]
  %78 = phi i32 [ %83, %99 ], [ %75, %73 ]
  %79 = add nsw i64 %77, -1
  %80 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %19, i64 0, i32 4, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = urem i32 %78, %81
  %83 = udiv i32 %78, %81
  %84 = uitofp i32 %82 to double
  %85 = fmul double %84, 6.553500e+04
  %86 = add i32 %81, -1
  %87 = uitofp i32 %86 to double
  %88 = fdiv double %85, %87
  %89 = fadd double %88, 5.000000e-01
  %90 = fcmp ugt double %89, 0.000000e+00
  br i1 %90, label %91, label %99

91:                                               ; preds = %76
  %92 = fcmp ult double %89, 6.553500e+04
  br i1 %92, label %93, label %99

93:                                               ; preds = %91
  %94 = fadd double %89, -3.276700e+04
  %95 = call double @llvm.floor.f64(double %94) #4
  %96 = fptosi double %95 to i32
  %97 = trunc i32 %96 to i16
  %98 = add i16 %97, 32767
  br label %99

99:                                               ; preds = %76, %91, %93
  %100 = phi i16 [ %98, %93 ], [ 0, %76 ], [ -1, %91 ]
  %101 = getelementptr inbounds [9 x i16], [9 x i16]* %5, i64 0, i64 %79
  store i16 %100, i16* %101, align 2
  %102 = icmp sgt i64 %79, 0
  br i1 %102, label %76, label %103

103:                                              ; preds = %99, %73
  %104 = load i16*, i16** %53, align 8
  %105 = icmp eq i16* %104, null
  %106 = or i1 %105, %54
  br i1 %106, label %154, label %107

107:                                              ; preds = %103
  %108 = sext i32 %74 to i64
  %109 = getelementptr inbounds i16, i16* %104, i64 %108
  %110 = load i16, i16* %109, align 2
  store i16 %110, i16* %61, align 16
  br i1 %62, label %154, label %111

111:                                              ; preds = %107
  br i1 %64, label %141, label %112

112:                                              ; preds = %111, %112
  %113 = phi i64 [ %138, %112 ], [ 1, %111 ]
  %114 = phi i64 [ %139, %112 ], [ %65, %111 ]
  %115 = load i16*, i16** %53, align 8
  %116 = add nsw i64 %113, %108
  %117 = getelementptr inbounds i16, i16* %115, i64 %116
  %118 = load i16, i16* %117, align 2
  %119 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %113
  store i16 %118, i16* %119, align 2
  %120 = add nuw nsw i64 %113, 1
  %121 = load i16*, i16** %53, align 8
  %122 = add nsw i64 %120, %108
  %123 = getelementptr inbounds i16, i16* %121, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %120
  store i16 %124, i16* %125, align 2
  %126 = add nuw nsw i64 %113, 2
  %127 = load i16*, i16** %53, align 8
  %128 = add nsw i64 %126, %108
  %129 = getelementptr inbounds i16, i16* %127, i64 %128
  %130 = load i16, i16* %129, align 2
  %131 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %126
  store i16 %130, i16* %131, align 2
  %132 = add nuw nsw i64 %113, 3
  %133 = load i16*, i16** %53, align 8
  %134 = add nsw i64 %132, %108
  %135 = getelementptr inbounds i16, i16* %133, i64 %134
  %136 = load i16, i16* %135, align 2
  %137 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %132
  store i16 %136, i16* %137, align 2
  %138 = add nuw nsw i64 %113, 4
  %139 = add i64 %114, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %112

141:                                              ; preds = %112, %111
  %142 = phi i64 [ 1, %111 ], [ %138, %112 ]
  br i1 %66, label %154, label %143

143:                                              ; preds = %141, %143
  %144 = phi i64 [ %151, %143 ], [ %142, %141 ]
  %145 = phi i64 [ %152, %143 ], [ %63, %141 ]
  %146 = load i16*, i16** %53, align 8
  %147 = add nsw i64 %144, %108
  %148 = getelementptr inbounds i16, i16* %146, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %144
  store i16 %149, i16* %150, align 2
  %151 = add nuw nsw i64 %144, 1
  %152 = add i64 %145, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !11

154:                                              ; preds = %141, %143, %107, %103
  %155 = call i32 %1(i16* nonnull %8, i16* nonnull %30, i8* %2) #4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %213, label %157

157:                                              ; preds = %154
  br i1 %56, label %158, label %209

158:                                              ; preds = %157
  %159 = load i16*, i16** %53, align 8
  %160 = icmp eq i16* %159, null
  %161 = or i1 %160, %54
  br i1 %161, label %209, label %162

162:                                              ; preds = %158
  %163 = sext i32 %74 to i64
  %164 = load i16, i16* %67, align 16
  %165 = getelementptr inbounds i16, i16* %159, i64 %163
  store i16 %164, i16* %165, align 2
  br i1 %68, label %209, label %166

166:                                              ; preds = %162
  br i1 %70, label %196, label %167

167:                                              ; preds = %166, %167
  %168 = phi i64 [ %193, %167 ], [ 1, %166 ]
  %169 = phi i64 [ %194, %167 ], [ %71, %166 ]
  %170 = load i16*, i16** %53, align 8
  %171 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %168
  %172 = load i16, i16* %171, align 2
  %173 = add nsw i64 %168, %163
  %174 = getelementptr inbounds i16, i16* %170, i64 %173
  store i16 %172, i16* %174, align 2
  %175 = add nuw nsw i64 %168, 1
  %176 = load i16*, i16** %53, align 8
  %177 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %175
  %178 = load i16, i16* %177, align 2
  %179 = add nsw i64 %175, %163
  %180 = getelementptr inbounds i16, i16* %176, i64 %179
  store i16 %178, i16* %180, align 2
  %181 = add nuw nsw i64 %168, 2
  %182 = load i16*, i16** %53, align 8
  %183 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %181
  %184 = load i16, i16* %183, align 2
  %185 = add nsw i64 %181, %163
  %186 = getelementptr inbounds i16, i16* %182, i64 %185
  store i16 %184, i16* %186, align 2
  %187 = add nuw nsw i64 %168, 3
  %188 = load i16*, i16** %53, align 8
  %189 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %187
  %190 = load i16, i16* %189, align 2
  %191 = add nsw i64 %187, %163
  %192 = getelementptr inbounds i16, i16* %188, i64 %191
  store i16 %190, i16* %192, align 2
  %193 = add nuw nsw i64 %168, 4
  %194 = add i64 %169, -4
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %167

196:                                              ; preds = %167, %166
  %197 = phi i64 [ 1, %166 ], [ %193, %167 ]
  br i1 %72, label %209, label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %206, %198 ], [ %197, %196 ]
  %200 = phi i64 [ %207, %198 ], [ %69, %196 ]
  %201 = load i16*, i16** %53, align 8
  %202 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 %199
  %203 = load i16, i16* %202, align 2
  %204 = add nsw i64 %199, %163
  %205 = getelementptr inbounds i16, i16* %201, i64 %204
  store i16 %203, i16* %205, align 2
  %206 = add nuw nsw i64 %199, 1
  %207 = add i64 %200, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %198, !llvm.loop !12

209:                                              ; preds = %196, %198, %162, %158, %157
  %210 = add i32 %74, %23
  %211 = add nuw nsw i32 %75, 1
  %212 = icmp eq i32 %211, %34
  br i1 %212, label %213, label %73

213:                                              ; preds = %42, %36, %154, %209, %49, %47, %17, %12, %4
  %214 = phi i32 [ 0, %4 ], [ 0, %12 ], [ 0, %17 ], [ 0, %47 ], [ 1, %49 ], [ 0, %154 ], [ 1, %209 ], [ 0, %36 ], [ 0, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %7) #4
  ret i32 %214
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @IdentitySampler(i16* nocapture readonly, i16* nocapture, i8* nocapture readonly) #5 {
  %4 = bitcast i8* %2 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %132

7:                                                ; preds = %3
  %8 = zext i32 %5 to i64
  %9 = icmp ult i32 %5, 16
  br i1 %9, label %95, label %10

10:                                               ; preds = %7
  %11 = getelementptr i16, i16* %1, i64 %8
  %12 = getelementptr i16, i16* %0, i64 %8
  %13 = icmp ugt i16* %12, %1
  %14 = icmp ugt i16* %11, %0
  %15 = and i1 %13, %14
  br i1 %15, label %95, label %16

16:                                               ; preds = %10
  %17 = and i64 %8, 4294967280
  %18 = add nsw i64 %17, -16
  %19 = lshr exact i64 %18, 4
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 3
  %22 = icmp ult i64 %18, 48
  br i1 %22, label %74, label %23

23:                                               ; preds = %16
  %24 = sub nsw i64 %20, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %71, %25 ]
  %27 = phi i64 [ %24, %23 ], [ %72, %25 ]
  %28 = getelementptr inbounds i16, i16* %0, i64 %26
  %29 = bitcast i16* %28 to <8 x i16>*
  %30 = load <8 x i16>, <8 x i16>* %29, align 2, !alias.scope !13
  %31 = getelementptr inbounds i16, i16* %28, i64 8
  %32 = bitcast i16* %31 to <8 x i16>*
  %33 = load <8 x i16>, <8 x i16>* %32, align 2, !alias.scope !13
  %34 = getelementptr inbounds i16, i16* %1, i64 %26
  %35 = bitcast i16* %34 to <8 x i16>*
  store <8 x i16> %30, <8 x i16>* %35, align 2, !alias.scope !16, !noalias !13
  %36 = getelementptr inbounds i16, i16* %34, i64 8
  %37 = bitcast i16* %36 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %37, align 2, !alias.scope !16, !noalias !13
  %38 = or i64 %26, 16
  %39 = getelementptr inbounds i16, i16* %0, i64 %38
  %40 = bitcast i16* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !13
  %42 = getelementptr inbounds i16, i16* %39, i64 8
  %43 = bitcast i16* %42 to <8 x i16>*
  %44 = load <8 x i16>, <8 x i16>* %43, align 2, !alias.scope !13
  %45 = getelementptr inbounds i16, i16* %1, i64 %38
  %46 = bitcast i16* %45 to <8 x i16>*
  store <8 x i16> %41, <8 x i16>* %46, align 2, !alias.scope !16, !noalias !13
  %47 = getelementptr inbounds i16, i16* %45, i64 8
  %48 = bitcast i16* %47 to <8 x i16>*
  store <8 x i16> %44, <8 x i16>* %48, align 2, !alias.scope !16, !noalias !13
  %49 = or i64 %26, 32
  %50 = getelementptr inbounds i16, i16* %0, i64 %49
  %51 = bitcast i16* %50 to <8 x i16>*
  %52 = load <8 x i16>, <8 x i16>* %51, align 2, !alias.scope !13
  %53 = getelementptr inbounds i16, i16* %50, i64 8
  %54 = bitcast i16* %53 to <8 x i16>*
  %55 = load <8 x i16>, <8 x i16>* %54, align 2, !alias.scope !13
  %56 = getelementptr inbounds i16, i16* %1, i64 %49
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %57, align 2, !alias.scope !16, !noalias !13
  %58 = getelementptr inbounds i16, i16* %56, i64 8
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %55, <8 x i16>* %59, align 2, !alias.scope !16, !noalias !13
  %60 = or i64 %26, 48
  %61 = getelementptr inbounds i16, i16* %0, i64 %60
  %62 = bitcast i16* %61 to <8 x i16>*
  %63 = load <8 x i16>, <8 x i16>* %62, align 2, !alias.scope !13
  %64 = getelementptr inbounds i16, i16* %61, i64 8
  %65 = bitcast i16* %64 to <8 x i16>*
  %66 = load <8 x i16>, <8 x i16>* %65, align 2, !alias.scope !13
  %67 = getelementptr inbounds i16, i16* %1, i64 %60
  %68 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %63, <8 x i16>* %68, align 2, !alias.scope !16, !noalias !13
  %69 = getelementptr inbounds i16, i16* %67, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %66, <8 x i16>* %70, align 2, !alias.scope !16, !noalias !13
  %71 = add i64 %26, 64
  %72 = add i64 %27, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %25, !llvm.loop !18

74:                                               ; preds = %25, %16
  %75 = phi i64 [ 0, %16 ], [ %71, %25 ]
  %76 = icmp eq i64 %21, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %74, %77
  %78 = phi i64 [ %90, %77 ], [ %75, %74 ]
  %79 = phi i64 [ %91, %77 ], [ %21, %74 ]
  %80 = getelementptr inbounds i16, i16* %0, i64 %78
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !13
  %83 = getelementptr inbounds i16, i16* %80, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !13
  %86 = getelementptr inbounds i16, i16* %1, i64 %78
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %87, align 2, !alias.scope !16, !noalias !13
  %88 = getelementptr inbounds i16, i16* %86, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !16, !noalias !13
  %90 = add i64 %78, 16
  %91 = add i64 %79, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %77, !llvm.loop !19

93:                                               ; preds = %77, %74
  %94 = icmp eq i64 %17, %8
  br i1 %94, label %132, label %95

95:                                               ; preds = %93, %10, %7
  %96 = phi i64 [ 0, %10 ], [ 0, %7 ], [ %17, %93 ]
  %97 = xor i64 %96, -1
  %98 = add nsw i64 %97, %8
  %99 = and i64 %8, 3
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %110, label %101

101:                                              ; preds = %95, %101
  %102 = phi i64 [ %107, %101 ], [ %96, %95 ]
  %103 = phi i64 [ %108, %101 ], [ %99, %95 ]
  %104 = getelementptr inbounds i16, i16* %0, i64 %102
  %105 = load i16, i16* %104, align 2
  %106 = getelementptr inbounds i16, i16* %1, i64 %102
  store i16 %105, i16* %106, align 2
  %107 = add nuw nsw i64 %102, 1
  %108 = add i64 %103, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %101, !llvm.loop !20

110:                                              ; preds = %101, %95
  %111 = phi i64 [ %96, %95 ], [ %107, %101 ]
  %112 = icmp ult i64 %98, 3
  br i1 %112, label %132, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %130, %113 ], [ %111, %110 ]
  %115 = getelementptr inbounds i16, i16* %0, i64 %114
  %116 = load i16, i16* %115, align 2
  %117 = getelementptr inbounds i16, i16* %1, i64 %114
  store i16 %116, i16* %117, align 2
  %118 = add nuw nsw i64 %114, 1
  %119 = getelementptr inbounds i16, i16* %0, i64 %118
  %120 = load i16, i16* %119, align 2
  %121 = getelementptr inbounds i16, i16* %1, i64 %118
  store i16 %120, i16* %121, align 2
  %122 = add nuw nsw i64 %114, 2
  %123 = getelementptr inbounds i16, i16* %0, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = getelementptr inbounds i16, i16* %1, i64 %122
  store i16 %124, i16* %125, align 2
  %126 = add nuw nsw i64 %114, 3
  %127 = getelementptr inbounds i16, i16* %0, i64 %126
  %128 = load i16, i16* %127, align 2
  %129 = getelementptr inbounds i16, i16* %1, i64 %126
  store i16 %128, i16* %129, align 2
  %130 = add nuw nsw i64 %114, 4
  %131 = icmp eq i64 %130, %8
  br i1 %131, label %132, label %113, !llvm.loop !21

132:                                              ; preds = %110, %113, %93, %3
  ret i32 1
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i16 @_cmsQuantizeVal(double, i32) local_unnamed_addr #6 {
  %3 = fmul double %0, 6.553500e+04
  %4 = add i32 %1, -1
  %5 = uitofp i32 %4 to double
  %6 = fdiv double %3, %5
  %7 = fadd double %6, 5.000000e-01
  %8 = fcmp ugt double %7, 0.000000e+00
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = fcmp ult double %7, 6.553500e+04
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = fadd double %7, -3.276700e+04
  %13 = tail call double @llvm.floor.f64(double %12) #4
  %14 = fptosi double %13 to i32
  %15 = trunc i32 %14 to i16
  %16 = add i16 %15, 32767
  br label %17

17:                                               ; preds = %2, %9, %11
  %18 = phi i16 [ %16, %11 ], [ 0, %2 ], [ -1, %9 ]
  ret i16 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsStageSampleCLutFloat(%struct._cmsStage_struct* nocapture readonly, i32 (float*, float*, i8*)* nocapture, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca [9 x float], align 16
  %6 = alloca [128 x float], align 16
  %7 = bitcast [9 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -1, i64 36, i1 false)
  %8 = bitcast [128 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 512, i1 false)
  %9 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %10 = bitcast i8** %9 to %struct._cmsStageCLutData**
  %11 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %10, align 8
  %12 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %11, i64 0, i32 1
  %13 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %12, align 8
  %14 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %13, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %13, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %15, -1
  %19 = icmp ugt i32 %18, 7
  %20 = add i32 %17, -1
  %21 = icmp ugt i32 %20, 126
  %22 = or i1 %19, %21
  br i1 %22, label %233, label %23

23:                                               ; preds = %4
  %24 = zext i32 %15 to i64
  br label %25

25:                                               ; preds = %35, %23
  %26 = phi i64 [ %39, %35 ], [ %24, %23 ]
  %27 = phi i32 [ %36, %35 ], [ 1, %23 ]
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %26, 4294967295
  %31 = and i64 %30, 4294967295
  %32 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %13, i64 0, i32 4, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %233, label %35

35:                                               ; preds = %29
  %36 = mul i32 %33, %27
  %37 = udiv i32 -1, %33
  %38 = icmp ugt i32 %36, %37
  %39 = add nsw i64 %26, -1
  br i1 %38, label %233, label %25

40:                                               ; preds = %25
  %41 = icmp eq i32 %27, 0
  br i1 %41, label %233, label %42

42:                                               ; preds = %40
  %43 = icmp sgt i32 %27, 0
  br i1 %43, label %44, label %233

44:                                               ; preds = %42
  %45 = icmp sgt i32 %15, 0
  %46 = bitcast %struct._cmsStageCLutData* %11 to float**
  %47 = icmp slt i32 %17, 1
  %48 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 0
  %49 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 0
  %50 = and i32 %3, 16777216
  %51 = icmp eq i32 %50, 0
  %52 = sext i32 %15 to i64
  %53 = zext i32 %17 to i64
  %54 = add nsw i64 %53, -1
  %55 = add nsw i64 %53, -2
  %56 = bitcast [128 x float]* %6 to i32*
  %57 = icmp eq i32 %17, 1
  %58 = and i64 %54, 3
  %59 = icmp ult i64 %55, 3
  %60 = sub nsw i64 %54, %58
  %61 = icmp eq i64 %58, 0
  %62 = bitcast [128 x float]* %6 to i32*
  %63 = icmp eq i32 %17, 1
  %64 = and i64 %54, 3
  %65 = icmp ult i64 %55, 3
  %66 = sub nsw i64 %54, %64
  %67 = icmp eq i64 %64, 0
  br label %68

68:                                               ; preds = %229, %44
  %69 = phi i32 [ 0, %44 ], [ %230, %229 ]
  %70 = phi i32 [ 0, %44 ], [ %231, %229 ]
  br i1 %45, label %71, label %101

71:                                               ; preds = %68, %94
  %72 = phi i64 [ %74, %94 ], [ %52, %68 ]
  %73 = phi i32 [ %78, %94 ], [ %70, %68 ]
  %74 = add nsw i64 %72, -1
  %75 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %13, i64 0, i32 4, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = urem i32 %73, %76
  %78 = udiv i32 %73, %76
  %79 = uitofp i32 %77 to double
  %80 = fmul double %79, 6.553500e+04
  %81 = add i32 %76, -1
  %82 = uitofp i32 %81 to double
  %83 = fdiv double %80, %82
  %84 = fadd double %83, 5.000000e-01
  %85 = fcmp ugt double %84, 0.000000e+00
  br i1 %85, label %86, label %94

86:                                               ; preds = %71
  %87 = fcmp ult double %84, 6.553500e+04
  br i1 %87, label %88, label %94

88:                                               ; preds = %86
  %89 = fadd double %84, -3.276700e+04
  %90 = call double @llvm.floor.f64(double %89) #4
  %91 = fptosi double %90 to i32
  %92 = trunc i32 %91 to i16
  %93 = add i16 %92, 32767
  br label %94

94:                                               ; preds = %71, %86, %88
  %95 = phi i16 [ %93, %88 ], [ 0, %71 ], [ -1, %86 ]
  %96 = uitofp i16 %95 to double
  %97 = fdiv double %96, 6.553500e+04
  %98 = fptrunc double %97 to float
  %99 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 %74
  store float %98, float* %99, align 4
  %100 = icmp sgt i64 %74, 0
  br i1 %100, label %71, label %101

101:                                              ; preds = %94, %68
  %102 = load float*, float** %46, align 8
  %103 = icmp eq float* %102, null
  %104 = or i1 %103, %47
  br i1 %104, label %163, label %105

105:                                              ; preds = %101
  %106 = sext i32 %69 to i64
  %107 = getelementptr inbounds float, float* %102, i64 %106
  %108 = bitcast float* %107 to i32*
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %56, align 16
  br i1 %57, label %163, label %110

110:                                              ; preds = %105
  br i1 %59, label %148, label %111

111:                                              ; preds = %110, %111
  %112 = phi i64 [ %145, %111 ], [ 1, %110 ]
  %113 = phi i64 [ %146, %111 ], [ %60, %110 ]
  %114 = load float*, float** %46, align 8
  %115 = add nsw i64 %112, %106
  %116 = getelementptr inbounds float, float* %114, i64 %115
  %117 = bitcast float* %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %112
  %120 = bitcast float* %119 to i32*
  store i32 %118, i32* %120, align 4
  %121 = add nuw nsw i64 %112, 1
  %122 = load float*, float** %46, align 8
  %123 = add nsw i64 %121, %106
  %124 = getelementptr inbounds float, float* %122, i64 %123
  %125 = bitcast float* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %121
  %128 = bitcast float* %127 to i32*
  store i32 %126, i32* %128, align 4
  %129 = add nuw nsw i64 %112, 2
  %130 = load float*, float** %46, align 8
  %131 = add nsw i64 %129, %106
  %132 = getelementptr inbounds float, float* %130, i64 %131
  %133 = bitcast float* %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %129
  %136 = bitcast float* %135 to i32*
  store i32 %134, i32* %136, align 4
  %137 = add nuw nsw i64 %112, 3
  %138 = load float*, float** %46, align 8
  %139 = add nsw i64 %137, %106
  %140 = getelementptr inbounds float, float* %138, i64 %139
  %141 = bitcast float* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %137
  %144 = bitcast float* %143 to i32*
  store i32 %142, i32* %144, align 4
  %145 = add nuw nsw i64 %112, 4
  %146 = add i64 %113, -4
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %111

148:                                              ; preds = %111, %110
  %149 = phi i64 [ 1, %110 ], [ %145, %111 ]
  br i1 %61, label %163, label %150

150:                                              ; preds = %148, %150
  %151 = phi i64 [ %160, %150 ], [ %149, %148 ]
  %152 = phi i64 [ %161, %150 ], [ %58, %148 ]
  %153 = load float*, float** %46, align 8
  %154 = add nsw i64 %151, %106
  %155 = getelementptr inbounds float, float* %153, i64 %154
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %151
  %159 = bitcast float* %158 to i32*
  store i32 %157, i32* %159, align 4
  %160 = add nuw nsw i64 %151, 1
  %161 = add i64 %152, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %150, !llvm.loop !22

163:                                              ; preds = %148, %150, %105, %101
  %164 = call i32 %1(float* nonnull %48, float* nonnull %49, i8* %2) #4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %233, label %166

166:                                              ; preds = %163
  br i1 %51, label %167, label %229

167:                                              ; preds = %166
  %168 = load float*, float** %46, align 8
  %169 = icmp eq float* %168, null
  %170 = or i1 %169, %47
  br i1 %170, label %229, label %171

171:                                              ; preds = %167
  %172 = sext i32 %69 to i64
  %173 = load i32, i32* %62, align 16
  %174 = getelementptr inbounds float, float* %168, i64 %172
  %175 = bitcast float* %174 to i32*
  store i32 %173, i32* %175, align 4
  br i1 %63, label %229, label %176

176:                                              ; preds = %171
  br i1 %65, label %214, label %177

177:                                              ; preds = %176, %177
  %178 = phi i64 [ %211, %177 ], [ 1, %176 ]
  %179 = phi i64 [ %212, %177 ], [ %66, %176 ]
  %180 = load float*, float** %46, align 8
  %181 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %178
  %182 = bitcast float* %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = add nsw i64 %178, %172
  %185 = getelementptr inbounds float, float* %180, i64 %184
  %186 = bitcast float* %185 to i32*
  store i32 %183, i32* %186, align 4
  %187 = add nuw nsw i64 %178, 1
  %188 = load float*, float** %46, align 8
  %189 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %187
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = add nsw i64 %187, %172
  %193 = getelementptr inbounds float, float* %188, i64 %192
  %194 = bitcast float* %193 to i32*
  store i32 %191, i32* %194, align 4
  %195 = add nuw nsw i64 %178, 2
  %196 = load float*, float** %46, align 8
  %197 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %195
  %198 = bitcast float* %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = add nsw i64 %195, %172
  %201 = getelementptr inbounds float, float* %196, i64 %200
  %202 = bitcast float* %201 to i32*
  store i32 %199, i32* %202, align 4
  %203 = add nuw nsw i64 %178, 3
  %204 = load float*, float** %46, align 8
  %205 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %203
  %206 = bitcast float* %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = add nsw i64 %203, %172
  %209 = getelementptr inbounds float, float* %204, i64 %208
  %210 = bitcast float* %209 to i32*
  store i32 %207, i32* %210, align 4
  %211 = add nuw nsw i64 %178, 4
  %212 = add i64 %179, -4
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %177

214:                                              ; preds = %177, %176
  %215 = phi i64 [ 1, %176 ], [ %211, %177 ]
  br i1 %67, label %229, label %216

216:                                              ; preds = %214, %216
  %217 = phi i64 [ %226, %216 ], [ %215, %214 ]
  %218 = phi i64 [ %227, %216 ], [ %64, %214 ]
  %219 = load float*, float** %46, align 8
  %220 = getelementptr inbounds [128 x float], [128 x float]* %6, i64 0, i64 %217
  %221 = bitcast float* %220 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = add nsw i64 %217, %172
  %224 = getelementptr inbounds float, float* %219, i64 %223
  %225 = bitcast float* %224 to i32*
  store i32 %222, i32* %225, align 4
  %226 = add nuw nsw i64 %217, 1
  %227 = add i64 %218, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %216, !llvm.loop !23

229:                                              ; preds = %214, %216, %171, %167, %166
  %230 = add i32 %69, %17
  %231 = add nuw nsw i32 %70, 1
  %232 = icmp eq i32 %231, %27
  br i1 %232, label %233, label %68

233:                                              ; preds = %35, %29, %163, %229, %42, %40, %4
  %234 = phi i32 [ 0, %4 ], [ 0, %40 ], [ 1, %42 ], [ 0, %163 ], [ 1, %229 ], [ 0, %29 ], [ 0, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %7) #4
  ret i32 %234
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsSliceSpace16(i32, i32* nocapture readonly, i32 (i16*, i16*, i8*)* nocapture, i8*) local_unnamed_addr #0 {
  %5 = alloca [16 x i16], align 16
  %6 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  %7 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 0
  %8 = icmp ugt i32 %0, 15
  %9 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  br i1 %8, label %69, label %10

10:                                               ; preds = %4
  %11 = zext i32 %0 to i64
  br label %12

12:                                               ; preds = %22, %10
  %13 = phi i64 [ %26, %22 ], [ %11, %10 ]
  %14 = phi i32 [ %23, %22 ], [ 1, %10 ]
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = add nuw nsw i64 %13, 4294967295
  %18 = and i64 %17, 4294967295
  %19 = getelementptr inbounds i32, i32* %1, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %69, label %22

22:                                               ; preds = %16
  %23 = mul i32 %20, %14
  %24 = udiv i32 -1, %20
  %25 = icmp ugt i32 %23, %24
  %26 = add nsw i64 %13, -1
  br i1 %25, label %69, label %12

27:                                               ; preds = %12
  %28 = icmp eq i32 %14, 0
  br i1 %28, label %69, label %29

29:                                               ; preds = %27
  %30 = icmp sgt i32 %14, 0
  br i1 %30, label %31, label %69

31:                                               ; preds = %29
  %32 = icmp sgt i32 %0, 0
  %33 = sext i32 %0 to i64
  br label %36

34:                                               ; preds = %65
  %35 = icmp eq i32 %68, %14
  br i1 %35, label %69, label %36

36:                                               ; preds = %34, %31
  %37 = phi i32 [ 0, %31 ], [ %68, %34 ]
  br i1 %32, label %38, label %65

38:                                               ; preds = %36, %61
  %39 = phi i64 [ %41, %61 ], [ %33, %36 ]
  %40 = phi i32 [ %45, %61 ], [ %37, %36 ]
  %41 = add nsw i64 %39, -1
  %42 = getelementptr inbounds i32, i32* %1, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = urem i32 %40, %43
  %45 = udiv i32 %40, %43
  %46 = uitofp i32 %44 to double
  %47 = fmul double %46, 6.553500e+04
  %48 = add i32 %43, -1
  %49 = uitofp i32 %48 to double
  %50 = fdiv double %47, %49
  %51 = fadd double %50, 5.000000e-01
  %52 = fcmp ugt double %51, 0.000000e+00
  br i1 %52, label %53, label %61

53:                                               ; preds = %38
  %54 = fcmp ult double %51, 6.553500e+04
  br i1 %54, label %55, label %61

55:                                               ; preds = %53
  %56 = fadd double %51, -3.276700e+04
  %57 = call double @llvm.floor.f64(double %56) #4
  %58 = fptosi double %57 to i32
  %59 = trunc i32 %58 to i16
  %60 = add i16 %59, 32767
  br label %61

61:                                               ; preds = %38, %53, %55
  %62 = phi i16 [ %60, %55 ], [ 0, %38 ], [ -1, %53 ]
  %63 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %41
  store i16 %62, i16* %63, align 2
  %64 = icmp sgt i64 %41, 0
  br i1 %64, label %38, label %65

65:                                               ; preds = %61, %36
  %66 = call i32 %2(i16* nonnull %7, i16* null, i8* %3) #4
  %67 = icmp eq i32 %66, 0
  %68 = add nuw nsw i32 %37, 1
  br i1 %67, label %69, label %34

69:                                               ; preds = %22, %16, %65, %34, %29, %27, %4
  %70 = phi i32 [ 0, %4 ], [ 0, %27 ], [ 1, %29 ], [ 0, %65 ], [ 1, %34 ], [ 0, %16 ], [ 0, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsSliceSpaceFloat(i32, i32* nocapture readonly, i32 (float*, float*, i8*)* nocapture, i8*) local_unnamed_addr #0 {
  %5 = alloca [16 x float], align 16
  %6 = bitcast [16 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -1, i64 64, i1 false)
  %7 = icmp ugt i32 %0, 15
  br i1 %7, label %71, label %8

8:                                                ; preds = %4
  %9 = zext i32 %0 to i64
  br label %10

10:                                               ; preds = %20, %8
  %11 = phi i64 [ %24, %20 ], [ %9, %8 ]
  %12 = phi i32 [ %21, %20 ], [ 1, %8 ]
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = add nuw nsw i64 %11, 4294967295
  %16 = and i64 %15, 4294967295
  %17 = getelementptr inbounds i32, i32* %1, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %71, label %20

20:                                               ; preds = %14
  %21 = mul i32 %18, %12
  %22 = udiv i32 -1, %18
  %23 = icmp ugt i32 %21, %22
  %24 = add nsw i64 %11, -1
  br i1 %23, label %71, label %10

25:                                               ; preds = %10
  %26 = icmp eq i32 %12, 0
  br i1 %26, label %71, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds [16 x float], [16 x float]* %5, i64 0, i64 0
  %29 = icmp sgt i32 %12, 0
  br i1 %29, label %30, label %71

30:                                               ; preds = %27
  %31 = icmp sgt i32 %0, 0
  %32 = sext i32 %0 to i64
  br label %35

33:                                               ; preds = %67
  %34 = icmp eq i32 %70, %12
  br i1 %34, label %71, label %35

35:                                               ; preds = %33, %30
  %36 = phi i32 [ 0, %30 ], [ %70, %33 ]
  br i1 %31, label %37, label %67

37:                                               ; preds = %35, %60
  %38 = phi i64 [ %40, %60 ], [ %32, %35 ]
  %39 = phi i32 [ %44, %60 ], [ %36, %35 ]
  %40 = add nsw i64 %38, -1
  %41 = getelementptr inbounds i32, i32* %1, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = urem i32 %39, %42
  %44 = udiv i32 %39, %42
  %45 = uitofp i32 %43 to double
  %46 = fmul double %45, 6.553500e+04
  %47 = add i32 %42, -1
  %48 = uitofp i32 %47 to double
  %49 = fdiv double %46, %48
  %50 = fadd double %49, 5.000000e-01
  %51 = fcmp ugt double %50, 0.000000e+00
  br i1 %51, label %52, label %60

52:                                               ; preds = %37
  %53 = fcmp ult double %50, 6.553500e+04
  br i1 %53, label %54, label %60

54:                                               ; preds = %52
  %55 = fadd double %50, -3.276700e+04
  %56 = call double @llvm.floor.f64(double %55) #4
  %57 = fptosi double %56 to i32
  %58 = trunc i32 %57 to i16
  %59 = add i16 %58, 32767
  br label %60

60:                                               ; preds = %37, %52, %54
  %61 = phi i16 [ %59, %54 ], [ 0, %37 ], [ -1, %52 ]
  %62 = uitofp i16 %61 to double
  %63 = fdiv double %62, 6.553500e+04
  %64 = fptrunc double %63 to float
  %65 = getelementptr inbounds [16 x float], [16 x float]* %5, i64 0, i64 %40
  store float %64, float* %65, align 4
  %66 = icmp sgt i64 %40, 0
  br i1 %66, label %37, label %67

67:                                               ; preds = %60, %35
  %68 = call i32 %2(float* nonnull %28, float* null, i8* %3) #4
  %69 = icmp eq i32 %68, 0
  %70 = add nuw nsw i32 %36, 1
  br i1 %69, label %71, label %33

71:                                               ; preds = %20, %14, %67, %33, %27, %25, %4
  %72 = phi i32 [ 0, %4 ], [ 0, %25 ], [ 1, %27 ], [ 0, %67 ], [ 1, %33 ], [ 0, %14 ], [ 0, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #4
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocLab2XYZ(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %3 = icmp eq i8* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct._cmsStage_struct*
  %6 = bitcast i8* %2 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <4 x i32>*
  store <4 x i32> <i32 2016570400, i32 2016570400, i32 3, i32 3>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @EvaluateLab2XYZ, void (float*, float*, %struct._cmsStage_struct*)** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false)
  br label %12

12:                                               ; preds = %1, %4
  %13 = phi %struct._cmsStage_struct* [ %5, %4 ], [ null, %1 ]
  ret %struct._cmsStage_struct* %13
}

; Function Attrs: nounwind ssp uwtable
define internal void @EvaluateLab2XYZ(float* nocapture readonly, float* nocapture, %struct._cmsStage_struct* nocapture readnone) #0 {
  %4 = alloca %struct.cmsCIELab, align 8
  %5 = alloca %struct.cmsCIEXYZ, align 8
  %6 = bitcast %struct.cmsCIELab* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #4
  %7 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %4, i64 0, i32 0
  %8 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %4, i64 0, i32 1
  %9 = bitcast %struct.cmsCIEXYZ* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #4
  %10 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %5, i64 0, i32 0
  %11 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %5, i64 0, i32 2
  %13 = bitcast %struct.cmsCIEXYZ* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -1, i64 24, i1 false)
  %14 = load float, float* %0, align 4
  %15 = fpext float %14 to double
  %16 = fmul double %15, 1.000000e+02
  store double %16, double* %7, align 8
  %17 = getelementptr inbounds float, float* %0, i64 1
  %18 = bitcast float* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = fmul <2 x double> %20, <double 2.550000e+02, double 2.550000e+02>
  %22 = fadd <2 x double> %21, <double -1.280000e+02, double -1.280000e+02>
  %23 = bitcast double* %8 to <2 x double>*
  store <2 x double> %22, <2 x double>* %23, align 8
  call void @cmsLab2XYZ(%struct.cmsCIEXYZ* null, %struct.cmsCIEXYZ* nonnull %5, %struct.cmsCIELab* nonnull %4) #4
  %24 = load double, double* %10, align 8
  %25 = fdiv double %24, 0x3FFFFFE000000000
  %26 = fptrunc double %25 to float
  store float %26, float* %1, align 4
  %27 = load double, double* %11, align 8
  %28 = fdiv double %27, 0x3FFFFFE000000000
  %29 = fptrunc double %28 to float
  %30 = getelementptr inbounds float, float* %1, i64 1
  store float %29, float* %30, align 4
  %31 = load double, double* %12, align 8
  %32 = fdiv double %31, 0x3FFFFFE000000000
  %33 = fptrunc double %32 to float
  %34 = getelementptr inbounds float, float* %1, i64 2
  store float %33, float* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocLabV2ToV4curves(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = alloca [3 x %struct._cms_curve_struct*], align 16
  %3 = bitcast [3 x %struct._cms_curve_struct*]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #4
  %4 = getelementptr inbounds [3 x %struct._cms_curve_struct*], [3 x %struct._cms_curve_struct*]* %2, i64 0, i64 0
  %5 = getelementptr inbounds [3 x %struct._cms_curve_struct*], [3 x %struct._cms_curve_struct*]* %2, i64 0, i64 1
  %6 = getelementptr inbounds [3 x %struct._cms_curve_struct*], [3 x %struct._cms_curve_struct*]* %2, i64 0, i64 2
  %7 = tail call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %0, i32 258, i16* null) #4
  store %struct._cms_curve_struct* %7, %struct._cms_curve_struct** %4, align 16
  %8 = tail call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %0, i32 258, i16* null) #4
  store %struct._cms_curve_struct* %8, %struct._cms_curve_struct** %5, align 8
  %9 = tail call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %0, i32 258, i16* null) #4
  store %struct._cms_curve_struct* %9, %struct._cms_curve_struct** %6, align 16
  %10 = icmp eq %struct._cms_curve_struct* %7, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %50, %26, %1
  call void @cmsFreeToneCurveTriple(%struct._cms_curve_struct** nonnull %4) #4
  br label %34

12:                                               ; preds = %1, %98
  %13 = phi %struct._cms_curve_struct* [ %108, %98 ], [ %7, %1 ]
  %14 = phi i64 [ %107, %98 ], [ 0, %1 ]
  %15 = trunc i64 %14 to i32
  %16 = mul nuw nsw i32 %15, 65535
  %17 = add nuw nsw i32 %16, 128
  %18 = lshr i32 %17, 8
  %19 = trunc i32 %18 to i16
  %20 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %13, i64 0, i32 6
  %21 = load i16*, i16** %20, align 8
  %22 = getelementptr inbounds i16, i16* %21, i64 %14
  store i16 %19, i16* %22, align 2
  %23 = or i64 %14, 1
  %24 = icmp eq i64 %23, 257
  %25 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %4, align 16
  br i1 %24, label %26, label %98

26:                                               ; preds = %12
  %27 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %25, i64 0, i32 6
  %28 = load i16*, i16** %27, align 8
  %29 = getelementptr inbounds i16, i16* %28, i64 257
  store i16 -1, i16* %29, align 2
  %30 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  %31 = icmp eq %struct._cms_curve_struct* %30, null
  br i1 %31, label %11, label %36

32:                                               ; preds = %70
  %33 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %74, i64 0, i32 2
  store i32 840971296, i32* %33, align 4
  br label %34

34:                                               ; preds = %70, %32, %11
  %35 = phi %struct._cmsStage_struct* [ null, %11 ], [ %74, %32 ], [ null, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #4
  ret %struct._cmsStage_struct* %35

36:                                               ; preds = %26, %87
  %37 = phi %struct._cms_curve_struct* [ %97, %87 ], [ %30, %26 ]
  %38 = phi i64 [ %96, %87 ], [ 0, %26 ]
  %39 = trunc i64 %38 to i32
  %40 = mul nuw nsw i32 %39, 65535
  %41 = add nuw nsw i32 %40, 128
  %42 = lshr i32 %41, 8
  %43 = trunc i32 %42 to i16
  %44 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %37, i64 0, i32 6
  %45 = load i16*, i16** %44, align 8
  %46 = getelementptr inbounds i16, i16* %45, i64 %38
  store i16 %43, i16* %46, align 2
  %47 = or i64 %38, 1
  %48 = icmp eq i64 %47, 257
  %49 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  br i1 %48, label %50, label %87

50:                                               ; preds = %36
  %51 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %49, i64 0, i32 6
  %52 = load i16*, i16** %51, align 8
  %53 = getelementptr inbounds i16, i16* %52, i64 257
  store i16 -1, i16* %53, align 2
  %54 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %6, align 16
  %55 = icmp eq %struct._cms_curve_struct* %54, null
  br i1 %55, label %11, label %56

56:                                               ; preds = %50, %76
  %57 = phi %struct._cms_curve_struct* [ %86, %76 ], [ %54, %50 ]
  %58 = phi i64 [ %85, %76 ], [ 0, %50 ]
  %59 = trunc i64 %58 to i32
  %60 = mul nuw nsw i32 %59, 65535
  %61 = add nuw nsw i32 %60, 128
  %62 = lshr i32 %61, 8
  %63 = trunc i32 %62 to i16
  %64 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %57, i64 0, i32 6
  %65 = load i16*, i16** %64, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 %58
  store i16 %63, i16* %66, align 2
  %67 = or i64 %58, 1
  %68 = icmp eq i64 %67, 257
  %69 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %6, align 16
  br i1 %68, label %70, label %76

70:                                               ; preds = %56
  %71 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %69, i64 0, i32 6
  %72 = load i16*, i16** %71, align 8
  %73 = getelementptr inbounds i16, i16* %72, i64 257
  store i16 -1, i16* %73, align 2
  %74 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %0, i32 3, %struct._cms_curve_struct** nonnull %4)
  call void @cmsFreeToneCurveTriple(%struct._cms_curve_struct** nonnull %4) #4
  %75 = icmp eq %struct._cmsStage_struct* %74, null
  br i1 %75, label %34, label %32

76:                                               ; preds = %56
  %77 = trunc i64 %67 to i32
  %78 = mul nuw nsw i32 %77, 65535
  %79 = add nuw nsw i32 %78, 128
  %80 = lshr i32 %79, 8
  %81 = trunc i32 %80 to i16
  %82 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %69, i64 0, i32 6
  %83 = load i16*, i16** %82, align 8
  %84 = getelementptr inbounds i16, i16* %83, i64 %67
  store i16 %81, i16* %84, align 2
  %85 = add nuw nsw i64 %58, 2
  %86 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %6, align 16
  br label %56

87:                                               ; preds = %36
  %88 = trunc i64 %47 to i32
  %89 = mul nuw nsw i32 %88, 65535
  %90 = add nuw nsw i32 %89, 128
  %91 = lshr i32 %90, 8
  %92 = trunc i32 %91 to i16
  %93 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %49, i64 0, i32 6
  %94 = load i16*, i16** %93, align 8
  %95 = getelementptr inbounds i16, i16* %94, i64 %47
  store i16 %92, i16* %95, align 2
  %96 = add nuw nsw i64 %38, 2
  %97 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  br label %36

98:                                               ; preds = %12
  %99 = trunc i64 %23 to i32
  %100 = mul nuw nsw i32 %99, 65535
  %101 = add nuw nsw i32 %100, 128
  %102 = lshr i32 %101, 8
  %103 = trunc i32 %102 to i16
  %104 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %25, i64 0, i32 6
  %105 = load i16*, i16** %104, align 8
  %106 = getelementptr inbounds i16, i16* %105, i64 %23
  store i16 %103, i16* %106, align 2
  %107 = add nuw nsw i64 %14, 2
  %108 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %4, align 16
  br label %12
}

declare %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct*, i32, i16*) local_unnamed_addr #2

declare void @cmsFreeToneCurveTriple(%struct._cms_curve_struct**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocLabV2ToV4(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %0, i32 3, i32 3, double* getelementptr inbounds ([9 x double], [9 x double]* @_cmsStageAllocLabV2ToV4.V2ToV4, i64 0, i64 0), double* null)
  %3 = icmp eq %struct._cmsStage_struct* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 2
  store i32 840971296, i32* %5, align 4
  br label %6

6:                                                ; preds = %1, %4
  ret %struct._cmsStage_struct* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocLabV4ToV2(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %0, i32 3, i32 3, double* getelementptr inbounds ([9 x double], [9 x double]* @_cmsStageAllocLabV4ToV2.V4ToV2, i64 0, i64 0), double* null)
  %3 = icmp eq %struct._cmsStage_struct* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 2
  store i32 874525216, i32* %5, align 4
  br label %6

6:                                                ; preds = %1, %4
  ret %struct._cmsStage_struct* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageNormalizeFromLabFloat(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %0, i32 3, i32 3, double* getelementptr inbounds ([9 x double], [9 x double]* @_cmsStageNormalizeFromLabFloat.a1, i64 0, i64 0), double* getelementptr inbounds ([3 x double], [3 x double]* @_cmsStageNormalizeFromLabFloat.o1, i64 0, i64 0))
  %3 = icmp eq %struct._cmsStage_struct* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 2
  store i32 1681026080, i32* %5, align 4
  br label %6

6:                                                ; preds = %1, %4
  ret %struct._cmsStage_struct* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageNormalizeFromXyzFloat(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %0, i32 3, i32 3, double* getelementptr inbounds ([9 x double], [9 x double]* @_cmsStageNormalizeFromXyzFloat.a1, i64 0, i64 0), double* null)
  %3 = icmp eq %struct._cmsStage_struct* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 2
  store i32 1681029152, i32* %5, align 4
  br label %6

6:                                                ; preds = %1, %4
  ret %struct._cmsStage_struct* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageNormalizeToLabFloat(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %0, i32 3, i32 3, double* getelementptr inbounds ([9 x double], [9 x double]* @_cmsStageNormalizeToLabFloat.a1, i64 0, i64 0), double* getelementptr inbounds ([3 x double], [3 x double]* @_cmsStageNormalizeToLabFloat.o1, i64 0, i64 0))
  %3 = icmp eq %struct._cmsStage_struct* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 2
  store i32 1815241760, i32* %5, align 4
  br label %6

6:                                                ; preds = %1, %4
  ret %struct._cmsStage_struct* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageNormalizeToXyzFloat(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %0, i32 3, i32 3, double* getelementptr inbounds ([9 x double], [9 x double]* @_cmsStageNormalizeToXyzFloat.a1, i64 0, i64 0), double* null)
  %3 = icmp eq %struct._cmsStage_struct* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 2
  store i32 2016568352, i32* %5, align 4
  br label %6

6:                                                ; preds = %1, %4
  ret %struct._cmsStage_struct* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageClipNegatives(%struct._cmsContext_struct*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %4 = icmp eq i8* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cmsStage_struct*
  %7 = bitcast i8* %3 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 1668050976, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 1668050976, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %3, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 20
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %3, i64 24
  %17 = bitcast i8* %16 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @Clipper, void (float*, float*, %struct._cmsStage_struct*)** %17, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  br label %19

19:                                               ; preds = %2, %5
  %20 = phi %struct._cmsStage_struct* [ %6, %5 ], [ null, %2 ]
  ret %struct._cmsStage_struct* %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @Clipper(float* nocapture readonly, float* nocapture, %struct._cmsStage_struct* nocapture readonly) #5 {
  %4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3, %7
  %8 = phi i64 [ %14, %7 ], [ 0, %3 ]
  %9 = getelementptr inbounds float, float* %0, i64 %8
  %10 = load float, float* %9, align 4
  %11 = fcmp olt float %10, 0.000000e+00
  %12 = select i1 %11, float 0.000000e+00, float %10
  %13 = getelementptr inbounds float, float* %1, i64 %8
  store float %12, float* %13, align 4
  %14 = add nuw nsw i64 %8, 1
  %15 = load i32, i32* %4, align 8
  %16 = zext i32 %15 to i64
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %7, label %18

18:                                               ; preds = %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocXYZ2Lab(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 64) #4
  %3 = icmp eq i8* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct._cmsStage_struct*
  %6 = bitcast i8* %2 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <4 x i32>*
  store <4 x i32> <i32 1815246880, i32 1815246880, i32 3, i32 3>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to void (float*, float*, %struct._cmsStage_struct*)**
  store void (float*, float*, %struct._cmsStage_struct*)* @EvaluateXYZ2Lab, void (float*, float*, %struct._cmsStage_struct*)** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false)
  br label %12

12:                                               ; preds = %1, %4
  %13 = phi %struct._cmsStage_struct* [ %5, %4 ], [ null, %1 ]
  ret %struct._cmsStage_struct* %13
}

; Function Attrs: nounwind ssp uwtable
define internal void @EvaluateXYZ2Lab(float* nocapture readonly, float* nocapture, %struct._cmsStage_struct* nocapture readnone) #0 {
  %4 = alloca %struct.cmsCIELab, align 8
  %5 = alloca %struct.cmsCIEXYZ, align 16
  %6 = bitcast %struct.cmsCIELab* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #4
  %7 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %4, i64 0, i32 0
  %8 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %4, i64 0, i32 1
  %9 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %4, i64 0, i32 2
  %10 = bitcast %struct.cmsCIEXYZ* %5 to i8*
  %11 = bitcast %struct.cmsCIELab* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #4
  %12 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %5, i64 0, i32 2
  %13 = bitcast float* %0 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = fmul <2 x double> %15, <double 0x3FFFFFE000000000, double 0x3FFFFFE000000000>
  %17 = bitcast %struct.cmsCIEXYZ* %5 to <2 x double>*
  store <2 x double> %16, <2 x double>* %17, align 16
  %18 = getelementptr inbounds float, float* %0, i64 2
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  %21 = fmul double %20, 0x3FFFFFE000000000
  store double %21, double* %12, align 16
  call void @cmsXYZ2Lab(%struct.cmsCIEXYZ* null, %struct.cmsCIELab* nonnull %4, %struct.cmsCIEXYZ* nonnull %5) #4
  %22 = load double, double* %7, align 8
  %23 = fdiv double %22, 1.000000e+02
  %24 = fptrunc double %23 to float
  store float %24, float* %1, align 4
  %25 = load double, double* %8, align 8
  %26 = fadd double %25, 1.280000e+02
  %27 = fdiv double %26, 2.550000e+02
  %28 = fptrunc double %27 to float
  %29 = getelementptr inbounds float, float* %1, i64 1
  store float %28, float* %29, align 4
  %30 = load double, double* %9, align 8
  %31 = fadd double %30, 1.280000e+02
  %32 = fdiv double %31, 2.550000e+02
  %33 = fptrunc double %32 to float
  %34 = getelementptr inbounds float, float* %1, i64 2
  store float %33, float* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @_cmsStageAllocLabPrelin(%struct._cmsContext_struct*) local_unnamed_addr #0 {
  %2 = alloca [3 x %struct._cms_curve_struct*], align 16
  %3 = alloca [1 x double], align 8
  %4 = bitcast [3 x %struct._cms_curve_struct*]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds [3 x %struct._cms_curve_struct*], [3 x %struct._cms_curve_struct*]* %2, i64 0, i64 0
  %6 = getelementptr inbounds [3 x %struct._cms_curve_struct*], [3 x %struct._cms_curve_struct*]* %2, i64 0, i64 1
  %7 = getelementptr inbounds [3 x %struct._cms_curve_struct*], [3 x %struct._cms_curve_struct*]* %2, i64 0, i64 2
  %8 = bitcast [1 x double]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  %9 = bitcast [1 x double]* %3 to i64*
  store i64 4612586738352862003, i64* %9, align 8
  %10 = tail call %struct._cms_curve_struct* @cmsBuildGamma(%struct._cmsContext_struct* %0, double 1.000000e+00) #4
  store %struct._cms_curve_struct* %10, %struct._cms_curve_struct** %5, align 16
  %11 = getelementptr inbounds [1 x double], [1 x double]* %3, i64 0, i64 0
  %12 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %0, i32 108, double* nonnull %11) #4
  store %struct._cms_curve_struct* %12, %struct._cms_curve_struct** %6, align 8
  %13 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %0, i32 108, double* nonnull %11) #4
  store %struct._cms_curve_struct* %13, %struct._cms_curve_struct** %7, align 16
  %14 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %0, i32 3, %struct._cms_curve_struct** nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret %struct._cmsStage_struct* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct*, i32, double*) local_unnamed_addr #2

declare void @_cmsFree(%struct._cmsContext_struct*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsStageInputChannels(%struct._cmsStage_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsStageOutputChannels(%struct._cmsStage_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsStageType(%struct._cmsStage_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @cmsStageData(%struct._cmsStage_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageNext(%struct._cmsStage_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 9
  %3 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %2, align 8
  ret %struct._cmsStage_struct* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct*) local_unnamed_addr #0 {
  %2 = icmp eq %struct._cmsStage_struct* %0, null
  br i1 %2, label %53, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 0
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 5
  %13 = bitcast void (float*, float*, %struct._cmsStage_struct*)** %12 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 7
  %16 = bitcast void (%struct._cmsStage_struct*)** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %5, i32 64) #4
  %19 = icmp eq i8* %18, null
  br i1 %19, label %53, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 6
  %22 = bitcast i8* %18 to %struct._cmsStage_struct*
  %23 = bitcast i8* %18 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %5, %struct._cmsContext_struct** %23, align 8
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %7, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %7, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %18, i64 16
  %29 = bitcast i8* %28 to i32*
  store i32 %9, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %18, i64 20
  %31 = bitcast i8* %30 to i32*
  store i32 %11, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %18, i64 24
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %18, i64 40
  %35 = bitcast i8* %34 to i64*
  store i64 %17, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %18, i64 48
  %37 = bitcast i8* %36 to i8**
  store i8* null, i8** %37, align 8
  %38 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %27, align 4
  %40 = load i8* (%struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)** %21, align 8
  %41 = icmp eq i8* (%struct._cmsStage_struct*)* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %20
  %43 = tail call i8* %40(%struct._cmsStage_struct* nonnull %0) #4
  store i8* %43, i8** %37, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = bitcast i8* %34 to void (%struct._cmsStage_struct*)**
  %47 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %46, align 8
  %48 = icmp eq void (%struct._cmsStage_struct*)* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  tail call void %47(%struct._cmsStage_struct* nonnull %22) #4
  br label %50

50:                                               ; preds = %45, %49
  %51 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %23, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %51, i8* nonnull %18) #4
  br label %53

52:                                               ; preds = %20
  store i8* null, i8** %37, align 8
  br label %53

53:                                               ; preds = %3, %52, %42, %1, %50
  %54 = phi %struct._cmsStage_struct* [ null, %50 ], [ null, %1 ], [ %22, %42 ], [ %22, %52 ], [ null, %3 ]
  ret %struct._cmsStage_struct* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct*, i32, i32) local_unnamed_addr #0 {
  %4 = or i32 %2, %1
  %5 = icmp ugt i32 %4, 15
  br i1 %5, label %55, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 72) #4
  %8 = bitcast i8* %7 to %struct._cmsPipeline_struct*
  %9 = icmp eq i8* %7, null
  br i1 %9, label %55, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 %2, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %7, i64 24
  %16 = bitcast i8* %15 to void (i16*, i16*, i8*)**
  store void (i16*, i16*, i8*)* @_LUTeval16, void (i16*, i16*, i8*)** %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 32
  %18 = bitcast i8* %17 to void (float*, float*, i8*)**
  store void (float*, float*, i8*)* @_LUTevalFloat, void (float*, float*, i8*)** %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 40
  %20 = getelementptr inbounds i8, i8* %7, i64 16
  %21 = bitcast i8* %20 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 56
  %23 = bitcast i8* %22 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %23, align 8
  %24 = bitcast i8* %7 to %struct._cmsStage_struct**
  %25 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %24, align 8
  %26 = icmp eq %struct._cmsStage_struct* %25, null
  br i1 %26, label %55, label %27

27:                                               ; preds = %10, %27
  %28 = phi %struct._cmsStage_struct* [ %30, %27 ], [ %25, %10 ]
  %29 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %28, i64 0, i32 9
  %30 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %29, align 8
  %31 = icmp eq %struct._cmsStage_struct* %30, null
  br i1 %31, label %32, label %27

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %25, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %12, align 8
  %35 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %28, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %14, align 4
  %37 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %25, i64 0, i32 9
  %38 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %37, align 8
  %39 = icmp eq %struct._cmsStage_struct* %38, null
  br i1 %39, label %55, label %40

40:                                               ; preds = %32, %48
  %41 = phi %struct._cmsStage_struct* [ %52, %48 ], [ %38, %32 ]
  %42 = phi %struct._cmsStage_struct* [ %50, %48 ], [ %25, %32 ]
  %43 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %41, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %42, i64 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %42, i64 0, i32 9
  %50 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %49, align 8
  %51 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %41, i64 0, i32 9
  %52 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %51, align 8
  %53 = icmp eq %struct._cmsStage_struct* %52, null
  br i1 %53, label %55, label %40

54:                                               ; preds = %40
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* nonnull %7) #4
  br label %55

55:                                               ; preds = %48, %32, %10, %6, %3, %54
  %56 = phi %struct._cmsPipeline_struct* [ null, %54 ], [ null, %3 ], [ null, %6 ], [ %8, %10 ], [ %8, %32 ], [ %8, %48 ]
  ret %struct._cmsPipeline_struct* %56
}

; Function Attrs: nounwind ssp uwtable
define internal void @_LUTeval16(i16* nocapture readonly, i16* nocapture, i8* nocapture readonly) #0 {
  %4 = alloca [2 x [128 x float]], align 16
  %5 = bitcast [2 x [128 x float]]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 1024, i1 false)
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %67, label %10

10:                                               ; preds = %3
  %11 = zext i32 %8 to i64
  %12 = icmp ult i32 %8, 4
  br i1 %12, label %56, label %13

13:                                               ; preds = %10
  %14 = and i64 %11, 4294967292
  %15 = add nsw i64 %14, -4
  %16 = lshr exact i64 %15, 2
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %15, 0
  br i1 %19, label %43, label %20

20:                                               ; preds = %13
  %21 = sub nuw nsw i64 %17, %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %40, %22 ]
  %24 = phi i64 [ %21, %20 ], [ %41, %22 ]
  %25 = getelementptr inbounds i16, i16* %0, i64 %23
  %26 = bitcast i16* %25 to <4 x i16>*
  %27 = load <4 x i16>, <4 x i16>* %26, align 2
  %28 = uitofp <4 x i16> %27 to <4 x float>
  %29 = fdiv <4 x float> %28, <float 6.553500e+04, float 6.553500e+04, float 6.553500e+04, float 6.553500e+04>
  %30 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 0, i64 %23
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %29, <4 x float>* %31, align 16
  %32 = or i64 %23, 4
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = bitcast i16* %33 to <4 x i16>*
  %35 = load <4 x i16>, <4 x i16>* %34, align 2
  %36 = uitofp <4 x i16> %35 to <4 x float>
  %37 = fdiv <4 x float> %36, <float 6.553500e+04, float 6.553500e+04, float 6.553500e+04, float 6.553500e+04>
  %38 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 0, i64 %32
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 16
  %40 = add i64 %23, 8
  %41 = add i64 %24, -2
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %22, !llvm.loop !24

43:                                               ; preds = %22, %13
  %44 = phi i64 [ 0, %13 ], [ %40, %22 ]
  %45 = icmp eq i64 %18, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds i16, i16* %0, i64 %44
  %48 = bitcast i16* %47 to <4 x i16>*
  %49 = load <4 x i16>, <4 x i16>* %48, align 2
  %50 = uitofp <4 x i16> %49 to <4 x float>
  %51 = fdiv <4 x float> %50, <float 6.553500e+04, float 6.553500e+04, float 6.553500e+04, float 6.553500e+04>
  %52 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 0, i64 %44
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %51, <4 x float>* %53, align 16
  br label %54

54:                                               ; preds = %43, %46
  %55 = icmp eq i64 %14, %11
  br i1 %55, label %67, label %56

56:                                               ; preds = %54, %10
  %57 = phi i64 [ 0, %10 ], [ %14, %54 ]
  br label %58

58:                                               ; preds = %56, %58
  %59 = phi i64 [ %65, %58 ], [ %57, %56 ]
  %60 = getelementptr inbounds i16, i16* %0, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = uitofp i16 %61 to float
  %63 = fdiv float %62, 6.553500e+04
  %64 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 0, i64 %59
  store float %63, float* %64, align 4
  %65 = add nuw nsw i64 %59, 1
  %66 = icmp eq i64 %65, %11
  br i1 %66, label %67, label %58, !llvm.loop !25

67:                                               ; preds = %58, %54, %3
  %68 = bitcast i8* %2 to %struct._cmsStage_struct**
  %69 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %68, align 8
  %70 = icmp eq %struct._cmsStage_struct* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %67, %71
  %72 = phi %struct._cmsStage_struct* [ %82, %71 ], [ %69, %67 ]
  %73 = phi i32 [ %74, %71 ], [ 0, %67 ]
  %74 = xor i32 %73, 1
  %75 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %72, i64 0, i32 5
  %76 = load void (float*, float*, %struct._cmsStage_struct*)*, void (float*, float*, %struct._cmsStage_struct*)** %75, align 8
  %77 = sext i32 %73 to i64
  %78 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 %77, i64 0
  %79 = sext i32 %74 to i64
  %80 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 %79, i64 0
  call void %76(float* %78, float* %80, %struct._cmsStage_struct* nonnull %72) #4
  %81 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %72, i64 0, i32 9
  %82 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %81, align 8
  %83 = icmp eq %struct._cmsStage_struct* %82, null
  br i1 %83, label %84, label %71

84:                                               ; preds = %71
  %85 = sext i32 %74 to i64
  br label %86

86:                                               ; preds = %67, %84
  %87 = phi i64 [ %85, %84 ], [ 0, %67 ]
  %88 = getelementptr inbounds i8, i8* %2, i64 12
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %115, label %92

92:                                               ; preds = %86
  %93 = zext i32 %90 to i64
  br label %94

94:                                               ; preds = %110, %92
  %95 = phi i64 [ 0, %92 ], [ %113, %110 ]
  %96 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 %87, i64 %95
  %97 = load float, float* %96, align 4
  %98 = fpext float %97 to double
  %99 = fmul double %98, 6.553500e+04
  %100 = fadd double %99, 5.000000e-01
  %101 = fcmp ugt double %100, 0.000000e+00
  br i1 %101, label %102, label %110

102:                                              ; preds = %94
  %103 = fcmp ult double %100, 6.553500e+04
  br i1 %103, label %104, label %110

104:                                              ; preds = %102
  %105 = fadd double %100, -3.276700e+04
  %106 = call double @llvm.floor.f64(double %105) #4
  %107 = fptosi double %106 to i32
  %108 = trunc i32 %107 to i16
  %109 = add i16 %108, 32767
  br label %110

110:                                              ; preds = %104, %102, %94
  %111 = phi i16 [ %109, %104 ], [ 0, %94 ], [ -1, %102 ]
  %112 = getelementptr inbounds i16, i16* %1, i64 %95
  store i16 %111, i16* %112, align 2
  %113 = add nuw nsw i64 %95, 1
  %114 = icmp eq i64 %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %110, %86
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_LUTevalFloat(float* nocapture readonly, float* nocapture, i8* nocapture readonly) #0 {
  %4 = alloca [2 x [128 x float]], align 16
  %5 = bitcast [2 x [128 x float]]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 1024, i1 false)
  %6 = bitcast float* %0 to i8*
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = shl nuw nsw i64 %10, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 4 %6, i64 %11, i1 false)
  %12 = bitcast i8* %2 to %struct._cmsStage_struct**
  %13 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %12, align 8
  %14 = icmp eq %struct._cmsStage_struct* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %3, %15
  %16 = phi %struct._cmsStage_struct* [ %26, %15 ], [ %13, %3 ]
  %17 = phi i32 [ %18, %15 ], [ 0, %3 ]
  %18 = xor i32 %17, 1
  %19 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %16, i64 0, i32 5
  %20 = load void (float*, float*, %struct._cmsStage_struct*)*, void (float*, float*, %struct._cmsStage_struct*)** %19, align 8
  %21 = sext i32 %17 to i64
  %22 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 %21, i64 0
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 %23, i64 0
  call void %20(float* %22, float* %24, %struct._cmsStage_struct* nonnull %16) #4
  %25 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %16, i64 0, i32 9
  %26 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %25, align 8
  %27 = icmp eq %struct._cmsStage_struct* %26, null
  br i1 %27, label %28, label %15

28:                                               ; preds = %15
  %29 = sext i32 %18 to i64
  br label %30

30:                                               ; preds = %3, %28
  %31 = phi i64 [ %29, %28 ], [ 0, %3 ]
  %32 = bitcast float* %1 to i8*
  %33 = getelementptr inbounds [2 x [128 x float]], [2 x [128 x float]]* %4, i64 0, i64 %31, i64 0
  %34 = bitcast float* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %2, i64 12
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 16 %34, i64 %39, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._cmsContext_struct* @cmsGetPipelineContextID(%struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %2, align 8
  ret %struct._cmsContext_struct* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsPipelineFree(%struct._cmsPipeline_struct*) local_unnamed_addr #0 {
  %2 = icmp eq %struct._cmsPipeline_struct* %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %5 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %6 = icmp eq %struct._cmsStage_struct* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %3, %16
  %8 = phi %struct._cmsStage_struct* [ %11, %16 ], [ %5, %3 ]
  %9 = bitcast %struct._cmsStage_struct* %8 to i8*
  %10 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %8, i64 0, i32 9
  %11 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %10, align 8
  %12 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %8, i64 0, i32 7
  %13 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %12, align 8
  %14 = icmp eq void (%struct._cmsStage_struct*)* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  tail call void %13(%struct._cmsStage_struct* nonnull %8) #4
  br label %16

16:                                               ; preds = %7, %15
  %17 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %8, i64 0, i32 0
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %17, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %18, i8* %9) #4
  %19 = icmp eq %struct._cmsStage_struct* %11, null
  br i1 %19, label %20, label %7

20:                                               ; preds = %16, %3
  %21 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 6
  %22 = load void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)** %21, align 8
  %23 = icmp eq void (%struct._cmsContext_struct*, i8*)* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %26 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %25, align 8
  %27 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 3
  %28 = load i8*, i8** %27, align 8
  tail call void %22(%struct._cmsContext_struct* %26, i8* %28) #4
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %31 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %30, align 8
  %32 = bitcast %struct._cmsPipeline_struct* %0 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %31, i8* nonnull %32) #4
  br label %33

33:                                               ; preds = %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsPipelineEval16(i16*, i16*, %struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %2, i64 0, i32 4
  %5 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %4, align 8
  %6 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %2, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  tail call void %5(i16* %0, i16* %1, i8* %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsPipelineEvalFloat(float*, float*, %struct._cmsPipeline_struct*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %2, i64 0, i32 5
  %5 = load void (float*, float*, i8*)*, void (float*, float*, i8*)** %4, align 8
  %6 = bitcast %struct._cmsPipeline_struct* %2 to i8*
  tail call void %5(float* %0, float* %1, i8* %6) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct._cmsPipeline_struct* %0, null
  br i1 %2, label %221, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, %7
  %11 = icmp ugt i32 %10, 15
  br i1 %11, label %221, label %12

12:                                               ; preds = %3
  %13 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %5, i32 72) #4
  %14 = bitcast i8* %13 to %struct._cmsPipeline_struct*
  %15 = icmp eq i8* %13, null
  br i1 %15, label %221, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 %7, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %9, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %13, i64 24
  %22 = bitcast i8* %21 to void (i16*, i16*, i8*)**
  store void (i16*, i16*, i8*)* @_LUTeval16, void (i16*, i16*, i8*)** %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 32
  %24 = bitcast i8* %23 to void (float*, float*, i8*)**
  store void (float*, float*, i8*)* @_LUTevalFloat, void (float*, float*, i8*)** %24, align 8
  %25 = getelementptr inbounds i8, i8* %13, i64 40
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #4
  store i8* %13, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %13, i64 56
  %29 = bitcast i8* %28 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %5, %struct._cmsContext_struct** %29, align 8
  %30 = bitcast i8* %13 to %struct._cmsStage_struct**
  %31 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %30, align 8
  %32 = icmp eq %struct._cmsStage_struct* %31, null
  br i1 %32, label %61, label %33

33:                                               ; preds = %16, %33
  %34 = phi %struct._cmsStage_struct* [ %36, %33 ], [ %31, %16 ]
  %35 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %34, i64 0, i32 9
  %36 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %35, align 8
  %37 = icmp eq %struct._cmsStage_struct* %36, null
  br i1 %37, label %38, label %33

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %18, align 8
  %41 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %34, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %20, align 4
  %43 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 9
  %44 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %43, align 8
  %45 = icmp eq %struct._cmsStage_struct* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %38, %54
  %47 = phi %struct._cmsStage_struct* [ %58, %54 ], [ %44, %38 ]
  %48 = phi %struct._cmsStage_struct* [ %56, %54 ], [ %31, %38 ]
  %49 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %47, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %48, i64 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %48, i64 0, i32 9
  %56 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %55, align 8
  %57 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %47, i64 0, i32 9
  %58 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %57, align 8
  %59 = icmp eq %struct._cmsStage_struct* %58, null
  br i1 %59, label %61, label %46

60:                                               ; preds = %46
  tail call void @_cmsFree(%struct._cmsContext_struct* %5, i8* nonnull %13) #4
  br label %221

61:                                               ; preds = %54, %38, %16
  %62 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %63 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %62, align 8
  %64 = icmp eq %struct._cmsStage_struct* %63, null
  br i1 %64, label %160, label %65

65:                                               ; preds = %61
  %66 = bitcast i8* %13 to i8**
  br label %67

67:                                               ; preds = %65, %156
  %68 = phi %struct._cmsStage_struct* [ %63, %65 ], [ %158, %156 ]
  %69 = phi i32 [ 1, %65 ], [ 0, %156 ]
  %70 = phi %struct._cmsStage_struct* [ null, %65 ], [ %89, %156 ]
  %71 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 0
  %72 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %71, align 8
  %73 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 5
  %80 = bitcast void (float*, float*, %struct._cmsStage_struct*)** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8
  %82 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 7
  %83 = bitcast void (%struct._cmsStage_struct*)** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %72, i32 64) #4
  %86 = icmp eq i8* %85, null
  br i1 %86, label %122, label %87

87:                                               ; preds = %67
  %88 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 6
  %89 = bitcast i8* %85 to %struct._cmsStage_struct*
  %90 = bitcast i8* %85 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %72, %struct._cmsContext_struct** %90, align 8
  %91 = getelementptr inbounds i8, i8* %85, i64 8
  %92 = bitcast i8* %91 to i32*
  store i32 %74, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %85, i64 12
  %94 = bitcast i8* %93 to i32*
  store i32 %74, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %85, i64 16
  %96 = bitcast i8* %95 to i32*
  store i32 %76, i32* %96, align 8
  %97 = getelementptr inbounds i8, i8* %85, i64 20
  %98 = bitcast i8* %97 to i32*
  store i32 %78, i32* %98, align 4
  %99 = getelementptr inbounds i8, i8* %85, i64 24
  %100 = bitcast i8* %99 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %100, align 8
  %101 = getelementptr inbounds i8, i8* %85, i64 40
  %102 = bitcast i8* %101 to i64*
  store i64 %84, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %85, i64 48
  %104 = bitcast i8* %103 to i8**
  store i8* null, i8** %104, align 8
  %105 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  store i32 %106, i32* %94, align 4
  %107 = load i8* (%struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)** %88, align 8
  %108 = icmp eq i8* (%struct._cmsStage_struct*)* %107, null
  br i1 %108, label %121, label %109

109:                                              ; preds = %87
  %110 = tail call i8* %107(%struct._cmsStage_struct* nonnull %68) #4
  store i8* %110, i8** %104, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %112, label %147

112:                                              ; preds = %109
  %113 = bitcast i8* %85 to %struct._cmsContext_struct**
  %114 = bitcast i8* %101 to void (%struct._cmsStage_struct*)**
  %115 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %114, align 8
  %116 = icmp eq void (%struct._cmsStage_struct*)* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %112
  %118 = bitcast i8* %85 to %struct._cmsStage_struct*
  tail call void %115(%struct._cmsStage_struct* nonnull %118) #4
  br label %119

119:                                              ; preds = %117, %112
  %120 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %113, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %120, i8* nonnull %85) #4
  br label %122

121:                                              ; preds = %87
  store i8* null, i8** %104, align 8
  br label %147

122:                                              ; preds = %67, %119
  %123 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %30, align 8
  %124 = icmp eq %struct._cmsStage_struct* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %122, %134
  %126 = phi %struct._cmsStage_struct* [ %129, %134 ], [ %123, %122 ]
  %127 = bitcast %struct._cmsStage_struct* %126 to i8*
  %128 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %126, i64 0, i32 9
  %129 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %128, align 8
  %130 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %126, i64 0, i32 7
  %131 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %130, align 8
  %132 = icmp eq void (%struct._cmsStage_struct*)* %131, null
  br i1 %132, label %134, label %133

133:                                              ; preds = %125
  tail call void %131(%struct._cmsStage_struct* nonnull %126) #4
  br label %134

134:                                              ; preds = %133, %125
  %135 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %126, i64 0, i32 0
  %136 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %135, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %136, i8* %127) #4
  %137 = icmp eq %struct._cmsStage_struct* %129, null
  br i1 %137, label %138, label %125

138:                                              ; preds = %134, %122
  %139 = bitcast i8* %25 to void (%struct._cmsContext_struct*, i8*)**
  %140 = load void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)** %139, align 8
  %141 = icmp eq void (%struct._cmsContext_struct*, i8*)* %140, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %138
  %143 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  %144 = load i8*, i8** %27, align 8
  tail call void %140(%struct._cmsContext_struct* %143, i8* %144) #4
  br label %145

145:                                              ; preds = %138, %142
  %146 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %146, i8* nonnull %13) #4
  br label %221

147:                                              ; preds = %121, %109
  %148 = icmp eq i32 %69, 0
  br i1 %148, label %149, label %154

149:                                              ; preds = %147
  %150 = icmp eq %struct._cmsStage_struct* %70, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %70, i64 0, i32 9
  %153 = bitcast %struct._cmsStage_struct** %152 to i8**
  br label %154

154:                                              ; preds = %147, %151
  %155 = phi i8** [ %153, %151 ], [ %66, %147 ]
  store i8* %85, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %149
  %157 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 9
  %158 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %157, align 8
  %159 = icmp eq %struct._cmsStage_struct* %158, null
  br i1 %159, label %160, label %67

160:                                              ; preds = %156, %61
  %161 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 4
  %162 = bitcast void (i16*, i16*, i8*)** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast i8* %21 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 5
  %166 = bitcast void (float*, float*, i8*)** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast i8* %23 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 7
  %170 = bitcast i8* (%struct._cmsContext_struct*, i8*)** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds i8, i8* %13, i64 48
  %173 = bitcast i8* %172 to i64*
  store i64 %171, i64* %173, align 8
  %174 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 6
  %175 = bitcast void (%struct._cmsContext_struct*, i8*)** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %25 to i64*
  store i64 %176, i64* %177, align 8
  %178 = icmp eq i64 %171, 0
  br i1 %178, label %185, label %179

179:                                              ; preds = %160
  %180 = inttoptr i64 %171 to i8* (%struct._cmsContext_struct*, i8*)*
  %181 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %182 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 3
  %183 = load i8*, i8** %182, align 8
  %184 = tail call i8* %180(%struct._cmsContext_struct* %181, i8* %183) #4
  store i8* %184, i8** %27, align 8
  br label %185

185:                                              ; preds = %160, %179
  %186 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 9
  %187 = load i32, i32* %186, align 8
  %188 = getelementptr inbounds i8, i8* %13, i64 64
  %189 = bitcast i8* %188 to i32*
  store i32 %187, i32* %189, align 8
  %190 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %30, align 8
  %191 = icmp eq %struct._cmsStage_struct* %190, null
  br i1 %191, label %221, label %192

192:                                              ; preds = %185, %192
  %193 = phi %struct._cmsStage_struct* [ %195, %192 ], [ %190, %185 ]
  %194 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %193, i64 0, i32 9
  %195 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %194, align 8
  %196 = icmp eq %struct._cmsStage_struct* %195, null
  br i1 %196, label %197, label %192

197:                                              ; preds = %192
  %198 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %190, i64 0, i32 3
  %199 = load i32, i32* %198, align 8
  store i32 %199, i32* %18, align 8
  %200 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %193, i64 0, i32 4
  %201 = load i32, i32* %200, align 4
  store i32 %201, i32* %20, align 4
  %202 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %190, i64 0, i32 9
  %203 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %202, align 8
  %204 = icmp eq %struct._cmsStage_struct* %203, null
  br i1 %204, label %221, label %205

205:                                              ; preds = %197, %213
  %206 = phi %struct._cmsStage_struct* [ %217, %213 ], [ %203, %197 ]
  %207 = phi %struct._cmsStage_struct* [ %215, %213 ], [ %190, %197 ]
  %208 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %206, i64 0, i32 3
  %209 = load i32, i32* %208, align 8
  %210 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %207, i64 0, i32 4
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %209, %211
  br i1 %212, label %213, label %219

213:                                              ; preds = %205
  %214 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %207, i64 0, i32 9
  %215 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %214, align 8
  %216 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %206, i64 0, i32 9
  %217 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %216, align 8
  %218 = icmp eq %struct._cmsStage_struct* %217, null
  br i1 %218, label %221, label %205

219:                                              ; preds = %205
  %220 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %220, i8* nonnull %13) #4
  br label %221

221:                                              ; preds = %213, %197, %185, %12, %3, %60, %1, %219, %145
  %222 = phi %struct._cmsPipeline_struct* [ null, %145 ], [ null, %219 ], [ null, %1 ], [ null, %60 ], [ null, %3 ], [ null, %12 ], [ %14, %185 ], [ %14, %197 ], [ %14, %213 ]
  ret %struct._cmsPipeline_struct* %222
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct*, i32, %struct._cmsStage_struct*) local_unnamed_addr #5 {
  %4 = icmp eq %struct._cmsPipeline_struct* %0, null
  %5 = icmp eq %struct._cmsStage_struct* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %61, label %7

7:                                                ; preds = %3
  switch i32 %1, label %61 [
    i32 0, label %8
    i32 1, label %14
  ]

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %10 = bitcast %struct._cmsPipeline_struct* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 9
  %13 = bitcast %struct._cmsStage_struct** %12 to i64*
  store i64 %11, i64* %13, align 8
  br label %28

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %16 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %15, align 8
  %17 = icmp eq %struct._cmsStage_struct* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %14, %18
  %19 = phi %struct._cmsStage_struct* [ %21, %18 ], [ %16, %14 ]
  %20 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %19, i64 0, i32 9
  %21 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %20, align 8
  %22 = icmp eq %struct._cmsStage_struct* %21, null
  br i1 %22, label %23, label %18

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %19, i64 0, i32 9
  store %struct._cmsStage_struct* %2, %struct._cmsStage_struct** %24, align 8
  %25 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %2, i64 0, i32 9
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %25, align 8
  %26 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %15, align 8
  %27 = icmp eq %struct._cmsStage_struct* %26, null
  br i1 %27, label %61, label %30

28:                                               ; preds = %14, %8
  %29 = phi %struct._cmsStage_struct** [ %9, %8 ], [ %15, %14 ]
  store %struct._cmsStage_struct* %2, %struct._cmsStage_struct** %29, align 8
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct._cmsStage_struct* [ %26, %23 ], [ %2, %28 ]
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi %struct._cmsStage_struct* [ %35, %32 ], [ %31, %30 ]
  %34 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %33, i64 0, i32 9
  %35 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %34, align 8
  %36 = icmp eq %struct._cmsStage_struct* %35, null
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %33, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 9
  %45 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %44, align 8
  %46 = icmp eq %struct._cmsStage_struct* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %37, %55
  %48 = phi %struct._cmsStage_struct* [ %59, %55 ], [ %45, %37 ]
  %49 = phi %struct._cmsStage_struct* [ %57, %55 ], [ %31, %37 ]
  %50 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %48, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %49, i64 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %49, i64 0, i32 9
  %57 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %56, align 8
  %58 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %48, i64 0, i32 9
  %59 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %58, align 8
  %60 = icmp eq %struct._cmsStage_struct* %59, null
  br i1 %60, label %61, label %47

61:                                               ; preds = %55, %47, %37, %23, %7, %3
  %62 = phi i32 [ 0, %3 ], [ 0, %7 ], [ 1, %23 ], [ 1, %37 ], [ 0, %47 ], [ 1, %55 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsPipelineUnlinkStage(%struct._cmsPipeline_struct* nocapture, i32, %struct._cmsStage_struct**) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %5 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %6 = icmp eq %struct._cmsStage_struct* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = icmp eq %struct._cmsStage_struct** %2, null
  br i1 %8, label %74, label %9

9:                                                ; preds = %7
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %2, align 8
  br label %74

10:                                               ; preds = %3
  switch i32 %1, label %29 [
    i32 0, label %11
    i32 1, label %16
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %5, i64 0, i32 9
  %13 = bitcast %struct._cmsStage_struct** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %struct._cmsPipeline_struct* %0 to i64*
  store i64 %14, i64* %15, align 8
  br label %26

16:                                               ; preds = %10, %16
  %17 = phi %struct._cmsStage_struct* [ %18, %16 ], [ null, %10 ]
  %18 = phi %struct._cmsStage_struct* [ %20, %16 ], [ %5, %10 ]
  %19 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %18, i64 0, i32 9
  %20 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %19, align 8
  %21 = icmp eq %struct._cmsStage_struct* %20, null
  br i1 %21, label %22, label %16

22:                                               ; preds = %16
  %23 = icmp eq %struct._cmsStage_struct* %17, null
  %24 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %17, i64 0, i32 9
  %25 = select i1 %23, %struct._cmsStage_struct** %4, %struct._cmsStage_struct** %24
  br label %26

26:                                               ; preds = %22, %11
  %27 = phi %struct._cmsStage_struct** [ %12, %11 ], [ %25, %22 ]
  %28 = phi %struct._cmsStage_struct* [ %5, %11 ], [ %18, %22 ]
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %27, align 8
  br label %29

29:                                               ; preds = %26, %10
  %30 = phi %struct._cmsStage_struct* [ null, %10 ], [ %28, %26 ]
  %31 = icmp eq %struct._cmsStage_struct** %2, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  store %struct._cmsStage_struct* %30, %struct._cmsStage_struct** %2, align 8
  br label %42

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %30, i64 0, i32 7
  %35 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %34, align 8
  %36 = icmp eq void (%struct._cmsStage_struct*)* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void %35(%struct._cmsStage_struct* %30) #4
  br label %38

38:                                               ; preds = %33, %37
  %39 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %30, i64 0, i32 0
  %40 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %39, align 8
  %41 = bitcast %struct._cmsStage_struct* %30 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %40, i8* %41) #4
  br label %42

42:                                               ; preds = %38, %32
  %43 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %44 = icmp eq %struct._cmsStage_struct* %43, null
  br i1 %44, label %74, label %45

45:                                               ; preds = %42, %45
  %46 = phi %struct._cmsStage_struct* [ %48, %45 ], [ %43, %42 ]
  %47 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %46, i64 0, i32 9
  %48 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %47, align 8
  %49 = icmp eq %struct._cmsStage_struct* %48, null
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %43, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %46, i64 0, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %43, i64 0, i32 9
  %58 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %57, align 8
  %59 = icmp eq %struct._cmsStage_struct* %58, null
  br i1 %59, label %74, label %60

60:                                               ; preds = %50, %68
  %61 = phi %struct._cmsStage_struct* [ %72, %68 ], [ %58, %50 ]
  %62 = phi %struct._cmsStage_struct* [ %70, %68 ], [ %43, %50 ]
  %63 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %61, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %62, i64 0, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %62, i64 0, i32 9
  %70 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %69, align 8
  %71 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %61, i64 0, i32 9
  %72 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %71, align 8
  %73 = icmp eq %struct._cmsStage_struct* %72, null
  br i1 %73, label %74, label %60

74:                                               ; preds = %68, %60, %50, %42, %9, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsPipelineCat(%struct._cmsPipeline_struct*, %struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %4 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %3, align 8
  %5 = icmp eq %struct._cmsStage_struct* %4, null
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %1, i64 0, i32 0
  %8 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %9 = icmp eq %struct._cmsStage_struct* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  store i32 %15, i32* %16, align 4
  br label %17

17:                                               ; preds = %10, %6, %2
  %18 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %1, i64 0, i32 0
  %19 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %18, align 8
  %20 = icmp eq %struct._cmsStage_struct* %19, null
  br i1 %20, label %130, label %21

21:                                               ; preds = %17
  %22 = icmp eq %struct._cmsPipeline_struct* %0, null
  %23 = bitcast %struct._cmsPipeline_struct* %0 to i8**
  %24 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  %25 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  br label %26

26:                                               ; preds = %21, %125
  %27 = phi %struct._cmsStage_struct* [ %19, %21 ], [ %128, %125 ]
  %28 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 0
  %29 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %28, align 8
  %30 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 5
  %37 = bitcast void (float*, float*, %struct._cmsStage_struct*)** %36 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 7
  %40 = bitcast void (%struct._cmsStage_struct*)** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %29, i32 64) #4
  %43 = icmp eq i8* %42, null
  br i1 %43, label %162, label %44

44:                                               ; preds = %26
  %45 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 6
  %46 = bitcast i8* %42 to %struct._cmsStage_struct*
  %47 = bitcast i8* %42 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %29, %struct._cmsContext_struct** %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 8
  %49 = bitcast i8* %48 to i32*
  store i32 %31, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %42, i64 12
  %51 = bitcast i8* %50 to i32*
  store i32 %31, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %42, i64 16
  %53 = bitcast i8* %52 to i32*
  store i32 %33, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %42, i64 20
  %55 = bitcast i8* %54 to i32*
  store i32 %35, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %42, i64 24
  %57 = bitcast i8* %56 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %57, align 8
  %58 = getelementptr inbounds i8, i8* %42, i64 40
  %59 = bitcast i8* %58 to i64*
  store i64 %41, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %42, i64 48
  %61 = bitcast i8* %60 to i8**
  store i8* null, i8** %61, align 8
  %62 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %51, align 4
  %64 = load i8* (%struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)** %45, align 8
  %65 = icmp eq i8* (%struct._cmsStage_struct*)* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %44
  %67 = tail call i8* %64(%struct._cmsStage_struct* nonnull %27) #4
  store i8* %67, i8** %61, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %79

69:                                               ; preds = %66
  %70 = bitcast i8* %42 to %struct._cmsContext_struct**
  %71 = bitcast i8* %58 to void (%struct._cmsStage_struct*)**
  %72 = load void (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)** %71, align 8
  %73 = icmp eq void (%struct._cmsStage_struct*)* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = bitcast i8* %42 to %struct._cmsStage_struct*
  tail call void %72(%struct._cmsStage_struct* nonnull %75) #4
  br label %76

76:                                               ; preds = %74, %69
  %77 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %70, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %77, i8* nonnull %42) #4
  br label %162

78:                                               ; preds = %44
  store i8* null, i8** %61, align 8
  br label %79

79:                                               ; preds = %66, %78
  br i1 %22, label %162, label %80

80:                                               ; preds = %79
  %81 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %3, align 8
  %82 = icmp eq %struct._cmsStage_struct* %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i8* %42, i8** %23, align 8
  br label %96

84:                                               ; preds = %80, %84
  %85 = phi %struct._cmsStage_struct* [ %87, %84 ], [ %81, %80 ]
  %86 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %85, i64 0, i32 9
  %87 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %86, align 8
  %88 = icmp eq %struct._cmsStage_struct* %87, null
  br i1 %88, label %89, label %84

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %85, i64 0, i32 9
  %91 = bitcast %struct._cmsStage_struct** %90 to i8**
  store i8* %42, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %42, i64 56
  %93 = bitcast i8* %92 to %struct._cmsStage_struct**
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %93, align 8
  %94 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %3, align 8
  %95 = icmp eq %struct._cmsStage_struct* %94, null
  br i1 %95, label %125, label %96

96:                                               ; preds = %89, %83
  %97 = phi %struct._cmsStage_struct* [ %94, %89 ], [ %46, %83 ]
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi %struct._cmsStage_struct* [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %99, i64 0, i32 9
  %101 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %100, align 8
  %102 = icmp eq %struct._cmsStage_struct* %101, null
  br i1 %102, label %103, label %98

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %97, i64 0, i32 3
  %105 = load i32, i32* %104, align 8
  store i32 %105, i32* %24, align 8
  %106 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %99, i64 0, i32 4
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %25, align 4
  %108 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %97, i64 0, i32 9
  %109 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %108, align 8
  %110 = icmp eq %struct._cmsStage_struct* %109, null
  br i1 %110, label %125, label %111

111:                                              ; preds = %103, %119
  %112 = phi %struct._cmsStage_struct* [ %123, %119 ], [ %109, %103 ]
  %113 = phi %struct._cmsStage_struct* [ %121, %119 ], [ %97, %103 ]
  %114 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %112, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %113, i64 0, i32 4
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %115, %117
  br i1 %118, label %119, label %162

119:                                              ; preds = %111
  %120 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %113, i64 0, i32 9
  %121 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %120, align 8
  %122 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %112, i64 0, i32 9
  %123 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %122, align 8
  %124 = icmp eq %struct._cmsStage_struct* %123, null
  br i1 %124, label %125, label %111

125:                                              ; preds = %119, %103, %89
  %126 = phi %struct._cmsStage_struct* [ %97, %103 ], [ null, %89 ], [ %97, %119 ]
  %127 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %27, i64 0, i32 9
  %128 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %127, align 8
  %129 = icmp eq %struct._cmsStage_struct* %128, null
  br i1 %129, label %130, label %26

130:                                              ; preds = %125, %17
  %131 = phi %struct._cmsStage_struct* [ %4, %17 ], [ %126, %125 ]
  %132 = icmp eq %struct._cmsStage_struct* %131, null
  br i1 %132, label %162, label %133

133:                                              ; preds = %130, %133
  %134 = phi %struct._cmsStage_struct* [ %136, %133 ], [ %131, %130 ]
  %135 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %134, i64 0, i32 9
  %136 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %135, align 8
  %137 = icmp eq %struct._cmsStage_struct* %136, null
  br i1 %137, label %138, label %133

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %131, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  store i32 %140, i32* %141, align 8
  %142 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %134, i64 0, i32 4
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %131, i64 0, i32 9
  %146 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %145, align 8
  %147 = icmp eq %struct._cmsStage_struct* %146, null
  br i1 %147, label %162, label %148

148:                                              ; preds = %138, %156
  %149 = phi %struct._cmsStage_struct* [ %160, %156 ], [ %146, %138 ]
  %150 = phi %struct._cmsStage_struct* [ %158, %156 ], [ %131, %138 ]
  %151 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %149, i64 0, i32 3
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %150, i64 0, i32 4
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %156, label %162

156:                                              ; preds = %148
  %157 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %150, i64 0, i32 9
  %158 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %157, align 8
  %159 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %149, i64 0, i32 9
  %160 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %159, align 8
  %161 = icmp eq %struct._cmsStage_struct* %160, null
  br i1 %161, label %162, label %148

162:                                              ; preds = %26, %79, %111, %156, %148, %76, %138, %130
  %163 = phi i32 [ 1, %130 ], [ 1, %138 ], [ 0, %76 ], [ 0, %148 ], [ 1, %156 ], [ 0, %111 ], [ 0, %79 ], [ 0, %26 ]
  ret i32 %163
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @cmsPipelineSetSaveAs8bitsFlag(%struct._cmsPipeline_struct* nocapture, i32) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  store i32 %1, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._cmsStage_struct* @cmsPipelineGetPtrToFirstStage(%struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %3 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %2, align 8
  ret %struct._cmsStage_struct* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._cmsStage_struct* @cmsPipelineGetPtrToLastStage(%struct._cmsPipeline_struct* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  br label %3

3:                                                ; preds = %3, %1
  %4 = phi %struct._cmsStage_struct** [ %2, %1 ], [ %8, %3 ]
  %5 = phi %struct._cmsStage_struct* [ null, %1 ], [ %6, %3 ]
  %6 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %7 = icmp eq %struct._cmsStage_struct* %6, null
  %8 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %6, i64 0, i32 9
  br i1 %7, label %9, label %3

9:                                                ; preds = %3
  ret %struct._cmsStage_struct* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nocapture, void (i16*, i16*, i8*)*, i8*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*) local_unnamed_addr #7 {
  %6 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 4
  store void (i16*, i16*, i8*)* %1, void (i16*, i16*, i8*)** %6, align 8
  %7 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 7
  store i8* (%struct._cmsContext_struct*, i8*)* %4, i8* (%struct._cmsContext_struct*, i8*)** %7, align 8
  %8 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 6
  store void (%struct._cmsContext_struct*, i8*)* %3, void (%struct._cmsContext_struct*, i8*)** %8, align 8
  %9 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 3
  store i8* %2, i8** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsPipelineEvalReverseFloat(float* nocapture readonly, float* nocapture, float* readonly, %struct._cmsPipeline_struct*) local_unnamed_addr #0 {
  %5 = bitcast float* %2 to i8*
  %6 = alloca [4 x float], align 16
  %7 = alloca <4 x i32>, align 16
  %8 = bitcast <4 x i32>* %7 to [4 x float]*
  %9 = bitcast <4 x i32>* %7 to i8*
  %10 = alloca <4 x i32>, align 16
  %11 = bitcast <4 x i32>* %10 to [4 x float]*
  %12 = alloca [4 x float], align 16
  %13 = alloca %struct.cmsVEC3, align 8
  %14 = alloca %struct.cmsVEC3, align 16
  %15 = alloca %struct.cmsMAT3, align 8
  %16 = bitcast [4 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #4
  %17 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %18 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  %19 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  %20 = bitcast [4 x float]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %21 = bitcast <4 x i32>* %7 to float*
  %22 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 1
  %23 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 2
  %24 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 3
  %25 = bitcast <4 x i32>* %10 to i8*
  %26 = bitcast <4 x i32>* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #4
  %27 = bitcast <4 x i32>* %10 to float*
  %28 = bitcast [4 x float]* %12 to i8*
  %29 = bitcast <4 x i32>* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #4
  %30 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 0
  %31 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 1
  %32 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 2
  %33 = bitcast %struct.cmsVEC3* %13 to i8*
  %34 = bitcast [4 x float]* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #4
  %35 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %13, i64 0, i32 0, i64 0
  %36 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %13, i64 0, i32 0, i64 1
  %37 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %13, i64 0, i32 0, i64 2
  %38 = bitcast %struct.cmsVEC3* %14 to i8*
  %39 = bitcast %struct.cmsVEC3* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #4
  %40 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %14, i64 0, i32 0, i64 2
  %41 = bitcast %struct.cmsMAT3* %15 to i8*
  %42 = bitcast %struct.cmsVEC3* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %42, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %41) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -1, i64 72, i1 false)
  %43 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %3, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, -3
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %47, label %219

47:                                               ; preds = %4
  %48 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %3, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 3
  br i1 %50, label %51, label %219

51:                                               ; preds = %47
  %52 = icmp eq float* %2, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %9, i8* nonnull align 4 %5, i64 12, i1 false)
  br label %55

54:                                               ; preds = %51
  store float 0x3FD3333340000000, float* %23, align 8
  store float 0x3FD3333340000000, float* %22, align 4
  store float 0x3FD3333340000000, float* %21, align 16
  br label %55

55:                                               ; preds = %53, %54
  %56 = icmp eq i32 %44, 4
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  %58 = getelementptr inbounds float, float* %0, i64 3
  %59 = load float, float* %58, align 4
  br label %60

60:                                               ; preds = %55, %57
  %61 = phi float [ %59, %57 ], [ 0.000000e+00, %55 ]
  store float %61, float* %24, align 4
  %62 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %3, i64 0, i32 5
  %63 = bitcast %struct._cmsPipeline_struct* %3 to i8*
  %64 = getelementptr inbounds float, float* %0, i64 1
  %65 = getelementptr inbounds float, float* %0, i64 2
  %66 = bitcast float* %0 to <2 x float>*
  %67 = bitcast float* %64 to <2 x float>*
  %68 = bitcast float* %18 to <2 x float>*
  %69 = bitcast <4 x i32>* %10 to float*
  %70 = bitcast [4 x float]* %6 to <2 x float>*
  %71 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 0, i32 0, i64 0
  %72 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 1, i32 0, i64 0
  %73 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 2, i32 0, i64 0
  %74 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 1
  %75 = bitcast [4 x float]* %6 to <2 x float>*
  %76 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 0, i32 0, i64 1
  %77 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 1, i32 0, i64 1
  %78 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 2, i32 0, i64 1
  %79 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 2
  %80 = bitcast [4 x float]* %6 to <2 x float>*
  %81 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 0, i32 0, i64 2
  %82 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 1, i32 0, i64 2
  %83 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %15, i64 0, i32 0, i64 2, i32 0, i64 2
  %84 = bitcast %struct.cmsVEC3* %14 to <2 x double>*
  br label %85

85:                                               ; preds = %231, %60
  %86 = phi double [ 1.000000e+20, %60 ], [ %103, %231 ]
  %87 = phi i32 [ 0, %60 ], [ %232, %231 ]
  %88 = load void (float*, float*, i8*)*, void (float*, float*, i8*)** %62, align 8
  call void %88(float* nonnull %21, float* nonnull %17, i8* %63) #4
  %89 = load float, float* %0, align 4
  %90 = load float, float* %17, align 16
  %91 = fsub float %89, %90
  %92 = fmul float %91, %91
  %93 = fadd float %92, 0.000000e+00
  %94 = load <2 x float>, <2 x float>* %67, align 4
  %95 = load <2 x float>, <2 x float>* %68, align 4
  %96 = fsub <2 x float> %94, %95
  %97 = fmul <2 x float> %96, %96
  %98 = extractelement <2 x float> %97, i32 0
  %99 = fadd float %93, %98
  %100 = extractelement <2 x float> %97, i32 1
  %101 = fadd float %99, %100
  %102 = call float @sqrtf(float %101) #4
  %103 = fpext float %102 to double
  %104 = fcmp ugt double %86, %103
  br i1 %104, label %105, label %219

105:                                              ; preds = %85
  %106 = load i32, i32* %43, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %115, %108 ], [ 0, %105 ]
  %110 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 %109
  %111 = bitcast float* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds float, float* %1, i64 %109
  %114 = bitcast float* %113 to i32*
  store i32 %112, i32* %114, align 4
  %115 = add nuw nsw i64 %109, 1
  %116 = load i32, i32* %43, align 8
  %117 = zext i32 %116 to i64
  %118 = icmp ult i64 %115, %117
  br i1 %118, label %108, label %119

119:                                              ; preds = %108, %105
  %120 = fcmp ugt float %102, 0.000000e+00
  br i1 %120, label %121, label %219

121:                                              ; preds = %119
  %122 = load <4 x i32>, <4 x i32>* %7, align 16
  store <4 x i32> %122, <4 x i32>* %10, align 16
  %123 = load float, float* %69, align 16
  %124 = fpext float %123 to double
  %125 = fcmp olt double %124, 0x3FEFF7CED9100000
  %126 = select i1 %125, float 0x3F50624DE0000000, float 0xBF50624DE0000000
  %127 = fadd float %123, %126
  store float %127, float* %69, align 16
  %128 = load void (float*, float*, i8*)*, void (float*, float*, i8*)** %62, align 8
  call void %128(float* nonnull %27, float* nonnull %30, i8* %63) #4
  %129 = load float, float* %30, align 16
  %130 = load <2 x float>, <2 x float>* %70, align 16
  %131 = extractelement <2 x float> %130, i32 0
  %132 = fsub float %129, %131
  %133 = fdiv float %132, 0x3F50624DE0000000
  %134 = fpext float %133 to double
  store double %134, double* %71, align 8
  %135 = load float, float* %31, align 4
  %136 = extractelement <2 x float> %130, i32 1
  %137 = fsub float %135, %136
  %138 = fdiv float %137, 0x3F50624DE0000000
  %139 = fpext float %138 to double
  store double %139, double* %72, align 8
  %140 = load float, float* %32, align 8
  %141 = load float, float* %19, align 8
  %142 = fsub float %140, %141
  %143 = fdiv float %142, 0x3F50624DE0000000
  %144 = fpext float %143 to double
  store double %144, double* %73, align 8
  %145 = load <4 x i32>, <4 x i32>* %7, align 16
  store <4 x i32> %145, <4 x i32>* %10, align 16
  %146 = load float, float* %74, align 4
  %147 = fpext float %146 to double
  %148 = fcmp olt double %147, 0x3FEFF7CED9100000
  %149 = select i1 %148, float 0x3F50624DE0000000, float 0xBF50624DE0000000
  %150 = fadd float %146, %149
  store float %150, float* %74, align 4
  %151 = load void (float*, float*, i8*)*, void (float*, float*, i8*)** %62, align 8
  call void %151(float* nonnull %27, float* nonnull %30, i8* %63) #4
  %152 = load float, float* %30, align 16
  %153 = load <2 x float>, <2 x float>* %75, align 16
  %154 = extractelement <2 x float> %153, i32 0
  %155 = fsub float %152, %154
  %156 = fdiv float %155, 0x3F50624DE0000000
  %157 = fpext float %156 to double
  store double %157, double* %76, align 8
  %158 = load float, float* %31, align 4
  %159 = extractelement <2 x float> %153, i32 1
  %160 = fsub float %158, %159
  %161 = fdiv float %160, 0x3F50624DE0000000
  %162 = fpext float %161 to double
  store double %162, double* %77, align 8
  %163 = load float, float* %32, align 8
  %164 = load float, float* %19, align 8
  %165 = fsub float %163, %164
  %166 = fdiv float %165, 0x3F50624DE0000000
  %167 = fpext float %166 to double
  store double %167, double* %78, align 8
  %168 = load <4 x i32>, <4 x i32>* %7, align 16
  store <4 x i32> %168, <4 x i32>* %10, align 16
  %169 = load float, float* %79, align 8
  %170 = fpext float %169 to double
  %171 = fcmp olt double %170, 0x3FEFF7CED9100000
  %172 = select i1 %171, float 0x3F50624DE0000000, float 0xBF50624DE0000000
  %173 = fadd float %169, %172
  store float %173, float* %79, align 8
  %174 = load void (float*, float*, i8*)*, void (float*, float*, i8*)** %62, align 8
  call void %174(float* nonnull %27, float* nonnull %30, i8* %63) #4
  %175 = load float, float* %30, align 16
  %176 = load <2 x float>, <2 x float>* %80, align 16
  %177 = extractelement <2 x float> %176, i32 0
  %178 = fsub float %175, %177
  %179 = fdiv float %178, 0x3F50624DE0000000
  %180 = fpext float %179 to double
  store double %180, double* %81, align 8
  %181 = load float, float* %31, align 4
  %182 = extractelement <2 x float> %176, i32 1
  %183 = fsub float %181, %182
  %184 = fdiv float %183, 0x3F50624DE0000000
  %185 = fpext float %184 to double
  store double %185, double* %82, align 8
  %186 = load float, float* %32, align 8
  %187 = load float, float* %19, align 8
  %188 = fsub float %186, %187
  %189 = fdiv float %188, 0x3F50624DE0000000
  %190 = fpext float %189 to double
  store double %190, double* %83, align 8
  %191 = load <2 x float>, <2 x float>* %66, align 4
  %192 = fsub <2 x float> %176, %191
  %193 = fpext <2 x float> %192 to <2 x double>
  store <2 x double> %193, <2 x double>* %84, align 16
  %194 = load float, float* %65, align 4
  %195 = fsub float %187, %194
  %196 = fpext float %195 to double
  store double %196, double* %40, align 16
  %197 = call i32 @_cmsMAT3solve(%struct.cmsVEC3* nonnull %13, %struct.cmsMAT3* nonnull %15, %struct.cmsVEC3* nonnull %14) #4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %219, label %199

199:                                              ; preds = %121
  %200 = load double, double* %35, align 8
  %201 = fptrunc double %200 to float
  %202 = load float, float* %21, align 16
  %203 = fsub float %202, %201
  store float %203, float* %21, align 16
  %204 = load double, double* %36, align 8
  %205 = fptrunc double %204 to float
  %206 = load float, float* %22, align 4
  %207 = fsub float %206, %205
  store float %207, float* %22, align 4
  %208 = load double, double* %37, align 8
  %209 = fptrunc double %208 to float
  %210 = load float, float* %23, align 8
  %211 = fsub float %210, %209
  store float %211, float* %23, align 8
  %212 = fcmp olt float %203, 0.000000e+00
  br i1 %212, label %215, label %213

213:                                              ; preds = %199
  %214 = fcmp ogt float %203, 1.000000e+00
  br i1 %214, label %215, label %217

215:                                              ; preds = %213, %199
  %216 = phi float [ 0.000000e+00, %199 ], [ 1.000000e+00, %213 ]
  store float %216, float* %21, align 16
  br label %217

217:                                              ; preds = %215, %213
  %218 = fcmp olt float %207, 0.000000e+00
  br i1 %218, label %223, label %221

219:                                              ; preds = %85, %119, %121, %231, %4, %47
  %220 = phi i32 [ 0, %4 ], [ 0, %47 ], [ 1, %231 ], [ 1, %85 ], [ 1, %119 ], [ 0, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %41) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #4
  ret i32 %220

221:                                              ; preds = %217
  %222 = fcmp ogt float %207, 1.000000e+00
  br i1 %222, label %223, label %225

223:                                              ; preds = %217, %221
  %224 = phi float [ 1.000000e+00, %221 ], [ 0.000000e+00, %217 ]
  store float %224, float* %22, align 4
  br label %225

225:                                              ; preds = %223, %221
  %226 = fcmp olt float %211, 0.000000e+00
  br i1 %226, label %229, label %227

227:                                              ; preds = %225
  %228 = fcmp ogt float %211, 1.000000e+00
  br i1 %228, label %229, label %231

229:                                              ; preds = %225, %227
  %230 = phi float [ 1.000000e+00, %227 ], [ 0.000000e+00, %225 ]
  store float %230, float* %23, align 8
  br label %231

231:                                              ; preds = %229, %227
  %232 = add nuw nsw i32 %87, 1
  %233 = icmp eq i32 %232, 30
  br i1 %233, label %219, label %85
}

declare i32 @_cmsMAT3solve(%struct.cmsVEC3*, %struct.cmsMAT3*, %struct.cmsVEC3*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare float @cmsEvalToneCurveFloat(%struct._cms_curve_struct*, float) local_unnamed_addr #2

declare void @cmsFreeToneCurve(%struct._cms_curve_struct*) local_unnamed_addr #2

declare i8* @_cmsDupMem(%struct._cmsContext_struct*, i8*, i32) local_unnamed_addr #2

declare void @_cmsFreeInterpParams(%struct._cms_interp_struc*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #8

declare void @cmsLab2XYZ(%struct.cmsCIEXYZ*, %struct.cmsCIEXYZ*, %struct.cmsCIELab*) local_unnamed_addr #2

declare void @cmsXYZ2Lab(%struct.cmsCIEXYZ*, %struct.cmsCIELab*, %struct.cmsCIEXYZ*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !9, !7}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !9, !7}
