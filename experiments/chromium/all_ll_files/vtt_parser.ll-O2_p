; ModuleID = '../../third_party/blink/renderer/core/html/track/vtt/vtt_parser.cc'
source_filename = "../../third_party/blink/renderer/core/html/track/vtt/vtt_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.312", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.312" = type { %"class.base::RefCounted.313" }
%"class.base::RefCounted.313" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.578" }
%"struct.std::__1::atomic.578" = type { %"struct.std::__1::__atomic_base.579" }
%"struct.std::__1::__atomic_base.579" = type { %"struct.std::__1::__atomic_base.580" }
%"struct.std::__1::__atomic_base.580" = type { %"struct.std::__1::__cxx_atomic_impl.581" }
%"struct.std::__1::__cxx_atomic_impl.581" = type { %"struct.std::__1::__cxx_atomic_base_impl.582" }
%"struct.std::__1::__cxx_atomic_base_impl.582" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.97", i32, [4 x i8], %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.239", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.275", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__cxx_atomic_impl.136" }
%"struct.std::__1::__cxx_atomic_impl.136" = type { %"struct.std::__1::__cxx_atomic_base_impl.137" }
%"struct.std::__1::__cxx_atomic_base_impl.137" = type { i64 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist.172"* }
%"class.blink::Worklist.172" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::Worklist.179"* }
%"class.blink::Worklist.179" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.193", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.207", [4 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { i64 }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { float }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.216", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.225" }
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.239" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243" }
%"class.WTF::VectorBufferBase.243" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.256" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.158"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.165"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.172"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.912" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.274 }
%class.scoped_refptr.274 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.275" = type { %"struct.std::__1::__atomic_base.276" }
%"struct.std::__1::__atomic_base.276" = type { %"struct.std::__1::__cxx_atomic_impl.277" }
%"struct.std::__1::__cxx_atomic_impl.277" = type { %"struct.std::__1::__cxx_atomic_base_impl.278" }
%"struct.std::__1::__cxx_atomic_base_impl.278" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::QualifiedName>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::QualifiedName>::InstanceStorage" = type { [8 x i8] }
%"class.blink::VTTParser" = type { %"class.blink::Member", i32, [4 x i8], %"class.blink::BufferedLineReader", %"class.std::__1::unique_ptr", %"class.WTF::AtomicString", double, double, %"class.WTF::StringBuilder", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.37", %"class.blink::Member.39", %"class.blink::HeapVector", %"class.blink::HeapVector.496", i8, [7 x i8], %"class.blink::HeapHashMap.504" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::BufferedLineReader" = type { %"class.blink::SegmentedString", %"class.WTF::StringBuilder", i8, i8, [6 x i8] }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon.1, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon.1 = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.17", i32, %"class.WTF::Vector.23", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.28" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.13" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::KURL"* }
%"class.WTF::TextEncoding" = type { i8* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25" }
%"class.WTF::VectorBufferBase.25" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3, i32, i8, i8, [2 x i8] }>
%union.anon.3 = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5", [16 x i8] }
%"class.WTF::VectorBufferBase.5" = type { i8*, i32, i32 }
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::VTTRegion"* }
%"class.blink::VTTRegion" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", double, i32, %"class.blink::DoublePoint", %"class.blink::DoublePoint", i8, %"class.blink::Member.917", %"class.blink::Member.917", double, %"class.blink::HeapTaskRunnerTimer.919" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::DoublePoint" = type { double, double }
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::HTMLDivElement"* }
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.536" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.471", %"class.blink::Member.471" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.471", %"class.blink::Member.511", %"class.blink::Member.471", %"class.blink::Member.471", %"class.blink::Member.513" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.517", %"class.blink::Member", %"class.blink::Member.511", %"class.blink::Member.519", %"class.blink::Member.519", %"class.blink::Member.556", %"class.blink::Member.558", %"class.blink::Member.560", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.565", %"class.blink::HeapVector" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.523" }
%"class.blink::HeapHashMap.523" = type { %"class.WTF::HashMap.526" }
%"class.WTF::HashMap.526" = type { %"class.WTF::HashTable.527" }
%"class.WTF::HashTable.527" = type <{ %"struct.WTF::KeyValuePair.529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.529" = type { %"class.WTF::AtomicString", %"class.blink::Member.530" }
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.534", i32, %"class.blink::HeapVector.549" }
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.549" = type { %"class.WTF::Vector.552" }
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { %"class.blink::Member.534"*, i32, i32 }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.562" }
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::HeapHashMap.564"* }
%"class.blink::HeapHashMap.564" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.540", %"class.blink::Member.335", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.540" = type { %"class.WTF::SingleThreadedBitField.541" }
%"class.WTF::SingleThreadedBitField.541" = type { i32 }
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.542 }
%class.scoped_refptr.542 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.543", %"class.WTF::AtomicString", %"class.WTF::Vector.545" }
%"class.WTF::RefCounted.543" = type { %"class.base::RefCounted.544" }
%"class.base::RefCounted.544" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.329", [32 x i8] }
%"class.WTF::VectorBufferBase.329" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapTaskRunnerTimer.919" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.920", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.613, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.613 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.614" }>
%"class.base::RefCountedThreadSafe.614" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.578" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.615 }
%class.scoped_refptr.615 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.616", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.616" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.617" }
%"struct.std::__1::atomic.617" = type { %"struct.std::__1::__atomic_base.618" }
%"struct.std::__1::__atomic_base.618" = type { %"struct.std::__1::__atomic_base.619" }
%"struct.std::__1::__atomic_base.619" = type { %"struct.std::__1::__cxx_atomic_impl.620" }
%"struct.std::__1::__cxx_atomic_impl.620" = type { %"struct.std::__1::__cxx_atomic_base_impl.621" }
%"struct.std::__1::__cxx_atomic_base_impl.621" = type { i8 }
%"class.blink::WeakMember.920" = type { %"class.blink::MemberBase.38" }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::VTTParserClient"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.43" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.50", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.470, %"class.WTF::Vector.366", %"class.WTF::Vector.366", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::HeapHashSet.477", %"class.blink::Member", %"class.WTF::HashSet.357", %"class.WTF::TextPosition", %"class.blink::Member.484", %"class.blink::HeapVector.486", %"class.blink::Member.493" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.54", %"class.WTF::String", %"class.blink::HeapVector.56", %"class.blink::HeapVector.63", %"class.blink::HeapVector.71", %"class.WTF::HashMap", %"class.WTF::AtomicString", %"class.blink::WeakMember", i8, [7 x i8], %"class.blink::Member.82", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::Member.286", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.56" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.54"*, i32, i32 }
%"class.blink::HeapVector.63" = type { %"class.WTF::Vector.66" }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.69" = type opaque
%"class.blink::HeapVector.71" = type { %"class.WTF::Vector.74" }
%"class.WTF::Vector.74" = type { %"class.WTF::VectorBuffer.75" }
%"class.WTF::VectorBuffer.75" = type { %"class.WTF::VectorBufferBase.76" }
%"class.WTF::VectorBufferBase.76" = type { %"class.blink::Member.77"*, i32, i32 }
%"class.blink::Member.77" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.86, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.279", i32, [4 x i8] }>
%class.scoped_refptr.86 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.91" }
%"class.WTF::HashMap.91" = type { %"class.WTF::HashTable.92" }
%"class.WTF::HashTable.92" = type <{ %"struct.WTF::KeyValuePair.94"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.94" = type { %"class.blink::WeakMember.95", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::Document"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.283" }
%"class.WTF::HashTable.283" = type <{ %"class.blink::WeakMember.285"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.285" = type opaque
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.290", %"class.blink::HeapHashMap.290", %"class.blink::HeapHashMap.290", %"class.blink::HeapHashMap.290", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::HeapVector.297", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.371", %"class.blink::HeapVector.379", %"class.blink::HeapVector.387", %"class.blink::HeapVector.404", %"class.blink::HeapVector.412", %"class.blink::HeapVector.420", %"class.blink::HeapVector.428", %"class.WTF::Vector.435", i32, %"class.blink::Member.459" }
%"class.blink::HeapHashMap.290" = type { %"class.WTF::HashMap.293" }
%"class.WTF::HashMap.293" = type { %"class.WTF::HashTable.294" }
%"class.WTF::HashTable.294" = type <{ %"struct.WTF::KeyValuePair.296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.296" = type { %"class.WTF::AtomicString", %"class.blink::Member.1013" }
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::HeapVector.297"* }
%"class.blink::HeapVector.297" = type { %"class.WTF::Vector.300" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"class.blink::Member.303"*, i32, i32 }
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.307", i64, [4 x i32] }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.335", %"class.blink::Member.339" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.344", %"class.WTF::HashMap.344", %"class.WTF::HashMap.344", %"class.WTF::HashMap.349", %class.scoped_refptr.354, %class.scoped_refptr.365, %class.scoped_refptr.364, %"class.WTF::Vector.366", %"class.WTF::Vector.366", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.344" = type { %"class.WTF::HashTable.345" }
%"class.WTF::HashTable.345" = type <{ %"struct.WTF::KeyValuePair.348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.348" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1003 }
%class.scoped_refptr.1003 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.355", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.361", %"union.blink::InvalidationSet::Backing.362", %"union.blink::InvalidationSet::Backing.363", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.355" = type { %"class.base::RefCounted.356" }
%"class.base::RefCounted.356" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.361" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.362" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.363" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"struct.WTF::KeyValuePair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.353" = type opaque
%class.scoped_refptr.354 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.364, %class.scoped_refptr.364 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.355", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.361", %"union.blink::InvalidationSet::Backing.362", %"union.blink::InvalidationSet::Backing.363", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.365 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.364 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::HeapVector.371" = type { %"class.WTF::Vector.374" }
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { %"class.blink::Member.377"*, i32, i32 }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.335", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.379" = type { %"class.WTF::Vector.382" }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.blink::Member.385"*, i32, i32 }
%"class.blink::Member.385" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.335" }
%"class.blink::HeapVector.387" = type { %"class.WTF::Vector.390" }
%"class.WTF::Vector.390" = type { %"class.WTF::VectorBuffer.391" }
%"class.WTF::VectorBuffer.391" = type { %"class.WTF::VectorBufferBase.392" }
%"class.WTF::VectorBufferBase.392" = type { %"class.blink::Member.393"*, i32, i32 }
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.395", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.395" = type { %"class.WTF::Vector.398" }
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"class.blink::Member.401"*, i32, i32 }
%"class.blink::Member.401" = type opaque
%"class.blink::HeapVector.404" = type { %"class.WTF::Vector.407" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"class.blink::Member.410"*, i32, i32 }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.335" }
%"class.blink::HeapVector.412" = type { %"class.WTF::Vector.415" }
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"class.blink::Member.418"*, i32, i32 }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", i32, [4 x i8] }>
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector.420" = type { %"class.WTF::Vector.423" }
%"class.WTF::Vector.423" = type { %"class.WTF::VectorBuffer.424" }
%"class.WTF::VectorBuffer.424" = type { %"class.WTF::VectorBufferBase.425" }
%"class.WTF::VectorBufferBase.425" = type { %"class.blink::Member.426"*, i32, i32 }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008" }
%"class.blink::HeapVector.428" = type { %"class.WTF::Vector.431" }
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.307", i32, i32 }
%"class.WTF::Vector.435" = type { %"class.WTF::VectorBuffer.436" }
%"class.WTF::VectorBuffer.436" = type { %"class.WTF::VectorBufferBase.437" }
%"class.WTF::VectorBufferBase.437" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.438, i8, [7 x i8] }>
%class.scoped_refptr.438 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.439", %"class.WTF::Vector.441" }
%"class.WTF::RefCounted.439" = type { %"class.base::RefCounted.440" }
%"class.base::RefCounted.440" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.std::__1::unique_ptr.444"*, i32, i32 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.447", %"class.WTF::String" }
%"class.WTF::Vector.447" = type { %"class.WTF::VectorBuffer.448" }
%"class.WTF::VectorBuffer.448" = type { %"class.WTF::VectorBufferBase.449" }
%"class.WTF::VectorBufferBase.449" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.463", %"class.blink::HeapHashMap.463", %"class.blink::HeapHashMap.463", %"class.blink::HeapHashMap.463" }
%"class.blink::HeapHashMap.463" = type { %"class.WTF::HashMap.466" }
%"class.WTF::HashMap.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"struct.WTF::KeyValuePair.469"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.469" = type opaque
%class.scoped_refptr.470 = type { %"class.blink::MediaQuerySet"* }
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.475" }
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.477" = type { %"class.WTF::HashSet.480" }
%"class.WTF::HashSet.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"class.blink::WeakMember.483"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.483" = type { %"class.blink::MemberBase.512" }
%"class.WTF::HashSet.357" = type { %"class.WTF::HashTable.358" }
%"class.WTF::HashTable.358" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.470, %"class.blink::Member.46", %"class.blink::Member.473" }
%"class.blink::HeapVector.486" = type { %"class.WTF::Vector.489" }
%"class.WTF::Vector.489" = type { %"class.WTF::VectorBuffer.490" }
%"class.WTF::VectorBuffer.490" = type { %"class.WTF::VectorBufferBase.491" }
%"class.WTF::VectorBufferBase.491" = type { %"class.blink::Member.473"*, i32, i32 }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::HeapVector.496" = type { %"class.WTF::Vector.499" }
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.501" }
%"class.WTF::VectorBufferBase.501" = type { %"class.blink::Member.502"*, i32, i32 }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::TextTrackCue"* }
%"class.blink::TextTrackCue" = type <{ %"class.blink::EventTargetWithInlineData", %"class.WTF::AtomicString", double, double, %"class.blink::Member.985", i32, i8, [3 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.935" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.923" }
%"class.blink::HeapVector.923" = type { %"class.WTF::Vector.926" }
%"class.WTF::Vector.926" = type { %"class.WTF::VectorBuffer.927" }
%"class.WTF::VectorBuffer.927" = type { %"class.WTF::VectorBufferBase.928", [32 x i8] }
%"class.WTF::VectorBufferBase.928" = type { %"struct.std::__1::pair.929"*, i32, i32 }
%"struct.std::__1::pair.929" = type { %"class.WTF::AtomicString", %"class.blink::Member.930" }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::HeapVector.932"* }
%"class.blink::HeapVector.932" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.WTF::Vector.938"* }
%"class.WTF::Vector.938" = type opaque
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::TextTrack"* }
%"class.blink::TextTrack" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::TrackBase", %"class.blink::Member.952", %"class.blink::Member.952", %"class.blink::HeapVector", %"class.blink::Member.954", %"class.WTF::AtomicString", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.blink::TrackBase" = type { %"class.blink::Supplementable.942", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.950" }
%"class.blink::Supplementable.942" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.943" }
%"class.blink::HeapHashMap.943" = type { %"class.WTF::HashMap.946" }
%"class.WTF::HashMap.946" = type { %"class.WTF::HashTable.947" }
%"class.WTF::HashTable.947" = type <{ %"struct.WTF::KeyValuePair.949"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.949" = type opaque
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::HTMLMediaElement"* }
%"class.blink::HTMLMediaElement" = type opaque
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::TextTrackCueList"* }
%"class.blink::TextTrackCueList" = type opaque
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapHashMap.504" = type { %"class.WTF::HashMap.507" }
%"class.WTF::HashMap.507" = type { %"class.WTF::HashTable.508" }
%"class.WTF::HashTable.508" = type <{ %"struct.WTF::KeyValuePair.510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.510" = type { %"class.WTF::String", %"class.blink::Member.37" }
%"class.blink::VTTParserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.574", %"class.WTF::Vector.574", i8, i32, %"class.blink::Member.585", %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.591", %"class.blink::Member.593", %"class.blink::Member.595", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.597", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.603", %"class.blink::Member.605", %"class.blink::Member.46", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.608", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.549", %"class.blink::Member.534", %"class.blink::Member.623", %"class.blink::Member.534", %"class.blink::Member.534", %"class.blink::Member.534", %"class.blink::UserActionElementSet", %"class.blink::Member.632", double, double, i64, i64, %"class.blink::HeapHashSet.634", %"class.blink::HeapHashSet.641", i16, i8, %"class.blink::Member.648", %"class.blink::Member.650", %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::TextLinkColors", %"class.blink::Member.656", i8, [7 x i8], %"class.blink::HeapHashMap.658", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.534", %"class.WTF::Vector.665", %"class.blink::Member.670", %"class.blink::Member.672", i8, %"class.blink::Member.534", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.674", %"class.blink::HeapVector.676", %"class.std::__1::unique_ptr.684", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.690", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.703", %"class.WTF::Vector.705", i8, i8, %"class.std::__1::unique_ptr.710", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.549", %"class.blink::HeapVector.716", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.724", i8, i32, %"class.blink::Member.726", %"class.blink::Member.728", %"class.blink::Member.730", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.732", %"class.WTF::HashMap.734", %"class.blink::Member.739", %"class.blink::Member.741", %"class.blink::Member.743", %"class.blink::Member.745", %"class.blink::Member", %"class.blink::Member", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.747", i8, i32, %"class.blink::Member.754", %"class.blink::Member.756", i32, %"class.blink::Member.758", %"class.blink::Member.760", %"class.blink::Member.762", %"class.std::__1::unique_ptr.764", i64, %"class.std::__1::unique_ptr.770", i32, i32, %"class.blink::Member.776", %"class.blink::Member.778", %"class.blink::Member.780", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.782", %"class.WTF::Vector.784", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.789", %"class.blink::Member.796", %"class.std::__1::unique_ptr.798", %"class.blink::Member.804", i8, i8, %"class.WTF::String", %"class.blink::Member.806", i8, [7 x i8], %"class.blink::HeapHashMap.808", %"class.blink::HeapObserverSet", %"class.blink::Member.822", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.824", i32, i8, i8, %"class.blink::WeakMember.826", %"class.blink::Member.827" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.567" }
%"class.blink::HeapHashMap.567" = type { %"class.WTF::HashMap.570" }
%"class.WTF::HashMap.570" = type { %"class.WTF::HashTable.571" }
%"class.WTF::HashTable.571" = type <{ %"struct.WTF::KeyValuePair.573"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.573" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.574" = type { %"class.WTF::VectorBuffer.575" }
%"class.WTF::VectorBuffer.575" = type { %"class.WTF::VectorBufferBase.576" }
%"class.WTF::VectorBufferBase.576" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.577 }
%class.scoped_refptr.577 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.840", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.881", i32, i8, [3 x i8], %"class.blink::HeapVector.883", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.891", %"class.blink::Member.893", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.902", %"class.blink::Member.908", %"class.blink::Member.910", i8, [7 x i8] }>
%"class.blink::Supplementable.840" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.841" }
%"class.blink::HeapHashMap.841" = type { %"class.WTF::HashMap.844" }
%"class.WTF::HashMap.844" = type { %"class.WTF::HashTable.845" }
%"class.WTF::HashTable.845" = type <{ %"struct.WTF::KeyValuePair.847"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.847" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.856" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.848" }
%"class.blink::HeapObserverSet.848" = type { i32, [4 x i8], %"class.blink::HeapHashSet.849" }
%"class.blink::HeapHashSet.849" = type { %"class.WTF::HashSet.852" }
%"class.WTF::HashSet.852" = type { %"class.WTF::HashTable.853" }
%"class.WTF::HashTable.853" = type <{ %"class.blink::WeakMember.855"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.855" = type opaque
%"class.blink::Supplementable.856" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.857" }
%"class.blink::HeapHashMap.857" = type { %"class.WTF::HashMap.860" }
%"class.WTF::HashMap.860" = type { %"class.WTF::HashTable.861" }
%"class.WTF::HashTable.861" = type <{ %"struct.WTF::KeyValuePair.863"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.863" = type { i8*, %"class.blink::Member.999" }
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1001" }
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.864, %"class.std::__1::unique_ptr.865", %"class.std::__1::unique_ptr.865", %"class.std::__1::unique_ptr.871", %"class.std::__1::unique_ptr.871", %"class.blink::Member.587", i32, [4 x i8], %"class.WTF::HashSet.877", i32, i32 }
%class.scoped_refptr.864 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.883" = type { %"class.WTF::Vector.886" }
%"class.WTF::Vector.886" = type { %"class.WTF::VectorBuffer.887" }
%"class.WTF::VectorBuffer.887" = type { %"class.WTF::VectorBufferBase.888" }
%"class.WTF::VectorBufferBase.888" = type { %"class.blink::Member.889"*, i32, i32 }
%"class.blink::Member.889" = type opaque
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.895", i32, i32 }
%"class.blink::HeapHashMap.895" = type { %"class.WTF::HashMap.898" }
%"class.WTF::HashMap.898" = type { %"class.WTF::HashTable.899" }
%"class.WTF::HashTable.899" = type <{ %"struct.WTF::KeyValuePair.901"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.901" = type opaque
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.607 }
%class.scoped_refptr.607 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610" }
%"class.WTF::VectorBufferBase.610" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.86 }
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.625" }
%"class.blink::HeapHashMap.625" = type { %"class.WTF::HashMap.628" }
%"class.WTF::HashMap.628" = type { %"class.WTF::HashTable.629" }
%"class.WTF::HashTable.629" = type <{ %"struct.WTF::KeyValuePair.631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.631" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.634" = type { %"class.WTF::HashSet.637" }
%"class.WTF::HashSet.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ %"class.blink::WeakMember.640"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.640" = type opaque
%"class.blink::HeapHashSet.641" = type { %"class.WTF::HashSet.644" }
%"class.WTF::HashSet.644" = type { %"class.WTF::HashTable.645" }
%"class.WTF::HashTable.645" = type <{ %"class.blink::WeakMember.647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.647" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.658" = type { %"class.WTF::HashMap.661" }
%"class.WTF::HashMap.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"struct.WTF::KeyValuePair.664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.664" = type opaque
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.676" = type { %"class.WTF::Vector.679" }
%"class.WTF::Vector.679" = type { %"class.WTF::VectorBuffer.680" }
%"class.WTF::VectorBuffer.680" = type { %"class.WTF::VectorBufferBase.681" }
%"class.WTF::VectorBufferBase.681" = type { %"class.blink::Member.682"*, i32, i32 }
%"class.blink::Member.682" = type opaque
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.690" = type { %"class.WTF::HashSet.693" }
%"class.WTF::HashSet.693" = type { %"class.WTF::HashTable.694" }
%"class.WTF::HashTable.694" = type <{ %"class.blink::WeakMember.696"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.696" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.697", i32, [4 x i8] }>
%"class.WTF::Vector.697" = type { %"class.WTF::VectorBuffer.698" }
%"class.WTF::VectorBuffer.698" = type { %"class.WTF::VectorBufferBase.699" }
%"class.WTF::VectorBufferBase.699" = type { %"struct.std::__1::pair.700"*, i32, i32 }
%"struct.std::__1::pair.700" = type opaque
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.705" = type { %"class.WTF::VectorBuffer.706" }
%"class.WTF::VectorBuffer.706" = type { %"class.WTF::VectorBufferBase.707" }
%"class.WTF::VectorBufferBase.707" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.716" = type { %"class.WTF::Vector.719" }
%"class.WTF::Vector.719" = type { %"class.WTF::VectorBuffer.720" }
%"class.WTF::VectorBuffer.720" = type { %"class.WTF::VectorBufferBase.721" }
%"class.WTF::VectorBufferBase.721" = type { %"class.blink::Member.722"*, i32, i32 }
%"class.blink::Member.722" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member" }
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ %"struct.WTF::KeyValuePair.738"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.738" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.622", { i64, i64 } }
%"class.blink::WeakMember.622" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashSet.747" = type { %"class.WTF::HashSet.750" }
%"class.WTF::HashSet.750" = type { %"class.WTF::HashTable.751" }
%"class.WTF::HashTable.751" = type <{ %"class.blink::Member.753"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.753" = type opaque
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.784" = type { %"class.WTF::VectorBuffer.785" }
%"class.WTF::VectorBuffer.785" = type { %"class.WTF::VectorBufferBase.786" }
%"class.WTF::VectorBufferBase.786" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.789" = type { %"class.WTF::HashMap.792" }
%"class.WTF::HashMap.792" = type { %"class.WTF::HashTable.793" }
%"class.WTF::HashTable.793" = type <{ %"struct.WTF::KeyValuePair.795"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.795" = type opaque
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.808" = type { %"class.WTF::HashMap.811" }
%"class.WTF::HashMap.811" = type { %"class.WTF::HashTable.812" }
%"class.WTF::HashTable.812" = type <{ %"struct.WTF::KeyValuePair.814"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.814" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.815" }
%"class.blink::HeapHashSet.815" = type { %"class.WTF::HashSet.818" }
%"class.WTF::HashSet.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ %"class.blink::WeakMember.821"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.821" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member", %"class.blink::HeapHashSet.831", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.838", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.831" = type { %"class.WTF::HashSet.834" }
%"class.WTF::HashSet.834" = type { %"class.WTF::HashTable.835" }
%"class.WTF::HashTable.835" = type <{ %"class.blink::Member.837"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.837" = type opaque
%"class.blink::HeapTaskRunnerTimer.838" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.839", { i64, i64 } }
%"class.blink::WeakMember.839" = type { %"class.blink::MemberBase.825" }
%"class.blink::WeakMember.826" = type { %"class.blink::MemberBase.472" }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::VTTScanner" = type <{ %union.anon, %union.anon.0, i8, [7 x i8] }>
%union.anon = type { i8* }
%union.anon.0 = type { i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSImportRule" = type opaque
%"class.blink::VTTCue" = type <{ %"class.blink::TextTrackCue.base", [3 x i8], %"class.WTF::String", double, double, double, i32, i32, %"class.blink::Member.37", %"class.blink::Member.987", %"class.blink::Member.989", %"class.blink::Member.991", i8, [7 x i8] }>
%"class.blink::TextTrackCue.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.WTF::AtomicString", double, double, %"class.blink::Member.985", i32, i8 }>
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::DocumentFragment"* }
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::VTTCueBackgroundBox"* }
%"class.blink::VTTCueBackgroundBox" = type { %"class.blink::HTMLDivElement", %"class.blink::Member.985" }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::VTTCueBox"* }
%"class.blink::VTTCueBox" = type <{ %"class.blink::HTMLDivElement", float, [4 x i8] }>
%"class.blink::VTTTreeBuilder" = type { %"class.blink::VTTToken", %"class.blink::ContainerNode"*, %"class.WTF::Vector.327", %"class.blink::Document"*, %"class.blink::TextTrack"* }
%"class.blink::VTTToken" = type { i32, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.blink::VTTTokenizer" = type { %"class.blink::SegmentedString", %"class.blink::InputStreamPreprocessor" }
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::VTTTokenizer"*, i8, [7 x i8] }>
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.956 }
%class.scoped_refptr.956 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.957", %"class.WTF::String", %"class.std::__1::unique_ptr.959" }
%"class.WTF::RefCounted.957" = type { %"class.base::RefCounted.958" }
%"class.base::RefCounted.958" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.962", %"class.std::__1::unique_ptr.972", %"class.WTF::Vector.978", i8, i32 }
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.WTF::Vector.965"* }
%"class.WTF::Vector.965" = type { %"class.WTF::VectorBuffer.966" }
%"class.WTF::VectorBuffer.966" = type { %"class.WTF::VectorBufferBase.5" }
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.5", [32 x i8] }
%"class.blink::VTTElement" = type { %"class.blink::Element", %"class.blink::Member.985", i8, %"class.WTF::AtomicString" }
%"class.blink::ProcessingInstruction" = type { %"class.blink::CharacterData", %"class.blink::ResourceClient.base", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.995", %"class.blink::StyleEngineContext", i8, i8, i8, i8, %"class.blink::Member.997" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.993", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::StyleSheet"* }
%"class.blink::StyleEngineContext" = type { i8 }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::ProcessingInstruction::DetachableEventListener"* }
%"class.blink::ProcessingInstruction::DetachableEventListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1035", %"class.blink::FreeList", %"class.WTF::Vector.1040" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.1035" = type { %"class.WTF::VectorBuffer.1036" }
%"class.WTF::VectorBuffer.1036" = type { %"class.WTF::VectorBufferBase.1037" }
%"class.WTF::VectorBufferBase.1037" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.1040" = type { %"class.WTF::VectorBuffer.1041" }
%"class.WTF::VectorBuffer.1041" = type { %"class.WTF::VectorBufferBase.1042" }
%"class.WTF::VectorBufferBase.1042" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10", [16 x i8] }
%"class.WTF::VectorBufferBase.10" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1022 }
%union.anon.1022 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.1097" = type { i8 }

$_ZN5blink18BufferedLineReader6AppendERKN3WTF6StringE = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink10VTTElement18VoiceAttributeNameEv = comdat any

$_ZN5blink10VTTElement17LangAttributeNameEv = comdat any

$_ZN5blink10VTTElement11SetLanguageEN3WTF12AtomicStringE = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_9VTTRegionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_9VTTRegionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_6VTTCueEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12TextTrackCueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_10VTTElementEE4CallIJRNS_11VTTNodeTypeEPNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_21ProcessingInstructionEE4CallIJRNS_8DocumentERA10_KcN3WTF6StringEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9VTTRegionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr = comdat any

$_ZGVZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr = comdat any

$_ZZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr = comdat any

$_ZGVZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [36 x i8] c"Accessibility.VTTContainsStyleBlock\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"WEBVTT\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"-->\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"STYLE\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.5 = private unnamed_addr constant [7 x i8] c"REGION\00", align 1
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.6 = private unnamed_addr constant [10 x i8] c"timestamp\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.7 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase27is_web_vtt_regions_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr = linkonce_odr hidden global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 8
@_ZGVZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr = linkonce_odr hidden global i64 0, comdat, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.14 = private unnamed_addr constant [6 x i8] c"voice\00", align 1
@_ZZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr = linkonce_odr hidden global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 8
@_ZGVZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr = linkonce_odr hidden global i64 0, comdat, align 8
@.str.15 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"%02u:%02u:%02u.%03u\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleSheetContents]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleSheet>, WTF::VectorTraits<blink::Member<blink::CSSStyleSheet> > >]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.23 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_9VTTRegionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [378 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::VTTRegion> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::VTTRegion> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12TextTrackCueEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [165 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::TextTrackCue>, WTF::VectorTraits<blink::Member<blink::TextTrackCue> > >]\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink9VTTParserC1EPNS_15VTTParserClientERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::VTTParser"*, %"class.blink::VTTParserClient"*, %"class.blink::Document"*), void (%"class.blink::VTTParser"*, %"class.blink::VTTParserClient"*, %"class.blink::Document"*)* @_ZN5blink9VTTParserC2EPNS_15VTTParserClientERNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9VTTParser20ParsePercentageValueERNS_10VTTScannerERd(%"class.blink::VTTScanner"* dereferenceable(24), double* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %3, align 8
  %5 = call zeroext i1 @_ZN5blink10VTTScanner10ScanDoubleERd(%"class.blink::VTTScanner"* %0, double* nonnull dereferenceable(8) %3) #12
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* %0, i8 signext 37) #12
  br i1 %7, label %8, label %14

8:                                                ; preds = %6
  %9 = load double, double* %3, align 8
  %10 = fcmp olt double %9, 0.000000e+00
  %11 = fcmp ogt double %9, 1.000000e+02
  %12 = or i1 %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  store double %9, double* %1, align 8
  br label %14

14:                                               ; preds = %8, %6, %2, %13
  %15 = phi i1 [ true, %13 ], [ false, %2 ], [ false, %6 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret i1 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5blink10VTTScanner10ScanDoubleERd(%"class.blink::VTTScanner"*, double* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"*, i8 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9VTTParser24ParsePercentageValuePairERNS_10VTTScannerEcRNS_11DoublePointE(%"class.blink::VTTScanner"* dereferenceable(24), i8 signext, %"class.blink::DoublePoint"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %7 = call zeroext i1 @_ZN5blink10VTTScanner10ScanDoubleERd(%"class.blink::VTTScanner"* %0, double* nonnull dereferenceable(8) %5) #12
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* %0, i8 signext 37) #12
  br i1 %9, label %10, label %15

10:                                               ; preds = %8
  %11 = load double, double* %5, align 8
  %12 = fcmp olt double %11, 0.000000e+00
  %13 = fcmp ogt double %11, 1.000000e+02
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %3, %8, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %32

16:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %17 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* %0, i8 signext %1) #12
  br i1 %17, label %18, label %32

18:                                               ; preds = %16
  %19 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %20 = call zeroext i1 @_ZN5blink10VTTScanner10ScanDoubleERd(%"class.blink::VTTScanner"* %0, double* nonnull dereferenceable(8) %4) #12
  br i1 %20, label %21, label %28

21:                                               ; preds = %18
  %22 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* %0, i8 signext 37) #12
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = load double, double* %4, align 8
  %25 = fcmp olt double %24, 0.000000e+00
  %26 = fcmp ogt double %24, 1.000000e+02
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %18, %21, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %32

29:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %30 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %2, i64 0, i32 0
  store double %11, double* %30, align 8
  %31 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %2, i64 0, i32 1
  store double %24, double* %31, align 8
  br label %32

32:                                               ; preds = %29, %28, %15, %16
  %33 = phi i1 [ false, %16 ], [ false, %15 ], [ true, %29 ], [ false, %28 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParserC2EPNS_15VTTParserClientERNS_8DocumentE(%"class.blink::VTTParser"* nocapture, %"class.blink::VTTParserClient"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %5 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Document"* %2, %"class.blink::Document"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 0, i32 4
  %10 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  store i8 1, i8* %9, align 1
  %11 = bitcast %"class.blink::BufferedLineReader"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 3
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 5
  %16 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 0, i32 7
  %17 = bitcast %"class.WTF::Deque"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false) #12
  store i8 1, i8* %16, align 1
  %18 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 1, i32 1
  %20 = bitcast %union.anon.3* %19 to i8*
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 1, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 1, i32 3
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 1, i32 4
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 2
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 3
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.blink::TextResourceDecoderOptions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %26) #12
  %27 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #12
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %4, i32 0, %"class.WTF::TextEncoding"* dereferenceable(8) %27) #12
  %28 = call noalias i8* @malloc(i64 208) #12
  %29 = bitcast i8* %28 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %29, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %4) #12
  %30 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::TextResourceDecoder"** %30 to i8**
  store i8* %28, i8** %31, align 8
  %32 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %4, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #12
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %26) #12
  %33 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8, i32 2
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8, i32 3
  %36 = bitcast %"class.WTF::StringImpl"** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 33, i1 false)
  store i8 1, i8* %35, align 4
  %37 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8, i32 4
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 9, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 12, i32 0, i32 0
  %40 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false)
  store %"class.blink::VTTParserClient"* %1, %"class.blink::VTTParserClient"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13
  %42 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 17
  %43 = bitcast %"class.blink::HeapHashMap.504"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 20, i1 false) #12
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 2
  %45 = bitcast %"class.blink::UseCounter"* %44 to void (%"class.blink::UseCounter"*, i32)***
  %46 = bitcast %"class.blink::HeapVector"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 33, i1 false)
  %47 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %45, align 8
  %48 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %47, i64 3
  %49 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %48, align 8
  call void %49(%"class.blink::UseCounter"* %44, i32 2891) #12
  ret void
}

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #2

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser10GetNewCuesERNS_10HeapVectorINS_6MemberINS_12TextTrackCueEEELj0EEE(%"class.blink::VTTParser"* nocapture, %"class.blink::HeapVector.496"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 14, i32 0
  %4 = bitcast %"class.WTF::Vector.499"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::HeapVector.496"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store atomic i64 %7, i64* %4 monotonic, align 8
  store atomic i64 %5, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector.496", %"class.blink::HeapVector.496"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::HeapVector.496", %"class.blink::HeapVector.496"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.blink::HeapVector.496"* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #12
  br label %22

22:                                               ; preds = %18, %2
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.WTF::Vector.499"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #12
  br label %29

29:                                               ; preds = %22, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser17GetNewStyleSheetsERNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::VTTParser"* nocapture, %"class.blink::HeapVector"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13, i32 0
  %4 = bitcast %"class.WTF::Vector.43"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::HeapVector"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store atomic i64 %7, i64* %4 monotonic, align 8
  store atomic i64 %5, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.blink::HeapVector"* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #12
  br label %22

22:                                               ; preds = %18, %2
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.WTF::Vector.43"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #12
  br label %29

29:                                               ; preds = %22, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser10ParseBytesEPKcm(%"class.blink::VTTParser"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %7, align 8
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* %8, i8* %1, i64 %2) #12
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %6, align 8
  %10 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3
  call void @_ZN5blink18BufferedLineReader6AppendERKN3WTF6StringE(%"class.blink::BufferedLineReader"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  call void @_ZN5blink9VTTParser5ParseEv(%"class.blink::VTTParser"* %0)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #12
  br label %26

26:                                               ; preds = %3, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18BufferedLineReader6AppendERKN3WTF6StringE(%"class.blink::BufferedLineReader"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::SegmentedString", align 8
  %4 = getelementptr inbounds %"class.blink::BufferedLineReader", %"class.blink::BufferedLineReader"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::SegmentedString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 3
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 4
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %65, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %65, label %31

31:                                               ; preds = %12, %27
  %32 = phi %"class.WTF::StringImpl"* [ %29, %27 ], [ %9, %12 ]
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %31
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %53, label %42

42:                                               ; preds = %36
  store i8 1, i8* %7, align 1
  %43 = icmp eq %"class.WTF::StringImpl"* %37, null
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %45 = bitcast %"class.WTF::StringImpl"* %44 to i8*
  %46 = select i1 %43, i8* null, i8* %45
  %47 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %47, align 8
  %48 = zext i32 %34 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 -1
  %51 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  store i8* %50, i8** %51, align 8
  %52 = ptrtoint i8* %46 to i64
  br label %70

53:                                               ; preds = %36
  store i8 0, i8* %7, align 1
  %54 = icmp eq %"class.WTF::StringImpl"* %37, null
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %56 = bitcast %"class.WTF::StringImpl"* %55 to i16*
  %57 = select i1 %54, i16* null, i16* %56
  %58 = bitcast %"class.blink::SegmentedString"* %3 to i16**
  store i16* %57, i16** %58, align 8
  %59 = zext i32 %34 to i64
  %60 = getelementptr inbounds i16, i16* %57, i64 %59
  %61 = getelementptr inbounds i16, i16* %60, i64 -1
  %62 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  %63 = bitcast i8** %62 to i16**
  store i16* %61, i16** %63, align 8
  %64 = ptrtoint i16* %57 to i64
  br label %70

65:                                               ; preds = %2, %31, %27
  %66 = phi i1 [ false, %31 ], [ true, %27 ], [ true, %2 ]
  %67 = phi %"class.WTF::StringImpl"* [ %32, %31 ], [ null, %27 ], [ null, %2 ]
  store i8 1, i8* %7, align 1
  %68 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %68, align 8
  %69 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  store i8* null, i8** %69, align 8
  br label %70

70:                                               ; preds = %65, %53, %42
  %71 = phi i1 [ false, %42 ], [ false, %53 ], [ %66, %65 ]
  %72 = phi %"class.WTF::StringImpl"* [ %32, %42 ], [ %32, %53 ], [ %67, %65 ]
  %73 = phi i64 [ %52, %42 ], [ %64, %53 ], [ 0, %65 ]
  %74 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 1
  %75 = bitcast i8** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 1
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 2
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 3
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5
  %80 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 7
  %81 = bitcast %"class.WTF::Deque"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 25, i1 false) #12
  br i1 %71, label %87, label %82

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = zext i1 %85 to i8
  br label %87

87:                                               ; preds = %70, %82
  %88 = phi i8 [ %86, %82 ], [ 1, %70 ]
  store i8 %88, i8* %80, align 1
  call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %4, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %3) #12
  %89 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %89, align 8
  %91 = icmp eq %"class.blink::SegmentedSubstring"* %90, null
  br i1 %91, label %104, label %92

92:                                               ; preds = %87
  %93 = bitcast %"class.blink::SegmentedSubstring"* %90 to i8*
  %94 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %102, label %99

99:                                               ; preds = %92
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %79) #12
  %100 = bitcast %"class.WTF::Deque"* %79 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %92
  %103 = phi i8* [ %101, %99 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %103) #12
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %89, align 8
  br label %104

104:                                              ; preds = %102, %87
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #12
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser5ParseEv(%"class.blink::VTTParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3
  %8 = call zeroext i1 @_ZN5blink18BufferedLineReader7GetLineERN3WTF6StringE(%"class.blink::BufferedLineReader"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  br i1 %8, label %9, label %106

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 1
  %11 = bitcast %"class.WTF::StringView"* %2 to i8*
  %12 = bitcast %"class.WTF::StringView"* %2 to i64*
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %19

19:                                               ; preds = %9, %104
  %20 = load i32, i32* %10, align 8
  switch i32 %20, label %104 [
    i32 0, label %21
    i32 1, label %62
    i32 5, label %64
    i32 7, label %66
    i32 2, label %68
    i32 3, label %77
    i32 4, label %87
    i32 6, label %89
  ]

21:                                               ; preds = %19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %22, i64* %16, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %17, align 8
  store i32 6, i32* %18, align 8
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %52

26:                                               ; preds = %21
  %27 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %27, label %28, label %52

28:                                               ; preds = %26
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %61, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 6
  br i1 %34, label %35, label %61

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %42 = bitcast %"class.WTF::StringImpl"* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 6
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  br label %50

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 2
  %48 = bitcast %"class.WTF::StringImpl"* %47 to i16*
  %49 = load i16, i16* %48, align 2
  br label %50

50:                                               ; preds = %46, %40
  %51 = phi i16 [ %45, %40 ], [ %49, %46 ]
  switch i16 %51, label %52 [
    i16 32, label %61
    i16 9, label %61
  ]

52:                                               ; preds = %50, %26, %25
  %53 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 12, i32 0, i32 0
  %54 = load %"class.blink::VTTParserClient"*, %"class.blink::VTTParserClient"** %53, align 8
  %55 = icmp eq %"class.blink::VTTParserClient"* %54, null
  br i1 %55, label %106, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.blink::VTTParserClient"* %54 to void (%"class.blink::VTTParserClient"*)***
  %58 = load void (%"class.blink::VTTParserClient"*)**, void (%"class.blink::VTTParserClient"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::VTTParserClient"*)*, void (%"class.blink::VTTParserClient"*)** %58, i64 4
  %60 = load void (%"class.blink::VTTParserClient"*)*, void (%"class.blink::VTTParserClient"*)** %59, align 8
  call void %60(%"class.blink::VTTParserClient"* nonnull %54) #12
  br label %106

61:                                               ; preds = %50, %50, %31, %28
  store i32 1, i32* %10, align 8
  br label %104

62:                                               ; preds = %19
  %63 = call i32 @_ZN5blink9VTTParser18CollectWebVTTBlockERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  store i32 %63, i32* %10, align 8
  br label %104

64:                                               ; preds = %19
  %65 = call i32 @_ZN5blink9VTTParser21CollectRegionSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  store i32 %65, i32* %10, align 8
  br label %104

66:                                               ; preds = %19
  %67 = call i32 @_ZN5blink9VTTParser17CollectStyleSheetERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  store i32 %67, i32* %10, align 8
  br label %104

68:                                               ; preds = %19
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %104, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %104, label %75

75:                                               ; preds = %71
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0)
  %76 = call i32 @_ZN5blink9VTTParser12CollectCueIdERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  store i32 %76, i32* %10, align 8
  br label %104

77:                                               ; preds = %19
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %77, %80
  store i32 2, i32* %10, align 8
  br label %104

85:                                               ; preds = %80
  %86 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  store i32 %86, i32* %10, align 8
  br label %104

87:                                               ; preds = %19
  %88 = call i32 @_ZN5blink9VTTParser14CollectCueTextERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  store i32 %88, i32* %10, align 8
  br label %104

89:                                               ; preds = %19
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %97, i64* %12, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %13, align 8
  store i32 3, i32* %14, align 8
  %98 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %90, %"class.WTF::StringView"* nonnull dereferenceable(24) %2, i32 0) #12
  %99 = icmp eq i32 %98, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0) #12
  %101 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  br label %102

102:                                              ; preds = %89, %92, %96, %100
  %103 = phi i32 [ %101, %100 ], [ 2, %92 ], [ 6, %96 ], [ 2, %89 ]
  store i32 %103, i32* %10, align 8
  br label %104

104:                                              ; preds = %68, %71, %19, %102, %87, %85, %84, %75, %66, %64, %62, %61
  %105 = call zeroext i1 @_ZN5blink18BufferedLineReader7GetLineERN3WTF6StringE(%"class.blink::BufferedLineReader"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  br i1 %105, label %19, label %106

106:                                              ; preds = %104, %1, %52, %56
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #12
  br label %122

122:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser5FlushEv(%"class.blink::VTTParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %5, align 8
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* %6) #12
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3
  call void @_ZN5blink18BufferedLineReader6AppendERKN3WTF6StringE(%"class.blink::BufferedLineReader"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %2)
  %9 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 3, i32 2
  store i8 1, i8* %9, align 8
  call void @_ZN5blink9VTTParser5ParseEv(%"class.blink::VTTParser"* %0)
  %10 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %1
  call void @_ZN5blink9VTTParser12CreateNewCueEv(%"class.blink::VTTParser"* %0) #12
  br label %14

14:                                               ; preds = %1, %13
  %15 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 17, i32 0
  %16 = getelementptr inbounds %"class.WTF::HashMap.507", %"class.WTF::HashMap.507"* %15, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.510"* %17, null
  br i1 %18, label %55, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 17, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %51, label %23

23:                                               ; preds = %19
  %24 = zext i32 %21 to i64
  br label %25

25:                                               ; preds = %48, %23
  %26 = phi i64 [ 0, %23 ], [ %49, %48 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %17, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  switch i64 %30, label %31 [
    i64 -1, label %48
    i64 0, label %48
  ]

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %43, %40
  %45 = bitcast %"struct.WTF::KeyValuePair.510"* %27 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %45, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %17, i64 %26, i32 1
  %47 = bitcast %"class.blink::Member.37"* %46 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %25, %25
  %49 = add nuw nsw i64 %26, 1
  %50 = icmp eq i64 %49, %24
  br i1 %50, label %51, label %25

51:                                               ; preds = %48, %19
  %52 = bitcast %"struct.WTF::KeyValuePair.510"* %17 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #12
  %53 = bitcast %"class.WTF::HashMap.507"* %15 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  store i32 0, i32* %20, align 8
  %54 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 17, i32 0, i32 0, i32 2
  store i32 0, i32* %54, align 4
  br label %55

55:                                               ; preds = %14, %51
  %56 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 15
  %57 = load i8, i8* %56, align 8, !range !3
  %58 = icmp ne i8 %57, 0
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i1 zeroext %58) #12
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %74

74:                                               ; preds = %55, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser15FlushPendingCueEv(%"class.blink::VTTParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 4
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN5blink9VTTParser12CreateNewCueEv(%"class.blink::VTTParser"* %0)
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18BufferedLineReader7GetLineERN3WTF6StringE(%"class.blink::BufferedLineReader"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9VTTParser25HasRequiredFileIdentifierERKN3WTF6StringE(%"class.blink::VTTParser"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br label %40

13:                                               ; preds = %2
  %14 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br i1 %14, label %15, label %40

15:                                               ; preds = %13
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %40, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ugt i32 %20, 6
  br i1 %21, label %22, label %40

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %29 = bitcast %"class.WTF::StringImpl"* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 6
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  br label %37

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 2
  %35 = bitcast %"class.WTF::StringImpl"* %34 to i16*
  %36 = load i16, i16* %35, align 2
  br label %37

37:                                               ; preds = %27, %33
  %38 = phi i16 [ %32, %27 ], [ %36, %33 ]
  switch i16 %38, label %40 [
    i16 32, label %39
    i16 9, label %39
  ]

39:                                               ; preds = %37, %37
  br label %40

40:                                               ; preds = %15, %12, %18, %39, %37, %13
  %41 = phi i1 [ false, %13 ], [ false, %37 ], [ true, %39 ], [ true, %18 ], [ false, %12 ], [ true, %15 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser18CollectWebVTTBlockERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 9
  %8 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %10 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  br label %20

17:                                               ; preds = %2
  %18 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 0) #12
  %19 = icmp eq i32 %18, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  br i1 %19, label %20, label %80

20:                                               ; preds = %17, %16
  %21 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase27is_web_vtt_regions_enabled_E, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = call zeroext i1 @_ZN5blink9VTTParser20CheckAndCreateRegionERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br i1 %24, label %248, label %25

25:                                               ; preds = %20, %23
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 5, i32* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %79, label %34

34:                                               ; preds = %25
  %35 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %32, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  br i1 %35, label %36, label %79

36:                                               ; preds = %34
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %76, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, -5
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %48 = bitcast %"class.WTF::StringImpl"* %47 to i16*
  %49 = getelementptr inbounds i16, i16* %48, i64 5
  %50 = bitcast i16* %49 to i8*
  %51 = bitcast %"class.WTF::StringImpl"* %47 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 5
  %53 = select i1 %46, i8* %50, i8* %52
  %54 = zext i32 %42 to i64
  %55 = icmp eq i32 %42, 0
  br i1 %55, label %76, label %56

56:                                               ; preds = %39
  %57 = load atomic i32, i32* %43 monotonic, align 4
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %56, %64
  %61 = phi i64 [ %65, %64 ], [ 0, %56 ]
  %62 = getelementptr inbounds i8, i8* %53, i64 %61
  %63 = load i8, i8* %62, align 1
  switch i8 %63, label %79 [
    i8 32, label %64
    i8 9, label %64
    i8 10, label %64
    i8 12, label %64
    i8 13, label %64
  ]

64:                                               ; preds = %60, %60, %60, %60, %60
  %65 = add nuw nsw i64 %61, 1
  %66 = icmp eq i64 %65, %54
  br i1 %66, label %76, label %60

67:                                               ; preds = %56
  %68 = bitcast i8* %53 to i16*
  br label %69

69:                                               ; preds = %73, %67
  %70 = phi i64 [ %74, %73 ], [ 0, %67 ]
  %71 = getelementptr inbounds i16, i16* %68, i64 %70
  %72 = load i16, i16* %71, align 2
  switch i16 %72, label %79 [
    i16 32, label %73
    i16 9, label %73
    i16 10, label %73
    i16 12, label %73
    i16 13, label %73
  ]

73:                                               ; preds = %69, %69, %69, %69, %69
  %74 = add nuw nsw i64 %70, 1
  %75 = icmp eq i64 %74, %54
  br i1 %75, label %76, label %69

76:                                               ; preds = %64, %73, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %77 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 15
  store i8 1, i8* %77, align 8
  %78 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %78) #12
  br label %248

79:                                               ; preds = %60, %69, %34, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  br label %80

80:                                               ; preds = %79, %17
  %81 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %83 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %90

89:                                               ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  br label %96

90:                                               ; preds = %80
  %91 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %87, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  %92 = icmp eq i32 %91, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0) #12
  %94 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1) #12
  %95 = icmp eq i32 %94, 6
  br i1 %95, label %96, label %97

96:                                               ; preds = %93, %90, %89
  br label %97

97:                                               ; preds = %93, %96
  %98 = phi i32 [ 1, %96 ], [ %94, %93 ]
  %99 = icmp eq i32 %98, 1
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %106, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br label %106

106:                                              ; preds = %97, %102
  %107 = phi i1 [ true, %97 ], [ %105, %102 ]
  br i1 %99, label %167, label %108

108:                                              ; preds = %106
  %109 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #12
  br i1 %107, label %166, label %110

110:                                              ; preds = %108
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %112 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %114, align 8
  br i1 %101, label %115, label %116

115:                                              ; preds = %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #12
  br label %145

116:                                              ; preds = %110
  %117 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %100, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, i32 0) #12
  %118 = icmp eq i32 %117, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #12
  br i1 %118, label %119, label %248

119:                                              ; preds = %116
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %145, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 acquire, align 4
  %125 = and i32 %124, 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %122
  %128 = load atomic i32, i32* %123 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %145

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #12
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !2

140:                                              ; preds = %131
  call void @llvm.trap() #12
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %145

143:                                              ; preds = %122
  %144 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %120) #12
  br label %145

145:                                              ; preds = %115, %119, %127, %141, %143
  %146 = phi %"class.WTF::StringImpl"* [ %144, %143 ], [ %120, %127 ], [ %120, %141 ], [ null, %119 ], [ null, %115 ]
  %147 = ptrtoint %"class.WTF::StringImpl"* %146 to i64
  %148 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 5
  %149 = bitcast %"class.WTF::AtomicString"* %148 to i64*
  %150 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %148, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  store i64 %147, i64* %149, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %248, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %248

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #12
  br label %248

166:                                              ; preds = %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #12
  br label %248

167:                                              ; preds = %106
  br i1 %107, label %168, label %207

168:                                              ; preds = %167
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %189, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %189

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #12
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !2

185:                                              ; preds = %176
  call void @llvm.trap() #12
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  br label %189

189:                                              ; preds = %186, %171, %168
  %190 = phi %"class.WTF::StringImpl"* [ %188, %186 ], [ %100, %171 ], [ %100, %168 ]
  %191 = ptrtoint %"class.WTF::StringImpl"* %169 to i64
  %192 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %191, i64* %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %193, label %248, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %248

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #12
  br label %248

207:                                              ; preds = %167
  %208 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %209 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %208, i64 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %230, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %230

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i33
  %221 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %220, i33 1) #12
  %222 = extractvalue { i33, i1 } %221, 1
  %223 = extractvalue { i33, i1 } %221, 0
  %224 = icmp slt i33 %223, 0
  %225 = or i1 %222, %224
  br i1 %225, label %226, label %227, !prof !2

226:                                              ; preds = %217
  call void @llvm.trap() #12
  unreachable

227:                                              ; preds = %217
  %228 = trunc i33 %223 to i32
  store i32 %228, i32* %218, align 4
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  br label %230

230:                                              ; preds = %227, %212, %207
  %231 = phi %"class.WTF::StringImpl"* [ %229, %227 ], [ %100, %212 ], [ %100, %207 ]
  %232 = ptrtoint %"class.WTF::StringImpl"* %210 to i64
  %233 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %232, i64* %233, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #12
  br label %248

248:                                              ; preds = %116, %247, %244, %230, %206, %203, %189, %145, %162, %165, %166, %23, %76
  %249 = phi i32 [ 7, %76 ], [ 5, %23 ], [ %98, %166 ], [ %98, %116 ], [ %98, %165 ], [ %98, %162 ], [ %98, %145 ], [ 1, %189 ], [ 1, %203 ], [ 1, %206 ], [ 1, %230 ], [ 1, %244 ], [ 1, %247 ]
  ret i32 %249
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser21CollectRegionSettingsERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call zeroext i1 @_ZN5blink9VTTParser19CheckAndStoreRegionERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br i1 %4, label %5, label %22

5:                                                ; preds = %2
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  br label %21

15:                                               ; preds = %5
  %16 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  %17 = icmp eq i32 %16, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0) #12
  %19 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1) #12
  %20 = icmp eq i32 %19, 6
  br i1 %20, label %21, label %25

21:                                               ; preds = %18, %15, %14
  br label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 11, i32 0, i32 0
  %24 = load %"class.blink::VTTRegion"*, %"class.blink::VTTRegion"** %23, align 8
  tail call void @_ZN5blink9VTTRegion17SetRegionSettingsERKN3WTF6StringE(%"class.blink::VTTRegion"* %24, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %25

25:                                               ; preds = %21, %18, %22
  %26 = phi i32 [ 5, %22 ], [ 1, %21 ], [ %19, %18 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser17CollectStyleSheetERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"struct.blink::Referrer", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  br label %28

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  br i1 %19, label %28, label %21

21:                                               ; preds = %16
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %23 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %25, align 8
  %26 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, i32 0) #12
  %27 = icmp eq i32 %26, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br i1 %27, label %224, label %30

28:                                               ; preds = %14, %16
  %29 = phi i8* [ %15, %14 ], [ %20, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %30

30:                                               ; preds = %21, %28
  %31 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #12
  %34 = bitcast %"struct.blink::Referrer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  %36 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %6, i64 0, i32 1
  store i32 1, i32* %36, align 8
  %37 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #12
  %38 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #12
  %39 = bitcast i8* %38 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"* %39, %"class.blink::Document"* dereferenceable(2848) %32, %"class.blink::KURL"* dereferenceable(112) %33, i1 zeroext true, %"struct.blink::Referrer"* nonnull dereferenceable(16) %6, %"class.WTF::TextEncoding"* dereferenceable(8) %37, i8 zeroext 0, i32 1) #12
  %40 = getelementptr inbounds i8, i8* %38, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #12
  br label %59

59:                                               ; preds = %30, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  %60 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #12
  %61 = bitcast i8* %60 to %"class.blink::StyleSheetContents"*
  %62 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %61, %"class.blink::CSSParserContext"* %39, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::StyleRuleImport"* null) #12
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #12
  br label %79

79:                                               ; preds = %59, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  %80 = getelementptr inbounds i8, i8* %60, i64 -4
  %81 = bitcast i8* %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = or i16 %82, 1
  store atomic i16 %83, i16* %81 release, align 2
  %84 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12
  %85 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8
  %86 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %85) #12
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  %88 = call i32 @_ZN5blink9CSSParser10ParseSheetEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringENS_23CSSDeferPropertyParsingEb(%"class.blink::CSSParserContext"* %39, %"class.blink::StyleSheetContents"* %61, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 0, i1 zeroext false) #12
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #12
  br label %104

104:                                              ; preds = %79, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12
  %105 = bitcast %"class.blink::CSSStyleSheet"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %8, align 8
  %106 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #12
  %107 = bitcast i8* %106 to %"class.blink::CSSStyleSheet"*
  call void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"* %107, %"class.blink::StyleSheetContents"* %61, %"class.blink::CSSImportRule"* null) #12
  %108 = getelementptr inbounds i8, i8* %106, i64 -4
  %109 = bitcast i8* %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = or i16 %110, 1
  store atomic i16 %111, i16* %109 release, align 2
  %112 = bitcast %"class.blink::CSSStyleSheet"** %8 to i8**
  store i8* %106, i8** %112, align 8
  %113 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %114 = getelementptr inbounds i8, i8* %106, i64 120
  %115 = ptrtoint %"class.blink::Document"* %113 to i64
  %116 = bitcast i8* %114 to i64*
  store atomic i64 %115, i64* %116 monotonic, align 8
  %117 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %104
  %120 = bitcast %"class.blink::Document"* %113 to i8*
  %121 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %120) #12
  %122 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  br label %123

123:                                              ; preds = %104, %119
  %124 = phi %"class.blink::CSSStyleSheet"* [ %107, %104 ], [ %122, %119 ]
  %125 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #12
  %126 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %124, i64 0, i32 7
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %147, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i33
  %139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #12
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !2

144:                                              ; preds = %135
  call void @llvm.trap() #12
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4
  br label %147

147:                                              ; preds = %145, %130, %123
  %148 = ptrtoint %"class.WTF::StringImpl"* %128 to i64
  %149 = bitcast %"class.WTF::String"* %126 to i64*
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  store i64 %148, i64* %149, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #12
  br label %166

166:                                              ; preds = %147, %162, %165
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #12
  br label %182

182:                                              ; preds = %166, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #12
  %183 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13, i32 0
  %184 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = icmp eq i32 %185, %187
  br i1 %188, label %205, label %189, !prof !2

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %183, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %190, align 8
  %192 = zext i32 %185 to i64
  %193 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %191, i64 %192
  %194 = bitcast %"class.blink::CSSStyleSheet"** %8 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.blink::Member.46"* %193 to i64*
  store atomic i64 %195, i64* %196 monotonic, align 8
  %197 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %189
  %200 = inttoptr i64 %195 to i8*
  %201 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %200) #12
  br label %202

202:                                              ; preds = %199, %189
  %203 = load i32, i32* %184, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %184, align 4
  br label %206

205:                                              ; preds = %182
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.43"* %183, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %8) #12
  br label %206

206:                                              ; preds = %202, %205
  %207 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #12
  %208 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %209 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %210, align 8
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %211, align 8
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %214, label %215

214:                                              ; preds = %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #12
  br label %221

215:                                              ; preds = %206
  %216 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %212, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 0) #12
  %217 = icmp eq i32 %216, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #12
  br i1 %217, label %221, label %218

218:                                              ; preds = %215
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0) #12
  %219 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1) #12
  %220 = icmp eq i32 %219, 6
  br i1 %220, label %221, label %222

221:                                              ; preds = %218, %215, %214
  br label %222

222:                                              ; preds = %218, %221
  %223 = phi i32 [ 1, %221 ], [ %219, %218 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  br label %248

224:                                              ; preds = %21
  %225 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8
  %226 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8, i32 2
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %230, label %229

229:                                              ; preds = %224
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %225, i8 zeroext 10) #12
  br label %230

230:                                              ; preds = %229, %224
  %231 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #12
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %234, label %238

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %235, align 8
  %236 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %237 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %236, i64* %237, align 8
  br label %245

238:                                              ; preds = %230
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %239, align 8
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 1
  %243 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %244 = bitcast i8** %243 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %244, align 8
  br label %245

245:                                              ; preds = %234, %238
  %246 = phi i32 [ %241, %238 ], [ 0, %234 ]
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %246, i32* %247, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %225, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #12
  br label %248

248:                                              ; preds = %245, %222
  %249 = phi i32 [ %223, %222 ], [ 7, %245 ]
  ret i32 %249
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %3 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %1
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %45 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 10
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #12
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %54
  tail call void @llvm.trap() #12
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %64, %49, %43
  %67 = ptrtoint %"class.WTF::StringImpl"* %47 to i64
  %68 = bitcast %"class.WTF::String"* %45 to i64*
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  store i64 %67, i64* %68, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #12
  br label %85

85:                                               ; preds = %66, %81, %84
  %86 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 6
  %87 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8
  %88 = bitcast double* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false)
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %87) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser12CollectCueIdERKN3WTF6StringE(%"class.blink::VTTParser"* nocapture, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br label %44

13:                                               ; preds = %2
  %14 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  %15 = icmp eq i32 %14, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %65

18:                                               ; preds = %13
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = and i32 %23, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %21
  %27 = load atomic i32, i32* %22 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #12
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %30
  call void @llvm.trap() #12
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %44

42:                                               ; preds = %21
  %43 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %19) #12
  br label %44

44:                                               ; preds = %12, %18, %26, %40, %42
  %45 = phi %"class.WTF::StringImpl"* [ %43, %42 ], [ %19, %26 ], [ %19, %40 ], [ null, %18 ], [ null, %12 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %47 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 5
  %48 = bitcast %"class.WTF::AtomicString"* %47 to i64*
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  store i64 %46, i64* %48, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %65

65:                                               ; preds = %44, %61, %64, %16
  %66 = phi i32 [ %17, %16 ], [ 3, %64 ], [ 3, %61 ], [ 3, %44 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* nocapture, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::VTTScanner", align 8
  %4 = bitcast %"class.blink::VTTScanner"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %3, i64 0, i32 2
  %8 = bitcast %"class.blink::VTTScanner"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10VTTScannerC1ERKN3WTF6StringE(%"class.blink::VTTScanner"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %1) #12
  %9 = load i8, i8* %7, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = icmp ult i8* %13, %12
  br i1 %14, label %15, label %34

15:                                               ; preds = %11, %18
  %16 = phi i8* [ %19, %18 ], [ %13, %11 ]
  %17 = load i8, i8* %16, align 1
  switch i8 %17, label %34 [
    i8 32, label %18
    i8 9, label %18
    i8 10, label %18
    i8 12, label %18
    i8 13, label %18
  ]

18:                                               ; preds = %15, %15, %15, %15, %15
  %19 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %19, i8** %5, align 8
  %20 = icmp eq i8* %19, %12
  br i1 %20, label %34, label %15

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::VTTScanner"* %3 to i16**
  %23 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %3, i64 0, i32 1
  %24 = bitcast %union.anon.0* %23 to i16**
  %25 = load i16*, i16** %24, align 8
  %26 = load i16*, i16** %22, align 8
  %27 = icmp ult i16* %26, %25
  br i1 %27, label %28, label %34

28:                                               ; preds = %21, %31
  %29 = phi i16* [ %32, %31 ], [ %26, %21 ]
  %30 = load i16, i16* %29, align 2
  switch i16 %30, label %34 [
    i16 32, label %31
    i16 9, label %31
    i16 10, label %31
    i16 12, label %31
    i16 13, label %31
  ]

31:                                               ; preds = %28, %28, %28, %28, %28
  %32 = getelementptr inbounds i16, i16* %29, i64 1
  store i16* %32, i16** %22, align 8
  %33 = icmp ult i16* %32, %25
  br i1 %33, label %28, label %34

34:                                               ; preds = %15, %18, %28, %31, %11, %21
  %35 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 6
  %36 = call zeroext i1 @_ZN5blink9VTTParser16CollectTimeStampERNS_10VTTScannerERd(%"class.blink::VTTScanner"* nonnull dereferenceable(24) %3, double* dereferenceable(8) %35)
  br i1 %36, label %37, label %141

37:                                               ; preds = %34
  %38 = load i8, i8* %7, align 8, !range !3
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = load i8*, i8** %6, align 8
  %42 = load i8*, i8** %5, align 8
  %43 = icmp ult i8* %42, %41
  br i1 %43, label %44, label %63

44:                                               ; preds = %40, %47
  %45 = phi i8* [ %48, %47 ], [ %42, %40 ]
  %46 = load i8, i8* %45, align 1
  switch i8 %46, label %63 [
    i8 32, label %47
    i8 9, label %47
    i8 10, label %47
    i8 12, label %47
    i8 13, label %47
  ]

47:                                               ; preds = %44, %44, %44, %44, %44
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %48, i8** %5, align 8
  %49 = icmp eq i8* %48, %41
  br i1 %49, label %63, label %44

50:                                               ; preds = %37
  %51 = bitcast %"class.blink::VTTScanner"* %3 to i16**
  %52 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %3, i64 0, i32 1
  %53 = bitcast %union.anon.0* %52 to i16**
  %54 = load i16*, i16** %53, align 8
  %55 = load i16*, i16** %51, align 8
  %56 = icmp ult i16* %55, %54
  br i1 %56, label %57, label %63

57:                                               ; preds = %50, %60
  %58 = phi i16* [ %61, %60 ], [ %55, %50 ]
  %59 = load i16, i16* %58, align 2
  switch i16 %59, label %63 [
    i16 32, label %60
    i16 9, label %60
    i16 10, label %60
    i16 12, label %60
    i16 13, label %60
  ]

60:                                               ; preds = %57, %57, %57, %57, %57
  %61 = getelementptr inbounds i16, i16* %58, i64 1
  store i16* %61, i16** %51, align 8
  %62 = icmp ult i16* %61, %54
  br i1 %62, label %57, label %63

63:                                               ; preds = %44, %47, %57, %60, %40, %50
  %64 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEPKhj(%"class.blink::VTTScanner"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 3) #12
  br i1 %64, label %65, label %141

65:                                               ; preds = %63
  %66 = load i8, i8* %7, align 8, !range !3
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %65
  %69 = load i8*, i8** %6, align 8
  %70 = load i8*, i8** %5, align 8
  %71 = icmp ult i8* %70, %69
  br i1 %71, label %72, label %91

72:                                               ; preds = %68, %75
  %73 = phi i8* [ %76, %75 ], [ %70, %68 ]
  %74 = load i8, i8* %73, align 1
  switch i8 %74, label %91 [
    i8 32, label %75
    i8 9, label %75
    i8 10, label %75
    i8 12, label %75
    i8 13, label %75
  ]

75:                                               ; preds = %72, %72, %72, %72, %72
  %76 = getelementptr inbounds i8, i8* %73, i64 1
  store i8* %76, i8** %5, align 8
  %77 = icmp eq i8* %76, %69
  br i1 %77, label %91, label %72

78:                                               ; preds = %65
  %79 = bitcast %"class.blink::VTTScanner"* %3 to i16**
  %80 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %3, i64 0, i32 1
  %81 = bitcast %union.anon.0* %80 to i16**
  %82 = load i16*, i16** %81, align 8
  %83 = load i16*, i16** %79, align 8
  %84 = icmp ult i16* %83, %82
  br i1 %84, label %85, label %91

85:                                               ; preds = %78, %88
  %86 = phi i16* [ %89, %88 ], [ %83, %78 ]
  %87 = load i16, i16* %86, align 2
  switch i16 %87, label %91 [
    i16 32, label %88
    i16 9, label %88
    i16 10, label %88
    i16 12, label %88
    i16 13, label %88
  ]

88:                                               ; preds = %85, %85, %85, %85, %85
  %89 = getelementptr inbounds i16, i16* %86, i64 1
  store i16* %89, i16** %79, align 8
  %90 = icmp ult i16* %89, %82
  br i1 %90, label %85, label %91

91:                                               ; preds = %72, %75, %85, %88, %68, %78
  %92 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 7
  %93 = call zeroext i1 @_ZN5blink9VTTParser16CollectTimeStampERNS_10VTTScannerERd(%"class.blink::VTTScanner"* nonnull dereferenceable(24) %3, double* dereferenceable(8) %92)
  br i1 %93, label %94, label %141

94:                                               ; preds = %91
  %95 = load i8, i8* %7, align 8, !range !3
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94
  %98 = load i8*, i8** %6, align 8
  %99 = load i8*, i8** %5, align 8
  %100 = icmp ult i8* %99, %98
  br i1 %100, label %101, label %120

101:                                              ; preds = %97, %104
  %102 = phi i8* [ %105, %104 ], [ %99, %97 ]
  %103 = load i8, i8* %102, align 1
  switch i8 %103, label %120 [
    i8 32, label %104
    i8 9, label %104
    i8 10, label %104
    i8 12, label %104
    i8 13, label %104
  ]

104:                                              ; preds = %101, %101, %101, %101, %101
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  store i8* %105, i8** %5, align 8
  %106 = icmp eq i8* %105, %98
  br i1 %106, label %120, label %101

107:                                              ; preds = %94
  %108 = bitcast %"class.blink::VTTScanner"* %3 to i16**
  %109 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %3, i64 0, i32 1
  %110 = bitcast %union.anon.0* %109 to i16**
  %111 = load i16*, i16** %110, align 8
  %112 = load i16*, i16** %108, align 8
  %113 = icmp ult i16* %112, %111
  br i1 %113, label %114, label %120

114:                                              ; preds = %107, %117
  %115 = phi i16* [ %118, %117 ], [ %112, %107 ]
  %116 = load i16, i16* %115, align 2
  switch i16 %116, label %120 [
    i16 32, label %117
    i16 9, label %117
    i16 10, label %117
    i16 12, label %117
    i16 13, label %117
  ]

117:                                              ; preds = %114, %114, %114, %114, %114
  %118 = getelementptr inbounds i16, i16* %115, i64 1
  store i16* %118, i16** %108, align 8
  %119 = icmp ult i16* %118, %111
  br i1 %119, label %114, label %120

120:                                              ; preds = %101, %104, %114, %117, %97, %107
  %121 = call %"class.WTF::StringImpl"* @_ZN5blink10VTTScanner19RestOfInputAsStringEv(%"class.blink::VTTScanner"* nonnull %3) #12
  %122 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %123 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 10
  %124 = bitcast %"class.WTF::String"* %123 to i64*
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %123, i64 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  store i64 %122, i64* %124, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #12
  br label %141

141:                                              ; preds = %120, %137, %140, %91, %63, %34
  %142 = phi i32 [ 6, %34 ], [ 6, %63 ], [ 6, %91 ], [ 4, %140 ], [ 4, %137 ], [ 4, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser14CollectCueTextERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %2, %8
  tail call void @_ZN5blink9VTTParser12CreateNewCueEv(%"class.blink::VTTParser"* %0)
  br label %47

13:                                               ; preds = %8
  %14 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %18, align 8
  %19 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  %20 = icmp eq i32 %19, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  call void @_ZN5blink9VTTParser12CreateNewCueEv(%"class.blink::VTTParser"* %0)
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0) #12
  %22 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %47

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8
  %25 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %24, i8 zeroext 10) #12
  br label %29

29:                                               ; preds = %28, %23
  %30 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  br label %47

47:                                               ; preds = %44, %21, %12
  %48 = phi i32 [ 2, %12 ], [ %22, %21 ], [ 4, %44 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser12IgnoreBadCueERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %16, align 8
  %17 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  %18 = icmp eq i32 %17, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0) #12
  %20 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %21

21:                                               ; preds = %11, %2, %7, %19
  %22 = phi i32 [ %20, %19 ], [ 2, %7 ], [ 6, %11 ], [ 2, %2 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9VTTParser12CreateNewCueEv(%"class.blink::VTTParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::VTTCue"*, align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.blink::VTTCue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  store %"class.blink::VTTCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::VTTCue"*), %"class.blink::VTTCue"** %2, align 8
  %5 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 6
  %8 = load double, double* %7, align 8
  %9 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 7
  %10 = load double, double* %9, align 8
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 8
  %13 = tail call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %12) #12
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #12
  %16 = bitcast i8* %15 to %"class.blink::VTTCue"*
  call void @_ZN5blink6VTTCueC1ERNS_8DocumentEddRKN3WTF6StringE(%"class.blink::VTTCue"* %16, %"class.blink::Document"* dereferenceable(2848) %6, double %8, double %10, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %17 = getelementptr inbounds i8, i8* %15, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %1, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %37 = bitcast %"class.blink::VTTCue"** %2 to i8**
  store i8* %15, i8** %37, align 8
  %38 = bitcast i8* %15 to %"class.blink::TextTrackCue"*
  %39 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 5
  call void @_ZN5blink12TextTrackCue5setIdERKN3WTF12AtomicStringE(%"class.blink::TextTrackCue"* %38, %"class.WTF::AtomicString"* dereferenceable(8) %39) #12
  %40 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 17
  %41 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 10
  call void @_ZN5blink6VTTCue13ParseSettingsEPKNS_11HeapHashMapIN3WTF6StringENS_6MemberINS_9VTTRegionEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEERKS3_(%"class.blink::VTTCue"* %16, %"class.blink::HeapHashMap.504"* %40, %"class.WTF::String"* dereferenceable(8) %41) #12
  %42 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 14, i32 0
  %43 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %62, label %48, !prof !2

48:                                               ; preds = %36
  %49 = ptrtoint i8* %15 to i64
  %50 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %42, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::Member.502"*, %"class.blink::Member.502"** %50, align 8
  %52 = zext i32 %44 to i64
  %53 = getelementptr inbounds %"class.blink::Member.502", %"class.blink::Member.502"* %51, i64 %52
  %54 = bitcast %"class.blink::Member.502"* %53 to i64*
  store atomic i64 %49, i64* %54 monotonic, align 8
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %48
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #12
  br label %59

59:                                               ; preds = %57, %48
  %60 = load i32, i32* %43, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %43, align 4
  br label %63

62:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_6VTTCueEEEvOT_(%"class.WTF::Vector.499"* %42, %"class.blink::VTTCue"** nonnull dereferenceable(8) %2) #12
  br label %63

63:                                               ; preds = %59, %62
  %64 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 12, i32 0, i32 0
  %65 = load %"class.blink::VTTParserClient"*, %"class.blink::VTTParserClient"** %64, align 8
  %66 = icmp eq %"class.blink::VTTParserClient"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.blink::VTTParserClient"* %65 to void (%"class.blink::VTTParserClient"*)***
  %69 = load void (%"class.blink::VTTParserClient"*)**, void (%"class.blink::VTTParserClient"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::VTTParserClient"*)*, void (%"class.blink::VTTParserClient"*)** %69, i64 3
  %71 = load void (%"class.blink::VTTParserClient"*)*, void (%"class.blink::VTTParserClient"*)** %70, align 8
  call void %71(%"class.blink::VTTParserClient"* nonnull %65) #12
  br label %72

72:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9VTTParser19CheckAndStoreRegionERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  br label %21

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %12, label %21, label %14

14:                                               ; preds = %9
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %18, align 8
  %19 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  %20 = icmp eq i32 %19, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %20, label %54, label %23

21:                                               ; preds = %7, %9
  %22 = phi i8* [ %8, %7 ], [ %13, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  br label %23

23:                                               ; preds = %14, %21
  %24 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 11
  %25 = getelementptr inbounds %"class.blink::Member.37", %"class.blink::Member.37"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::VTTRegion"*, %"class.blink::VTTRegion"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::VTTRegion", %"class.blink::VTTRegion"* %26, i64 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %52, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 17, i32 0, i32 0
  %37 = call { %"struct.WTF::KeyValuePair.510"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.508"* %36, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::Member.37"* dereferenceable(8) %24) #12
  %38 = extractvalue { %"struct.WTF::KeyValuePair.510"*, i8 } %37, 1
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %52

41:                                               ; preds = %35
  %42 = extractvalue { %"struct.WTF::KeyValuePair.510"*, i8 } %37, 0
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %42, i64 0, i32 1
  %44 = bitcast %"class.blink::Member.37"* %24 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Member.37"* %43 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = inttoptr i64 %45 to i8*
  %51 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #12
  br label %52

52:                                               ; preds = %23, %49, %41, %35, %31
  %53 = bitcast %"class.blink::Member.37"* %24 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  br label %54

54:                                               ; preds = %14, %52
  %55 = phi i1 [ true, %52 ], [ false, %14 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser18CheckAndRecoverCueERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br label %19

13:                                               ; preds = %2
  %14 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  %15 = icmp eq i32 %14, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0) #12
  %17 = call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1) #12
  %18 = icmp eq i32 %17, 6
  br i1 %18, label %19, label %20

19:                                               ; preds = %13, %12, %16
  br label %20

20:                                               ; preds = %16, %19
  %21 = phi i32 [ 1, %19 ], [ %17, %16 ]
  ret i32 %21
}

declare void @_ZN5blink9VTTRegion17SetRegionSettingsERKN3WTF6StringE(%"class.blink::VTTRegion"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #2

declare i32 @_ZN5blink9CSSParser10ParseSheetEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringENS_23CSSDeferPropertyParsingEb(%"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8), i32, i1 zeroext) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9VTTParser20CheckAndCreateRegionERKN3WTF6StringE(%"class.blink::VTTParser"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %68, label %12

12:                                               ; preds = %2
  %13 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  br i1 %13, label %14, label %68

14:                                               ; preds = %12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %54, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -6
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 2
  %27 = bitcast %"class.WTF::StringImpl"* %26 to i8*
  %28 = bitcast %"class.WTF::StringImpl"* %25 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 6
  %30 = select i1 %24, i8* %27, i8* %29
  %31 = zext i32 %20 to i64
  %32 = icmp eq i32 %20, 0
  br i1 %32, label %54, label %33

33:                                               ; preds = %17
  %34 = load atomic i32, i32* %21 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %33, %41
  %38 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %39 = getelementptr inbounds i8, i8* %30, i64 %38
  %40 = load i8, i8* %39, align 1
  switch i8 %40, label %53 [
    i8 32, label %41
    i8 9, label %41
    i8 10, label %41
    i8 12, label %41
    i8 13, label %41
  ]

41:                                               ; preds = %37, %37, %37, %37, %37
  %42 = add nuw nsw i64 %38, 1
  %43 = icmp eq i64 %42, %31
  br i1 %43, label %54, label %37

44:                                               ; preds = %33
  %45 = bitcast i8* %30 to i16*
  br label %46

46:                                               ; preds = %50, %44
  %47 = phi i64 [ %51, %50 ], [ 0, %44 ]
  %48 = getelementptr inbounds i16, i16* %45, i64 %47
  %49 = load i16, i16* %48, align 2
  switch i16 %49, label %53 [
    i16 32, label %50
    i16 9, label %50
    i16 10, label %50
    i16 12, label %50
    i16 13, label %50
  ]

50:                                               ; preds = %46, %46, %46, %46, %46
  %51 = add nuw nsw i64 %47, 1
  %52 = icmp eq i64 %51, %31
  br i1 %52, label %54, label %46

53:                                               ; preds = %37, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br label %69

54:                                               ; preds = %41, %50, %14, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  %55 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 208) #12
  %56 = bitcast i8* %55 to %"class.blink::VTTRegion"*
  call void @_ZN5blink9VTTRegionC1Ev(%"class.blink::VTTRegion"* %56) #12
  %57 = getelementptr inbounds i8, i8* %55, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  %61 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 11
  %62 = ptrtoint i8* %55 to i64
  %63 = bitcast %"class.blink::Member.37"* %61 to i64*
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %54
  %67 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #12
  br label %69

68:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  br label %69

69:                                               ; preds = %66, %54, %53, %68
  %70 = phi i1 [ false, %68 ], [ false, %53 ], [ true, %54 ], [ true, %66 ]
  ret i1 %70
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9VTTParser10RecoverCueERKN3WTF6StringE(%"class.blink::VTTParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9VTTParser14ResetCueValuesEv(%"class.blink::VTTParser"* %0)
  %3 = tail call i32 @_ZN5blink9VTTParser25CollectTimingsAndSettingsERKN3WTF6StringE(%"class.blink::VTTParser"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  ret i32 %3
}

declare void @_ZN5blink10VTTScannerC1ERKN3WTF6StringE(%"class.blink::VTTScanner"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9VTTParser16CollectTimeStampERNS_10VTTScannerERd(%"class.blink::VTTScanner"* dereferenceable(24), double* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  store i32 -1431655766, i32* %3, align 4
  %8 = call i32 @_ZN5blink10VTTScanner10ScanDigitsERj(%"class.blink::VTTScanner"* %0, i32* nonnull dereferenceable(4) %3) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %81, label %10

10:                                               ; preds = %2
  %11 = icmp ne i32 %8, 2
  %12 = load i32, i32* %3, align 4
  %13 = icmp ugt i32 %12, 59
  %14 = or i1 %11, %13
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #12
  store i32 -1431655766, i32* %4, align 4
  %16 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* %0, i8 signext 58) #12
  br i1 %16, label %17, label %79

17:                                               ; preds = %10
  %18 = call i32 @_ZN5blink10VTTScanner10ScanDigitsERj(%"class.blink::VTTScanner"* %0, i32* nonnull dereferenceable(4) %4) #12
  %19 = icmp eq i32 %18, 2
  br i1 %19, label %20, label %79

20:                                               ; preds = %17
  %21 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #12
  store i32 -1431655766, i32* %5, align 4
  br i1 %14, label %41, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %24, %26
  %28 = bitcast i8* %24 to i16*
  br i1 %27, label %46, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = load i8, i8* %24, align 1
  %35 = zext i8 %34 to i16
  br label %38

36:                                               ; preds = %29
  %37 = load i16, i16* %28, align 2
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i16 [ %35, %33 ], [ %37, %36 ]
  %40 = icmp eq i16 %39, 58
  br i1 %40, label %41, label %46

41:                                               ; preds = %38, %20
  %42 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* %0, i8 signext 58) #12
  br i1 %42, label %43, label %77

43:                                               ; preds = %41
  %44 = call i32 @_ZN5blink10VTTScanner10ScanDigitsERj(%"class.blink::VTTScanner"* %0, i32* nonnull dereferenceable(4) %5) #12
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %49, label %77

46:                                               ; preds = %22, %38
  %47 = load i32, i32* %4, align 4
  store i32 %47, i32* %5, align 4
  %48 = load i32, i32* %3, align 4
  store i32 %48, i32* %4, align 4
  store i32 0, i32* %3, align 4
  br label %49

49:                                               ; preds = %43, %46
  %50 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #12
  store i32 -1431655766, i32* %6, align 4
  %51 = call zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* %0, i8 signext 46) #12
  br i1 %51, label %52, label %75

52:                                               ; preds = %49
  %53 = call i32 @_ZN5blink10VTTScanner10ScanDigitsERj(%"class.blink::VTTScanner"* %0, i32* nonnull dereferenceable(4) %6) #12
  %54 = icmp eq i32 %53, 3
  br i1 %54, label %55, label %75

55:                                               ; preds = %52
  %56 = load i32, i32* %4, align 4
  %57 = icmp ugt i32 %56, 59
  %58 = load i32, i32* %5, align 4
  %59 = icmp ugt i32 %58, 59
  %60 = or i1 %57, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %55
  %62 = load i32, i32* %3, align 4
  %63 = uitofp i32 %62 to double
  %64 = fmul double %63, 6.000000e+01
  %65 = fmul double %64, 6.000000e+01
  %66 = uitofp i32 %56 to double
  %67 = fmul double %66, 6.000000e+01
  %68 = fadd double %67, %65
  %69 = uitofp i32 %58 to double
  %70 = fadd double %68, %69
  %71 = load i32, i32* %6, align 4
  %72 = uitofp i32 %71 to double
  %73 = fmul double %72, 1.000000e-03
  %74 = fadd double %73, %70
  store double %74, double* %1, align 8
  br label %75

75:                                               ; preds = %55, %49, %52, %61
  %76 = phi i1 [ true, %61 ], [ false, %52 ], [ false, %49 ], [ false, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #12
  br label %77

77:                                               ; preds = %41, %43, %75
  %78 = phi i1 [ %76, %75 ], [ false, %43 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #12
  br label %79

79:                                               ; preds = %10, %17, %77
  %80 = phi i1 [ %78, %77 ], [ false, %17 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #12
  br label %81

81:                                               ; preds = %2, %79
  %82 = phi i1 [ %80, %79 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  ret i1 %82
}

declare %"class.WTF::StringImpl"* @_ZN5blink10VTTScanner19RestOfInputAsStringEv(%"class.blink::VTTScanner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink14VTTTreeBuilder15BuildFromStringERKN3WTF6StringE(%"class.blink::VTTTreeBuilder"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::VTTTokenizer", align 8
  %5 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 3
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = tail call %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %6) #12
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %7, i64 0, i32 0
  br label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %7, i64 0, i32 0
  br i1 %16, label %18, label %41

18:                                               ; preds = %11, %13
  %19 = phi %"class.blink::ContainerNode"* [ %12, %11 ], [ %17, %13 ]
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %21 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #12
  %22 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %20, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %23 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %22, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %19, %"class.blink::Node"* %23) #12
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %40

40:                                               ; preds = %18, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %124

41:                                               ; preds = %13
  %42 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 1
  store %"class.blink::ContainerNode"* %17, %"class.blink::ContainerNode"** %42, align 8
  %43 = bitcast %"class.blink::VTTTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %43) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 104, i1 false)
  call void @_ZN5blink12VTTTokenizerC1ERKN3WTF6StringE(%"class.blink::VTTTokenizer"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  %44 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %83, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %44, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %53, align 8
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %54, i64 %55
  br label %57

57:                                               ; preds = %75, %52
  %58 = phi %"class.WTF::AtomicString"* [ %76, %75 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %74, %71, %57
  %76 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 1
  %77 = icmp eq %"class.WTF::AtomicString"* %76, %56
  br i1 %77, label %78, label %57

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  br label %79

79:                                               ; preds = %78, %48
  %80 = bitcast %"class.WTF::Vector.327"* %44 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast %"class.WTF::Vector.327"* %44 to i64*
  store atomic i64 0, i64* %82 monotonic, align 8
  store i32 0, i32* %45, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %81) #12
  br label %83

83:                                               ; preds = %41, %79
  %84 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0
  %85 = call zeroext i1 @_ZN5blink12VTTTokenizer9NextTokenERNS_8VTTTokenE(%"class.blink::VTTTokenizer"* nonnull %4, %"class.blink::VTTToken"* dereferenceable(32) %84) #12
  br i1 %85, label %86, label %89

86:                                               ; preds = %83, %86
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  call void @_ZN5blink14VTTTreeBuilder22ConstructTreeFromTokenERNS_8DocumentE(%"class.blink::VTTTreeBuilder"* %0, %"class.blink::Document"* dereferenceable(2848) %87)
  %88 = call zeroext i1 @_ZN5blink12VTTTokenizer9NextTokenERNS_8VTTTokenE(%"class.blink::VTTTokenizer"* nonnull %4, %"class.blink::VTTToken"* dereferenceable(32) %84) #12
  br i1 %88, label %86, label %89

89:                                               ; preds = %86, %83
  %90 = getelementptr inbounds %"class.blink::VTTTokenizer", %"class.blink::VTTTokenizer"* %4, i64 0, i32 0, i32 5
  %91 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %91, align 8
  %93 = icmp eq %"class.blink::SegmentedSubstring"* %92, null
  br i1 %93, label %106, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::SegmentedSubstring"* %92 to i8*
  %96 = getelementptr inbounds %"class.blink::VTTTokenizer", %"class.blink::VTTTokenizer"* %4, i64 0, i32 0, i32 5, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.blink::VTTTokenizer", %"class.blink::VTTTokenizer"* %4, i64 0, i32 0, i32 5, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %104, label %101

101:                                              ; preds = %94
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %90) #12
  %102 = bitcast %"class.WTF::Deque"* %90 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %94
  %105 = phi i8* [ %103, %101 ], [ %95, %94 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %105) #12
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %91, align 8
  br label %106

106:                                              ; preds = %104, %89
  %107 = getelementptr inbounds %"class.blink::VTTTokenizer", %"class.blink::VTTTokenizer"* %4, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #12
  br label %123

123:                                              ; preds = %106, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %43) #12
  br label %124

124:                                              ; preds = %123, %40
  ret %"class.blink::DocumentFragment"* %7
}

declare %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink12VTTTokenizerC1ERKN3WTF6StringE(%"class.blink::VTTTokenizer"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN5blink12VTTTokenizer9NextTokenERNS_8VTTTokenE(%"class.blink::VTTTokenizer"*, %"class.blink::VTTToken"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14VTTTreeBuilder22ConstructTreeFromTokenERNS_8DocumentE(%"class.blink::VTTTreeBuilder"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::VTTScanner", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::Document"*, align 8
  %6 = alloca double, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %266 [
    i32 1, label %11
    i32 2, label %17
    i32 3, label %141
    i32 4, label %217
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 1
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0, i32 1
  %15 = tail call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %1, %"class.WTF::String"* dereferenceable(8) %14) #12
  %16 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %15, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %13, %"class.blink::Node"* %16) #12
  br label %266

17:                                               ; preds = %2
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #12
  %19 = tail call fastcc i32 @_ZN5blinkL15TokenToNodeTypeERNS_8VTTTokenE(%"class.blink::VTTToken"* dereferenceable(32) %8)
  store i32 %19, i32* %4, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %140, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 1
  %23 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %22, align 8
  %24 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0
  %27 = bitcast %"class.blink::ContainerNode"* %23 to i1 (%"class.blink::Node"*)***
  %28 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %28, i64 39
  %30 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Node"* %26) #12
  br i1 %31, label %32, label %38

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 1, i32 0, i32 3
  %34 = bitcast %"class.blink::Member.511"* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, 30
  %37 = icmp ne i8 %36, 12
  br label %38

38:                                               ; preds = %25, %21, %32
  %39 = phi i1 [ %37, %32 ], [ true, %25 ], [ true, %21 ]
  %40 = icmp eq i32 %19, 7
  %41 = and i1 %39, %40
  br i1 %41, label %140, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::Document"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  store %"class.blink::Document"* %1, %"class.blink::Document"** %5, align 8
  %44 = call %"class.blink::VTTElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_10VTTElementEE4CallIJRNS_11VTTNodeTypeEPNS_8DocumentEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, %"class.blink::Document"** nonnull dereferenceable(8) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  %45 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 4
  %46 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %45, align 8
  call void @_ZN5blink10VTTElement8SetTrackEPNS_9TextTrackE(%"class.blink::VTTElement"* %44, %"class.blink::TextTrack"* %46) #12
  %47 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0, i32 3
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::VTTElement", %"class.blink::VTTElement"* %44, i64 0, i32 0
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %56, %"class.blink::QualifiedName"* dereferenceable(8) %57, %"class.WTF::AtomicString"* dereferenceable(8) %47) #12
  br label %58

58:                                               ; preds = %42, %55, %51
  %59 = load i32, i32* %4, align 4
  switch i32 %59, label %107 [
    i32 8, label %60
    i32 3, label %64
  ]

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::VTTElement", %"class.blink::VTTElement"* %44, i64 0, i32 0
  %62 = call dereferenceable(8) %"class.blink::QualifiedName"* @_ZN5blink10VTTElement18VoiceAttributeNameEv()
  %63 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0, i32 2
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %61, %"class.blink::QualifiedName"* dereferenceable(8) %62, %"class.WTF::AtomicString"* dereferenceable(8) %63) #12
  br label %107

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %100, label %72, !prof !2

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %65, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %73, align 8
  %75 = zext i32 %68 to i64
  %76 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 %75, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #12
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  call void @llvm.trap() #12
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %95, %80, %72
  %98 = load i32, i32* %67, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %67, align 4
  br label %101

100:                                              ; preds = %64
  call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.327"* %65, %"class.WTF::AtomicString"* dereferenceable(8) %66) #12
  br label %101

101:                                              ; preds = %97, %100
  %102 = getelementptr inbounds %"class.blink::VTTElement", %"class.blink::VTTElement"* %44, i64 0, i32 0
  %103 = call dereferenceable(8) %"class.blink::QualifiedName"* @_ZN5blink10VTTElement17LangAttributeNameEv()
  %104 = load i32, i32* %67, align 4
  %105 = add i32 %104, -1
  %106 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.327"* %65, i32 %105) #12
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %102, %"class.blink::QualifiedName"* dereferenceable(8) %103, %"class.WTF::AtomicString"* dereferenceable(8) %106) #12
  br label %107

107:                                              ; preds = %58, %101, %60
  %108 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %136, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2
  %113 = add i32 %109, -1
  %114 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.327"* %112, i32 %113) #12
  %115 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #12
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %123
  call void @llvm.trap() #12
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %111, %118, %133
  call void @_ZN5blink10VTTElement11SetLanguageEN3WTF12AtomicStringE(%"class.blink::VTTElement"* %44, %"class.WTF::StringImpl"* %116)
  br label %136

136:                                              ; preds = %135, %107
  %137 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %22, align 8
  %138 = getelementptr inbounds %"class.blink::VTTElement", %"class.blink::VTTElement"* %44, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %137, %"class.blink::Node"* %138) #12
  %139 = getelementptr inbounds %"class.blink::VTTElement", %"class.blink::VTTElement"* %44, i64 0, i32 0, i32 0
  store %"class.blink::ContainerNode"* %139, %"class.blink::ContainerNode"** %22, align 8
  br label %140

140:                                              ; preds = %136, %38, %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  br label %266

141:                                              ; preds = %2
  %142 = tail call fastcc i32 @_ZN5blinkL15TokenToNodeTypeERNS_8VTTTokenE(%"class.blink::VTTToken"* dereferenceable(32) %8)
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %266, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 1
  %146 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %145, align 8
  %147 = icmp eq %"class.blink::ContainerNode"* %146, null
  br i1 %147, label %266, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %146, i64 0, i32 0
  %150 = bitcast %"class.blink::ContainerNode"* %146 to i1 (%"class.blink::Node"*)***
  %151 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %151, i64 39
  %153 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::Node"* %149) #12
  br i1 %154, label %155, label %266

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %146, i64 1, i32 0, i32 3
  %157 = bitcast %"class.blink::Member.511"* %156 to i8*
  %158 = load i8, i8* %157, align 8
  %159 = lshr i8 %158, 1
  %160 = and i8 %159, 15
  %161 = zext i8 %160 to i32
  %162 = icmp eq i32 %142, %161
  br i1 %162, label %175, label %163

163:                                              ; preds = %155
  %164 = icmp eq i8 %160, 7
  %165 = icmp eq i32 %142, 6
  %166 = and i1 %165, %164
  br i1 %166, label %167, label %266

167:                                              ; preds = %163
  %168 = bitcast %"class.blink::ContainerNode"** %145 to %"class.blink::Node"**
  %169 = load %"class.blink::Node"*, %"class.blink::Node"** %168, align 8
  %170 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %169) #12
  %171 = icmp eq %"class.blink::ContainerNode"* %170, null
  br i1 %171, label %209, label %172

172:                                              ; preds = %167
  %173 = load %"class.blink::Node"*, %"class.blink::Node"** %168, align 8
  %174 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %173) #12
  store %"class.blink::ContainerNode"* %174, %"class.blink::ContainerNode"** %145, align 8
  br label %209

175:                                              ; preds = %155
  %176 = icmp eq i32 %142, 3
  br i1 %176, label %177, label %209

177:                                              ; preds = %175
  %178 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, -1
  %181 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %182 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %181, align 8
  %183 = zext i32 %179 to i64
  %184 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %182, i64 %183
  %185 = zext i32 %180 to i64
  %186 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %182, i64 %185
  br label %187

187:                                              ; preds = %205, %177
  %188 = phi %"class.WTF::AtomicString"* [ %206, %205 ], [ %186, %177 ]
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #12
  br label %205

205:                                              ; preds = %204, %201, %187
  %206 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %188, i64 1
  %207 = icmp eq %"class.WTF::AtomicString"* %206, %184
  br i1 %207, label %208, label %187

208:                                              ; preds = %205
  store i32 %180, i32* %178, align 4
  br label %209

209:                                              ; preds = %172, %167, %208, %175
  %210 = bitcast %"class.blink::ContainerNode"** %145 to %"class.blink::Node"**
  %211 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  %212 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %211) #12
  %213 = icmp eq %"class.blink::ContainerNode"* %212, null
  br i1 %213, label %266, label %214

214:                                              ; preds = %209
  %215 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  %216 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %215) #12
  store %"class.blink::ContainerNode"* %216, %"class.blink::ContainerNode"** %145, align 8
  br label %266

217:                                              ; preds = %2
  %218 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %219 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 0, i32 1
  %220 = bitcast %"class.blink::VTTScanner"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %220) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %220, i8 -86, i64 24, i1 false) #12
  call void @_ZN5blink10VTTScannerC1ERKN3WTF6StringE(%"class.blink::VTTScanner"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %219) #12
  %221 = call zeroext i1 @_ZN5blink9VTTParser16CollectTimeStampERNS_10VTTScannerERd(%"class.blink::VTTScanner"* nonnull dereferenceable(24) %3, double* nonnull dereferenceable(8) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %220) #12
  br i1 %221, label %222, label %265

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %0, i64 0, i32 1
  %224 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %223, align 8
  %225 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #12
  %226 = load double, double* %6, align 8
  %227 = fmul double %226, 1.000000e+03
  %228 = fcmp ugt double %227, 0.000000e+00
  br i1 %228, label %229, label %233

229:                                              ; preds = %222
  %230 = fcmp ult double %227, 0x43F0000000000000
  br i1 %230, label %231, label %233

231:                                              ; preds = %229
  %232 = fptoui double %227 to i64
  br label %233

233:                                              ; preds = %222, %229, %231
  %234 = phi i64 [ %232, %231 ], [ 0, %222 ], [ -1, %229 ]
  %235 = urem i64 %234, 1000
  %236 = trunc i64 %235 to i32
  %237 = udiv i64 %234, 1000
  %238 = urem i64 %237, 60
  %239 = trunc i64 %238 to i32
  %240 = udiv i64 %234, 60000
  %241 = urem i64 %240, 60
  %242 = trunc i64 %241 to i32
  %243 = udiv i64 %234, 3600000
  %244 = trunc i64 %243 to i32
  %245 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i32 %244, i32 %242, i32 %239, i32 %236) #12
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %245, %"class.WTF::StringImpl"** %246, align 8
  %247 = call %"class.blink::ProcessingInstruction"* @_ZN5blink25MakeGarbageCollectedTraitINS_21ProcessingInstructionEE4CallIJRNS_8DocumentERA10_KcN3WTF6StringEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %1, [10 x i8]* nonnull dereferenceable(10) @.str.6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %248 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %247, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %224, %"class.blink::Node"* %248) #12
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %233
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #12
  br label %264

264:                                              ; preds = %233, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #12
  br label %265

265:                                              ; preds = %264, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #12
  br label %266

266:                                              ; preds = %148, %144, %141, %163, %209, %214, %2, %265, %140, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink9VTTParser33CreateDocumentFragmentFromCueTextERNS_8DocumentERKN3WTF6StringEPNS_9TextTrackE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), %"class.blink::TextTrack"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::VTTTreeBuilder", align 8
  %5 = bitcast %"class.blink::VTTTreeBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #12
  %6 = bitcast %"class.blink::VTTTreeBuilder"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 3
  %10 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #12
  store %"class.blink::Document"* %0, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 4
  store %"class.blink::TextTrack"* %2, %"class.blink::TextTrack"** %11, align 8
  %12 = call %"class.blink::DocumentFragment"* @_ZN5blink14VTTTreeBuilder15BuildFromStringERKN3WTF6StringE(%"class.blink::VTTTreeBuilder"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %1)
  %13 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %14, align 8
  %16 = icmp eq %"class.WTF::AtomicString"* %15, null
  br i1 %16, label %51, label %17, !prof !4

17:                                               ; preds = %3
  %18 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  %19 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 2, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %49, label %22, !prof !2

22:                                               ; preds = %17
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 %23
  br label %25

25:                                               ; preds = %43, %22
  %26 = phi %"class.WTF::AtomicString"* [ %44, %43 ], [ %15, %22 ]
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %42, %39, %25
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %26, i64 1
  %45 = icmp eq %"class.WTF::AtomicString"* %44, %24
  br i1 %45, label %46, label %25

46:                                               ; preds = %43
  store i32 0, i32* %19, align 4
  %47 = bitcast %"class.WTF::Vector.327"* %13 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %17
  %50 = phi i8* [ %48, %46 ], [ %18, %17 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %14, align 8
  br label %51

51:                                               ; preds = %3, %49
  %52 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #12
  br label %68

68:                                               ; preds = %67, %64, %51
  %69 = getelementptr inbounds %"class.blink::VTTTreeBuilder", %"class.blink::VTTTreeBuilder"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #12
  br label %85

85:                                               ; preds = %84, %81, %68
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #12
  br label %101

101:                                              ; preds = %85, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #12
  ret %"class.blink::DocumentFragment"* %12
}

declare void @_ZN5blink12TextTrackCue5setIdERKN3WTF12AtomicStringE(%"class.blink::TextTrackCue"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink6VTTCue13ParseSettingsEPKNS_11HeapHashMapIN3WTF6StringENS_6MemberINS_9VTTRegionEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEERKS3_(%"class.blink::VTTCue"*, %"class.blink::HeapHashMap.504"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9VTTParser16CollectTimeStampERKN3WTF6StringERd(%"class.WTF::String"* dereferenceable(8), double* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::VTTScanner", align 8
  %4 = bitcast %"class.blink::VTTScanner"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = bitcast %"class.blink::VTTScanner"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10VTTScannerC1ERKN3WTF6StringE(%"class.blink::VTTScanner"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %0) #12
  %6 = call zeroext i1 @_ZN5blink9VTTParser16CollectTimeStampERNS_10VTTScannerERd(%"class.blink::VTTScanner"* nonnull dereferenceable(24) %3, double* dereferenceable(8) %1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret i1 %6
}

declare i32 @_ZN5blink10VTTScanner10ScanDigitsERj(%"class.blink::VTTScanner"*, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZN5blinkL15TokenToNodeTypeERNS_8VTTTokenE(%"class.blink::VTTToken"* nocapture readonly dereferenceable(32)) unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.blink::VTTToken", %"class.blink::VTTToken"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %248, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %248 [
    i32 1, label %8
    i32 2, label %88
    i32 4, label %120
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %12, label %18, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.WTF::StringImpl"* %13 to i8*
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i16
  br label %21

18:                                               ; preds = %8
  %19 = bitcast %"class.WTF::StringImpl"* %13 to i16*
  %20 = load i16, i16* %19, align 2
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi i16 [ %17, %14 ], [ %20, %18 ]
  %23 = icmp eq i16 %22, 99
  br i1 %23, label %249, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %28, label %34, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::StringImpl"* %29 to i8*
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  br label %37

34:                                               ; preds = %24
  %35 = bitcast %"class.WTF::StringImpl"* %29 to i16*
  %36 = load i16, i16* %35, align 2
  br label %37

37:                                               ; preds = %30, %34
  %38 = phi i16 [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i16 %38, 118
  br i1 %39, label %249, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %44, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.WTF::StringImpl"* %45 to i8*
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %53

50:                                               ; preds = %40
  %51 = bitcast %"class.WTF::StringImpl"* %45 to i16*
  %52 = load i16, i16* %51, align 2
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi i16 [ %49, %46 ], [ %52, %50 ]
  %55 = icmp eq i16 %54, 98
  br i1 %55, label %249, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %60, label %66, label %62

62:                                               ; preds = %56
  %63 = bitcast %"class.WTF::StringImpl"* %61 to i8*
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i16
  br label %69

66:                                               ; preds = %56
  %67 = bitcast %"class.WTF::StringImpl"* %61 to i16*
  %68 = load i16, i16* %67, align 2
  br label %69

69:                                               ; preds = %62, %66
  %70 = phi i16 [ %65, %62 ], [ %68, %66 ]
  %71 = icmp eq i16 %70, 105
  br i1 %71, label %249, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %76, label %82, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.WTF::StringImpl"* %77 to i8*
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  br label %85

82:                                               ; preds = %72
  %83 = bitcast %"class.WTF::StringImpl"* %77 to i16*
  %84 = load i16, i16* %83, align 2
  br label %85

85:                                               ; preds = %78, %82
  %86 = phi i16 [ %81, %78 ], [ %84, %82 ]
  %87 = icmp eq i16 %86, 117
  br i1 %87, label %249, label %248

88:                                               ; preds = %5
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %92, label %98, label %94

94:                                               ; preds = %88
  %95 = bitcast %"class.WTF::StringImpl"* %93 to i8*
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  br label %101

98:                                               ; preds = %88
  %99 = bitcast %"class.WTF::StringImpl"* %93 to i16*
  %100 = load i16, i16* %99, align 2
  br label %101

101:                                              ; preds = %94, %98
  %102 = phi i16 [ %97, %94 ], [ %100, %98 ]
  %103 = icmp eq i16 %102, 114
  br i1 %103, label %104, label %248

104:                                              ; preds = %101
  %105 = load atomic i32, i32* %89 monotonic, align 4
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.WTF::StringImpl"* %93 to i8*
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i16
  br label %117

113:                                              ; preds = %104
  %114 = bitcast %"class.WTF::StringImpl"* %93 to i16*
  %115 = getelementptr inbounds i16, i16* %114, i64 1
  %116 = load i16, i16* %115, align 2
  br label %117

117:                                              ; preds = %108, %113
  %118 = phi i16 [ %112, %108 ], [ %116, %113 ]
  %119 = icmp eq i16 %118, 116
  br i1 %119, label %249, label %248

120:                                              ; preds = %5
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %124, label %130, label %126

126:                                              ; preds = %120
  %127 = bitcast %"class.WTF::StringImpl"* %125 to i8*
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  br label %133

130:                                              ; preds = %120
  %131 = bitcast %"class.WTF::StringImpl"* %125 to i16*
  %132 = load i16, i16* %131, align 2
  br label %133

133:                                              ; preds = %126, %130
  %134 = phi i16 [ %129, %126 ], [ %132, %130 ]
  %135 = icmp eq i16 %134, 114
  br i1 %135, label %136, label %184

136:                                              ; preds = %133
  %137 = load atomic i32, i32* %121 monotonic, align 4
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = bitcast %"class.WTF::StringImpl"* %125 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  br label %149

145:                                              ; preds = %136
  %146 = bitcast %"class.WTF::StringImpl"* %125 to i16*
  %147 = getelementptr inbounds i16, i16* %146, i64 1
  %148 = load i16, i16* %147, align 2
  br label %149

149:                                              ; preds = %140, %145
  %150 = phi i16 [ %144, %140 ], [ %148, %145 ]
  %151 = icmp eq i16 %150, 117
  br i1 %151, label %152, label %184

152:                                              ; preds = %149
  %153 = load atomic i32, i32* %121 monotonic, align 4
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %152
  %157 = bitcast %"class.WTF::StringImpl"* %125 to i8*
  %158 = getelementptr inbounds i8, i8* %157, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i16
  br label %165

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1, i32 1
  %163 = bitcast i32* %162 to i16*
  %164 = load i16, i16* %163, align 2
  br label %165

165:                                              ; preds = %156, %161
  %166 = phi i16 [ %160, %156 ], [ %164, %161 ]
  %167 = icmp eq i16 %166, 98
  br i1 %167, label %168, label %184

168:                                              ; preds = %165
  %169 = load atomic i32, i32* %121 monotonic, align 4
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %177, label %172

172:                                              ; preds = %168
  %173 = bitcast %"class.WTF::StringImpl"* %125 to i8*
  %174 = getelementptr inbounds i8, i8* %173, i64 3
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i16
  br label %181

177:                                              ; preds = %168
  %178 = bitcast %"class.WTF::StringImpl"* %125 to i16*
  %179 = getelementptr inbounds i16, i16* %178, i64 3
  %180 = load i16, i16* %179, align 2
  br label %181

181:                                              ; preds = %172, %177
  %182 = phi i16 [ %176, %172 ], [ %180, %177 ]
  %183 = icmp eq i16 %182, 121
  br i1 %183, label %249, label %184

184:                                              ; preds = %181, %165, %149, %133
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %188, label %194, label %190

190:                                              ; preds = %184
  %191 = bitcast %"class.WTF::StringImpl"* %189 to i8*
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i16
  br label %197

194:                                              ; preds = %184
  %195 = bitcast %"class.WTF::StringImpl"* %189 to i16*
  %196 = load i16, i16* %195, align 2
  br label %197

197:                                              ; preds = %190, %194
  %198 = phi i16 [ %193, %190 ], [ %196, %194 ]
  %199 = icmp eq i16 %198, 108
  br i1 %199, label %200, label %248

200:                                              ; preds = %197
  %201 = load atomic i32, i32* %185 monotonic, align 4
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %209, label %204

204:                                              ; preds = %200
  %205 = bitcast %"class.WTF::StringImpl"* %189 to i8*
  %206 = getelementptr inbounds i8, i8* %205, i64 1
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  br label %213

209:                                              ; preds = %200
  %210 = bitcast %"class.WTF::StringImpl"* %189 to i16*
  %211 = getelementptr inbounds i16, i16* %210, i64 1
  %212 = load i16, i16* %211, align 2
  br label %213

213:                                              ; preds = %204, %209
  %214 = phi i16 [ %208, %204 ], [ %212, %209 ]
  %215 = icmp eq i16 %214, 97
  br i1 %215, label %216, label %248

216:                                              ; preds = %213
  %217 = load atomic i32, i32* %185 monotonic, align 4
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %216
  %221 = bitcast %"class.WTF::StringImpl"* %189 to i8*
  %222 = getelementptr inbounds i8, i8* %221, i64 2
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i16
  br label %229

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1, i32 1
  %227 = bitcast i32* %226 to i16*
  %228 = load i16, i16* %227, align 2
  br label %229

229:                                              ; preds = %220, %225
  %230 = phi i16 [ %224, %220 ], [ %228, %225 ]
  %231 = icmp eq i16 %230, 110
  br i1 %231, label %232, label %248

232:                                              ; preds = %229
  %233 = load atomic i32, i32* %185 monotonic, align 4
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %232
  %237 = bitcast %"class.WTF::StringImpl"* %189 to i8*
  %238 = getelementptr inbounds i8, i8* %237, i64 3
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i16
  br label %245

241:                                              ; preds = %232
  %242 = bitcast %"class.WTF::StringImpl"* %189 to i16*
  %243 = getelementptr inbounds i16, i16* %242, i64 3
  %244 = load i16, i16* %243, align 2
  br label %245

245:                                              ; preds = %236, %241
  %246 = phi i16 [ %240, %236 ], [ %244, %241 ]
  %247 = icmp eq i16 %246, 103
  br i1 %247, label %249, label %248

248:                                              ; preds = %1, %197, %213, %229, %245, %101, %117, %85, %5
  br label %249

249:                                              ; preds = %245, %181, %117, %85, %69, %53, %37, %21, %248
  %250 = phi i32 [ 0, %248 ], [ 1, %21 ], [ 8, %37 ], [ 4, %53 ], [ 2, %69 ], [ 5, %85 ], [ 7, %117 ], [ 6, %181 ], [ 3, %245 ]
  ret i32 %250
}

declare void @_ZN5blink10VTTElement8SetTrackEPNS_9TextTrackE(%"class.blink::VTTElement"*, %"class.blink::TextTrack"*) local_unnamed_addr #2

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZN5blink10VTTElement18VoiceAttributeNameEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"class.WTF::AtomicString", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %27, !prof !5

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %4
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %9 = bitcast %"class.WTF::AtomicString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5) #12
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr to %"class.blink::QualifiedName"*), %"class.WTF::AtomicString"* dereferenceable(8) %8, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %8) #12
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #12
  br label %26

26:                                               ; preds = %7, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr) #12
  br label %27

27:                                               ; preds = %4, %26, %0
  ret %"class.blink::QualifiedName"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink10VTTElement18VoiceAttributeNameEvE12s_voice_attr to %"class.blink::QualifiedName"*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZN5blink10VTTElement17LangAttributeNameEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"class.WTF::AtomicString", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %27, !prof !5

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %4
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %9 = bitcast %"class.WTF::AtomicString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #12
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr to %"class.blink::QualifiedName"*), %"class.WTF::AtomicString"* dereferenceable(8) %8, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %8) #12
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #12
  br label %26

26:                                               ; preds = %7, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr) #12
  br label %27

27:                                               ; preds = %4, %26, %0
  ret %"class.blink::QualifiedName"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink10VTTElement17LangAttributeNameEvE12s_voice_attr to %"class.blink::QualifiedName"*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10VTTElement11SetLanguageEN3WTF12AtomicStringE(%"class.blink::VTTElement"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::VTTElement", %"class.blink::VTTElement"* %0, i64 0, i32 3
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #12
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #12
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %22, %37, %40
  br i1 %4, label %55, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %55

55:                                               ; preds = %41, %51, %54
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9VTTParser5TraceEPNS_7VisitorE(%"class.blink::VTTParser"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::VTTParser"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #12
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 11
  %14 = bitcast %"class.blink::Member.37"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9VTTRegionEE5TraceEPNS_7VisitorEPKv) #12
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 12
  %25 = bitcast %"class.blink::Member.39"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %94, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = and i64 %26, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4138
  %33 = load i8, i8* %32, align 2
  %34 = icmp eq i8 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %31, i64 4160
  br label %75

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %31, i64 4096
  %39 = bitcast i8* %38 to %"class.blink::NormalPage"*
  %40 = getelementptr inbounds i8, i8* %31, i64 4400
  %41 = bitcast i8* %40 to i8**
  %42 = bitcast i8* %40 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = sub i64 %26, %43
  %45 = lshr i64 %44, 3
  %46 = lshr i64 %44, 6
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %39, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = trunc i64 %45 to i32
  %50 = and i32 %49, 7
  %51 = shl i32 2, %50
  %52 = trunc i32 %51 to i8
  %53 = add i8 %52, -1
  %54 = and i8 %53, %48
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %37, %56
  %57 = phi i64 [ %58, %56 ], [ %46, %37 ]
  %58 = add i64 %57, -1
  %59 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %39, i64 0, i32 2, i32 0, i32 1, i64 %58
  %60 = load atomic i8, i8* %59 acquire, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %56, label %62

62:                                               ; preds = %56, %37
  %63 = phi i64 [ %46, %37 ], [ %58, %56 ]
  %64 = phi i8 [ %54, %37 ], [ %60, %56 ]
  %65 = zext i8 %64 to i32
  %66 = tail call i32 @llvm.ctlz.i32(i32 %65, i1 true) #12, !range !6
  %67 = add nsw i32 %66, -24
  %68 = shl i64 %63, 3
  %69 = or i64 %68, 7
  %70 = sext i32 %67 to i64
  %71 = sub i64 %69, %70
  %72 = shl i64 %71, 3
  %73 = load i8*, i8** %41, align 16
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  br label %75

75:                                               ; preds = %62, %35
  %76 = phi i8* [ %36, %35 ], [ %74, %62 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 acquire, align 2
  %81 = lshr i16 %80, 2
  %82 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %83 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %82, i64 0, i32 0
  %84 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %83, align 8
  %85 = zext i16 %81 to i64
  %86 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %84, i64 %85
  %87 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %87, i64 0, i32 0
  %89 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %88, align 8
  %90 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, i64 5
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, align 8
  tail call void %93(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* %77, void (%"class.blink::Visitor"*, i8*)* %89) #12
  br label %94

94:                                               ; preds = %23, %75
  %95 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 14
  %96 = bitcast %"class.blink::HeapVector.496"* %95 to i64*
  %97 = load atomic i64, i64* %96 monotonic, align 8
  %98 = icmp eq i64 %97, 0
  %99 = bitcast %"class.blink::HeapVector.496"* %95 to i8**
  %100 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %101 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %101, i64 11
  %103 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %1, i8** %99) #12
  br i1 %98, label %110, label %104

104:                                              ; preds = %94
  %105 = inttoptr i64 %97 to i8*
  %106 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %107 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, i64 5
  %109 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %108, align 8
  tail call void %109(%"class.blink::Visitor"* %1, i8* nonnull %105, i8* nonnull %105, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %110

110:                                              ; preds = %94, %104
  %111 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 17
  %112 = bitcast %"class.blink::HeapHashMap.504"* %111 to i64*
  %113 = load atomic i64, i64* %112 monotonic, align 8
  %114 = bitcast %"class.blink::HeapHashMap.504"* %111 to i8**
  %115 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %100, align 8
  %116 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %115, i64 11
  %117 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %116, align 8
  tail call void %117(%"class.blink::Visitor"* %1, i8** %114) #12
  %118 = icmp eq i64 %113, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %110
  %120 = inttoptr i64 %113 to i8*
  %121 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %122 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, i64 5
  %124 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %123, align 8
  tail call void %124(%"class.blink::Visitor"* %1, i8* nonnull %120, i8* nonnull %120, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #12
  br label %125

125:                                              ; preds = %110, %119
  %126 = getelementptr inbounds %"class.blink::VTTParser", %"class.blink::VTTParser"* %0, i64 0, i32 13
  %127 = bitcast %"class.blink::HeapVector"* %126 to i64*
  %128 = load atomic i64, i64* %127 monotonic, align 8
  %129 = icmp eq i64 %128, 0
  %130 = bitcast %"class.blink::HeapVector"* %126 to i8**
  %131 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %100, align 8
  %132 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %131, i64 11
  %133 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %132, align 8
  tail call void %133(%"class.blink::Visitor"* %1, i8** %130) #12
  br i1 %129, label %140, label %134

134:                                              ; preds = %125
  %135 = inttoptr i64 %128 to i8*
  %136 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %137 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %137, i64 5
  %139 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %138, align 8
  tail call void %139(%"class.blink::Visitor"* %1, i8* nonnull %135, i8* nonnull %135, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %140

140:                                              ; preds = %125, %134
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"*, %"class.blink::SegmentedString"* dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #12
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #12
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.3* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.3* %16 to %"class.WTF::Vector.8"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.8"* %30, i16* nonnull dereferenceable(2) %3) #12
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %41, i8* nonnull dereferenceable(1) %4) #12
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.8"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.8"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.8"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.8"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.8"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.8"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.9"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.9"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.9"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.4"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.4"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.4"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink9VTTRegionC1Ev(%"class.blink::VTTRegion"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink6VTTCueC1ERNS_8DocumentEddRKN3WTF6StringE(%"class.blink::VTTCue"*, %"class.blink::Document"* dereferenceable(2848), double, double, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.327"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %8 = icmp ugt %"class.WTF::AtomicString"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::AtomicString"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::AtomicString"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.327"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::AtomicString"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::AtomicString"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.327"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.327"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %56 = ptrtoint %"class.WTF::AtomicString"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::AtomicString"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.327"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::AtomicString"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::AtomicString"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.327"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.327"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::AtomicString"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::AtomicString"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::AtomicString"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::AtomicString"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %101, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %100, i64 %103, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #12
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #12
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoderOptions"* dereferenceable(152)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"struct.blink::Referrer"* dereferenceable(16), %"class.WTF::TextEncoding"* dereferenceable(8), i8 zeroext, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #12
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #12
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #12
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #12
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::StyleRuleImport"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"*
  tail call void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleSheetContents"*
  tail call void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"*) unnamed_addr #4

declare void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSImportRule"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.43"*, %"class.blink::CSSStyleSheet"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.43"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSStyleSheet"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.46"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.43"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %8, align 8
  %10 = icmp eq %"class.blink::Member.46"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.43"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %8, align 8
  %26 = icmp eq %"class.blink::Member.46"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.46"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.43"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.43"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.43"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.43"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.46"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.46"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.43"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.43"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.43"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.43", %"class.WTF::Vector.43"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.18, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.46"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.46"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.510"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.508"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Member.37"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.510"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.508"* %0, %"struct.WTF::KeyValuePair.510"* null)
  %9 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.510"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.510"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.510"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.510"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.510"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.510"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.510"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.510"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.510"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %79, i64 0, i32 1
  %120 = bitcast %"class.blink::Member.37"* %2 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.blink::Member.37"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = inttoptr i64 %121 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #12
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #12
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #12
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9VTTRegionEE5TraceEPNS_7VisitorEPKv) #12
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.508"* %0, %"struct.WTF::KeyValuePair.510"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.510"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.510"*, i8 } undef, %"struct.WTF::KeyValuePair.510"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.510"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.510"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.508"*, %"struct.WTF::KeyValuePair.510"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.508"* %0, i32 %35, %"struct.WTF::KeyValuePair.510"* %1, i8* nonnull dereferenceable(1) %4) #12
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #12
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.510"*
  %44 = call %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.508"* %0, %"struct.WTF::KeyValuePair.510"* %43, i32 %40, %"struct.WTF::KeyValuePair.510"* %1) #12
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.510"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.510"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.508"*, i32, %"struct.WTF::KeyValuePair.510"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.510"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.510"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #12
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #12
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.510"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.510"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.508"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #12
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.510"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.508"* %0, %"struct.WTF::KeyValuePair.510"* %42, i32 %1, %"struct.WTF::KeyValuePair.510"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.510"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.510"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.510"* %64, %"struct.WTF::KeyValuePair.510"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.510"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.510"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #12
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.510"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.37"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.37"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.510"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.510"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.510"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.508"*, %"struct.WTF::KeyValuePair.510"*, i32, %"struct.WTF::KeyValuePair.510"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.508", align 8
  %6 = bitcast %"class.WTF::HashTable.508"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.508"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.510"* %1, %"struct.WTF::KeyValuePair.510"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.510"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.510"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.508"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.510"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.508"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #12
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.508"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.508"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #12
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.510"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.510"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.37"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #12
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.510"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.510"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.510"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.510"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.510"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.508"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #12
  %101 = extractvalue { %"struct.WTF::KeyValuePair.510"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.510"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.37"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.37"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.510"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.510"* %101, %"struct.WTF::KeyValuePair.510"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.510"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.510"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.23, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_9VTTRegionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_9VTTRegionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([378 x i8], [378 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #12
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #12
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_9VTTRegionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.510"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9VTTRegionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.510"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.510"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.37"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9VTTRegionEE5TraceEPNS_7VisitorEPKv) #12
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.37"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9VTTRegionEE5TraceEPNS_7VisitorEPKv) #12
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.510"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9VTTRegionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.508"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.510"*, %"struct.WTF::KeyValuePair.510"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.508", %"class.WTF::HashTable.508"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.510"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.510"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.510"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.510"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.510"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.510"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.510"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.510"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.510"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.510"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.510", %"struct.WTF::KeyValuePair.510"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.510"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.510"*, i8 } undef, %"struct.WTF::KeyValuePair.510"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.510"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.510"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10VTTScanner4ScanEPKhj(%"class.blink::VTTScanner"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_6VTTCueEEEvOT_(%"class.WTF::Vector.499"*, %"class.blink::VTTCue"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.499"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.502"*, %"class.blink::Member.502"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.502", %"class.blink::Member.502"* %16, i64 %18
  %20 = bitcast %"class.blink::VTTCue"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.502"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.499"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.502"*, %"class.blink::Member.502"** %8, align 8
  %10 = icmp eq %"class.blink::Member.502"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12TextTrackCueEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1097"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1097"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.499"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1097", %"class.blink::HeapVectorBacking.1097"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.502"*, %"class.blink::Member.502"** %8, align 8
  %26 = icmp eq %"class.blink::Member.502"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.502"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.499"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12TextTrackCueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.499"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.499"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.499"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12TextTrackCueEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1097"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1097"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.502"*, %"class.blink::Member.502"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1097"* %17, null
  %23 = icmp ne %"class.blink::Member.502"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.502"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.499"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1097", %"class.blink::HeapVectorBacking.1097"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.499"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.499"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.499", %"class.WTF::Vector.499"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1097", %"class.blink::HeapVectorBacking.1097"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12TextTrackCueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.18, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1097"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1097"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1097"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([165 x i8], [165 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12TextTrackCueEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.502"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.502", %"class.blink::Member.502"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.502"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12TextTrackCueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TextTrackCue"*
  %4 = bitcast i8* %1 to void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)**, void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)*, void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)*, void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::TextTrackCue"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::VTTElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_10VTTElementEE4CallIJRNS_11VTTNodeTypeEPNS_8DocumentEEEEPS1_DpOT_(i32* dereferenceable(4), %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 136
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 136
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -136
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 68, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 136, i64 %48) #12
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::VTTElement"*
  %53 = load i32, i32* %0, align 4
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %1, align 8
  tail call void @_ZN5blink10VTTElementC1ENS_11VTTNodeTypeEPNS_8DocumentE(%"class.blink::VTTElement"* %52, i32 %53, %"class.blink::Document"* %54) #12
  %55 = getelementptr inbounds i8, i8* %51, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  ret %"class.blink::VTTElement"* %52
}

declare void @_ZN5blink10VTTElementC1ENS_11VTTNodeTypeEPNS_8DocumentE(%"class.blink::VTTElement"*, i32, %"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.327"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.327", %"class.WTF::Vector.327"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ProcessingInstruction"* @_ZN5blink25MakeGarbageCollectedTraitINS_21ProcessingInstructionEE4CallIJRNS_8DocumentERA10_KcN3WTF6StringEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848), [10 x i8]* dereferenceable(10), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %9, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %5, i64 0, i32 19, i64 6
  %14 = bitcast %"class.blink::BaseArena"** %13 to %"class.blink::NormalPageArena"**
  %15 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 184
  br i1 %18, label %49, label %19, !prof !2

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 184
  store i8* %22, i8** %20, align 8
  %23 = add i64 %17, -184
  store i64 %23, i64* %16, align 8
  %24 = bitcast i8* %21 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 4
  %26 = bitcast i8* %25 to i16*
  %27 = trunc i32 %12 to i16
  %28 = shl i16 %27, 2
  store atomic i16 %28, i16* %26 monotonic, align 2
  %29 = getelementptr inbounds i8, i8* %21, i64 6
  %30 = bitcast i8* %29 to i16*
  store i16 92, i16* %30, align 2
  %31 = ptrtoint i8* %21 to i64
  %32 = and i64 %31, -131072
  %33 = inttoptr i64 %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 4400
  %35 = bitcast i8* %34 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %36 = bitcast i8* %34 to i64*
  %37 = load i64, i64* %36, align 16
  %38 = sub i64 %31, %37
  %39 = lshr i64 %38, 3
  %40 = lshr i64 %38, 6
  %41 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %35, i64 0, i32 0, i32 1, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 7
  %45 = shl i32 1, %44
  %46 = trunc i32 %45 to i8
  %47 = or i8 %42, %46
  store atomic i8 %47, i8* %41 release, align 1
  %48 = getelementptr inbounds i8, i8* %21, i64 8
  br label %52

49:                                               ; preds = %11
  %50 = zext i32 %12 to i64
  %51 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %15, i64 184, i64 %50) #12
  br label %52

52:                                               ; preds = %19, %49
  %53 = phi i8* [ %48, %19 ], [ %51, %49 ]
  %54 = bitcast i8* %53 to %"class.blink::ProcessingInstruction"*
  %55 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %57 = icmp eq [10 x i8]* %1, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  %59 = tail call i64 @strlen(i8* nonnull %56) #13
  br label %60

60:                                               ; preds = %52, %58
  %61 = phi i64 [ %59, %58 ], [ 0, %52 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %56, i64 %61) #12
  call void @_ZN5blink21ProcessingInstructionC1ERNS_8DocumentERKN3WTF6StringES6_(%"class.blink::ProcessingInstruction"* %54, %"class.blink::Document"* dereferenceable(2848) %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %2) #12
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %78

78:                                               ; preds = %60, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %79 = getelementptr inbounds i8, i8* %53, i64 -4
  %80 = bitcast i8* %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = or i16 %81, 1
  store atomic i16 %82, i16* %80 release, align 2
  ret %"class.blink::ProcessingInstruction"* %54
}

declare void @_ZN5blink21ProcessingInstructionC1ERNS_8DocumentERKN3WTF6StringES6_(%"class.blink::ProcessingInstruction"*, %"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9VTTRegionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::VTTRegion"*
  tail call void @_ZNK5blink9VTTRegion5TraceEPNS_7VisitorE(%"class.blink::VTTRegion"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink9VTTRegion5TraceEPNS_7VisitorE(%"class.blink::VTTRegion"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{i32 24, i32 33}
