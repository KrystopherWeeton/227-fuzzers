; ModuleID = '../../third_party/blink/renderer/core/dom/slot_assignment_engine.cc'
source_filename = "../../third_party/blink/renderer/core/dom/slot_assignment_engine.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.395", i32, [4 x i8], %"class.std::__1::unique_ptr.531", %"class.std::__1::unique_ptr.531", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.542", %"class.std::__1::unique_ptr.548", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.566", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.573", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.410", %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.422", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.481", %"class.std::__1::unique_ptr.488", %"class.std::__1::unique_ptr.511", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.431" = type { %"struct.std::__1::__atomic_base.432" }
%"struct.std::__1::__atomic_base.432" = type { %"struct.std::__1::__atomic_base.433" }
%"struct.std::__1::__atomic_base.433" = type { %"struct.std::__1::__cxx_atomic_impl.434" }
%"struct.std::__1::__cxx_atomic_impl.434" = type { %"struct.std::__1::__cxx_atomic_base_impl.435" }
%"struct.std::__1::__cxx_atomic_base_impl.435" = type { i64 }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::Worklist.442"* }
%"class.blink::Worklist.442" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::Worklist.449"* }
%"class.blink::Worklist.449" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.blink::Worklist.456"* }
%"class.blink::Worklist.456" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::Worklist.463"* }
%"class.blink::Worklist.463" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::Worklist.470"* }
%"class.blink::Worklist.470" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::Worklist.477"* }
%"class.blink::Worklist.477" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.blink::Worklist.484"* }
%"class.blink::Worklist.484" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.431" }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.491", %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.505", [4 x i8] }>
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493", %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { i64 }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { float }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.514", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.523" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { %"struct.std::__1::pair.541"*, i32, i32 }
%"struct.std::__1::pair.541" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.554" }
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.442"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.449"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.456"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.463"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.470"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.577" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.572 }
%class.scoped_refptr.572 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.573" = type { %"struct.std::__1::__atomic_base.574" }
%"struct.std::__1::__atomic_base.574" = type { %"struct.std::__1::__cxx_atomic_impl.575" }
%"struct.std::__1::__cxx_atomic_impl.575" = type { %"struct.std::__1::__cxx_atomic_base_impl.576" }
%"struct.std::__1::__cxx_atomic_base_impl.576" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.134" }
%"struct.std::__1::atomic.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SlotAssignmentEngine" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ShadowRoot"* }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.103", %"class.blink::Member.105", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.5", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.7" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.11", %"class.blink::Member.13", %"class.blink::Member.5", %"class.blink::Member.15", %"class.blink::Member.15", %"class.blink::Member.49", %"class.blink::Member.51", %"class.blink::Member.53", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.58", %"class.blink::HeapVector.60" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.130", %"class.WTF::Vector.130", i8, i32, %"class.blink::Member.141", %"class.blink::Member.143", %"class.blink::Member.145", %"class.blink::Member.147", %"class.blink::Member.149", %"class.blink::Member.151", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.154", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.160", %"class.blink::Member.162", %"class.blink::Member.66", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.165", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.28", %"class.blink::Member.181", %"class.blink::Member.28", %"class.blink::Member.28", %"class.blink::Member.28", %"class.blink::UserActionElementSet", %"class.blink::Member.190", double, double, i64, i64, %"class.blink::HeapHashSet.192", %"class.blink::HeapHashSet.199", i16, i8, %"class.blink::Member.206", %"class.blink::Member.208", %"class.blink::Member.103", %"class.blink::Member.210", %"class.blink::TextLinkColors", %"class.blink::Member.212", i8, [7 x i8], %"class.blink::HeapHashMap.214", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.28", %"class.WTF::Vector.221", %"class.blink::Member.226", %"class.blink::Member.228", i8, %"class.blink::Member.28", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.230", %"class.blink::HeapVector.232", %"class.std::__1::unique_ptr.240", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.246", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.258", %"class.WTF::Vector.260", i8, i8, %"class.std::__1::unique_ptr.265", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.271", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.279", i8, i32, %"class.blink::Member.281", %"class.blink::Member.283", %"class.blink::Member.285", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.287", %"class.WTF::HashMap.289", %"class.blink::Member.294", %"class.blink::Member.296", %"class.blink::Member.298", %"class.blink::Member.300", %"class.blink::Member.13", %"class.blink::Member.13", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.302", i8, i32, %"class.blink::Member.309", %"class.blink::Member.311", i32, %"class.blink::Member.313", %"class.blink::Member.315", %"class.blink::Member.317", %"class.std::__1::unique_ptr.319", i64, %"class.std::__1::unique_ptr.325", i32, i32, %"class.blink::Member.331", %"class.blink::Member.333", %"class.blink::Member.335", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.337", %"class.WTF::Vector.339", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.344", %"class.blink::Member.351", %"class.std::__1::unique_ptr.353", %"class.blink::Member.359", i8, i8, %"class.WTF::String", %"class.blink::Member.361", i8, [7 x i8], %"class.blink::HeapHashMap.363", %"class.blink::HeapObserverSet", %"class.blink::Member.377", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.379", i32, i8, i8, %"class.blink::WeakMember.381", %"class.blink::Member.382" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.123" }
%"class.blink::HeapHashMap.123" = type { %"class.WTF::HashMap.126" }
%"class.WTF::HashMap.126" = type { %"class.WTF::HashTable.127" }
%"class.WTF::HashTable.127" = type <{ %"struct.WTF::KeyValuePair.129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.129" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.133 }
%class.scoped_refptr.133 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.134" }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.68", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.70, %"class.WTF::Vector.71", %"class.WTF::Vector.71", %"class.blink::Member", %"class.blink::Member.76", %"class.blink::HeapHashSet.80", %"class.blink::Member.13", %"class.WTF::HashSet.87", %"class.WTF::TextPosition", %"class.blink::Member.91", %"class.blink::HeapVector.93", %"class.blink::Member.100" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.70 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.78" }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.80" = type { %"class.WTF::HashSet.83" }
%"class.WTF::HashSet.83" = type { %"class.WTF::HashTable.84" }
%"class.WTF::HashTable.84" = type <{ %"class.blink::WeakMember.86"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.86" = type { %"class.blink::MemberBase.6" }
%"class.WTF::HashSet.87" = type { %"class.WTF::HashTable.88" }
%"class.WTF::HashTable.88" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.93" = type { %"class.WTF::Vector.96" }
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.blink::Member.76"*, i32, i32 }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.183" }
%"class.blink::HeapHashMap.183" = type { %"class.WTF::HashMap.186" }
%"class.WTF::HashMap.186" = type { %"class.WTF::HashTable.187" }
%"class.WTF::HashTable.187" = type <{ %"struct.WTF::KeyValuePair.189"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.189" = type opaque
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.192" = type { %"class.WTF::HashSet.195" }
%"class.WTF::HashSet.195" = type { %"class.WTF::HashTable.196" }
%"class.WTF::HashTable.196" = type <{ %"class.blink::WeakMember.198"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.198" = type opaque
%"class.blink::HeapHashSet.199" = type { %"class.WTF::HashSet.202" }
%"class.WTF::HashSet.202" = type { %"class.WTF::HashTable.203" }
%"class.WTF::HashTable.203" = type <{ %"class.blink::WeakMember.205"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.205" = type opaque
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.214" = type { %"class.WTF::HashMap.217" }
%"class.WTF::HashMap.217" = type { %"class.WTF::HashTable.218" }
%"class.WTF::HashTable.218" = type <{ %"struct.WTF::KeyValuePair.220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.220" = type opaque
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.31" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.35", %"class.blink::Member.37", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.35" = type { %"class.WTF::SingleThreadedBitField.36" }
%"class.WTF::SingleThreadedBitField.36" = type { i32 }
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.40", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.40" = type { %"class.base::RefCounted.41" }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.232" = type { %"class.WTF::Vector.235" }
%"class.WTF::Vector.235" = type { %"class.WTF::VectorBuffer.236" }
%"class.WTF::VectorBuffer.236" = type { %"class.WTF::VectorBufferBase.237" }
%"class.WTF::VectorBufferBase.237" = type { %"class.blink::Member.238"*, i32, i32 }
%"class.blink::Member.238" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.246" = type { %"class.WTF::HashSet.249" }
%"class.WTF::HashSet.249" = type { %"class.WTF::HashTable.250" }
%"class.WTF::HashTable.250" = type <{ %"class.blink::WeakMember.252"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.252" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.253", i32, [4 x i8] }>
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.260" = type { %"class.WTF::VectorBuffer.261" }
%"class.WTF::VectorBuffer.261" = type { %"class.WTF::VectorBufferBase.262" }
%"class.WTF::VectorBufferBase.262" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.45" }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"class.blink::Member.28"*, i32, i32 }
%"class.blink::HeapVector.271" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::Member.277"*, i32, i32 }
%"class.blink::Member.277" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.13" }
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.289" = type { %"class.WTF::HashTable.290" }
%"class.WTF::HashTable.290" = type <{ %"struct.WTF::KeyValuePair.293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.293" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.180", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.171, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.171 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.172" }>
%"class.base::RefCountedThreadSafe.172" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.174", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.174" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.175" }
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%"class.blink::WeakMember.180" = type { %"class.blink::MemberBase.14" }
%"class.blink::HeapHashSet.302" = type { %"class.WTF::HashSet.305" }
%"class.WTF::HashSet.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"class.blink::Member.308"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.308" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.339" = type { %"class.WTF::VectorBuffer.340" }
%"class.WTF::VectorBuffer.340" = type { %"class.WTF::VectorBufferBase.341" }
%"class.WTF::VectorBufferBase.341" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.344" = type { %"class.WTF::HashMap.347" }
%"class.WTF::HashMap.347" = type { %"class.WTF::HashTable.348" }
%"class.WTF::HashTable.348" = type <{ %"struct.WTF::KeyValuePair.350"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.350" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.363" = type { %"class.WTF::HashMap.366" }
%"class.WTF::HashMap.366" = type { %"class.WTF::HashTable.367" }
%"class.WTF::HashTable.367" = type <{ %"struct.WTF::KeyValuePair.369"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.369" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.370" }
%"class.blink::HeapHashSet.370" = type { %"class.WTF::HashSet.373" }
%"class.WTF::HashSet.373" = type { %"class.WTF::HashTable.374" }
%"class.WTF::HashTable.374" = type <{ %"class.blink::WeakMember.376"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.376" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.13", %"class.blink::HeapHashSet.386", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.393", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.386" = type { %"class.WTF::HashSet.389" }
%"class.WTF::HashSet.389" = type { %"class.WTF::HashTable.390" }
%"class.WTF::HashTable.390" = type <{ %"class.blink::Member.392"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.392" = type opaque
%"class.blink::HeapTaskRunnerTimer.393" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.394", { i64, i64 } }
%"class.blink::WeakMember.394" = type { %"class.blink::MemberBase.380" }
%"class.blink::WeakMember.381" = type { %"class.blink::MemberBase.4" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.21" }
%"class.WTF::HashTable.21" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.24" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.28", i32, %"class.blink::HeapVector" }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.55" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::HeapHashMap.57"* }
%"class.blink::HeapHashMap.57" = type opaque
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.60" = type { %"class.WTF::Vector.63" }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.blink::Member.66"*, i32, i32 }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.5", %"class.blink::HeapVector.60" }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type { %"class.blink::HeapVector.109", %"class.blink::Member.15", %"class.blink::WeakMember", i32, [4 x i8], %"class.blink::HeapHashSet.117" }
%"class.blink::HeapVector.109" = type { %"class.WTF::Vector.112" }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114" }
%"class.WTF::VectorBufferBase.114" = type { %"class.blink::Member.115"*, i32, i32 }
%"class.blink::Member.115" = type opaque
%"class.blink::HeapHashSet.117" = type { %"class.WTF::HashSet.120" }
%"class.WTF::HashSet.120" = type { %"class.WTF::HashTable.121" }
%"class.WTF::HashTable.121" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10ShadowRootEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [44 x i8] c"SlotAssignmentEngine::RecalcSlotAssignments\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1

@_ZN5blink20SlotAssignmentEngineC1Ev = hidden unnamed_addr alias void (%"class.blink::SlotAssignmentEngine"*), void (%"class.blink::SlotAssignmentEngine"*)* @_ZN5blink20SlotAssignmentEngineC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SlotAssignmentEngineC2Ev(%"class.blink::SlotAssignmentEngine"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SlotAssignmentEngine"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SlotAssignmentEngine26AddShadowRootNeedingRecalcERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"*, %"class.blink::ShadowRoot"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ShadowRoot"*, align 8
  %4 = bitcast %"class.blink::ShadowRoot"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  store %"class.blink::ShadowRoot"* %1, %"class.blink::ShadowRoot"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = call { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.blink::ShadowRoot"** nonnull dereferenceable(8) %3, %"class.blink::ShadowRoot"** nonnull dereferenceable(8) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SlotAssignmentEngine29RemoveShadowRootNeedingRecalcERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"*, %"class.blink::ShadowRoot"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::ShadowRoot"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember"* %5, null
  %7 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %70, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %5, i64 %32
  %34 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %34, align 8
  %36 = icmp eq %"class.blink::ShadowRoot"* %35, %1
  br i1 %36, label %65, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi %"class.blink::ShadowRoot"* [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq %"class.blink::ShadowRoot"* %52, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %11
  %61 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %5, i64 %60
  %62 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %62, align 8
  %64 = icmp eq %"class.blink::ShadowRoot"* %63, %1
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %9
  %66 = phi %"class.blink::WeakMember"* [ %33, %9 ], [ %61, %56 ]
  %67 = icmp eq %"class.blink::WeakMember"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = zext i32 %8 to i64
  br label %73

70:                                               ; preds = %51, %65, %2
  %71 = zext i32 %8 to i64
  %72 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %5, i64 %71
  br label %73

73:                                               ; preds = %70, %68
  %74 = phi i64 [ %69, %68 ], [ %71, %70 ]
  %75 = phi %"class.blink::WeakMember"* [ %66, %68 ], [ %72, %70 ]
  %76 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %5, i64 %74
  %77 = icmp eq %"class.blink::WeakMember"* %76, %75
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"* %79, %"class.blink::WeakMember"* %75) #4
  br label %80

80:                                               ; preds = %73, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SlotAssignmentEngine9ConnectedERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"*, %"class.blink::ShadowRoot"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ShadowRoot"*, align 8
  %4 = tail call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* %1) #4
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::ShadowRoot"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  store %"class.blink::ShadowRoot"* %1, %"class.blink::ShadowRoot"** %3, align 8
  %7 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = call { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %7, %"class.blink::ShadowRoot"** nonnull dereferenceable(8) %3, %"class.blink::ShadowRoot"** nonnull dereferenceable(8) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  br label %9

9:                                                ; preds = %5, %2
  ret void
}

declare zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SlotAssignmentEngine12DisconnectedERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"*, %"class.blink::ShadowRoot"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* %1) #4
  br i1 %3, label %4, label %82

4:                                                ; preds = %2
  %5 = ptrtoint %"class.blink::ShadowRoot"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %6, align 8
  %8 = icmp eq %"class.blink::WeakMember"* %7, null
  %9 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %72, label %11

11:                                               ; preds = %4
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %5
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %7, i64 %34
  %36 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %36, align 8
  %38 = icmp eq %"class.blink::ShadowRoot"* %37, %1
  br i1 %38, label %67, label %39

39:                                               ; preds = %11
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::ShadowRoot"* [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::ShadowRoot"* %54, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %7, i64 %62
  %64 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %64, align 8
  %66 = icmp eq %"class.blink::ShadowRoot"* %65, %1
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %11
  %68 = phi %"class.blink::WeakMember"* [ %35, %11 ], [ %63, %58 ]
  %69 = icmp eq %"class.blink::WeakMember"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = zext i32 %10 to i64
  br label %75

72:                                               ; preds = %53, %67, %4
  %73 = zext i32 %10 to i64
  %74 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %7, i64 %73
  br label %75

75:                                               ; preds = %72, %70
  %76 = phi i64 [ %71, %70 ], [ %73, %72 ]
  %77 = phi %"class.blink::WeakMember"* [ %68, %70 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %7, i64 %76
  %79 = icmp eq %"class.blink::WeakMember"* %78, %77
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"* %81, %"class.blink::WeakMember"* %77) #4
  br label %82

82:                                               ; preds = %80, %75, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SlotAssignmentEngine21RecalcSlotAssignmentsEv(%"class.blink::SlotAssignmentEngine"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.blink::HeapHashSet", align 8
  %4 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %114, label %7

7:                                                ; preds = %1
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14, !prof !2

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::HeapHashSet"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #4
  %13 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 20, i1 false) #4
  br label %24

14:                                               ; preds = %7
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #4
  %16 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #4
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  %20 = load i32, i32* %4, align 4
  %21 = bitcast %"class.blink::HeapHashSet"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #4
  %22 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 20, i1 false) #4
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %65, label %24

24:                                               ; preds = %11, %14
  %25 = phi %"class.WTF::HashTable"* [ %13, %11 ], [ %22, %14 ]
  %26 = phi i8* [ %12, %11 ], [ %21, %14 ]
  %27 = phi i64 [ -6148914691236517206, %11 ], [ %19, %14 ]
  %28 = phi i8* [ null, %11 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %14 ]
  %29 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %11 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), %14 ]
  %30 = phi i32 [ %5, %11 ], [ %20, %14 ]
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %25, i32 %30) #4
  %31 = load i32, i32* %4, align 4
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::SlotAssignmentEngine", %"class.blink::SlotAssignmentEngine"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %34, i64 %37
  br i1 %32, label %65, label %39

39:                                               ; preds = %24
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %39, %45
  %42 = phi %"class.blink::WeakMember"* [ %46, %45 ], [ %34, %39 ]
  %43 = bitcast %"class.blink::WeakMember"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  switch i64 %44, label %48 [
    i64 -1, label %45
    i64 0, label %45
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %42, i64 1
  %47 = icmp eq %"class.blink::WeakMember"* %46, %38
  br i1 %47, label %65, label %41

48:                                               ; preds = %41, %39
  %49 = phi %"class.blink::WeakMember"* [ %34, %39 ], [ %42, %41 ]
  %50 = icmp eq %"class.blink::WeakMember"* %49, %38
  br i1 %50, label %65, label %51

51:                                               ; preds = %48, %63
  %52 = phi %"class.blink::WeakMember"* [ %57, %63 ], [ %49, %48 ]
  %53 = call { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %25, %"class.blink::WeakMember"* dereferenceable(8) %52, %"class.blink::WeakMember"* dereferenceable(8) %52) #4
  %54 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %52, i64 1
  %55 = icmp eq %"class.blink::WeakMember"* %54, %38
  br i1 %55, label %65, label %56

56:                                               ; preds = %51, %60
  %57 = phi %"class.blink::WeakMember"* [ %61, %60 ], [ %54, %51 ]
  %58 = bitcast %"class.blink::WeakMember"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  switch i64 %59, label %63 [
    i64 -1, label %60
    i64 0, label %60
  ]

60:                                               ; preds = %56, %56
  %61 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %57, i64 1
  %62 = icmp eq %"class.blink::WeakMember"* %61, %38
  br i1 %62, label %65, label %56

63:                                               ; preds = %56
  %64 = icmp eq %"class.blink::WeakMember"* %57, %38
  br i1 %64, label %65, label %51

65:                                               ; preds = %45, %51, %63, %60, %14, %24, %48
  %66 = phi i8* [ %21, %14 ], [ %26, %24 ], [ %26, %48 ], [ %26, %60 ], [ %26, %63 ], [ %26, %51 ], [ %26, %45 ]
  %67 = phi i64 [ %19, %14 ], [ %27, %24 ], [ %27, %48 ], [ %27, %60 ], [ %27, %63 ], [ %27, %51 ], [ %27, %45 ]
  %68 = phi i8* [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %14 ], [ %28, %24 ], [ %28, %48 ], [ %28, %60 ], [ %28, %63 ], [ %28, %51 ], [ %28, %45 ]
  %69 = phi i8* [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), %14 ], [ %29, %24 ], [ %29, %48 ], [ %29, %60 ], [ %29, %63 ], [ %29, %51 ], [ %29, %45 ]
  %70 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %3, i64 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %3, i64 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %74, i64 %77
  br i1 %72, label %91, label %79

79:                                               ; preds = %65
  %80 = icmp eq i32 %76, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %79, %85
  %82 = phi %"class.blink::WeakMember"* [ %86, %85 ], [ %74, %79 ]
  %83 = bitcast %"class.blink::WeakMember"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  switch i64 %84, label %88 [
    i64 -1, label %85
    i64 0, label %85
  ]

85:                                               ; preds = %81, %81
  %86 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %82, i64 1
  %87 = icmp eq %"class.blink::WeakMember"* %86, %78
  br i1 %87, label %91, label %81

88:                                               ; preds = %81, %79
  %89 = phi %"class.blink::WeakMember"* [ %74, %79 ], [ %82, %81 ]
  %90 = icmp eq %"class.blink::WeakMember"* %89, %78
  br i1 %90, label %91, label %97

91:                                               ; preds = %85, %97, %112, %109, %65, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #4
  %92 = icmp eq i8* %68, null
  br i1 %92, label %114, label %93

93:                                               ; preds = %91
  %94 = load i8, i8* %68, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %114, label %96

96:                                               ; preds = %93
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %68, i8* %69, i64 %67) #4
  br label %114

97:                                               ; preds = %88, %112
  %98 = phi %"class.blink::WeakMember"* [ %106, %112 ], [ %89, %88 ]
  %99 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %100, i64 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %101, align 8
  call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* %102) #4
  %103 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %98, i64 1
  %104 = icmp eq %"class.blink::WeakMember"* %103, %78
  br i1 %104, label %91, label %105

105:                                              ; preds = %97, %109
  %106 = phi %"class.blink::WeakMember"* [ %110, %109 ], [ %103, %97 ]
  %107 = bitcast %"class.blink::WeakMember"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  switch i64 %108, label %112 [
    i64 -1, label %109
    i64 0, label %109
  ]

109:                                              ; preds = %105, %105
  %110 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %106, i64 1
  %111 = icmp eq %"class.blink::WeakMember"* %110, %78
  br i1 %111, label %91, label %105

112:                                              ; preds = %105
  %113 = icmp eq %"class.blink::WeakMember"* %106, %78
  br i1 %113, label %91, label %97

114:                                              ; preds = %96, %93, %91, %1
  ret void
}

declare void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20SlotAssignmentEngine5TraceEPNS_7VisitorE(%"class.blink::SlotAssignmentEngine"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = bitcast %"class.blink::SlotAssignmentEngine"* %0 to i8*
  %5 = bitcast %"class.blink::SlotAssignmentEngine"* %0 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.blink::WeakMember"*
  %8 = bitcast %"class.blink::SlotAssignmentEngine"* %0 to i8**
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %10 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, i64 11
  %12 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8** %8) #4
  %13 = inttoptr i64 %6 to i8*
  %14 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #4
  %15 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"class.blink::WeakMember"**
  store %"class.blink::WeakMember"* %7, %"class.blink::WeakMember"** %15, align 8
  %16 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %16, align 8
  %17 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %18 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %18, i64 10
  %20 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %19, align 8
  tail call void %20(%"class.blink::Visitor"* %1, i8* %13, i8** %8, i8* %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10ShadowRootEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %4) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #4
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #4
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #4
  store i8 -86, i8* %3, align 1
  %32 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"* %0, i32 %18, %"class.blink::WeakMember"* null, i8* nonnull dereferenceable(1) %3) #4
  %33 = load i8, i8* %3, align 1, !range !3
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #4
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #4
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"class.blink::WeakMember"*
  %39 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %38, i32 %18, %"class.blink::WeakMember"* null) #4
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"*, i32, %"class.blink::WeakMember"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #4
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #4
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #4
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #4
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %33 = icmp eq %"class.blink::WeakMember"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::WeakMember"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #4
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #4
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::WeakMember"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::WeakMember"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::WeakMember"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %54
  %60 = icmp eq %"class.blink::WeakMember"* %59, %2
  %61 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::WeakMember"* %61, %"class.blink::WeakMember"* %55
  %63 = bitcast %"class.blink::WeakMember"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::WeakMember"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::WeakMember"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #4
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::WeakMember"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %42, i32 %1, %"class.blink::WeakMember"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::WeakMember"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %84, i64 %81
  %86 = icmp eq %"class.blink::WeakMember"* %85, %2
  %87 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::WeakMember"* %87, %"class.blink::WeakMember"* %82
  %89 = bitcast %"class.blink::WeakMember"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %96, i64 %95
  %98 = icmp eq %"class.blink::WeakMember"* %97, %2
  %99 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::WeakMember"* %99, %"class.blink::WeakMember"* %88
  %101 = bitcast %"class.blink::WeakMember"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::WeakMember"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::WeakMember"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::WeakMember"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*, i32, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::WeakMember"* %1, %"class.blink::WeakMember"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"class.blink::WeakMember"* %1 to i64
  %17 = bitcast %"class.blink::WeakMember"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %19, align 8
  br label %48

21:                                               ; preds = %140
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %141, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"class.blink::WeakMember"* [ null, %15 ], [ %143, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #4
  %33 = load i32, i32* %12, align 8
  br label %34

34:                                               ; preds = %25, %32
  %35 = phi i32 [ %27, %25 ], [ %33, %32 ]
  %36 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.WTF::HashTable"* %5 to i64*
  store atomic i64 %26, i64* %36 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = inttoptr i64 %26 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #4
  br label %44

44:                                               ; preds = %34, %41
  store i32 %2, i32* %12, align 8
  store i64 %37, i64* %38, align 8
  store i32 %35, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"* nonnull %5)
  %45 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, -2147483648
  store i32 %47, i32* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #4
  ret %"class.blink::WeakMember"* %29

48:                                               ; preds = %18, %140
  %49 = phi i32 [ %13, %18 ], [ %141, %140 ]
  %50 = phi %"class.blink::WeakMember"* [ %20, %18 ], [ %142, %140 ]
  %51 = phi %"class.blink::WeakMember"* [ null, %18 ], [ %143, %140 ]
  %52 = phi i32 [ 0, %18 ], [ %144, %140 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %50, i64 %53
  %55 = bitcast %"class.blink::WeakMember"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %57 [
    i64 -1, label %140
    i64 0, label %140
  ]

57:                                               ; preds = %48
  %58 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %7, align 8
  %59 = load i32, i32* %8, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %56, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %56, %63
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %82
  %84 = ptrtoint %"class.blink::WeakMember"* %83 to i64
  %85 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %83, i64 0, i32 0, i32 0
  %86 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %85, align 8
  %87 = icmp eq %"class.blink::ShadowRoot"* %86, null
  %88 = inttoptr i64 %56 to %"class.blink::ShadowRoot"*
  br i1 %87, label %106, label %89

89:                                               ; preds = %57
  %90 = xor i32 %80, -1
  %91 = lshr i32 %80, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  br label %112

103:                                              ; preds = %119
  %104 = ptrtoint %"class.blink::WeakMember"* %126 to i64
  %105 = inttoptr i64 %121 to %"class.blink::WeakMember"*
  br label %106

106:                                              ; preds = %103, %57
  %107 = phi i64 [ %104, %103 ], [ %84, %57 ]
  %108 = phi %"class.blink::WeakMember"* [ %105, %103 ], [ null, %57 ]
  %109 = icmp eq %"class.blink::WeakMember"* %108, null
  %110 = ptrtoint %"class.blink::WeakMember"* %108 to i64
  %111 = select i1 %109, i64 %107, i64 %110
  br label %131

112:                                              ; preds = %119, %89
  %113 = phi i64 [ 0, %89 ], [ %121, %119 ]
  %114 = phi %"class.blink::ShadowRoot"* [ %86, %89 ], [ %129, %119 ]
  %115 = phi i64 [ %84, %89 ], [ %127, %119 ]
  %116 = phi i64 [ %82, %89 ], [ %125, %119 ]
  %117 = phi i64 [ 0, %89 ], [ %123, %119 ]
  %118 = icmp eq %"class.blink::ShadowRoot"* %114, %88
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = icmp eq %"class.blink::ShadowRoot"* %114, inttoptr (i64 -1 to %"class.blink::ShadowRoot"*)
  %121 = select i1 %120, i64 %115, i64 %113
  %122 = icmp eq i64 %117, 0
  %123 = select i1 %122, i64 %102, i64 %117
  %124 = add i64 %123, %116
  %125 = and i64 %124, %61
  %126 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %125
  %127 = ptrtoint %"class.blink::WeakMember"* %126 to i64
  %128 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %126, i64 0, i32 0, i32 0
  %129 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %128, align 8
  %130 = icmp eq %"class.blink::ShadowRoot"* %129, null
  br i1 %130, label %103, label %112

131:                                              ; preds = %112, %106
  %132 = phi i64 [ %111, %106 ], [ %115, %112 ]
  %133 = inttoptr i64 %132 to %"class.blink::WeakMember"*
  %134 = inttoptr i64 %132 to i64*
  store i64 %56, i64* %134, align 8
  %135 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %19, align 8
  %136 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %135, i64 %53
  %137 = icmp eq %"class.blink::WeakMember"* %136, %3
  %138 = select i1 %137, %"class.blink::WeakMember"* %133, %"class.blink::WeakMember"* %51
  %139 = load i32, i32* %12, align 8
  br label %140

140:                                              ; preds = %48, %48, %131
  %141 = phi i32 [ %49, %48 ], [ %139, %131 ], [ %49, %48 ]
  %142 = phi %"class.blink::WeakMember"* [ %50, %48 ], [ %135, %131 ], [ %50, %48 ]
  %143 = phi %"class.blink::WeakMember"* [ %51, %48 ], [ %138, %131 ], [ %51, %48 ]
  %144 = add i32 %52, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %21, label %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.5, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %9, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %6, %1 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %5, i64 0, i32 19, i64 5
  %14 = bitcast %"class.blink::BaseArena"** %13 to %"class.blink::NormalPageArena"**
  %15 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %14, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  %19 = icmp ult i64 %0, -8
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  store i8* null, i8** %17, align 8
  br label %31

21:                                               ; preds = %11
  %22 = add nsw i64 %0, 8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %22) #4
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %23, i8* %24) #4
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  store i8* %26, i8** %17, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #4
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %31

31:                                               ; preds = %20, %21, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  %32 = add i64 %0, 15
  %33 = and i64 %32, -8
  %34 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %33
  br i1 %36, label %69, label %37, !prof !4

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %33
  store i8* %40, i8** %38, align 8
  %41 = sub i64 %35, %33
  store i64 %41, i64* %34, align 8
  %42 = bitcast i8* %39 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 4
  %44 = bitcast i8* %43 to i16*
  %45 = trunc i32 %12 to i16
  %46 = shl i16 %45, 2
  store atomic i16 %46, i16* %44 monotonic, align 2
  %47 = lshr exact i64 %33, 1
  %48 = trunc i64 %47 to i16
  %49 = getelementptr inbounds i8, i8* %39, i64 6
  %50 = bitcast i8* %49 to i16*
  store i16 %48, i16* %50, align 2
  %51 = ptrtoint i8* %39 to i64
  %52 = and i64 %51, -131072
  %53 = inttoptr i64 %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 4400
  %55 = bitcast i8* %54 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %56 = bitcast i8* %54 to i64*
  %57 = load i64, i64* %56, align 16
  %58 = sub i64 %51, %57
  %59 = lshr i64 %58, 3
  %60 = lshr i64 %58, 6
  %61 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %55, i64 0, i32 0, i32 1, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = trunc i64 %59 to i32
  %64 = and i32 %63, 7
  %65 = shl i32 1, %64
  %66 = trunc i32 %65 to i8
  %67 = or i8 %62, %66
  store atomic i8 %67, i8* %61 release, align 1
  %68 = getelementptr inbounds i8, i8* %39, i64 8
  br label %72

69:                                               ; preds = %31
  %70 = zext i32 %12 to i64
  %71 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %15, i64 %33, i64 %70) #4
  br label %72

72:                                               ; preds = %37, %69
  %73 = phi i8* [ %68, %37 ], [ %71, %69 ]
  ret i8* %73
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #4
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %3, i64 %33
  %35 = bitcast %"class.blink::WeakMember"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv) #4
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv) #4
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ShadowRoot"*
  tail call void @_ZNK5blink10ShadowRoot5TraceEPNS_7VisitorE(%"class.blink::ShadowRoot"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

declare void @_ZNK5blink10ShadowRoot5TraceEPNS_7VisitorE(%"class.blink::ShadowRoot"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %3 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %2, align 8
  %4 = icmp eq %"class.blink::WeakMember"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %5
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #4
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !4

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #4
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 1, !range !3
  %23 = icmp ne i8 %22, 0
  %24 = icmp ne i32 %7, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %41

26:                                               ; preds = %17
  %27 = zext i32 %7 to i64
  br label %28

28:                                               ; preds = %38, %26
  %29 = phi i64 [ 0, %26 ], [ %39, %38 ]
  %30 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %3, i64 %29
  %31 = bitcast %"class.blink::WeakMember"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %33 [
    i64 -1, label %38
    i64 0, label %38
  ]

33:                                               ; preds = %28
  store atomic i64 -1, i64* %31 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #4
  br label %38

38:                                               ; preds = %36, %33, %28, %28
  %39 = add nuw nsw i64 %29, 1
  %40 = icmp eq i64 %39, %27
  br i1 %40, label %41, label %28

41:                                               ; preds = %38, %5, %17
  %42 = bitcast %"class.blink::WeakMember"* %3 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %42) #4
  %43 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %6, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"* dereferenceable(8), %"class.blink::WeakMember"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* null)
  %9 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::WeakMember"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %40, align 8
  %42 = icmp eq %"class.blink::ShadowRoot"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ShadowRoot"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ShadowRoot"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ShadowRoot"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ShadowRoot"* %59, inttoptr (i64 -1 to %"class.blink::ShadowRoot"*)
  %67 = select i1 %66, %"class.blink::WeakMember"* %60, %"class.blink::WeakMember"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %73, align 8
  %75 = icmp eq %"class.blink::ShadowRoot"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #4
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::WeakMember"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #4
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #4
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #4
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !4

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #4
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !3
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #4
  %147 = bitcast %"class.blink::HeapHashTableBacking"* %146 to %"class.blink::WeakMember"*
  %148 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %147, i32 %144, %"class.blink::WeakMember"* %87) #4
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember"*, i8 } undef, %"class.blink::WeakMember"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #4
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #4
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #4
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #4
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"class.blink::WeakMember"* %1, i8* nonnull dereferenceable(1) %4) #4
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #4
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #4
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::WeakMember"*
  %44 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %43, i32 %40, %"class.blink::WeakMember"* %1) #4
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::WeakMember"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::WeakMember"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::ShadowRoot"** dereferenceable(8), %"class.blink::ShadowRoot"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* null)
  %9 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ShadowRoot"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %40, align 8
  %42 = icmp eq %"class.blink::ShadowRoot"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ShadowRoot"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ShadowRoot"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ShadowRoot"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ShadowRoot"* %59, inttoptr (i64 -1 to %"class.blink::ShadowRoot"*)
  %67 = select i1 %66, %"class.blink::WeakMember"* %60, %"class.blink::WeakMember"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %73, align 8
  %75 = icmp eq %"class.blink::ShadowRoot"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #4
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %2, align 8
  %89 = ptrtoint %"class.blink::ShadowRoot"* %88 to i64
  %90 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::ShadowRoot"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #4
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #4
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #4
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !4

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #4
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !3
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #4
  %147 = bitcast %"class.blink::HeapHashTableBacking"* %146 to %"class.blink::WeakMember"*
  %148 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %147, i32 %144, %"class.blink::WeakMember"* %87) #4
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember"*, i8 } undef, %"class.blink::WeakMember"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::WeakMember"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #4
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  %12 = and i32 %11, 2147483647
  %13 = and i32 %10, -2147483648
  %14 = or i32 %12, %13
  store i32 %14, i32* %9, align 8
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 4
  %18 = mul i32 %17, 6
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ult i32 %18, %20
  %22 = icmp ugt i32 %20, 8
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %53

24:                                               ; preds = %8
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #4
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !4

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #4
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 16
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %53, label %42

42:                                               ; preds = %31, %38
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 13
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %42
  %47 = load i32, i32* %19, align 8
  %48 = lshr i32 %47, 1
  %49 = zext i32 %48 to i64
  %50 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %49) #4
  %51 = bitcast %"class.blink::HeapHashTableBacking"* %50 to %"class.blink::WeakMember"*
  %52 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %51, i32 %48, %"class.blink::WeakMember"* null) #4
  br label %53

53:                                               ; preds = %38, %8, %46, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10ShadowRootEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember"**
  %4 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %3, align 8
  %5 = icmp eq %"class.blink::WeakMember"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %4, i64 %10
  %12 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 -1
  %13 = icmp ult %"class.blink::WeakMember"* %12, %4
  br i1 %13, label %61, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %57
  %20 = phi %"class.blink::WeakMember"* [ %12, %14 ], [ %58, %57 ]
  %21 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %21, align 8
  %23 = ptrtoint %"class.blink::ShadowRoot"* %22 to i64
  switch i64 %23, label %24 [
    i64 -1, label %57
    i64 0, label %57
  ]

24:                                               ; preds = %19
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #4
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !4

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #4
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = icmp eq %"class.blink::ThreadState"* %34, null
  br i1 %35, label %57, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %22, i64 -1, i32 4
  %38 = bitcast i32* %37 to %"class.blink::HeapObjectHeader"*
  %39 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %38, i64 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::WeakMember"* %20 to i64*
  store atomic i64 -1, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #4
  br label %49

49:                                               ; preds = %43, %47
  %50 = load i32, i32* %16, align 8
  %51 = add i32 %50, 1
  %52 = and i32 %51, 2147483647
  %53 = and i32 %50, -2147483648
  %54 = or i32 %52, %53
  store i32 %54, i32* %16, align 8
  %55 = load i32, i32* %18, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %18, align 4
  br label %57

57:                                               ; preds = %36, %19, %19, %31, %49
  %58 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %20, i64 -1
  %59 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %3, align 8
  %60 = icmp ult %"class.blink::WeakMember"* %58, %59
  br i1 %60, label %61, label %19

61:                                               ; preds = %57, %6, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
