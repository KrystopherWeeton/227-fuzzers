; ModuleID = '../../third_party/skia/src/core/SkLocalMatrixImageFilter.cpp'
source_filename = "../../third_party/skia/src/core/SkLocalMatrixImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkImageFilterCache = type opaque
%class.SkColorSpace = type <{ %class.SkNVRefCnt.17, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkLocalMatrixImageFilter = type { %class.SkImageFilter_Base.base, %class.SkMatrix, [4 x i8] }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.10 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.10*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.15*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.15*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.15*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.15 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.11", [7 x i8] }>
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }

$_ZN24SkLocalMatrixImageFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK24SkLocalMatrixImageFilter10getFactoryEv = comdat any

$_ZNK24SkLocalMatrixImageFilter11getTypeNameEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK24SkLocalMatrixImageFilter21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@_ZTV24SkLocalMatrixImageFilter = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%class.SkLocalMatrixImageFilter*)* @_ZN24SkLocalMatrixImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.10*, %class.SkReadBuffer*)* (%class.SkLocalMatrixImageFilter*)* @_ZNK24SkLocalMatrixImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkLocalMatrixImageFilter*)* @_ZNK24SkLocalMatrixImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkLocalMatrixImageFilter*, %class.SkWriteBuffer*)* @_ZNK24SkLocalMatrixImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkLocalMatrixImageFilter*, %struct.SkRect*)* @_ZNK24SkLocalMatrixImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %class.SkLocalMatrixImageFilter*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK24SkLocalMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkLocalMatrixImageFilter*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK24SkLocalMatrixImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkLocalMatrixImageFilter*)* @_ZNK24SkLocalMatrixImageFilter21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZN24SkLocalMatrixImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8
@__const._ZNK24SkLocalMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.localCtx = private unnamed_addr constant { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" } { %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %"class.skif::LayerSpace" { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } }, %class.SkImageFilterCache* inttoptr (i64 -6148914691236517206 to %class.SkImageFilterCache*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %"class.skif::FilterResult" { %class.sk_sp.18 { %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*) }, %"class.skif::LayerSpace.19" { %struct.SkIPoint { i32 -1431655766, i32 -1431655766 } } } }, align 8
@.str = private unnamed_addr constant [25 x i8] c"SkLocalMatrixImageFilter\00", align 1

@_ZN24SkLocalMatrixImageFilterC1ERK8SkMatrix5sk_spI13SkImageFilterE = hidden unnamed_addr alias void (%class.SkLocalMatrixImageFilter*, %class.SkMatrix*, %class.sk_sp*), void (%class.SkLocalMatrixImageFilter*, %class.SkMatrix*, %class.sk_sp*)* @_ZN24SkLocalMatrixImageFilterC2ERK8SkMatrix5sk_spI13SkImageFilterE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkLocalMatrixImageFilter4MakeERK8SkMatrix5sk_spI13SkImageFilterE(%class.sk_sp* noalias nocapture sret, %class.SkMatrix* dereferenceable(40), %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %6 = load %class.SkImageFilter*, %class.SkImageFilter** %5, align 8
  %7 = icmp eq %class.SkImageFilter* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %9, align 8
  br label %69

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #7
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %11, align 4
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi i32 [ %17, %15 ], [ %12, %10 ]
  %20 = and i32 %19, 15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = bitcast %class.sk_sp* %2 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %5, align 8
  %25 = bitcast %class.sk_sp* %0 to i64*
  store i64 %24, i64* %25, align 8
  br label %69

26:                                               ; preds = %18
  %27 = bitcast %class.sk_sp* %2 to %class.SkImageFilter_Base**
  %28 = load %class.SkImageFilter_Base*, %class.SkImageFilter_Base** %27, align 8
  %29 = tail call zeroext i1 @_ZNK18SkImageFilter_Base19canHandleComplexCTMEv(%class.SkImageFilter_Base* %28) #7
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = load i32, i32* %11, align 4
  %32 = trunc i32 %31 to i8
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #7
  %36 = zext i8 %35 to i32
  store i32 %36, i32* %11, align 4
  br label %37

37:                                               ; preds = %30, %34
  %38 = phi i32 [ %36, %34 ], [ %31, %30 ]
  %39 = and i32 %38, 12
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %42, align 8
  br label %69

43:                                               ; preds = %37, %26
  %44 = tail call i8* @_Znwm(i64 120) #8
  %45 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %46 = load %class.SkImageFilter*, %class.SkImageFilter** %5, align 8
  %47 = icmp eq %class.SkImageFilter* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  br label %51

51:                                               ; preds = %43, %48
  store %class.SkImageFilter* %46, %class.SkImageFilter** %45, align 8
  %52 = bitcast i8* %44 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %52, %class.sk_sp* nonnull %4, i32 1, %struct.SkRect* null) #7
  %53 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV24SkLocalMatrixImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %44, i64 76
  %55 = bitcast %class.SkMatrix* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 40, i1 false) #7
  %56 = bitcast %class.sk_sp* %0 to i8**
  store i8* %44, i8** %56, align 8
  %57 = load %class.SkImageFilter*, %class.SkImageFilter** %45, align 8
  %58 = icmp eq %class.SkImageFilter* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %class.SkImageFilter* %57 to %class.SkRefCntBase*
  %65 = bitcast %class.SkImageFilter* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #7
  br label %69

69:                                               ; preds = %63, %59, %51, %41, %22, %8
  ret void
}

declare zeroext i1 @_ZNK18SkImageFilter_Base19canHandleComplexCTMEv(%class.SkImageFilter_Base*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkLocalMatrixImageFilterC2ERK8SkMatrix5sk_spI13SkImageFilterE(%class.SkLocalMatrixImageFilter*, %class.SkMatrix* nocapture readonly dereferenceable(40), %class.sk_sp*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkLocalMatrixImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* %4, %class.sk_sp* %2, i32 1, %struct.SkRect* null) #7
  %5 = getelementptr inbounds %class.SkLocalMatrixImageFilter, %class.SkLocalMatrixImageFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV24SkLocalMatrixImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkLocalMatrixImageFilter, %class.SkLocalMatrixImageFilter* %0, i64 0, i32 1
  %7 = bitcast %class.SkMatrix* %6 to i8*
  %8 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 40, i1 false)
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkLocalMatrixImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.10* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN24SkLocalMatrixImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %9 to i8**
  store i8* %10, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #7
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %16, align 8
  br label %52

17:                                               ; preds = %2
  %18 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #7
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %20 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %20, align 16
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %22, align 16
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %23, align 16
  store i32 16, i32* %19, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %4) #7
  %24 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = bitcast i8* %9 to %class.sk_sp**
  %26 = load %class.sk_sp*, %class.sk_sp** %25, align 8, !noalias !2
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %26, i64 0, i32 0
  %29 = load %class.SkImageFilter*, %class.SkImageFilter** %28, align 8, !noalias !2
  %30 = icmp eq %class.SkImageFilter* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %17
  %32 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic, !noalias !2
  br label %34

34:                                               ; preds = %31, %17
  store %class.SkImageFilter* %29, %class.SkImageFilter** %27, align 8, !alias.scope !2
  call void @_ZN24SkLocalMatrixImageFilter4MakeERK8SkMatrix5sk_spI13SkImageFilterE(%class.sk_sp* nonnull sret %5, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.sk_sp* nonnull %6)
  %35 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %36 = bitcast %class.sk_sp* %5 to i64*
  %37 = load i64, i64* %36, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %35, align 8
  %38 = bitcast %class.sk_sp.10* %0 to i64*
  store i64 %37, i64* %38, align 8
  %39 = load %class.SkImageFilter*, %class.SkImageFilter** %27, align 8
  %40 = icmp eq %class.SkImageFilter* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %39, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkImageFilter* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkImageFilter* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  call void %50(%class.SkRefCntBase* nonnull %46) #7
  br label %51

51:                                               ; preds = %34, %41, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #7
  br label %52

52:                                               ; preds = %51, %15
  %53 = load i64, i64* %12, align 8
  %54 = and i64 %53, 4294967294
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = bitcast i8* %9 to %class.sk_sp**
  br label %62

58:                                               ; preds = %78, %52
  %59 = phi i64 [ %53, %52 ], [ %80, %78 ]
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %86, label %84

62:                                               ; preds = %78, %56
  %63 = phi i64 [ 0, %56 ], [ %79, %78 ]
  %64 = load %class.sk_sp*, %class.sk_sp** %57, align 8
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 %63, i32 0
  %66 = load %class.SkImageFilter*, %class.SkImageFilter** %65, align 8
  %67 = icmp eq %class.SkImageFilter* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkImageFilter* %66 to %class.SkRefCntBase*
  %74 = bitcast %class.SkImageFilter* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #7
  br label %78

78:                                               ; preds = %72, %68, %62
  %79 = add nuw nsw i64 %63, 1
  %80 = load i64, i64* %12, align 8
  %81 = lshr i64 %80, 1
  %82 = and i64 %81, 2147483647
  %83 = icmp ult i64 %79, %82
  br i1 %83, label %62, label %58

84:                                               ; preds = %58
  %85 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %85) #7
  br label %86

86:                                               ; preds = %58, %84
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24SkLocalMatrixImageFilter7flattenER13SkWriteBuffer(%class.SkLocalMatrixImageFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkLocalMatrixImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #7
  %4 = getelementptr inbounds %class.SkLocalMatrixImageFilter, %class.SkLocalMatrixImageFilter* %0, i64 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkMatrix*)***
  %6 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)**, void (%class.SkWriteBuffer*, %class.SkMatrix*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %6, i64 20
  %8 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %class.SkMatrix* dereferenceable(40) %4) #7
  ret void
}

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24SkLocalMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias nocapture sret, %class.SkLocalMatrixImageFilter*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.skif::FilterResult", align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %"class.skif::Context", align 8
  %8 = alloca %"class.skif::Mapping", align 4
  %9 = bitcast %"class.skif::Context"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %9) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast ({ %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" }* @__const._ZNK24SkLocalMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.localCtx to i8*), i64 136, i1 false)
  %10 = bitcast %"class.skif::Mapping"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10)
  %11 = getelementptr inbounds %class.SkLocalMatrixImageFilter, %class.SkLocalMatrixImageFilter* %1, i64 0, i32 1
  %12 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #7, !noalias !5
  %13 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %15 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16, !alias.scope !8, !noalias !5
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %17, align 16, !alias.scope !8, !noalias !5
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %18, align 16, !alias.scope !8, !noalias !5
  store i32 16, i32* %14, align 4, !alias.scope !8, !noalias !5
  %19 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %6, %class.SkMatrix* dereferenceable(40) %13, %class.SkMatrix* dereferenceable(40) %11) #7, !noalias !5
  %20 = bitcast %"class.skif::Context"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %20, i64 40, i1 false) #7
  %21 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %8, i64 0, i32 1
  %22 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* nonnull align 16 %12, i64 40, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #7, !noalias !5
  %23 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1
  %24 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 2
  %25 = bitcast %class.SkImageFilterCache** %24 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !11
  %27 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %28 = load i32, i32* %27, align 8, !noalias !11
  %29 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %30 = bitcast %class.SkColorSpace** %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 4 %10, i64 80, i1 false) #7
  %32 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 1
  %33 = bitcast %"class.skif::LayerSpace"* %32 to i8*
  %34 = bitcast %"class.skif::LayerSpace"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 4 %34, i64 16, i1 false) #7
  %35 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 2
  %36 = bitcast %class.SkImageFilterCache** %35 to i64*
  store i64 %26, i64* %36, align 8, !alias.scope !11
  %37 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 3
  store i32 %28, i32* %37, align 8, !alias.scope !11
  %38 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 4
  %39 = bitcast %class.SkColorSpace** %38 to i64*
  store i64 %31, i64* %39, align 8, !alias.scope !11
  %40 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 0, i32 0
  %41 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %42 = load %class.SkSpecialImage*, %class.SkSpecialImage** %41, align 8, !noalias !11
  %43 = icmp eq %class.SkSpecialImage* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %4
  %45 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic, !noalias !11
  br label %47

47:                                               ; preds = %4, %44
  store %class.SkSpecialImage* %42, %class.SkSpecialImage** %40, align 8, !alias.scope !11
  %48 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %7, i64 0, i32 5, i32 1
  %49 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 1
  %50 = bitcast %"class.skif::LayerSpace.19"* %49 to i64*
  %51 = bitcast %"class.skif::LayerSpace.19"* %48 to i64*
  %52 = load i64, i64* %50, align 8, !noalias !11
  store i64 %52, i64* %51, align 8, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10)
  %53 = bitcast %class.SkLocalMatrixImageFilter* %1 to %class.SkImageFilter_Base*
  %54 = bitcast %"class.skif::FilterResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #7, !noalias !14
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %5, %class.SkImageFilter_Base* %53, i32 0, %"class.skif::Context"* nonnull dereferenceable(136) %7) #7, !noalias !14
  %55 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 0, i32 0
  %56 = load %class.SkSpecialImage*, %class.SkSpecialImage** %55, align 8, !noalias !17
  %57 = icmp eq %class.SkSpecialImage* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %47
  %59 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 0, i32* %59, align 4, !noalias !17
  %60 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 0, i32* %60, align 4, !noalias !17
  %61 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %61, align 8, !alias.scope !17
  br label %78

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 1, i32 0
  %64 = bitcast %struct.SkIPoint* %63 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !17
  %66 = bitcast %struct.SkIPoint* %3 to i64*
  store i64 %65, i64* %66, align 4, !noalias !17
  %67 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  %68 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic, !noalias !17
  store %class.SkSpecialImage* %56, %class.SkSpecialImage** %67, align 8, !alias.scope !17
  %70 = atomicrmw add i32* %68, i32 -1 acq_rel, !noalias !14
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %62
  %73 = bitcast %class.SkSpecialImage* %56 to %class.SkRefCntBase*
  %74 = bitcast %class.SkSpecialImage* %56 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8, !noalias !14
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8, !noalias !14
  call void %77(%class.SkRefCntBase* nonnull %73) #7, !noalias !14
  br label %78

78:                                               ; preds = %58, %62, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #7, !noalias !14
  %79 = load %class.SkSpecialImage*, %class.SkSpecialImage** %40, align 8
  %80 = icmp eq %class.SkSpecialImage* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %class.SkSpecialImage* %79 to %class.SkRefCntBase*
  %87 = bitcast %class.SkSpecialImage* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #7
  br label %91

91:                                               ; preds = %78, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK24SkLocalMatrixImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkLocalMatrixImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = bitcast %class.SkLocalMatrixImageFilter* %0 to %class.SkImageFilter*
  %8 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %7, i32 0) #7
  %9 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.SkLocalMatrixImageFilter, %class.SkLocalMatrixImageFilter* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %12 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 16, !alias.scope !20
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %14, align 16, !alias.scope !20
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %15, align 16, !alias.scope !20
  store i32 16, i32* %11, align 4, !alias.scope !20
  %16 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %6, %class.SkMatrix* dereferenceable(40) %2, %class.SkMatrix* dereferenceable(40) %10) #7
  %17 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %8, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* nonnull dereferenceable(40) %6, i32 %3, %struct.SkIRect* %4) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #7
  ret { i64, i64 } %17
}

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK24SkLocalMatrixImageFilter17computeFastBoundsERK6SkRect(%class.SkLocalMatrixImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.SkRect*
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %11 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %11, align 16
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %13 = bitcast float* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %13, align 16
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %14, align 16
  store i32 16, i32* %10, align 4
  %15 = getelementptr inbounds %class.SkLocalMatrixImageFilter, %class.SkLocalMatrixImageFilter* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkLocalMatrixImageFilter, %class.SkLocalMatrixImageFilter* %0, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i8
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %15) #7
  %22 = zext i8 %21 to i32
  store i32 %22, i32* %16, align 4
  br label %23

23:                                               ; preds = %20, %2
  %24 = phi i32 [ %22, %20 ], [ %17, %2 ]
  %25 = and i32 %24, 15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %5) #7
  br label %41

29:                                               ; preds = %23
  %30 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %15, %class.SkMatrix* nonnull %5) #7
  br i1 %30, label %41, label %31

31:                                               ; preds = %29
  %32 = bitcast %class.SkLocalMatrixImageFilter* %0 to %class.SkImageFilter*
  %33 = call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %32, i32 0) #7
  %34 = bitcast %class.SkImageFilter* %33 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %35 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %34, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %35, i64 7
  %37 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %36, align 8
  %38 = call { <2 x float>, <2 x float> } %37(%class.SkImageFilter* %33, %struct.SkRect* dereferenceable(16) %1) #7
  %39 = extractvalue { <2 x float>, <2 x float> } %38, 0
  %40 = extractvalue { <2 x float>, <2 x float> } %38, 1
  br label %67

41:                                               ; preds = %27, %29
  %42 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %43 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %44 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44)
  %45 = bitcast <2 x i64>* %3 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -1, i64 16, i1 false) #7
  %46 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %5, %struct.SkRect* nonnull %45, %struct.SkRect* dereferenceable(16) %1, i32 1) #7
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44)
  store <2 x i64> %47, <2 x i64>* %6, align 16
  %48 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #7
  %49 = bitcast %class.SkLocalMatrixImageFilter* %0 to %class.SkImageFilter*
  %50 = call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %49, i32 0) #7
  %51 = bitcast %class.SkImageFilter* %50 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %52 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %51, align 8
  %53 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %52, i64 7
  %54 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %53, align 8
  %55 = call { <2 x float>, <2 x float> } %54(%class.SkImageFilter* %50, %struct.SkRect* nonnull dereferenceable(16) %7) #7
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %57 = extractvalue { <2 x float>, <2 x float> } %55, 0
  store <2 x float> %57, <2 x float>* %56, align 8
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %59 = extractvalue { <2 x float>, <2 x float> } %55, 1
  store <2 x float> %59, <2 x float>* %58, align 8
  %60 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60)
  %61 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -1, i64 16, i1 false) #7
  %62 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %15, %struct.SkRect* nonnull %61, %struct.SkRect* nonnull dereferenceable(16) %42, i32 1) #7
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %64 = load <2 x float>, <2 x float>* %63, align 8
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %66 = load <2 x float>, <2 x float>* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #7
  br label %67

67:                                               ; preds = %41, %31
  %68 = phi <2 x float> [ %64, %41 ], [ %39, %31 ]
  %69 = phi <2 x float> [ %66, %41 ], [ %40, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #7
  %70 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %68, 0
  %71 = insertvalue { <2 x float>, <2 x float> } %70, <2 x float> %69, 1
  ret { <2 x float>, <2 x float> } %71
}

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24SkLocalMatrixImageFilterD0Ev(%class.SkLocalMatrixImageFilter*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkLocalMatrixImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #7
  %3 = bitcast %class.SkLocalMatrixImageFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #7
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.10*, %class.SkReadBuffer*)* @_ZNK24SkLocalMatrixImageFilter10getFactoryEv(%class.SkLocalMatrixImageFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.10*, %class.SkReadBuffer*)* @_ZN24SkLocalMatrixImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK24SkLocalMatrixImageFilter11getTypeNameEv(%class.SkLocalMatrixImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK24SkLocalMatrixImageFilter21onCanHandleComplexCTMEv(%class.SkLocalMatrixImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #1

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #1

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!4 = distinct !{!4, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4skif7Mapping11concatLocalERK8SkMatrix: argument 0"}
!7 = distinct !{!7, !"_ZNK4skif7Mapping11concatLocalERK8SkMatrix"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!10 = distinct !{!10, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4skif7Context14withNewMappingERKNS_7MappingE: argument 0"}
!13 = distinct !{!13, !"_ZNK4skif7Context14withNewMappingERKNS_7MappingE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!16 = distinct !{!16, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!19 = distinct !{!19, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!22 = distinct !{!22, !"_ZN8SkMatrix6ConcatERKS_S1_"}
