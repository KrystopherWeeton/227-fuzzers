; ModuleID = '../../ui/touch_selection/touch_handle_drawable_aura.cc'
source_filename = "../../ui/touch_selection/touch_handle_drawable_aura.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::TouchHandleDrawableAura" = type <{ %"class.ui::TouchHandleDrawable", %"class.aura_extra::ImageWindowDelegate"*, %"class.std::__1::unique_ptr", i8, [3 x i8], float, i32, %"class.gfx::PointF", %"class.gfx::RectF", [4 x i8] }>
%"class.ui::TouchHandleDrawable" = type { i32 (...)** }
%"class.aura_extra::ImageWindowDelegate" = type <{ %"class.aura::WindowDelegate", i32, [4 x i8], %"class.gfx::Image", %"class.gfx::Vector2d", %"class.gfx::Size", i8, [7 x i8] }>
%"class.aura::WindowDelegate" = type { %"class.ui::EventHandler" }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.aura::Window"* }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.312", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.325", %"class.std::__1::vector.55", i32, i32, i32, [4 x i8], %"class.base::ObserverList.331", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.343", %"class.base::WeakPtr.349" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.0", %"class.ui::Layer"*, %"class.base::ObserverList.276" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type { %"class.ui::LayerAnimationDelegate", %"class.cc::ContentLayerClient", %"class.cc::TextureLayerClient", i32, %"class.ui::Compositor"*, %"class.ui::Layer"*, %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.ui::Layer"*, %"class.base::internal::flat_tree.199", i8, i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.200", i8, i8, i8, i8, %"class.cc::Region", %"class.cc::Region", float, float, float, float, i8, float, %"class.ui::Layer"*, %"class.ui::Layer"*, float, i32, %"class.std::__1::unique_ptr.206", %"class.std::__1::basic_string", %"class.ui::LayerDelegate"*, %"class.base::ObserverList.212", %"class.ui::LayerOwner"*, %class.scoped_refptr.216, %class.scoped_refptr.242, %class.scoped_refptr.243, %class.scoped_refptr.244, %class.scoped_refptr.245, %class.scoped_refptr.246, %class.scoped_refptr.247, %"class.cc::Layer"*, float, %"class.gfx::ImageSkia", %"class.gfx::Rect", %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.gfx::Size", i32, i32, float, i32, %"class.base::WeakPtrFactory.272" }
%"class.ui::LayerAnimationDelegate" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.ui::Compositor" = type { %"class.cc::LayerTreeHostClient", %"class.cc::LayerTreeHostSingleThreadClient", %"class.viz::HostFrameSinkClient", %"class.ui::ThroughputTrackerHost", %"class.gfx::Size", %"class.ui::ContextFactory"*, %"class.viz::mojom::DisplayPrivate"*, %"class.viz::mojom::ExternalBeginFrameController"*, %"class.std::__1::unique_ptr.3", %"class.ui::Layer"*, %"class.base::ObserverList", %"class.base::ObserverList.10", i32, i32, float, [4 x i8], %"class.std::__1::unordered_set", i8, i8, %"class.viz::FrameSinkId", %class.scoped_refptr.33, %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.base::WeakPtr", %class.scoped_refptr.129, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, i8, float, %"class.ui::LayerAnimatorCollection", %class.scoped_refptr.139, %"class.std::__1::unique_ptr.140", %class.SkMatrix44, %"class.gfx::DisplayColorSpaces", i8, i8, %"class.ui::CompositorLockManager", %"class.std::__1::unique_ptr.167", i8, i64, %"class.base::flat_map.173", %"class.base::WeakPtrFactory.183", %"class.base::WeakPtrFactory.183" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSingleThreadClient" = type { i32 (...)** }
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.ui::ContextFactory" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivate" = type opaque
%"class.viz::mojom::ExternalBeginFrameController" = type opaque
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.ui::PendingBeginFrameArgs"* }
%"struct.ui::PendingBeginFrameArgs" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.10" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.11", i64, i32, [4 x i8] }>
%"class.base::LinkedList.11" = type { %"class.base::LinkNode.12" }
%"class.base::LinkNode.12" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.14", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.30", [4 x i8] }>
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float }
%class.scoped_refptr.33 = type { %"class.cc::Layer"* }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.cc::AnimationHost"* }
%"class.cc::AnimationHost" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.cc::LayerTreeHost"* }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.361", %class.scoped_refptr.362, %"class.std::__1::unique_ptr.363", i32, %"class.std::__1::unique_ptr.369", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.381", i32, %"class.std::__1::unique_ptr.387", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.411", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.33, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.426", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.574, %"class.base::flat_map.575", %"class.base::internal::flat_tree.585", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.616", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.642", %"class.std::__1::unordered_map.650", %"class.std::__1::vector.674", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.683", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.704", %"class.std::__1::vector.710", %"class.base::flat_map.718", %"class.base::WeakPtrFactory.728" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.353", %class.scoped_refptr.129 }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"class.std::__1::unique_ptr.355"*, %"class.std::__1::unique_ptr.355"*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::unique_ptr.355" = type opaque
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.std::__1::unique_ptr.355"* }
%"class.base::WeakPtr.361" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.123", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.123" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.124" }
%"struct.std::__1::atomic.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__cxx_atomic_impl.127" }
%"struct.std::__1::__cxx_atomic_impl.127" = type { %"struct.std::__1::__cxx_atomic_base_impl.128" }
%"struct.std::__1::__cxx_atomic_base_impl.128" = type { i8 }
%class.scoped_refptr.362 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.130" }>
%"class.base::RefCountedThreadSafe.130" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.129, %class.scoped_refptr.129 }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.393", %"class.std::__1::set.401" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.std::__1::unique_ptr.395"*, %"class.std::__1::unique_ptr.395"*, %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.std::__1::unique_ptr.395"* }
%"class.std::__1::set.401" = type { %"class.std::__1::__tree.402" }
%"class.std::__1::__tree.402" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.403", %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.414, %class.scoped_refptr.415, %class.scoped_refptr.129, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.416", i64, %"class.base::WeakPtrFactory.422" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.414 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.415 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory.422" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.432", %"class.base::flat_map.432", %"class.base::flat_map.432", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.432" = type { %"class.base::internal::flat_tree.433" }
%"class.base::internal::flat_tree.433" = type { %"class.std::__1::vector.434" }
%"class.std::__1::vector.434" = type { %"class.std::__1::__vector_base.435" }
%"class.std::__1::__vector_base.435" = type { %"struct.std::__1::pair.436"*, %"struct.std::__1::pair.436"*, %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::pair.436" = type opaque
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"struct.std::__1::pair.436"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.449", %"class.std::__1::vector.456", %"class.std::__1::vector.463" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.442", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.442" = type { %"class.std::__1::__vector_base.443" }
%"class.std::__1::__vector_base.443" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.444" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.449" = type { %"class.std::__1::__vector_base.450" }
%"class.std::__1::__vector_base.450" = type { i32*, i32*, %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { i32* }
%"class.std::__1::vector.456" = type { %"class.std::__1::__vector_base.457" }
%"class.std::__1::__vector_base.457" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.458" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.465" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.470", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.509" }
%"class.cc::PropertyTree.470" = type { i32 (...)**, %"class.std::__1::vector.471", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.471" = type { %"class.std::__1::__vector_base.472" }
%"class.std::__1::__vector_base.472" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.481" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.67", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.51" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.62" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.55", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.54, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.54 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.473" }
%"class.base::internal::flat_tree.473" = type { %"class.std::__1::vector.474" }
%"class.std::__1::vector.474" = type { %"class.std::__1::__vector_base.475" }
%"class.std::__1::__vector_base.475" = type { i32*, i32*, %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { i32* }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.486" }
%"class.std::__1::__hash_table.486" = type <{ %"class.std::__1::unique_ptr.487", %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.504", [4 x i8] }>
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489", %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.std::__1::__hash_node_base.490"** }
%"struct.std::__1::__hash_node_base.490" = type { %"struct.std::__1::__hash_node_base.490"* }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.std::__1::__bucket_list_deallocator.492" }
%"class.std::__1::__bucket_list_deallocator.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"struct.std::__1::__hash_node_base.490" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::vector.509" = type { %"class.std::__1::__vector_base.510" }
%"class.std::__1::__vector_base.510" = type { %"class.std::__1::unique_ptr.511"*, %"class.std::__1::unique_ptr.511"*, %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.std::__1::unique_ptr.511"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.522" }
%"class.cc::PropertyTree.522" = type { i32 (...)**, %"class.std::__1::vector.523", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.523" = type { %"class.std::__1::__vector_base.524" }
%"class.std::__1::__vector_base.524" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.525" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.530", i32, %"class.base::flat_map.538", %"class.base::flat_map.548", %"class.base::WeakPtr.558" }
%"class.cc::PropertyTree.530" = type { i32 (...)**, %"class.std::__1::vector.531", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.531" = type { %"class.std::__1::__vector_base.532" }
%"class.std::__1::__vector_base.532" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.533" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.538" = type { %"class.base::internal::flat_tree.539" }
%"class.base::internal::flat_tree.539" = type { %"class.std::__1::vector.540" }
%"class.std::__1::vector.540" = type { %"class.std::__1::__vector_base.541" }
%"class.std::__1::__vector_base.541" = type { %"struct.std::__1::pair.542"*, %"struct.std::__1::pair.542"*, %"class.std::__1::__compressed_pair.543" }
%"struct.std::__1::pair.542" = type opaque
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::pair.542"* }
%"class.base::flat_map.548" = type { %"class.base::internal::flat_tree.549" }
%"class.base::internal::flat_tree.549" = type { %"class.std::__1::vector.550" }
%"class.std::__1::vector.550" = type { %"class.std::__1::__vector_base.551" }
%"class.std::__1::__vector_base.551" = type { %"struct.std::__1::pair.552"*, %"struct.std::__1::pair.552"*, %"class.std::__1::__compressed_pair.553" }
%"struct.std::__1::pair.552" = type opaque
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.std::__1::pair.552"* }
%"class.base::WeakPtr.558" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.559", %"class.std::__1::vector.566" }
%"class.std::__1::vector.559" = type { %"class.std::__1::__vector_base.560" }
%"class.std::__1::__vector_base.560" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.561" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.566" = type { %"class.std::__1::__vector_base.567" }
%"class.std::__1::__vector_base.567" = type { %"class.std::__1::vector.568"*, %"class.std::__1::vector.568"*, %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::vector.568" = type opaque
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.std::__1::vector.568"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.574 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.575" = type { %"class.base::internal::flat_tree.576" }
%"class.base::internal::flat_tree.576" = type { %"class.std::__1::vector.577" }
%"class.std::__1::vector.577" = type { %"class.std::__1::__vector_base.578" }
%"class.std::__1::__vector_base.578" = type { %"struct.std::__1::pair.579"*, %"struct.std::__1::pair.579"*, %"class.std::__1::__compressed_pair.580" }
%"struct.std::__1::pair.579" = type opaque
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.std::__1::pair.579"* }
%"class.base::internal::flat_tree.585" = type { %"class.std::__1::vector.586" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.593" }
%"class.std::__1::__hash_table.593" = type <{ %"class.std::__1::unique_ptr.594", %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.609", %"class.std::__1::__compressed_pair.612", [4 x i8] }>
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596", %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.597"** }
%"struct.std::__1::__hash_node_base.597" = type { %"struct.std::__1::__hash_node_base.597"* }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.std::__1::__bucket_list_deallocator.599" }
%"class.std::__1::__bucket_list_deallocator.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.std::__1::__hash_node_base.597" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unordered_map.616" = type { %"class.std::__1::__hash_table.617" }
%"class.std::__1::__hash_table.617" = type <{ %"class.std::__1::unique_ptr.618", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.636", [4 x i8] }>
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620", %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"struct.std::__1::__hash_node_base.621"** }
%"struct.std::__1::__hash_node_base.621" = type { %"struct.std::__1::__hash_node_base.621"* }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.std::__1::__bucket_list_deallocator.623" }
%"class.std::__1::__bucket_list_deallocator.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"struct.std::__1::__hash_node_base.621" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.642" = type { %"class.std::__1::__vector_base.643" }
%"class.std::__1::__vector_base.643" = type { %"struct.std::__1::pair.644"*, %"struct.std::__1::pair.644"*, %"class.std::__1::__compressed_pair.645" }
%"struct.std::__1::pair.644" = type opaque
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"struct.std::__1::pair.644"* }
%"class.std::__1::unordered_map.650" = type { %"class.std::__1::__hash_table.651" }
%"class.std::__1::__hash_table.651" = type <{ %"class.std::__1::unique_ptr.652", %"class.std::__1::__compressed_pair.662", %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.670", [4 x i8] }>
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654", %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"struct.std::__1::__hash_node_base.655"** }
%"struct.std::__1::__hash_node_base.655" = type { %"struct.std::__1::__hash_node_base.655"* }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.std::__1::__bucket_list_deallocator.657" }
%"class.std::__1::__bucket_list_deallocator.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"struct.std::__1::__hash_node_base.655" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::vector.674" = type { %"class.std::__1::__vector_base.675" }
%"class.std::__1::__vector_base.675" = type { %"class.base::OnceCallback.676"*, %"class.base::OnceCallback.676"*, %"class.std::__1::__compressed_pair.677" }
%"class.base::OnceCallback.676" = type opaque
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.base::OnceCallback.676"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.682" }
%"class.base::OnceCallback.682" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.689", %"class.std::__1::vector.696" }
%"class.std::__1::vector.689" = type { %"class.std::__1::__vector_base.690" }
%"class.std::__1::__vector_base.690" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.691" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.696" = type { %"class.std::__1::__vector_base.697" }
%"class.std::__1::__vector_base.697" = type { %"class.std::__1::unique_ptr.698"*, %"class.std::__1::unique_ptr.698"*, %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.731", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.731" = type { %"class.absl::optional_internal::optional_data.732" }
%"class.absl::optional_internal::optional_data.732" = type { %"class.absl::optional_internal::optional_data_base.733" }
%"class.absl::optional_internal::optional_data_base.733" = type { %"class.absl::optional_internal::optional_data_dtor_base.734" }
%"class.absl::optional_internal::optional_data_dtor_base.734" = type { i8, %union.anon.735 }
%union.anon.735 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.std::__1::unique_ptr.698"* }
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"class.std::__1::unique_ptr.712"*, %"class.std::__1::unique_ptr.712"*, %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::unique_ptr.712" = type opaque
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.std::__1::unique_ptr.712"* }
%"class.base::flat_map.718" = type { %"class.base::internal::flat_tree.719" }
%"class.base::internal::flat_tree.719" = type { %"class.std::__1::vector.720" }
%"class.std::__1::vector.720" = type { %"class.std::__1::__vector_base.721" }
%"class.std::__1::__vector_base.721" = type { %"struct.std::__1::pair.722"*, %"struct.std::__1::pair.722"*, %"class.std::__1::__compressed_pair.723" }
%"struct.std::__1::pair.722" = type opaque
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.std::__1::pair.722"* }
%"class.base::WeakPtrFactory.728" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.129 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.ui::LayerAnimatorCollection" = type { %"class.ui::CompositorAnimationObserver", %"class.ui::Compositor"*, %"class.base::TimeTicks", %"class.std::__1::set" }
%"class.ui::CompositorAnimationObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%class.scoped_refptr.139 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.ui::ScopedAnimationDurationScaleMode"* }
%"class.ui::ScopedAnimationDurationScaleMode" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.146" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.ui::CompositorLockManager" = type { %class.scoped_refptr.129, %"class.base::TimeTicks", i8, %"class.std::__1::vector.151", %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.161" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr.153", %"class.base::WeakPtr.160" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr.156" }
%"class.base::WeakPtr.156" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.160" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.ui::ScrollInputHandler"* }
%"class.ui::ScrollInputHandler" = type opaque
%"class.base::flat_map.173" = type { %"class.base::internal::flat_tree.174" }
%"class.base::internal::flat_tree.174" = type { %"class.std::__1::vector.175" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.std::__1::pair.177"*, %"struct.std::__1::pair.177"*, %"class.std::__1::__compressed_pair.178" }
%"struct.std::__1::pair.177" = type opaque
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::pair.177"* }
%"class.base::WeakPtrFactory.183" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.ui::Layer"** }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.base::internal::flat_tree.199" = type { %"class.std::__1::vector.184" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.ui::Layer::SubpixelPositionOffsetCache"* }
%"class.ui::Layer::SubpixelPositionOffsetCache" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.std::__1::vector.55"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.89 }
%union.anon.89 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList.212" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.213", i64, i32, [4 x i8] }>
%"class.base::LinkedList.213" = type { %"class.base::LinkNode.214" }
%"class.base::LinkNode.214" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.216 = type { %"class.ui::LayerAnimator"* }
%"class.ui::LayerAnimator" = type { %"class.ui::LayerThreadedAnimationDelegate", %"class.base::RefCounted.217", %"class.cc::AnimationDelegate", %"class.base::circular_deque.218", %"class.ui::LayerAnimationDelegate"*, %class.scoped_refptr.221, %"class.std::__1::vector.222", i32, i8, %"class.base::TimeDelta", i32, %"class.base::TimeTicks", i8, i8, i8, [5 x i8], %"class.base::ObserverList.230", %"class.std::__1::vector.234" }
%"class.ui::LayerThreadedAnimationDelegate" = type { i32 (...)** }
%"class.base::RefCounted.217" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%"class.base::circular_deque.218" = type { %"class.base::internal::VectorBuffer.219", i64, i64 }
%"class.base::internal::VectorBuffer.219" = type { %"class.std::__1::unique_ptr.220"*, i64 }
%"class.std::__1::unique_ptr.220" = type opaque
%class.scoped_refptr.221 = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type opaque
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.ui::LayerAnimator::RunningAnimation"*, %"class.ui::LayerAnimator::RunningAnimation"*, %"class.std::__1::__compressed_pair.225" }
%"class.ui::LayerAnimator::RunningAnimation" = type { %"class.base::WeakPtr.224" }
%"class.base::WeakPtr.224" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.ui::LayerAnimator::RunningAnimation"* }
%"class.base::ObserverList.230" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.231", i64, i32, [4 x i8] }>
%"class.base::LinkedList.231" = type { %"class.base::LinkNode.232" }
%"class.base::LinkNode.232" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"class.std::__1::unique_ptr.236"*, %"class.std::__1::unique_ptr.236"*, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::unique_ptr.236" = type opaque
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::unique_ptr.236"* }
%class.scoped_refptr.242 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.243 = type { %"class.cc::MirrorLayer"* }
%"class.cc::MirrorLayer" = type opaque
%class.scoped_refptr.244 = type { %"class.cc::NinePatchLayer"* }
%"class.cc::NinePatchLayer" = type opaque
%class.scoped_refptr.245 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.scoped_refptr.246 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%class.scoped_refptr.247 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.248", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.254", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.48", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.84" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.34", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %class.scoped_refptr.33*, %class.scoped_refptr.33*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.scoped_refptr.33* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.41" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.67", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.73" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.std::__1::unique_ptr.75"*, %"class.std::__1::unique_ptr.75"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::unique_ptr.75" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::unique_ptr.75"* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.93", %"class.std::__1::vector.93", %"class.std::__1::vector.100" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { i8**, i8**, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i8** }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.102" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.248" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.249", %"class.viz::SurfaceId" }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.absl::optional.254" = type { %"class.absl::optional_internal::optional_data.255" }
%"class.absl::optional_internal::optional_data.255" = type { %"class.absl::optional_internal::optional_data_base.256" }
%"class.absl::optional_internal::optional_data_base.256" = type { %"class.absl::optional_internal::optional_data_dtor_base.257" }
%"class.absl::optional_internal::optional_data_dtor_base.257" = type { i8, %union.anon.258 }
%union.anon.258 = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.262", i8, i32, i8, [7 x i8], %"class.absl::optional.267" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.260", i64 }
%"class.util::IdType.260" = type { %"class.base::StrongAlias.261" }
%"class.base::StrongAlias.261" = type { i64 }
%"class.absl::optional.262" = type { %"class.absl::optional_internal::optional_data.263" }
%"class.absl::optional_internal::optional_data.263" = type { %"class.absl::optional_internal::optional_data_base.264" }
%"class.absl::optional_internal::optional_data_base.264" = type { %"class.absl::optional_internal::optional_data_dtor_base.265" }
%"class.absl::optional_internal::optional_data_dtor_base.265" = type { i8, %union.anon.266 }
%union.anon.266 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.267" = type { %"class.absl::optional_internal::optional_data.268" }
%"class.absl::optional_internal::optional_data.268" = type { %"class.absl::optional_internal::optional_data_base.269" }
%"class.absl::optional_internal::optional_data_base.269" = type { %"class.absl::optional_internal::optional_data_dtor_base.270" }
%"class.absl::optional_internal::optional_data_dtor_base.270" = type { i8, [7 x i8], %union.anon.271 }
%union.anon.271 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.272" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.276" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.277", i64, i32, [4 x i8] }>
%"class.base::LinkedList.277" = type { %"class.base::LinkNode.278" }
%"class.base::LinkNode.278" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.ui::EventHandler"* }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.282" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.ui::EventHandler"** }
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.294" }
%"class.std::__1::__tree.294" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.303" }
%"class.std::__1::map.303" = type { %"class.std::__1::__tree.304" }
%"class.std::__1::__tree.304" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.aura::WindowTreeHost" = type opaque
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type { %"class.ui::EventTargeter", %"class.aura::Window"*, %"class.gfx::Insets", %"class.gfx::Insets" }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.331" = type <{ %"class.std::__1::vector.332", %"class.base::LinkedList.340", i64, i32, [4 x i8] }>
%"class.std::__1::vector.332" = type { %"class.std::__1::__vector_base.333" }
%"class.std::__1::__vector_base.333" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.335" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.334" }
%"class.base::WeakPtr.334" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.340" = type { %"class.base::LinkNode.341" }
%"class.base::LinkNode.341" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.349" = type { %"class.base::internal::WeakPtrBase" }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.750", %"class.std::__1::unique_ptr.750", %"class.std::__1::vector.756", i32, %"class.std::__1::map.763", %"class.gfx::Image", %"class.std::__1::map.773", %"class.base::FilePath", %"class.std::__1::unordered_map.784", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %"class.std::__1::unique_ptr.750"*, %"class.std::__1::unique_ptr.750"*, %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.std::__1::unique_ptr.750"* }
%"class.std::__1::map.763" = type { %"class.std::__1::__tree.764" }
%"class.std::__1::__tree.764" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.765", %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.773" = type { %"class.std::__1::__tree.774" }
%"class.std::__1::__tree.774" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.775", %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map.784" = type { %"class.std::__1::__hash_table.785" }
%"class.std::__1::__hash_table.785" = type <{ %"class.std::__1::unique_ptr.786", %"class.std::__1::__compressed_pair.796", %"class.std::__1::__compressed_pair.801", %"class.std::__1::__compressed_pair.804", [4 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788", %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.std::__1::__hash_node_base.789"** }
%"struct.std::__1::__hash_node_base.789" = type { %"struct.std::__1::__hash_node_base.789"* }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.std::__1::__bucket_list_deallocator.791" }
%"class.std::__1::__bucket_list_deallocator.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::__hash_node_base.789" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.31" }

@_ZTVN2ui23TouchHandleDrawableAuraE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::TouchHandleDrawableAura"*)* @_ZN2ui23TouchHandleDrawableAuraD2Ev to i8*), i8* bitcast (void (%"class.ui::TouchHandleDrawableAura"*)* @_ZN2ui23TouchHandleDrawableAuraD0Ev to i8*), i8* bitcast (void (%"class.ui::TouchHandleDrawableAura"*, i1)* @_ZN2ui23TouchHandleDrawableAura10SetEnabledEb to i8*), i8* bitcast (void (%"class.ui::TouchHandleDrawableAura"*, i32, i1, i1)* @_ZN2ui23TouchHandleDrawableAura14SetOrientationENS_22TouchHandleOrientationEbb to i8*), i8* bitcast (void (%"class.ui::TouchHandleDrawableAura"*, %"class.gfx::PointF"*)* @_ZN2ui23TouchHandleDrawableAura9SetOriginERKN3gfx6PointFE to i8*), i8* bitcast (void (%"class.ui::TouchHandleDrawableAura"*, float)* @_ZN2ui23TouchHandleDrawableAura8SetAlphaEf to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.ui::TouchHandleDrawableAura"*)* @_ZNK2ui23TouchHandleDrawableAura16GetVisibleBoundsEv to i8*), i8* bitcast (float (%"class.ui::TouchHandleDrawableAura"*)* @_ZNK2ui23TouchHandleDrawableAura33GetDrawableHorizontalPaddingRatioEv to i8*)] }, align 8

@_ZN2ui23TouchHandleDrawableAuraC1EPN4aura6WindowE = hidden unnamed_addr alias void (%"class.ui::TouchHandleDrawableAura"*, %"class.aura::Window"*), void (%"class.ui::TouchHandleDrawableAura"*, %"class.aura::Window"*)* @_ZN2ui23TouchHandleDrawableAuraC2EPN4aura6WindowE
@_ZN2ui23TouchHandleDrawableAuraD1Ev = hidden unnamed_addr alias void (%"class.ui::TouchHandleDrawableAura"*), void (%"class.ui::TouchHandleDrawableAura"*)* @_ZN2ui23TouchHandleDrawableAuraD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAuraC2EPN4aura6WindowE(%"class.ui::TouchHandleDrawableAura"* nocapture, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui23TouchHandleDrawableAuraE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 80) #8
  %6 = bitcast i8* %5 to %"class.aura_extra::ImageWindowDelegate"*
  tail call void @_ZN10aura_extra19ImageWindowDelegateC1Ev(%"class.aura_extra::ImageWindowDelegate"* nonnull %6) #9
  %7 = bitcast %"class.aura_extra::ImageWindowDelegate"** %4 to i8**
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2
  %9 = tail call i8* @_Znwm(i64 504) #8
  %10 = bitcast i8* %9 to %"class.aura::Window"*
  %11 = bitcast i8* %5 to %"class.aura::WindowDelegate"*
  tail call void @_ZN4aura6WindowC1EPNS_14WindowDelegateENS_6client10WindowTypeE(%"class.aura::Window"* nonnull %10, %"class.aura::WindowDelegate"* nonnull %11, i32 0) #9
  %12 = ptrtoint i8* %9 to i64
  %13 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 3
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 5
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 6
  store i32 3, i32* %16, align 8
  %17 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 7, i32 0
  %18 = bitcast float* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 24, i1 false)
  %19 = load %"class.aura_extra::ImageWindowDelegate"*, %"class.aura_extra::ImageWindowDelegate"** %4, align 8
  %20 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %19, i64 0, i32 4
  %21 = bitcast %"class.gfx::Vector2d"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  tail call void @_ZN4aura6Window14SetTransparentEb(%"class.aura::Window"* %23, i1 zeroext true) #9
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  tail call void @_ZN4aura6Window4InitEN2ui9LayerTypeE(%"class.aura::Window"* %24, i32 1) #9
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %26 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %25, i64 0, i32 11
  store i8 0, i8* %26, align 1
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  tail call void @_ZN4aura6Window23SetEventTargetingPolicyENS_20EventTargetingPolicyE(%"class.aura::Window"* %27, i32 3) #9
  %28 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  tail call void @_ZN4aura6Window8AddChildEPS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %28) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN10aura_extra19ImageWindowDelegateC1Ev(%"class.aura_extra::ImageWindowDelegate"*) unnamed_addr #2

declare void @_ZN4aura6WindowC1EPNS_14WindowDelegateENS_6client10WindowTypeE(%"class.aura::Window"*, %"class.aura::WindowDelegate"*, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4aura6Window14SetTransparentEb(%"class.aura::Window"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN4aura6Window4InitEN2ui9LayerTypeE(%"class.aura::Window"*, i32) local_unnamed_addr #2

declare void @_ZN4aura6Window23SetEventTargetingPolicyENS_20EventTargetingPolicyE(%"class.aura::Window"*, i32) local_unnamed_addr #2

declare void @_ZN4aura6Window8AddChildEPS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAuraD2Ev(%"class.ui::TouchHandleDrawableAura"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui23TouchHandleDrawableAuraE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.aura::Window"* %4 to void (%"class.aura::Window"*)***
  %8 = load void (%"class.aura::Window"*)**, void (%"class.aura::Window"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %8, i64 9
  %10 = load void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %9, align 8
  tail call void %10(%"class.aura::Window"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAuraD0Ev(%"class.ui::TouchHandleDrawableAura"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui23TouchHandleDrawableAuraE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.aura::Window"* %4 to void (%"class.aura::Window"*)***
  %8 = load void (%"class.aura::Window"*)**, void (%"class.aura::Window"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %8, i64 9
  %10 = load void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %9, align 8
  tail call void %10(%"class.aura::Window"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::TouchHandleDrawableAura"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAura12UpdateBoundsEv(%"class.ui::TouchHandleDrawableAura"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::RectF", align 4
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = bitcast %"class.gfx::RectF"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 8
  %7 = bitcast %"class.gfx::RectF"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 7, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 7, i32 1
  %11 = load float, float* %10, align 4
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* nonnull %2, float %9, float %11) #9
  %12 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  %14 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %2) #9
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %17 = extractvalue { i64, i64 } %15, 0
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %19 = extractvalue { i64, i64 } %15, 1
  store i64 %19, i64* %18, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %13, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"*, float, float) local_unnamed_addr #2

declare void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui23TouchHandleDrawableAura9IsVisibleEv(%"class.ui::TouchHandleDrawableAura"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 5
  %7 = load float, float* %6, align 4
  %8 = tail call float @llvm.fabs.f32(float %7) #9
  %9 = fcmp uge float %8, 0x3E45798EE0000000
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAura10SetEnabledEb(%"class.ui::TouchHandleDrawableAura"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 8
  br i1 %1, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  br label %21

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 5
  %15 = load float, float* %14, align 4
  %16 = tail call float @llvm.fabs.f32(float %15) #9
  %17 = fcmp uge float %16, 0x3E45798EE0000000
  %18 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  br i1 %17, label %20, label %21

20:                                               ; preds = %13
  tail call void @_ZN4aura6Window4ShowEv(%"class.aura::Window"* %19) #9
  br label %23

21:                                               ; preds = %10, %13
  %22 = phi %"class.aura::Window"* [ %12, %10 ], [ %19, %13 ]
  tail call void @_ZN4aura6Window4HideEv(%"class.aura::Window"* %22) #9
  br label %23

23:                                               ; preds = %2, %21, %20
  ret void
}

declare void @_ZN4aura6Window4ShowEv(%"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN4aura6Window4HideEv(%"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAura14SetOrientationENS_22TouchHandleOrientationEbb(%"class.ui::TouchHandleDrawableAura"* nocapture, i32, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %69, label %11

11:                                               ; preds = %4
  store i32 %1, i32* %8, align 8
  switch i32 %1, label %15 [
    i32 0, label %12
    i32 1, label %13
    i32 2, label %14
    i32 3, label %19
  ]

12:                                               ; preds = %11
  br label %15

13:                                               ; preds = %11
  br label %15

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %14, %13, %12, %11
  %16 = phi i32 [ 0, %11 ], [ 28884, %14 ], [ 28882, %13 ], [ 28883, %12 ]
  %17 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #9
  %18 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle13GetImageNamedEi(%"class.ui::ResourceBundle"* %17, i32 %16) #9
  br label %19

19:                                               ; preds = %11, %15
  %20 = phi %"class.gfx::Image"* [ %18, %15 ], [ null, %11 ]
  %21 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 1
  %22 = load %"class.aura_extra::ImageWindowDelegate"*, %"class.aura_extra::ImageWindowDelegate"** %21, align 8
  tail call void @_ZN10aura_extra19ImageWindowDelegate8SetImageERKN3gfx5ImageE(%"class.aura_extra::ImageWindowDelegate"* %22, %"class.gfx::Image"* dereferenceable(8) %20) #9
  %23 = tail call i64 @_ZNK3gfx5Image4SizeEv(%"class.gfx::Image"* %20) #9
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 32
  %26 = trunc i64 %25 to i32
  %27 = icmp sgt i32 %24, 0
  %28 = select i1 %27, i32 %24, i32 0
  %29 = sitofp i32 %28 to float
  %30 = icmp sgt i32 %26, 0
  %31 = select i1 %30, i32 %26, i32 0
  %32 = sitofp i32 %31 to float
  %33 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 8
  %34 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 8, i32 0, i32 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 8, i32 0, i32 1
  store float 2.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 8, i32 1, i32 0
  store float %29, float* %36, align 4
  %37 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 8, i32 1, i32 1
  store float %32, float* %37, align 4
  %38 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %43 = fptosi float %29 to i32
  %44 = fptosi float %32 to i32
  store i32 0, i32* %39, align 4
  store i32 2, i32* %40, align 4
  %45 = icmp sgt i32 %43, 0
  %46 = icmp sgt i32 %44, 0
  %47 = icmp ugt i32 %44, 2147483645
  %48 = and i1 %47, %46
  %49 = select i1 %48, i32 2147483645, i32 %44
  %50 = select i1 %45, i32 %43, i32 0
  store i32 %50, i32* %41, align 4
  %51 = icmp sgt i32 %49, 0
  %52 = select i1 %51, i32 %49, i32 0
  store i32 %52, i32* %42, align 4
  %53 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = load %"class.aura::Window"*, %"class.aura::Window"** %53, align 8
  call void @_ZN4aura6Window19SchedulePaintInRectERKN3gfx4RectE(%"class.aura::Window"* %54, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #9
  %55 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %56 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9
  %57 = bitcast %"class.gfx::RectF"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 4 %57, i64 16, i1 false) #9
  %58 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 7, i32 0
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 7, i32 1
  %61 = load float, float* %60, align 4
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* nonnull %5, float %59, float %61) #9
  %62 = load %"class.aura::Window"*, %"class.aura::Window"** %53, align 8
  %63 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #9
  %64 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %5) #9
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %66 = extractvalue { i64, i64 } %64, 0
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %68 = extractvalue { i64, i64 } %64, 1
  store i64 %68, i64* %67, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %62, %"class.gfx::Rect"* nonnull dereferenceable(16) %55) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  br label %69

69:                                               ; preds = %4, %19
  ret void
}

declare void @_ZN10aura_extra19ImageWindowDelegate8SetImageERKN3gfx5ImageE(%"class.aura_extra::ImageWindowDelegate"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK3gfx5Image4SizeEv(%"class.gfx::Image"*) local_unnamed_addr #2

declare void @_ZN4aura6Window19SchedulePaintInRectERKN3gfx4RectE(%"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAura9SetOriginERKN3gfx6PointFE(%"class.ui::TouchHandleDrawableAura"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::RectF", align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 7
  %6 = bitcast %"class.gfx::PointF"* %1 to i64*
  %7 = bitcast %"class.gfx::PointF"* %5 to i64*
  %8 = load i64, i64* %6, align 4
  store i64 %8, i64* %7, align 4
  %9 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %10 = bitcast %"class.gfx::RectF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 8
  %12 = bitcast %"class.gfx::RectF"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %12, i64 16, i1 false) #9
  %13 = trunc i64 %8 to i32
  %14 = bitcast i32 %13 to float
  %15 = lshr i64 %8, 32
  %16 = trunc i64 %15 to i32
  %17 = bitcast i32 %16 to float
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* nonnull %3, float %14, float %17) #9
  %18 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  %20 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %3) #9
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %23 = extractvalue { i64, i64 } %21, 0
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %25 = extractvalue { i64, i64 } %21, 1
  store i64 %25, i64* %24, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %19, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23TouchHandleDrawableAura8SetAlphaEf(%"class.ui::TouchHandleDrawableAura"* nocapture, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 5
  %4 = load float, float* %3, align 4
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  %7 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  %9 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %8, i64 0, i32 1, i32 2
  %10 = load %"class.ui::Layer"*, %"class.ui::Layer"** %9, align 8
  tail call void @_ZN2ui5Layer10SetOpacityEf(%"class.ui::Layer"* %10, float %1) #9
  %11 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  br label %22

16:                                               ; preds = %6
  %17 = load float, float* %3, align 4
  %18 = tail call float @llvm.fabs.f32(float %17) #9
  %19 = fcmp uge float %18, 0x3E45798EE0000000
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  br i1 %19, label %21, label %22

21:                                               ; preds = %16
  tail call void @_ZN4aura6Window4ShowEv(%"class.aura::Window"* %20) #9
  br label %24

22:                                               ; preds = %14, %16
  %23 = phi %"class.aura::Window"* [ %15, %14 ], [ %20, %16 ]
  tail call void @_ZN4aura6Window4HideEv(%"class.aura::Window"* %23) #9
  br label %24

24:                                               ; preds = %2, %22, %21
  ret void
}

declare void @_ZN2ui5Layer10SetOpacityEf(%"class.ui::Layer"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK2ui23TouchHandleDrawableAura16GetVisibleBoundsEv(%"class.ui::TouchHandleDrawableAura"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %"class.gfx::RectF"*
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0, i64 0
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1, i64 0
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"class.ui::TouchHandleDrawableAura", %"class.ui::TouchHandleDrawableAura"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %9, i64 0, i32 7, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %9, i64 0, i32 7, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %9, i64 0, i32 7, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %9, i64 0, i32 7, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  store float %12, float* %4, align 8
  store float %15, float* %5, align 4
  %20 = icmp sgt i32 %17, 0
  %21 = select i1 %20, i32 %17, i32 0
  %22 = sitofp i32 %21 to float
  store float %22, float* %6, align 8
  %23 = icmp sgt i32 %19, 0
  %24 = select i1 %23, i32 %19, i32 0
  %25 = sitofp i32 %24 to float
  store float %25, float* %7, align 4
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %3, float 0.000000e+00, float 2.000000e+00, float 0.000000e+00, float 0.000000e+00) #9
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %27 = load <2 x float>, <2 x float>* %26, align 8
  %28 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %27, 0
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %30 = load <2 x float>, <2 x float>* %29, align 8
  %31 = insertvalue { <2 x float>, <2 x float> } %28, <2 x float> %30, 1
  ret { <2 x float>, <2 x float> } %31
}

declare void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"*, float, float, float, float) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK2ui23TouchHandleDrawableAura33GetDrawableHorizontalPaddingRatioEv(%"class.ui::TouchHandleDrawableAura"* nocapture readnone) unnamed_addr #6 align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #2

declare dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle13GetImageNamedEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
