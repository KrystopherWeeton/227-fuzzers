; ModuleID = '../../base/files/memory_mapped_file_posix.cc'
source_filename = "../../base/files/memory_mapped_file_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"struct.base::MemoryMappedFile::Region" = type { i64, i64 }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.2 }
%struct.anon.2 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic", i32, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

@.str = private unnamed_addr constant [22 x i8] c"MapFileRegionToMemory\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"../../base/files/memory_mapped_file_posix.cc\00", align 1
@_ZN4base16MemoryMappedFile6Region10kWholeFileE = external global %"struct.base::MemoryMappedFile::Region", align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"CloseHandles\00", align 1

@_ZN4base16MemoryMappedFileC1Ev = hidden unnamed_addr alias void (%"class.base::MemoryMappedFile"*), void (%"class.base::MemoryMappedFile"*)* @_ZN4base16MemoryMappedFileC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MemoryMappedFileC2Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  tail call void @_ZN4base4FileC1Ev(%"class.base::File"* %2) #4
  %3 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN4base4FileC1Ev(%"class.base::File"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16MemoryMappedFile21MapFileRegionToMemoryERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"struct.base::MemoryMappedFile::Region"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ScopedBlockingCall", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %"class.base::ScopedBlockingCall"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 80, i1 false)
  %10 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 28) #4
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #4
  store i32 0, i32* %6, align 4
  %12 = call zeroext i1 @_ZNK4base16MemoryMappedFile6RegioneqERKS1_(%"struct.base::MemoryMappedFile::Region"* %1, %"struct.base::MemoryMappedFile::Region"* nonnull dereferenceable(16) @_ZN4base16MemoryMappedFile6Region10kWholeFileE) #4
  br i1 %12, label %13, label %19

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  %15 = call i64 @_ZN4base4File9GetLengthEv(%"class.base::File"* %14) #4
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %56, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 2
  store i64 %15, i64* %18, align 8
  br label %33

19:                                               ; preds = %3
  %20 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #4
  store i64 0, i64* %7, align 8
  %21 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  store i64 0, i64* %8, align 8
  %22 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  call void @_ZN4base16MemoryMappedFile28CalculateVMAlignedBoundariesElmPlPmPi(i64 %23, i64 %25, i64* nonnull %7, i64* nonnull %8, i32* nonnull %6) #4
  %26 = load i64, i64* %7, align 8
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %19
  %29 = load i64, i64* %8, align 8
  %30 = load i64, i64* %24, align 8
  %31 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 2
  store i64 %30, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #4
  br label %33

32:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #4
  br label %56

33:                                               ; preds = %28, %17
  %34 = phi i64 [ 0, %17 ], [ %26, %28 ]
  %35 = phi i64 [ %15, %17 ], [ %29, %28 ]
  switch i32 %2, label %45 [
    i32 0, label %36
    i32 1, label %37
    i32 2, label %38
  ]

36:                                               ; preds = %33
  br label %45

37:                                               ; preds = %33
  br label %45

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = call zeroext i1 @_ZN4base18AllocateFileRegionEPNS_4FileElm(%"class.base::File"* %39, i64 %41, i64 %43) #4
  br i1 %44, label %45, label %56

45:                                               ; preds = %38, %33, %37, %36
  %46 = phi i32 [ 0, %33 ], [ 3, %38 ], [ 3, %37 ], [ 1, %36 ]
  %47 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  %48 = call i32 @_ZNK4base4File15GetPlatformFileEv(%"class.base::File"* %47) #4
  %49 = call i8* @mmap64(i8* null, i64 %35, i32 %46, i32 1, i32 %48, i64 %34) #4
  %50 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  store i8* %49, i8** %50, align 8
  %51 = icmp eq i8* %49, inttoptr (i64 -1 to i8*)
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %49, i64 %54
  store i8* %55, i8** %50, align 8
  br label %56

56:                                               ; preds = %32, %13, %52, %38, %45
  %57 = phi i1 [ false, %32 ], [ true, %52 ], [ false, %38 ], [ false, %45 ], [ false, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #4
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #4
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK4base16MemoryMappedFile6RegioneqERKS1_(%"struct.base::MemoryMappedFile::Region"*, %"struct.base::MemoryMappedFile::Region"* dereferenceable(16)) local_unnamed_addr #1

declare i64 @_ZN4base4File9GetLengthEv(%"class.base::File"*) local_unnamed_addr #1

declare void @_ZN4base16MemoryMappedFile28CalculateVMAlignedBoundariesElmPlPmPi(i64, i64, i64*, i64*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base18AllocateFileRegionEPNS_4FileElm(%"class.base::File"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #3

declare i32 @_ZNK4base4File15GetPlatformFileEv(%"class.base::File"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MemoryMappedFile12CloseHandlesEv(%"class.base::MemoryMappedFile"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedBlockingCall", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast %"class.base::ScopedBlockingCall"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 101) #4
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = call i32 @munmap(i8* nonnull %7, i64 %11) #4
  br label %13

13:                                               ; preds = %1, %9
  %14 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  call void @_ZN4base4File5CloseEv(%"class.base::File"* %14) #4
  %15 = bitcast i8** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #3

declare void @_ZN4base4File5CloseEv(%"class.base::File"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
