; ModuleID = '../../third_party/webrtc/api/call/transport.cc'
source_filename = "../../third_party/webrtc/api/call/transport.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::PacketOptions" = type <{ i32, [4 x i8], %"class.rtc::scoped_refptr", i8, i8, i8, [5 x i8] }>
%"class.rtc::scoped_refptr" = type { %"class.rtc::RefCountedBase"* }
%"class.rtc::RefCountedBase" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN6webrtc13PacketOptionsC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::PacketOptions"*), void (%"struct.webrtc::PacketOptions"*)* @_ZN6webrtc13PacketOptionsC2Ev
@_ZN6webrtc13PacketOptionsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.webrtc::PacketOptions"*, %"struct.webrtc::PacketOptions"*), void (%"struct.webrtc::PacketOptions"*, %"struct.webrtc::PacketOptions"*)* @_ZN6webrtc13PacketOptionsC2ERKS0_
@_ZN6webrtc13PacketOptionsD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::PacketOptions"*), void (%"struct.webrtc::PacketOptions"*)* @_ZN6webrtc13PacketOptionsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc13PacketOptionsC2Ev(%"struct.webrtc::PacketOptions"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.rtc::RefCountedBase"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 11, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13PacketOptionsC2ERKS0_(%"struct.webrtc::PacketOptions"* nocapture, %"struct.webrtc::PacketOptions"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %1, i64 0, i32 2, i32 0
  %8 = load %"class.rtc::RefCountedBase"*, %"class.rtc::RefCountedBase"** %7, align 8
  store %"class.rtc::RefCountedBase"* %8, %"class.rtc::RefCountedBase"** %6, align 8
  %9 = icmp eq %"class.rtc::RefCountedBase"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.rtc::RefCountedBase", %"class.rtc::RefCountedBase"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %1, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 3, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13PacketOptionsD2Ev(%"struct.webrtc::PacketOptions"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::PacketOptions", %"struct.webrtc::PacketOptions"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.rtc::RefCountedBase"*, %"class.rtc::RefCountedBase"** %2, align 8
  %4 = icmp eq %"class.rtc::RefCountedBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.rtc::RefCountedBase", %"class.rtc::RefCountedBase"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = bitcast %"class.rtc::RefCountedBase"* %3 to void (%"class.rtc::RefCountedBase"*)***
  %11 = load void (%"class.rtc::RefCountedBase"*)**, void (%"class.rtc::RefCountedBase"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.rtc::RefCountedBase"*)*, void (%"class.rtc::RefCountedBase"*)** %11, i64 1
  %13 = load void (%"class.rtc::RefCountedBase"*)*, void (%"class.rtc::RefCountedBase"*)** %12, align 8
  tail call void %13(%"class.rtc::RefCountedBase"* nonnull %3) #3
  br label %14

14:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
