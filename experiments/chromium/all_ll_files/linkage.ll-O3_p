; ModuleID = '../../v8/src/compiler/linkage.cc'
source_filename = "../../v8/src/compiler/linkage.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::internal::compiler::CallDescriptor" = type { i32, %"class.v8::internal::MachineType", [2 x i8], %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::Signature"*, i64, i64, %"class.v8::base::Flags", i32, i32, i32, %"class.v8::base::Flags.0", i32, i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"class.v8::internal::compiler::LinkageLocation" = type <{ i32, %"class.v8::internal::MachineType", [2 x i8] }>
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::compiler::LinkageLocation"* }
%"class.v8::base::Flags" = type { i8 }
%"class.v8::base::Flags.0" = type { i32 }
%"class.v8::CFunctionInfo" = type opaque
%"class.v8::internal::Signature.1" = type { i64, i64, %"class.v8::internal::MachineType"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.13" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.std::__1::set.13" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::OptimizedCompilationInfo" = type { i32, i32, i32, i32, %"class.v8::internal::Handle", %"class.v8::internal::Handle.20", %"class.v8::internal::Handle.21", %"class.v8::internal::Handle.22", %"class.v8::internal::BasicBlockProfilerData"*, %"class.std::__1::unique_ptr.40", %"class.v8::internal::BytecodeOffset", %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::NodeObserver"*, i8, %"class.std::__1::vector.1147", i32, i32, %"class.v8::internal::Vector.1154", %"class.std::__1::unique_ptr.1155", %"class.v8::internal::TickCounter", %"class.std::__1::unique_ptr.1079", %"class.std::__1::unique_ptr.776" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Handle.20" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.21" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.22" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::BasicBlockProfilerData" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.28", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::wasm::WasmCompilationResult"* }
%"struct.v8::internal::wasm::WasmCompilationResult" = type opaque
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.52", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.682", %"class.std::__1::unique_ptr.703", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.713", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.853", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.863", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.868", %"struct.std::__1::atomic.207", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.943", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.986"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.994", i32, i8, i8, i32, i32, %"class.std::__1::vector.1000", %"class.std::__1::vector.1000", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1007", i64, %"class.std::__1::unordered_map.1008", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.578", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.215", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1064", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1102", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1136", %"class.std::__1::vector.1140", %"class.std::__1::vector.1140", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.46", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.50", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.50" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.81", %"class.std::__1::vector.85", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.201", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.216", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.220", %"class.std::__1::vector.220", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.505", %"class.std::__1::unique_ptr.505", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.517", %"class.std::__1::unique_ptr.517", %"class.std::__1::unique_ptr.523", %"class.std::__1::unique_ptr.529", %"class.std::__1::shared_ptr.535", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.540", %"class.std::__1::unique_ptr.566", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.572", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.585", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.385", i8, [7 x i8], %"class.std::__1::unordered_map.591", %"class.std::__1::unordered_map.617", %"class.std::__1::unordered_map.591", %"class.std::__1::unordered_map.641", %"class.std::__1::vector.669", i8, %"class.std::__1::unique_ptr.676", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.58", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.73", [4 x i8] }>
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60", %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.76", %"struct.std::__1::atomic.76", %"struct.std::__1::atomic.76" }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl.83" }
%"struct.std::__1::__cxx_atomic_impl.83" = type { %"struct.std::__1::__cxx_atomic_base_impl.84" }
%"struct.std::__1::__cxx_atomic_base_impl.84" = type { i32 }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.87" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.158" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.152" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.92", %"class.std::__1::vector.92", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.94" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.99" }
%"class.std::__1::__hash_table.99" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base.103"** }
%"struct.std::__1::__hash_node_base.103" = type { %"struct.std::__1::__hash_node_base.103"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator.105" }
%"class.std::__1::__bucket_list_deallocator.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base.103" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.76", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.133"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.141", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.76", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.76", %"struct.std::__1::atomic.122", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.126" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.128" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.133" = type { %"class.std::__1::__tree.134" }
%"class.std::__1::__tree.134" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::atomic.141" = type { %"struct.std::__1::__atomic_base.142" }
%"struct.std::__1::__atomic_base.142" = type { %"struct.std::__1::__cxx_atomic_impl.143" }
%"struct.std::__1::__cxx_atomic_impl.143" = type { %"struct.std::__1::__cxx_atomic_base_impl.144" }
%"struct.std::__1::__cxx_atomic_base_impl.144" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.145", i8, [7 x i8] }>
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { i64*, i64*, %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"*, %"class.std::__1::__compressed_pair.161" }
%"struct.std::__1::pair.160" = type { i32, i64 }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::pair.160"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.166" }
%"class.std::__1::unordered_map.166" = type { %"class.std::__1::__hash_table.167" }
%"class.std::__1::__hash_table.167" = type <{ %"class.std::__1::unique_ptr.168", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.183", %"class.std::__1::__compressed_pair.188", [4 x i8] }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170", %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::__hash_node_base.171"** }
%"struct.std::__1::__hash_node_base.171" = type { %"struct.std::__1::__hash_node_base.171"* }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.std::__1::__bucket_list_deallocator.173" }
%"class.std::__1::__bucket_list_deallocator.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::__hash_node_base.171" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.194", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.196" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1069", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1073", %"class.std::__1::unique_ptr.1079", %"class.std::__1::unique_ptr.529", %"class.std::__1::vector.1085", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1069" = type { %"struct.std::__1::__atomic_base.1070" }
%"struct.std::__1::__atomic_base.1070" = type { %"struct.std::__1::__cxx_atomic_impl.1071" }
%"struct.std::__1::__cxx_atomic_impl.1071" = type { %"struct.std::__1::__cxx_atomic_base_impl.1072" }
%"struct.std::__1::__cxx_atomic_base_impl.1072" = type { i32 }
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.840" }
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { i64**, i64**, %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { i64** }
%"class.std::__1::vector.1085" = type { %"class.std::__1::__vector_base.1086" }
%"class.std::__1::__vector_base.1086" = type { %"struct.std::__1::pair.1087"*, %"struct.std::__1::pair.1087"*, %"class.std::__1::__compressed_pair.1088" }
%"struct.std::__1::pair.1087" = type opaque
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"struct.std::__1::pair.1087"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.207", %"struct.std::__1::atomic.211", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.211" = type { %"struct.std::__1::__atomic_base.212" }
%"struct.std::__1::__atomic_base.212" = type { %"struct.std::__1::__cxx_atomic_impl.213" }
%"struct.std::__1::__cxx_atomic_impl.213" = type { %"struct.std::__1::__cxx_atomic_base_impl.214" }
%"struct.std::__1::__cxx_atomic_base_impl.214" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.215" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.222" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.335", %"class.std::__1::vector.335", %"class.std::__1::vector.335", %"class.std::__1::vector.342", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.236", %"class.std::__1::vector.237", %"class.std::__1::vector.244", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.236" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.239" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"class.std::__1::unique_ptr.246"*, %"class.std::__1::unique_ptr.246"*, %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::unique_ptr.246" = type opaque
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.std::__1::unique_ptr.246"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.252", %"class.v8::internal::Worklist.254", %"class.v8::internal::Worklist.254", %"class.v8::internal::Worklist.254", %"class.v8::internal::Worklist.256", %"class.v8::internal::Worklist.258", %"class.v8::internal::Worklist.260", %"class.v8::internal::Worklist.262", %"class.v8::internal::Worklist.264", %"class.v8::internal::Worklist.266" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.252" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.254" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.256" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.258" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.260" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.262" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.264" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.266" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.268", i8, i64 }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.284" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.236"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.284" = type { %"class.std::__1::__hash_table.285" }
%"class.std::__1::__hash_table.285" = type <{ %"class.std::__1::unique_ptr.286", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.301", %"class.std::__1::__compressed_pair.304", [4 x i8] }>
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288", %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::__hash_node_base.289"** }
%"struct.std::__1::__hash_node_base.289" = type { %"struct.std::__1::__hash_node_base.289"* }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.std::__1::__bucket_list_deallocator.291" }
%"class.std::__1::__bucket_list_deallocator.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base.289" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.311" }
%"class.std::__1::unordered_map.311" = type { %"class.std::__1::__hash_table.312" }
%"class.std::__1::__hash_table.312" = type <{ %"class.std::__1::unique_ptr.313", %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.331", [4 x i8] }>
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315", %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.std::__1::__hash_node_base.316"** }
%"struct.std::__1::__hash_node_base.316" = type { %"struct.std::__1::__hash_node_base.316"* }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.std::__1::__bucket_list_deallocator.318" }
%"class.std::__1::__bucket_list_deallocator.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.std::__1::__hash_node_base.316" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.342" = type { %"class.std::__1::__vector_base.343" }
%"class.std::__1::__vector_base.343" = type { %"struct.std::__1::pair.344"*, %"struct.std::__1::pair.344"*, %"class.std::__1::__compressed_pair.345" }
%"struct.std::__1::pair.344" = type opaque
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.std::__1::pair.344"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.350", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.335"], [3 x %"class.std::__1::vector.335"], i8, %"struct.std::__1::atomic.207", [6 x i8], %"class.std::__1::vector.335", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.360"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.335", %"class.std::__1::vector.335", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.360" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.385", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.378"], %"class.std::__1::unique_ptr.350" }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.417", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.421", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.426" }
%"struct.std::__1::atomic.417" = type { %"struct.std::__1::__atomic_base.418" }
%"struct.std::__1::__atomic_base.418" = type { %"struct.std::__1::__cxx_atomic_impl.419" }
%"struct.std::__1::__cxx_atomic_impl.419" = type { %"struct.std::__1::__cxx_atomic_base_impl.420" }
%"struct.std::__1::__cxx_atomic_base_impl.420" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.421" = type { %"struct.std::__1::__atomic_base.422" }
%"struct.std::__1::__atomic_base.422" = type { %"struct.std::__1::__cxx_atomic_impl.423" }
%"struct.std::__1::__cxx_atomic_impl.423" = type { %"struct.std::__1::__cxx_atomic_base_impl.424" }
%"struct.std::__1::__cxx_atomic_base_impl.424" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.426" = type { %"class.std::__1::__hash_table.427" }
%"class.std::__1::__hash_table.427" = type <{ %"class.std::__1::unique_ptr.428", %"class.std::__1::__compressed_pair.438", %"class.std::__1::__compressed_pair.443", %"class.std::__1::__compressed_pair.446", [4 x i8] }>
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430", %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.std::__1::__hash_node_base.431"** }
%"struct.std::__1::__hash_node_base.431" = type { %"struct.std::__1::__hash_node_base.431"* }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.std::__1::__bucket_list_deallocator.433" }
%"class.std::__1::__bucket_list_deallocator.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"struct.std::__1::__hash_node_base.431" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.350", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.207", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.456", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.456" = type { %"class.std::__1::__hash_table.457" }
%"class.std::__1::__hash_table.457" = type <{ %"class.std::__1::unique_ptr.458", %"class.std::__1::__compressed_pair.468", %"class.std::__1::__compressed_pair.473", %"class.std::__1::__compressed_pair.476", [4 x i8] }>
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460", %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.std::__1::__hash_node_base.461"** }
%"struct.std::__1::__hash_node_base.461" = type { %"struct.std::__1::__hash_node_base.461"* }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.std::__1::__bucket_list_deallocator.463" }
%"class.std::__1::__bucket_list_deallocator.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__hash_node_base.461" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.492" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.535" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.536", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.4", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.536" = type { %"struct.std::__1::__atomic_base.537" }
%"struct.std::__1::__atomic_base.537" = type { %"struct.std::__1::__cxx_atomic_impl.538" }
%"struct.std::__1::__cxx_atomic_impl.538" = type { %"struct.std::__1::__cxx_atomic_base_impl.539" }
%"struct.std::__1::__cxx_atomic_base_impl.539" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.540" = type { %"class.std::__1::__hash_table.541" }
%"class.std::__1::__hash_table.541" = type <{ %"class.std::__1::unique_ptr.542", %"class.std::__1::__compressed_pair.552", %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.560", [4 x i8] }>
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544", %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.545"** }
%"struct.std::__1::__hash_node_base.545" = type { %"struct.std::__1::__hash_node_base.545"* }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.std::__1::__bucket_list_deallocator.547" }
%"class.std::__1::__bucket_list_deallocator.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"struct.std::__1::__hash_node_base.545" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.578", %"class.std::__1::vector.578" }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.385" = type { %"class.std::__1::__hash_table.386" }
%"class.std::__1::__hash_table.386" = type <{ %"class.std::__1::unique_ptr.387", %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.406", [4 x i8] }>
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389", %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.std::__1::__hash_node_base.390"** }
%"struct.std::__1::__hash_node_base.390" = type { %"struct.std::__1::__hash_node_base.390"* }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.std::__1::__bucket_list_deallocator.392" }
%"class.std::__1::__bucket_list_deallocator.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.std::__1::__hash_node_base.390" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::unordered_map.617" = type { %"class.std::__1::__hash_table.618" }
%"class.std::__1::__hash_table.618" = type <{ %"class.std::__1::unique_ptr.619", %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.637", [4 x i8] }>
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621", %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::__hash_node_base.622"** }
%"struct.std::__1::__hash_node_base.622" = type { %"struct.std::__1::__hash_node_base.622"* }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.std::__1::__bucket_list_deallocator.624" }
%"class.std::__1::__bucket_list_deallocator.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"struct.std::__1::__hash_node_base.622" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::unordered_map.591" = type { %"class.std::__1::__hash_table.592" }
%"class.std::__1::__hash_table.592" = type <{ %"class.std::__1::unique_ptr.593", %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.611", [4 x i8] }>
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595", %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.596"** }
%"struct.std::__1::__hash_node_base.596" = type { %"struct.std::__1::__hash_node_base.596"* }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.std::__1::__bucket_list_deallocator.598" }
%"class.std::__1::__bucket_list_deallocator.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"struct.std::__1::__hash_node_base.596" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::unordered_map.641" = type { %"class.std::__1::__hash_table.642" }
%"class.std::__1::__hash_table.642" = type <{ %"class.std::__1::unique_ptr.643", %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.658", %"class.std::__1::__compressed_pair.663", [4 x i8] }>
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645", %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"struct.std::__1::__hash_node_base.646"** }
%"struct.std::__1::__hash_node_base.646" = type { %"struct.std::__1::__hash_node_base.646"* }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.std::__1::__bucket_list_deallocator.648" }
%"class.std::__1::__bucket_list_deallocator.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"struct.std::__1::__hash_node_base.646" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.671" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.578" }
%"class.std::__1::shared_ptr.682" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.194", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.697" }
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.686" }
%"class.std::__1::vector.686" = type { %"class.std::__1::__vector_base.687" }
%"class.std::__1::__vector_base.687" = type { %"class.std::__1::unique_ptr.688"*, %"class.std::__1::unique_ptr.688"*, %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.std::__1::unique_ptr.688"* }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.706", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.706" = type { %"struct.std::__1::__atomic_base.707" }
%"struct.std::__1::__atomic_base.707" = type { %"struct.std::__1::__cxx_atomic_impl.708" }
%"struct.std::__1::__cxx_atomic_impl.708" = type { %"struct.std::__1::__cxx_atomic_base_impl.709" }
%"struct.std::__1::__cxx_atomic_base_impl.709" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.713" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.714", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.714" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.715", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.715" = type { %"class.std::__1::__vector_base.716" }
%"class.std::__1::__vector_base.716" = type { %"class.std::__1::unique_ptr.717"*, %"class.std::__1::unique_ptr.717"*, %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::unique_ptr.717" = type opaque
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.std::__1::unique_ptr.717"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.723 }
%union.anon.723 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.730", %"struct.std::__1::atomic.207", %"class.std::__1::unique_ptr.736", %"class.std::__1::unique_ptr.742", %"class.std::__1::unique_ptr.748", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.760", %"class.std::__1::set.766", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.766" = type { %"class.std::__1::__tree.767" }
%"class.std::__1::__tree.767" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.768", %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.775" }
%"class.v8::internal::TaggedImpl.775" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.774" }
%"class.v8::internal::TaggedImpl.774" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.776", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::RootIndexMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.782", %"class.v8::internal::DetachableVector.783", %"class.v8::internal::DetachableVector.782", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.783" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.782" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.784", %"class.std::__1::vector.790", %"class.std::__1::unique_ptr.797", %"class.std::__1::vector.804", %"class.std::__1::unique_ptr.811", i64, %"class.std::__1::vector.817", %"class.std::__1::vector.825", %"class.std::__1::vector.833", i8, i8, i32 }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.790" = type { %"class.std::__1::__vector_base.791" }
%"class.std::__1::__vector_base.791" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.792" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.v8::internal::GlobalHandles::NodeSpace.800"* }
%"class.v8::internal::GlobalHandles::NodeSpace.800" = type opaque
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.806" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { %"struct.std::__1::pair.819"*, %"struct.std::__1::pair.819"*, %"class.std::__1::__compressed_pair.820" }
%"struct.std::__1::pair.819" = type opaque
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::pair.819"* }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.std::__1::pair.827"*, %"struct.std::__1::pair.827"*, %"class.std::__1::__compressed_pair.828" }
%"struct.std::__1::pair.827" = type opaque
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::pair.827"* }
%"class.std::__1::vector.833" = type { %"class.std::__1::__vector_base.834" }
%"class.std::__1::__vector_base.834" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.835" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.840", %"class.std::__1::vector" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.847" }
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.853" = type { %"struct.std::__1::__atomic_base.854" }
%"struct.std::__1::__atomic_base.854" = type { %"struct.std::__1::__cxx_atomic_impl.855" }
%"struct.std::__1::__cxx_atomic_impl.855" = type { %"struct.std::__1::__cxx_atomic_base_impl.856" }
%"struct.std::__1::__cxx_atomic_base_impl.856" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.863" = type { %"struct.std::__1::__atomic_base.864" }
%"struct.std::__1::__atomic_base.864" = type { %"struct.std::__1::__cxx_atomic_impl.865" }
%"struct.std::__1::__cxx_atomic_impl.865" = type { %"struct.std::__1::__cxx_atomic_base_impl.866" }
%"struct.std::__1::__cxx_atomic_base_impl.866" = type { i32 }
%"class.std::__1::unordered_map.868" = type { %"class.std::__1::__hash_table.869" }
%"class.std::__1::__hash_table.869" = type <{ %"class.std::__1::unique_ptr.870", %"class.std::__1::__compressed_pair.880", %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.888", [4 x i8] }>
%"class.std::__1::unique_ptr.870" = type { %"class.std::__1::__compressed_pair.871" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872", %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"struct.std::__1::__hash_node_base.873"** }
%"struct.std::__1::__hash_node_base.873" = type { %"struct.std::__1::__hash_node_base.873"* }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.std::__1::__bucket_list_deallocator.875" }
%"class.std::__1::__bucket_list_deallocator.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"struct.std::__1::__hash_node_base.873" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.894", %"class.v8::internal::Handle.900", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.901", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.900" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.901" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.902", %"class.std::__1::vector.908", %"class.std::__1::unique_ptr.916", %"class.std::__1::unique_ptr.922", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.928", %"class.std::__1::vector.934", %"struct.std::__1::pair.942" }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.908" = type { %"class.std::__1::__vector_base.909" }
%"class.std::__1::__vector_base.909" = type { %"class.std::__1::unique_ptr.910"*, %"class.std::__1::unique_ptr.910"*, %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::unique_ptr.910" = type opaque
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.std::__1::unique_ptr.910"* }
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.928" = type { %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.934" = type { %"class.std::__1::__vector_base.935" }
%"class.std::__1::__vector_base.935" = type { %"struct.std::__1::pair.936"*, %"struct.std::__1::pair.936"*, %"class.std::__1::__compressed_pair.937" }
%"struct.std::__1::pair.936" = type opaque
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.std::__1::pair.936"* }
%"struct.std::__1::pair.942" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.51"*, i16, i8*)*, i8* }
%"class.v8::Local.51" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.946", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.946" = type { %"class.std::__1::__hash_table.947" }
%"class.std::__1::__hash_table.947" = type <{ %"class.std::__1::unique_ptr.948", %"class.std::__1::__compressed_pair.958", %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.967", [4 x i8] }>
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950", %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"struct.std::__1::__hash_node_base.951"** }
%"struct.std::__1::__hash_node_base.951" = type { %"struct.std::__1::__hash_node_base.951"* }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.std::__1::__bucket_list_deallocator.953" }
%"class.std::__1::__bucket_list_deallocator.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::__hash_node_base.951" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.981" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.975"**, %"struct.std::__1::pair.975"**, %"struct.std::__1::pair.975"**, %"class.std::__1::__compressed_pair.976" }
%"struct.std::__1::pair.975" = type opaque
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"struct.std::__1::pair.975"** }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { %"class.v8::internal::Handle.988"*, %"class.v8::internal::Handle.988"*, %"class.std::__1::__compressed_pair.989" }
%"class.v8::internal::Handle.988" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.v8::internal::Handle.988"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.858", i32, %"class.v8::Local.51" }
%"class.v8::Local.858" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.840", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1000" = type { %"class.std::__1::__vector_base.1001" }
%"class.std::__1::__vector_base.1001" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1007" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1008" = type { %"class.std::__1::__hash_table.1009" }
%"class.std::__1::__hash_table.1009" = type <{ %"class.std::__1::unique_ptr.1010", %"class.std::__1::__compressed_pair.1020", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1028", [4 x i8] }>
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012", %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::__hash_node_base.1013"** }
%"struct.std::__1::__hash_node_base.1013" = type { %"struct.std::__1::__hash_node_base.1013"* }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.std::__1::__bucket_list_deallocator.1015" }
%"class.std::__1::__bucket_list_deallocator.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1013" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.578" = type { %"class.std::__1::__vector_base.579" }
%"class.std::__1::__vector_base.579" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.215" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1032", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1061", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1062", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1032" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1057, %union.anon.1059, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1057 = type { i64 }
%union.anon.1059 = type { i64 }
%"class.std::__1::weak_ptr.1061" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1062" = type { %"class.v8::PersistentBase.1063" }
%"class.v8::PersistentBase.1063" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1033", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1033" = type { %"class.std::__1::__hash_table.1034" }
%"class.std::__1::__hash_table.1034" = type <{ %"class.std::__1::unique_ptr.1035", %"class.std::__1::__compressed_pair.1045", %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1053", [4 x i8] }>
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037", %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"struct.std::__1::__hash_node_base.1038"** }
%"struct.std::__1::__hash_node_base.1038" = type { %"struct.std::__1::__hash_node_base.1038"* }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.std::__1::__bucket_list_deallocator.1040" }
%"class.std::__1::__bucket_list_deallocator.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"struct.std::__1::__hash_node_base.1038" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1093", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.859", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.859" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1110" }
%"class.std::__1::unordered_map.1110" = type { %"class.std::__1::__hash_table.1111" }
%"class.std::__1::__hash_table.1111" = type <{ %"class.std::__1::unique_ptr.1112", %"class.std::__1::__compressed_pair.1122", %"class.std::__1::__compressed_pair.1127", %"class.std::__1::__compressed_pair.1130", [4 x i8] }>
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114", %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"struct.std::__1::__hash_node_base.1115"** }
%"struct.std::__1::__hash_node_base.1115" = type { %"struct.std::__1::__hash_node_base.1115"* }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.std::__1::__bucket_list_deallocator.1117" }
%"class.std::__1::__bucket_list_deallocator.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"struct.std::__1::__hash_node_base.1115" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::atomic.1136" = type { %"struct.std::__1::__atomic_base.1137" }
%"struct.std::__1::__atomic_base.1137" = type { %"struct.std::__1::__cxx_atomic_impl.1138" }
%"struct.std::__1::__cxx_atomic_impl.1138" = type { %"struct.std::__1::__cxx_atomic_base_impl.1139" }
%"struct.std::__1::__cxx_atomic_base_impl.1139" = type { %"class.std::__1::vector.1140"* }
%"class.std::__1::vector.1140" = type { %"class.std::__1::__vector_base.1141" }
%"class.std::__1::__vector_base.1141" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1142" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"struct.v8::MemoryRange"* }
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.std::__1::vector.1147" = type { %"class.std::__1::__vector_base.1148" }
%"class.std::__1::__vector_base.1148" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"class.std::__1::__compressed_pair.1149" }
%"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder" = type { %"class.v8::internal::Handle.20", %"class.v8::internal::Handle", %"struct.v8::internal::InliningPosition" }
%"struct.v8::internal::InliningPosition" = type <{ %"class.v8::internal::SourcePosition", i32, [4 x i8] }>
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"* }
%"class.v8::internal::Vector.1154" = type { i8*, i64 }
%"class.std::__1::unique_ptr.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { i8* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::CallInterfaceDescriptor" = type { %"class.v8::internal::CallInterfaceDescriptorData"* }
%"class.v8::internal::CallInterfaceDescriptorData" = type { i32, i32, i32, %"class.v8::base::Flags.1161", i32, i32, %"class.v8::internal::Register"*, %"class.v8::internal::MachineType"* }
%"class.v8::base::Flags.1161" = type { i32 }
%"class.v8::internal::Register" = type { %"class.v8::internal::RegisterBase" }
%"class.v8::internal::RegisterBase" = type { i32 }
%"class.v8::internal::compiler::Linkage" = type { %"class.v8::internal::compiler::CallDescriptor"* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"Code\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"JS\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Addr\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"WasmExit\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"WasmFunction\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"WasmImportWrapper\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"BuiltinPointer\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c":r\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"js-call\00", align 1
@_ZZN2v88internal8compiler7Linkage21GetStubCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEENS9_INS1_8Operator8PropertyEhEENS0_12StubCallModeEE16return_registers = internal unnamed_addr constant [3 x { i32 }] [{ i32 } zeroinitializer, { i32 } { i32 2 }, { i32 } { i32 8 }], align 4
@.str.14 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"incoming_->IsJSFunctionCall()\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZNK2v88internal8compiler14CallDescriptor31GetOffsetToFirstUnusedStackSlotEv = private unnamed_addr constant [14 x i32] [i32 0, i32 0, i32 1, i32 2, i32 3, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3, i32 4], align 4
@switch.table._ZN2v88internal8compiler7Linkage21GetStubCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEENS9_INS1_8Operator8PropertyEhEENS0_12StubCallModeE = private unnamed_addr constant [3 x i32] [i32 0, i32 4, i32 6], align 4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_14CallDescriptor4KindE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  switch i32 %3, label %18 [
    i32 0, label %4
    i32 1, label %6
    i32 2, label %8
    i32 3, label %10
    i32 4, label %12
    i32 5, label %14
    i32 6, label %16
  ]

4:                                                ; preds = %2
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #10
  br label %18

6:                                                ; preds = %2
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #10
  br label %18

8:                                                ; preds = %2
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #10
  br label %18

10:                                               ; preds = %2
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8) #10
  br label %18

12:                                               ; preds = %2
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12) #10
  br label %18

14:                                               ; preds = %2
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i64 17) #10
  br label %18

16:                                               ; preds = %2
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14) #10
  br label %18

18:                                               ; preds = %2, %16, %14, %12, %10, %8, %6, %4
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_14CallDescriptorE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::CallDescriptor"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %3, align 4
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_14CallDescriptor4KindE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i32* nonnull dereferenceable(4) %3)
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #10
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 13
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i64 @strlen(i8* %10) #10
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* %10, i64 %11) #10
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #10
  %14 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 4
  %15 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %13, i64 %17) #10
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %20 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %19, i64 %21) #10
  %23 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #10
  %24 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %14, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  %28 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %23, i64 %27) #10
  %29 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #10
  %30 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 11, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 1
  %33 = zext i32 %32 to i64
  %34 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %29, i64 %33) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #10
  ret %"class.std::__1::basic_ostream"* %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Signature.1"* @_ZNK2v88internal8compiler14CallDescriptor19GetMachineSignatureEPNS0_4ZoneE(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %4, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %6
  %10 = shl i64 %9, 1
  %11 = add i64 %10, 7
  %12 = and i64 %11, -8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ugt i64 %12, %17
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %2
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %12) #10
  br label %23

21:                                               ; preds = %2
  %22 = add i64 %12, %14
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::MachineType"*
  %26 = icmp eq i64 %8, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %23
  %28 = add i64 %8, -1
  %29 = and i64 %8, 3
  %30 = icmp ult i64 %28, 3
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = sub i64 %8, %29
  br label %62

33:                                               ; preds = %62, %27
  %34 = phi i64 [ 0, %27 ], [ %106, %62 ]
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %33, %36
  %37 = phi i64 [ %47, %36 ], [ %34, %33 ]
  %38 = phi i64 [ %50, %36 ], [ %29, %33 ]
  %39 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %39, i64 0, i32 2
  %41 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %41, i64 %37
  %43 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %42 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = lshr i64 %44, 32
  %46 = trunc i64 %45 to i16
  %47 = add nuw i64 %37, 1
  %48 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %37
  %49 = bitcast %"class.v8::internal::MachineType"* %48 to i16*
  store i16 %46, i16* %49, align 1
  %50 = add i64 %38, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %36, !llvm.loop !3

52:                                               ; preds = %36, %33
  %53 = and i64 %8, 4294967295
  br label %54

54:                                               ; preds = %52, %23
  %55 = phi i64 [ 0, %23 ], [ %53, %52 ]
  %56 = icmp eq i64 %6, 0
  br i1 %56, label %129, label %57

57:                                               ; preds = %54
  %58 = and i64 %6, 1
  %59 = icmp eq i64 %6, 1
  br i1 %59, label %111, label %60

60:                                               ; preds = %57
  %61 = sub i64 %6, %58
  br label %145

62:                                               ; preds = %62, %31
  %63 = phi i64 [ 0, %31 ], [ %106, %62 ]
  %64 = phi i64 [ %32, %31 ], [ %109, %62 ]
  %65 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %65, i64 0, i32 2
  %67 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %67, i64 %63
  %69 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %68 to i64*
  %70 = load i64, i64* %69, align 4
  %71 = lshr i64 %70, 32
  %72 = trunc i64 %71 to i16
  %73 = or i64 %63, 1
  %74 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %63
  %75 = bitcast %"class.v8::internal::MachineType"* %74 to i16*
  store i16 %72, i16* %75, align 1
  %76 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %76, i64 0, i32 2
  %78 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %78, i64 %73
  %80 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %79 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = lshr i64 %81, 32
  %83 = trunc i64 %82 to i16
  %84 = or i64 %63, 2
  %85 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %73
  %86 = bitcast %"class.v8::internal::MachineType"* %85 to i16*
  store i16 %83, i16* %86, align 1
  %87 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %87, i64 0, i32 2
  %89 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %89, i64 %84
  %91 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %90 to i64*
  %92 = load i64, i64* %91, align 4
  %93 = lshr i64 %92, 32
  %94 = trunc i64 %93 to i16
  %95 = or i64 %63, 3
  %96 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %84
  %97 = bitcast %"class.v8::internal::MachineType"* %96 to i16*
  store i16 %94, i16* %97, align 1
  %98 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %98, i64 0, i32 2
  %100 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %100, i64 %95
  %102 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %101 to i64*
  %103 = load i64, i64* %102, align 4
  %104 = lshr i64 %103, 32
  %105 = trunc i64 %104 to i16
  %106 = add nuw i64 %63, 4
  %107 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %95
  %108 = bitcast %"class.v8::internal::MachineType"* %107 to i16*
  store i16 %105, i16* %108, align 1
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %33, label %62

111:                                              ; preds = %145, %57
  %112 = phi i64 [ %55, %57 ], [ %175, %145 ]
  %113 = phi i64 [ 0, %57 ], [ %178, %145 ]
  %114 = icmp eq i64 %58, 0
  br i1 %114, label %129, label %115

115:                                              ; preds = %111
  %116 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %116, i64 0, i32 2
  %118 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %116, i64 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, %113
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %118, i64 %121
  %123 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %122 to i64*
  %124 = load i64, i64* %123, align 4
  %125 = lshr i64 %124, 32
  %126 = trunc i64 %125 to i16
  %127 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %112
  %128 = bitcast %"class.v8::internal::MachineType"* %127 to i16*
  store i16 %126, i16* %128, align 1
  br label %129

129:                                              ; preds = %115, %111, %54
  %130 = load i64, i64* %13, align 8
  %131 = load i64, i64* %15, align 8
  %132 = sub i64 %131, %130
  %133 = icmp ult i64 %132, 24
  br i1 %133, label %134, label %136, !prof !2

134:                                              ; preds = %129
  %135 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 24) #10
  br label %138

136:                                              ; preds = %129
  %137 = add i64 %130, 24
  store i64 %137, i64* %13, align 8
  br label %138

138:                                              ; preds = %134, %136
  %139 = phi i64 [ %135, %134 ], [ %130, %136 ]
  %140 = inttoptr i64 %139 to %"class.v8::internal::Signature.1"*
  %141 = getelementptr inbounds %"class.v8::internal::Signature.1", %"class.v8::internal::Signature.1"* %140, i64 0, i32 0
  store i64 %8, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Signature.1", %"class.v8::internal::Signature.1"* %140, i64 0, i32 1
  store i64 %6, i64* %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Signature.1", %"class.v8::internal::Signature.1"* %140, i64 0, i32 2
  %144 = bitcast %"class.v8::internal::MachineType"** %143 to i64*
  store i64 %24, i64* %144, align 8
  ret %"class.v8::internal::Signature.1"* %140

145:                                              ; preds = %145, %60
  %146 = phi i64 [ %55, %60 ], [ %175, %145 ]
  %147 = phi i64 [ 0, %60 ], [ %178, %145 ]
  %148 = phi i64 [ %61, %60 ], [ %179, %145 ]
  %149 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %149, i64 0, i32 2
  %151 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %149, i64 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, %147
  %155 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %151, i64 %154
  %156 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %155 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = lshr i64 %157, 32
  %159 = trunc i64 %158 to i16
  %160 = add nuw i64 %146, 1
  %161 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %146
  %162 = bitcast %"class.v8::internal::MachineType"* %161 to i16*
  store i16 %159, i16* %162, align 1
  %163 = or i64 %147, 1
  %164 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %164, i64 0, i32 2
  %166 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %164, i64 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, %163
  %170 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %166, i64 %169
  %171 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %170 to i64*
  %172 = load i64, i64* %171, align 4
  %173 = lshr i64 %172, 32
  %174 = trunc i64 %173 to i16
  %175 = add nuw i64 %146, 2
  %176 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %25, i64 %160
  %177 = bitcast %"class.v8::internal::MachineType"* %176 to i16*
  store i16 %174, i16* %177, align 1
  %178 = add nuw i64 %147, 2
  %179 = add i64 %148, -2
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %111, label %145
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler14CallDescriptor22GetStackParameterDeltaEPKS2_(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly, %"class.v8::internal::compiler::CallDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 11, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 512
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"* %0)
  %9 = tail call i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"* %1)
  %10 = sub nsw i32 %8, %9
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %59, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 2
  %9 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %8, align 8
  %10 = and i64 %5, 1
  %11 = icmp eq i64 %5, 1
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = sub i64 %5, %10
  br label %35

14:                                               ; preds = %111, %7
  %15 = phi i32 [ undef, %7 ], [ %112, %111 ]
  %16 = phi i64 [ 0, %7 ], [ %113, %111 ]
  %17 = phi i32 [ 0, %7 ], [ %112, %111 ]
  %18 = icmp eq i64 %10, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %9, i64 %16
  %21 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = ashr i32 %23, 1
  %28 = sub nsw i32 0, %27
  %29 = icmp sgt i32 %17, %28
  %30 = select i1 %29, i32 %28, i32 %17
  br label %31

31:                                               ; preds = %26, %19, %14
  %32 = phi i32 [ %15, %14 ], [ %17, %19 ], [ %30, %26 ]
  %33 = add i64 %5, -1
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %59, label %103

35:                                               ; preds = %111, %12
  %36 = phi i64 [ 0, %12 ], [ %113, %111 ]
  %37 = phi i32 [ 0, %12 ], [ %112, %111 ]
  %38 = phi i64 [ %13, %12 ], [ %114, %111 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %9, i64 %36
  %40 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %35
  %46 = ashr i32 %42, 1
  %47 = sub nsw i32 0, %46
  %48 = icmp sgt i32 %37, %47
  %49 = select i1 %48, i32 %47, i32 %37
  br label %50

50:                                               ; preds = %45, %35
  %51 = phi i32 [ %37, %35 ], [ %49, %45 ]
  %52 = or i64 %36, 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %9, i64 %52
  %54 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %53 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = trunc i64 %55 to i32
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %111, label %106

59:                                               ; preds = %1, %31
  %60 = phi i64 [ %33, %31 ], [ -1, %1 ]
  %61 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %103, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 3
  %66 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 2
  br label %67

67:                                               ; preds = %99, %64
  %68 = phi i64 [ 0, %64 ], [ %101, %99 ]
  %69 = phi i32 [ 1, %64 ], [ %100, %99 ]
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %67
  %72 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %66, align 8
  %73 = add i64 %60, %68
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %72, i64 %73
  br label %75

75:                                               ; preds = %71, %67
  %76 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %74, %71 ], [ %65, %67 ]
  %77 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %76 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = trunc i64 %78 to i32
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %99, label %82

82:                                               ; preds = %75
  %83 = lshr i64 %78, 32
  %84 = trunc i64 %83 to i8
  %85 = add i8 %84, -1
  %86 = icmp ult i8 %85, 14
  br i1 %86, label %88, label %87

87:                                               ; preds = %82
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

88:                                               ; preds = %82
  %89 = ashr i32 %79, 1
  %90 = sext i8 %85 to i64
  %91 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZNK2v88internal8compiler14CallDescriptor31GetOffsetToFirstUnusedStackSlotEv, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = shl i32 1, %92
  %94 = add nuw nsw i32 %93, 7
  %95 = lshr i32 %94, 3
  %96 = sub nsw i32 %95, %89
  %97 = icmp slt i32 %69, %96
  %98 = select i1 %97, i32 %96, i32 %69
  br label %99

99:                                               ; preds = %88, %75
  %100 = phi i32 [ %69, %75 ], [ %98, %88 ]
  %101 = add i64 %68, 1
  %102 = icmp eq i64 %68, %62
  br i1 %102, label %103, label %67

103:                                              ; preds = %99, %59, %31
  %104 = phi i32 [ %32, %31 ], [ 1, %59 ], [ %100, %99 ]
  %105 = add nsw i32 %104, -1
  ret i32 %105

106:                                              ; preds = %50
  %107 = ashr i32 %56, 1
  %108 = sub nsw i32 0, %107
  %109 = icmp sgt i32 %51, %108
  %110 = select i1 %109, i32 %108, i32 %51
  br label %111

111:                                              ; preds = %106, %50
  %112 = phi i32 [ %51, %50 ], [ %110, %106 ]
  %113 = add nuw i64 %36, 2
  %114 = add i64 %38, -2
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %14, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler14CallDescriptor31GetOffsetToFirstUnusedStackSlotEv(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 0
  br label %13

11:                                               ; preds = %47, %1
  %12 = phi i32 [ 1, %1 ], [ %48, %47 ]
  ret i32 %12

13:                                               ; preds = %7, %47
  %14 = phi i64 [ 0, %7 ], [ %49, %47 ]
  %15 = phi i32 [ 1, %7 ], [ %48, %47 ]
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = add i64 %14, -1
  %19 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %9, align 8
  %20 = load i64, i64* %10, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %19, i64 %21
  br label %23

23:                                               ; preds = %13, %17
  %24 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %22, %17 ], [ %8, %13 ]
  %25 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = trunc i64 %26 to i32
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = lshr i64 %26, 32
  %32 = trunc i64 %31 to i8
  %33 = add i8 %32, -1
  %34 = icmp ult i8 %33, 14
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

36:                                               ; preds = %30
  %37 = ashr i32 %27, 1
  %38 = sext i8 %33 to i64
  %39 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZNK2v88internal8compiler14CallDescriptor31GetOffsetToFirstUnusedStackSlotEv, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = shl i32 1, %40
  %42 = add nuw nsw i32 %41, 7
  %43 = lshr i32 %42, 3
  %44 = sub nsw i32 %43, %37
  %45 = icmp slt i32 %15, %44
  %46 = select i1 %45, i32 %44, i32 %15
  br label %47

47:                                               ; preds = %36, %23
  %48 = phi i32 [ %15, %23 ], [ %46, %36 ]
  %49 = add nuw i64 %14, 1
  %50 = icmp ult i64 %14, %5
  br i1 %50, label %13, label %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler14CallDescriptor23GetTaggedParameterSlotsEv(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 0
  br label %13

11:                                               ; preds = %36, %1
  %12 = phi i32 [ 0, %1 ], [ %37, %36 ]
  ret i32 %12

13:                                               ; preds = %7, %36
  %14 = phi i64 [ 0, %7 ], [ %38, %36 ]
  %15 = phi i32 [ 0, %7 ], [ %37, %36 ]
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = add i64 %14, -1
  %19 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %9, align 8
  %20 = load i64, i64* %10, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %19, i64 %21
  br label %23

23:                                               ; preds = %13, %17
  %24 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %22, %17 ], [ %8, %13 ]
  %25 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = lshr i64 %26, 32
  %31 = trunc i64 %30 to i8
  %32 = add i8 %31, -7
  %33 = icmp ult i8 %32, 3
  %34 = zext i1 %33 to i32
  %35 = add nsw i32 %15, %34
  br label %36

36:                                               ; preds = %23, %29
  %37 = phi i32 [ %35, %29 ], [ %15, %23 ]
  %38 = add nuw i64 %14, 1
  %39 = icmp ult i64 %14, %5
  br i1 %39, label %13, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler14CallDescriptor11CanTailCallEPKS2_(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly, %"class.v8::internal::compiler::CallDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 4
  %8 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %8, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %6, %10
  br i1 %11, label %12, label %60

12:                                               ; preds = %2
  %13 = tail call i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"* %0)
  %14 = tail call i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"* %1)
  %15 = sub i32 %13, %14
  %16 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %16, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %60, label %20

20:                                               ; preds = %12, %54
  %21 = phi %"class.v8::internal::Signature"* [ %56, %54 ], [ %16, %12 ]
  %22 = phi i64 [ %55, %54 ], [ 0, %12 ]
  %23 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %21, i64 0, i32 2
  %24 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %24, i64 %22
  %26 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = trunc i64 %27 to i32
  %29 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %7, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %29, i64 0, i32 2
  %31 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %31, i64 %22
  %33 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = and i64 %27, %34
  %37 = and i64 %36, 2147483649
  %38 = icmp eq i64 %37, 2147483649
  br i1 %38, label %39, label %44

39:                                               ; preds = %20
  %40 = ashr i32 %28, 1
  %41 = add nsw i32 %15, %40
  %42 = ashr i32 %35, 1
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %54, label %60

44:                                               ; preds = %20
  %45 = lshr i64 %27, 32
  %46 = trunc i64 %45 to i8
  %47 = lshr i64 %34, 32
  %48 = trunc i64 %47 to i8
  %49 = icmp eq i32 %35, %28
  br i1 %49, label %50, label %60

50:                                               ; preds = %44
  %51 = tail call zeroext i1 @_ZN2v88internal9IsSubtypeENS0_21MachineRepresentationES1_(i8 zeroext %46, i8 zeroext %48) #10
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = tail call zeroext i1 @_ZN2v88internal9IsSubtypeENS0_21MachineRepresentationES1_(i8 zeroext %48, i8 zeroext %46) #10
  br i1 %53, label %54, label %60

54:                                               ; preds = %50, %39, %52
  %55 = add nuw i64 %22, 1
  %56 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %3, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %55, %58
  br i1 %59, label %20, label %60

60:                                               ; preds = %54, %39, %52, %44, %12, %2
  %61 = phi i1 [ false, %2 ], [ true, %12 ], [ true, %54 ], [ false, %39 ], [ false, %52 ], [ false, %44 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler14CallDescriptor23CalculateFixedFrameSizeENS0_8CodeKindE(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %10 [
    i32 1, label %11
    i32 2, label %5
    i32 0, label %8
    i32 6, label %8
    i32 4, label %9
    i32 5, label %9
    i32 3, label %11
  ]

5:                                                ; preds = %2
  %6 = icmp eq i32 %1, 9
  %7 = select i1 %6, i32 4, i32 2
  br label %11

8:                                                ; preds = %2, %2
  br label %11

9:                                                ; preds = %2, %2
  br label %11

10:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

11:                                               ; preds = %2, %5, %2, %9, %8
  %12 = phi i32 [ 4, %9 ], [ 3, %8 ], [ 5, %2 ], [ %7, %5 ], [ 5, %2 ]
  ret i32 %12
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage15ComputeIncomingEPNS0_4ZoneEPNS0_24OptimizedCompilationInfoE(%"class.v8::internal::Zone"*, %"class.v8::internal::OptimizedCompilationInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %1, i64 0, i32 6, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = load i64, i64* %4, align 8
  %8 = add i64 %7, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %1, i64 0, i32 10, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, -1
  %17 = add i64 %13, 21
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = add nuw nsw i32 %20, 1
  %22 = tail call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage19GetJSCallDescriptorEPNS0_4ZoneEbiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEE(%"class.v8::internal::Zone"* %0, i1 zeroext %16, i32 %21, i32 4)
  br label %23

23:                                               ; preds = %2, %6
  %24 = phi %"class.v8::internal::compiler::CallDescriptor"* [ %22, %6 ], [ null, %2 ]
  ret %"class.v8::internal::compiler::CallDescriptor"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage19GetJSCallDescriptorEPNS0_4ZoneEbiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEE(%"class.v8::internal::Zone"*, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = sext i32 %2 to i64
  %6 = add nsw i64 %5, 3
  %7 = shl nsw i64 %5, 32
  %8 = add i64 %7, 17179869184
  %9 = ashr exact i64 %8, 29
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  %15 = icmp ugt i64 %9, %14
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %4
  %17 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %9) #10
  br label %20

18:                                               ; preds = %4
  %19 = add i64 %11, %9
  store i64 %19, i64* %10, align 8
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i64 [ %17, %16 ], [ %11, %18 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::LinkageLocation"*
  %23 = inttoptr i64 %21 to i48*
  store i48 7735236100096, i48* %23, align 4
  %24 = icmp sgt i32 %2, 0
  br i1 %24, label %25, label %46

25:                                               ; preds = %20
  %26 = zext i32 %2 to i64
  %27 = and i64 %26, 1
  %28 = icmp eq i32 %2, 1
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = sub nsw i64 %26, %27
  br label %61

31:                                               ; preds = %61
  %32 = shl nuw i32 %80, 1
  %33 = xor i32 %32, -1
  %34 = zext i32 %33 to i64
  %35 = or i64 %34, 7735236100096
  %36 = trunc i64 %35 to i48
  br label %37

37:                                               ; preds = %31, %25
  %38 = phi i64 [ undef, %25 ], [ %81, %31 ]
  %39 = phi i48 [ 7739531067391, %25 ], [ %36, %31 ]
  %40 = phi i64 [ 1, %25 ], [ %81, %31 ]
  %41 = icmp eq i64 %27, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %22, i64 %40
  %44 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %43 to i48*
  store i48 %39, i48* %44, align 4
  %45 = add nuw nsw i64 %40, 1
  br label %46

46:                                               ; preds = %42, %37, %20
  %47 = phi i64 [ 1, %20 ], [ %38, %37 ], [ %45, %42 ]
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %22, i64 %47
  %49 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %48 to i48*
  store i48 7735236100100, i48* %49, align 4
  %50 = add i64 %47, 1
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %22, i64 %50
  %52 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %51 to i48*
  store i48 2216203124736, i48* %52, align 4
  %53 = add i64 %47, 2
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %22, i64 %53
  %55 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %54 to i48*
  store i48 7735236100108, i48* %55, align 4
  %56 = select i1 %1, i64 7735236100103, i64 7735236100110
  %57 = load i64, i64* %10, align 8
  %58 = load i64, i64* %12, align 8
  %59 = sub i64 %58, %57
  %60 = icmp ult i64 %59, 24
  br i1 %60, label %84, label %86, !prof !2

61:                                               ; preds = %61, %29
  %62 = phi i32 [ 0, %29 ], [ %80, %61 ]
  %63 = phi i64 [ 1, %29 ], [ %81, %61 ]
  %64 = phi i64 [ %30, %29 ], [ %82, %61 ]
  %65 = shl nuw i32 %62, 1
  %66 = xor i32 %65, -1
  %67 = zext i32 %66 to i64
  %68 = or i64 %67, 7735236100096
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %22, i64 %63
  %70 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %69 to i48*
  %71 = trunc i64 %68 to i48
  store i48 %71, i48* %70, align 4
  %72 = add nuw nsw i64 %63, 1
  %73 = shl nuw i32 %62, 1
  %74 = xor i32 %73, -3
  %75 = zext i32 %74 to i64
  %76 = or i64 %75, 7735236100096
  %77 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %22, i64 %72
  %78 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %77 to i48*
  %79 = trunc i64 %76 to i48
  store i48 %79, i48* %78, align 4
  %80 = add nuw nsw i32 %62, 2
  %81 = add nuw nsw i64 %63, 2
  %82 = add i64 %64, -2
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %31, label %61

84:                                               ; preds = %46
  %85 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 24) #10
  br label %88

86:                                               ; preds = %46
  %87 = add i64 %57, 24
  store i64 %87, i64* %10, align 8
  br label %88

88:                                               ; preds = %84, %86
  %89 = phi i64 [ %85, %84 ], [ %57, %86 ]
  %90 = inttoptr i64 %89 to %"class.v8::internal::Signature"*
  %91 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %90, i64 0, i32 0
  store i64 1, i64* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %90, i64 0, i32 1
  store i64 %6, i64* %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %90, i64 0, i32 2
  %94 = bitcast %"class.v8::internal::compiler::LinkageLocation"** %93 to i64*
  store i64 %21, i64* %94, align 8
  %95 = load i64, i64* %10, align 8
  %96 = load i64, i64* %12, align 8
  %97 = sub i64 %96, %95
  %98 = icmp ult i64 %97, 80
  br i1 %98, label %99, label %101, !prof !2

99:                                               ; preds = %88
  %100 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 80) #10
  br label %103

101:                                              ; preds = %88
  %102 = add i64 %95, 80
  store i64 %102, i64* %10, align 8
  br label %103

103:                                              ; preds = %99, %101
  %104 = phi i64 [ %100, %99 ], [ %95, %101 ]
  %105 = inttoptr i64 %104 to %"class.v8::internal::compiler::CallDescriptor"*
  %106 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 0
  store i32 1, i32* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 1
  %108 = bitcast %"class.v8::internal::MachineType"* %107 to i16*
  store i16 1801, i16* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 3
  %110 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %109 to i64*
  store i64 %56, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 4
  %112 = bitcast %"class.v8::internal::Signature"** %111 to i64*
  store i64 %89, i64* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 5
  store i64 %5, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 6
  store i64 0, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 7, i32 0
  store i8 0, i8* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 8
  store i32 0, i32* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 9
  store i32 0, i32* %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 10
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 11, i32 0
  store i32 %3, i32* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 12
  store i32 0, i32* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 13
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8** %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %105, i64 0, i32 14
  store %"class.v8::CFunctionInfo"* null, %"class.v8::CFunctionInfo"** %122, align 8
  ret %"class.v8::internal::compiler::CallDescriptor"* %105
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler7Linkage20NeedsFrameStateInputENS0_7Runtime10FunctionIdE(i32) local_unnamed_addr #5 align 2 {
  switch i32 %0, label %2 [
    i32 376, label %3
    i32 145, label %3
    i32 225, label %3
    i32 94, label %3
    i32 103, label %3
    i32 340, label %3
    i32 341, label %3
    i32 342, label %3
    i32 346, label %3
    i32 347, label %3
    i32 166, label %3
    i32 360, label %3
    i32 365, label %3
    i32 366, label %3
    i32 362, label %3
    i32 363, label %3
    i32 268, label %3
    i32 460, label %3
    i32 461, label %3
    i32 546, label %3
    i32 526, label %3
    i32 539, label %3
    i32 540, label %3
    i32 538, label %3
    i32 525, label %3
    i32 548, label %3
    i32 552, label %3
    i32 543, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ true, %2 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ]
  ret i1 %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler14CallDescriptor17UsesOnlyRegistersEv(%"class.v8::internal::compiler::CallDescriptor"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 0
  br label %21

11:                                               ; preds = %30
  %12 = add nuw i64 %22, 1
  %13 = icmp ult i64 %22, %5
  br i1 %13, label %21, label %14

14:                                               ; preds = %11, %1
  %15 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 2
  %20 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %19, align 8
  br label %38

21:                                               ; preds = %7, %11
  %22 = phi i64 [ 0, %7 ], [ %12, %11 ]
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = add i64 %22, -1
  %26 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %9, align 8
  %27 = load i64, i64* %10, align 8
  %28 = add i64 %25, %27
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %26, i64 %28
  br label %30

30:                                               ; preds = %21, %24
  %31 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %29, %24 ], [ %8, %21 ]
  %32 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %11, label %46

36:                                               ; preds = %38
  %37 = icmp ult i64 %45, %16
  br i1 %37, label %38, label %46

38:                                               ; preds = %18, %36
  %39 = phi i64 [ 0, %18 ], [ %45, %36 ]
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %20, i64 %39
  %41 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %40 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = and i64 %42, 1
  %44 = icmp eq i64 %43, 0
  %45 = add nuw i64 %39, 1
  br i1 %44, label %36, label %46

46:                                               ; preds = %30, %38, %36, %14
  %47 = phi i1 [ true, %14 ], [ false, %38 ], [ true, %36 ], [ false, %30 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage24GetRuntimeCallDescriptorEPNS0_4ZoneENS0_7Runtime10FunctionIdEiNS_4base5FlagsINS1_8Operator8PropertyEhEENS8_INS1_14CallDescriptor4FlagEiEE(%"class.v8::internal::Zone"*, i32, i32, i8, i32) local_unnamed_addr #0 align 2 {
  %6 = tail call %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime13FunctionForIdENS1_10FunctionIdE(i32 %1) #10
  %7 = getelementptr inbounds %"struct.v8::internal::Runtime::Function", %"struct.v8::internal::Runtime::Function"* %6, i64 0, i32 5
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  %10 = getelementptr inbounds %"struct.v8::internal::Runtime::Function", %"struct.v8::internal::Runtime::Function"* %6, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = tail call zeroext i1 @_ZN2v88internal8compiler7Linkage20NeedsFrameStateInputENS0_7Runtime10FunctionIdE(i32 %1)
  %13 = and i32 %4, -2
  %14 = select i1 %12, i32 %4, i32 %13
  %15 = tail call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage27GetCEntryStubCallDescriptorEPNS0_4ZoneEiiPKcNS_4base5FlagsINS1_8Operator8PropertyEhEENS8_INS1_14CallDescriptor4FlagEiEENS0_18StackArgumentOrderE(%"class.v8::internal::Zone"* %0, i32 %9, i32 %2, i8* %11, i8 %3, i32 %14, i32 0)
  ret %"class.v8::internal::compiler::CallDescriptor"* %15
}

declare %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime13FunctionForIdENS1_10FunctionIdE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage27GetCEntryStubCallDescriptorEPNS0_4ZoneEiiPKcNS_4base5FlagsINS1_8Operator8PropertyEhEENS8_INS1_14CallDescriptor4FlagEiEENS0_18StackArgumentOrderE(%"class.v8::internal::Zone"*, i32, i32, i8*, i8, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = ptrtoint i8* %3 to i64
  %9 = sext i32 %2 to i64
  %10 = add nsw i64 %9, 3
  %11 = sext i32 %1 to i64
  %12 = add nsw i64 %10, %11
  %13 = shl i64 %12, 32
  %14 = ashr exact i64 %13, 29
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = icmp ugt i64 %14, %19
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %7
  %22 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %14) #10
  br label %25

23:                                               ; preds = %7
  %24 = add i64 %16, %14
  store i64 %24, i64* %15, align 8
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi i64 [ %22, %21 ], [ %16, %23 ]
  %27 = inttoptr i64 %26 to %"class.v8::internal::compiler::LinkageLocation"*
  %28 = icmp eq i32 %1, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = inttoptr i64 %26 to i48*
  store i48 7735236100096, i48* %30, align 4
  %31 = icmp eq i32 %1, 1
  br i1 %31, label %39, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 1
  %34 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %33 to i48*
  store i48 7735236100100, i48* %34, align 4
  %35 = icmp ugt i32 %1, 2
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 2
  %38 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %37 to i48*
  store i48 7735236100112, i48* %38, align 4
  br label %39

39:                                               ; preds = %29, %25, %36, %32
  %40 = icmp sgt i32 %2, 0
  br i1 %40, label %41, label %66

41:                                               ; preds = %39
  %42 = zext i32 %2 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %121

48:                                               ; preds = %121, %41
  %49 = phi i64 [ 0, %41 ], [ %159, %121 ]
  %50 = icmp eq i64 %44, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %48, %51
  %52 = phi i64 [ %59, %51 ], [ %49, %48 ]
  %53 = phi i64 [ %64, %51 ], [ %44, %48 ]
  %54 = trunc i64 %52 to i32
  %55 = sub nsw i32 %54, %2
  %56 = shl i32 %55, 1
  %57 = zext i32 %56 to i64
  %58 = or i64 %57, 7735236100097
  %59 = add nuw nsw i64 %52, 1
  %60 = add nsw i64 %52, %11
  %61 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %60
  %62 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %61 to i48*
  %63 = trunc i64 %58 to i48
  store i48 %63, i48* %62, align 4
  %64 = add i64 %53, -1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %51, !llvm.loop !5

66:                                               ; preds = %48, %51, %39
  %67 = phi i64 [ 0, %39 ], [ %42, %51 ], [ %42, %48 ]
  %68 = add nsw i64 %67, %11
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %68
  %70 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %69 to i48*
  store i48 21474836486, i48* %70, align 4
  %71 = add nsw i64 %68, 1
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %71
  %73 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %72 to i48*
  store i48 2216203124736, i48* %73, align 4
  %74 = add nsw i64 %68, 2
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %74
  %76 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %75 to i48*
  store i48 7735236100108, i48* %76, align 4
  %77 = load i64, i64* %15, align 8
  %78 = load i64, i64* %17, align 8
  %79 = sub i64 %78, %77
  %80 = icmp ult i64 %79, 24
  br i1 %80, label %81, label %83, !prof !2

81:                                               ; preds = %66
  %82 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 24) #10
  br label %85

83:                                               ; preds = %66
  %84 = add i64 %77, 24
  store i64 %84, i64* %15, align 8
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi i64 [ %82, %81 ], [ %77, %83 ]
  %87 = inttoptr i64 %86 to %"class.v8::internal::Signature"*
  %88 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %87, i64 0, i32 0
  store i64 %11, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %87, i64 0, i32 1
  store i64 %10, i64* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %87, i64 0, i32 2
  %91 = bitcast %"class.v8::internal::compiler::LinkageLocation"** %90 to i64*
  store i64 %26, i64* %91, align 8
  %92 = load i64, i64* %15, align 8
  %93 = load i64, i64* %17, align 8
  %94 = sub i64 %93, %92
  %95 = icmp ult i64 %94, 80
  br i1 %95, label %96, label %98, !prof !2

96:                                               ; preds = %85
  %97 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 80) #10
  br label %100

98:                                               ; preds = %85
  %99 = add i64 %92, 80
  store i64 %99, i64* %15, align 8
  br label %100

100:                                              ; preds = %96, %98
  %101 = phi i64 [ %97, %96 ], [ %92, %98 ]
  %102 = inttoptr i64 %101 to %"class.v8::internal::compiler::CallDescriptor"*
  %103 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 0
  store i32 0, i32* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 1
  %105 = bitcast %"class.v8::internal::MachineType"* %104 to i16*
  store i16 1801, i16* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 3
  %107 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %106 to i64*
  store i64 7739531067390, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 4
  %109 = bitcast %"class.v8::internal::Signature"** %108 to i64*
  store i64 %86, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 5
  store i64 %9, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 6
  store i64 0, i64* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 7, i32 0
  store i8 %4, i8* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 8
  store i32 0, i32* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 9
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 10
  store i32 0, i32* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 11, i32 0
  store i32 %5, i32* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 12
  store i32 %6, i32* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 13
  %119 = bitcast i8** %118 to i64*
  store i64 %8, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %102, i64 0, i32 14
  store %"class.v8::CFunctionInfo"* null, %"class.v8::CFunctionInfo"** %120, align 8
  ret %"class.v8::internal::compiler::CallDescriptor"* %102

121:                                              ; preds = %121, %46
  %122 = phi i64 [ 0, %46 ], [ %159, %121 ]
  %123 = phi i64 [ %47, %46 ], [ %164, %121 ]
  %124 = trunc i64 %122 to i32
  %125 = sub nsw i32 %124, %2
  %126 = shl i32 %125, 1
  %127 = zext i32 %126 to i64
  %128 = or i64 %127, 7735236100097
  %129 = or i64 %122, 1
  %130 = add nsw i64 %122, %11
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %130
  %132 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %131 to i48*
  %133 = trunc i64 %128 to i48
  store i48 %133, i48* %132, align 4
  %134 = trunc i64 %129 to i32
  %135 = sub nsw i32 %134, %2
  %136 = shl i32 %135, 1
  %137 = zext i32 %136 to i64
  %138 = or i64 %137, 7735236100097
  %139 = or i64 %122, 2
  %140 = add nsw i64 %129, %11
  %141 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %140
  %142 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %141 to i48*
  %143 = trunc i64 %138 to i48
  store i48 %143, i48* %142, align 4
  %144 = trunc i64 %139 to i32
  %145 = sub nsw i32 %144, %2
  %146 = shl i32 %145, 1
  %147 = zext i32 %146 to i64
  %148 = or i64 %147, 7735236100097
  %149 = or i64 %122, 3
  %150 = add nsw i64 %139, %11
  %151 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %150
  %152 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %151 to i48*
  %153 = trunc i64 %148 to i48
  store i48 %153, i48* %152, align 4
  %154 = trunc i64 %149 to i32
  %155 = sub nsw i32 %154, %2
  %156 = shl i32 %155, 1
  %157 = zext i32 %156 to i64
  %158 = or i64 %157, 7735236100097
  %159 = add nuw nsw i64 %122, 4
  %160 = add nsw i64 %149, %11
  %161 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %27, i64 %160
  %162 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %161 to i48*
  %163 = trunc i64 %158 to i48
  store i48 %163, i48* %162, align 4
  %164 = add i64 %123, -4
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %48, label %121
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage21GetStubCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEENS9_INS1_8Operator8PropertyEhEENS0_12StubCallModeE(%"class.v8::internal::Zone"*, %"class.v8::internal::CallInterfaceDescriptor"* dereferenceable(8), i32, i32, i8, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptor", %"class.v8::internal::CallInterfaceDescriptor"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, %2
  %12 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %8, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = xor i32 %14, 1
  %17 = add nsw i32 %16, %11
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %8, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = add nsw i64 %18, %21
  %23 = shl i64 %22, 32
  %24 = ashr exact i64 %23, 29
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %26
  %30 = icmp ugt i64 %24, %29
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %6
  %32 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %24) #10
  br label %35

33:                                               ; preds = %6
  %34 = add i64 %24, %26
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi i64 [ %32, %31 ], [ %26, %33 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::compiler::LinkageLocation"*
  %38 = icmp eq i32 %20, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %75, %35
  %40 = icmp sgt i32 %11, 0
  br i1 %40, label %41, label %79

41:                                               ; preds = %39
  %42 = sext i32 %10 to i64
  %43 = zext i32 %11 to i64
  br label %81

44:                                               ; preds = %35, %75
  %45 = phi i64 [ %76, %75 ], [ 0, %35 ]
  %46 = phi i64 [ %77, %75 ], [ 0, %35 ]
  %47 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %7, align 8
  %48 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %47, i64 0, i32 7
  %49 = load %"class.v8::internal::MachineType"*, %"class.v8::internal::MachineType"** %48, align 8
  %50 = shl i64 %46, 32
  %51 = ashr exact i64 %50, 32
  %52 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %49, i64 %51
  %53 = bitcast %"class.v8::internal::MachineType"* %52 to i16*
  %54 = load i16, i16* %53, align 1
  %55 = trunc i16 %54 to i8
  %56 = icmp ugt i8 %55, 11
  br i1 %56, label %57, label %63

57:                                               ; preds = %44
  %58 = zext i16 %54 to i64
  %59 = shl nuw nsw i64 %58, 32
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %37, i64 %46
  %61 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %60 to i48*
  %62 = trunc i64 %59 to i48
  store i48 %62, i48* %61, align 4
  br label %75

63:                                               ; preds = %44
  %64 = getelementptr inbounds [3 x %"class.v8::internal::Register"], [3 x %"class.v8::internal::Register"]* bitcast ([3 x { i32 }]* @_ZZN2v88internal8compiler7Linkage21GetStubCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEENS9_INS1_8Operator8PropertyEhEENS0_12StubCallModeEE16return_registers to [3 x %"class.v8::internal::Register"]*), i64 0, i64 %45, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = shl i32 %65, 1
  %67 = zext i16 %54 to i64
  %68 = shl nuw nsw i64 %67, 32
  %69 = zext i32 %66 to i64
  %70 = or i64 %68, %69
  %71 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %37, i64 %46
  %72 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %71 to i48*
  %73 = trunc i64 %70 to i48
  store i48 %73, i48* %72, align 4
  %74 = add i64 %45, 1
  br label %75

75:                                               ; preds = %63, %57
  %76 = phi i64 [ %45, %57 ], [ %74, %63 ]
  %77 = add nuw i64 %46, 1
  %78 = icmp ult i64 %77, %21
  br i1 %78, label %44, label %39

79:                                               ; preds = %123, %39
  %80 = phi i64 [ 0, %39 ], [ %43, %123 ]
  br i1 %15, label %136, label %140

81:                                               ; preds = %123, %41
  %82 = phi i64 [ 0, %41 ], [ %134, %123 ]
  %83 = icmp slt i64 %82, %42
  br i1 %83, label %84, label %101

84:                                               ; preds = %81
  %85 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %7, align 8
  %86 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %85, i64 0, i32 6
  %87 = load %"class.v8::internal::Register"*, %"class.v8::internal::Register"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %87, i64 %82, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %85, i64 0, i32 7
  %91 = load %"class.v8::internal::MachineType"*, %"class.v8::internal::MachineType"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %85, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = trunc i64 %82 to i32
  %95 = add nsw i32 %93, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %91, i64 %96
  %98 = bitcast %"class.v8::internal::MachineType"* %97 to i16*
  %99 = load i16, i16* %98, align 1
  %100 = shl i32 %89, 1
  br label %123

101:                                              ; preds = %81
  %102 = trunc i64 %82 to i32
  %103 = sub i32 %102, %11
  %104 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %7, align 8
  %105 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %104, i64 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = icmp slt i64 %82, %107
  br i1 %108, label %109, label %119

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %104, i64 0, i32 7
  %111 = load %"class.v8::internal::MachineType"*, %"class.v8::internal::MachineType"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %104, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = add nsw i32 %113, %102
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %111, i64 %115
  %117 = bitcast %"class.v8::internal::MachineType"* %116 to i16*
  %118 = load i16, i16* %117, align 1
  br label %119

119:                                              ; preds = %101, %109
  %120 = phi i16 [ %118, %109 ], [ 1801, %101 ]
  %121 = shl i32 %103, 1
  %122 = or i32 %121, 1
  br label %123

123:                                              ; preds = %84, %119
  %124 = phi i16 [ %99, %84 ], [ %120, %119 ]
  %125 = phi i32 [ %100, %84 ], [ %122, %119 ]
  %126 = zext i16 %124 to i64
  %127 = shl nuw nsw i64 %126, 32
  %128 = zext i32 %125 to i64
  %129 = or i64 %127, %128
  %130 = add nsw i64 %82, %21
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %37, i64 %130
  %132 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %131 to i48*
  %133 = trunc i64 %129 to i48
  store i48 %133, i48* %132, align 4
  %134 = add nuw nsw i64 %82, 1
  %135 = icmp eq i64 %134, %43
  br i1 %135, label %79, label %81

136:                                              ; preds = %79
  %137 = add nsw i64 %80, %21
  %138 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %37, i64 %137
  %139 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %138 to i48*
  store i48 7735236100108, i48* %139, align 4
  br label %140

140:                                              ; preds = %136, %79
  %141 = icmp ult i32 %5, 3
  br i1 %141, label %142, label %154

142:                                              ; preds = %140
  %143 = zext i32 %5 to i48
  %144 = shl nuw nsw i48 %143, 4
  %145 = lshr i48 38655033353, %144
  %146 = trunc i48 %145 to i16
  %147 = zext i32 %5 to i48
  %148 = shl nuw nsw i48 %147, 4
  %149 = lshr i48 7696581396224, %148
  %150 = trunc i48 %149 to i16
  %151 = sext i32 %5 to i64
  %152 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN2v88internal8compiler7Linkage21GetStubCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEENS9_INS1_8Operator8PropertyEhEENS0_12StubCallModeE, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  br label %154

154:                                              ; preds = %142, %140
  %155 = phi i16 [ 0, %140 ], [ %146, %142 ]
  %156 = phi i16 [ 0, %140 ], [ %150, %142 ]
  %157 = phi i32 [ undef, %140 ], [ %153, %142 ]
  %158 = or i16 %156, %155
  %159 = zext i16 %158 to i64
  %160 = shl nuw nsw i64 %159, 32
  %161 = or i64 %160, 4294967294
  %162 = load i64, i64* %25, align 8
  %163 = load i64, i64* %27, align 8
  %164 = sub i64 %163, %162
  %165 = icmp ult i64 %164, 24
  br i1 %165, label %166, label %168, !prof !2

166:                                              ; preds = %154
  %167 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 24) #10
  br label %170

168:                                              ; preds = %154
  %169 = add i64 %162, 24
  store i64 %169, i64* %25, align 8
  br label %170

170:                                              ; preds = %166, %168
  %171 = phi i64 [ %167, %166 ], [ %162, %168 ]
  %172 = inttoptr i64 %171 to %"class.v8::internal::Signature"*
  %173 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %172, i64 0, i32 0
  store i64 %21, i64* %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %172, i64 0, i32 1
  store i64 %18, i64* %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %172, i64 0, i32 2
  %176 = bitcast %"class.v8::internal::compiler::LinkageLocation"** %175 to i64*
  store i64 %36, i64* %176, align 8
  %177 = or i32 %3, 4
  %178 = tail call i8* @_ZNK2v88internal23CallInterfaceDescriptor9DebugNameEv(%"class.v8::internal::CallInterfaceDescriptor"* %1) #10
  %179 = ptrtoint i8* %178 to i64
  %180 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %7, align 8
  %181 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %180, i64 0, i32 4
  %182 = load i32, i32* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %180, i64 0, i32 5
  %184 = load i32, i32* %183, align 4
  %185 = load i64, i64* %25, align 8
  %186 = load i64, i64* %27, align 8
  %187 = sub i64 %186, %185
  %188 = icmp ult i64 %187, 80
  br i1 %188, label %189, label %191, !prof !2

189:                                              ; preds = %170
  %190 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 80) #10
  br label %193

191:                                              ; preds = %170
  %192 = add i64 %185, 80
  store i64 %192, i64* %25, align 8
  br label %193

193:                                              ; preds = %189, %191
  %194 = phi i64 [ %190, %189 ], [ %185, %191 ]
  %195 = inttoptr i64 %194 to %"class.v8::internal::compiler::CallDescriptor"*
  %196 = sext i32 %2 to i64
  %197 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 0
  store i32 %157, i32* %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 1
  %199 = bitcast %"class.v8::internal::MachineType"* %198 to i16*
  store i16 %158, i16* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 3
  %201 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %200 to i64*
  store i64 %161, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 4
  %203 = bitcast %"class.v8::internal::Signature"** %202 to i64*
  store i64 %171, i64* %203, align 8
  %204 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 5
  store i64 %196, i64* %204, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 6
  store i64 0, i64* %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 7, i32 0
  store i8 %4, i8* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 8
  store i32 0, i32* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 9
  store i32 0, i32* %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 10
  store i32 %184, i32* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 11, i32 0
  store i32 %177, i32* %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 12
  store i32 %182, i32* %211, align 4
  %212 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 13
  %213 = bitcast i8** %212 to i64*
  store i64 %179, i64* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %195, i64 0, i32 14
  store %"class.v8::CFunctionInfo"* null, %"class.v8::CFunctionInfo"** %214, align 8
  ret %"class.v8::internal::compiler::CallDescriptor"* %195
}

declare i8* @_ZNK2v88internal23CallInterfaceDescriptor9DebugNameEv(%"class.v8::internal::CallInterfaceDescriptor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage33GetBytecodeDispatchCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEi(%"class.v8::internal::Zone"*, %"class.v8::internal::CallInterfaceDescriptor"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptor", %"class.v8::internal::CallInterfaceDescriptor"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, %2
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 32
  %11 = add i64 %10, 4294967296
  %12 = ashr exact i64 %11, 29
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ugt i64 %12, %17
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %3
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %12) #10
  br label %23

21:                                               ; preds = %3
  %22 = add i64 %12, %14
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::LinkageLocation"*
  %26 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %4, align 8
  %27 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %26, i64 0, i32 7
  %28 = bitcast %"class.v8::internal::MachineType"** %27 to i16**
  %29 = load i16*, i16** %28, align 8
  %30 = load i16, i16* %29, align 1
  %31 = zext i16 %30 to i64
  %32 = shl nuw nsw i64 %31, 32
  %33 = inttoptr i64 %24 to i48*
  %34 = trunc i64 %32 to i48
  store i48 %34, i48* %33, align 4
  %35 = icmp sgt i32 %8, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %23
  %37 = sext i32 %7 to i64
  %38 = zext i32 %8 to i64
  br label %85

39:                                               ; preds = %114, %23
  %40 = load i64, i64* %13, align 8
  %41 = load i64, i64* %15, align 8
  %42 = sub i64 %41, %40
  %43 = icmp ult i64 %42, 24
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 24) #10
  br label %48

46:                                               ; preds = %39
  %47 = add i64 %40, 24
  store i64 %47, i64* %13, align 8
  br label %48

48:                                               ; preds = %44, %46
  %49 = phi i64 [ %45, %44 ], [ %40, %46 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::Signature"*
  %51 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %50, i64 0, i32 0
  store i64 1, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %50, i64 0, i32 1
  store i64 %9, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %50, i64 0, i32 2
  %54 = bitcast %"class.v8::internal::compiler::LinkageLocation"** %53 to i64*
  store i64 %24, i64* %54, align 8
  %55 = tail call i8* @_ZNK2v88internal23CallInterfaceDescriptor9DebugNameEv(%"class.v8::internal::CallInterfaceDescriptor"* %1) #10
  %56 = ptrtoint i8* %55 to i64
  %57 = load i64, i64* %13, align 8
  %58 = load i64, i64* %15, align 8
  %59 = sub i64 %58, %57
  %60 = icmp ult i64 %59, 80
  br i1 %60, label %61, label %63, !prof !2

61:                                               ; preds = %48
  %62 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 80) #10
  br label %65

63:                                               ; preds = %48
  %64 = add i64 %57, 80
  store i64 %64, i64* %13, align 8
  br label %65

65:                                               ; preds = %61, %63
  %66 = phi i64 [ %62, %61 ], [ %57, %63 ]
  %67 = inttoptr i64 %66 to %"class.v8::internal::compiler::CallDescriptor"*
  %68 = sext i32 %2 to i64
  %69 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 0
  store i32 2, i32* %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 1
  %71 = bitcast %"class.v8::internal::MachineType"* %70 to i16*
  store i16 5, i16* %71, align 4
  %72 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 3
  %73 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %72 to i64*
  store i64 25769803774, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 4
  %75 = bitcast %"class.v8::internal::Signature"** %74 to i64*
  store i64 %49, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 5
  store i64 %68, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 6
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 7, i32 0
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 8
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 68>, <4 x i32>* %80, align 4
  %81 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 12
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 13
  %83 = bitcast i8** %82 to i64*
  store i64 %56, i64* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %67, i64 0, i32 14
  store %"class.v8::CFunctionInfo"* null, %"class.v8::CFunctionInfo"** %84, align 8
  ret %"class.v8::internal::compiler::CallDescriptor"* %67

85:                                               ; preds = %114, %36
  %86 = phi i64 [ 0, %36 ], [ %122, %114 ]
  %87 = phi i64 [ 0, %36 ], [ %118, %114 ]
  %88 = icmp slt i64 %86, %37
  br i1 %88, label %89, label %109

89:                                               ; preds = %85
  %90 = load %"class.v8::internal::CallInterfaceDescriptorData"*, %"class.v8::internal::CallInterfaceDescriptorData"** %4, align 8
  %91 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %90, i64 0, i32 6
  %92 = load %"class.v8::internal::Register"*, %"class.v8::internal::Register"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %92, i64 %86, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %90, i64 0, i32 7
  %96 = load %"class.v8::internal::MachineType"*, %"class.v8::internal::MachineType"** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::CallInterfaceDescriptorData", %"class.v8::internal::CallInterfaceDescriptorData"* %90, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = trunc i64 %86 to i32
  %100 = add nsw i32 %98, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %96, i64 %101
  %103 = bitcast %"class.v8::internal::MachineType"* %102 to i16*
  %104 = load i16, i16* %103, align 1
  %105 = shl i32 %94, 1
  %106 = zext i16 %104 to i64
  %107 = shl nuw nsw i64 %106, 32
  %108 = zext i32 %105 to i64
  br label %114

109:                                              ; preds = %85
  %110 = trunc i64 %86 to i32
  %111 = sub i32 %110, %8
  %112 = shl i32 %111, 1
  %113 = zext i32 %112 to i64
  br label %114

114:                                              ; preds = %89, %109
  %115 = phi i64 [ %108, %89 ], [ 7735236100097, %109 ]
  %116 = phi i64 [ %107, %89 ], [ %113, %109 ]
  %117 = or i64 %116, %115
  %118 = add i64 %87, 1
  %119 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %25, i64 %118
  %120 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %119 to i48*
  %121 = trunc i64 %117 to i48
  store i48 %121, i48* %120, align 4
  %122 = add nuw nsw i64 %86, 1
  %123 = icmp eq i64 %122, %38
  br i1 %123, label %39, label %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler7Linkage19GetOsrValueLocationEi(%"class.v8::internal::compiler::Linkage"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %9, label %8, !prof !6

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %1, -1
  br i1 %13, label %14, label %35

14:                                               ; preds = %9
  %15 = shl i64 %11, 32
  %16 = add i64 %15, 12884901888
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 3
  br label %31

20:                                               ; preds = %14
  %21 = ashr exact i64 %16, 32
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 4
  %23 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %22, align 8
  %24 = add nsw i64 %21, -1
  %25 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %23, i64 0, i32 2
  %26 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %23, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %24, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %26, i64 %29
  br label %31

31:                                               ; preds = %18, %20
  %32 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %19, %18 ], [ %30, %20 ]
  %33 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  br label %55

35:                                               ; preds = %9
  %36 = icmp sgt i32 %12, %1
  br i1 %36, label %43, label %37

37:                                               ; preds = %35
  %38 = sub nsw i32 %1, %12
  %39 = shl i32 %38, 1
  %40 = add i32 %39, 10
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, 7735236100097
  br label %55

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 4
  %45 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %44, align 8
  %46 = sext i32 %1 to i64
  %47 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %45, i64 0, i32 2
  %48 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %45, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %46
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %48, i64 %51
  %53 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %52 to i64*
  %54 = load i64, i64* %53, align 4
  br label %55

55:                                               ; preds = %43, %37, %31
  %56 = phi i64 [ %34, %31 ], [ %42, %37 ], [ %54, %43 ]
  ret i64 %56
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler7Linkage29ParameterHasSecondaryLocationEi(%"class.v8::internal::compiler::Linkage"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %64 [
    i32 1, label %7
    i32 4, label %41
  ]

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, -1
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 3
  br label %21

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 4
  %13 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %12, align 8
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %13, i64 0, i32 2
  %16 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %13, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %14
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %16, i64 %19
  br label %21

21:                                               ; preds = %9, %11
  %22 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %10, %9 ], [ %20, %11 ]
  %23 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = trunc i64 %24 to i32
  %26 = lshr i64 %24, 32
  %27 = and i32 %25, 1
  %28 = icmp eq i32 %27, 0
  %29 = ashr i32 %25, 1
  %30 = icmp eq i32 %29, 7
  %31 = and i1 %28, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %21
  %33 = trunc i64 %26 to i8
  %34 = icmp eq i8 %33, 8
  ret i1 %34

35:                                               ; preds = %21
  %36 = icmp eq i32 %29, 6
  %37 = and i1 %28, %36
  br i1 %37, label %38, label %64

38:                                               ; preds = %35
  %39 = trunc i64 %26 to i8
  %40 = icmp eq i8 %39, 8
  br label %64

41:                                               ; preds = %2
  %42 = icmp eq i32 %1, -1
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 3
  br label %55

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 4
  %47 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %46, align 8
  %48 = sext i32 %1 to i64
  %49 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %47, i64 0, i32 2
  %50 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %47, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, %48
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %50, i64 %53
  br label %55

55:                                               ; preds = %43, %45
  %56 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %44, %43 ], [ %54, %45 ]
  %57 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %56 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %59, 12
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = and i64 %58, 1095216660480
  %63 = icmp eq i64 %62, 34359738368
  br label %64

64:                                               ; preds = %2, %61, %55, %35, %38
  %65 = phi i1 [ false, %35 ], [ %40, %38 ], [ false, %55 ], [ %63, %61 ], [ false, %2 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler7Linkage29GetParameterSecondaryLocationEi(%"class.v8::internal::compiler::Linkage"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %3, align 8
  %5 = icmp eq i32 %1, -1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 3
  br label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 4
  %10 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %9, align 8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %10, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %10, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %11
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %13, i64 %16
  br label %18

18:                                               ; preds = %6, %8
  %19 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %7, %6 ], [ %17, %8 ]
  %20 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %4, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %28 [
    i32 1, label %22
    i32 4, label %29
  ]

22:                                               ; preds = %18
  %23 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %19 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = and i64 %24, 1099511627775
  %26 = icmp eq i64 %25, 34359738382
  %27 = select i1 %26, i64 7735236100103, i64 7735236100101
  ret i64 %27

28:                                               ; preds = %18
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

29:                                               ; preds = %18
  ret i64 7735236100103
}

declare zeroext i1 @_ZN2v88internal9IsSubtypeENS0_21MachineRepresentationES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i8 0, i8 2}
