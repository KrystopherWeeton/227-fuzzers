; ModuleID = '../../v8/src/compiler/loop-variable-optimizer.cc'
source_filename = "../../v8/src/compiler/loop-variable-optimizer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::LoopVariableOptimizer" = type { i32, i32, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData.18", %"class.v8::internal::ZoneMap" }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.11" }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"*, %"class.std::__1::__compressed_pair.14" }
%"class.v8::internal::compiler::FunctionalList" = type { %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* }
%"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons" = type { %"struct.v8::internal::compiler::LoopVariableOptimizer::Constraint", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, i64 }
%"struct.v8::internal::compiler::LoopVariableOptimizer::Constraint" = type { %"class.v8::internal::compiler::Node"*, i32, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::FunctionalList"* }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::NodeAuxData.18" = type { %"class.v8::internal::ZoneVector.19" }
%"class.v8::internal::ZoneVector.19" = type { %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { i64*, i64, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::ZoneAllocator.24" }
%"class.v8::internal::ZoneAllocator.24" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::internal::ZoneAllocator.28" }
%"class.v8::internal::ZoneAllocator.28" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneAllocator.47" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.34", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.34" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.v8::internal::RecyclingZoneAllocator.37" }
%"class.v8::internal::RecyclingZoneAllocator.37" = type { %"class.v8::internal::ZoneAllocator.38", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.38" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue" }
%"class.std::__1::queue" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::compiler::NodeMarker" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"class.v8::internal::compiler::NodeMarkerBase" = type { i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.v8::internal::compiler::InductionVariable"* }
%"class.v8::internal::compiler::InductionVariable" = type <{ %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.39", %"class.v8::internal::ZoneVector.39", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.39" = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"class.std::__1::__compressed_pair.42" }
%"struct.v8::internal::compiler::InductionVariable::Bound" = type <{ %"class.v8::internal::compiler::Node"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.v8::internal::compiler::InductionVariable::Bound"* }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.v8::internal::ZoneAllocator.45" }
%"class.v8::internal::ZoneAllocator.45" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"struct.std::__1::array" = type { [3 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::__split_buffer.50" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::internal::RecyclingZoneAllocator"* }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8compiler14FunctionalListINS1_21LoopVariableOptimizer10ConstraintEE21ResetToCommonAncestorES5_ = comdat any

$_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler14FunctionalListINS3_21LoopVariableOptimizer10ConstraintEEENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZN2v88internal21FLAG_trace_turbo_loopE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [21 x i8] c"New upper bound for \00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c" (loop \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"): \00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"New lower bound for \00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"Loop variables for loop %i:\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c" %i\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.12 = private unnamed_addr constant [11 x i8] c"Size() > 0\00", align 1

@_ZN2v88internal8compiler21LoopVariableOptimizerC1EPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler21LoopVariableOptimizerC2EPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS0_4ZoneE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizerC2EPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS0_4ZoneE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.v8::internal::ZoneAllocator.47", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 1
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Graph"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::CommonOperatorBuilder"* %2, %"class.v8::internal::compiler::CommonOperatorBuilder"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 4
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %17 to i64*
  %19 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  store i64 %16, i64* %18, align 8
  %20 = icmp eq i32 %14, 0
  br i1 %20, label %47, label %21

21:                                               ; preds = %4
  %22 = icmp ugt i32 %14, 268435455
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = shl nuw nsw i64 %15, 3
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %28
  %32 = icmp ugt i64 %26, %31
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %25
  %34 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 %26) #10
  br label %37

35:                                               ; preds = %25
  %36 = add i64 %28, %26
  store i64 %36, i64* %27, align 8
  br label %37

37:                                               ; preds = %35, %33
  %38 = phi i64 [ %34, %33 ], [ %28, %35 ]
  %39 = inttoptr i64 %38 to %"class.v8::internal::compiler::FunctionalList"*
  %40 = inttoptr i64 %38 to i8*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::FunctionalList"* %39, %"class.v8::internal::compiler::FunctionalList"** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %39, i64 %15
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::FunctionalList"* %43, %"class.v8::internal::compiler::FunctionalList"** %44, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 %26, i1 false) #10
  %45 = bitcast %"class.v8::internal::compiler::FunctionalList"** %41 to i64*
  %46 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %43 to i64
  store i64 %46, i64* %45, align 8
  br label %47

47:                                               ; preds = %4, %37
  %48 = load i32, i32* %13, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 6, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  %51 = bitcast %"class.v8::internal::ZoneAllocator.47"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  %52 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.47", %"class.v8::internal::ZoneAllocator.47"* %6, i64 0, i32 0
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %52, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.20"* %50, i64 %49, i8* nonnull dereferenceable(1) %5, %"class.v8::internal::ZoneAllocator.47"* nonnull dereferenceable(8) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1
  %55 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %54 to i64*
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::__compressed_pair.25"* %56 to i64*
  store i64 0, i64* %57, align 8
  store i64 %16, i64* %55, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer3RunEv(%"class.v8::internal::compiler::LoopVariableOptimizer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::ZoneDeque", align 8
  %3 = alloca %"class.v8::internal::ZoneQueue", align 8
  %4 = alloca %"class.v8::internal::compiler::NodeMarker", align 4
  %5 = bitcast %"class.v8::internal::ZoneQueue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 4
  %7 = bitcast %"class.v8::internal::Zone"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::ZoneDeque"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #10
  %10 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.33"* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.36"* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.31"* %17 to i8*
  %20 = bitcast %"class.std::__1::__compressed_pair.31"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #10
  %21 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::__compressed_pair.35"* %23 to i8*
  %26 = bitcast %"class.std::__1::__compressed_pair.35"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #10
  %27 = bitcast i64* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10
  %28 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #10
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 2
  %30 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %30, i64 0, i32 1
  %32 = bitcast %"class.v8::internal::compiler::Node"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.v8::internal::compiler::Node"**** %34 to i64*
  %36 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.v8::internal::compiler::Node"**** %36 to i64*
  %38 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %56

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %42) #10
  %43 = load i64, i64* %38, align 8
  %44 = load i64, i64* %21, align 8
  %45 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %36, align 8
  %46 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %34, align 8
  %47 = add i64 %44, %43
  %48 = icmp eq %"class.v8::internal::compiler::Node"*** %46, %45
  br i1 %48, label %56, label %49

49:                                               ; preds = %41
  %50 = lshr i64 %47, 9
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %45, i64 %50
  %52 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %51, align 8
  %53 = and i64 %47, 511
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, i64 %53
  %55 = bitcast %"class.v8::internal::compiler::Node"** %54 to i64*
  br label %56

56:                                               ; preds = %1, %41, %49
  %57 = phi i64* [ %55, %49 ], [ null, %41 ], [ null, %1 ]
  store i64 %33, i64* %57, align 8
  %58 = load i64, i64* %38, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %38, align 8
  %60 = bitcast %"class.v8::internal::compiler::NodeMarker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  %61 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %29, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::compiler::NodeMarker"* %4, i64 0, i32 0
  call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* nonnull %62, %"class.v8::internal::compiler::Graph"* %61, i32 2) #10
  %63 = load i64, i64* %38, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %308, label %65

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %67 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %66 to i64*
  %68 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %66 to %"class.v8::internal::compiler::Node"***
  %69 = getelementptr inbounds %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::compiler::NodeMarker"* %4, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 1
  %71 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 6
  %74 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.18", %"class.v8::internal::compiler::NodeAuxData.18"* %73, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.18", %"class.v8::internal::compiler::NodeAuxData.18"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0
  br label %78

78:                                               ; preds = %65, %305
  %79 = phi i64 [ %63, %65 ], [ %306, %305 ]
  %80 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %36, align 8
  %81 = load i64, i64* %21, align 8
  %82 = lshr i64 %81, 9
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %82
  %84 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, align 8
  %85 = and i64 %81, 511
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 %85
  %87 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %86, align 8
  %88 = add i64 %79, -1
  store i64 %88, i64* %38, align 8
  %89 = add i64 %81, 1
  store i64 %89, i64* %21, align 8
  %90 = icmp ult i64 %89, 1024
  br i1 %90, label %111, label %91

91:                                               ; preds = %78
  %92 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, align 8
  %93 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %66, align 8
  %94 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %93, i64 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = icmp ugt i64 %97, 512
  br i1 %98, label %106, label %99

99:                                               ; preds = %95, %91
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %92, i64 1
  %101 = bitcast %"class.v8::internal::compiler::Node"** %100 to i64*
  store i64 512, i64* %101, align 8
  %102 = load i64, i64* %67, align 8
  %103 = bitcast %"class.v8::internal::compiler::Node"** %92 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.v8::internal::compiler::Node"** %92, %"class.v8::internal::compiler::Node"*** %68, align 8
  %104 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %36, align 8
  %105 = load i64, i64* %21, align 8
  br label %106

106:                                              ; preds = %99, %95
  %107 = phi i64 [ %89, %95 ], [ %105, %99 ]
  %108 = phi %"class.v8::internal::compiler::Node"*** [ %80, %95 ], [ %104, %99 ]
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %108, i64 1
  store %"class.v8::internal::compiler::Node"*** %109, %"class.v8::internal::compiler::Node"**** %36, align 8
  %110 = add i64 %107, -512
  store i64 %110, i64* %21, align 8
  br label %111

111:                                              ; preds = %78, %106
  %112 = load i32, i32* %69, align 4
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %87, i64 0, i32 2
  store i32 %112, i32* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %87, i64 0, i32 0
  %115 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %115, i64 0, i32 2
  %117 = load i16, i16* %116, align 8
  %118 = icmp eq i16 %117, 1
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %115, i64 0, i32 7
  %120 = select i1 %118, i32* %70, i32* %119
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %180

123:                                              ; preds = %111
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %87, i64 0, i32 3
  %125 = ptrtoint %"class.v8::internal::compiler::Node"* %87 to i64
  %126 = add i64 %125, 32
  %127 = inttoptr i64 %126 to i64*
  br label %130

128:                                              ; preds = %170
  %129 = icmp eq i32 %179, %121
  br i1 %129, label %180, label %130

130:                                              ; preds = %128, %123
  %131 = phi %"class.v8::internal::compiler::Operator"* [ %115, %123 ], [ %145, %128 ]
  %132 = phi i32 [ 0, %123 ], [ %179, %128 ]
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %131, i64 0, i32 7
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, %132
  br i1 %135, label %137, label %136, !prof !3

136:                                              ; preds = %130
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %131, i64 0, i32 5
  %139 = load i32, i32* %138, align 4
  %140 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %131) #10
  %141 = zext i1 %140 to i32
  %142 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %114, align 8
  %143 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %142) #10
  %144 = zext i1 %143 to i32
  %145 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %114, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %145, i64 0, i32 6
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %139, %132
  %149 = add i32 %148, %141
  %150 = add i32 %149, %144
  %151 = add i32 %150, %147
  %152 = load i32, i32* %124, align 4
  %153 = and i32 %152, 251658240
  %154 = icmp eq i32 %153, 251658240
  br i1 %154, label %155, label %158

155:                                              ; preds = %137
  %156 = load i64, i64* %127, align 8
  %157 = add i64 %156, 16
  br label %158

158:                                              ; preds = %137, %155
  %159 = phi i64 [ %157, %155 ], [ %126, %137 ]
  %160 = inttoptr i64 %159 to %"class.v8::internal::compiler::Node"**
  %161 = sext i32 %151 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %160, i64 %161
  %163 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %163, i64 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 16777215
  %167 = zext i32 %166 to i64
  %168 = load i64, i64* %71, align 8
  %169 = icmp ugt i64 %168, %167
  br i1 %169, label %170, label %305

170:                                              ; preds = %158
  %171 = load i64*, i64** %72, align 8
  %172 = lshr i64 %167, 6
  %173 = getelementptr inbounds i64, i64* %171, i64 %172
  %174 = and i64 %167, 63
  %175 = shl i64 1, %174
  %176 = load i64, i64* %173, align 8
  %177 = and i64 %176, %175
  %178 = icmp eq i64 %177, 0
  %179 = add nuw nsw i32 %132, 1
  br i1 %178, label %305, label %128

180:                                              ; preds = %128, %111
  call void @_ZN2v88internal8compiler21LoopVariableOptimizer9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %87)
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %87, i64 0, i32 3
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %182, 16777215
  %184 = zext i32 %183 to i64
  %185 = load i64, i64* %71, align 8
  %186 = icmp ugt i64 %185, %184
  br i1 %186, label %189, label %187

187:                                              ; preds = %180
  %188 = add nuw nsw i64 %184, 1
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.20"* %74, i64 %188, i1 zeroext false) #10
  br label %189

189:                                              ; preds = %187, %180
  %190 = load i64*, i64** %75, align 8
  %191 = lshr i64 %184, 6
  %192 = getelementptr inbounds i64, i64* %190, i64 %191
  %193 = and i64 %184, 63
  %194 = shl i64 1, %193
  %195 = load i64, i64* %192, align 8
  %196 = and i64 %195, %194
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %189
  %199 = or i64 %195, %194
  store i64 %199, i64* %192, align 8
  br label %200

200:                                              ; preds = %189, %198
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %87, i64 0, i32 4
  %202 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %201, align 8
  %203 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %202, null
  br i1 %203, label %305, label %204

204:                                              ; preds = %200, %303
  %205 = phi %"struct.v8::internal::compiler::Node::Use"* [ %207, %303 ], [ %202, %200 ]
  %206 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %205, i64 0, i32 0
  %207 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %206, align 8
  %208 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %205, i64 0, i32 2
  %209 = load i32, i32* %208, align 8
  %210 = lshr i32 %209, 1
  %211 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %205, i64 1
  %212 = zext i32 %210 to i64
  %213 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %211, i64 %212
  %214 = and i32 %209, 1
  %215 = icmp eq i32 %214, 0
  %216 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %213 to i64
  %217 = select i1 %215, i64 16, i64 32
  %218 = add i64 %217, %216
  %219 = inttoptr i64 %218 to %"class.v8::internal::compiler::Node"**
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 %212
  %221 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %205, %"class.v8::internal::compiler::Node"** %220) #10
  br i1 %221, label %222, label %303

222:                                              ; preds = %204
  %223 = load i32, i32* %208, align 8
  %224 = lshr i32 %223, 1
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %211, i64 %225
  %227 = and i32 %223, 1
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %222
  %230 = bitcast %"struct.v8::internal::compiler::Node::Use"* %226 to %"class.v8::internal::compiler::Node"*
  br label %234

231:                                              ; preds = %222
  %232 = bitcast %"struct.v8::internal::compiler::Node::Use"* %226 to %"class.v8::internal::compiler::Node"**
  %233 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, align 8
  br label %234

234:                                              ; preds = %229, %231
  %235 = phi %"class.v8::internal::compiler::Node"* [ %230, %229 ], [ %233, %231 ]
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %235, i64 0, i32 0
  %237 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %237, i64 0, i32 11
  %239 = load i32, i32* %238, align 8
  %240 = icmp sgt i32 %239, 0
  br i1 %240, label %241, label %303

241:                                              ; preds = %234
  br i1 %228, label %244, label %242

242:                                              ; preds = %241
  %243 = bitcast %"struct.v8::internal::compiler::Node::Use"* %226 to %"class.v8::internal::compiler::Node"*
  br label %247

244:                                              ; preds = %241
  %245 = bitcast %"struct.v8::internal::compiler::Node::Use"* %226 to %"class.v8::internal::compiler::Node"**
  %246 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %245, align 8
  br label %247

247:                                              ; preds = %242, %244
  %248 = phi %"class.v8::internal::compiler::Node"* [ %243, %242 ], [ %246, %244 ]
  %249 = ptrtoint %"class.v8::internal::compiler::Node"* %248 to i64
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %248, i64 0, i32 0
  %251 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %250, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %251, i64 0, i32 2
  %253 = load i16, i16* %252, align 8
  %254 = icmp eq i16 %253, 1
  br i1 %254, label %255, label %259

255:                                              ; preds = %247
  %256 = load i32, i32* %76, align 8
  %257 = icmp eq i32 %224, %256
  br i1 %257, label %259, label %258

258:                                              ; preds = %255
  call void @_ZN2v88internal8compiler21LoopVariableOptimizer13VisitBackedgeEPNS1_4NodeES4_(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %87, %"class.v8::internal::compiler::Node"* %248)
  br label %303

259:                                              ; preds = %255, %247
  %260 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %248, i64 0, i32 2
  %261 = load i32, i32* %260, align 8
  %262 = load i32, i32* %69, align 4
  %263 = call i32 @llvm.usub.sat.i32(i32 %261, i32 %262) #10
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %303

265:                                              ; preds = %259
  %266 = load i64, i64* %35, align 8
  %267 = load i64, i64* %37, align 8
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 0
  %270 = shl i64 %268, 6
  %271 = add i64 %270, -1
  %272 = select i1 %269, i64 0, i64 %271
  %273 = load i64, i64* %21, align 8
  %274 = load i64, i64* %38, align 8
  %275 = add i64 %274, %273
  %276 = icmp eq i64 %272, %275
  %277 = inttoptr i64 %267 to %"class.v8::internal::compiler::Node"***
  %278 = inttoptr i64 %266 to %"class.v8::internal::compiler::Node"***
  br i1 %276, label %279, label %285

279:                                              ; preds = %265
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %77) #10
  %280 = load i64, i64* %38, align 8
  %281 = load i64, i64* %21, align 8
  %282 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %36, align 8
  %283 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %34, align 8
  %284 = add i64 %281, %280
  br label %285

285:                                              ; preds = %279, %265
  %286 = phi i64 [ %284, %279 ], [ %275, %265 ]
  %287 = phi %"class.v8::internal::compiler::Node"*** [ %283, %279 ], [ %278, %265 ]
  %288 = phi %"class.v8::internal::compiler::Node"*** [ %282, %279 ], [ %277, %265 ]
  %289 = icmp eq %"class.v8::internal::compiler::Node"*** %287, %288
  br i1 %289, label %297, label %290

290:                                              ; preds = %285
  %291 = lshr i64 %286, 9
  %292 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %288, i64 %291
  %293 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %292, align 8
  %294 = and i64 %286, 511
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %293, i64 %294
  %296 = bitcast %"class.v8::internal::compiler::Node"** %295 to i64*
  br label %297

297:                                              ; preds = %285, %290
  %298 = phi i64* [ %296, %290 ], [ null, %285 ]
  store i64 %249, i64* %298, align 8
  %299 = load i64, i64* %38, align 8
  %300 = add i64 %299, 1
  store i64 %300, i64* %38, align 8
  %301 = load i32, i32* %69, align 4
  %302 = add i32 %301, 1
  store i32 %302, i32* %260, align 8
  br label %303

303:                                              ; preds = %259, %258, %297, %234, %204
  %304 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %207, null
  br i1 %304, label %305, label %204

305:                                              ; preds = %170, %158, %303, %200
  %306 = load i64, i64* %38, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %78

308:                                              ; preds = %305, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  %309 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %309) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::FunctionalList", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  switch i16 %7, label %74 [
    i16 10, label %8
    i16 1, label %9
    i16 5, label %10
    i16 4, label %11
    i16 0, label %12
    i16 52, label %73
  ]

8:                                                ; preds = %2
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer10VisitMergeEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %75

9:                                                ; preds = %2
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer24DetectInductionVariablesEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1) #10
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1) #10
  br label %75

10:                                               ; preds = %2
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer7VisitIfEPNS1_4NodeEb(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1, i1 zeroext false)
  br label %75

11:                                               ; preds = %2
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer7VisitIfEPNS1_4NodeEb(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1, i1 zeroext true)
  br label %75

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 16777215
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::compiler::FunctionalList"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %13 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp ugt i64 %24, %17
  %26 = inttoptr i64 %22 to %"class.v8::internal::compiler::FunctionalList"*
  br i1 %25, label %35, label %27

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %13, i64 0, i32 0, i32 0
  %29 = bitcast %"class.v8::internal::compiler::FunctionalList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %3, i64 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %30, align 8
  %31 = add nuw nsw i64 %17, 1
  %32 = sub nsw i64 %31, %24
  call void @_ZNSt3__16vectorIN2v88internal8compiler14FunctionalListINS3_21LoopVariableOptimizer10ConstraintEEENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector.12"* %28, i64 %32, %"class.v8::internal::compiler::FunctionalList"* nonnull dereferenceable(8) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %33 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"** %33, align 8
  br label %35

35:                                               ; preds = %27, %12
  %36 = phi %"class.v8::internal::compiler::FunctionalList"* [ %26, %12 ], [ %34, %27 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %36, i64 %17
  %38 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %37, i64 0, i32 0
  %39 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %38, align 8
  %40 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %39, null
  br i1 %40, label %75, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %39, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %71

45:                                               ; preds = %41, %65
  %46 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %69, %65 ], [ null, %41 ]
  %47 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %67, %65 ], [ %39, %41 ]
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  %50 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %46, i64 0, i32 0, i32 0
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::Node"* %49, %51
  br i1 %52, label %53, label %71

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %47, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %46, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %59, label %71

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %47, i64 0, i32 0, i32 2
  %61 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %46, i64 0, i32 0, i32 2
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::Node"* %61, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %47, i64 0, i32 1
  %67 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %66, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %46, i64 0, i32 1
  %69 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %68, align 8
  %70 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %67, %69
  br i1 %70, label %75, label %45

71:                                               ; preds = %59, %53, %45, %41
  %72 = bitcast %"class.v8::internal::compiler::FunctionalList"* %37 to i64*
  store i64 0, i64* %72, align 8
  br label %75

73:                                               ; preds = %2
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1) #10
  br label %75

74:                                               ; preds = %2
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1) #10
  br label %75

75:                                               ; preds = %65, %71, %35, %74, %73, %11, %10, %9, %8
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer13VisitBackedgeEPNS1_4NodeES4_(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::Node"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %187

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::compiler::FunctionalList"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %10 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp ugt i64 %21, %14
  br i1 %22, label %23, label %187

23:                                               ; preds = %9
  %24 = inttoptr i64 %19 to %"class.v8::internal::compiler::FunctionalList"*
  %25 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %24, i64 %14, i32 0
  %26 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %187, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"**
  br label %32

32:                                               ; preds = %29, %182
  %33 = phi i64 [ %27, %29 ], [ %185, %182 ]
  %34 = inttoptr i64 %33 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %34, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %34, i64 0, i32 0, i32 2
  %40 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %36, i64 0, i32 0
  %42 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %42, i64 0, i32 2
  %44 = load i16, i16* %43, align 8
  %45 = icmp eq i16 %44, 35
  br i1 %45, label %46, label %111

46:                                               ; preds = %32
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %42, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %42, i64 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %42) #10
  %55 = zext i1 %54 to i32
  %56 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %41, align 8
  %57 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %56) #10
  %58 = zext i1 %57 to i32
  %59 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %41, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %59, i64 0, i32 6
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %53, %55
  %63 = add i32 %62, %58
  %64 = add i32 %63, %61
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %36, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 251658240
  %68 = icmp eq i32 %67, 251658240
  %69 = ptrtoint %"class.v8::internal::compiler::Node"* %36 to i64
  %70 = add i64 %69, 32
  br i1 %68, label %71, label %75

71:                                               ; preds = %51
  %72 = inttoptr i64 %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 16
  br label %75

75:                                               ; preds = %51, %71
  %76 = phi i64 [ %74, %71 ], [ %70, %51 ]
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"**
  %78 = sext i32 %64 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, i64 %78
  %80 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %79, align 8
  %81 = icmp eq %"class.v8::internal::compiler::Node"* %80, %2
  br i1 %81, label %82, label %111

82:                                               ; preds = %75
  %83 = and i32 %66, 16777215
  %84 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %85 = icmp eq %"class.std::__1::__tree_node"* %84, null
  br i1 %85, label %111, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"class.std::__1::__tree_end_node"* [ %97, %86 ], [ %30, %82 ]
  %88 = phi %"class.std::__1::__tree_node"* [ %98, %86 ], [ %84, %82 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 1, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, %83
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::__tree_node_base"** %92 to %"class.std::__1::__tree_node"**
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::__tree_node"* %88 to %"class.std::__1::__tree_node"**
  %96 = select i1 %91, %"class.std::__1::__tree_node"** %93, %"class.std::__1::__tree_node"** %95
  %97 = select i1 %91, %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"* %94
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %96, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  br i1 %99, label %100, label %86

100:                                              ; preds = %86
  %101 = icmp eq %"class.std::__1::__tree_end_node"* %97, %30
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 4
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %83, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 5
  %109 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"class.v8::internal::compiler::InductionVariable"**
  %110 = load %"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::InductionVariable"** %109, align 8
  tail call void @_ZN2v88internal8compiler17InductionVariable13AddUpperBoundEPNS1_4NodeENS2_14ConstraintKindE(%"class.v8::internal::compiler::InductionVariable"* %110, %"class.v8::internal::compiler::Node"* %40, i32 %38)
  br label %111

111:                                              ; preds = %102, %100, %82, %107, %75, %32
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %40, i64 0, i32 0
  %113 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %113, i64 0, i32 2
  %115 = load i16, i16* %114, align 8
  %116 = icmp eq i16 %115, 35
  br i1 %116, label %117, label %182

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %113, i64 0, i32 7
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %122, label %121, !prof !3

121:                                              ; preds = %117
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %113, i64 0, i32 5
  %124 = load i32, i32* %123, align 4
  %125 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %113) #10
  %126 = zext i1 %125 to i32
  %127 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %112, align 8
  %128 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %127) #10
  %129 = zext i1 %128 to i32
  %130 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %112, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %130, i64 0, i32 6
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %124, %126
  %134 = add i32 %133, %129
  %135 = add i32 %134, %132
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %40, i64 0, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, 251658240
  %139 = icmp eq i32 %138, 251658240
  %140 = ptrtoint %"class.v8::internal::compiler::Node"* %40 to i64
  %141 = add i64 %140, 32
  br i1 %139, label %142, label %146

142:                                              ; preds = %122
  %143 = inttoptr i64 %141 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 16
  br label %146

146:                                              ; preds = %122, %142
  %147 = phi i64 [ %145, %142 ], [ %141, %122 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"**
  %149 = sext i32 %135 to i64
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 %149
  %151 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, align 8
  %152 = icmp eq %"class.v8::internal::compiler::Node"* %151, %2
  br i1 %152, label %153, label %182

153:                                              ; preds = %146
  %154 = and i32 %137, 16777215
  %155 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %156 = icmp eq %"class.std::__1::__tree_node"* %155, null
  br i1 %156, label %182, label %157

157:                                              ; preds = %153, %157
  %158 = phi %"class.std::__1::__tree_end_node"* [ %168, %157 ], [ %30, %153 ]
  %159 = phi %"class.std::__1::__tree_node"* [ %169, %157 ], [ %155, %153 ]
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 1, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, %154
  %163 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 0, i32 1
  %164 = bitcast %"class.std::__1::__tree_node_base"** %163 to %"class.std::__1::__tree_node"**
  %165 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::__tree_node"* %159 to %"class.std::__1::__tree_node"**
  %167 = select i1 %162, %"class.std::__1::__tree_node"** %164, %"class.std::__1::__tree_node"** %166
  %168 = select i1 %162, %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"* %165
  %169 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %167, align 8
  %170 = icmp eq %"class.std::__1::__tree_node"* %169, null
  br i1 %170, label %171, label %157

171:                                              ; preds = %157
  %172 = icmp eq %"class.std::__1::__tree_end_node"* %168, %30
  br i1 %172, label %182, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 4
  %175 = bitcast %"class.std::__1::__tree_end_node"* %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = icmp slt i32 %154, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 5
  %180 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.v8::internal::compiler::InductionVariable"**
  %181 = load %"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::InductionVariable"** %180, align 8
  tail call void @_ZN2v88internal8compiler17InductionVariable13AddLowerBoundEPNS1_4NodeENS2_14ConstraintKindE(%"class.v8::internal::compiler::InductionVariable"* %181, %"class.v8::internal::compiler::Node"* %36, i32 %38)
  br label %182

182:                                              ; preds = %173, %171, %153, %178, %146, %111
  %183 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %34, i64 0, i32 1
  %184 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %32

187:                                              ; preds = %182, %9, %23, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17InductionVariable13AddUpperBoundEPNS1_4NodeENS2_14ConstraintKindE(%"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.v8::internal::StdoutStream", align 8
  %6 = load i8, i8* @_ZN2v88internal21FLAG_trace_turbo_loopE, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %91, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.v8::internal::StdoutStream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %"class.v8::internal::StdoutStream"* %5 to %"class.v8::internal::OFStream"*
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %11, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %12) #10
  %13 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %14 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %15 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %14, %"class.v8::base::RecursiveMutex"** %15, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  %16 = bitcast %"class.v8::internal::StdoutStream"* %5 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 20) #10
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 16777215
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %16, i32 %22) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #10
  %25 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %8
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

32:                                               ; preds = %8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %27) #10
  %36 = zext i1 %35 to i32
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %26, align 8
  %38 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #10
  %39 = zext i1 %38 to i32
  %40 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %26, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %40, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %34, %36
  %44 = add i32 %43, %39
  %45 = add i32 %44, %42
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 251658240
  %49 = icmp eq i32 %48, 251658240
  %50 = ptrtoint %"class.v8::internal::compiler::Node"* %25 to i64
  %51 = add i64 %50, 32
  br i1 %49, label %52, label %56

52:                                               ; preds = %32
  %53 = inttoptr i64 %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 16
  br label %56

56:                                               ; preds = %32, %52
  %57 = phi i64 [ %55, %52 ], [ %51, %32 ]
  %58 = inttoptr i64 %57 to %"class.v8::internal::compiler::Node"**
  %59 = sext i32 %45 to i64
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, i64 %59
  %61 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %61, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 16777215
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %16, i32 %64) #10
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #10
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, %"class.v8::internal::compiler::Node"* dereferenceable(32) %1) #10
  %68 = bitcast %"class.v8::internal::StdoutStream"* %5 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr i8, i8* %69, i64 -24
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds i8, i8* %9, i64 %72
  %74 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #10
  %75 = bitcast i8* %73 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %75) #10
  %76 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %77 = bitcast %"class.std::__1::locale::facet"* %76 to %"class.std::__1::ctype"*
  %78 = bitcast %"class.std::__1::locale::facet"* %76 to i8 (%"class.std::__1::ctype"*, i8)***
  %79 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %78, align 8
  %80 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %79, i64 7
  %81 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %80, align 8
  %82 = call signext i8 %81(%"class.std::__1::ctype"* %77, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #10
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %16, i8 signext %82) #10
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %16) #10
  %85 = bitcast %"class.v8::internal::StdoutStream"* %5 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_ios.base"* %86 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %87, align 8
  %88 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %15, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %88) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %85, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %89) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %16, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %90 = bitcast %"class.std::__1::basic_ios.base"* %86 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %90) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %9) #10
  br label %91

91:                                               ; preds = %3, %56
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 6, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %94 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  %96 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %95, align 8
  %97 = icmp ult %"struct.v8::internal::compiler::InductionVariable::Bound"* %94, %96
  %98 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %96 to i64
  br i1 %97, label %99, label %105

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %94, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %100, align 8
  %101 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %94, i64 0, i32 1
  store i32 %2, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %94, i64 1
  %103 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %102 to i64
  %104 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %93 to i64*
  store i64 %103, i64* %104, align 8
  br label %205

105:                                              ; preds = %91
  %106 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %94 to i64
  %107 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %93 to i64*
  %108 = bitcast %"class.std::__1::vector.40"* %92 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %106, %109
  %111 = ashr exact i64 %110, 4
  %112 = add nsw i64 %111, 1
  %113 = icmp ugt i64 %112, 134217727
  br i1 %113, label %114, label %116

114:                                              ; preds = %105
  %115 = bitcast %"class.std::__1::vector.40"* %92 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #11
  unreachable

116:                                              ; preds = %105
  %117 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %95 to i64*
  %118 = sub i64 %98, %109
  %119 = ashr exact i64 %118, 4
  %120 = icmp ult i64 %119, 67108863
  br i1 %120, label %121, label %126

121:                                              ; preds = %116
  %122 = ashr exact i64 %118, 3
  %123 = icmp ult i64 %122, %112
  %124 = select i1 %123, i64 %112, i64 %122
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %144, label %126

126:                                              ; preds = %121, %116
  %127 = phi i64 [ %124, %121 ], [ 134217727, %116 ]
  %128 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %129 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %128, align 8
  %130 = shl i64 %127, 4
  %131 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %129, i64 0, i32 2
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %129, i64 0, i32 3
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %134, %132
  %136 = icmp ugt i64 %130, %135
  br i1 %136, label %137, label %139, !prof !2

137:                                              ; preds = %126
  %138 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %129, i64 %130) #10
  br label %141

139:                                              ; preds = %126
  %140 = add i64 %132, %130
  store i64 %140, i64* %131, align 8
  br label %141

141:                                              ; preds = %139, %137
  %142 = phi i64 [ %138, %137 ], [ %132, %139 ]
  %143 = inttoptr i64 %142 to %"struct.v8::internal::compiler::InductionVariable::Bound"*
  br label %144

144:                                              ; preds = %141, %121
  %145 = phi i64 [ %127, %141 ], [ 0, %121 ]
  %146 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %143, %141 ], [ null, %121 ]
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %146, i64 %111
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %146, i64 %145
  %149 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %148 to i64
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %147, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %146, i64 %111, i32 1
  store i32 %2, i32* %151, align 8
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %147, i64 1
  %153 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %152 to i64
  %154 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %92, i64 0, i32 0, i32 0
  %155 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %154, align 8
  %156 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %93, align 8
  %157 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %156, %155
  br i1 %157, label %202, label %158

158:                                              ; preds = %144
  %159 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %155 to i64
  %160 = getelementptr %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %156, i64 -1, i32 0
  %161 = ptrtoint %"class.v8::internal::compiler::Node"** %160 to i64
  %162 = sub i64 %161, %159
  %163 = lshr i64 %162, 4
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 3
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %177, label %167

167:                                              ; preds = %158, %167
  %168 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %171, %167 ], [ %147, %158 ]
  %169 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %172, %167 ], [ %156, %158 ]
  %170 = phi i64 [ %175, %167 ], [ %165, %158 ]
  %171 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %168, i64 -1
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %169, i64 -1
  %173 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %171 to i8*
  %174 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 16, i1 false) #10
  %175 = add i64 %170, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %167, !llvm.loop !5

177:                                              ; preds = %167, %158
  %178 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ undef, %158 ], [ %171, %167 ]
  %179 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %147, %158 ], [ %171, %167 ]
  %180 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %156, %158 ], [ %172, %167 ]
  %181 = icmp ult i64 %162, 48
  br i1 %181, label %202, label %182

182:                                              ; preds = %177, %182
  %183 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %197, %182 ], [ %179, %177 ]
  %184 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %198, %182 ], [ %180, %177 ]
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %183, i64 -1
  %186 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %184, i64 -1
  %187 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %185 to i8*
  %188 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 16, i1 false) #10
  %189 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %183, i64 -2
  %190 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %184, i64 -2
  %191 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %189 to i8*
  %192 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* align 8 %192, i64 16, i1 false) #10
  %193 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %183, i64 -3
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %184, i64 -3
  %195 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %193 to i8*
  %196 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 16, i1 false) #10
  %197 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %183, i64 -4
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %184, i64 -4
  %199 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %197 to i8*
  %200 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 16, i1 false) #10
  %201 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %198, %155
  br i1 %201, label %202, label %182

202:                                              ; preds = %177, %182, %144
  %203 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %147, %144 ], [ %178, %177 ], [ %197, %182 ]
  %204 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %203 to i64
  store i64 %204, i64* %108, align 8
  store i64 %153, i64* %107, align 8
  store i64 %149, i64* %117, align 8
  br label %205

205:                                              ; preds = %99, %202
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17InductionVariable13AddLowerBoundEPNS1_4NodeENS2_14ConstraintKindE(%"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::StdoutStream", align 8
  %5 = load i8, i8* @_ZN2v88internal21FLAG_trace_turbo_loopE, align 1, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::internal::StdoutStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.v8::internal::OFStream"*
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %10, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %11) #10
  %12 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %13 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %14 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %13, %"class.v8::base::RecursiveMutex"** %14, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %13) #10
  %15 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 20) #10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %15, i32 %21) #10
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #10
  %24 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 7
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %7
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %26) #10
  %35 = zext i1 %34 to i32
  %36 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %37 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %36) #10
  %38 = zext i1 %37 to i32
  %39 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %39, i64 0, i32 6
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %33, %35
  %43 = add i32 %42, %38
  %44 = add i32 %43, %41
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 251658240
  %48 = icmp eq i32 %47, 251658240
  %49 = ptrtoint %"class.v8::internal::compiler::Node"* %24 to i64
  %50 = add i64 %49, 32
  br i1 %48, label %51, label %55

51:                                               ; preds = %31
  %52 = inttoptr i64 %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 16
  br label %55

55:                                               ; preds = %31, %51
  %56 = phi i64 [ %54, %51 ], [ %50, %31 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"**
  %58 = sext i32 %44 to i64
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 %58
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 16777215
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %15, i32 %63) #10
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #10
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, %"class.v8::internal::compiler::Node"* dereferenceable(32) %1) #10
  %67 = bitcast %"class.v8::internal::StdoutStream"* %4 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2
  %69 = bitcast %"class.std::__1::basic_ios.base"* %68 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %69, align 8
  %70 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %14, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %70) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %67, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %71) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %15, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %72 = bitcast %"class.std::__1::basic_ios.base"* %68 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %72) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %8) #10
  br label %73

73:                                               ; preds = %3, %55
  %74 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 5, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %76 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %78 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %77, align 8
  %79 = icmp ult %"struct.v8::internal::compiler::InductionVariable::Bound"* %76, %78
  %80 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %78 to i64
  br i1 %79, label %81, label %87

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %76, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %82, align 8
  %83 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %76, i64 0, i32 1
  store i32 %2, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %76, i64 1
  %85 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %84 to i64
  %86 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %75 to i64*
  store i64 %85, i64* %86, align 8
  br label %187

87:                                               ; preds = %73
  %88 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %76 to i64
  %89 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %75 to i64*
  %90 = bitcast %"class.std::__1::vector.40"* %74 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %88, %91
  %93 = ashr exact i64 %92, 4
  %94 = add nsw i64 %93, 1
  %95 = icmp ugt i64 %94, 134217727
  br i1 %95, label %96, label %98

96:                                               ; preds = %87
  %97 = bitcast %"class.std::__1::vector.40"* %74 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %97) #11
  unreachable

98:                                               ; preds = %87
  %99 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %77 to i64*
  %100 = sub i64 %80, %91
  %101 = ashr exact i64 %100, 4
  %102 = icmp ult i64 %101, 67108863
  br i1 %102, label %103, label %108

103:                                              ; preds = %98
  %104 = ashr exact i64 %100, 3
  %105 = icmp ult i64 %104, %94
  %106 = select i1 %105, i64 %94, i64 %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %126, label %108

108:                                              ; preds = %103, %98
  %109 = phi i64 [ %106, %103 ], [ 134217727, %98 ]
  %110 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %111 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %110, align 8
  %112 = shl i64 %109, 4
  %113 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %114
  %118 = icmp ugt i64 %112, %117
  br i1 %118, label %119, label %121, !prof !2

119:                                              ; preds = %108
  %120 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %111, i64 %112) #10
  br label %123

121:                                              ; preds = %108
  %122 = add i64 %114, %112
  store i64 %122, i64* %113, align 8
  br label %123

123:                                              ; preds = %121, %119
  %124 = phi i64 [ %120, %119 ], [ %114, %121 ]
  %125 = inttoptr i64 %124 to %"struct.v8::internal::compiler::InductionVariable::Bound"*
  br label %126

126:                                              ; preds = %123, %103
  %127 = phi i64 [ %109, %123 ], [ 0, %103 ]
  %128 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %125, %123 ], [ null, %103 ]
  %129 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %128, i64 %93
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %128, i64 %127
  %131 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %130 to i64
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %129, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %132, align 8
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %128, i64 %93, i32 1
  store i32 %2, i32* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %129, i64 1
  %135 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %134 to i64
  %136 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %74, i64 0, i32 0, i32 0
  %137 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %136, align 8
  %138 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %75, align 8
  %139 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %138, %137
  br i1 %139, label %184, label %140

140:                                              ; preds = %126
  %141 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %137 to i64
  %142 = getelementptr %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %138, i64 -1, i32 0
  %143 = ptrtoint %"class.v8::internal::compiler::Node"** %142 to i64
  %144 = sub i64 %143, %141
  %145 = lshr i64 %144, 4
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %140, %149
  %150 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %153, %149 ], [ %129, %140 ]
  %151 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %154, %149 ], [ %138, %140 ]
  %152 = phi i64 [ %157, %149 ], [ %147, %140 ]
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %150, i64 -1
  %154 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %151, i64 -1
  %155 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %153 to i8*
  %156 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #10
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %149, !llvm.loop !7

159:                                              ; preds = %149, %140
  %160 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ undef, %140 ], [ %153, %149 ]
  %161 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %129, %140 ], [ %153, %149 ]
  %162 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %138, %140 ], [ %154, %149 ]
  %163 = icmp ult i64 %144, 48
  br i1 %163, label %184, label %164

164:                                              ; preds = %159, %164
  %165 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %179, %164 ], [ %161, %159 ]
  %166 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %180, %164 ], [ %162, %159 ]
  %167 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %165, i64 -1
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %166, i64 -1
  %169 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %167 to i8*
  %170 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #10
  %171 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %165, i64 -2
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %166, i64 -2
  %173 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %171 to i8*
  %174 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 16, i1 false) #10
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %165, i64 -3
  %176 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %166, i64 -3
  %177 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %175 to i8*
  %178 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #10
  %179 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %165, i64 -4
  %180 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %166, i64 -4
  %181 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %179 to i8*
  %182 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 16, i1 false) #10
  %183 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %180, %137
  br i1 %183, label %184, label %164

184:                                              ; preds = %159, %164, %126
  %185 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %129, %126 ], [ %160, %159 ], [ %179, %164 ]
  %186 = ptrtoint %"struct.v8::internal::compiler::InductionVariable::Bound"* %185 to i64
  store i64 %186, i64* %90, align 8
  store i64 %135, i64* %89, align 8
  store i64 %131, i64* %99, align 8
  br label %187

187:                                              ; preds = %81, %184
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer10VisitMergeEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::FunctionalList", align 8
  %4 = alloca %"class.v8::internal::compiler::FunctionalList", align 8
  %5 = bitcast %"class.v8::internal::compiler::FunctionalList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 251658240
  %10 = icmp eq i32 %9, 251658240
  %11 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %12 = add i64 %11, 32
  br i1 %10, label %13, label %17

13:                                               ; preds = %2
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 16
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i64 [ %16, %13 ], [ %12, %2 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::Node"**
  %20 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %20, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 16777215
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.v8::internal::compiler::FunctionalList"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %6 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 3
  %32 = icmp ugt i64 %31, %24
  br i1 %32, label %33, label %37

33:                                               ; preds = %17
  %34 = inttoptr i64 %29 to %"class.v8::internal::compiler::FunctionalList"*
  %35 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %34, i64 %24, i32 0
  %36 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %35, align 8
  br label %37

37:                                               ; preds = %17, %33
  %38 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %36, %33 ], [ null, %17 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %4, i64 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %38, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %39, align 8
  %40 = inttoptr i64 %12 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %41 = inttoptr i64 %12 to i64*
  br label %42

42:                                               ; preds = %148, %37
  %43 = phi i32 [ %151, %148 ], [ %8, %37 ]
  %44 = phi i64 [ %150, %148 ], [ 1, %37 ]
  %45 = and i32 %43, 251658240
  %46 = icmp eq i32 %45, 251658240
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = lshr i32 %43, 24
  %49 = and i32 %48, 15
  br label %54

50:                                               ; preds = %42
  %51 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %40, align 8
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  br label %54

54:                                               ; preds = %47, %50
  %55 = phi i32 [ %49, %47 ], [ %53, %50 ]
  %56 = sext i32 %55 to i64
  %57 = icmp slt i64 %44, %56
  br i1 %57, label %126, label %58

58:                                               ; preds = %54
  %59 = and i32 %43, 16777215
  %60 = zext i32 %59 to i64
  %61 = load i64, i64* %26, align 8
  %62 = load i64, i64* %28, align 8
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp ugt i64 %64, %60
  %66 = inttoptr i64 %62 to %"class.v8::internal::compiler::FunctionalList"*
  br i1 %65, label %75, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %6, i64 0, i32 0, i32 0
  %69 = bitcast %"class.v8::internal::compiler::FunctionalList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  %70 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %3, i64 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %70, align 8
  %71 = add nuw nsw i64 %60, 1
  %72 = sub nsw i64 %71, %64
  call void @_ZNSt3__16vectorIN2v88internal8compiler14FunctionalListINS3_21LoopVariableOptimizer10ConstraintEEENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector.12"* %68, i64 %72, %"class.v8::internal::compiler::FunctionalList"* nonnull dereferenceable(8) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  %73 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"** %73, align 8
  br label %75

75:                                               ; preds = %67, %58
  %76 = phi %"class.v8::internal::compiler::FunctionalList"* [ %66, %58 ], [ %74, %67 ]
  %77 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %76, i64 %60
  %78 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %77, i64 0, i32 0
  %79 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %78, align 8
  %80 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %79, i64 0, i32 2
  %83 = load i64, i64* %82, align 8
  br label %84

84:                                               ; preds = %81, %75
  %85 = phi i64 [ %83, %81 ], [ 0, %75 ]
  %86 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %39, align 8
  %87 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %86, null
  %88 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %86 to i64
  br i1 %87, label %92, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %86, i64 0, i32 2
  %91 = load i64, i64* %90, align 8
  br label %92

92:                                               ; preds = %89, %84
  %93 = phi i64 [ %91, %89 ], [ 0, %84 ]
  %94 = icmp eq i64 %85, %93
  br i1 %94, label %95, label %123

95:                                               ; preds = %92
  %96 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %79, %86
  br i1 %96, label %125, label %97

97:                                               ; preds = %95, %117
  %98 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %121, %117 ], [ %86, %95 ]
  %99 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %119, %117 ], [ %79, %95 ]
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, align 8
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %98, i64 0, i32 0, i32 0
  %103 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, align 8
  %104 = icmp eq %"class.v8::internal::compiler::Node"* %101, %103
  br i1 %104, label %105, label %123

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %99, i64 0, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %98, i64 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %111, label %123

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %99, i64 0, i32 0, i32 2
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %98, i64 0, i32 0, i32 2
  %115 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %114, align 8
  %116 = icmp eq %"class.v8::internal::compiler::Node"* %113, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %99, i64 0, i32 1
  %119 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %118, align 8
  %120 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %98, i64 0, i32 1
  %121 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %119, %121
  br i1 %122, label %125, label %97

123:                                              ; preds = %111, %105, %97, %92
  %124 = bitcast %"class.v8::internal::compiler::FunctionalList"* %77 to i64*
  store i64 %88, i64* %124, align 8
  br label %125

125:                                              ; preds = %117, %95, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void

126:                                              ; preds = %54
  br i1 %46, label %127, label %130

127:                                              ; preds = %126
  %128 = load i64, i64* %41, align 8
  %129 = add i64 %128, 16
  br label %130

130:                                              ; preds = %126, %127
  %131 = phi i64 [ %129, %127 ], [ %12, %126 ]
  %132 = inttoptr i64 %131 to %"class.v8::internal::compiler::Node"**
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 %44
  %134 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %134, i64 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 16777215
  %138 = zext i32 %137 to i64
  %139 = load i64, i64* %26, align 8
  %140 = load i64, i64* %28, align 8
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 3
  %143 = icmp ugt i64 %142, %138
  br i1 %143, label %144, label %148

144:                                              ; preds = %130
  %145 = inttoptr i64 %140 to %"class.v8::internal::compiler::FunctionalList"*
  %146 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %145, i64 %138, i32 0
  %147 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %146, align 8
  br label %148

148:                                              ; preds = %130, %144
  %149 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %147, %144 ], [ null, %130 ]
  call void @_ZN2v88internal8compiler14FunctionalListINS1_21LoopVariableOptimizer10ConstraintEE21ResetToCommonAncestorES5_(%"class.v8::internal::compiler::FunctionalList"* nonnull %4, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %149)
  %150 = add nuw nsw i64 %44, 1
  %151 = load i32, i32* %7, align 4
  br label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer9VisitLoopEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer24DetectInductionVariablesEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer7VisitIfEPNS1_4NodeEb(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::FunctionalList", align 8
  %5 = alloca %"class.v8::internal::compiler::FunctionalList", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 251658240
  %9 = icmp eq i32 %8, 251658240
  %10 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %11 = add i64 %10, 32
  br i1 %9, label %12, label %16

12:                                               ; preds = %3
  %13 = inttoptr i64 %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 16
  br label %16

16:                                               ; preds = %3, %12
  %17 = phi i64 [ %15, %12 ], [ %11, %3 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::Node"**
  %19 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 251658240
  %23 = icmp eq i32 %22, 251658240
  %24 = ptrtoint %"class.v8::internal::compiler::Node"* %19 to i64
  %25 = add i64 %24, 32
  br i1 %23, label %26, label %30

26:                                               ; preds = %16
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 16
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %16 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::compiler::Node"**
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  %34 = bitcast %"class.v8::internal::compiler::FunctionalList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5
  %36 = and i32 %21, 16777215
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::compiler::FunctionalList"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ugt i64 %44, %37
  br i1 %45, label %46, label %50

46:                                               ; preds = %30
  %47 = inttoptr i64 %42 to %"class.v8::internal::compiler::FunctionalList"*
  %48 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %47, i64 %37, i32 0
  %49 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %48, align 8
  br label %50

50:                                               ; preds = %30, %46
  %51 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %49, %46 ], [ null, %30 ]
  %52 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %5, i64 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %51, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 0
  %54 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %54, i64 0, i32 2
  %56 = load i16, i16* %55, align 8
  switch i16 %56, label %63 [
    i16 746, label %57
    i16 113, label %57
    i16 116, label %57
    i16 747, label %58
    i16 748, label %60
    i16 114, label %60
    i16 117, label %60
    i16 749, label %61
  ]

57:                                               ; preds = %50, %50, %50
  call void @_ZN2v88internal8compiler21LoopVariableOptimizer14AddCmpToLimitsEPNS1_14FunctionalListINS2_10ConstraintEEEPNS1_4NodeENS1_17InductionVariable14ConstraintKindEb(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::FunctionalList"* nonnull %5, %"class.v8::internal::compiler::Node"* %33, i32 0, i1 zeroext %2)
  br label %63

58:                                               ; preds = %50
  %59 = xor i1 %2, true
  call void @_ZN2v88internal8compiler21LoopVariableOptimizer14AddCmpToLimitsEPNS1_14FunctionalListINS2_10ConstraintEEEPNS1_4NodeENS1_17InductionVariable14ConstraintKindEb(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::FunctionalList"* nonnull %5, %"class.v8::internal::compiler::Node"* %33, i32 1, i1 zeroext %59)
  br label %63

60:                                               ; preds = %50, %50, %50
  call void @_ZN2v88internal8compiler21LoopVariableOptimizer14AddCmpToLimitsEPNS1_14FunctionalListINS2_10ConstraintEEEPNS1_4NodeENS1_17InductionVariable14ConstraintKindEb(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::FunctionalList"* nonnull %5, %"class.v8::internal::compiler::Node"* %33, i32 1, i1 zeroext %2)
  br label %63

61:                                               ; preds = %50
  %62 = xor i1 %2, true
  call void @_ZN2v88internal8compiler21LoopVariableOptimizer14AddCmpToLimitsEPNS1_14FunctionalListINS2_10ConstraintEEEPNS1_4NodeENS1_17InductionVariable14ConstraintKindEb(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::FunctionalList"* nonnull %5, %"class.v8::internal::compiler::Node"* %33, i32 0, i1 zeroext %62)
  br label %63

63:                                               ; preds = %50, %61, %60, %58, %57
  %64 = load i32, i32* %6, align 4
  %65 = and i32 %64, 16777215
  %66 = zext i32 %65 to i64
  %67 = load i64, i64* %39, align 8
  %68 = load i64, i64* %41, align 8
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = icmp ugt i64 %70, %66
  %72 = inttoptr i64 %68 to %"class.v8::internal::compiler::FunctionalList"*
  br i1 %71, label %81, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %35, i64 0, i32 0, i32 0
  %75 = bitcast %"class.v8::internal::compiler::FunctionalList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %4, i64 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %76, align 8
  %77 = add nuw nsw i64 %66, 1
  %78 = sub nsw i64 %77, %70
  call void @_ZNSt3__16vectorIN2v88internal8compiler14FunctionalListINS3_21LoopVariableOptimizer10ConstraintEEENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector.12"* %74, i64 %78, %"class.v8::internal::compiler::FunctionalList"* nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  %79 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"** %79, align 8
  br label %81

81:                                               ; preds = %73, %63
  %82 = phi %"class.v8::internal::compiler::FunctionalList"* [ %72, %63 ], [ %80, %73 ]
  %83 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %82, i64 %66
  %84 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %83, i64 0, i32 0
  %85 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %84, align 8
  %86 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %85, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %87, %81
  %91 = phi i64 [ %89, %87 ], [ 0, %81 ]
  %92 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %52, align 8
  %93 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %92, null
  %94 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %92 to i64
  br i1 %93, label %98, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %92, i64 0, i32 2
  %97 = load i64, i64* %96, align 8
  br label %98

98:                                               ; preds = %95, %90
  %99 = phi i64 [ %97, %95 ], [ 0, %90 ]
  %100 = icmp eq i64 %91, %99
  br i1 %100, label %101, label %129

101:                                              ; preds = %98
  %102 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %85, %92
  br i1 %102, label %131, label %103

103:                                              ; preds = %101, %123
  %104 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %127, %123 ], [ %92, %101 ]
  %105 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %125, %123 ], [ %85, %101 ]
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %104, i64 0, i32 0, i32 0
  %109 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, align 8
  %110 = icmp eq %"class.v8::internal::compiler::Node"* %107, %109
  br i1 %110, label %111, label %129

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %105, i64 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %104, i64 0, i32 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %129

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %105, i64 0, i32 0, i32 2
  %119 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, align 8
  %120 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %104, i64 0, i32 0, i32 2
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, align 8
  %122 = icmp eq %"class.v8::internal::compiler::Node"* %119, %121
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %105, i64 0, i32 1
  %125 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %124, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %104, i64 0, i32 1
  %127 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %126, align 8
  %128 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %125, %127
  br i1 %128, label %131, label %103

129:                                              ; preds = %117, %111, %103, %98
  %130 = bitcast %"class.v8::internal::compiler::FunctionalList"* %83 to i64*
  store i64 %94, i64* %130, align 8
  br label %131

131:                                              ; preds = %123, %101, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer10VisitStartEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::FunctionalList", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::FunctionalList"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %4 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %8
  %17 = inttoptr i64 %13 to %"class.v8::internal::compiler::FunctionalList"*
  br i1 %16, label %26, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %4, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::internal::compiler::FunctionalList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %3, i64 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %21, align 8
  %22 = add nuw nsw i64 %8, 1
  %23 = sub nsw i64 %22, %15
  call void @_ZNSt3__16vectorIN2v88internal8compiler14FunctionalListINS3_21LoopVariableOptimizer10ConstraintEEENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector.12"* %19, i64 %23, %"class.v8::internal::compiler::FunctionalList"* nonnull dereferenceable(8) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %24 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"** %24, align 8
  br label %26

26:                                               ; preds = %18, %2
  %27 = phi %"class.v8::internal::compiler::FunctionalList"* [ %17, %2 ], [ %25, %18 ]
  %28 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %27, i64 %8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %28, i64 0, i32 0
  %30 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %29, align 8
  %31 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %30, null
  br i1 %31, label %64, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %30, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %62

36:                                               ; preds = %32, %56
  %37 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %60, %56 ], [ null, %32 ]
  %38 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %58, %56 ], [ %30, %32 ]
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %37, i64 0, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::Node"* %40, %42
  br i1 %43, label %44, label %62

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %38, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %37, i64 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %62

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %38, i64 0, i32 0, i32 2
  %52 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %53 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %37, i64 0, i32 0, i32 2
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::Node"* %52, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %38, i64 0, i32 1
  %58 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %57, align 8
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %37, i64 0, i32 1
  %60 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %59, align 8
  %61 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %58, %60
  br i1 %61, label %64, label %36

62:                                               ; preds = %50, %44, %36, %32
  %63 = bitcast %"class.v8::internal::compiler::FunctionalList"* %28 to i64*
  store i64 0, i64* %63, align 8
  br label %64

64:                                               ; preds = %56, %26, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer13VisitLoopExitEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer17VisitOtherControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler21LoopVariableOptimizer30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14FunctionalListINS1_21LoopVariableOptimizer10ConstraintEE21ResetToCommonAncestorES5_(%"class.v8::internal::compiler::FunctionalList"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %0, i64 0, i32 0
  %5 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %5, null
  %7 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %5, i64 0, i32 2
  %8 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %1, null
  br i1 %6, label %12, label %9

9:                                                ; preds = %2
  br i1 %8, label %41, label %10

10:                                               ; preds = %9
  %11 = load i64, i64* %7, align 8
  br label %29

12:                                               ; preds = %2
  br i1 %8, label %41, label %13

13:                                               ; preds = %12, %23
  %14 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %27, %23 ], [ %1, %12 ]
  %15 = phi i64 [ %26, %23 ], [ %3, %12 ]
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %14, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %14, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %65, label %23, !prof !2

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %14, i64 0, i32 1
  %25 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = inttoptr i64 %26 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %41, label %13

29:                                               ; preds = %10, %66
  %30 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %70, %66 ], [ %1, %10 ]
  %31 = phi i64 [ %69, %66 ], [ %3, %10 ]
  %32 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %30, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ugt i64 %33, %11
  br i1 %34, label %61, label %35

35:                                               ; preds = %29, %13
  %36 = phi i64 [ %15, %13 ], [ %31, %29 ]
  %37 = inttoptr i64 %36 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %37, i64 0, i32 2
  %39 = bitcast %"class.v8::internal::compiler::FunctionalList"* %0 to i64*
  %40 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %5, null
  br i1 %40, label %82, label %72

41:                                               ; preds = %66, %23, %9, %12
  %42 = phi i64 [ %3, %12 ], [ %3, %9 ], [ %26, %23 ], [ %69, %66 ]
  %43 = inttoptr i64 %42 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %44 = bitcast %"class.v8::internal::compiler::FunctionalList"* %0 to i64*
  %45 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %5, null
  br i1 %45, label %82, label %46

46:                                               ; preds = %41, %55
  %47 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %59, %55 ], [ %5, %41 ]
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %47, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %82, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %47, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %92, label %55, !prof !2

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %47, i64 0, i32 1
  %57 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %44, align 8
  %59 = inttoptr i64 %58 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %78, label %46

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %30, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %61, %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %30, i64 0, i32 1
  %68 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = inttoptr i64 %69 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %41, label %29

72:                                               ; preds = %35, %93
  %73 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %97, %93 ], [ %5, %35 ]
  %74 = load i64, i64* %38, align 8
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %73, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %88, label %82

78:                                               ; preds = %55
  %79 = inttoptr i64 %58 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  br label %82

80:                                               ; preds = %93
  %81 = inttoptr i64 %96 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  br label %82

82:                                               ; preds = %80, %72, %78, %46, %35, %41
  %83 = phi i64* [ %44, %41 ], [ %39, %35 ], [ %44, %46 ], [ %44, %78 ], [ %39, %72 ], [ %39, %80 ]
  %84 = phi i64 [ 0, %41 ], [ %36, %35 ], [ 0, %46 ], [ 0, %78 ], [ %36, %72 ], [ %36, %80 ]
  %85 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %43, %41 ], [ %37, %35 ], [ %43, %46 ], [ %43, %78 ], [ %37, %72 ], [ %37, %80 ]
  %86 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %5, %41 ], [ %5, %35 ], [ %79, %78 ], [ %47, %46 ], [ %81, %80 ], [ %73, %72 ]
  %87 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %86, %85
  br i1 %87, label %126, label %99

88:                                               ; preds = %72
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %73, i64 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %88, %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %73, i64 0, i32 1
  %95 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %39, align 8
  %97 = inttoptr i64 %96 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %80, label %72

99:                                               ; preds = %82, %120
  %100 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %124, %120 ], [ %85, %82 ]
  %101 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %114, %120 ], [ %86, %82 ]
  %102 = phi i64 [ %123, %120 ], [ %84, %82 ]
  %103 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %101, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %101, i64 0, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %104, %99
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %101, i64 0, i32 1
  %111 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %83, align 8
  %113 = icmp eq i64 %102, 0
  %114 = inttoptr i64 %112 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  br i1 %113, label %119, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %100, i64 0, i32 2
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %120, !prof !2

119:                                              ; preds = %115, %109
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %100, i64 0, i32 1
  %122 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %123 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %125 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %114, %124
  br i1 %125, label %126, label %99

126:                                              ; preds = %120, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer24DetectInductionVariablesEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %163

8:                                                ; preds = %2
  %9 = load i8, i8* @_ZN2v88internal21FLAG_trace_turbo_loopE, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i32 %14) #10
  br label %15

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %17 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %16, align 8
  %18 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::map"* %20 to i64*
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %32

29:                                               ; preds = %160, %15
  %30 = load i8, i8* @_ZN2v88internal21FLAG_trace_turbo_loopE, align 1, !range !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %163, label %162

32:                                               ; preds = %160, %19
  %33 = phi %"struct.v8::internal::compiler::Node::Use"* [ %17, %19 ], [ %35, %160 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %33, i64 0, i32 0
  %35 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %34, align 8
  %36 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %33, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = lshr i32 %37, 1
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %33, i64 1
  %40 = zext i32 %38 to i64
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %39, i64 %40
  %42 = and i32 %37, 1
  %43 = icmp eq i32 %42, 0
  %44 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %41 to i64
  %45 = select i1 %43, i64 16, i64 32
  %46 = add i64 %45, %44
  %47 = inttoptr i64 %46 to %"class.v8::internal::compiler::Node"**
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, i64 %40
  %49 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %33, %"class.v8::internal::compiler::Node"** %48) #10
  br i1 %49, label %50, label %160

50:                                               ; preds = %32
  %51 = load i32, i32* %36, align 8
  %52 = lshr i32 %51, 1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %39, i64 %53
  %55 = and i32 %51, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %50
  %58 = bitcast %"struct.v8::internal::compiler::Node::Use"* %54 to %"class.v8::internal::compiler::Node"*
  br label %62

59:                                               ; preds = %50
  %60 = bitcast %"struct.v8::internal::compiler::Node::Use"* %54 to %"class.v8::internal::compiler::Node"**
  %61 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, align 8
  br label %62

62:                                               ; preds = %57, %59
  %63 = phi %"class.v8::internal::compiler::Node"* [ %58, %57 ], [ %61, %59 ]
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %63, i64 0, i32 0
  %65 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %65, i64 0, i32 2
  %67 = load i16, i16* %66, align 8
  %68 = icmp eq i16 %67, 35
  br i1 %68, label %69, label %160

69:                                               ; preds = %62
  br i1 %56, label %72, label %70

70:                                               ; preds = %69
  %71 = bitcast %"struct.v8::internal::compiler::Node::Use"* %54 to %"class.v8::internal::compiler::Node"*
  br label %75

72:                                               ; preds = %69
  %73 = bitcast %"struct.v8::internal::compiler::Node::Use"* %54 to %"class.v8::internal::compiler::Node"**
  %74 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, align 8
  br label %75

75:                                               ; preds = %70, %72
  %76 = phi %"class.v8::internal::compiler::Node"* [ %71, %70 ], [ %74, %72 ]
  %77 = tail call %"class.v8::internal::compiler::InductionVariable"* @_ZN2v88internal8compiler21LoopVariableOptimizer23TryGetInductionVariableEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* %0, %"class.v8::internal::compiler::Node"* %76)
  %78 = icmp eq %"class.v8::internal::compiler::InductionVariable"* %77, null
  br i1 %78, label %160, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %76, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 16777215
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %111, label %85

85:                                               ; preds = %79, %107
  %86 = phi %"class.std::__1::__tree_node"* [ %110, %107 ], [ %83, %79 ]
  %87 = phi %"class.std::__1::__tree_node_base"** [ %109, %107 ], [ %23, %79 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %86, i64 0, i32 1, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %82, %89
  br i1 %90, label %91, label %97

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %86, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %95, label %107

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %86, i64 0, i32 0, i32 0
  br label %111

97:                                               ; preds = %85
  %98 = icmp slt i32 %89, %82
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %86, i64 0, i32 0, i32 1
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %86, i64 0, i32 0, i32 0
  br label %111

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %86, i64 0, i32 0, i32 0
  br label %111

107:                                              ; preds = %99, %91
  %108 = phi %"class.std::__1::__tree_node_base"* [ %93, %91 ], [ %101, %99 ]
  %109 = phi %"class.std::__1::__tree_node_base"** [ %92, %91 ], [ %100, %99 ]
  %110 = bitcast %"class.std::__1::__tree_node_base"* %108 to %"class.std::__1::__tree_node"*
  br label %85

111:                                              ; preds = %79, %105, %103, %95
  %112 = phi %"class.std::__1::__tree_end_node"* [ %96, %95 ], [ %104, %103 ], [ %106, %105 ], [ %21, %79 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %92, %95 ], [ %100, %103 ], [ %87, %105 ], [ %24, %79 ]
  %114 = bitcast %"class.std::__1::__tree_node_base"** %113 to %"class.std::__1::__tree_node"**
  %115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node"* %115, null
  br i1 %116, label %117, label %149

117:                                              ; preds = %111
  %118 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %25, align 8, !noalias !8
  %119 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %118, i64 0, i32 2
  %120 = load i64, i64* %119, align 8, !noalias !8
  %121 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %118, i64 0, i32 3
  %122 = load i64, i64* %121, align 8, !noalias !8
  %123 = sub i64 %122, %120
  %124 = icmp ult i64 %123, 48
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %117
  %126 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %118, i64 48) #10, !noalias !8
  br label %129

127:                                              ; preds = %117
  %128 = add i64 %120, 48
  store i64 %128, i64* %119, align 8, !noalias !8
  br label %129

129:                                              ; preds = %127, %125
  %130 = phi i64 [ %126, %125 ], [ %120, %127 ]
  %131 = inttoptr i64 %130 to %"class.std::__1::__tree_node"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 1, i32 0, i32 0
  store i32 %82, i32* %132, align 8, !noalias !8
  %133 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::compiler::InductionVariable"* null, %"class.v8::internal::compiler::InductionVariable"** %133, align 8, !noalias !8
  %134 = inttoptr i64 %130 to %"class.std::__1::__tree_node_base"*
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %134, i64 0, i32 2
  %136 = inttoptr i64 %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"** %135, align 8
  store %"class.std::__1::__tree_node_base"* %134, %"class.std::__1::__tree_node_base"** %113, align 8
  %137 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %137, i64 0, i32 0
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %129
  %142 = ptrtoint %"class.std::__1::__tree_node_base"* %139 to i64
  store i64 %142, i64* %27, align 8
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  br label %144

144:                                              ; preds = %141, %129
  %145 = phi %"class.std::__1::__tree_node_base"* [ %134, %129 ], [ %143, %141 ]
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %146, %"class.std::__1::__tree_node_base"* %145) #10
  %147 = load i64, i64* %28, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %28, align 8
  br label %149

149:                                              ; preds = %111, %144
  %150 = phi %"class.std::__1::__tree_node"* [ %131, %144 ], [ %115, %111 ]
  %151 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %150, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::compiler::InductionVariable"* %77, %"class.v8::internal::compiler::InductionVariable"** %151, align 8
  %152 = load i8, i8* @_ZN2v88internal21FLAG_trace_turbo_loopE, align 1, !range !4
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %77, i64 0, i32 0
  %156 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %156, i64 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = and i32 %158, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i32 %159) #10
  br label %160

160:                                              ; preds = %154, %75, %149, %62, %32
  %161 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %35, null
  br i1 %161, label %29, label %32

162:                                              ; preds = %29
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #10
  br label %163

163:                                              ; preds = %29, %2, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::FunctionalList", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 7
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %6) #10
  %15 = zext i1 %14 to i32
  %16 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %17 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %16) #10
  %18 = zext i1 %17 to i32
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %13, %15
  %23 = add i32 %22, %18
  %24 = add i32 %23, %21
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 251658240
  %28 = icmp eq i32 %27, 251658240
  %29 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %30 = add i64 %29, 32
  br i1 %28, label %31, label %35

31:                                               ; preds = %11
  %32 = inttoptr i64 %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 16
  br label %35

35:                                               ; preds = %11, %31
  %36 = phi i64 [ %34, %31 ], [ %30, %11 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::compiler::Node"**
  %38 = sext i32 %24 to i64
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, i64 %38
  %40 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %40, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 16777215
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.v8::internal::compiler::FunctionalList"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %4 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ugt i64 %51, %44
  %53 = inttoptr i64 %49 to %"class.v8::internal::compiler::FunctionalList"*
  br i1 %52, label %54, label %57

54:                                               ; preds = %35
  %55 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %53, i64 %44, i32 0
  %56 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %55, align 8
  br label %57

57:                                               ; preds = %35, %54
  %58 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %56, %54 ], [ null, %35 ]
  %59 = and i32 %26, 16777215
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %51, %60
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %4, i64 0, i32 0, i32 0
  %64 = bitcast %"class.v8::internal::compiler::FunctionalList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  %65 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %3, i64 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %65, align 8
  %66 = add nuw nsw i64 %60, 1
  %67 = sub nsw i64 %66, %51
  call void @_ZNSt3__16vectorIN2v88internal8compiler14FunctionalListINS3_21LoopVariableOptimizer10ConstraintEEENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector.12"* %63, i64 %67, %"class.v8::internal::compiler::FunctionalList"* nonnull dereferenceable(8) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10
  %68 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"** %68, align 8
  br label %70

70:                                               ; preds = %62, %57
  %71 = phi %"class.v8::internal::compiler::FunctionalList"* [ %53, %57 ], [ %69, %62 ]
  %72 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %71, i64 %60
  %73 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %72, i64 0, i32 0
  %74 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %73, align 8
  %75 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %74, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %76, %70
  %80 = phi i64 [ %78, %76 ], [ 0, %70 ]
  %81 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %58, null
  %82 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %58 to i64
  br i1 %81, label %86, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %58, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  br label %86

86:                                               ; preds = %83, %79
  %87 = phi i64 [ %85, %83 ], [ 0, %79 ]
  %88 = icmp eq i64 %80, %87
  br i1 %88, label %89, label %117

89:                                               ; preds = %86
  %90 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %74, %58
  br i1 %90, label %119, label %91

91:                                               ; preds = %89, %111
  %92 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %115, %111 ], [ %58, %89 ]
  %93 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* [ %113, %111 ], [ %74, %89 ]
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %94, align 8
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %92, i64 0, i32 0, i32 0
  %97 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, align 8
  %98 = icmp eq %"class.v8::internal::compiler::Node"* %95, %97
  br i1 %98, label %99, label %117

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %93, i64 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %92, i64 0, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %101, %103
  br i1 %104, label %105, label %117

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %93, i64 0, i32 0, i32 2
  %107 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %92, i64 0, i32 0, i32 2
  %109 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, align 8
  %110 = icmp eq %"class.v8::internal::compiler::Node"* %107, %109
  br i1 %110, label %111, label %117

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %93, i64 0, i32 1
  %113 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %112, align 8
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %92, i64 0, i32 1
  %115 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %114, align 8
  %116 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %113, %115
  br i1 %116, label %119, label %91

117:                                              ; preds = %105, %99, %91, %86
  %118 = bitcast %"class.v8::internal::compiler::FunctionalList"* %72 to i64*
  store i64 %82, i64* %118, align 8
  br label %119

119:                                              ; preds = %111, %89, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer14AddCmpToLimitsEPNS1_14FunctionalListINS2_10ConstraintEEEPNS1_4NodeENS1_17InductionVariable14ConstraintKindEb(%"class.v8::internal::compiler::LoopVariableOptimizer"* readonly, %"class.v8::internal::compiler::FunctionalList"* nocapture, %"class.v8::internal::compiler::Node"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 251658240
  %9 = icmp eq i32 %8, 251658240
  %10 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %11 = add i64 %10, 32
  br i1 %9, label %12, label %16

12:                                               ; preds = %5
  %13 = inttoptr i64 %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 16
  br label %16

16:                                               ; preds = %5, %12
  %17 = phi i64 [ %15, %12 ], [ %11, %5 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::Node"**
  %19 = inttoptr i64 %17 to %"class.v8::internal::compiler::Node"**
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 1
  %21 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %22 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %21, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16777215
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node"**
  %28 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node"* %28, null
  br i1 %29, label %155, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"class.std::__1::__tree_end_node"* [ %41, %30 ], [ %26, %16 ]
  %32 = phi %"class.std::__1::__tree_node"* [ %42, %30 ], [ %28, %16 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, %25
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__tree_node_base"** %36 to %"class.std::__1::__tree_node"**
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_node"* %32 to %"class.std::__1::__tree_node"**
  %40 = select i1 %35, %"class.std::__1::__tree_node"** %37, %"class.std::__1::__tree_node"** %39
  %41 = select i1 %35, %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"* %38
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %30

44:                                               ; preds = %30
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %41, %26
  br i1 %45, label %56, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %25, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 5
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.v8::internal::compiler::InductionVariable"**
  %54 = load %"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::InductionVariable"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::InductionVariable"* %54, null
  br i1 %55, label %56, label %86

56:                                               ; preds = %51, %44, %46
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %22, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 16777215
  br label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.std::__1::__tree_end_node"* [ %71, %60 ], [ %26, %56 ]
  %62 = phi %"class.std::__1::__tree_node"* [ %72, %60 ], [ %28, %56 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 1, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %59
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::__tree_node_base"** %66 to %"class.std::__1::__tree_node"**
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__tree_node"* %62 to %"class.std::__1::__tree_node"**
  %70 = select i1 %65, %"class.std::__1::__tree_node"** %67, %"class.std::__1::__tree_node"** %69
  %71 = select i1 %65, %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"* %68
  %72 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %70, align 8
  %73 = icmp eq %"class.std::__1::__tree_node"* %72, null
  br i1 %73, label %74, label %60

74:                                               ; preds = %60
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %71, %26
  br i1 %75, label %155, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 4
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %59, %79
  br i1 %80, label %155, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 5
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.v8::internal::compiler::InductionVariable"**
  %84 = load %"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::InductionVariable"** %83, align 8
  %85 = icmp eq %"class.v8::internal::compiler::InductionVariable"* %84, null
  br i1 %85, label %155, label %86

86:                                               ; preds = %81, %51
  br i1 %4, label %87, label %120

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 4
  %89 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %1, i64 0, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 40
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %87
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %89, i64 40) #10
  br label %101

99:                                               ; preds = %87
  %100 = add i64 %92, 40
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to i8*
  %104 = inttoptr i64 %102 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %105 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %90, align 8
  %106 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %21, %"class.v8::internal::compiler::Node"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %103, i64 8
  %108 = bitcast i8* %107 to i32*
  store i32 %3, i32* %108, align 8
  %109 = getelementptr inbounds i8, i8* %103, i64 16
  %110 = bitcast i8* %109 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %22, %"class.v8::internal::compiler::Node"** %110, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %104, i64 0, i32 1
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %105, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %111, align 8
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %104, i64 0, i32 2
  %113 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %105, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %101
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %105, i64 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 1
  br label %118

118:                                              ; preds = %101, %114
  %119 = phi i64 [ %117, %114 ], [ 1, %101 ]
  store i64 %119, i64* %112, align 8
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %104, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %90, align 8
  br label %155

120:                                              ; preds = %86
  %121 = icmp eq i32 %3, 0
  %122 = zext i1 %121 to i32
  %123 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 4
  %124 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %1, i64 0, i32 0
  %126 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %124, i64 0, i32 2
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %124, i64 0, i32 3
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %129, %127
  %131 = icmp ult i64 %130, 40
  br i1 %131, label %132, label %134, !prof !2

132:                                              ; preds = %120
  %133 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %124, i64 40) #10
  br label %136

134:                                              ; preds = %120
  %135 = add i64 %127, 40
  store i64 %135, i64* %126, align 8
  br label %136

136:                                              ; preds = %134, %132
  %137 = phi i64 [ %133, %132 ], [ %127, %134 ]
  %138 = inttoptr i64 %137 to i8*
  %139 = inttoptr i64 %137 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*
  %140 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %125, align 8
  %141 = inttoptr i64 %137 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %22, %"class.v8::internal::compiler::Node"** %141, align 8
  %142 = getelementptr inbounds i8, i8* %138, i64 8
  %143 = bitcast i8* %142 to i32*
  store i32 %122, i32* %143, align 8
  %144 = getelementptr inbounds i8, i8* %138, i64 16
  %145 = bitcast i8* %144 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %21, %"class.v8::internal::compiler::Node"** %145, align 8
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %139, i64 0, i32 1
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %140, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %146, align 8
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %139, i64 0, i32 2
  %148 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %140, null
  br i1 %148, label %153, label %149

149:                                              ; preds = %136
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %140, i64 0, i32 2
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 1
  br label %153

153:                                              ; preds = %136, %149
  %154 = phi i64 [ %152, %149 ], [ 1, %136 ]
  store i64 %154, i64* %147, align 8
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"* %139, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %125, align 8
  br label %155

155:                                              ; preds = %16, %76, %74, %81, %118, %153
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::InductionVariable"* @_ZN2v88internal8compiler21LoopVariableOptimizer21FindInductionVariableEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %35, label %10

10:                                               ; preds = %2, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ %6, %2 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %22, %10 ], [ %8, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %5
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %6
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %5, %29
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.v8::internal::compiler::InductionVariable"**
  %34 = load %"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::InductionVariable"** %33, align 8
  br label %35

35:                                               ; preds = %26, %24, %2, %31
  %36 = phi %"class.v8::internal::compiler::InductionVariable"* [ %34, %31 ], [ null, %2 ], [ null, %24 ], [ null, %26 ]
  ret %"class.v8::internal::compiler::InductionVariable"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::InductionVariable"* @_ZN2v88internal8compiler21LoopVariableOptimizer23TryGetInductionVariableEPNS1_4NodeE(%"class.v8::internal::compiler::LoopVariableOptimizer"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #10
  %14 = zext i1 %13 to i32
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #10
  %17 = zext i1 %16 to i32
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %12, %14
  %22 = add i32 %21, %17
  %23 = add i32 %22, %20
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 251658240
  %27 = icmp eq i32 %26, 251658240
  %28 = add i64 %3, 32
  br i1 %27, label %29, label %33

29:                                               ; preds = %10
  %30 = inttoptr i64 %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %10, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %10 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = sext i32 %23 to i64
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 %36
  %38 = inttoptr i64 %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 1
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %43 = ptrtoint %"class.v8::internal::compiler::Node"* %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 0
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 2
  %47 = load i16, i16* %46, align 8
  switch i16 %47, label %170 [
    i16 756, label %52
    i16 125, label %52
    i16 143, label %52
    i16 154, label %52
    i16 757, label %48
    i16 126, label %49
    i16 144, label %50
    i16 155, label %51
  ]

48:                                               ; preds = %33
  br label %52

49:                                               ; preds = %33
  br label %52

50:                                               ; preds = %33
  br label %52

51:                                               ; preds = %33
  br label %52

52:                                               ; preds = %33, %33, %33, %33, %51, %50, %49, %48
  %53 = phi i32 [ 0, %33 ], [ 0, %33 ], [ 0, %33 ], [ 0, %33 ], [ 1, %48 ], [ 1, %49 ], [ 1, %50 ], [ 1, %51 ]
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 251658240
  %57 = icmp eq i32 %56, 251658240
  %58 = add i64 %43, 32
  br i1 %57, label %59, label %63

59:                                               ; preds = %52
  %60 = inttoptr i64 %58 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 16
  br label %63

63:                                               ; preds = %52, %59
  %64 = phi i64 [ %62, %59 ], [ %58, %52 ]
  %65 = inttoptr i64 %64 to %"class.v8::internal::compiler::Node"**
  %66 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %66, i64 0, i32 0
  %68 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %68, i64 0, i32 2
  %70 = load i16, i16* %69, align 8
  switch i16 %70, label %86 [
    i16 192, label %71
    i16 771, label %71
    i16 772, label %71
  ]

71:                                               ; preds = %63, %63, %63
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %66, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 251658240
  %75 = icmp eq i32 %74, 251658240
  %76 = ptrtoint %"class.v8::internal::compiler::Node"* %66 to i64
  %77 = add i64 %76, 32
  br i1 %75, label %78, label %82

78:                                               ; preds = %71
  %79 = inttoptr i64 %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 16
  br label %82

82:                                               ; preds = %71, %78
  %83 = phi i64 [ %81, %78 ], [ %77, %71 ]
  %84 = inttoptr i64 %83 to %"class.v8::internal::compiler::Node"**
  %85 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, align 8
  br label %86

86:                                               ; preds = %63, %82
  %87 = phi %"class.v8::internal::compiler::Node"* [ %85, %82 ], [ %66, %63 ]
  %88 = icmp eq %"class.v8::internal::compiler::Node"* %87, %1
  br i1 %88, label %89, label %170

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 4
  %91 = bitcast %"struct.v8::internal::compiler::Node::Use"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %170, label %96

94:                                               ; preds = %113
  %95 = icmp eq i64 %121, 0
  br i1 %95, label %170, label %125

96:                                               ; preds = %89, %113
  %97 = phi i64 [ %123, %113 ], [ %92, %89 ]
  %98 = phi i64 [ %121, %113 ], [ 0, %89 ]
  %99 = inttoptr i64 %97 to %"struct.v8::internal::compiler::Node::Use"*
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %99, i64 1
  %101 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %99, i64 0, i32 2
  %102 = load i32, i32* %101, align 8
  %103 = lshr i32 %102, 1
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %100, i64 %104
  %106 = and i32 %102, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %96
  %109 = bitcast %"struct.v8::internal::compiler::Node::Use"* %105 to %"class.v8::internal::compiler::Node"*
  br label %113

110:                                              ; preds = %96
  %111 = bitcast %"struct.v8::internal::compiler::Node::Use"* %105 to %"class.v8::internal::compiler::Node"**
  %112 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, align 8
  br label %113

113:                                              ; preds = %108, %110
  %114 = phi %"class.v8::internal::compiler::Node"* [ %109, %108 ], [ %112, %110 ]
  %115 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %114, i64 0, i32 0
  %116 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %116, i64 0, i32 2
  %118 = load i16, i16* %117, align 8
  %119 = icmp eq i16 %118, 36
  %120 = ptrtoint %"class.v8::internal::compiler::Node"* %114 to i64
  %121 = select i1 %119, i64 %120, i64 %98
  %122 = inttoptr i64 %97 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %94, label %96

125:                                              ; preds = %94
  br i1 %57, label %126, label %130

126:                                              ; preds = %125
  %127 = inttoptr i64 %58 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 16
  br label %130

130:                                              ; preds = %125, %126
  %131 = phi i64 [ %129, %126 ], [ %58, %125 ]
  %132 = inttoptr i64 %131 to %"class.v8::internal::compiler::Node"**
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 1
  %134 = bitcast %"class.v8::internal::compiler::Node"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 4
  %137 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %136, align 8
  %138 = ptrtoint %"class.v8::internal::Zone"* %137 to i64
  %139 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %137, i64 0, i32 2
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %137, i64 0, i32 3
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %142, %140
  %144 = icmp ult i64 %143, 112
  br i1 %144, label %145, label %147, !prof !2

145:                                              ; preds = %130
  %146 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %137, i64 112) #10
  br label %149

147:                                              ; preds = %130
  %148 = add i64 %140, 112
  store i64 %148, i64* %139, align 8
  br label %149

149:                                              ; preds = %145, %147
  %150 = phi i64 [ %146, %145 ], [ %140, %147 ]
  %151 = inttoptr i64 %150 to %"class.v8::internal::compiler::InductionVariable"*
  %152 = inttoptr i64 %150 to i64*
  store i64 %3, i64* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 1
  %154 = bitcast %"class.v8::internal::compiler::Node"** %153 to i64*
  store i64 %121, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 2
  %156 = bitcast %"class.v8::internal::compiler::Node"** %155 to i64*
  store i64 %43, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 3
  %158 = bitcast %"class.v8::internal::compiler::Node"** %157 to i64*
  store i64 %135, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 4
  %160 = bitcast %"class.v8::internal::compiler::Node"** %159 to i64*
  store i64 %39, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 5
  %162 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %163 = bitcast %"struct.std::__1::__compressed_pair_elem.44"* %162 to i64*
  %164 = bitcast %"class.v8::internal::ZoneVector.39"* %161 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 24, i1 false) #10
  store i64 %138, i64* %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 6
  %166 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1
  %167 = bitcast %"struct.std::__1::__compressed_pair_elem.44"* %166 to i64*
  %168 = bitcast %"class.v8::internal::ZoneVector.39"* %165 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #10
  store i64 %138, i64* %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %151, i64 0, i32 7
  store i32 %53, i32* %169, align 8
  br label %170

170:                                              ; preds = %89, %33, %149, %94, %86
  %171 = phi %"class.v8::internal::compiler::InductionVariable"* [ null, %86 ], [ %151, %149 ], [ null, %94 ], [ null, %33 ], [ null, %89 ]
  ret %"class.v8::internal::compiler::InductionVariable"* %171
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer29ChangeToInductionVariablePhisEv(%"class.v8::internal::compiler::LoopVariableOptimizer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %168, %1
  ret void

10:                                               ; preds = %6, %168
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %6 ], [ %169, %168 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 5
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.v8::internal::compiler::InductionVariable"**
  %14 = load %"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::InductionVariable"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 6, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 6, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.40"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %22, label %30

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 5, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 5, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.v8::internal::compiler::InductionVariable::Bound"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.40"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %140, label %30

30:                                               ; preds = %22, %10
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 0
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %7, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %33, i64 0, i32 0
  %35 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 251658240
  %39 = icmp eq i32 %38, 251658240
  br i1 %39, label %43, label %40

40:                                               ; preds = %30
  %41 = lshr i32 %37, 24
  %42 = and i32 %41, 15
  br label %50

43:                                               ; preds = %30
  %44 = ptrtoint %"class.v8::internal::compiler::Node"* %32 to i64
  %45 = add i64 %44, 32
  %46 = inttoptr i64 %45 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %47 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %46, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  br label %50

50:                                               ; preds = %40, %43
  %51 = phi i32 [ %42, %40 ], [ %49, %43 ]
  %52 = add nsw i32 %51, -1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 3
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, align 8
  tail call void @_ZN2v88internal8compiler4Node11InsertInputEPNS0_4ZoneEiPS2_(%"class.v8::internal::compiler::Node"* %32, %"class.v8::internal::Zone"* %35, i32 %52, %"class.v8::internal::compiler::Node"* %54) #10
  %55 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  %56 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %14, i64 0, i32 5, i32 0, i32 0, i32 1
  %58 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %57, align 8
  %59 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %56, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %87, %50
  %61 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %15, i64 0, i32 0, i32 0
  %62 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %61, align 8
  %63 = load %"struct.v8::internal::compiler::InductionVariable::Bound"*, %"struct.v8::internal::compiler::InductionVariable::Bound"** %16, align 8
  %64 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %62, %63
  br i1 %64, label %92, label %113

65:                                               ; preds = %50, %87
  %66 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %90, %87 ], [ %56, %50 ]
  %67 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %66, i64 0, i32 0
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %70 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %7, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %70, i64 0, i32 0
  %72 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %69, i64 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 251658240
  %76 = icmp eq i32 %75, 251658240
  br i1 %76, label %80, label %77

77:                                               ; preds = %65
  %78 = lshr i32 %74, 24
  %79 = and i32 %78, 15
  br label %87

80:                                               ; preds = %65
  %81 = ptrtoint %"class.v8::internal::compiler::Node"* %69 to i64
  %82 = add i64 %81, 32
  %83 = inttoptr i64 %82 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %84 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %83, align 8
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  br label %87

87:                                               ; preds = %77, %80
  %88 = phi i32 [ %79, %77 ], [ %86, %80 ]
  %89 = add nsw i32 %88, -1
  tail call void @_ZN2v88internal8compiler4Node11InsertInputEPNS0_4ZoneEiPS2_(%"class.v8::internal::compiler::Node"* %69, %"class.v8::internal::Zone"* %72, i32 %89, %"class.v8::internal::compiler::Node"* %68) #10
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %66, i64 1
  %91 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %90, %58
  br i1 %91, label %60, label %65

92:                                               ; preds = %135, %60
  %93 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %94 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %8, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %93, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 251658240
  %98 = icmp eq i32 %97, 251658240
  br i1 %98, label %102, label %99

99:                                               ; preds = %92
  %100 = lshr i32 %96, 24
  %101 = and i32 %100, 15
  br label %109

102:                                              ; preds = %92
  %103 = ptrtoint %"class.v8::internal::compiler::Node"* %93 to i64
  %104 = add i64 %103, 32
  %105 = inttoptr i64 %104 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %106 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %105, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %106, i64 0, i32 1
  %108 = load i32, i32* %107, align 8
  br label %109

109:                                              ; preds = %99, %102
  %110 = phi i32 [ %101, %99 ], [ %108, %102 ]
  %111 = add nsw i32 %110, -1
  %112 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder20InductionVariablePhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %94, i32 %111) #10
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %93, %"class.v8::internal::compiler::Operator"* %112) #10
  br label %140

113:                                              ; preds = %60, %135
  %114 = phi %"struct.v8::internal::compiler::InductionVariable::Bound"* [ %138, %135 ], [ %62, %60 ]
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %114, i64 0, i32 0
  %116 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, align 8
  %117 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %118 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %7, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %118, i64 0, i32 0
  %120 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %117, i64 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 251658240
  %124 = icmp eq i32 %123, 251658240
  br i1 %124, label %128, label %125

125:                                              ; preds = %113
  %126 = lshr i32 %122, 24
  %127 = and i32 %126, 15
  br label %135

128:                                              ; preds = %113
  %129 = ptrtoint %"class.v8::internal::compiler::Node"* %117 to i64
  %130 = add i64 %129, 32
  %131 = inttoptr i64 %130 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %132 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %131, align 8
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %132, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  br label %135

135:                                              ; preds = %125, %128
  %136 = phi i32 [ %127, %125 ], [ %134, %128 ]
  %137 = add nsw i32 %136, -1
  tail call void @_ZN2v88internal8compiler4Node11InsertInputEPNS0_4ZoneEiPS2_(%"class.v8::internal::compiler::Node"* %117, %"class.v8::internal::Zone"* %120, i32 %137, %"class.v8::internal::compiler::Node"* %116) #10
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::InductionVariable::Bound", %"struct.v8::internal::compiler::InductionVariable::Bound"* %114, i64 1
  %139 = icmp eq %"struct.v8::internal::compiler::InductionVariable::Bound"* %138, %63
  br i1 %139, label %92, label %113

140:                                              ; preds = %22, %109
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %147 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"class.std::__1::__tree_end_node"**
  %148 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, %145
  br i1 %151, label %168, label %159

152:                                              ; preds = %140, %152
  %153 = phi %"class.std::__1::__tree_node_base"* [ %155, %152 ], [ %142, %140 ]
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 0, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %152

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 0
  br label %168

159:                                              ; preds = %144, %159
  %160 = phi %"class.std::__1::__tree_end_node"** [ %163, %159 ], [ %147, %144 ]
  %161 = bitcast %"class.std::__1::__tree_end_node"** %160 to %"class.std::__1::__tree_node_base"**
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %162, i64 0, i32 2
  %164 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %164, i64 0, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, %162
  br i1 %167, label %168, label %159

168:                                              ; preds = %159, %144, %157
  %169 = phi %"class.std::__1::__tree_end_node"* [ %158, %157 ], [ %148, %144 ], [ %164, %159 ]
  %170 = icmp eq %"class.std::__1::__tree_end_node"* %169, %4
  br i1 %170, label %9, label %10
}

declare void @_ZN2v88internal8compiler4Node11InsertInputEPNS0_4ZoneEiPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder20InductionVariablePhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21LoopVariableOptimizer27ChangeToPhisAndInsertGuardsEv(%"class.v8::internal::compiler::LoopVariableOptimizer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::array", align 8
  %3 = alloca %"class.v8::internal::compiler::Type", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 3
  %10 = bitcast %"class.v8::internal::compiler::Type"* %3 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LoopVariableOptimizer", %"class.v8::internal::compiler::LoopVariableOptimizer"* %0, i64 0, i32 2
  %13 = bitcast %"struct.std::__1::array"* %2 to i8*
  %14 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 0, i32 0, i64 1
  %16 = bitcast %"class.v8::internal::compiler::Node"** %15 to i64*
  %17 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 0, i32 0, i64 2
  %18 = bitcast %"class.v8::internal::compiler::Node"** %17 to i64*
  br label %20

19:                                               ; preds = %313, %1
  ret void

20:                                               ; preds = %8, %313
  %21 = phi %"class.std::__1::__tree_end_node"* [ %5, %8 ], [ %314, %313 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.v8::internal::compiler::InductionVariable"**
  %24 = load %"class.v8::internal::compiler::InductionVariable"*, %"class.v8::internal::compiler::InductionVariable"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %24, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %26, i64 0, i32 0
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 2
  %30 = load i16, i16* %29, align 8
  %31 = icmp eq i16 %30, 37
  br i1 %31, label %32, label %285

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 7
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %32
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %28) #10
  %41 = zext i1 %40 to i32
  %42 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %43 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %42) #10
  %44 = zext i1 %43 to i32
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %39, %41
  %49 = add i32 %48, %44
  %50 = add i32 %49, %47
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %26, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 251658240
  %54 = icmp eq i32 %53, 251658240
  %55 = ptrtoint %"class.v8::internal::compiler::Node"* %26 to i64
  %56 = add i64 %55, 32
  br i1 %54, label %57, label %61

57:                                               ; preds = %37
  %58 = inttoptr i64 %56 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 16
  br label %61

61:                                               ; preds = %37, %57
  %62 = phi i64 [ %60, %57 ], [ %56, %37 ]
  %63 = inttoptr i64 %62 to %"class.v8::internal::compiler::Node"**
  %64 = sext i32 %50 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 %64
  %66 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, align 8
  %67 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  call void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"* %67, i32 3) #10
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 251658240
  %72 = icmp eq i32 %71, 251658240
  %73 = ptrtoint %"class.v8::internal::compiler::Node"* %68 to i64
  %74 = add i64 %73, 32
  br i1 %72, label %75, label %79

75:                                               ; preds = %61
  %76 = inttoptr i64 %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 16
  br label %79

79:                                               ; preds = %61, %75
  %80 = phi i64 [ %78, %75 ], [ %74, %61 ]
  %81 = inttoptr i64 %80 to %"class.v8::internal::compiler::Node"**
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 2
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  %84 = icmp eq %"class.v8::internal::compiler::Node"* %83, %66
  br i1 %84, label %99, label %85

85:                                               ; preds = %79
  br i1 %72, label %88, label %86

86:                                               ; preds = %85
  %87 = bitcast %"class.v8::internal::compiler::Node"* %68 to %"struct.v8::internal::compiler::Node::Use"*
  br label %91

88:                                               ; preds = %85
  %89 = inttoptr i64 %74 to %"struct.v8::internal::compiler::Node::Use"**
  %90 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %89, align 8
  br label %91

91:                                               ; preds = %88, %86
  %92 = phi %"struct.v8::internal::compiler::Node::Use"* [ %87, %86 ], [ %90, %88 ]
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %92, i64 -3
  %94 = icmp eq %"class.v8::internal::compiler::Node"* %83, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %83, %"struct.v8::internal::compiler::Node::Use"* %93) #10
  br label %96

96:                                               ; preds = %95, %91
  store %"class.v8::internal::compiler::Node"* %66, %"class.v8::internal::compiler::Node"** %82, align 8
  %97 = icmp eq %"class.v8::internal::compiler::Node"* %66, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %96
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %66, %"struct.v8::internal::compiler::Node::Use"* %93) #10
  br label %99

99:                                               ; preds = %79, %96, %98
  %100 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %101 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %9, align 8
  %102 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %101, i8 zeroext 9, i32 2) #10
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %100, %"class.v8::internal::compiler::Operator"* %102) #10
  %103 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %103, i64 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 251658240
  %107 = icmp eq i32 %106, 251658240
  %108 = ptrtoint %"class.v8::internal::compiler::Node"* %103 to i64
  %109 = add i64 %108, 32
  br i1 %107, label %110, label %114

110:                                              ; preds = %99
  %111 = inttoptr i64 %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 16
  br label %114

114:                                              ; preds = %99, %110
  %115 = phi i64 [ %113, %110 ], [ %109, %99 ]
  %116 = inttoptr i64 %115 to %"class.v8::internal::compiler::Node"**
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, i64 1
  %118 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 1, i32 0
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %11, align 8
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %121, i64 0, i32 1, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %120, %123
  br i1 %124, label %284, label %125

125:                                              ; preds = %114
  %126 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %3, i64 %123) #10
  br i1 %126, label %284, label %127

127:                                              ; preds = %125
  %128 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %128, i64 0, i32 0
  %130 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %130, i64 0, i32 7
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %127
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %130, i64 0, i32 5
  %137 = load i32, i32* %136, align 4
  %138 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %130) #10
  %139 = zext i1 %138 to i32
  %140 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %141 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %140) #10
  %142 = zext i1 %141 to i32
  %143 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %143, i64 0, i32 6
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %137, %139
  %147 = add i32 %146, %142
  %148 = add i32 %147, %145
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %128, i64 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %150, 251658240
  %152 = icmp eq i32 %151, 251658240
  %153 = ptrtoint %"class.v8::internal::compiler::Node"* %128 to i64
  %154 = add i64 %153, 32
  br i1 %152, label %155, label %159

155:                                              ; preds = %135
  %156 = inttoptr i64 %154 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 16
  br label %159

159:                                              ; preds = %135, %155
  %160 = phi i64 [ %158, %155 ], [ %154, %135 ]
  %161 = inttoptr i64 %160 to %"class.v8::internal::compiler::Node"**
  %162 = sext i32 %148 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 %162
  %164 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %164, i64 0, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, 251658240
  %168 = icmp eq i32 %167, 251658240
  %169 = ptrtoint %"class.v8::internal::compiler::Node"* %164 to i64
  %170 = add i64 %169, 32
  br i1 %168, label %171, label %175

171:                                              ; preds = %159
  %172 = inttoptr i64 %170 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = add i64 %173, 16
  br label %175

175:                                              ; preds = %159, %171
  %176 = phi i64 [ %174, %171 ], [ %170, %159 ]
  %177 = inttoptr i64 %176 to %"class.v8::internal::compiler::Node"**
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %177, i64 1
  %179 = bitcast %"class.v8::internal::compiler::Node"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.v8::internal::compiler::InductionVariable", %"class.v8::internal::compiler::InductionVariable"* %24, i64 0, i32 1
  %182 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %182, i64 0, i32 0
  %184 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %184, i64 0, i32 6
  %186 = load i32, i32* %185, align 8
  %187 = icmp sgt i32 %186, 1
  br i1 %187, label %189, label %188, !prof !3

188:                                              ; preds = %175
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0)) #11
  unreachable

189:                                              ; preds = %175
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %184, i64 0, i32 5
  %191 = load i32, i32* %190, align 4
  %192 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %184) #10
  %193 = zext i1 %192 to i32
  %194 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %183, align 8
  %195 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %194) #10
  %196 = zext i1 %195 to i32
  %197 = add i32 %191, 1
  %198 = add i32 %197, %193
  %199 = add i32 %198, %196
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %182, i64 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = and i32 %201, 251658240
  %203 = icmp eq i32 %202, 251658240
  %204 = ptrtoint %"class.v8::internal::compiler::Node"* %182 to i64
  %205 = add i64 %204, 32
  br i1 %203, label %206, label %210

206:                                              ; preds = %189
  %207 = inttoptr i64 %205 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = add i64 %208, 16
  br label %210

210:                                              ; preds = %189, %206
  %211 = phi i64 [ %209, %206 ], [ %205, %189 ]
  %212 = inttoptr i64 %211 to %"class.v8::internal::compiler::Node"**
  %213 = sext i32 %199 to i64
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 %213
  %215 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %12, align 8
  %218 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %9, align 8
  %219 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TypeGuardENS1_4TypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %218, i64 %123) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  store %"class.v8::internal::compiler::Node"* %118, %"class.v8::internal::compiler::Node"** %14, align 8
  store i64 %216, i64* %16, align 8
  store i64 %180, i64* %18, align 8
  %220 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %217, %"class.v8::internal::compiler::Operator"* %219, i32 3, %"class.v8::internal::compiler::Node"** nonnull %14, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %221 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %221, i64 0, i32 3
  %223 = load i32, i32* %222, align 4
  %224 = and i32 %223, 251658240
  %225 = icmp eq i32 %224, 251658240
  %226 = ptrtoint %"class.v8::internal::compiler::Node"* %221 to i64
  %227 = add i64 %226, 32
  br i1 %225, label %228, label %232

228:                                              ; preds = %210
  %229 = inttoptr i64 %227 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = add i64 %230, 16
  br label %232

232:                                              ; preds = %210, %228
  %233 = phi i64 [ %231, %228 ], [ %227, %210 ]
  %234 = inttoptr i64 %233 to %"class.v8::internal::compiler::Node"**
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %234, i64 1
  %236 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, align 8
  %237 = icmp eq %"class.v8::internal::compiler::Node"* %236, %220
  br i1 %237, label %252, label %238

238:                                              ; preds = %232
  br i1 %225, label %241, label %239

239:                                              ; preds = %238
  %240 = bitcast %"class.v8::internal::compiler::Node"* %221 to %"struct.v8::internal::compiler::Node::Use"*
  br label %244

241:                                              ; preds = %238
  %242 = inttoptr i64 %227 to %"struct.v8::internal::compiler::Node::Use"**
  %243 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %242, align 8
  br label %244

244:                                              ; preds = %241, %239
  %245 = phi %"struct.v8::internal::compiler::Node::Use"* [ %240, %239 ], [ %243, %241 ]
  %246 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %245, i64 -2
  %247 = icmp eq %"class.v8::internal::compiler::Node"* %236, null
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %236, %"struct.v8::internal::compiler::Node::Use"* %246) #10
  br label %249

249:                                              ; preds = %248, %244
  store %"class.v8::internal::compiler::Node"* %220, %"class.v8::internal::compiler::Node"** %235, align 8
  %250 = icmp eq %"class.v8::internal::compiler::Node"* %220, null
  br i1 %250, label %252, label %251

251:                                              ; preds = %249
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %220, %"struct.v8::internal::compiler::Node::Use"* %246) #10
  br label %252

252:                                              ; preds = %232, %249, %251
  %253 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %253, i64 0, i32 3
  %255 = load i32, i32* %254, align 4
  %256 = and i32 %255, 251658240
  %257 = icmp eq i32 %256, 251658240
  %258 = ptrtoint %"class.v8::internal::compiler::Node"* %253 to i64
  %259 = add i64 %258, 32
  br i1 %257, label %260, label %264

260:                                              ; preds = %252
  %261 = inttoptr i64 %259 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = add i64 %262, 16
  br label %264

264:                                              ; preds = %252, %260
  %265 = phi i64 [ %263, %260 ], [ %259, %252 ]
  %266 = inttoptr i64 %265 to %"class.v8::internal::compiler::Node"**
  %267 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %266, i64 1
  %268 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, align 8
  %269 = icmp eq %"class.v8::internal::compiler::Node"* %268, %220
  br i1 %269, label %284, label %270

270:                                              ; preds = %264
  br i1 %257, label %273, label %271

271:                                              ; preds = %270
  %272 = bitcast %"class.v8::internal::compiler::Node"* %253 to %"struct.v8::internal::compiler::Node::Use"*
  br label %276

273:                                              ; preds = %270
  %274 = inttoptr i64 %259 to %"struct.v8::internal::compiler::Node::Use"**
  %275 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %274, align 8
  br label %276

276:                                              ; preds = %273, %271
  %277 = phi %"struct.v8::internal::compiler::Node::Use"* [ %272, %271 ], [ %275, %273 ]
  %278 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %277, i64 -2
  %279 = icmp eq %"class.v8::internal::compiler::Node"* %268, null
  br i1 %279, label %281, label %280

280:                                              ; preds = %276
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %268, %"struct.v8::internal::compiler::Node::Use"* %278) #10
  br label %281

281:                                              ; preds = %280, %276
  store %"class.v8::internal::compiler::Node"* %220, %"class.v8::internal::compiler::Node"** %267, align 8
  %282 = icmp eq %"class.v8::internal::compiler::Node"* %220, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %281
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %220, %"struct.v8::internal::compiler::Node::Use"* %278) #10
  br label %284

284:                                              ; preds = %114, %283, %281, %264, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %285

285:                                              ; preds = %284, %20
  %286 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %289, label %297

289:                                              ; preds = %285
  %290 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %291 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %292 = bitcast %"class.std::__1::__tree_end_node"* %291 to %"class.std::__1::__tree_end_node"**
  %293 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %292, align 8
  %294 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %293, i64 0, i32 0
  %295 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %294, align 8
  %296 = icmp eq %"class.std::__1::__tree_node_base"* %295, %290
  br i1 %296, label %313, label %304

297:                                              ; preds = %285, %297
  %298 = phi %"class.std::__1::__tree_node_base"* [ %300, %297 ], [ %287, %285 ]
  %299 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %298, i64 0, i32 0, i32 0
  %300 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %300, null
  br i1 %301, label %302, label %297

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %298, i64 0, i32 0
  br label %313

304:                                              ; preds = %289, %304
  %305 = phi %"class.std::__1::__tree_end_node"** [ %308, %304 ], [ %292, %289 ]
  %306 = bitcast %"class.std::__1::__tree_end_node"** %305 to %"class.std::__1::__tree_node_base"**
  %307 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %306, align 8
  %308 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %307, i64 0, i32 2
  %309 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %308, align 8
  %310 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %309, i64 0, i32 0
  %311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %310, align 8
  %312 = icmp eq %"class.std::__1::__tree_node_base"* %311, %307
  br i1 %312, label %313, label %304

313:                                              ; preds = %304, %289, %302
  %314 = phi %"class.std::__1::__tree_end_node"* [ %303, %302 ], [ %293, %289 ], [ %309, %304 ]
  %315 = icmp eq %"class.std::__1::__tree_end_node"* %314, %6
  br i1 %315, label %19, label %20
}

declare void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TypeGuardENS1_4TypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::Node"*** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::Node"*** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::Node"*** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::Node"**** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to %"class.v8::internal::compiler::Node"***
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::Node"** [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::Node"** %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::Node"*** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::Node"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::Node"*** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::Node"**
  %56 = icmp eq %"class.v8::internal::compiler::Node"** %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::Node"*** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 512
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 1
  %71 = bitcast %"class.v8::internal::compiler::Node"** %70 to i64*
  store i64 512, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::Node"** %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::Node"** %63, %"class.v8::internal::compiler::Node"*** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::Node"** %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"***
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::Node"*** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::Node"*** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 1
  store %"class.v8::internal::compiler::Node"*** %84, %"class.v8::internal::compiler::Node"**** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::Node"*** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 512, %95 ], [ 256, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to %"class.v8::internal::compiler::Node"***
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 512
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 1
  %119 = bitcast %"class.v8::internal::compiler::Node"** %118 to i64*
  store i64 512, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::Node"** %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::Node"** %111, %"class.v8::internal::compiler::Node"*** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::Node"** %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::Node"*** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::Node"*** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 512
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i64*
  store i64 512, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"** %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::Node"** %133, %"class.v8::internal::compiler::Node"*** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"** %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 1
  %148 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %152 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::Node"*** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::Node"*** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::Node"*** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::Node"*** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 %163
  store %"class.v8::internal::compiler::Node"*** %164, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::Node"*** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::Node"*** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::Node"**** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::Node"*** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::Node"*** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %167, %"class.v8::internal::compiler::Node"**** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 512
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  store i64 512, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::Node"** %148, %"class.v8::internal::compiler::Node"*** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::Node"** %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::Node"*** %205, %91
  br i1 %206, label %150, label %130
}

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #2

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.20"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.47"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.47"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #11
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #10
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !11
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #10
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #10
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.50", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #10
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #10
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #10
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #10
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.50"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #10
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #10
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #10
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #10
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.50"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #10
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.50"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.50"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #10
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.50"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #10
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !14

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #10
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !15

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #10
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !16

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.50"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.50"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #10
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !17

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.50"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.50"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.50", %"struct.std::__1::__split_buffer.50"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #10
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !18

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"*, %"class.v8::internal::compiler::Graph"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.20"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.20", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !19
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.20"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 2, i32 1, i32 0
  %28 = bitcast %"class.v8::internal::ZoneAllocator.24"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %4, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %4, i64 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %31 to i64*
  %33 = bitcast %"class.std::__1::vector.20"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false)
  store i64 %29, i64* %32, align 8
  %34 = icmp ugt i64 %1, 17179869120
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #11
  unreachable

37:                                               ; preds = %25
  %38 = icmp ult i64 %11, 8589934560
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = shl i64 %10, 7
  %41 = add nuw nsw i64 %1, 63
  %42 = and i64 %41, -64
  %43 = icmp ult i64 %40, %42
  %44 = select i1 %43, i64 %42, i64 %40
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i64 [ %44, %39 ], [ 17179869120, %37 ]
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.20"* nonnull %4, i64 %46)
  %47 = load i64, i64* %5, align 8
  %48 = add i64 %47, %12
  %49 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %4, i64 0, i32 1
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = bitcast %"class.std::__1::vector.20"* %4 to i64*
  %53 = load i64, i64* %52, align 16, !noalias !24
  %54 = icmp sgt i64 %47, 0
  br i1 %54, label %55, label %76

55:                                               ; preds = %45
  %56 = inttoptr i64 %53 to i8*
  %57 = lshr i64 %47, 6
  %58 = bitcast i64* %51 to i8*
  %59 = shl nuw nsw i64 %57, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 %59, i1 false) #10, !noalias !29
  %60 = and i64 %47, 63
  %61 = inttoptr i64 %53 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %57
  %63 = ptrtoint i64* %62 to i64
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds i64, i64* %51, i64 %57
  %67 = sub nuw nsw i64 64, %60
  %68 = lshr i64 -1, %67
  %69 = load i64, i64* %66, align 8, !noalias !32
  %70 = and i64 %69, %68
  %71 = xor i64 %68, -1
  %72 = load i64, i64* %62, align 8, !noalias !29
  %73 = and i64 %72, %71
  %74 = or i64 %73, %70
  store i64 %74, i64* %62, align 8, !noalias !29
  %75 = trunc i64 %60 to i32
  br label %76

76:                                               ; preds = %55, %45, %65
  %77 = phi i32 [ %75, %65 ], [ 0, %55 ], [ 0, %45 ]
  %78 = phi i64 [ %63, %65 ], [ %63, %55 ], [ %53, %45 ]
  %79 = bitcast %"class.std::__1::vector.20"* %4 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 16
  %81 = bitcast %"class.std::__1::vector.20"* %0 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = bitcast %"class.std::__1::vector.20"* %0 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8
  %84 = bitcast %"class.std::__1::vector.20"* %4 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %84, align 16
  %85 = load i64, i64* %30, align 16
  store i64 %85, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  br label %86

86:                                               ; preds = %76, %17
  %87 = phi i64 [ %78, %76 ], [ %24, %17 ]
  %88 = phi i32 [ %77, %76 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #10
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #10
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.20"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.20", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %63

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 2, i32 1, i32 0
  %13 = bitcast %"class.v8::internal::ZoneAllocator.24"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %16 to i64*
  %18 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 24, i1 false)
  store i64 %14, i64* %17, align 8
  %19 = icmp ugt i64 %1, 17179869120
  %20 = inttoptr i64 %14 to %"class.v8::internal::Zone"*
  br i1 %19, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::vector.20"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #11
  unreachable

23:                                               ; preds = %10
  %24 = add nsw i64 %1, -1
  %25 = lshr i64 %24, 6
  %26 = add nuw nsw i64 %25, 1
  %27 = shl nuw nsw i64 %26, 3
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %23
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 %27) #10
  br label %38

36:                                               ; preds = %23
  %37 = add i64 %29, %27
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0
  store i64* %40, i64** %41, align 16
  %42 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 1
  store i64 0, i64* %42, align 8
  store i64 %26, i64* %15, align 16
  %43 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !35
  %45 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %44, i64* %45, align 8, !alias.scope !35
  %46 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %46, align 8, !alias.scope !35
  %47 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !40
  %49 = inttoptr i64 %44 to i64*
  %50 = lshr i64 %48, 6
  %51 = getelementptr inbounds i64, i64* %49, i64 %50
  %52 = trunc i64 %48 to i32
  %53 = and i32 %52, 63
  %54 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %51, i64** %54, align 8, !alias.scope !43
  %55 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %53, i32* %55, align 8, !alias.scope !43
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.20"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %56 = load i64, i64* %43, align 8
  %57 = bitcast %"class.std::__1::vector.20"* %3 to i64*
  %58 = bitcast %"class.std::__1::vector.20"* %3 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16
  store i64 %56, i64* %57, align 16
  %60 = load i64, i64* %47, align 8
  %61 = bitcast %"class.std::__1::vector.20"* %0 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %61, align 8
  store i64 %60, i64* %42, align 8
  %62 = load i64, i64* %15, align 16
  store i64 %62, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  br label %63

63:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.20"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !46
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #10
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !49
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !49
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !49
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #10, !noalias !49
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !49
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !49
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !49
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !52
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !52
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !55
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !55
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !55
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !55
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !55
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !55
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #10
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Node"* dereferenceable(32)) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler14FunctionalListINS3_21LoopVariableOptimizer10ConstraintEEENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector.12"*, i64, %"class.v8::internal::compiler::FunctionalList"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.v8::internal::compiler::FunctionalList"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::FunctionalList"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %139, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.v8::internal::compiler::FunctionalList"*
  %15 = inttoptr i64 %9 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %14, i64 %1
  %17 = icmp eq i64 %1, 0
  br i1 %17, label %137, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::internal::compiler::FunctionalList"* %2 to i64*
  %20 = shl nsw i64 %1, 3
  %21 = add i64 %20, -8
  %22 = lshr exact i64 %21, 3
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp ult i64 %23, 4
  br i1 %24, label %25, label %47

25:                                               ; preds = %106, %47, %18
  %26 = phi %"class.v8::internal::compiler::FunctionalList"* [ %14, %47 ], [ %14, %18 ], [ %60, %106 ]
  %27 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %26 to i64
  %28 = add i64 %1, -1
  %29 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %14, i64 %28, i32 0
  %30 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %29 to i64
  %31 = sub i64 %30, %27
  %32 = lshr i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 7
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %25, %36
  %37 = phi %"class.v8::internal::compiler::FunctionalList"* [ %41, %36 ], [ %26, %25 ]
  %38 = phi i64 [ %42, %36 ], [ %34, %25 ]
  %39 = bitcast %"class.v8::internal::compiler::FunctionalList"* %37 to i64*
  %40 = load i64, i64* %19, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %37, i64 1
  %42 = add i64 %38, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %36, !llvm.loop !56

44:                                               ; preds = %36, %25
  %45 = phi %"class.v8::internal::compiler::FunctionalList"* [ %26, %25 ], [ %41, %36 ]
  %46 = icmp ult i64 %31, 56
  br i1 %46, label %108, label %110

47:                                               ; preds = %18
  %48 = shl nsw i64 %1, 3
  %49 = add i64 %48, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %14, i64 %51
  %53 = bitcast %"class.v8::internal::compiler::FunctionalList"* %2 to i8*
  %54 = getelementptr i8, i8* %53, i64 1
  %55 = icmp ugt i8* %54, %15
  %56 = icmp ugt %"class.v8::internal::compiler::FunctionalList"* %52, %2
  %57 = and i1 %55, %56
  br i1 %57, label %25, label %58

58:                                               ; preds = %47
  %59 = and i64 %23, 4611686018427387900
  %60 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %14, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %19, align 8, !alias.scope !57
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %19, align 8, !alias.scope !57
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %14, i64 %79
  %82 = bitcast %"class.v8::internal::compiler::FunctionalList"* %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !60, !noalias !57
  %83 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %81, i64 2
  %84 = bitcast %"class.v8::internal::compiler::FunctionalList"* %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !60, !noalias !57
  %85 = or i64 %79, 4
  %86 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %14, i64 %85
  %87 = bitcast %"class.v8::internal::compiler::FunctionalList"* %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !60, !noalias !57
  %88 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %86, i64 2
  %89 = bitcast %"class.v8::internal::compiler::FunctionalList"* %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !60, !noalias !57
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !62

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %14, i64 %94
  %98 = load i64, i64* %19, align 8, !alias.scope !57
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast %"class.v8::internal::compiler::FunctionalList"* %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !60, !noalias !57
  %104 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %97, i64 2
  %105 = bitcast %"class.v8::internal::compiler::FunctionalList"* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !60, !noalias !57
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %23, %59
  br i1 %107, label %108, label %25

108:                                              ; preds = %44, %110, %106
  %109 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %16 to i64
  br label %137

110:                                              ; preds = %44, %110
  %111 = phi %"class.v8::internal::compiler::FunctionalList"* [ %135, %110 ], [ %45, %44 ]
  %112 = bitcast %"class.v8::internal::compiler::FunctionalList"* %111 to i64*
  %113 = load i64, i64* %19, align 8
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 1
  %115 = bitcast %"class.v8::internal::compiler::FunctionalList"* %114 to i64*
  %116 = load i64, i64* %19, align 8
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 2
  %118 = bitcast %"class.v8::internal::compiler::FunctionalList"* %117 to i64*
  %119 = load i64, i64* %19, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 3
  %121 = bitcast %"class.v8::internal::compiler::FunctionalList"* %120 to i64*
  %122 = load i64, i64* %19, align 8
  store i64 %122, i64* %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 4
  %124 = bitcast %"class.v8::internal::compiler::FunctionalList"* %123 to i64*
  %125 = load i64, i64* %19, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 5
  %127 = bitcast %"class.v8::internal::compiler::FunctionalList"* %126 to i64*
  %128 = load i64, i64* %19, align 8
  store i64 %128, i64* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 6
  %130 = bitcast %"class.v8::internal::compiler::FunctionalList"* %129 to i64*
  %131 = load i64, i64* %19, align 8
  store i64 %131, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 7
  %133 = bitcast %"class.v8::internal::compiler::FunctionalList"* %132 to i64*
  %134 = load i64, i64* %19, align 8
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %111, i64 8
  %136 = icmp eq %"class.v8::internal::compiler::FunctionalList"* %135, %16
  br i1 %136, label %108, label %110, !llvm.loop !64

137:                                              ; preds = %13, %108
  %138 = phi i64 [ %109, %108 ], [ %9, %13 ]
  store i64 %138, i64* %8, align 8
  ret void

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %9, %141
  %143 = ashr exact i64 %142, 3
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 268435455
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #11
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %6, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 134217727
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %175, label %157

157:                                              ; preds = %148, %152
  %158 = phi i64 [ %155, %152 ], [ 268435455, %148 ]
  %159 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %160 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %159, align 8
  %161 = shl i64 %158, 3
  %162 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 3
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %165, %163
  %167 = icmp ugt i64 %161, %166
  br i1 %167, label %168, label %170, !prof !2

168:                                              ; preds = %157
  %169 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %160, i64 %161) #10
  br label %172

170:                                              ; preds = %157
  %171 = add i64 %163, %161
  store i64 %171, i64* %162, align 8
  br label %172

172:                                              ; preds = %170, %168
  %173 = phi i64 [ %169, %168 ], [ %163, %170 ]
  %174 = inttoptr i64 %173 to %"class.v8::internal::compiler::FunctionalList"*
  br label %175

175:                                              ; preds = %172, %152
  %176 = phi i64 [ %158, %172 ], [ 0, %152 ]
  %177 = phi %"class.v8::internal::compiler::FunctionalList"* [ %174, %172 ], [ null, %152 ]
  %178 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %177, i64 %143
  %179 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %178 to i64
  %180 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %177, i64 %176
  %181 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %178, i64 %1
  %182 = bitcast %"class.v8::internal::compiler::FunctionalList"* %2 to i64*
  %183 = shl nsw i64 %1, 3
  %184 = add i64 %183, -8
  %185 = lshr exact i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %201, label %189

189:                                              ; preds = %175, %189
  %190 = phi %"class.v8::internal::compiler::FunctionalList"* [ %195, %189 ], [ %178, %175 ]
  %191 = phi i64 [ %196, %189 ], [ %179, %175 ]
  %192 = phi i64 [ %197, %189 ], [ %187, %175 ]
  %193 = inttoptr i64 %191 to i64*
  %194 = load i64, i64* %182, align 8
  store i64 %194, i64* %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %190, i64 1
  %196 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %195 to i64
  %197 = add i64 %192, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !65

199:                                              ; preds = %189
  %200 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %195 to i64
  br label %201

201:                                              ; preds = %175, %199
  %202 = phi %"class.v8::internal::compiler::FunctionalList"* [ %178, %175 ], [ %195, %199 ]
  %203 = phi i64 [ %179, %175 ], [ %200, %199 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %234, label %205

205:                                              ; preds = %201, %205
  %206 = phi %"class.v8::internal::compiler::FunctionalList"* [ %231, %205 ], [ %202, %201 ]
  %207 = phi i64 [ %232, %205 ], [ %203, %201 ]
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %182, align 8
  store i64 %209, i64* %208, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 1
  %211 = bitcast %"class.v8::internal::compiler::FunctionalList"* %210 to i64*
  %212 = load i64, i64* %182, align 8
  store i64 %212, i64* %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 2
  %214 = bitcast %"class.v8::internal::compiler::FunctionalList"* %213 to i64*
  %215 = load i64, i64* %182, align 8
  store i64 %215, i64* %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 3
  %217 = bitcast %"class.v8::internal::compiler::FunctionalList"* %216 to i64*
  %218 = load i64, i64* %182, align 8
  store i64 %218, i64* %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 4
  %220 = bitcast %"class.v8::internal::compiler::FunctionalList"* %219 to i64*
  %221 = load i64, i64* %182, align 8
  store i64 %221, i64* %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 5
  %223 = bitcast %"class.v8::internal::compiler::FunctionalList"* %222 to i64*
  %224 = load i64, i64* %182, align 8
  store i64 %224, i64* %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 6
  %226 = bitcast %"class.v8::internal::compiler::FunctionalList"* %225 to i64*
  %227 = load i64, i64* %182, align 8
  store i64 %227, i64* %226, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 7
  %229 = bitcast %"class.v8::internal::compiler::FunctionalList"* %228 to i64*
  %230 = load i64, i64* %182, align 8
  store i64 %230, i64* %229, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %206, i64 8
  %232 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %231 to i64
  %233 = icmp eq %"class.v8::internal::compiler::FunctionalList"* %181, %231
  br i1 %233, label %234, label %205

234:                                              ; preds = %205, %201
  %235 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %180 to i64
  %236 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %181 to i64
  %237 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %238 = load %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"** %237, align 8
  %239 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %238 to i64
  %240 = load %"class.v8::internal::compiler::FunctionalList"*, %"class.v8::internal::compiler::FunctionalList"** %7, align 8
  %241 = icmp eq %"class.v8::internal::compiler::FunctionalList"* %240, %238
  br i1 %241, label %414, label %242

242:                                              ; preds = %234
  %243 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %240, i64 -1, i32 0
  %244 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %243 to i64
  %245 = sub i64 %244, %239
  %246 = lshr i64 %245, 3
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, 4
  br i1 %248, label %341, label %249

249:                                              ; preds = %242
  %250 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %240, i64 -1, i32 0
  %251 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %250 to i64
  %252 = sub i64 %251, %239
  %253 = lshr i64 %252, 3
  %254 = xor i64 %253, -1
  %255 = add nsw i64 %143, %254
  %256 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %177, i64 %255
  %257 = xor i64 %253, -1
  %258 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %240, i64 %257
  %259 = icmp ult %"class.v8::internal::compiler::FunctionalList"* %256, %240
  %260 = icmp ult %"class.v8::internal::compiler::FunctionalList"* %258, %178
  %261 = and i1 %259, %260
  br i1 %261, label %341, label %262

262:                                              ; preds = %249
  %263 = and i64 %247, 4611686018427387900
  %264 = sub nsw i64 0, %263
  %265 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %178, i64 %264
  %266 = sub nsw i64 0, %263
  %267 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %240, i64 %266
  %268 = add nsw i64 %263, -4
  %269 = lshr exact i64 %268, 2
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 1
  %272 = icmp eq i64 %268, 0
  br i1 %272, label %319, label %273

273:                                              ; preds = %262
  %274 = sub nuw nsw i64 %270, %271
  %275 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %178, i64 -1
  %276 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %240, i64 -1
  %277 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %178, i64 -1
  %278 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %240, i64 -1
  br label %279

279:                                              ; preds = %279, %273
  %280 = phi i64 [ 0, %273 ], [ %314, %279 ]
  %281 = phi i64 [ %274, %273 ], [ %315, %279 ]
  %282 = sub i64 0, %280
  %283 = sub i64 0, %280
  %284 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %275, i64 %282
  %285 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %276, i64 %283
  %286 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %285, i64 -1
  %287 = bitcast %"class.v8::internal::compiler::FunctionalList"* %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !66
  %289 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %285, i64 -2
  %290 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %289, i64 -1
  %291 = bitcast %"class.v8::internal::compiler::FunctionalList"* %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !66
  %293 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %284, i64 -1
  %294 = bitcast %"class.v8::internal::compiler::FunctionalList"* %293 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %294, align 8, !alias.scope !69, !noalias !66
  %295 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %284, i64 -2
  %296 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %295, i64 -1
  %297 = bitcast %"class.v8::internal::compiler::FunctionalList"* %296 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %297, align 8, !alias.scope !69, !noalias !66
  %298 = sub nuw nsw i64 -4, %280
  %299 = sub nuw nsw i64 -4, %280
  %300 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %277, i64 %298
  %301 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %278, i64 %299
  %302 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %301, i64 -1
  %303 = bitcast %"class.v8::internal::compiler::FunctionalList"* %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !66
  %305 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %301, i64 -2
  %306 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %305, i64 -1
  %307 = bitcast %"class.v8::internal::compiler::FunctionalList"* %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !66
  %309 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %300, i64 -1
  %310 = bitcast %"class.v8::internal::compiler::FunctionalList"* %309 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %310, align 8, !alias.scope !69, !noalias !66
  %311 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %300, i64 -2
  %312 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %311, i64 -1
  %313 = bitcast %"class.v8::internal::compiler::FunctionalList"* %312 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %313, align 8, !alias.scope !69, !noalias !66
  %314 = add i64 %280, 8
  %315 = add i64 %281, -2
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %279, !llvm.loop !71

317:                                              ; preds = %279
  %318 = sub nuw nsw i64 -8, %280
  br label %319

319:                                              ; preds = %317, %262
  %320 = phi i64 [ 0, %262 ], [ %318, %317 ]
  %321 = icmp eq i64 %271, 0
  br i1 %321, label %339, label %322

322:                                              ; preds = %319
  %323 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %178, i64 -1
  %324 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %240, i64 -1
  %325 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %323, i64 %320
  %326 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %324, i64 %320
  %327 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %326, i64 -1
  %328 = bitcast %"class.v8::internal::compiler::FunctionalList"* %327 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8, !alias.scope !66
  %330 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %326, i64 -2
  %331 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %330, i64 -1
  %332 = bitcast %"class.v8::internal::compiler::FunctionalList"* %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 8, !alias.scope !66
  %334 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %325, i64 -1
  %335 = bitcast %"class.v8::internal::compiler::FunctionalList"* %334 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %335, align 8, !alias.scope !69, !noalias !66
  %336 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %325, i64 -2
  %337 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %336, i64 -1
  %338 = bitcast %"class.v8::internal::compiler::FunctionalList"* %337 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %338, align 8, !alias.scope !69, !noalias !66
  br label %339

339:                                              ; preds = %319, %322
  %340 = icmp eq i64 %247, %263
  br i1 %340, label %411, label %341

341:                                              ; preds = %339, %249, %242
  %342 = phi %"class.v8::internal::compiler::FunctionalList"* [ %178, %249 ], [ %178, %242 ], [ %265, %339 ]
  %343 = phi %"class.v8::internal::compiler::FunctionalList"* [ %240, %249 ], [ %240, %242 ], [ %267, %339 ]
  %344 = getelementptr %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %343, i64 -1, i32 0
  %345 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::LoopVariableOptimizer::Constraint>::Cons"** %344 to i64
  %346 = sub i64 %345, %239
  %347 = lshr i64 %346, 3
  %348 = add nuw nsw i64 %347, 1
  %349 = and i64 %348, 7
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %362, label %351

351:                                              ; preds = %341, %351
  %352 = phi %"class.v8::internal::compiler::FunctionalList"* [ %355, %351 ], [ %342, %341 ]
  %353 = phi %"class.v8::internal::compiler::FunctionalList"* [ %356, %351 ], [ %343, %341 ]
  %354 = phi i64 [ %360, %351 ], [ %349, %341 ]
  %355 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %352, i64 -1
  %356 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %353, i64 -1
  %357 = bitcast %"class.v8::internal::compiler::FunctionalList"* %356 to i64*
  %358 = bitcast %"class.v8::internal::compiler::FunctionalList"* %355 to i64*
  %359 = load i64, i64* %357, align 8
  store i64 %359, i64* %358, align 8
  %360 = add i64 %354, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %351, !llvm.loop !72

362:                                              ; preds = %351, %341
  %363 = phi %"class.v8::internal::compiler::FunctionalList"* [ undef, %341 ], [ %355, %351 ]
  %364 = phi %"class.v8::internal::compiler::FunctionalList"* [ %342, %341 ], [ %355, %351 ]
  %365 = phi %"class.v8::internal::compiler::FunctionalList"* [ %343, %341 ], [ %356, %351 ]
  %366 = icmp ult i64 %346, 56
  br i1 %366, label %411, label %367

367:                                              ; preds = %362, %367
  %368 = phi %"class.v8::internal::compiler::FunctionalList"* [ %405, %367 ], [ %364, %362 ]
  %369 = phi %"class.v8::internal::compiler::FunctionalList"* [ %406, %367 ], [ %365, %362 ]
  %370 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -1
  %371 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -1
  %372 = bitcast %"class.v8::internal::compiler::FunctionalList"* %371 to i64*
  %373 = bitcast %"class.v8::internal::compiler::FunctionalList"* %370 to i64*
  %374 = load i64, i64* %372, align 8
  store i64 %374, i64* %373, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -2
  %376 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -2
  %377 = bitcast %"class.v8::internal::compiler::FunctionalList"* %376 to i64*
  %378 = bitcast %"class.v8::internal::compiler::FunctionalList"* %375 to i64*
  %379 = load i64, i64* %377, align 8
  store i64 %379, i64* %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -3
  %381 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -3
  %382 = bitcast %"class.v8::internal::compiler::FunctionalList"* %381 to i64*
  %383 = bitcast %"class.v8::internal::compiler::FunctionalList"* %380 to i64*
  %384 = load i64, i64* %382, align 8
  store i64 %384, i64* %383, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -4
  %386 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -4
  %387 = bitcast %"class.v8::internal::compiler::FunctionalList"* %386 to i64*
  %388 = bitcast %"class.v8::internal::compiler::FunctionalList"* %385 to i64*
  %389 = load i64, i64* %387, align 8
  store i64 %389, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -5
  %391 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -5
  %392 = bitcast %"class.v8::internal::compiler::FunctionalList"* %391 to i64*
  %393 = bitcast %"class.v8::internal::compiler::FunctionalList"* %390 to i64*
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -6
  %396 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -6
  %397 = bitcast %"class.v8::internal::compiler::FunctionalList"* %396 to i64*
  %398 = bitcast %"class.v8::internal::compiler::FunctionalList"* %395 to i64*
  %399 = load i64, i64* %397, align 8
  store i64 %399, i64* %398, align 8
  %400 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -7
  %401 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -7
  %402 = bitcast %"class.v8::internal::compiler::FunctionalList"* %401 to i64*
  %403 = bitcast %"class.v8::internal::compiler::FunctionalList"* %400 to i64*
  %404 = load i64, i64* %402, align 8
  store i64 %404, i64* %403, align 8
  %405 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %368, i64 -8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %369, i64 -8
  %407 = bitcast %"class.v8::internal::compiler::FunctionalList"* %406 to i64*
  %408 = bitcast %"class.v8::internal::compiler::FunctionalList"* %405 to i64*
  %409 = load i64, i64* %407, align 8
  store i64 %409, i64* %408, align 8
  %410 = icmp eq %"class.v8::internal::compiler::FunctionalList"* %406, %238
  br i1 %410, label %411, label %367, !llvm.loop !73

411:                                              ; preds = %362, %367, %339
  %412 = phi %"class.v8::internal::compiler::FunctionalList"* [ %265, %339 ], [ %363, %362 ], [ %405, %367 ]
  %413 = ptrtoint %"class.v8::internal::compiler::FunctionalList"* %412 to i64
  br label %414

414:                                              ; preds = %234, %411
  %415 = phi i64 [ %413, %411 ], [ %179, %234 ]
  store i64 %415, i64* %140, align 8
  store i64 %236, i64* %8, align 8
  store i64 %235, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler17InductionVariableEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler17InductionVariableEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!14 = distinct !{!14, !6}
!15 = distinct !{!15, !6}
!16 = distinct !{!16, !6}
!17 = distinct !{!17, !6}
!18 = distinct !{!18, !6}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!22 = distinct !{!22, !23, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!27 = distinct !{!27, !28, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!32 = !{!30, !33}
!33 = distinct !{!33, !34, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!38 = distinct !{!38, !39, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!52 = !{!50, !53}
!53 = distinct !{!53, !54, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!55 = !{!53}
!56 = distinct !{!56, !6}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !63}
!63 = !{!"llvm.loop.isvectorized", i32 1}
!64 = distinct !{!64, !63}
!65 = distinct !{!65, !6}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !63}
!72 = distinct !{!72, !6}
!73 = distinct !{!73, !63}
